<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 引入参数配置文件 -->
	<context:property-placeholder location="classpath*:/fft-client.properties"
		ignore-resource-not-found="true" ignore-unresolvable="true" />


	<!-- 避免IE执行AJAX时,返回JSON出现下载文件-->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 设置需要进行Spring注解扫描的类包  -->
	<context:component-scan base-package="com.froad.fft" />
	  
	<!-- 默认的注解映射的支持-->
	<mvc:annotation-driven />
	
	<!-- 拦截器   -->
    <mvc:interceptors>  
    	<mvc:interceptor>
			<mvc:mapping path="/member/**" />
			<bean id="memberInterceptor" class="com.froad.fft.interceptor.MemberInterceptor" />
		</mvc:interceptor>
    </mvc:interceptors>
	
	 <!-- 对静态资源文件的访问   -->  
    <mvc:default-servlet-handler/> 
	
	<!--  启动Spring MVC的注解功能，完成请求和注解POJO的映射  -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!--json转换器 -->
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	<!--通用视图解析器  
    <bean id="viewResolverJsp" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/"/>    
        <property name="suffix" value=".jsp"/>  
        <property name="viewClass">  
            <value>org.springframework.web.servlet.view.InternalResourceView</value>  
        </property>  
        <property name="order" value="1"/>  
    </bean>  
	-->
	
	<!-- FreeMarker视图解析 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="suffix" value="${template.suffix}" />
		<property name="order" value="0" />
	</bean>
	
	<!--  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>10485760</value><!-- 上传文件大小限制为10M，10*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<!-- 异常拦截，重定向到错误提示页面，隐藏报错信息，开发环境注释 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">    
             <props>    
                 <prop key="java.lang.Exception">common/error_500</prop>    
                 <prop key="java.lang.Throwable">common/warn_404</prop>
             </props>    
         </property>    
         <property name="statusCodes">    
             <props>    
                 <prop key="common/error_500">500</prop>    
                 <prop key="common/warn_404">404</prop>    
             </props>    
         </property>    
         	 <!--  设置日志输出级别，不定义则默认不输出警告等错误日志信息     -->
         <property name="warnLogCategory" value="WARN"></property>     
         	<!--  默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置      -->
         <property name="defaultErrorView" value="common/error_500"></property>     
         	<!-- 默认HTTP状态码    -->
         <property name="defaultStatusCode" value="500"></property>
	</bean>
	
</beans>
