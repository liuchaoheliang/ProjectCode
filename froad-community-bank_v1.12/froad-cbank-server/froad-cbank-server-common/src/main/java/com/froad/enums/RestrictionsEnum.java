/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.enums;

/**
 * 查询操作符
 */
public enum RestrictionsEnum  {
  /**
   * 等于
   */
  EQ(0),
  /**
   * 不等于
   */
  NE(1),
  /**
   * 大于
   */
  GT(2),
  /**
   * 大于等于
   */
  GTE(3),
  /**
   * 小于
   */
  LT(4),
  /**
   * 小于等于
   */
  LTE(5),
  /**
   * in
   */
  IN(6),
  /**
   * not in
   */
  NIN(7),
  /**
   * 左右模糊匹配
   */
  LIKE(8),
  /**
   * 左模糊匹配
   */
  LLIKE(9),
  /**
   * 右模糊匹配
   */
  RLIKE(10),
  /**
   * 判断属性是否为空,为空则返回true
   */
  ISNULL(11),
  /**
   * 与isNull相反
   */
  ISNOTNULL(12),
  /**
   * 是否存在
   */
  EXISTS(13);

  private final int value;

  private RestrictionsEnum(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static RestrictionsEnum findByValue(int value) { 
    switch (value) {
      case 0:
        return EQ;
      case 1:
        return NE;
      case 2:
        return GT;
      case 3:
        return GTE;
      case 4:
        return LT;
      case 5:
        return LTE;
      case 6:
        return IN;
      case 7:
        return NIN;
      case 8:
        return LIKE;
      case 9:
        return LLIKE;
      case 10:
        return RLIKE;
      case 11:
        return ISNULL;
      case 12:
        return ISNOTNULL;
      case 13:
        return EXISTS;
      default:
        return null;
    }
  }
}
