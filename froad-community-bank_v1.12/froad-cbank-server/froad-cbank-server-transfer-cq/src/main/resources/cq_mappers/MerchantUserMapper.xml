<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.froad.db.chongqing.mappers.MerchantUserMapper">

    <resultMap type="MerchantUser" id="merchantUserResultMap">
    	<!-- baseEntity prop -->
        <id property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
		<result property="clientId" column="client_id"/>
		<!-- baseEntity prop -->
		<result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="alias" column="alias"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="department" column="department"/>
    	<result property="isEnabled" column="is_Enabled"/>
    	<result property="isLocked" column="is_Locked"/>
    	<result property="loginFailureCount" column="login_Failure_Count"/>
    	<result property="lockedDate" column="locked_Date"/>
    	<result property="loginDate" column="login_Date"/>
    	<result property="loginIp" column="login_Ip"/>
    	<result property="isDelete" column="is_Delete"/>
    	<result property="isFirstLogin" column="is_First_Login"/>
    	<result property="merchantOutletId" column="outlet_id"/>
    	<result property="merchant.name" column="merchant_name" />
		<result property="merchant.id" column="merchant_id" />
		<result property="merchant.bankOrgName" column="bank_Org_Name" />
		<result property="merchant.fullName" column="full_name" />
		
		<result property="roleName" column="role_name"/>
		
    	<collection property="userRoleLists" column="id" ofType="MerchantRole"
			select="com.froad.db.chongqing.mappers.MerchantRoleMapper.selectByMerchantUserId">
		</collection>
    </resultMap>
    
    

    <!-- 基础sql 数据新增 必须指明数据列  -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into cb_merchant_user
		(create_time, update_time, client_id, username, password, alias, email, phone, department, is_enabled, is_locked, 
		login_failure_count, locked_date, login_date, login_ip, is_delete, is_first_login)
		values
		(
			#{createTime},#{updateTime},#{clientId},#{username},#{password}, #{alias}, #{email}, #{phone}, #{department},
			#{isEnabled}, #{isLocked}, #{loginFailureCount}, #{lockedDate}, #{loginDate}, #{loginIp}, #{isDelete}, #{isFirstLogin}
		)
	</insert>
	
	<!-- 基础sql 通过分页查询 -->
	<select id="selectOfPage" parameterType="com.froad.cbank.persistent.entity.base.PageEntity" resultMap="merchantUserResultMap">
		select mu.*,
			   m.id          AS merchant_id, 
		       m.NAME        AS merchant_name,
		       m.bank_Org_Name AS bank_Org_Name,
		       m.full_name AS full_name
		 from cb_merchant_user mu 
		 left join cb_merchant_group_user mg 
		      on mg.merchant_user_id = mu.id 
         left join cb_merchant m 
		      on m.id = mg.merchant_id
		      
		   <if test="condition.merchantGroupUser != null">
				<if test="condition.merchantRoleId == null">
					inner join
					 (select mr.*,mur.merchant_user_id 
					  from 
					   cb_merchant_role mr 
					   left join cb_merchant_user_role mur on mr.id= mur.merchant_role_id 
					  <if test="condition.roleValue == 'Role_Administrators'">
					  where mr.value = 'Role_Outlet_Admin' or mr.value = 'Role_Outlet_Operator'
					  </if>
					  <if test="condition.roleValue == 'Role_Outlet_Admin'">
					  where mr.value = 'Role_Outlet_Operator'
					  </if>
					) role on mu.id = role.merchant_user_id
				</if>
			
		</if>      
		<where>
			<if test="condition != null">
				<if test="condition.merchantRoleId != null">
					and mu.id in (select merchant_user_id from cb_merchant_user_role where merchant_role_id = #{condition.merchantRoleId})
				</if>
				<if test="condition.username != null">
					and mu.username like CONCAT('%',#{condition.username},'%' )
				</if>
				<if test="condition.email != null">
					and mu.email = #{condition.email}
				</if>
				<if test="condition.phone != null">
					and mu.phone = #{condition.phone}
				</if>
				<if test="condition.isEnabled != null">
					and mu.is_Enabled = #{condition.isEnabled}
				</if>
				<if test="condition.isLocked != null">
					and mu.is_Locked = #{condition.isLocked}
				</if>
				<if test="condition.isLocked != null">
					and mu.is_Locked = #{condition.isLocked}
				</if>
				<if test="condition.isDelete != null">
					and mu.is_Delete = #{condition.isDelete}
				</if>
				<if test="condition.clientId != null">
					and mu.client_id = #{condition.clientId}
				</if>
				<if test="condition.merchant !=null">
					<if test="condition.merchant.name !=null">
						and m.name like CONCAT('%',#{condition.merchant.name},'%' ) 
					</if>
					<if test="condition.merchant.id !=null">
						and m.id = #{condition.merchant.id}
					</if>
					<if test="condition.merchant.interbankAgency !=null">
						and m.interbank_agency = #{condition.merchant.interbankAgency}
					</if>
					<if test="condition.merchant.travelAgency !=null">
						and m.travel_agency = #{condition.merchant.travelAgency}
					</if>
					<if test="condition.merchant.latticePoint !=null">
						and m.lattice_point = #{condition.merchant.latticePoint}
					</if>
				</if>
				<if test="condition.merchantGroupUser">
					<if test="condition.merchantGroupUser.merchantId !=null">
						and mg.merchant_id = #{condition.merchantGroupUser.merchantId}
					</if>
					<if test="condition.merchantGroupUser.merchantOutletId !=null">
						and mg.merchant_outlet_id = #{condition.merchantGroupUser.merchantOutletId}
					</if>
					<if test="condition.merchantGroupUser.merchantUserId !=null">
						and mg.merchant_user_id = #{condition.merchantGroupUser.merchantUserId}
					</if>
				</if>
			</if>
		</where>
		order by mu.id desc
	</select>
	
	<select id="selectMerchantUserOfPageByCondition" parameterType="com.froad.cbank.persistent.entity.base.PageEntity" resultMap="merchantUserResultMap">
select 
 mu.*
 ,role.name role_name
from 
 cb_merchant_user mu 
 left join 
 (select mr.*,mur.merchant_user_id 
  from 
   cb_merchant_role mr 
   left join cb_merchant_user_role mur on mr.id= mur.merchant_role_id 
  <if test="condition.roleValue == 'Role_Administrators'">
  where mr.value = 'Role_Outlet_Admin' or mr.value = 'Role_Outlet_Operator'
  </if>
  <if test="condition.roleValue == 'Role_Outlet_Admin'">
  where mr.value = 'Role_Outlet_Operator'
  </if>
) role on mu.id = role.merchant_user_id
where mu.id in
(select merchant_user_id from cb_merchant_group_user 
where  merchant_id = #{condition.merchantId} 
  <if test="condition.roleValue == 'Role_Outlet_Admin'">
  	 and merchant_outlet_id = #{condition.merchantOutletId} 
  </if>
)
	 <if test="condition.isDelete != null">
		and mu.is_Delete = #{condition.isDelete}
	</if>
	<if test="condition.username != null">
		and mu.username like CONCAT('%',#{condition.username},'%' )
		
	</if>
	
  and role.id is not null
	</select>
	
	<!-- 基础sql 通过主键查询 -->
	<select id="selectById" parameterType="java.lang.Long" resultMap="merchantUserResultMap">
		select mu.*,
			   m.id          AS merchant_id, 
		       m.NAME        AS merchant_name,
		       m.bank_Org_Name AS bank_Org_Name
		 from cb_merchant_user mu 
		 left join cb_merchant_group_user mg 
		      on mg.merchant_user_id = mu.id 
         left join cb_merchant m 
		      on m.id = mg.merchant_id where mu.id = #{id}
	</select>
	
	<!-- 通过主键更新数据 -->
	<update id="updateById" parameterType="java.lang.Boolean" >
		update cb_merchant_user 
		<set >
	      <if test="updateTime != null" >
	        update_time = #{updateTime},
	      </if>
	      <if test="username != null" >
	        username = #{username},
	      </if>
	      <if test="password != null" >
	        password = #{password},
	      </if>
	      <if test="alias != null" >
	        alias = #{alias},
	      </if>
	      <if test="email != null" >
	        email = #{email},
	      </if>
	      <if test="phone != null" >
	        phone = #{phone},
	      </if>
	      <if test="department != null" >
	        department = #{department},
	      </if>
	      <if test="isEnabled != null" >
	        is_enabled = #{isEnabled},
	      </if>
	      <if test="isLocked != null" >
	        is_locked = #{isLocked},
	      </if>
	      <if test="loginFailureCount != null" >
	        login_failure_count = #{loginFailureCount},
	      </if>
	      <if test="lockedDate != null" >
	        locked_date = #{lockedDate},
	      </if>
	      <if test="loginDate != null" >
	        login_date = #{loginDate},
	      </if>
	      <if test="loginIp != null" >
	        login_ip = #{loginIp},
	      </if>
	      <if test="isDelete != null" >
	        is_delete = #{isDelete},
	      </if>
	      <if test="isFirstLogin != null" >
	        is_first_login = #{isFirstLogin},
	      </if>
	    </set>
		where id = #{id}
	</update>
	
	<select id="selectByCondition" resultMap="merchantUserResultMap">
		select mu.*,
			   m.id          AS merchant_id, 
			   mg.merchant_outlet_id AS outlet_id, 
		       m.NAME        AS merchant_name,
		       m.bank_Org_Name AS bank_Org_Name
		 from cb_merchant_user mu 
		 left join cb_merchant_group_user mg 
		      on mg.merchant_user_id = mu.id 
         left join cb_merchant m 
		      on m.id = mg.merchant_id where mu.is_delete = false

	</select>
	
	
	<select id="selectByUserName" resultMap="merchantUserResultMap">
		select mu.*,
			   m.id          AS merchant_id, 
		       m.NAME        AS merchant_name,
		       m.bank_Org_Name AS bank_Org_Name
		 from cb_merchant_user mu 
		 left join cb_merchant_group_user mg 
		      on mg.merchant_user_id = mu.id 
         left join cb_merchant m 
		      on m.id = mg.merchant_id
		 where mu.client_id=#{clientId} and mu.username = #{userName}
	</select>
 <select id="selectMerchantUserById" parameterType="java.lang.Long" resultMap="merchantUserResultMap">
    
    SELECT * FROM cb_merchant_user WHERE id=#{id}
    
    </select>
</mapper>