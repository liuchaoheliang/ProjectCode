/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.coremodule;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 报表信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-12-25")
public class ReportRespVo implements org.apache.thrift.TBase<ReportRespVo, ReportRespVo._Fields>, java.io.Serializable, Cloneable, Comparable<ReportRespVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReportRespVo");

  private static final org.apache.thrift.protocol.TField BASE_RESP_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("baseRespVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField AMOUNT_LAT_FIELD_DESC = new org.apache.thrift.protocol.TField("amountLat", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField ORDER_LAT_FIELD_DESC = new org.apache.thrift.protocol.TField("orderLat", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField MERCHANT_INFO_RESP_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantInfoRespVo", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField MEMBER_LAT_FIELD_DESC = new org.apache.thrift.protocol.TField("memberLat", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField PRODUCT_INFO_RESP_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("productInfoRespVo", org.apache.thrift.protocol.TType.STRUCT, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ReportRespVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ReportRespVoTupleSchemeFactory());
  }

  /**
   * 报表基础返回信息
   */
  public ReportBaseRespVo baseRespVo; // required
  /**
   * 金额指标信息
   */
  public ReportAmountQuotaVo amountLat; // required
  /**
   * 订单指标信息
   */
  public ReportOrderQuotaVo orderLat; // required
  /**
   * 商户指标信息
   */
  public MerchantInfoRespVo merchantInfoRespVo; // required
  /**
   * 用户指标信息
   */
  public ReportMemberQuotaVo memberLat; // required
  /**
   * 商品指标信息
   */
  public ProductInfoRespVo productInfoRespVo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 报表基础返回信息
     */
    BASE_RESP_VO((short)1, "baseRespVo"),
    /**
     * 金额指标信息
     */
    AMOUNT_LAT((short)2, "amountLat"),
    /**
     * 订单指标信息
     */
    ORDER_LAT((short)3, "orderLat"),
    /**
     * 商户指标信息
     */
    MERCHANT_INFO_RESP_VO((short)4, "merchantInfoRespVo"),
    /**
     * 用户指标信息
     */
    MEMBER_LAT((short)5, "memberLat"),
    /**
     * 商品指标信息
     */
    PRODUCT_INFO_RESP_VO((short)6, "productInfoRespVo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BASE_RESP_VO
          return BASE_RESP_VO;
        case 2: // AMOUNT_LAT
          return AMOUNT_LAT;
        case 3: // ORDER_LAT
          return ORDER_LAT;
        case 4: // MERCHANT_INFO_RESP_VO
          return MERCHANT_INFO_RESP_VO;
        case 5: // MEMBER_LAT
          return MEMBER_LAT;
        case 6: // PRODUCT_INFO_RESP_VO
          return PRODUCT_INFO_RESP_VO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BASE_RESP_VO, new org.apache.thrift.meta_data.FieldMetaData("baseRespVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ReportBaseRespVo.class)));
    tmpMap.put(_Fields.AMOUNT_LAT, new org.apache.thrift.meta_data.FieldMetaData("amountLat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ReportAmountQuotaVo.class)));
    tmpMap.put(_Fields.ORDER_LAT, new org.apache.thrift.meta_data.FieldMetaData("orderLat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ReportOrderQuotaVo.class)));
    tmpMap.put(_Fields.MERCHANT_INFO_RESP_VO, new org.apache.thrift.meta_data.FieldMetaData("merchantInfoRespVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MerchantInfoRespVo.class)));
    tmpMap.put(_Fields.MEMBER_LAT, new org.apache.thrift.meta_data.FieldMetaData("memberLat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ReportMemberQuotaVo.class)));
    tmpMap.put(_Fields.PRODUCT_INFO_RESP_VO, new org.apache.thrift.meta_data.FieldMetaData("productInfoRespVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProductInfoRespVo.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReportRespVo.class, metaDataMap);
  }

  public ReportRespVo() {
  }

  public ReportRespVo(
    ReportBaseRespVo baseRespVo,
    ReportAmountQuotaVo amountLat,
    ReportOrderQuotaVo orderLat,
    MerchantInfoRespVo merchantInfoRespVo,
    ReportMemberQuotaVo memberLat,
    ProductInfoRespVo productInfoRespVo)
  {
    this();
    this.baseRespVo = baseRespVo;
    this.amountLat = amountLat;
    this.orderLat = orderLat;
    this.merchantInfoRespVo = merchantInfoRespVo;
    this.memberLat = memberLat;
    this.productInfoRespVo = productInfoRespVo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReportRespVo(ReportRespVo other) {
    if (other.isSetBaseRespVo()) {
      this.baseRespVo = new ReportBaseRespVo(other.baseRespVo);
    }
    if (other.isSetAmountLat()) {
      this.amountLat = new ReportAmountQuotaVo(other.amountLat);
    }
    if (other.isSetOrderLat()) {
      this.orderLat = new ReportOrderQuotaVo(other.orderLat);
    }
    if (other.isSetMerchantInfoRespVo()) {
      this.merchantInfoRespVo = new MerchantInfoRespVo(other.merchantInfoRespVo);
    }
    if (other.isSetMemberLat()) {
      this.memberLat = new ReportMemberQuotaVo(other.memberLat);
    }
    if (other.isSetProductInfoRespVo()) {
      this.productInfoRespVo = new ProductInfoRespVo(other.productInfoRespVo);
    }
  }

  public ReportRespVo deepCopy() {
    return new ReportRespVo(this);
  }

  @Override
  public void clear() {
    this.baseRespVo = null;
    this.amountLat = null;
    this.orderLat = null;
    this.merchantInfoRespVo = null;
    this.memberLat = null;
    this.productInfoRespVo = null;
  }

  /**
   * 报表基础返回信息
   */
  public ReportBaseRespVo getBaseRespVo() {
    return this.baseRespVo;
  }

  /**
   * 报表基础返回信息
   */
  public ReportRespVo setBaseRespVo(ReportBaseRespVo baseRespVo) {
    this.baseRespVo = baseRespVo;
    return this;
  }

  public void unsetBaseRespVo() {
    this.baseRespVo = null;
  }

  /** Returns true if field baseRespVo is set (has been assigned a value) and false otherwise */
  public boolean isSetBaseRespVo() {
    return this.baseRespVo != null;
  }

  public void setBaseRespVoIsSet(boolean value) {
    if (!value) {
      this.baseRespVo = null;
    }
  }

  /**
   * 金额指标信息
   */
  public ReportAmountQuotaVo getAmountLat() {
    return this.amountLat;
  }

  /**
   * 金额指标信息
   */
  public ReportRespVo setAmountLat(ReportAmountQuotaVo amountLat) {
    this.amountLat = amountLat;
    return this;
  }

  public void unsetAmountLat() {
    this.amountLat = null;
  }

  /** Returns true if field amountLat is set (has been assigned a value) and false otherwise */
  public boolean isSetAmountLat() {
    return this.amountLat != null;
  }

  public void setAmountLatIsSet(boolean value) {
    if (!value) {
      this.amountLat = null;
    }
  }

  /**
   * 订单指标信息
   */
  public ReportOrderQuotaVo getOrderLat() {
    return this.orderLat;
  }

  /**
   * 订单指标信息
   */
  public ReportRespVo setOrderLat(ReportOrderQuotaVo orderLat) {
    this.orderLat = orderLat;
    return this;
  }

  public void unsetOrderLat() {
    this.orderLat = null;
  }

  /** Returns true if field orderLat is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderLat() {
    return this.orderLat != null;
  }

  public void setOrderLatIsSet(boolean value) {
    if (!value) {
      this.orderLat = null;
    }
  }

  /**
   * 商户指标信息
   */
  public MerchantInfoRespVo getMerchantInfoRespVo() {
    return this.merchantInfoRespVo;
  }

  /**
   * 商户指标信息
   */
  public ReportRespVo setMerchantInfoRespVo(MerchantInfoRespVo merchantInfoRespVo) {
    this.merchantInfoRespVo = merchantInfoRespVo;
    return this;
  }

  public void unsetMerchantInfoRespVo() {
    this.merchantInfoRespVo = null;
  }

  /** Returns true if field merchantInfoRespVo is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantInfoRespVo() {
    return this.merchantInfoRespVo != null;
  }

  public void setMerchantInfoRespVoIsSet(boolean value) {
    if (!value) {
      this.merchantInfoRespVo = null;
    }
  }

  /**
   * 用户指标信息
   */
  public ReportMemberQuotaVo getMemberLat() {
    return this.memberLat;
  }

  /**
   * 用户指标信息
   */
  public ReportRespVo setMemberLat(ReportMemberQuotaVo memberLat) {
    this.memberLat = memberLat;
    return this;
  }

  public void unsetMemberLat() {
    this.memberLat = null;
  }

  /** Returns true if field memberLat is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberLat() {
    return this.memberLat != null;
  }

  public void setMemberLatIsSet(boolean value) {
    if (!value) {
      this.memberLat = null;
    }
  }

  /**
   * 商品指标信息
   */
  public ProductInfoRespVo getProductInfoRespVo() {
    return this.productInfoRespVo;
  }

  /**
   * 商品指标信息
   */
  public ReportRespVo setProductInfoRespVo(ProductInfoRespVo productInfoRespVo) {
    this.productInfoRespVo = productInfoRespVo;
    return this;
  }

  public void unsetProductInfoRespVo() {
    this.productInfoRespVo = null;
  }

  /** Returns true if field productInfoRespVo is set (has been assigned a value) and false otherwise */
  public boolean isSetProductInfoRespVo() {
    return this.productInfoRespVo != null;
  }

  public void setProductInfoRespVoIsSet(boolean value) {
    if (!value) {
      this.productInfoRespVo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case BASE_RESP_VO:
      if (value == null) {
        unsetBaseRespVo();
      } else {
        setBaseRespVo((ReportBaseRespVo)value);
      }
      break;

    case AMOUNT_LAT:
      if (value == null) {
        unsetAmountLat();
      } else {
        setAmountLat((ReportAmountQuotaVo)value);
      }
      break;

    case ORDER_LAT:
      if (value == null) {
        unsetOrderLat();
      } else {
        setOrderLat((ReportOrderQuotaVo)value);
      }
      break;

    case MERCHANT_INFO_RESP_VO:
      if (value == null) {
        unsetMerchantInfoRespVo();
      } else {
        setMerchantInfoRespVo((MerchantInfoRespVo)value);
      }
      break;

    case MEMBER_LAT:
      if (value == null) {
        unsetMemberLat();
      } else {
        setMemberLat((ReportMemberQuotaVo)value);
      }
      break;

    case PRODUCT_INFO_RESP_VO:
      if (value == null) {
        unsetProductInfoRespVo();
      } else {
        setProductInfoRespVo((ProductInfoRespVo)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case BASE_RESP_VO:
      return getBaseRespVo();

    case AMOUNT_LAT:
      return getAmountLat();

    case ORDER_LAT:
      return getOrderLat();

    case MERCHANT_INFO_RESP_VO:
      return getMerchantInfoRespVo();

    case MEMBER_LAT:
      return getMemberLat();

    case PRODUCT_INFO_RESP_VO:
      return getProductInfoRespVo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case BASE_RESP_VO:
      return isSetBaseRespVo();
    case AMOUNT_LAT:
      return isSetAmountLat();
    case ORDER_LAT:
      return isSetOrderLat();
    case MERCHANT_INFO_RESP_VO:
      return isSetMerchantInfoRespVo();
    case MEMBER_LAT:
      return isSetMemberLat();
    case PRODUCT_INFO_RESP_VO:
      return isSetProductInfoRespVo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ReportRespVo)
      return this.equals((ReportRespVo)that);
    return false;
  }

  public boolean equals(ReportRespVo that) {
    if (that == null)
      return false;

    boolean this_present_baseRespVo = true && this.isSetBaseRespVo();
    boolean that_present_baseRespVo = true && that.isSetBaseRespVo();
    if (this_present_baseRespVo || that_present_baseRespVo) {
      if (!(this_present_baseRespVo && that_present_baseRespVo))
        return false;
      if (!this.baseRespVo.equals(that.baseRespVo))
        return false;
    }

    boolean this_present_amountLat = true && this.isSetAmountLat();
    boolean that_present_amountLat = true && that.isSetAmountLat();
    if (this_present_amountLat || that_present_amountLat) {
      if (!(this_present_amountLat && that_present_amountLat))
        return false;
      if (!this.amountLat.equals(that.amountLat))
        return false;
    }

    boolean this_present_orderLat = true && this.isSetOrderLat();
    boolean that_present_orderLat = true && that.isSetOrderLat();
    if (this_present_orderLat || that_present_orderLat) {
      if (!(this_present_orderLat && that_present_orderLat))
        return false;
      if (!this.orderLat.equals(that.orderLat))
        return false;
    }

    boolean this_present_merchantInfoRespVo = true && this.isSetMerchantInfoRespVo();
    boolean that_present_merchantInfoRespVo = true && that.isSetMerchantInfoRespVo();
    if (this_present_merchantInfoRespVo || that_present_merchantInfoRespVo) {
      if (!(this_present_merchantInfoRespVo && that_present_merchantInfoRespVo))
        return false;
      if (!this.merchantInfoRespVo.equals(that.merchantInfoRespVo))
        return false;
    }

    boolean this_present_memberLat = true && this.isSetMemberLat();
    boolean that_present_memberLat = true && that.isSetMemberLat();
    if (this_present_memberLat || that_present_memberLat) {
      if (!(this_present_memberLat && that_present_memberLat))
        return false;
      if (!this.memberLat.equals(that.memberLat))
        return false;
    }

    boolean this_present_productInfoRespVo = true && this.isSetProductInfoRespVo();
    boolean that_present_productInfoRespVo = true && that.isSetProductInfoRespVo();
    if (this_present_productInfoRespVo || that_present_productInfoRespVo) {
      if (!(this_present_productInfoRespVo && that_present_productInfoRespVo))
        return false;
      if (!this.productInfoRespVo.equals(that.productInfoRespVo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_baseRespVo = true && (isSetBaseRespVo());
    list.add(present_baseRespVo);
    if (present_baseRespVo)
      list.add(baseRespVo);

    boolean present_amountLat = true && (isSetAmountLat());
    list.add(present_amountLat);
    if (present_amountLat)
      list.add(amountLat);

    boolean present_orderLat = true && (isSetOrderLat());
    list.add(present_orderLat);
    if (present_orderLat)
      list.add(orderLat);

    boolean present_merchantInfoRespVo = true && (isSetMerchantInfoRespVo());
    list.add(present_merchantInfoRespVo);
    if (present_merchantInfoRespVo)
      list.add(merchantInfoRespVo);

    boolean present_memberLat = true && (isSetMemberLat());
    list.add(present_memberLat);
    if (present_memberLat)
      list.add(memberLat);

    boolean present_productInfoRespVo = true && (isSetProductInfoRespVo());
    list.add(present_productInfoRespVo);
    if (present_productInfoRespVo)
      list.add(productInfoRespVo);

    return list.hashCode();
  }

  @Override
  public int compareTo(ReportRespVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetBaseRespVo()).compareTo(other.isSetBaseRespVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBaseRespVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.baseRespVo, other.baseRespVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAmountLat()).compareTo(other.isSetAmountLat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAmountLat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.amountLat, other.amountLat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderLat()).compareTo(other.isSetOrderLat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderLat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderLat, other.orderLat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantInfoRespVo()).compareTo(other.isSetMerchantInfoRespVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantInfoRespVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantInfoRespVo, other.merchantInfoRespVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberLat()).compareTo(other.isSetMemberLat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberLat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberLat, other.memberLat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductInfoRespVo()).compareTo(other.isSetProductInfoRespVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductInfoRespVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productInfoRespVo, other.productInfoRespVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ReportRespVo(");
    boolean first = true;

    sb.append("baseRespVo:");
    if (this.baseRespVo == null) {
      sb.append("null");
    } else {
      sb.append(this.baseRespVo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("amountLat:");
    if (this.amountLat == null) {
      sb.append("null");
    } else {
      sb.append(this.amountLat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderLat:");
    if (this.orderLat == null) {
      sb.append("null");
    } else {
      sb.append(this.orderLat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantInfoRespVo:");
    if (this.merchantInfoRespVo == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantInfoRespVo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberLat:");
    if (this.memberLat == null) {
      sb.append("null");
    } else {
      sb.append(this.memberLat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productInfoRespVo:");
    if (this.productInfoRespVo == null) {
      sb.append("null");
    } else {
      sb.append(this.productInfoRespVo);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (baseRespVo != null) {
      baseRespVo.validate();
    }
    if (amountLat != null) {
      amountLat.validate();
    }
    if (orderLat != null) {
      orderLat.validate();
    }
    if (merchantInfoRespVo != null) {
      merchantInfoRespVo.validate();
    }
    if (memberLat != null) {
      memberLat.validate();
    }
    if (productInfoRespVo != null) {
      productInfoRespVo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReportRespVoStandardSchemeFactory implements SchemeFactory {
    public ReportRespVoStandardScheme getScheme() {
      return new ReportRespVoStandardScheme();
    }
  }

  private static class ReportRespVoStandardScheme extends StandardScheme<ReportRespVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReportRespVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BASE_RESP_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.baseRespVo = new ReportBaseRespVo();
              struct.baseRespVo.read(iprot);
              struct.setBaseRespVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AMOUNT_LAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.amountLat = new ReportAmountQuotaVo();
              struct.amountLat.read(iprot);
              struct.setAmountLatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORDER_LAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.orderLat = new ReportOrderQuotaVo();
              struct.orderLat.read(iprot);
              struct.setOrderLatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MERCHANT_INFO_RESP_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.merchantInfoRespVo = new MerchantInfoRespVo();
              struct.merchantInfoRespVo.read(iprot);
              struct.setMerchantInfoRespVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MEMBER_LAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.memberLat = new ReportMemberQuotaVo();
              struct.memberLat.read(iprot);
              struct.setMemberLatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PRODUCT_INFO_RESP_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.productInfoRespVo = new ProductInfoRespVo();
              struct.productInfoRespVo.read(iprot);
              struct.setProductInfoRespVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReportRespVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.baseRespVo != null) {
        oprot.writeFieldBegin(BASE_RESP_VO_FIELD_DESC);
        struct.baseRespVo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.amountLat != null) {
        oprot.writeFieldBegin(AMOUNT_LAT_FIELD_DESC);
        struct.amountLat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.orderLat != null) {
        oprot.writeFieldBegin(ORDER_LAT_FIELD_DESC);
        struct.orderLat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.merchantInfoRespVo != null) {
        oprot.writeFieldBegin(MERCHANT_INFO_RESP_VO_FIELD_DESC);
        struct.merchantInfoRespVo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.memberLat != null) {
        oprot.writeFieldBegin(MEMBER_LAT_FIELD_DESC);
        struct.memberLat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.productInfoRespVo != null) {
        oprot.writeFieldBegin(PRODUCT_INFO_RESP_VO_FIELD_DESC);
        struct.productInfoRespVo.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReportRespVoTupleSchemeFactory implements SchemeFactory {
    public ReportRespVoTupleScheme getScheme() {
      return new ReportRespVoTupleScheme();
    }
  }

  private static class ReportRespVoTupleScheme extends TupleScheme<ReportRespVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReportRespVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetBaseRespVo()) {
        optionals.set(0);
      }
      if (struct.isSetAmountLat()) {
        optionals.set(1);
      }
      if (struct.isSetOrderLat()) {
        optionals.set(2);
      }
      if (struct.isSetMerchantInfoRespVo()) {
        optionals.set(3);
      }
      if (struct.isSetMemberLat()) {
        optionals.set(4);
      }
      if (struct.isSetProductInfoRespVo()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetBaseRespVo()) {
        struct.baseRespVo.write(oprot);
      }
      if (struct.isSetAmountLat()) {
        struct.amountLat.write(oprot);
      }
      if (struct.isSetOrderLat()) {
        struct.orderLat.write(oprot);
      }
      if (struct.isSetMerchantInfoRespVo()) {
        struct.merchantInfoRespVo.write(oprot);
      }
      if (struct.isSetMemberLat()) {
        struct.memberLat.write(oprot);
      }
      if (struct.isSetProductInfoRespVo()) {
        struct.productInfoRespVo.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReportRespVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.baseRespVo = new ReportBaseRespVo();
        struct.baseRespVo.read(iprot);
        struct.setBaseRespVoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.amountLat = new ReportAmountQuotaVo();
        struct.amountLat.read(iprot);
        struct.setAmountLatIsSet(true);
      }
      if (incoming.get(2)) {
        struct.orderLat = new ReportOrderQuotaVo();
        struct.orderLat.read(iprot);
        struct.setOrderLatIsSet(true);
      }
      if (incoming.get(3)) {
        struct.merchantInfoRespVo = new MerchantInfoRespVo();
        struct.merchantInfoRespVo.read(iprot);
        struct.setMerchantInfoRespVoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.memberLat = new ReportMemberQuotaVo();
        struct.memberLat.read(iprot);
        struct.setMemberLatIsSet(true);
      }
      if (incoming.get(5)) {
        struct.productInfoRespVo = new ProductInfoRespVo();
        struct.productInfoRespVo.read(iprot);
        struct.setProductInfoRespVoIsSet(true);
      }
    }
  }

}

