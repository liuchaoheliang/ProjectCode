/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-12-25")
public class ReportService {

  /**
   * 指标
   */
  public interface Iface extends com.froad.thrift.monitor.service.BizMonitorService.Iface {

    /**
     * 
     * getRespPage:获取报表信息分页
     * 
     * @author chenmingcan@froad.com.cn 2015年12月2日 下午4:41:05
     * @param pageVo 分页请求信息
     * @param reportReqVo 报表请求参数
     *            
     * 
     * 
     * @param pageVo
     * @param reportReqVo
     */
    public com.froad.thrift.vo.coremodule.ReportRespPageVo getRespPage(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo) throws org.apache.thrift.TException;

    /**
     * 
     * getReportByCondition:列表条件查询导出
     * 
     * @author chenmingcan@froad.com.cn 2015年12月5日 下午4:41:05
     * @param pageVo 分页请求信息
     * @param reportReqVo 报表请求参数
     *            
     * 
     * 
     * @param reportReqVo
     */
    public com.froad.thrift.vo.ExportResultRes getReportByCondition(com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo) throws org.apache.thrift.TException;

    /**
     * 
     * getDefineTaskVo:获取任务列表信息分页
     * 
     * @author wufei@froad.com.cn 2015年12月5日 下午4:15:05
     * @param pageVo 分页请求信息
     * @param defineTaskReqVo 任务列表请求参数
     *            
     * 
     * 
     * @param pageVo
     * @param defineTaskReqVo
     */
    public com.froad.thrift.vo.coremodule.DefineTaskRespPageVo getDefineTaskPageVo(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends com.froad.thrift.monitor.service.BizMonitorService .AsyncIface {

    public void getRespPage(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getReportByCondition(com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getDefineTaskPageVo(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends com.froad.thrift.monitor.service.BizMonitorService.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.froad.thrift.vo.coremodule.ReportRespPageVo getRespPage(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo) throws org.apache.thrift.TException
    {
      send_getRespPage(pageVo, reportReqVo);
      return recv_getRespPage();
    }

    public void send_getRespPage(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo) throws org.apache.thrift.TException
    {
      getRespPage_args args = new getRespPage_args();
      args.setPageVo(pageVo);
      args.setReportReqVo(reportReqVo);
      sendBase("getRespPage", args);
    }

    public com.froad.thrift.vo.coremodule.ReportRespPageVo recv_getRespPage() throws org.apache.thrift.TException
    {
      getRespPage_result result = new getRespPage_result();
      receiveBase(result, "getRespPage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getRespPage failed: unknown result");
    }

    public com.froad.thrift.vo.ExportResultRes getReportByCondition(com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo) throws org.apache.thrift.TException
    {
      send_getReportByCondition(reportReqVo);
      return recv_getReportByCondition();
    }

    public void send_getReportByCondition(com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo) throws org.apache.thrift.TException
    {
      getReportByCondition_args args = new getReportByCondition_args();
      args.setReportReqVo(reportReqVo);
      sendBase("getReportByCondition", args);
    }

    public com.froad.thrift.vo.ExportResultRes recv_getReportByCondition() throws org.apache.thrift.TException
    {
      getReportByCondition_result result = new getReportByCondition_result();
      receiveBase(result, "getReportByCondition");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getReportByCondition failed: unknown result");
    }

    public com.froad.thrift.vo.coremodule.DefineTaskRespPageVo getDefineTaskPageVo(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo) throws org.apache.thrift.TException
    {
      send_getDefineTaskPageVo(pageVo, defineTaskReqVo);
      return recv_getDefineTaskPageVo();
    }

    public void send_getDefineTaskPageVo(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo) throws org.apache.thrift.TException
    {
      getDefineTaskPageVo_args args = new getDefineTaskPageVo_args();
      args.setPageVo(pageVo);
      args.setDefineTaskReqVo(defineTaskReqVo);
      sendBase("getDefineTaskPageVo", args);
    }

    public com.froad.thrift.vo.coremodule.DefineTaskRespPageVo recv_getDefineTaskPageVo() throws org.apache.thrift.TException
    {
      getDefineTaskPageVo_result result = new getDefineTaskPageVo_result();
      receiveBase(result, "getDefineTaskPageVo");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getDefineTaskPageVo failed: unknown result");
    }

  }
  public static class AsyncClient extends com.froad.thrift.monitor.service.BizMonitorService.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void getRespPage(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getRespPage_call method_call = new getRespPage_call(pageVo, reportReqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getRespPage_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.PageVo pageVo;
      private com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo;
      public getRespPage_call(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.pageVo = pageVo;
        this.reportReqVo = reportReqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getRespPage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getRespPage_args args = new getRespPage_args();
        args.setPageVo(pageVo);
        args.setReportReqVo(reportReqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.coremodule.ReportRespPageVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getRespPage();
      }
    }

    public void getReportByCondition(com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getReportByCondition_call method_call = new getReportByCondition_call(reportReqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getReportByCondition_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo;
      public getReportByCondition_call(com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.reportReqVo = reportReqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getReportByCondition", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getReportByCondition_args args = new getReportByCondition_args();
        args.setReportReqVo(reportReqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ExportResultRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getReportByCondition();
      }
    }

    public void getDefineTaskPageVo(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getDefineTaskPageVo_call method_call = new getDefineTaskPageVo_call(pageVo, defineTaskReqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getDefineTaskPageVo_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.PageVo pageVo;
      private com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo;
      public getDefineTaskPageVo_call(com.froad.thrift.vo.PageVo pageVo, com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.pageVo = pageVo;
        this.defineTaskReqVo = defineTaskReqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getDefineTaskPageVo", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getDefineTaskPageVo_args args = new getDefineTaskPageVo_args();
        args.setPageVo(pageVo);
        args.setDefineTaskReqVo(defineTaskReqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.coremodule.DefineTaskRespPageVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getDefineTaskPageVo();
      }
    }

  }

  public static class Processor<I extends Iface> extends com.froad.thrift.monitor.service.BizMonitorService.Processor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("getRespPage", new getRespPage());
      processMap.put("getReportByCondition", new getReportByCondition());
      processMap.put("getDefineTaskPageVo", new getDefineTaskPageVo());
      return processMap;
    }

    public static class getRespPage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getRespPage_args> {
      public getRespPage() {
        super("getRespPage");
      }

      public getRespPage_args getEmptyArgsInstance() {
        return new getRespPage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getRespPage_result getResult(I iface, getRespPage_args args) throws org.apache.thrift.TException {
        getRespPage_result result = new getRespPage_result();
        result.success = iface.getRespPage(args.pageVo, args.reportReqVo);
        return result;
      }
    }

    public static class getReportByCondition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getReportByCondition_args> {
      public getReportByCondition() {
        super("getReportByCondition");
      }

      public getReportByCondition_args getEmptyArgsInstance() {
        return new getReportByCondition_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getReportByCondition_result getResult(I iface, getReportByCondition_args args) throws org.apache.thrift.TException {
        getReportByCondition_result result = new getReportByCondition_result();
        result.success = iface.getReportByCondition(args.reportReqVo);
        return result;
      }
    }

    public static class getDefineTaskPageVo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getDefineTaskPageVo_args> {
      public getDefineTaskPageVo() {
        super("getDefineTaskPageVo");
      }

      public getDefineTaskPageVo_args getEmptyArgsInstance() {
        return new getDefineTaskPageVo_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getDefineTaskPageVo_result getResult(I iface, getDefineTaskPageVo_args args) throws org.apache.thrift.TException {
        getDefineTaskPageVo_result result = new getDefineTaskPageVo_result();
        result.success = iface.getDefineTaskPageVo(args.pageVo, args.defineTaskReqVo);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends com.froad.thrift.monitor.service.BizMonitorService.AsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("getRespPage", new getRespPage());
      processMap.put("getReportByCondition", new getReportByCondition());
      processMap.put("getDefineTaskPageVo", new getDefineTaskPageVo());
      return processMap;
    }

    public static class getRespPage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getRespPage_args, com.froad.thrift.vo.coremodule.ReportRespPageVo> {
      public getRespPage() {
        super("getRespPage");
      }

      public getRespPage_args getEmptyArgsInstance() {
        return new getRespPage_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.coremodule.ReportRespPageVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.coremodule.ReportRespPageVo>() { 
          public void onComplete(com.froad.thrift.vo.coremodule.ReportRespPageVo o) {
            getRespPage_result result = new getRespPage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getRespPage_result result = new getRespPage_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getRespPage_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.coremodule.ReportRespPageVo> resultHandler) throws TException {
        iface.getRespPage(args.pageVo, args.reportReqVo,resultHandler);
      }
    }

    public static class getReportByCondition<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getReportByCondition_args, com.froad.thrift.vo.ExportResultRes> {
      public getReportByCondition() {
        super("getReportByCondition");
      }

      public getReportByCondition_args getEmptyArgsInstance() {
        return new getReportByCondition_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes>() { 
          public void onComplete(com.froad.thrift.vo.ExportResultRes o) {
            getReportByCondition_result result = new getReportByCondition_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getReportByCondition_result result = new getReportByCondition_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getReportByCondition_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes> resultHandler) throws TException {
        iface.getReportByCondition(args.reportReqVo,resultHandler);
      }
    }

    public static class getDefineTaskPageVo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getDefineTaskPageVo_args, com.froad.thrift.vo.coremodule.DefineTaskRespPageVo> {
      public getDefineTaskPageVo() {
        super("getDefineTaskPageVo");
      }

      public getDefineTaskPageVo_args getEmptyArgsInstance() {
        return new getDefineTaskPageVo_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.coremodule.DefineTaskRespPageVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.coremodule.DefineTaskRespPageVo>() { 
          public void onComplete(com.froad.thrift.vo.coremodule.DefineTaskRespPageVo o) {
            getDefineTaskPageVo_result result = new getDefineTaskPageVo_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getDefineTaskPageVo_result result = new getDefineTaskPageVo_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getDefineTaskPageVo_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.coremodule.DefineTaskRespPageVo> resultHandler) throws TException {
        iface.getDefineTaskPageVo(args.pageVo, args.defineTaskReqVo,resultHandler);
      }
    }

  }

  public static class getRespPage_args implements org.apache.thrift.TBase<getRespPage_args, getRespPage_args._Fields>, java.io.Serializable, Cloneable, Comparable<getRespPage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getRespPage_args");

    private static final org.apache.thrift.protocol.TField PAGE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("pageVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField REPORT_REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("reportReqVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getRespPage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getRespPage_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.PageVo pageVo; // required
    public com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PAGE_VO((short)1, "pageVo"),
      REPORT_REQ_VO((short)2, "reportReqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PAGE_VO
            return PAGE_VO;
          case 2: // REPORT_REQ_VO
            return REPORT_REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PAGE_VO, new org.apache.thrift.meta_data.FieldMetaData("pageVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
      tmpMap.put(_Fields.REPORT_REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("reportReqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.coremodule.ReportReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getRespPage_args.class, metaDataMap);
    }

    public getRespPage_args() {
    }

    public getRespPage_args(
      com.froad.thrift.vo.PageVo pageVo,
      com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo)
    {
      this();
      this.pageVo = pageVo;
      this.reportReqVo = reportReqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getRespPage_args(getRespPage_args other) {
      if (other.isSetPageVo()) {
        this.pageVo = new com.froad.thrift.vo.PageVo(other.pageVo);
      }
      if (other.isSetReportReqVo()) {
        this.reportReqVo = new com.froad.thrift.vo.coremodule.ReportReqVo(other.reportReqVo);
      }
    }

    public getRespPage_args deepCopy() {
      return new getRespPage_args(this);
    }

    @Override
    public void clear() {
      this.pageVo = null;
      this.reportReqVo = null;
    }

    public com.froad.thrift.vo.PageVo getPageVo() {
      return this.pageVo;
    }

    public getRespPage_args setPageVo(com.froad.thrift.vo.PageVo pageVo) {
      this.pageVo = pageVo;
      return this;
    }

    public void unsetPageVo() {
      this.pageVo = null;
    }

    /** Returns true if field pageVo is set (has been assigned a value) and false otherwise */
    public boolean isSetPageVo() {
      return this.pageVo != null;
    }

    public void setPageVoIsSet(boolean value) {
      if (!value) {
        this.pageVo = null;
      }
    }

    public com.froad.thrift.vo.coremodule.ReportReqVo getReportReqVo() {
      return this.reportReqVo;
    }

    public getRespPage_args setReportReqVo(com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo) {
      this.reportReqVo = reportReqVo;
      return this;
    }

    public void unsetReportReqVo() {
      this.reportReqVo = null;
    }

    /** Returns true if field reportReqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetReportReqVo() {
      return this.reportReqVo != null;
    }

    public void setReportReqVoIsSet(boolean value) {
      if (!value) {
        this.reportReqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PAGE_VO:
        if (value == null) {
          unsetPageVo();
        } else {
          setPageVo((com.froad.thrift.vo.PageVo)value);
        }
        break;

      case REPORT_REQ_VO:
        if (value == null) {
          unsetReportReqVo();
        } else {
          setReportReqVo((com.froad.thrift.vo.coremodule.ReportReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PAGE_VO:
        return getPageVo();

      case REPORT_REQ_VO:
        return getReportReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PAGE_VO:
        return isSetPageVo();
      case REPORT_REQ_VO:
        return isSetReportReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getRespPage_args)
        return this.equals((getRespPage_args)that);
      return false;
    }

    public boolean equals(getRespPage_args that) {
      if (that == null)
        return false;

      boolean this_present_pageVo = true && this.isSetPageVo();
      boolean that_present_pageVo = true && that.isSetPageVo();
      if (this_present_pageVo || that_present_pageVo) {
        if (!(this_present_pageVo && that_present_pageVo))
          return false;
        if (!this.pageVo.equals(that.pageVo))
          return false;
      }

      boolean this_present_reportReqVo = true && this.isSetReportReqVo();
      boolean that_present_reportReqVo = true && that.isSetReportReqVo();
      if (this_present_reportReqVo || that_present_reportReqVo) {
        if (!(this_present_reportReqVo && that_present_reportReqVo))
          return false;
        if (!this.reportReqVo.equals(that.reportReqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_pageVo = true && (isSetPageVo());
      list.add(present_pageVo);
      if (present_pageVo)
        list.add(pageVo);

      boolean present_reportReqVo = true && (isSetReportReqVo());
      list.add(present_reportReqVo);
      if (present_reportReqVo)
        list.add(reportReqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getRespPage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPageVo()).compareTo(other.isSetPageVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageVo, other.pageVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetReportReqVo()).compareTo(other.isSetReportReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetReportReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reportReqVo, other.reportReqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getRespPage_args(");
      boolean first = true;

      sb.append("pageVo:");
      if (this.pageVo == null) {
        sb.append("null");
      } else {
        sb.append(this.pageVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("reportReqVo:");
      if (this.reportReqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.reportReqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (pageVo != null) {
        pageVo.validate();
      }
      if (reportReqVo != null) {
        reportReqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getRespPage_argsStandardSchemeFactory implements SchemeFactory {
      public getRespPage_argsStandardScheme getScheme() {
        return new getRespPage_argsStandardScheme();
      }
    }

    private static class getRespPage_argsStandardScheme extends StandardScheme<getRespPage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getRespPage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PAGE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.pageVo = new com.froad.thrift.vo.PageVo();
                struct.pageVo.read(iprot);
                struct.setPageVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // REPORT_REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.reportReqVo = new com.froad.thrift.vo.coremodule.ReportReqVo();
                struct.reportReqVo.read(iprot);
                struct.setReportReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getRespPage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.pageVo != null) {
          oprot.writeFieldBegin(PAGE_VO_FIELD_DESC);
          struct.pageVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.reportReqVo != null) {
          oprot.writeFieldBegin(REPORT_REQ_VO_FIELD_DESC);
          struct.reportReqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getRespPage_argsTupleSchemeFactory implements SchemeFactory {
      public getRespPage_argsTupleScheme getScheme() {
        return new getRespPage_argsTupleScheme();
      }
    }

    private static class getRespPage_argsTupleScheme extends TupleScheme<getRespPage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getRespPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPageVo()) {
          optionals.set(0);
        }
        if (struct.isSetReportReqVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPageVo()) {
          struct.pageVo.write(oprot);
        }
        if (struct.isSetReportReqVo()) {
          struct.reportReqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getRespPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.pageVo = new com.froad.thrift.vo.PageVo();
          struct.pageVo.read(iprot);
          struct.setPageVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.reportReqVo = new com.froad.thrift.vo.coremodule.ReportReqVo();
          struct.reportReqVo.read(iprot);
          struct.setReportReqVoIsSet(true);
        }
      }
    }

  }

  public static class getRespPage_result implements org.apache.thrift.TBase<getRespPage_result, getRespPage_result._Fields>, java.io.Serializable, Cloneable, Comparable<getRespPage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getRespPage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getRespPage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getRespPage_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.coremodule.ReportRespPageVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.coremodule.ReportRespPageVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getRespPage_result.class, metaDataMap);
    }

    public getRespPage_result() {
    }

    public getRespPage_result(
      com.froad.thrift.vo.coremodule.ReportRespPageVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getRespPage_result(getRespPage_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.coremodule.ReportRespPageVo(other.success);
      }
    }

    public getRespPage_result deepCopy() {
      return new getRespPage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.coremodule.ReportRespPageVo getSuccess() {
      return this.success;
    }

    public getRespPage_result setSuccess(com.froad.thrift.vo.coremodule.ReportRespPageVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.coremodule.ReportRespPageVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getRespPage_result)
        return this.equals((getRespPage_result)that);
      return false;
    }

    public boolean equals(getRespPage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getRespPage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getRespPage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getRespPage_resultStandardSchemeFactory implements SchemeFactory {
      public getRespPage_resultStandardScheme getScheme() {
        return new getRespPage_resultStandardScheme();
      }
    }

    private static class getRespPage_resultStandardScheme extends StandardScheme<getRespPage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getRespPage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.coremodule.ReportRespPageVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getRespPage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getRespPage_resultTupleSchemeFactory implements SchemeFactory {
      public getRespPage_resultTupleScheme getScheme() {
        return new getRespPage_resultTupleScheme();
      }
    }

    private static class getRespPage_resultTupleScheme extends TupleScheme<getRespPage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getRespPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getRespPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.coremodule.ReportRespPageVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getReportByCondition_args implements org.apache.thrift.TBase<getReportByCondition_args, getReportByCondition_args._Fields>, java.io.Serializable, Cloneable, Comparable<getReportByCondition_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getReportByCondition_args");

    private static final org.apache.thrift.protocol.TField REPORT_REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("reportReqVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getReportByCondition_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getReportByCondition_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REPORT_REQ_VO((short)1, "reportReqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REPORT_REQ_VO
            return REPORT_REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REPORT_REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("reportReqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.coremodule.ReportReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getReportByCondition_args.class, metaDataMap);
    }

    public getReportByCondition_args() {
    }

    public getReportByCondition_args(
      com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo)
    {
      this();
      this.reportReqVo = reportReqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getReportByCondition_args(getReportByCondition_args other) {
      if (other.isSetReportReqVo()) {
        this.reportReqVo = new com.froad.thrift.vo.coremodule.ReportReqVo(other.reportReqVo);
      }
    }

    public getReportByCondition_args deepCopy() {
      return new getReportByCondition_args(this);
    }

    @Override
    public void clear() {
      this.reportReqVo = null;
    }

    public com.froad.thrift.vo.coremodule.ReportReqVo getReportReqVo() {
      return this.reportReqVo;
    }

    public getReportByCondition_args setReportReqVo(com.froad.thrift.vo.coremodule.ReportReqVo reportReqVo) {
      this.reportReqVo = reportReqVo;
      return this;
    }

    public void unsetReportReqVo() {
      this.reportReqVo = null;
    }

    /** Returns true if field reportReqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetReportReqVo() {
      return this.reportReqVo != null;
    }

    public void setReportReqVoIsSet(boolean value) {
      if (!value) {
        this.reportReqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REPORT_REQ_VO:
        if (value == null) {
          unsetReportReqVo();
        } else {
          setReportReqVo((com.froad.thrift.vo.coremodule.ReportReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REPORT_REQ_VO:
        return getReportReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REPORT_REQ_VO:
        return isSetReportReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getReportByCondition_args)
        return this.equals((getReportByCondition_args)that);
      return false;
    }

    public boolean equals(getReportByCondition_args that) {
      if (that == null)
        return false;

      boolean this_present_reportReqVo = true && this.isSetReportReqVo();
      boolean that_present_reportReqVo = true && that.isSetReportReqVo();
      if (this_present_reportReqVo || that_present_reportReqVo) {
        if (!(this_present_reportReqVo && that_present_reportReqVo))
          return false;
        if (!this.reportReqVo.equals(that.reportReqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_reportReqVo = true && (isSetReportReqVo());
      list.add(present_reportReqVo);
      if (present_reportReqVo)
        list.add(reportReqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getReportByCondition_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetReportReqVo()).compareTo(other.isSetReportReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetReportReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reportReqVo, other.reportReqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getReportByCondition_args(");
      boolean first = true;

      sb.append("reportReqVo:");
      if (this.reportReqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.reportReqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (reportReqVo != null) {
        reportReqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getReportByCondition_argsStandardSchemeFactory implements SchemeFactory {
      public getReportByCondition_argsStandardScheme getScheme() {
        return new getReportByCondition_argsStandardScheme();
      }
    }

    private static class getReportByCondition_argsStandardScheme extends StandardScheme<getReportByCondition_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getReportByCondition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REPORT_REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.reportReqVo = new com.froad.thrift.vo.coremodule.ReportReqVo();
                struct.reportReqVo.read(iprot);
                struct.setReportReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getReportByCondition_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.reportReqVo != null) {
          oprot.writeFieldBegin(REPORT_REQ_VO_FIELD_DESC);
          struct.reportReqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getReportByCondition_argsTupleSchemeFactory implements SchemeFactory {
      public getReportByCondition_argsTupleScheme getScheme() {
        return new getReportByCondition_argsTupleScheme();
      }
    }

    private static class getReportByCondition_argsTupleScheme extends TupleScheme<getReportByCondition_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getReportByCondition_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetReportReqVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetReportReqVo()) {
          struct.reportReqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getReportByCondition_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.reportReqVo = new com.froad.thrift.vo.coremodule.ReportReqVo();
          struct.reportReqVo.read(iprot);
          struct.setReportReqVoIsSet(true);
        }
      }
    }

  }

  public static class getReportByCondition_result implements org.apache.thrift.TBase<getReportByCondition_result, getReportByCondition_result._Fields>, java.io.Serializable, Cloneable, Comparable<getReportByCondition_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getReportByCondition_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getReportByCondition_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getReportByCondition_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ExportResultRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ExportResultRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getReportByCondition_result.class, metaDataMap);
    }

    public getReportByCondition_result() {
    }

    public getReportByCondition_result(
      com.froad.thrift.vo.ExportResultRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getReportByCondition_result(getReportByCondition_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ExportResultRes(other.success);
      }
    }

    public getReportByCondition_result deepCopy() {
      return new getReportByCondition_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ExportResultRes getSuccess() {
      return this.success;
    }

    public getReportByCondition_result setSuccess(com.froad.thrift.vo.ExportResultRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ExportResultRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getReportByCondition_result)
        return this.equals((getReportByCondition_result)that);
      return false;
    }

    public boolean equals(getReportByCondition_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getReportByCondition_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getReportByCondition_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getReportByCondition_resultStandardSchemeFactory implements SchemeFactory {
      public getReportByCondition_resultStandardScheme getScheme() {
        return new getReportByCondition_resultStandardScheme();
      }
    }

    private static class getReportByCondition_resultStandardScheme extends StandardScheme<getReportByCondition_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getReportByCondition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ExportResultRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getReportByCondition_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getReportByCondition_resultTupleSchemeFactory implements SchemeFactory {
      public getReportByCondition_resultTupleScheme getScheme() {
        return new getReportByCondition_resultTupleScheme();
      }
    }

    private static class getReportByCondition_resultTupleScheme extends TupleScheme<getReportByCondition_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getReportByCondition_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getReportByCondition_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ExportResultRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getDefineTaskPageVo_args implements org.apache.thrift.TBase<getDefineTaskPageVo_args, getDefineTaskPageVo_args._Fields>, java.io.Serializable, Cloneable, Comparable<getDefineTaskPageVo_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getDefineTaskPageVo_args");

    private static final org.apache.thrift.protocol.TField PAGE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("pageVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField DEFINE_TASK_REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("defineTaskReqVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getDefineTaskPageVo_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getDefineTaskPageVo_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.PageVo pageVo; // required
    public com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PAGE_VO((short)1, "pageVo"),
      DEFINE_TASK_REQ_VO((short)2, "defineTaskReqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PAGE_VO
            return PAGE_VO;
          case 2: // DEFINE_TASK_REQ_VO
            return DEFINE_TASK_REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PAGE_VO, new org.apache.thrift.meta_data.FieldMetaData("pageVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
      tmpMap.put(_Fields.DEFINE_TASK_REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("defineTaskReqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.coremodule.DefineTaskReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getDefineTaskPageVo_args.class, metaDataMap);
    }

    public getDefineTaskPageVo_args() {
    }

    public getDefineTaskPageVo_args(
      com.froad.thrift.vo.PageVo pageVo,
      com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo)
    {
      this();
      this.pageVo = pageVo;
      this.defineTaskReqVo = defineTaskReqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getDefineTaskPageVo_args(getDefineTaskPageVo_args other) {
      if (other.isSetPageVo()) {
        this.pageVo = new com.froad.thrift.vo.PageVo(other.pageVo);
      }
      if (other.isSetDefineTaskReqVo()) {
        this.defineTaskReqVo = new com.froad.thrift.vo.coremodule.DefineTaskReqVo(other.defineTaskReqVo);
      }
    }

    public getDefineTaskPageVo_args deepCopy() {
      return new getDefineTaskPageVo_args(this);
    }

    @Override
    public void clear() {
      this.pageVo = null;
      this.defineTaskReqVo = null;
    }

    public com.froad.thrift.vo.PageVo getPageVo() {
      return this.pageVo;
    }

    public getDefineTaskPageVo_args setPageVo(com.froad.thrift.vo.PageVo pageVo) {
      this.pageVo = pageVo;
      return this;
    }

    public void unsetPageVo() {
      this.pageVo = null;
    }

    /** Returns true if field pageVo is set (has been assigned a value) and false otherwise */
    public boolean isSetPageVo() {
      return this.pageVo != null;
    }

    public void setPageVoIsSet(boolean value) {
      if (!value) {
        this.pageVo = null;
      }
    }

    public com.froad.thrift.vo.coremodule.DefineTaskReqVo getDefineTaskReqVo() {
      return this.defineTaskReqVo;
    }

    public getDefineTaskPageVo_args setDefineTaskReqVo(com.froad.thrift.vo.coremodule.DefineTaskReqVo defineTaskReqVo) {
      this.defineTaskReqVo = defineTaskReqVo;
      return this;
    }

    public void unsetDefineTaskReqVo() {
      this.defineTaskReqVo = null;
    }

    /** Returns true if field defineTaskReqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetDefineTaskReqVo() {
      return this.defineTaskReqVo != null;
    }

    public void setDefineTaskReqVoIsSet(boolean value) {
      if (!value) {
        this.defineTaskReqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PAGE_VO:
        if (value == null) {
          unsetPageVo();
        } else {
          setPageVo((com.froad.thrift.vo.PageVo)value);
        }
        break;

      case DEFINE_TASK_REQ_VO:
        if (value == null) {
          unsetDefineTaskReqVo();
        } else {
          setDefineTaskReqVo((com.froad.thrift.vo.coremodule.DefineTaskReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PAGE_VO:
        return getPageVo();

      case DEFINE_TASK_REQ_VO:
        return getDefineTaskReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PAGE_VO:
        return isSetPageVo();
      case DEFINE_TASK_REQ_VO:
        return isSetDefineTaskReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getDefineTaskPageVo_args)
        return this.equals((getDefineTaskPageVo_args)that);
      return false;
    }

    public boolean equals(getDefineTaskPageVo_args that) {
      if (that == null)
        return false;

      boolean this_present_pageVo = true && this.isSetPageVo();
      boolean that_present_pageVo = true && that.isSetPageVo();
      if (this_present_pageVo || that_present_pageVo) {
        if (!(this_present_pageVo && that_present_pageVo))
          return false;
        if (!this.pageVo.equals(that.pageVo))
          return false;
      }

      boolean this_present_defineTaskReqVo = true && this.isSetDefineTaskReqVo();
      boolean that_present_defineTaskReqVo = true && that.isSetDefineTaskReqVo();
      if (this_present_defineTaskReqVo || that_present_defineTaskReqVo) {
        if (!(this_present_defineTaskReqVo && that_present_defineTaskReqVo))
          return false;
        if (!this.defineTaskReqVo.equals(that.defineTaskReqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_pageVo = true && (isSetPageVo());
      list.add(present_pageVo);
      if (present_pageVo)
        list.add(pageVo);

      boolean present_defineTaskReqVo = true && (isSetDefineTaskReqVo());
      list.add(present_defineTaskReqVo);
      if (present_defineTaskReqVo)
        list.add(defineTaskReqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getDefineTaskPageVo_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPageVo()).compareTo(other.isSetPageVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageVo, other.pageVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetDefineTaskReqVo()).compareTo(other.isSetDefineTaskReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDefineTaskReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.defineTaskReqVo, other.defineTaskReqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getDefineTaskPageVo_args(");
      boolean first = true;

      sb.append("pageVo:");
      if (this.pageVo == null) {
        sb.append("null");
      } else {
        sb.append(this.pageVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("defineTaskReqVo:");
      if (this.defineTaskReqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.defineTaskReqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (pageVo != null) {
        pageVo.validate();
      }
      if (defineTaskReqVo != null) {
        defineTaskReqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getDefineTaskPageVo_argsStandardSchemeFactory implements SchemeFactory {
      public getDefineTaskPageVo_argsStandardScheme getScheme() {
        return new getDefineTaskPageVo_argsStandardScheme();
      }
    }

    private static class getDefineTaskPageVo_argsStandardScheme extends StandardScheme<getDefineTaskPageVo_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getDefineTaskPageVo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PAGE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.pageVo = new com.froad.thrift.vo.PageVo();
                struct.pageVo.read(iprot);
                struct.setPageVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DEFINE_TASK_REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.defineTaskReqVo = new com.froad.thrift.vo.coremodule.DefineTaskReqVo();
                struct.defineTaskReqVo.read(iprot);
                struct.setDefineTaskReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getDefineTaskPageVo_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.pageVo != null) {
          oprot.writeFieldBegin(PAGE_VO_FIELD_DESC);
          struct.pageVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.defineTaskReqVo != null) {
          oprot.writeFieldBegin(DEFINE_TASK_REQ_VO_FIELD_DESC);
          struct.defineTaskReqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getDefineTaskPageVo_argsTupleSchemeFactory implements SchemeFactory {
      public getDefineTaskPageVo_argsTupleScheme getScheme() {
        return new getDefineTaskPageVo_argsTupleScheme();
      }
    }

    private static class getDefineTaskPageVo_argsTupleScheme extends TupleScheme<getDefineTaskPageVo_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getDefineTaskPageVo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPageVo()) {
          optionals.set(0);
        }
        if (struct.isSetDefineTaskReqVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPageVo()) {
          struct.pageVo.write(oprot);
        }
        if (struct.isSetDefineTaskReqVo()) {
          struct.defineTaskReqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getDefineTaskPageVo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.pageVo = new com.froad.thrift.vo.PageVo();
          struct.pageVo.read(iprot);
          struct.setPageVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.defineTaskReqVo = new com.froad.thrift.vo.coremodule.DefineTaskReqVo();
          struct.defineTaskReqVo.read(iprot);
          struct.setDefineTaskReqVoIsSet(true);
        }
      }
    }

  }

  public static class getDefineTaskPageVo_result implements org.apache.thrift.TBase<getDefineTaskPageVo_result, getDefineTaskPageVo_result._Fields>, java.io.Serializable, Cloneable, Comparable<getDefineTaskPageVo_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getDefineTaskPageVo_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getDefineTaskPageVo_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getDefineTaskPageVo_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.coremodule.DefineTaskRespPageVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.coremodule.DefineTaskRespPageVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getDefineTaskPageVo_result.class, metaDataMap);
    }

    public getDefineTaskPageVo_result() {
    }

    public getDefineTaskPageVo_result(
      com.froad.thrift.vo.coremodule.DefineTaskRespPageVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getDefineTaskPageVo_result(getDefineTaskPageVo_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.coremodule.DefineTaskRespPageVo(other.success);
      }
    }

    public getDefineTaskPageVo_result deepCopy() {
      return new getDefineTaskPageVo_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.coremodule.DefineTaskRespPageVo getSuccess() {
      return this.success;
    }

    public getDefineTaskPageVo_result setSuccess(com.froad.thrift.vo.coremodule.DefineTaskRespPageVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.coremodule.DefineTaskRespPageVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getDefineTaskPageVo_result)
        return this.equals((getDefineTaskPageVo_result)that);
      return false;
    }

    public boolean equals(getDefineTaskPageVo_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getDefineTaskPageVo_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getDefineTaskPageVo_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getDefineTaskPageVo_resultStandardSchemeFactory implements SchemeFactory {
      public getDefineTaskPageVo_resultStandardScheme getScheme() {
        return new getDefineTaskPageVo_resultStandardScheme();
      }
    }

    private static class getDefineTaskPageVo_resultStandardScheme extends StandardScheme<getDefineTaskPageVo_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getDefineTaskPageVo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.coremodule.DefineTaskRespPageVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getDefineTaskPageVo_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getDefineTaskPageVo_resultTupleSchemeFactory implements SchemeFactory {
      public getDefineTaskPageVo_resultTupleScheme getScheme() {
        return new getDefineTaskPageVo_resultTupleScheme();
      }
    }

    private static class getDefineTaskPageVo_resultTupleScheme extends TupleScheme<getDefineTaskPageVo_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getDefineTaskPageVo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getDefineTaskPageVo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.coremodule.DefineTaskRespPageVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
