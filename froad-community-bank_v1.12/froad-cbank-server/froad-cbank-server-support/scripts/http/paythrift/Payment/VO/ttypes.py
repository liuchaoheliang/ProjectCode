#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

from thrift.Thrift import TType, TMessageType, TException, TApplicationException

from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol, TProtocol
try:
  from thrift.protocol import fastbinary
except:
  fastbinary = None



class BankCardInfo:
  """

  Attributes:
   - id
   - memberCode
   - bankGroupId
   - bankName
   - cardHostName
   - cardNo
   - cardType
   - mobile
   - agreementNo
   - identifyType
   - identifyNo
   - bankAddress
   - validStatus
   - isDefault
   - createTimeStr
   - updateTimeStr
   - loginID
   - type
   - orderLimit
   - dayLimit
   - monthLimit
   - alipayAccount
  """

  thrift_spec = (
    None, # 0
    (1, TType.I64, 'id', None, None, ), # 1
    (2, TType.I64, 'memberCode', None, None, ), # 2
    (3, TType.STRING, 'bankGroupId', None, None, ), # 3
    (4, TType.STRING, 'bankName', None, None, ), # 4
    (5, TType.STRING, 'cardHostName', None, None, ), # 5
    (6, TType.STRING, 'cardNo', None, None, ), # 6
    (7, TType.STRING, 'cardType', None, None, ), # 7
    (8, TType.STRING, 'mobile', None, None, ), # 8
    (9, TType.STRING, 'agreementNo', None, None, ), # 9
    (10, TType.STRING, 'identifyType', None, None, ), # 10
    (11, TType.STRING, 'identifyNo', None, None, ), # 11
    (12, TType.STRING, 'bankAddress', None, None, ), # 12
    (13, TType.I32, 'validStatus', None, None, ), # 13
    (14, TType.BOOL, 'isDefault', None, None, ), # 14
    (15, TType.STRING, 'createTimeStr', None, None, ), # 15
    (16, TType.STRING, 'updateTimeStr', None, None, ), # 16
    (17, TType.STRING, 'loginID', None, None, ), # 17
    (18, TType.STRING, 'type', None, None, ), # 18
    (19, TType.STRING, 'orderLimit', None, None, ), # 19
    (20, TType.STRING, 'dayLimit', None, None, ), # 20
    (21, TType.STRING, 'monthLimit', None, None, ), # 21
    (22, TType.STRING, 'alipayAccount', None, None, ), # 22
  )

  def __init__(self, id=None, memberCode=None, bankGroupId=None, bankName=None, cardHostName=None, cardNo=None, cardType=None, mobile=None, agreementNo=None, identifyType=None, identifyNo=None, bankAddress=None, validStatus=None, isDefault=None, createTimeStr=None, updateTimeStr=None, loginID=None, type=None, orderLimit=None, dayLimit=None, monthLimit=None, alipayAccount=None,):
    self.id = id
    self.memberCode = memberCode
    self.bankGroupId = bankGroupId
    self.bankName = bankName
    self.cardHostName = cardHostName
    self.cardNo = cardNo
    self.cardType = cardType
    self.mobile = mobile
    self.agreementNo = agreementNo
    self.identifyType = identifyType
    self.identifyNo = identifyNo
    self.bankAddress = bankAddress
    self.validStatus = validStatus
    self.isDefault = isDefault
    self.createTimeStr = createTimeStr
    self.updateTimeStr = updateTimeStr
    self.loginID = loginID
    self.type = type
    self.orderLimit = orderLimit
    self.dayLimit = dayLimit
    self.monthLimit = monthLimit
    self.alipayAccount = alipayAccount

  def read(self, iprot):
    if iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None and fastbinary is not None:
      fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
      return
    iprot.readStructBegin()
    while True:
      (fname, ftype, fid) = iprot.readFieldBegin()
      if ftype == TType.STOP:
        break
      if fid == 1:
        if ftype == TType.I64:
          self.id = iprot.readI64();
        else:
          iprot.skip(ftype)
      elif fid == 2:
        if ftype == TType.I64:
          self.memberCode = iprot.readI64();
        else:
          iprot.skip(ftype)
      elif fid == 3:
        if ftype == TType.STRING:
          self.bankGroupId = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 4:
        if ftype == TType.STRING:
          self.bankName = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 5:
        if ftype == TType.STRING:
          self.cardHostName = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 6:
        if ftype == TType.STRING:
          self.cardNo = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 7:
        if ftype == TType.STRING:
          self.cardType = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 8:
        if ftype == TType.STRING:
          self.mobile = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 9:
        if ftype == TType.STRING:
          self.agreementNo = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 10:
        if ftype == TType.STRING:
          self.identifyType = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 11:
        if ftype == TType.STRING:
          self.identifyNo = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 12:
        if ftype == TType.STRING:
          self.bankAddress = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 13:
        if ftype == TType.I32:
          self.validStatus = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 14:
        if ftype == TType.BOOL:
          self.isDefault = iprot.readBool();
        else:
          iprot.skip(ftype)
      elif fid == 15:
        if ftype == TType.STRING:
          self.createTimeStr = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 16:
        if ftype == TType.STRING:
          self.updateTimeStr = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 17:
        if ftype == TType.STRING:
          self.loginID = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 18:
        if ftype == TType.STRING:
          self.type = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 19:
        if ftype == TType.STRING:
          self.orderLimit = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 20:
        if ftype == TType.STRING:
          self.dayLimit = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 21:
        if ftype == TType.STRING:
          self.monthLimit = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 22:
        if ftype == TType.STRING:
          self.alipayAccount = iprot.readString();
        else:
          iprot.skip(ftype)
      else:
        iprot.skip(ftype)
      iprot.readFieldEnd()
    iprot.readStructEnd()

  def write(self, oprot):
    if oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and self.thrift_spec is not None and fastbinary is not None:
      oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
      return
    oprot.writeStructBegin('BankCardInfo')
    if self.id is not None:
      oprot.writeFieldBegin('id', TType.I64, 1)
      oprot.writeI64(self.id)
      oprot.writeFieldEnd()
    if self.memberCode is not None:
      oprot.writeFieldBegin('memberCode', TType.I64, 2)
      oprot.writeI64(self.memberCode)
      oprot.writeFieldEnd()
    if self.bankGroupId is not None:
      oprot.writeFieldBegin('bankGroupId', TType.STRING, 3)
      oprot.writeString(self.bankGroupId)
      oprot.writeFieldEnd()
    if self.bankName is not None:
      oprot.writeFieldBegin('bankName', TType.STRING, 4)
      oprot.writeString(self.bankName)
      oprot.writeFieldEnd()
    if self.cardHostName is not None:
      oprot.writeFieldBegin('cardHostName', TType.STRING, 5)
      oprot.writeString(self.cardHostName)
      oprot.writeFieldEnd()
    if self.cardNo is not None:
      oprot.writeFieldBegin('cardNo', TType.STRING, 6)
      oprot.writeString(self.cardNo)
      oprot.writeFieldEnd()
    if self.cardType is not None:
      oprot.writeFieldBegin('cardType', TType.STRING, 7)
      oprot.writeString(self.cardType)
      oprot.writeFieldEnd()
    if self.mobile is not None:
      oprot.writeFieldBegin('mobile', TType.STRING, 8)
      oprot.writeString(self.mobile)
      oprot.writeFieldEnd()
    if self.agreementNo is not None:
      oprot.writeFieldBegin('agreementNo', TType.STRING, 9)
      oprot.writeString(self.agreementNo)
      oprot.writeFieldEnd()
    if self.identifyType is not None:
      oprot.writeFieldBegin('identifyType', TType.STRING, 10)
      oprot.writeString(self.identifyType)
      oprot.writeFieldEnd()
    if self.identifyNo is not None:
      oprot.writeFieldBegin('identifyNo', TType.STRING, 11)
      oprot.writeString(self.identifyNo)
      oprot.writeFieldEnd()
    if self.bankAddress is not None:
      oprot.writeFieldBegin('bankAddress', TType.STRING, 12)
      oprot.writeString(self.bankAddress)
      oprot.writeFieldEnd()
    if self.validStatus is not None:
      oprot.writeFieldBegin('validStatus', TType.I32, 13)
      oprot.writeI32(self.validStatus)
      oprot.writeFieldEnd()
    if self.isDefault is not None:
      oprot.writeFieldBegin('isDefault', TType.BOOL, 14)
      oprot.writeBool(self.isDefault)
      oprot.writeFieldEnd()
    if self.createTimeStr is not None:
      oprot.writeFieldBegin('createTimeStr', TType.STRING, 15)
      oprot.writeString(self.createTimeStr)
      oprot.writeFieldEnd()
    if self.updateTimeStr is not None:
      oprot.writeFieldBegin('updateTimeStr', TType.STRING, 16)
      oprot.writeString(self.updateTimeStr)
      oprot.writeFieldEnd()
    if self.loginID is not None:
      oprot.writeFieldBegin('loginID', TType.STRING, 17)
      oprot.writeString(self.loginID)
      oprot.writeFieldEnd()
    if self.type is not None:
      oprot.writeFieldBegin('type', TType.STRING, 18)
      oprot.writeString(self.type)
      oprot.writeFieldEnd()
    if self.orderLimit is not None:
      oprot.writeFieldBegin('orderLimit', TType.STRING, 19)
      oprot.writeString(self.orderLimit)
      oprot.writeFieldEnd()
    if self.dayLimit is not None:
      oprot.writeFieldBegin('dayLimit', TType.STRING, 20)
      oprot.writeString(self.dayLimit)
      oprot.writeFieldEnd()
    if self.monthLimit is not None:
      oprot.writeFieldBegin('monthLimit', TType.STRING, 21)
      oprot.writeString(self.monthLimit)
      oprot.writeFieldEnd()
    if self.alipayAccount is not None:
      oprot.writeFieldBegin('alipayAccount', TType.STRING, 22)
      oprot.writeString(self.alipayAccount)
      oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

  def validate(self):
    return


  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.id)
    value = (value * 31) ^ hash(self.memberCode)
    value = (value * 31) ^ hash(self.bankGroupId)
    value = (value * 31) ^ hash(self.bankName)
    value = (value * 31) ^ hash(self.cardHostName)
    value = (value * 31) ^ hash(self.cardNo)
    value = (value * 31) ^ hash(self.cardType)
    value = (value * 31) ^ hash(self.mobile)
    value = (value * 31) ^ hash(self.agreementNo)
    value = (value * 31) ^ hash(self.identifyType)
    value = (value * 31) ^ hash(self.identifyNo)
    value = (value * 31) ^ hash(self.bankAddress)
    value = (value * 31) ^ hash(self.validStatus)
    value = (value * 31) ^ hash(self.isDefault)
    value = (value * 31) ^ hash(self.createTimeStr)
    value = (value * 31) ^ hash(self.updateTimeStr)
    value = (value * 31) ^ hash(self.loginID)
    value = (value * 31) ^ hash(self.type)
    value = (value * 31) ^ hash(self.orderLimit)
    value = (value * 31) ^ hash(self.dayLimit)
    value = (value * 31) ^ hash(self.monthLimit)
    value = (value * 31) ^ hash(self.alipayAccount)
    return value

  def __repr__(self):
    L = ['%s=%r' % (key, value)
      for key, value in self.__dict__.iteritems()]
    return '%s(%s)' % (self.__class__.__name__, ', '.join(L))

  def __eq__(self, other):
    return isinstance(other, self.__class__) and self.__dict__ == other.__dict__

  def __ne__(self, other):
    return not (self == other)
