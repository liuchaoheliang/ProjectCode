#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from MerchantAccountService import MerchantAccountService
from MerchantAccountService.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  i64 addMerchantAccount(MerchantAccountVo merchantAccountVo)')
  print('  bool deleteMerchantAccount(MerchantAccountVo merchantAccountVo)')
  print('  bool updateMerchantAccount(MerchantAccountVo merchantAccountVo)')
  print('   getMerchantAccount(MerchantAccountVo merchantAccountVo)')
  print('  string getMerchantAccountByKeyAndOutletId(string key, string merchantId_outletId)')
  print('  MerchantAccountPageVoRes getMerchantAccountByPage(PageVo page, MerchantAccountVo merchantAccountVo)')
  print('  string getName()')
  print('  string getVersion()')
  print('   getServiceBizMethods()')
  print('   getBizMethodsInvokeInfo()')
  print('  BizMethodInvokeInfo getBizMethodInvokeInfo(string methodName)')
  print('  i64 getServiceCount()')
  print('  i64 aliveSince()')
  print('  void reinitialize()')
  print('  void shutdown()')
  print('  void setOption(string key, string value)')
  print('   getOptions()')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = MerchantAccountService.Client(protocol)
transport.open()

if cmd == 'addMerchantAccount':
  if len(args) != 1:
    print('addMerchantAccount requires 1 args')
    sys.exit(1)
  pp.pprint(client.addMerchantAccount(eval(args[0]),))

elif cmd == 'deleteMerchantAccount':
  if len(args) != 1:
    print('deleteMerchantAccount requires 1 args')
    sys.exit(1)
  pp.pprint(client.deleteMerchantAccount(eval(args[0]),))

elif cmd == 'updateMerchantAccount':
  if len(args) != 1:
    print('updateMerchantAccount requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateMerchantAccount(eval(args[0]),))

elif cmd == 'getMerchantAccount':
  if len(args) != 1:
    print('getMerchantAccount requires 1 args')
    sys.exit(1)
  pp.pprint(client.getMerchantAccount(eval(args[0]),))

elif cmd == 'getMerchantAccountByKeyAndOutletId':
  if len(args) != 2:
    print('getMerchantAccountByKeyAndOutletId requires 2 args')
    sys.exit(1)
  pp.pprint(client.getMerchantAccountByKeyAndOutletId(args[0],args[1],))

elif cmd == 'getMerchantAccountByPage':
  if len(args) != 2:
    print('getMerchantAccountByPage requires 2 args')
    sys.exit(1)
  pp.pprint(client.getMerchantAccountByPage(eval(args[0]),eval(args[1]),))

elif cmd == 'getName':
  if len(args) != 0:
    print('getName requires 0 args')
    sys.exit(1)
  pp.pprint(client.getName())

elif cmd == 'getVersion':
  if len(args) != 0:
    print('getVersion requires 0 args')
    sys.exit(1)
  pp.pprint(client.getVersion())

elif cmd == 'getServiceBizMethods':
  if len(args) != 0:
    print('getServiceBizMethods requires 0 args')
    sys.exit(1)
  pp.pprint(client.getServiceBizMethods())

elif cmd == 'getBizMethodsInvokeInfo':
  if len(args) != 0:
    print('getBizMethodsInvokeInfo requires 0 args')
    sys.exit(1)
  pp.pprint(client.getBizMethodsInvokeInfo())

elif cmd == 'getBizMethodInvokeInfo':
  if len(args) != 1:
    print('getBizMethodInvokeInfo requires 1 args')
    sys.exit(1)
  pp.pprint(client.getBizMethodInvokeInfo(args[0],))

elif cmd == 'getServiceCount':
  if len(args) != 0:
    print('getServiceCount requires 0 args')
    sys.exit(1)
  pp.pprint(client.getServiceCount())

elif cmd == 'aliveSince':
  if len(args) != 0:
    print('aliveSince requires 0 args')
    sys.exit(1)
  pp.pprint(client.aliveSince())

elif cmd == 'reinitialize':
  if len(args) != 0:
    print('reinitialize requires 0 args')
    sys.exit(1)
  pp.pprint(client.reinitialize())

elif cmd == 'shutdown':
  if len(args) != 0:
    print('shutdown requires 0 args')
    sys.exit(1)
  pp.pprint(client.shutdown())

elif cmd == 'setOption':
  if len(args) != 2:
    print('setOption requires 2 args')
    sys.exit(1)
  pp.pprint(client.setOption(args[0],args[1],))

elif cmd == 'getOptions':
  if len(args) != 0:
    print('getOptions requires 0 args')
    sys.exit(1)
  pp.pprint(client.getOptions())

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
