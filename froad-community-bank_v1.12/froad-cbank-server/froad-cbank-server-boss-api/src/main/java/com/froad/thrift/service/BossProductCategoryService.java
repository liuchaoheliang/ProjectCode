/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;

import javax.annotation.Generated;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.froad.thrift.vo.product.BossProductCategoryInfoRes;
import com.froad.thrift.vo.product.BossProductCategoryListRes;
import com.froad.thrift.vo.product.BossProductCategoryVo;
import com.froad.thrift.vo.product.ProductCategoryVo;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-11-25")
public class BossProductCategoryService {

  /**
   * 商品分类
   * BossProductCategoryService
   */
  public interface Iface extends com.froad.thrift.monitor.service.BizMonitorService.Iface {

    /**
     * 查询商品分类列表
     * @param originVo 源对象信息(包含平台,操作ip,操作员id等...)
     * @param clientId 客户端Id
     * @param iscludeDisable 是否包含非禁用商品分类
     * @param isMall 是否是精品商城商品类型0-否 1-是
     * @return BossProductCategoryResList
     * 
     * @param originVo
     * @param clientId
     * @param iscludeDisable
     * @param isMall
     */
    public BossProductCategoryListRes findAll(com.froad.thrift.vo.OriginVo originVo, String clientId, boolean iscludeDisable, boolean isMall) throws org.apache.thrift.TException;

    /**
     * 查询商品分类信息
     * @param originVo 源对象信息(包含平台,操作ip,操作员id等...)
     * @param id  分类id
     * @return BossProductCategoryInfoRes
     * 
     * @param originVo
     * @param id
     * @param clientId
     */
    public BossProductCategoryInfoRes getBossProductCategoryById(com.froad.thrift.vo.OriginVo originVo, long id, String clientId) throws org.apache.thrift.TException;

    /**
     * 增加商品分类
     * @param originVo 源对象信息(包含平台,操作ip,操作员id等...)
     * @param bossProductCategoryVo 商品分类信息
     * @return ResultVo
     * 
     * @param originVo
     * @param bossProductCategoryVo
     */
    public com.froad.thrift.vo.ResultVo addBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo) throws org.apache.thrift.TException;

    /**
     * 修改 商品分类
     * @param OriginVo 源对象信息(包含平台,操作ip,操作员id等...)
     * @param BossProductCategoryVo
     * @return ResultVo
     * 
     * @param originVo
     * @param bossProductCategoryVo
     */
    public com.froad.thrift.vo.ResultVo updateBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo) throws org.apache.thrift.TException;

    /**
     * 商品分类 商品导入
     * @param OriginVo 源对象信息(包含平台,操作ip,操作员id等...)
     * @param inputType 导入类型  1-商品分类   2-精品商城商品分类(区别于excel内容不一样)
     * @param list
     * @return
     * 
     * @param originVo
     * @param inputType
     * @param vos
     */
    public com.froad.thrift.vo.ExportResultRes productCategoryProductInput(com.froad.thrift.vo.OriginVo originVo, String inputType, List<ProductCategoryVo> vos) throws org.apache.thrift.TException;

    /**
     * 商品分类详细导出
     * @param OriginVo 源对象信息(包含平台,操作ip,操作员id等...)
     * @param ExportType 导出类型  1-商品分类   2-精品商城商品分类(区别于excel内容不一样)
     * @param list
     * @return
     * 
     * @param originVo
     * @param ExportType
     * @param clientId
     * @param categoryId
     */
    public com.froad.thrift.vo.ExportResultRes productCategoryDetailExport(com.froad.thrift.vo.OriginVo originVo, String ExportType, String clientId, long categoryId) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends com.froad.thrift.monitor.service.BizMonitorService .AsyncIface {

    public void findAll(com.froad.thrift.vo.OriginVo originVo, String clientId, boolean iscludeDisable, boolean isMall, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getBossProductCategoryById(com.froad.thrift.vo.OriginVo originVo, long id, String clientId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void addBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void updateBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void productCategoryProductInput(com.froad.thrift.vo.OriginVo originVo, String inputType, List<ProductCategoryVo> vos, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void productCategoryDetailExport(com.froad.thrift.vo.OriginVo originVo, String ExportType, String clientId, long categoryId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends com.froad.thrift.monitor.service.BizMonitorService.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public BossProductCategoryListRes findAll(com.froad.thrift.vo.OriginVo originVo, String clientId, boolean iscludeDisable, boolean isMall) throws org.apache.thrift.TException
    {
      send_findAll(originVo, clientId, iscludeDisable, isMall);
      return recv_findAll();
    }

    public void send_findAll(com.froad.thrift.vo.OriginVo originVo, String clientId, boolean iscludeDisable, boolean isMall) throws org.apache.thrift.TException
    {
      findAll_args args = new findAll_args();
      args.setOriginVo(originVo);
      args.setClientId(clientId);
      args.setIscludeDisable(iscludeDisable);
      args.setIsMall(isMall);
      sendBase("findAll", args);
    }

    public BossProductCategoryListRes recv_findAll() throws org.apache.thrift.TException
    {
      findAll_result result = new findAll_result();
      receiveBase(result, "findAll");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findAll failed: unknown result");
    }

    public BossProductCategoryInfoRes getBossProductCategoryById(com.froad.thrift.vo.OriginVo originVo, long id, String clientId) throws org.apache.thrift.TException
    {
      send_getBossProductCategoryById(originVo, id, clientId);
      return recv_getBossProductCategoryById();
    }

    public void send_getBossProductCategoryById(com.froad.thrift.vo.OriginVo originVo, long id, String clientId) throws org.apache.thrift.TException
    {
      getBossProductCategoryById_args args = new getBossProductCategoryById_args();
      args.setOriginVo(originVo);
      args.setId(id);
      args.setClientId(clientId);
      sendBase("getBossProductCategoryById", args);
    }

    public BossProductCategoryInfoRes recv_getBossProductCategoryById() throws org.apache.thrift.TException
    {
      getBossProductCategoryById_result result = new getBossProductCategoryById_result();
      receiveBase(result, "getBossProductCategoryById");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBossProductCategoryById failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo addBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo) throws org.apache.thrift.TException
    {
      send_addBossProductCategoryVo(originVo, bossProductCategoryVo);
      return recv_addBossProductCategoryVo();
    }

    public void send_addBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo) throws org.apache.thrift.TException
    {
      addBossProductCategoryVo_args args = new addBossProductCategoryVo_args();
      args.setOriginVo(originVo);
      args.setBossProductCategoryVo(bossProductCategoryVo);
      sendBase("addBossProductCategoryVo", args);
    }

    public com.froad.thrift.vo.ResultVo recv_addBossProductCategoryVo() throws org.apache.thrift.TException
    {
      addBossProductCategoryVo_result result = new addBossProductCategoryVo_result();
      receiveBase(result, "addBossProductCategoryVo");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addBossProductCategoryVo failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo updateBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo) throws org.apache.thrift.TException
    {
      send_updateBossProductCategoryVo(originVo, bossProductCategoryVo);
      return recv_updateBossProductCategoryVo();
    }

    public void send_updateBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo) throws org.apache.thrift.TException
    {
      updateBossProductCategoryVo_args args = new updateBossProductCategoryVo_args();
      args.setOriginVo(originVo);
      args.setBossProductCategoryVo(bossProductCategoryVo);
      sendBase("updateBossProductCategoryVo", args);
    }

    public com.froad.thrift.vo.ResultVo recv_updateBossProductCategoryVo() throws org.apache.thrift.TException
    {
      updateBossProductCategoryVo_result result = new updateBossProductCategoryVo_result();
      receiveBase(result, "updateBossProductCategoryVo");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateBossProductCategoryVo failed: unknown result");
    }

    public com.froad.thrift.vo.ExportResultRes productCategoryProductInput(com.froad.thrift.vo.OriginVo originVo, String inputType, List<ProductCategoryVo> vos) throws org.apache.thrift.TException
    {
      send_productCategoryProductInput(originVo, inputType, vos);
      return recv_productCategoryProductInput();
    }

    public void send_productCategoryProductInput(com.froad.thrift.vo.OriginVo originVo, String inputType, List<ProductCategoryVo> vos) throws org.apache.thrift.TException
    {
      productCategoryProductInput_args args = new productCategoryProductInput_args();
      args.setOriginVo(originVo);
      args.setInputType(inputType);
      args.setVos(vos);
      sendBase("productCategoryProductInput", args);
    }

    public com.froad.thrift.vo.ExportResultRes recv_productCategoryProductInput() throws org.apache.thrift.TException
    {
      productCategoryProductInput_result result = new productCategoryProductInput_result();
      receiveBase(result, "productCategoryProductInput");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "productCategoryProductInput failed: unknown result");
    }

    public com.froad.thrift.vo.ExportResultRes productCategoryDetailExport(com.froad.thrift.vo.OriginVo originVo, String ExportType, String clientId, long categoryId) throws org.apache.thrift.TException
    {
      send_productCategoryDetailExport(originVo, ExportType, clientId, categoryId);
      return recv_productCategoryDetailExport();
    }

    public void send_productCategoryDetailExport(com.froad.thrift.vo.OriginVo originVo, String ExportType, String clientId, long categoryId) throws org.apache.thrift.TException
    {
      productCategoryDetailExport_args args = new productCategoryDetailExport_args();
      args.setOriginVo(originVo);
      args.setExportType(ExportType);
      args.setClientId(clientId);
      args.setCategoryId(categoryId);
      sendBase("productCategoryDetailExport", args);
    }

    public com.froad.thrift.vo.ExportResultRes recv_productCategoryDetailExport() throws org.apache.thrift.TException
    {
      productCategoryDetailExport_result result = new productCategoryDetailExport_result();
      receiveBase(result, "productCategoryDetailExport");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "productCategoryDetailExport failed: unknown result");
    }

  }
  public static class AsyncClient extends com.froad.thrift.monitor.service.BizMonitorService.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void findAll(com.froad.thrift.vo.OriginVo originVo, String clientId, boolean iscludeDisable, boolean isMall, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findAll_call method_call = new findAll_call(originVo, clientId, iscludeDisable, isMall, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findAll_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private String clientId;
      private boolean iscludeDisable;
      private boolean isMall;
      public findAll_call(com.froad.thrift.vo.OriginVo originVo, String clientId, boolean iscludeDisable, boolean isMall, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.clientId = clientId;
        this.iscludeDisable = iscludeDisable;
        this.isMall = isMall;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findAll", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findAll_args args = new findAll_args();
        args.setOriginVo(originVo);
        args.setClientId(clientId);
        args.setIscludeDisable(iscludeDisable);
        args.setIsMall(isMall);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public BossProductCategoryListRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findAll();
      }
    }

    public void getBossProductCategoryById(com.froad.thrift.vo.OriginVo originVo, long id, String clientId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBossProductCategoryById_call method_call = new getBossProductCategoryById_call(originVo, id, clientId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBossProductCategoryById_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private long id;
      private String clientId;
      public getBossProductCategoryById_call(com.froad.thrift.vo.OriginVo originVo, long id, String clientId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.id = id;
        this.clientId = clientId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBossProductCategoryById", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBossProductCategoryById_args args = new getBossProductCategoryById_args();
        args.setOriginVo(originVo);
        args.setId(id);
        args.setClientId(clientId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public BossProductCategoryInfoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getBossProductCategoryById();
      }
    }

    public void addBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addBossProductCategoryVo_call method_call = new addBossProductCategoryVo_call(originVo, bossProductCategoryVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addBossProductCategoryVo_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private BossProductCategoryVo bossProductCategoryVo;
      public addBossProductCategoryVo_call(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.bossProductCategoryVo = bossProductCategoryVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addBossProductCategoryVo", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addBossProductCategoryVo_args args = new addBossProductCategoryVo_args();
        args.setOriginVo(originVo);
        args.setBossProductCategoryVo(bossProductCategoryVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addBossProductCategoryVo();
      }
    }

    public void updateBossProductCategoryVo(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateBossProductCategoryVo_call method_call = new updateBossProductCategoryVo_call(originVo, bossProductCategoryVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateBossProductCategoryVo_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private BossProductCategoryVo bossProductCategoryVo;
      public updateBossProductCategoryVo_call(com.froad.thrift.vo.OriginVo originVo, BossProductCategoryVo bossProductCategoryVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.bossProductCategoryVo = bossProductCategoryVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateBossProductCategoryVo", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateBossProductCategoryVo_args args = new updateBossProductCategoryVo_args();
        args.setOriginVo(originVo);
        args.setBossProductCategoryVo(bossProductCategoryVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateBossProductCategoryVo();
      }
    }

    public void productCategoryProductInput(com.froad.thrift.vo.OriginVo originVo, String inputType, List<ProductCategoryVo> vos, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      productCategoryProductInput_call method_call = new productCategoryProductInput_call(originVo, inputType, vos, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class productCategoryProductInput_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private String inputType;
      private List<ProductCategoryVo> vos;
      public productCategoryProductInput_call(com.froad.thrift.vo.OriginVo originVo, String inputType, List<ProductCategoryVo> vos, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.inputType = inputType;
        this.vos = vos;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("productCategoryProductInput", org.apache.thrift.protocol.TMessageType.CALL, 0));
        productCategoryProductInput_args args = new productCategoryProductInput_args();
        args.setOriginVo(originVo);
        args.setInputType(inputType);
        args.setVos(vos);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ExportResultRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_productCategoryProductInput();
      }
    }

    public void productCategoryDetailExport(com.froad.thrift.vo.OriginVo originVo, String ExportType, String clientId, long categoryId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      productCategoryDetailExport_call method_call = new productCategoryDetailExport_call(originVo, ExportType, clientId, categoryId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class productCategoryDetailExport_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private String ExportType;
      private String clientId;
      private long categoryId;
      public productCategoryDetailExport_call(com.froad.thrift.vo.OriginVo originVo, String ExportType, String clientId, long categoryId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.ExportType = ExportType;
        this.clientId = clientId;
        this.categoryId = categoryId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("productCategoryDetailExport", org.apache.thrift.protocol.TMessageType.CALL, 0));
        productCategoryDetailExport_args args = new productCategoryDetailExport_args();
        args.setOriginVo(originVo);
        args.setExportType(ExportType);
        args.setClientId(clientId);
        args.setCategoryId(categoryId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ExportResultRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_productCategoryDetailExport();
      }
    }

  }

  public static class Processor<I extends Iface> extends com.froad.thrift.monitor.service.BizMonitorService.Processor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("findAll", new findAll());
      processMap.put("getBossProductCategoryById", new getBossProductCategoryById());
      processMap.put("addBossProductCategoryVo", new addBossProductCategoryVo());
      processMap.put("updateBossProductCategoryVo", new updateBossProductCategoryVo());
      processMap.put("productCategoryProductInput", new productCategoryProductInput());
      processMap.put("productCategoryDetailExport", new productCategoryDetailExport());
      return processMap;
    }

    public static class findAll<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findAll_args> {
      public findAll() {
        super("findAll");
      }

      public findAll_args getEmptyArgsInstance() {
        return new findAll_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findAll_result getResult(I iface, findAll_args args) throws org.apache.thrift.TException {
        findAll_result result = new findAll_result();
        result.success = iface.findAll(args.originVo, args.clientId, args.iscludeDisable, args.isMall);
        return result;
      }
    }

    public static class getBossProductCategoryById<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBossProductCategoryById_args> {
      public getBossProductCategoryById() {
        super("getBossProductCategoryById");
      }

      public getBossProductCategoryById_args getEmptyArgsInstance() {
        return new getBossProductCategoryById_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getBossProductCategoryById_result getResult(I iface, getBossProductCategoryById_args args) throws org.apache.thrift.TException {
        getBossProductCategoryById_result result = new getBossProductCategoryById_result();
        result.success = iface.getBossProductCategoryById(args.originVo, args.id, args.clientId);
        return result;
      }
    }

    public static class addBossProductCategoryVo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addBossProductCategoryVo_args> {
      public addBossProductCategoryVo() {
        super("addBossProductCategoryVo");
      }

      public addBossProductCategoryVo_args getEmptyArgsInstance() {
        return new addBossProductCategoryVo_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addBossProductCategoryVo_result getResult(I iface, addBossProductCategoryVo_args args) throws org.apache.thrift.TException {
        addBossProductCategoryVo_result result = new addBossProductCategoryVo_result();
        result.success = iface.addBossProductCategoryVo(args.originVo, args.bossProductCategoryVo);
        return result;
      }
    }

    public static class updateBossProductCategoryVo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateBossProductCategoryVo_args> {
      public updateBossProductCategoryVo() {
        super("updateBossProductCategoryVo");
      }

      public updateBossProductCategoryVo_args getEmptyArgsInstance() {
        return new updateBossProductCategoryVo_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateBossProductCategoryVo_result getResult(I iface, updateBossProductCategoryVo_args args) throws org.apache.thrift.TException {
        updateBossProductCategoryVo_result result = new updateBossProductCategoryVo_result();
        result.success = iface.updateBossProductCategoryVo(args.originVo, args.bossProductCategoryVo);
        return result;
      }
    }

    public static class productCategoryProductInput<I extends Iface> extends org.apache.thrift.ProcessFunction<I, productCategoryProductInput_args> {
      public productCategoryProductInput() {
        super("productCategoryProductInput");
      }

      public productCategoryProductInput_args getEmptyArgsInstance() {
        return new productCategoryProductInput_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public productCategoryProductInput_result getResult(I iface, productCategoryProductInput_args args) throws org.apache.thrift.TException {
        productCategoryProductInput_result result = new productCategoryProductInput_result();
        result.success = iface.productCategoryProductInput(args.originVo, args.inputType, args.vos);
        return result;
      }
    }

    public static class productCategoryDetailExport<I extends Iface> extends org.apache.thrift.ProcessFunction<I, productCategoryDetailExport_args> {
      public productCategoryDetailExport() {
        super("productCategoryDetailExport");
      }

      public productCategoryDetailExport_args getEmptyArgsInstance() {
        return new productCategoryDetailExport_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public productCategoryDetailExport_result getResult(I iface, productCategoryDetailExport_args args) throws org.apache.thrift.TException {
        productCategoryDetailExport_result result = new productCategoryDetailExport_result();
        result.success = iface.productCategoryDetailExport(args.originVo, args.ExportType, args.clientId, args.categoryId);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends com.froad.thrift.monitor.service.BizMonitorService.AsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("findAll", new findAll());
      processMap.put("getBossProductCategoryById", new getBossProductCategoryById());
      processMap.put("addBossProductCategoryVo", new addBossProductCategoryVo());
      processMap.put("updateBossProductCategoryVo", new updateBossProductCategoryVo());
      processMap.put("productCategoryProductInput", new productCategoryProductInput());
      processMap.put("productCategoryDetailExport", new productCategoryDetailExport());
      return processMap;
    }

    public static class findAll<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findAll_args, BossProductCategoryListRes> {
      public findAll() {
        super("findAll");
      }

      public findAll_args getEmptyArgsInstance() {
        return new findAll_args();
      }

      public AsyncMethodCallback<BossProductCategoryListRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<BossProductCategoryListRes>() { 
          public void onComplete(BossProductCategoryListRes o) {
            findAll_result result = new findAll_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findAll_result result = new findAll_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findAll_args args, org.apache.thrift.async.AsyncMethodCallback<BossProductCategoryListRes> resultHandler) throws TException {
        iface.findAll(args.originVo, args.clientId, args.iscludeDisable, args.isMall,resultHandler);
      }
    }

    public static class getBossProductCategoryById<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBossProductCategoryById_args, BossProductCategoryInfoRes> {
      public getBossProductCategoryById() {
        super("getBossProductCategoryById");
      }

      public getBossProductCategoryById_args getEmptyArgsInstance() {
        return new getBossProductCategoryById_args();
      }

      public AsyncMethodCallback<BossProductCategoryInfoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<BossProductCategoryInfoRes>() { 
          public void onComplete(BossProductCategoryInfoRes o) {
            getBossProductCategoryById_result result = new getBossProductCategoryById_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getBossProductCategoryById_result result = new getBossProductCategoryById_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBossProductCategoryById_args args, org.apache.thrift.async.AsyncMethodCallback<BossProductCategoryInfoRes> resultHandler) throws TException {
        iface.getBossProductCategoryById(args.originVo, args.id, args.clientId,resultHandler);
      }
    }

    public static class addBossProductCategoryVo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addBossProductCategoryVo_args, com.froad.thrift.vo.ResultVo> {
      public addBossProductCategoryVo() {
        super("addBossProductCategoryVo");
      }

      public addBossProductCategoryVo_args getEmptyArgsInstance() {
        return new addBossProductCategoryVo_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            addBossProductCategoryVo_result result = new addBossProductCategoryVo_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addBossProductCategoryVo_result result = new addBossProductCategoryVo_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addBossProductCategoryVo_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.addBossProductCategoryVo(args.originVo, args.bossProductCategoryVo,resultHandler);
      }
    }

    public static class updateBossProductCategoryVo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateBossProductCategoryVo_args, com.froad.thrift.vo.ResultVo> {
      public updateBossProductCategoryVo() {
        super("updateBossProductCategoryVo");
      }

      public updateBossProductCategoryVo_args getEmptyArgsInstance() {
        return new updateBossProductCategoryVo_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            updateBossProductCategoryVo_result result = new updateBossProductCategoryVo_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            updateBossProductCategoryVo_result result = new updateBossProductCategoryVo_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateBossProductCategoryVo_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.updateBossProductCategoryVo(args.originVo, args.bossProductCategoryVo,resultHandler);
      }
    }

    public static class productCategoryProductInput<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, productCategoryProductInput_args, com.froad.thrift.vo.ExportResultRes> {
      public productCategoryProductInput() {
        super("productCategoryProductInput");
      }

      public productCategoryProductInput_args getEmptyArgsInstance() {
        return new productCategoryProductInput_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes>() { 
          public void onComplete(com.froad.thrift.vo.ExportResultRes o) {
            productCategoryProductInput_result result = new productCategoryProductInput_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            productCategoryProductInput_result result = new productCategoryProductInput_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, productCategoryProductInput_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes> resultHandler) throws TException {
        iface.productCategoryProductInput(args.originVo, args.inputType, args.vos,resultHandler);
      }
    }

    public static class productCategoryDetailExport<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, productCategoryDetailExport_args, com.froad.thrift.vo.ExportResultRes> {
      public productCategoryDetailExport() {
        super("productCategoryDetailExport");
      }

      public productCategoryDetailExport_args getEmptyArgsInstance() {
        return new productCategoryDetailExport_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes>() { 
          public void onComplete(com.froad.thrift.vo.ExportResultRes o) {
            productCategoryDetailExport_result result = new productCategoryDetailExport_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            productCategoryDetailExport_result result = new productCategoryDetailExport_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, productCategoryDetailExport_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes> resultHandler) throws TException {
        iface.productCategoryDetailExport(args.originVo, args.ExportType, args.clientId, args.categoryId,resultHandler);
      }
    }

  }

  public static class findAll_args implements org.apache.thrift.TBase<findAll_args, findAll_args._Fields>, java.io.Serializable, Cloneable, Comparable<findAll_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findAll_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField ISCLUDE_DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("iscludeDisable", org.apache.thrift.protocol.TType.BOOL, (short)3);
    private static final org.apache.thrift.protocol.TField IS_MALL_FIELD_DESC = new org.apache.thrift.protocol.TField("isMall", org.apache.thrift.protocol.TType.BOOL, (short)4);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findAll_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findAll_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public String clientId; // required
    public boolean iscludeDisable; // required
    public boolean isMall; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      CLIENT_ID((short)2, "clientId"),
      ISCLUDE_DISABLE((short)3, "iscludeDisable"),
      IS_MALL((short)4, "isMall");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // CLIENT_ID
            return CLIENT_ID;
          case 3: // ISCLUDE_DISABLE
            return ISCLUDE_DISABLE;
          case 4: // IS_MALL
            return IS_MALL;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ISCLUDEDISABLE_ISSET_ID = 0;
    private static final int __ISMALL_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ISCLUDE_DISABLE, new org.apache.thrift.meta_data.FieldMetaData("iscludeDisable", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.IS_MALL, new org.apache.thrift.meta_data.FieldMetaData("isMall", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findAll_args.class, metaDataMap);
    }

    public findAll_args() {
    }

    public findAll_args(
      com.froad.thrift.vo.OriginVo originVo,
      String clientId,
      boolean iscludeDisable,
      boolean isMall)
    {
      this();
      this.originVo = originVo;
      this.clientId = clientId;
      this.iscludeDisable = iscludeDisable;
      setIscludeDisableIsSet(true);
      this.isMall = isMall;
      setIsMallIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findAll_args(findAll_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetClientId()) {
        this.clientId = other.clientId;
      }
      this.iscludeDisable = other.iscludeDisable;
      this.isMall = other.isMall;
    }

    public findAll_args deepCopy() {
      return new findAll_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.clientId = null;
      setIscludeDisableIsSet(false);
      this.iscludeDisable = false;
      setIsMallIsSet(false);
      this.isMall = false;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public findAll_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public String getClientId() {
      return this.clientId;
    }

    public findAll_args setClientId(String clientId) {
      this.clientId = clientId;
      return this;
    }

    public void unsetClientId() {
      this.clientId = null;
    }

    /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
    public boolean isSetClientId() {
      return this.clientId != null;
    }

    public void setClientIdIsSet(boolean value) {
      if (!value) {
        this.clientId = null;
      }
    }

    public boolean isIscludeDisable() {
      return this.iscludeDisable;
    }

    public findAll_args setIscludeDisable(boolean iscludeDisable) {
      this.iscludeDisable = iscludeDisable;
      setIscludeDisableIsSet(true);
      return this;
    }

    public void unsetIscludeDisable() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISCLUDEDISABLE_ISSET_ID);
    }

    /** Returns true if field iscludeDisable is set (has been assigned a value) and false otherwise */
    public boolean isSetIscludeDisable() {
      return EncodingUtils.testBit(__isset_bitfield, __ISCLUDEDISABLE_ISSET_ID);
    }

    public void setIscludeDisableIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISCLUDEDISABLE_ISSET_ID, value);
    }

    public boolean isIsMall() {
      return this.isMall;
    }

    public findAll_args setIsMall(boolean isMall) {
      this.isMall = isMall;
      setIsMallIsSet(true);
      return this;
    }

    public void unsetIsMall() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISMALL_ISSET_ID);
    }

    /** Returns true if field isMall is set (has been assigned a value) and false otherwise */
    public boolean isSetIsMall() {
      return EncodingUtils.testBit(__isset_bitfield, __ISMALL_ISSET_ID);
    }

    public void setIsMallIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISMALL_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case CLIENT_ID:
        if (value == null) {
          unsetClientId();
        } else {
          setClientId((String)value);
        }
        break;

      case ISCLUDE_DISABLE:
        if (value == null) {
          unsetIscludeDisable();
        } else {
          setIscludeDisable((Boolean)value);
        }
        break;

      case IS_MALL:
        if (value == null) {
          unsetIsMall();
        } else {
          setIsMall((Boolean)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case CLIENT_ID:
        return getClientId();

      case ISCLUDE_DISABLE:
        return Boolean.valueOf(isIscludeDisable());

      case IS_MALL:
        return Boolean.valueOf(isIsMall());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case CLIENT_ID:
        return isSetClientId();
      case ISCLUDE_DISABLE:
        return isSetIscludeDisable();
      case IS_MALL:
        return isSetIsMall();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findAll_args)
        return this.equals((findAll_args)that);
      return false;
    }

    public boolean equals(findAll_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_clientId = true && this.isSetClientId();
      boolean that_present_clientId = true && that.isSetClientId();
      if (this_present_clientId || that_present_clientId) {
        if (!(this_present_clientId && that_present_clientId))
          return false;
        if (!this.clientId.equals(that.clientId))
          return false;
      }

      boolean this_present_iscludeDisable = true;
      boolean that_present_iscludeDisable = true;
      if (this_present_iscludeDisable || that_present_iscludeDisable) {
        if (!(this_present_iscludeDisable && that_present_iscludeDisable))
          return false;
        if (this.iscludeDisable != that.iscludeDisable)
          return false;
      }

      boolean this_present_isMall = true;
      boolean that_present_isMall = true;
      if (this_present_isMall || that_present_isMall) {
        if (!(this_present_isMall && that_present_isMall))
          return false;
        if (this.isMall != that.isMall)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_clientId = true && (isSetClientId());
      list.add(present_clientId);
      if (present_clientId)
        list.add(clientId);

      boolean present_iscludeDisable = true;
      list.add(present_iscludeDisable);
      if (present_iscludeDisable)
        list.add(iscludeDisable);

      boolean present_isMall = true;
      list.add(present_isMall);
      if (present_isMall)
        list.add(isMall);

      return list.hashCode();
    }

    @Override
    public int compareTo(findAll_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetIscludeDisable()).compareTo(other.isSetIscludeDisable());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIscludeDisable()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.iscludeDisable, other.iscludeDisable);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetIsMall()).compareTo(other.isSetIsMall());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIsMall()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isMall, other.isMall);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findAll_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("iscludeDisable:");
      sb.append(this.iscludeDisable);
      first = false;
      if (!first) sb.append(", ");
      sb.append("isMall:");
      sb.append(this.isMall);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findAll_argsStandardSchemeFactory implements SchemeFactory {
      public findAll_argsStandardScheme getScheme() {
        return new findAll_argsStandardScheme();
      }
    }

    private static class findAll_argsStandardScheme extends StandardScheme<findAll_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findAll_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CLIENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.clientId = iprot.readString();
                struct.setClientIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // ISCLUDE_DISABLE
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.iscludeDisable = iprot.readBool();
                struct.setIscludeDisableIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // IS_MALL
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.isMall = iprot.readBool();
                struct.setIsMallIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findAll_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.clientId != null) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ISCLUDE_DISABLE_FIELD_DESC);
        oprot.writeBool(struct.iscludeDisable);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(IS_MALL_FIELD_DESC);
        oprot.writeBool(struct.isMall);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findAll_argsTupleSchemeFactory implements SchemeFactory {
      public findAll_argsTupleScheme getScheme() {
        return new findAll_argsTupleScheme();
      }
    }

    private static class findAll_argsTupleScheme extends TupleScheme<findAll_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findAll_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetClientId()) {
          optionals.set(1);
        }
        if (struct.isSetIscludeDisable()) {
          optionals.set(2);
        }
        if (struct.isSetIsMall()) {
          optionals.set(3);
        }
        oprot.writeBitSet(optionals, 4);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetClientId()) {
          oprot.writeString(struct.clientId);
        }
        if (struct.isSetIscludeDisable()) {
          oprot.writeBool(struct.iscludeDisable);
        }
        if (struct.isSetIsMall()) {
          oprot.writeBool(struct.isMall);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findAll_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(4);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.clientId = iprot.readString();
          struct.setClientIdIsSet(true);
        }
        if (incoming.get(2)) {
          struct.iscludeDisable = iprot.readBool();
          struct.setIscludeDisableIsSet(true);
        }
        if (incoming.get(3)) {
          struct.isMall = iprot.readBool();
          struct.setIsMallIsSet(true);
        }
      }
    }

  }

  public static class findAll_result implements org.apache.thrift.TBase<findAll_result, findAll_result._Fields>, java.io.Serializable, Cloneable, Comparable<findAll_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findAll_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findAll_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findAll_resultTupleSchemeFactory());
    }

    public BossProductCategoryListRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BossProductCategoryListRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findAll_result.class, metaDataMap);
    }

    public findAll_result() {
    }

    public findAll_result(
      BossProductCategoryListRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findAll_result(findAll_result other) {
      if (other.isSetSuccess()) {
        this.success = new BossProductCategoryListRes(other.success);
      }
    }

    public findAll_result deepCopy() {
      return new findAll_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public BossProductCategoryListRes getSuccess() {
      return this.success;
    }

    public findAll_result setSuccess(BossProductCategoryListRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((BossProductCategoryListRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findAll_result)
        return this.equals((findAll_result)that);
      return false;
    }

    public boolean equals(findAll_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findAll_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findAll_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findAll_resultStandardSchemeFactory implements SchemeFactory {
      public findAll_resultStandardScheme getScheme() {
        return new findAll_resultStandardScheme();
      }
    }

    private static class findAll_resultStandardScheme extends StandardScheme<findAll_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findAll_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new BossProductCategoryListRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findAll_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findAll_resultTupleSchemeFactory implements SchemeFactory {
      public findAll_resultTupleScheme getScheme() {
        return new findAll_resultTupleScheme();
      }
    }

    private static class findAll_resultTupleScheme extends TupleScheme<findAll_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findAll_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findAll_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new BossProductCategoryListRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getBossProductCategoryById_args implements org.apache.thrift.TBase<getBossProductCategoryById_args, getBossProductCategoryById_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBossProductCategoryById_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBossProductCategoryById_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)2);
    private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBossProductCategoryById_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBossProductCategoryById_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public long id; // required
    public String clientId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      ID((short)2, "id"),
      CLIENT_ID((short)3, "clientId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // ID
            return ID;
          case 3: // CLIENT_ID
            return CLIENT_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBossProductCategoryById_args.class, metaDataMap);
    }

    public getBossProductCategoryById_args() {
    }

    public getBossProductCategoryById_args(
      com.froad.thrift.vo.OriginVo originVo,
      long id,
      String clientId)
    {
      this();
      this.originVo = originVo;
      this.id = id;
      setIdIsSet(true);
      this.clientId = clientId;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBossProductCategoryById_args(getBossProductCategoryById_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      this.id = other.id;
      if (other.isSetClientId()) {
        this.clientId = other.clientId;
      }
    }

    public getBossProductCategoryById_args deepCopy() {
      return new getBossProductCategoryById_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      setIdIsSet(false);
      this.id = 0;
      this.clientId = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public getBossProductCategoryById_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public long getId() {
      return this.id;
    }

    public getBossProductCategoryById_args setId(long id) {
      this.id = id;
      setIdIsSet(true);
      return this;
    }

    public void unsetId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public String getClientId() {
      return this.clientId;
    }

    public getBossProductCategoryById_args setClientId(String clientId) {
      this.clientId = clientId;
      return this;
    }

    public void unsetClientId() {
      this.clientId = null;
    }

    /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
    public boolean isSetClientId() {
      return this.clientId != null;
    }

    public void setClientIdIsSet(boolean value) {
      if (!value) {
        this.clientId = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((Long)value);
        }
        break;

      case CLIENT_ID:
        if (value == null) {
          unsetClientId();
        } else {
          setClientId((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case ID:
        return Long.valueOf(getId());

      case CLIENT_ID:
        return getClientId();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case ID:
        return isSetId();
      case CLIENT_ID:
        return isSetClientId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBossProductCategoryById_args)
        return this.equals((getBossProductCategoryById_args)that);
      return false;
    }

    public boolean equals(getBossProductCategoryById_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_id = true;
      boolean that_present_id = true;
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (this.id != that.id)
          return false;
      }

      boolean this_present_clientId = true && this.isSetClientId();
      boolean that_present_clientId = true && that.isSetClientId();
      if (this_present_clientId || that_present_clientId) {
        if (!(this_present_clientId && that_present_clientId))
          return false;
        if (!this.clientId.equals(that.clientId))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_id = true;
      list.add(present_id);
      if (present_id)
        list.add(id);

      boolean present_clientId = true && (isSetClientId());
      list.add(present_clientId);
      if (present_clientId)
        list.add(clientId);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBossProductCategoryById_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBossProductCategoryById_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBossProductCategoryById_argsStandardSchemeFactory implements SchemeFactory {
      public getBossProductCategoryById_argsStandardScheme getScheme() {
        return new getBossProductCategoryById_argsStandardScheme();
      }
    }

    private static class getBossProductCategoryById_argsStandardScheme extends StandardScheme<getBossProductCategoryById_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBossProductCategoryById_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.id = iprot.readI64();
                struct.setIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // CLIENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.clientId = iprot.readString();
                struct.setClientIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBossProductCategoryById_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
        if (struct.clientId != null) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBossProductCategoryById_argsTupleSchemeFactory implements SchemeFactory {
      public getBossProductCategoryById_argsTupleScheme getScheme() {
        return new getBossProductCategoryById_argsTupleScheme();
      }
    }

    private static class getBossProductCategoryById_argsTupleScheme extends TupleScheme<getBossProductCategoryById_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBossProductCategoryById_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetId()) {
          optionals.set(1);
        }
        if (struct.isSetClientId()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetId()) {
          oprot.writeI64(struct.id);
        }
        if (struct.isSetClientId()) {
          oprot.writeString(struct.clientId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBossProductCategoryById_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.id = iprot.readI64();
          struct.setIdIsSet(true);
        }
        if (incoming.get(2)) {
          struct.clientId = iprot.readString();
          struct.setClientIdIsSet(true);
        }
      }
    }

  }

  public static class getBossProductCategoryById_result implements org.apache.thrift.TBase<getBossProductCategoryById_result, getBossProductCategoryById_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBossProductCategoryById_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBossProductCategoryById_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBossProductCategoryById_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBossProductCategoryById_resultTupleSchemeFactory());
    }

    public BossProductCategoryInfoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BossProductCategoryInfoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBossProductCategoryById_result.class, metaDataMap);
    }

    public getBossProductCategoryById_result() {
    }

    public getBossProductCategoryById_result(
      BossProductCategoryInfoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBossProductCategoryById_result(getBossProductCategoryById_result other) {
      if (other.isSetSuccess()) {
        this.success = new BossProductCategoryInfoRes(other.success);
      }
    }

    public getBossProductCategoryById_result deepCopy() {
      return new getBossProductCategoryById_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public BossProductCategoryInfoRes getSuccess() {
      return this.success;
    }

    public getBossProductCategoryById_result setSuccess(BossProductCategoryInfoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((BossProductCategoryInfoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBossProductCategoryById_result)
        return this.equals((getBossProductCategoryById_result)that);
      return false;
    }

    public boolean equals(getBossProductCategoryById_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBossProductCategoryById_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBossProductCategoryById_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBossProductCategoryById_resultStandardSchemeFactory implements SchemeFactory {
      public getBossProductCategoryById_resultStandardScheme getScheme() {
        return new getBossProductCategoryById_resultStandardScheme();
      }
    }

    private static class getBossProductCategoryById_resultStandardScheme extends StandardScheme<getBossProductCategoryById_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBossProductCategoryById_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new BossProductCategoryInfoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBossProductCategoryById_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBossProductCategoryById_resultTupleSchemeFactory implements SchemeFactory {
      public getBossProductCategoryById_resultTupleScheme getScheme() {
        return new getBossProductCategoryById_resultTupleScheme();
      }
    }

    private static class getBossProductCategoryById_resultTupleScheme extends TupleScheme<getBossProductCategoryById_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBossProductCategoryById_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBossProductCategoryById_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new BossProductCategoryInfoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class addBossProductCategoryVo_args implements org.apache.thrift.TBase<addBossProductCategoryVo_args, addBossProductCategoryVo_args._Fields>, java.io.Serializable, Cloneable, Comparable<addBossProductCategoryVo_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addBossProductCategoryVo_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField BOSS_PRODUCT_CATEGORY_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bossProductCategoryVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addBossProductCategoryVo_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addBossProductCategoryVo_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public BossProductCategoryVo bossProductCategoryVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      BOSS_PRODUCT_CATEGORY_VO((short)2, "bossProductCategoryVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // BOSS_PRODUCT_CATEGORY_VO
            return BOSS_PRODUCT_CATEGORY_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.BOSS_PRODUCT_CATEGORY_VO, new org.apache.thrift.meta_data.FieldMetaData("bossProductCategoryVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BossProductCategoryVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addBossProductCategoryVo_args.class, metaDataMap);
    }

    public addBossProductCategoryVo_args() {
    }

    public addBossProductCategoryVo_args(
      com.froad.thrift.vo.OriginVo originVo,
      BossProductCategoryVo bossProductCategoryVo)
    {
      this();
      this.originVo = originVo;
      this.bossProductCategoryVo = bossProductCategoryVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addBossProductCategoryVo_args(addBossProductCategoryVo_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetBossProductCategoryVo()) {
        this.bossProductCategoryVo = new BossProductCategoryVo(other.bossProductCategoryVo);
      }
    }

    public addBossProductCategoryVo_args deepCopy() {
      return new addBossProductCategoryVo_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.bossProductCategoryVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public addBossProductCategoryVo_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public BossProductCategoryVo getBossProductCategoryVo() {
      return this.bossProductCategoryVo;
    }

    public addBossProductCategoryVo_args setBossProductCategoryVo(BossProductCategoryVo bossProductCategoryVo) {
      this.bossProductCategoryVo = bossProductCategoryVo;
      return this;
    }

    public void unsetBossProductCategoryVo() {
      this.bossProductCategoryVo = null;
    }

    /** Returns true if field bossProductCategoryVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBossProductCategoryVo() {
      return this.bossProductCategoryVo != null;
    }

    public void setBossProductCategoryVoIsSet(boolean value) {
      if (!value) {
        this.bossProductCategoryVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case BOSS_PRODUCT_CATEGORY_VO:
        if (value == null) {
          unsetBossProductCategoryVo();
        } else {
          setBossProductCategoryVo((BossProductCategoryVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case BOSS_PRODUCT_CATEGORY_VO:
        return getBossProductCategoryVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case BOSS_PRODUCT_CATEGORY_VO:
        return isSetBossProductCategoryVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addBossProductCategoryVo_args)
        return this.equals((addBossProductCategoryVo_args)that);
      return false;
    }

    public boolean equals(addBossProductCategoryVo_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_bossProductCategoryVo = true && this.isSetBossProductCategoryVo();
      boolean that_present_bossProductCategoryVo = true && that.isSetBossProductCategoryVo();
      if (this_present_bossProductCategoryVo || that_present_bossProductCategoryVo) {
        if (!(this_present_bossProductCategoryVo && that_present_bossProductCategoryVo))
          return false;
        if (!this.bossProductCategoryVo.equals(that.bossProductCategoryVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_bossProductCategoryVo = true && (isSetBossProductCategoryVo());
      list.add(present_bossProductCategoryVo);
      if (present_bossProductCategoryVo)
        list.add(bossProductCategoryVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(addBossProductCategoryVo_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetBossProductCategoryVo()).compareTo(other.isSetBossProductCategoryVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBossProductCategoryVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bossProductCategoryVo, other.bossProductCategoryVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addBossProductCategoryVo_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("bossProductCategoryVo:");
      if (this.bossProductCategoryVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bossProductCategoryVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (bossProductCategoryVo != null) {
        bossProductCategoryVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addBossProductCategoryVo_argsStandardSchemeFactory implements SchemeFactory {
      public addBossProductCategoryVo_argsStandardScheme getScheme() {
        return new addBossProductCategoryVo_argsStandardScheme();
      }
    }

    private static class addBossProductCategoryVo_argsStandardScheme extends StandardScheme<addBossProductCategoryVo_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addBossProductCategoryVo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // BOSS_PRODUCT_CATEGORY_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bossProductCategoryVo = new BossProductCategoryVo();
                struct.bossProductCategoryVo.read(iprot);
                struct.setBossProductCategoryVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addBossProductCategoryVo_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.bossProductCategoryVo != null) {
          oprot.writeFieldBegin(BOSS_PRODUCT_CATEGORY_VO_FIELD_DESC);
          struct.bossProductCategoryVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addBossProductCategoryVo_argsTupleSchemeFactory implements SchemeFactory {
      public addBossProductCategoryVo_argsTupleScheme getScheme() {
        return new addBossProductCategoryVo_argsTupleScheme();
      }
    }

    private static class addBossProductCategoryVo_argsTupleScheme extends TupleScheme<addBossProductCategoryVo_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addBossProductCategoryVo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetBossProductCategoryVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetBossProductCategoryVo()) {
          struct.bossProductCategoryVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addBossProductCategoryVo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.bossProductCategoryVo = new BossProductCategoryVo();
          struct.bossProductCategoryVo.read(iprot);
          struct.setBossProductCategoryVoIsSet(true);
        }
      }
    }

  }

  public static class addBossProductCategoryVo_result implements org.apache.thrift.TBase<addBossProductCategoryVo_result, addBossProductCategoryVo_result._Fields>, java.io.Serializable, Cloneable, Comparable<addBossProductCategoryVo_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addBossProductCategoryVo_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addBossProductCategoryVo_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addBossProductCategoryVo_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addBossProductCategoryVo_result.class, metaDataMap);
    }

    public addBossProductCategoryVo_result() {
    }

    public addBossProductCategoryVo_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addBossProductCategoryVo_result(addBossProductCategoryVo_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public addBossProductCategoryVo_result deepCopy() {
      return new addBossProductCategoryVo_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public addBossProductCategoryVo_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addBossProductCategoryVo_result)
        return this.equals((addBossProductCategoryVo_result)that);
      return false;
    }

    public boolean equals(addBossProductCategoryVo_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(addBossProductCategoryVo_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addBossProductCategoryVo_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addBossProductCategoryVo_resultStandardSchemeFactory implements SchemeFactory {
      public addBossProductCategoryVo_resultStandardScheme getScheme() {
        return new addBossProductCategoryVo_resultStandardScheme();
      }
    }

    private static class addBossProductCategoryVo_resultStandardScheme extends StandardScheme<addBossProductCategoryVo_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addBossProductCategoryVo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addBossProductCategoryVo_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addBossProductCategoryVo_resultTupleSchemeFactory implements SchemeFactory {
      public addBossProductCategoryVo_resultTupleScheme getScheme() {
        return new addBossProductCategoryVo_resultTupleScheme();
      }
    }

    private static class addBossProductCategoryVo_resultTupleScheme extends TupleScheme<addBossProductCategoryVo_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addBossProductCategoryVo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addBossProductCategoryVo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class updateBossProductCategoryVo_args implements org.apache.thrift.TBase<updateBossProductCategoryVo_args, updateBossProductCategoryVo_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateBossProductCategoryVo_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateBossProductCategoryVo_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField BOSS_PRODUCT_CATEGORY_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bossProductCategoryVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateBossProductCategoryVo_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateBossProductCategoryVo_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public BossProductCategoryVo bossProductCategoryVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      BOSS_PRODUCT_CATEGORY_VO((short)2, "bossProductCategoryVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // BOSS_PRODUCT_CATEGORY_VO
            return BOSS_PRODUCT_CATEGORY_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.BOSS_PRODUCT_CATEGORY_VO, new org.apache.thrift.meta_data.FieldMetaData("bossProductCategoryVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BossProductCategoryVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateBossProductCategoryVo_args.class, metaDataMap);
    }

    public updateBossProductCategoryVo_args() {
    }

    public updateBossProductCategoryVo_args(
      com.froad.thrift.vo.OriginVo originVo,
      BossProductCategoryVo bossProductCategoryVo)
    {
      this();
      this.originVo = originVo;
      this.bossProductCategoryVo = bossProductCategoryVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateBossProductCategoryVo_args(updateBossProductCategoryVo_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetBossProductCategoryVo()) {
        this.bossProductCategoryVo = new BossProductCategoryVo(other.bossProductCategoryVo);
      }
    }

    public updateBossProductCategoryVo_args deepCopy() {
      return new updateBossProductCategoryVo_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.bossProductCategoryVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public updateBossProductCategoryVo_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public BossProductCategoryVo getBossProductCategoryVo() {
      return this.bossProductCategoryVo;
    }

    public updateBossProductCategoryVo_args setBossProductCategoryVo(BossProductCategoryVo bossProductCategoryVo) {
      this.bossProductCategoryVo = bossProductCategoryVo;
      return this;
    }

    public void unsetBossProductCategoryVo() {
      this.bossProductCategoryVo = null;
    }

    /** Returns true if field bossProductCategoryVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBossProductCategoryVo() {
      return this.bossProductCategoryVo != null;
    }

    public void setBossProductCategoryVoIsSet(boolean value) {
      if (!value) {
        this.bossProductCategoryVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case BOSS_PRODUCT_CATEGORY_VO:
        if (value == null) {
          unsetBossProductCategoryVo();
        } else {
          setBossProductCategoryVo((BossProductCategoryVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case BOSS_PRODUCT_CATEGORY_VO:
        return getBossProductCategoryVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case BOSS_PRODUCT_CATEGORY_VO:
        return isSetBossProductCategoryVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateBossProductCategoryVo_args)
        return this.equals((updateBossProductCategoryVo_args)that);
      return false;
    }

    public boolean equals(updateBossProductCategoryVo_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_bossProductCategoryVo = true && this.isSetBossProductCategoryVo();
      boolean that_present_bossProductCategoryVo = true && that.isSetBossProductCategoryVo();
      if (this_present_bossProductCategoryVo || that_present_bossProductCategoryVo) {
        if (!(this_present_bossProductCategoryVo && that_present_bossProductCategoryVo))
          return false;
        if (!this.bossProductCategoryVo.equals(that.bossProductCategoryVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_bossProductCategoryVo = true && (isSetBossProductCategoryVo());
      list.add(present_bossProductCategoryVo);
      if (present_bossProductCategoryVo)
        list.add(bossProductCategoryVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateBossProductCategoryVo_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetBossProductCategoryVo()).compareTo(other.isSetBossProductCategoryVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBossProductCategoryVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bossProductCategoryVo, other.bossProductCategoryVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateBossProductCategoryVo_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("bossProductCategoryVo:");
      if (this.bossProductCategoryVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bossProductCategoryVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (bossProductCategoryVo != null) {
        bossProductCategoryVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateBossProductCategoryVo_argsStandardSchemeFactory implements SchemeFactory {
      public updateBossProductCategoryVo_argsStandardScheme getScheme() {
        return new updateBossProductCategoryVo_argsStandardScheme();
      }
    }

    private static class updateBossProductCategoryVo_argsStandardScheme extends StandardScheme<updateBossProductCategoryVo_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateBossProductCategoryVo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // BOSS_PRODUCT_CATEGORY_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bossProductCategoryVo = new BossProductCategoryVo();
                struct.bossProductCategoryVo.read(iprot);
                struct.setBossProductCategoryVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateBossProductCategoryVo_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.bossProductCategoryVo != null) {
          oprot.writeFieldBegin(BOSS_PRODUCT_CATEGORY_VO_FIELD_DESC);
          struct.bossProductCategoryVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateBossProductCategoryVo_argsTupleSchemeFactory implements SchemeFactory {
      public updateBossProductCategoryVo_argsTupleScheme getScheme() {
        return new updateBossProductCategoryVo_argsTupleScheme();
      }
    }

    private static class updateBossProductCategoryVo_argsTupleScheme extends TupleScheme<updateBossProductCategoryVo_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateBossProductCategoryVo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetBossProductCategoryVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetBossProductCategoryVo()) {
          struct.bossProductCategoryVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateBossProductCategoryVo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.bossProductCategoryVo = new BossProductCategoryVo();
          struct.bossProductCategoryVo.read(iprot);
          struct.setBossProductCategoryVoIsSet(true);
        }
      }
    }

  }

  public static class updateBossProductCategoryVo_result implements org.apache.thrift.TBase<updateBossProductCategoryVo_result, updateBossProductCategoryVo_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateBossProductCategoryVo_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateBossProductCategoryVo_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateBossProductCategoryVo_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateBossProductCategoryVo_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateBossProductCategoryVo_result.class, metaDataMap);
    }

    public updateBossProductCategoryVo_result() {
    }

    public updateBossProductCategoryVo_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateBossProductCategoryVo_result(updateBossProductCategoryVo_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public updateBossProductCategoryVo_result deepCopy() {
      return new updateBossProductCategoryVo_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public updateBossProductCategoryVo_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateBossProductCategoryVo_result)
        return this.equals((updateBossProductCategoryVo_result)that);
      return false;
    }

    public boolean equals(updateBossProductCategoryVo_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateBossProductCategoryVo_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateBossProductCategoryVo_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateBossProductCategoryVo_resultStandardSchemeFactory implements SchemeFactory {
      public updateBossProductCategoryVo_resultStandardScheme getScheme() {
        return new updateBossProductCategoryVo_resultStandardScheme();
      }
    }

    private static class updateBossProductCategoryVo_resultStandardScheme extends StandardScheme<updateBossProductCategoryVo_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateBossProductCategoryVo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateBossProductCategoryVo_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateBossProductCategoryVo_resultTupleSchemeFactory implements SchemeFactory {
      public updateBossProductCategoryVo_resultTupleScheme getScheme() {
        return new updateBossProductCategoryVo_resultTupleScheme();
      }
    }

    private static class updateBossProductCategoryVo_resultTupleScheme extends TupleScheme<updateBossProductCategoryVo_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateBossProductCategoryVo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateBossProductCategoryVo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class productCategoryProductInput_args implements org.apache.thrift.TBase<productCategoryProductInput_args, productCategoryProductInput_args._Fields>, java.io.Serializable, Cloneable, Comparable<productCategoryProductInput_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("productCategoryProductInput_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField INPUT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("inputType", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField VOS_FIELD_DESC = new org.apache.thrift.protocol.TField("vos", org.apache.thrift.protocol.TType.LIST, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new productCategoryProductInput_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new productCategoryProductInput_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public String inputType; // required
    public List<ProductCategoryVo> vos; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      INPUT_TYPE((short)2, "inputType"),
      VOS((short)3, "vos");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // INPUT_TYPE
            return INPUT_TYPE;
          case 3: // VOS
            return VOS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.INPUT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("inputType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.VOS, new org.apache.thrift.meta_data.FieldMetaData("vos", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProductCategoryVo.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(productCategoryProductInput_args.class, metaDataMap);
    }

    public productCategoryProductInput_args() {
    }

    public productCategoryProductInput_args(
      com.froad.thrift.vo.OriginVo originVo,
      String inputType,
      List<ProductCategoryVo> vos)
    {
      this();
      this.originVo = originVo;
      this.inputType = inputType;
      this.vos = vos;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public productCategoryProductInput_args(productCategoryProductInput_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetInputType()) {
        this.inputType = other.inputType;
      }
      if (other.isSetVos()) {
        List<ProductCategoryVo> __this__vos = new ArrayList<ProductCategoryVo>(other.vos.size());
        for (ProductCategoryVo other_element : other.vos) {
          __this__vos.add(new ProductCategoryVo(other_element));
        }
        this.vos = __this__vos;
      }
    }

    public productCategoryProductInput_args deepCopy() {
      return new productCategoryProductInput_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.inputType = null;
      this.vos = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public productCategoryProductInput_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public String getInputType() {
      return this.inputType;
    }

    public productCategoryProductInput_args setInputType(String inputType) {
      this.inputType = inputType;
      return this;
    }

    public void unsetInputType() {
      this.inputType = null;
    }

    /** Returns true if field inputType is set (has been assigned a value) and false otherwise */
    public boolean isSetInputType() {
      return this.inputType != null;
    }

    public void setInputTypeIsSet(boolean value) {
      if (!value) {
        this.inputType = null;
      }
    }

    public int getVosSize() {
      return (this.vos == null) ? 0 : this.vos.size();
    }

    public java.util.Iterator<ProductCategoryVo> getVosIterator() {
      return (this.vos == null) ? null : this.vos.iterator();
    }

    public void addToVos(ProductCategoryVo elem) {
      if (this.vos == null) {
        this.vos = new ArrayList<ProductCategoryVo>();
      }
      this.vos.add(elem);
    }

    public List<ProductCategoryVo> getVos() {
      return this.vos;
    }

    public productCategoryProductInput_args setVos(List<ProductCategoryVo> vos) {
      this.vos = vos;
      return this;
    }

    public void unsetVos() {
      this.vos = null;
    }

    /** Returns true if field vos is set (has been assigned a value) and false otherwise */
    public boolean isSetVos() {
      return this.vos != null;
    }

    public void setVosIsSet(boolean value) {
      if (!value) {
        this.vos = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case INPUT_TYPE:
        if (value == null) {
          unsetInputType();
        } else {
          setInputType((String)value);
        }
        break;

      case VOS:
        if (value == null) {
          unsetVos();
        } else {
          setVos((List<ProductCategoryVo>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case INPUT_TYPE:
        return getInputType();

      case VOS:
        return getVos();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case INPUT_TYPE:
        return isSetInputType();
      case VOS:
        return isSetVos();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof productCategoryProductInput_args)
        return this.equals((productCategoryProductInput_args)that);
      return false;
    }

    public boolean equals(productCategoryProductInput_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_inputType = true && this.isSetInputType();
      boolean that_present_inputType = true && that.isSetInputType();
      if (this_present_inputType || that_present_inputType) {
        if (!(this_present_inputType && that_present_inputType))
          return false;
        if (!this.inputType.equals(that.inputType))
          return false;
      }

      boolean this_present_vos = true && this.isSetVos();
      boolean that_present_vos = true && that.isSetVos();
      if (this_present_vos || that_present_vos) {
        if (!(this_present_vos && that_present_vos))
          return false;
        if (!this.vos.equals(that.vos))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_inputType = true && (isSetInputType());
      list.add(present_inputType);
      if (present_inputType)
        list.add(inputType);

      boolean present_vos = true && (isSetVos());
      list.add(present_vos);
      if (present_vos)
        list.add(vos);

      return list.hashCode();
    }

    @Override
    public int compareTo(productCategoryProductInput_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetInputType()).compareTo(other.isSetInputType());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetInputType()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inputType, other.inputType);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetVos()).compareTo(other.isSetVos());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetVos()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vos, other.vos);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("productCategoryProductInput_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("inputType:");
      if (this.inputType == null) {
        sb.append("null");
      } else {
        sb.append(this.inputType);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("vos:");
      if (this.vos == null) {
        sb.append("null");
      } else {
        sb.append(this.vos);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class productCategoryProductInput_argsStandardSchemeFactory implements SchemeFactory {
      public productCategoryProductInput_argsStandardScheme getScheme() {
        return new productCategoryProductInput_argsStandardScheme();
      }
    }

    private static class productCategoryProductInput_argsStandardScheme extends StandardScheme<productCategoryProductInput_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, productCategoryProductInput_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // INPUT_TYPE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.inputType = iprot.readString();
                struct.setInputTypeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // VOS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                  struct.vos = new ArrayList<ProductCategoryVo>(_list8.size);
                  ProductCategoryVo _elem9;
                  for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                  {
                    _elem9 = new ProductCategoryVo();
                    _elem9.read(iprot);
                    struct.vos.add(_elem9);
                  }
                  iprot.readListEnd();
                }
                struct.setVosIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, productCategoryProductInput_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.inputType != null) {
          oprot.writeFieldBegin(INPUT_TYPE_FIELD_DESC);
          oprot.writeString(struct.inputType);
          oprot.writeFieldEnd();
        }
        if (struct.vos != null) {
          oprot.writeFieldBegin(VOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.vos.size()));
            for (ProductCategoryVo _iter11 : struct.vos)
            {
              _iter11.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class productCategoryProductInput_argsTupleSchemeFactory implements SchemeFactory {
      public productCategoryProductInput_argsTupleScheme getScheme() {
        return new productCategoryProductInput_argsTupleScheme();
      }
    }

    private static class productCategoryProductInput_argsTupleScheme extends TupleScheme<productCategoryProductInput_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, productCategoryProductInput_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetInputType()) {
          optionals.set(1);
        }
        if (struct.isSetVos()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetInputType()) {
          oprot.writeString(struct.inputType);
        }
        if (struct.isSetVos()) {
          {
            oprot.writeI32(struct.vos.size());
            for (ProductCategoryVo _iter12 : struct.vos)
            {
              _iter12.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, productCategoryProductInput_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.inputType = iprot.readString();
          struct.setInputTypeIsSet(true);
        }
        if (incoming.get(2)) {
          {
            org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.vos = new ArrayList<ProductCategoryVo>(_list13.size);
            ProductCategoryVo _elem14;
            for (int _i15 = 0; _i15 < _list13.size; ++_i15)
            {
              _elem14 = new ProductCategoryVo();
              _elem14.read(iprot);
              struct.vos.add(_elem14);
            }
          }
          struct.setVosIsSet(true);
        }
      }
    }

  }

  public static class productCategoryProductInput_result implements org.apache.thrift.TBase<productCategoryProductInput_result, productCategoryProductInput_result._Fields>, java.io.Serializable, Cloneable, Comparable<productCategoryProductInput_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("productCategoryProductInput_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new productCategoryProductInput_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new productCategoryProductInput_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ExportResultRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ExportResultRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(productCategoryProductInput_result.class, metaDataMap);
    }

    public productCategoryProductInput_result() {
    }

    public productCategoryProductInput_result(
      com.froad.thrift.vo.ExportResultRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public productCategoryProductInput_result(productCategoryProductInput_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ExportResultRes(other.success);
      }
    }

    public productCategoryProductInput_result deepCopy() {
      return new productCategoryProductInput_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ExportResultRes getSuccess() {
      return this.success;
    }

    public productCategoryProductInput_result setSuccess(com.froad.thrift.vo.ExportResultRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ExportResultRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof productCategoryProductInput_result)
        return this.equals((productCategoryProductInput_result)that);
      return false;
    }

    public boolean equals(productCategoryProductInput_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(productCategoryProductInput_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("productCategoryProductInput_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class productCategoryProductInput_resultStandardSchemeFactory implements SchemeFactory {
      public productCategoryProductInput_resultStandardScheme getScheme() {
        return new productCategoryProductInput_resultStandardScheme();
      }
    }

    private static class productCategoryProductInput_resultStandardScheme extends StandardScheme<productCategoryProductInput_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, productCategoryProductInput_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ExportResultRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, productCategoryProductInput_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class productCategoryProductInput_resultTupleSchemeFactory implements SchemeFactory {
      public productCategoryProductInput_resultTupleScheme getScheme() {
        return new productCategoryProductInput_resultTupleScheme();
      }
    }

    private static class productCategoryProductInput_resultTupleScheme extends TupleScheme<productCategoryProductInput_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, productCategoryProductInput_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, productCategoryProductInput_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ExportResultRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class productCategoryDetailExport_args implements org.apache.thrift.TBase<productCategoryDetailExport_args, productCategoryDetailExport_args._Fields>, java.io.Serializable, Cloneable, Comparable<productCategoryDetailExport_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("productCategoryDetailExport_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField EXPORT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("ExportType", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField CATEGORY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryId", org.apache.thrift.protocol.TType.I64, (short)4);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new productCategoryDetailExport_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new productCategoryDetailExport_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public String ExportType; // required
    public String clientId; // required
    public long categoryId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      EXPORT_TYPE((short)2, "ExportType"),
      CLIENT_ID((short)3, "clientId"),
      CATEGORY_ID((short)4, "categoryId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // EXPORT_TYPE
            return EXPORT_TYPE;
          case 3: // CLIENT_ID
            return CLIENT_ID;
          case 4: // CATEGORY_ID
            return CATEGORY_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __CATEGORYID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.EXPORT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("ExportType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CATEGORY_ID, new org.apache.thrift.meta_data.FieldMetaData("categoryId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(productCategoryDetailExport_args.class, metaDataMap);
    }

    public productCategoryDetailExport_args() {
    }

    public productCategoryDetailExport_args(
      com.froad.thrift.vo.OriginVo originVo,
      String ExportType,
      String clientId,
      long categoryId)
    {
      this();
      this.originVo = originVo;
      this.ExportType = ExportType;
      this.clientId = clientId;
      this.categoryId = categoryId;
      setCategoryIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public productCategoryDetailExport_args(productCategoryDetailExport_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetExportType()) {
        this.ExportType = other.ExportType;
      }
      if (other.isSetClientId()) {
        this.clientId = other.clientId;
      }
      this.categoryId = other.categoryId;
    }

    public productCategoryDetailExport_args deepCopy() {
      return new productCategoryDetailExport_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.ExportType = null;
      this.clientId = null;
      setCategoryIdIsSet(false);
      this.categoryId = 0;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public productCategoryDetailExport_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public String getExportType() {
      return this.ExportType;
    }

    public productCategoryDetailExport_args setExportType(String ExportType) {
      this.ExportType = ExportType;
      return this;
    }

    public void unsetExportType() {
      this.ExportType = null;
    }

    /** Returns true if field ExportType is set (has been assigned a value) and false otherwise */
    public boolean isSetExportType() {
      return this.ExportType != null;
    }

    public void setExportTypeIsSet(boolean value) {
      if (!value) {
        this.ExportType = null;
      }
    }

    public String getClientId() {
      return this.clientId;
    }

    public productCategoryDetailExport_args setClientId(String clientId) {
      this.clientId = clientId;
      return this;
    }

    public void unsetClientId() {
      this.clientId = null;
    }

    /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
    public boolean isSetClientId() {
      return this.clientId != null;
    }

    public void setClientIdIsSet(boolean value) {
      if (!value) {
        this.clientId = null;
      }
    }

    public long getCategoryId() {
      return this.categoryId;
    }

    public productCategoryDetailExport_args setCategoryId(long categoryId) {
      this.categoryId = categoryId;
      setCategoryIdIsSet(true);
      return this;
    }

    public void unsetCategoryId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CATEGORYID_ISSET_ID);
    }

    /** Returns true if field categoryId is set (has been assigned a value) and false otherwise */
    public boolean isSetCategoryId() {
      return EncodingUtils.testBit(__isset_bitfield, __CATEGORYID_ISSET_ID);
    }

    public void setCategoryIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CATEGORYID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case EXPORT_TYPE:
        if (value == null) {
          unsetExportType();
        } else {
          setExportType((String)value);
        }
        break;

      case CLIENT_ID:
        if (value == null) {
          unsetClientId();
        } else {
          setClientId((String)value);
        }
        break;

      case CATEGORY_ID:
        if (value == null) {
          unsetCategoryId();
        } else {
          setCategoryId((Long)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case EXPORT_TYPE:
        return getExportType();

      case CLIENT_ID:
        return getClientId();

      case CATEGORY_ID:
        return Long.valueOf(getCategoryId());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case EXPORT_TYPE:
        return isSetExportType();
      case CLIENT_ID:
        return isSetClientId();
      case CATEGORY_ID:
        return isSetCategoryId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof productCategoryDetailExport_args)
        return this.equals((productCategoryDetailExport_args)that);
      return false;
    }

    public boolean equals(productCategoryDetailExport_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_ExportType = true && this.isSetExportType();
      boolean that_present_ExportType = true && that.isSetExportType();
      if (this_present_ExportType || that_present_ExportType) {
        if (!(this_present_ExportType && that_present_ExportType))
          return false;
        if (!this.ExportType.equals(that.ExportType))
          return false;
      }

      boolean this_present_clientId = true && this.isSetClientId();
      boolean that_present_clientId = true && that.isSetClientId();
      if (this_present_clientId || that_present_clientId) {
        if (!(this_present_clientId && that_present_clientId))
          return false;
        if (!this.clientId.equals(that.clientId))
          return false;
      }

      boolean this_present_categoryId = true;
      boolean that_present_categoryId = true;
      if (this_present_categoryId || that_present_categoryId) {
        if (!(this_present_categoryId && that_present_categoryId))
          return false;
        if (this.categoryId != that.categoryId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_ExportType = true && (isSetExportType());
      list.add(present_ExportType);
      if (present_ExportType)
        list.add(ExportType);

      boolean present_clientId = true && (isSetClientId());
      list.add(present_clientId);
      if (present_clientId)
        list.add(clientId);

      boolean present_categoryId = true;
      list.add(present_categoryId);
      if (present_categoryId)
        list.add(categoryId);

      return list.hashCode();
    }

    @Override
    public int compareTo(productCategoryDetailExport_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetExportType()).compareTo(other.isSetExportType());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetExportType()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ExportType, other.ExportType);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCategoryId()).compareTo(other.isSetCategoryId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCategoryId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryId, other.categoryId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("productCategoryDetailExport_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("ExportType:");
      if (this.ExportType == null) {
        sb.append("null");
      } else {
        sb.append(this.ExportType);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("categoryId:");
      sb.append(this.categoryId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class productCategoryDetailExport_argsStandardSchemeFactory implements SchemeFactory {
      public productCategoryDetailExport_argsStandardScheme getScheme() {
        return new productCategoryDetailExport_argsStandardScheme();
      }
    }

    private static class productCategoryDetailExport_argsStandardScheme extends StandardScheme<productCategoryDetailExport_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, productCategoryDetailExport_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // EXPORT_TYPE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.ExportType = iprot.readString();
                struct.setExportTypeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // CLIENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.clientId = iprot.readString();
                struct.setClientIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // CATEGORY_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.categoryId = iprot.readI64();
                struct.setCategoryIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, productCategoryDetailExport_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.ExportType != null) {
          oprot.writeFieldBegin(EXPORT_TYPE_FIELD_DESC);
          oprot.writeString(struct.ExportType);
          oprot.writeFieldEnd();
        }
        if (struct.clientId != null) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(CATEGORY_ID_FIELD_DESC);
        oprot.writeI64(struct.categoryId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class productCategoryDetailExport_argsTupleSchemeFactory implements SchemeFactory {
      public productCategoryDetailExport_argsTupleScheme getScheme() {
        return new productCategoryDetailExport_argsTupleScheme();
      }
    }

    private static class productCategoryDetailExport_argsTupleScheme extends TupleScheme<productCategoryDetailExport_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, productCategoryDetailExport_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetExportType()) {
          optionals.set(1);
        }
        if (struct.isSetClientId()) {
          optionals.set(2);
        }
        if (struct.isSetCategoryId()) {
          optionals.set(3);
        }
        oprot.writeBitSet(optionals, 4);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetExportType()) {
          oprot.writeString(struct.ExportType);
        }
        if (struct.isSetClientId()) {
          oprot.writeString(struct.clientId);
        }
        if (struct.isSetCategoryId()) {
          oprot.writeI64(struct.categoryId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, productCategoryDetailExport_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(4);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.ExportType = iprot.readString();
          struct.setExportTypeIsSet(true);
        }
        if (incoming.get(2)) {
          struct.clientId = iprot.readString();
          struct.setClientIdIsSet(true);
        }
        if (incoming.get(3)) {
          struct.categoryId = iprot.readI64();
          struct.setCategoryIdIsSet(true);
        }
      }
    }

  }

  public static class productCategoryDetailExport_result implements org.apache.thrift.TBase<productCategoryDetailExport_result, productCategoryDetailExport_result._Fields>, java.io.Serializable, Cloneable, Comparable<productCategoryDetailExport_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("productCategoryDetailExport_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new productCategoryDetailExport_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new productCategoryDetailExport_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ExportResultRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ExportResultRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(productCategoryDetailExport_result.class, metaDataMap);
    }

    public productCategoryDetailExport_result() {
    }

    public productCategoryDetailExport_result(
      com.froad.thrift.vo.ExportResultRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public productCategoryDetailExport_result(productCategoryDetailExport_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ExportResultRes(other.success);
      }
    }

    public productCategoryDetailExport_result deepCopy() {
      return new productCategoryDetailExport_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ExportResultRes getSuccess() {
      return this.success;
    }

    public productCategoryDetailExport_result setSuccess(com.froad.thrift.vo.ExportResultRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ExportResultRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof productCategoryDetailExport_result)
        return this.equals((productCategoryDetailExport_result)that);
      return false;
    }

    public boolean equals(productCategoryDetailExport_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(productCategoryDetailExport_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("productCategoryDetailExport_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class productCategoryDetailExport_resultStandardSchemeFactory implements SchemeFactory {
      public productCategoryDetailExport_resultStandardScheme getScheme() {
        return new productCategoryDetailExport_resultStandardScheme();
      }
    }

    private static class productCategoryDetailExport_resultStandardScheme extends StandardScheme<productCategoryDetailExport_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, productCategoryDetailExport_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ExportResultRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, productCategoryDetailExport_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class productCategoryDetailExport_resultTupleSchemeFactory implements SchemeFactory {
      public productCategoryDetailExport_resultTupleScheme getScheme() {
        return new productCategoryDetailExport_resultTupleScheme();
      }
    }

    private static class productCategoryDetailExport_resultTupleScheme extends TupleScheme<productCategoryDetailExport_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, productCategoryDetailExport_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, productCategoryDetailExport_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ExportResultRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
