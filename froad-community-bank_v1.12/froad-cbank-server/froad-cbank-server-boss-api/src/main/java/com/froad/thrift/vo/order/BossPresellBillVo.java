/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 预售账单vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-11-3")
public class BossPresellBillVo implements org.apache.thrift.TBase<BossPresellBillVo, BossPresellBillVo._Fields>, java.io.Serializable, Cloneable, Comparable<BossPresellBillVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BossPresellBillVo");

  private static final org.apache.thrift.protocol.TField SUB_ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("subOrderId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField BUY_QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("buyQuantity", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField PAYMENT_METHOD_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentMethod", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TOTAL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField CASH_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("cashAmount", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField BANK_POINT_FIELD_DESC = new org.apache.thrift.protocol.TField("bankPoint", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField FROAD_POINT_FIELD_DESC = new org.apache.thrift.protocol.TField("froadPoint", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField DELIVERY_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryOption", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CONSIGNEE_FIELD_DESC = new org.apache.thrift.protocol.TField("consignee", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CONSIGNEE_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("consigneePhone", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField CONSIGNEE_ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("consigneeOrgName", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField ORDER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("orderStatus", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField BILL_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("billNo", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField IS_EXISTS_REFUND_FIELD_DESC = new org.apache.thrift.protocol.TField("isExistsRefund", org.apache.thrift.protocol.TType.STRING, (short)18);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BossPresellBillVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BossPresellBillVoTupleSchemeFactory());
  }

  /**
   * 子订单编号
   */
  public String subOrderId; // required
  /**
   * 下单时间
   */
  public long createTime; // required
  /**
   * 商品名称
   */
  public String productName; // required
  /**
   * 购买数量
   */
  public int buyQuantity; // required
  /**
   * 支付方式；1：现金支付；2：联盟积分支付；3：银行积分支付；4：联盟积分+现金支付；5：银行积分+现金支付；6：赠送积分
   */
  public String paymentMethod; // required
  /**
   * 总价
   */
  public double totalPrice; // required
  /**
   * 现金
   */
  public double cashAmount; // required
  /**
   * 银行积分
   */
  public double bankPoint; // required
  /**
   * 联盟积分
   */
  public double froadPoint; // required
  /**
   * 配送方式
   */
  public String deliveryOption; // required
  /**
   * 配送地址
   */
  public String address; // required
  /**
   * 提（收）货人
   */
  public String consignee; // required
  /**
   * 提（收）货人电话
   */
  public String consigneePhone; // required
  /**
   * 所属行社
   */
  public String orgName; // required
  /**
   * 提货网点
   */
  public String consigneeOrgName; // required
  /**
   * 订单状态1:订单创建；2:订单用户关闭;3:订单系统关闭;4:订单支付中;5:订单支付失败;6:订单支付完成
   */
  public String orderStatus; // required
  /**
   * 账单号
   */
  public String billNo; // required
  /**
   * 当前子订单对应的大订单下时候有退款：0：有；1：没有
   */
  public String isExistsRefund; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 子订单编号
     */
    SUB_ORDER_ID((short)1, "subOrderId"),
    /**
     * 下单时间
     */
    CREATE_TIME((short)2, "createTime"),
    /**
     * 商品名称
     */
    PRODUCT_NAME((short)3, "productName"),
    /**
     * 购买数量
     */
    BUY_QUANTITY((short)4, "buyQuantity"),
    /**
     * 支付方式；1：现金支付；2：联盟积分支付；3：银行积分支付；4：联盟积分+现金支付；5：银行积分+现金支付；6：赠送积分
     */
    PAYMENT_METHOD((short)5, "paymentMethod"),
    /**
     * 总价
     */
    TOTAL_PRICE((short)6, "totalPrice"),
    /**
     * 现金
     */
    CASH_AMOUNT((short)7, "cashAmount"),
    /**
     * 银行积分
     */
    BANK_POINT((short)8, "bankPoint"),
    /**
     * 联盟积分
     */
    FROAD_POINT((short)9, "froadPoint"),
    /**
     * 配送方式
     */
    DELIVERY_OPTION((short)10, "deliveryOption"),
    /**
     * 配送地址
     */
    ADDRESS((short)11, "address"),
    /**
     * 提（收）货人
     */
    CONSIGNEE((short)12, "consignee"),
    /**
     * 提（收）货人电话
     */
    CONSIGNEE_PHONE((short)13, "consigneePhone"),
    /**
     * 所属行社
     */
    ORG_NAME((short)14, "orgName"),
    /**
     * 提货网点
     */
    CONSIGNEE_ORG_NAME((short)15, "consigneeOrgName"),
    /**
     * 订单状态1:订单创建；2:订单用户关闭;3:订单系统关闭;4:订单支付中;5:订单支付失败;6:订单支付完成
     */
    ORDER_STATUS((short)16, "orderStatus"),
    /**
     * 账单号
     */
    BILL_NO((short)17, "billNo"),
    /**
     * 当前子订单对应的大订单下时候有退款：0：有；1：没有
     */
    IS_EXISTS_REFUND((short)18, "isExistsRefund");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SUB_ORDER_ID
          return SUB_ORDER_ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 4: // BUY_QUANTITY
          return BUY_QUANTITY;
        case 5: // PAYMENT_METHOD
          return PAYMENT_METHOD;
        case 6: // TOTAL_PRICE
          return TOTAL_PRICE;
        case 7: // CASH_AMOUNT
          return CASH_AMOUNT;
        case 8: // BANK_POINT
          return BANK_POINT;
        case 9: // FROAD_POINT
          return FROAD_POINT;
        case 10: // DELIVERY_OPTION
          return DELIVERY_OPTION;
        case 11: // ADDRESS
          return ADDRESS;
        case 12: // CONSIGNEE
          return CONSIGNEE;
        case 13: // CONSIGNEE_PHONE
          return CONSIGNEE_PHONE;
        case 14: // ORG_NAME
          return ORG_NAME;
        case 15: // CONSIGNEE_ORG_NAME
          return CONSIGNEE_ORG_NAME;
        case 16: // ORDER_STATUS
          return ORDER_STATUS;
        case 17: // BILL_NO
          return BILL_NO;
        case 18: // IS_EXISTS_REFUND
          return IS_EXISTS_REFUND;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIME_ISSET_ID = 0;
  private static final int __BUYQUANTITY_ISSET_ID = 1;
  private static final int __TOTALPRICE_ISSET_ID = 2;
  private static final int __CASHAMOUNT_ISSET_ID = 3;
  private static final int __BANKPOINT_ISSET_ID = 4;
  private static final int __FROADPOINT_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SUB_ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("subOrderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUY_QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("buyQuantity", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAYMENT_METHOD, new org.apache.thrift.meta_data.FieldMetaData("paymentMethod", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("totalPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CASH_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("cashAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BANK_POINT, new org.apache.thrift.meta_data.FieldMetaData("bankPoint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.FROAD_POINT, new org.apache.thrift.meta_data.FieldMetaData("froadPoint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DELIVERY_OPTION, new org.apache.thrift.meta_data.FieldMetaData("deliveryOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONSIGNEE, new org.apache.thrift.meta_data.FieldMetaData("consignee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONSIGNEE_PHONE, new org.apache.thrift.meta_data.FieldMetaData("consigneePhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONSIGNEE_ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("consigneeOrgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("orderStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BILL_NO, new org.apache.thrift.meta_data.FieldMetaData("billNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_EXISTS_REFUND, new org.apache.thrift.meta_data.FieldMetaData("isExistsRefund", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BossPresellBillVo.class, metaDataMap);
  }

  public BossPresellBillVo() {
  }

  public BossPresellBillVo(
    String subOrderId,
    long createTime,
    String productName,
    int buyQuantity,
    String paymentMethod,
    double totalPrice,
    double cashAmount,
    double bankPoint,
    double froadPoint,
    String deliveryOption,
    String address,
    String consignee,
    String consigneePhone,
    String orgName,
    String consigneeOrgName,
    String orderStatus,
    String billNo,
    String isExistsRefund)
  {
    this();
    this.subOrderId = subOrderId;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.productName = productName;
    this.buyQuantity = buyQuantity;
    setBuyQuantityIsSet(true);
    this.paymentMethod = paymentMethod;
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    this.cashAmount = cashAmount;
    setCashAmountIsSet(true);
    this.bankPoint = bankPoint;
    setBankPointIsSet(true);
    this.froadPoint = froadPoint;
    setFroadPointIsSet(true);
    this.deliveryOption = deliveryOption;
    this.address = address;
    this.consignee = consignee;
    this.consigneePhone = consigneePhone;
    this.orgName = orgName;
    this.consigneeOrgName = consigneeOrgName;
    this.orderStatus = orderStatus;
    this.billNo = billNo;
    this.isExistsRefund = isExistsRefund;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BossPresellBillVo(BossPresellBillVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSubOrderId()) {
      this.subOrderId = other.subOrderId;
    }
    this.createTime = other.createTime;
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    this.buyQuantity = other.buyQuantity;
    if (other.isSetPaymentMethod()) {
      this.paymentMethod = other.paymentMethod;
    }
    this.totalPrice = other.totalPrice;
    this.cashAmount = other.cashAmount;
    this.bankPoint = other.bankPoint;
    this.froadPoint = other.froadPoint;
    if (other.isSetDeliveryOption()) {
      this.deliveryOption = other.deliveryOption;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetConsignee()) {
      this.consignee = other.consignee;
    }
    if (other.isSetConsigneePhone()) {
      this.consigneePhone = other.consigneePhone;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetConsigneeOrgName()) {
      this.consigneeOrgName = other.consigneeOrgName;
    }
    if (other.isSetOrderStatus()) {
      this.orderStatus = other.orderStatus;
    }
    if (other.isSetBillNo()) {
      this.billNo = other.billNo;
    }
    if (other.isSetIsExistsRefund()) {
      this.isExistsRefund = other.isExistsRefund;
    }
  }

  public BossPresellBillVo deepCopy() {
    return new BossPresellBillVo(this);
  }

  @Override
  public void clear() {
    this.subOrderId = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.productName = null;
    setBuyQuantityIsSet(false);
    this.buyQuantity = 0;
    this.paymentMethod = null;
    setTotalPriceIsSet(false);
    this.totalPrice = 0.0;
    setCashAmountIsSet(false);
    this.cashAmount = 0.0;
    setBankPointIsSet(false);
    this.bankPoint = 0.0;
    setFroadPointIsSet(false);
    this.froadPoint = 0.0;
    this.deliveryOption = null;
    this.address = null;
    this.consignee = null;
    this.consigneePhone = null;
    this.orgName = null;
    this.consigneeOrgName = null;
    this.orderStatus = null;
    this.billNo = null;
    this.isExistsRefund = null;
  }

  /**
   * 子订单编号
   */
  public String getSubOrderId() {
    return this.subOrderId;
  }

  /**
   * 子订单编号
   */
  public BossPresellBillVo setSubOrderId(String subOrderId) {
    this.subOrderId = subOrderId;
    return this;
  }

  public void unsetSubOrderId() {
    this.subOrderId = null;
  }

  /** Returns true if field subOrderId is set (has been assigned a value) and false otherwise */
  public boolean isSetSubOrderId() {
    return this.subOrderId != null;
  }

  public void setSubOrderIdIsSet(boolean value) {
    if (!value) {
      this.subOrderId = null;
    }
  }

  /**
   * 下单时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 下单时间
   */
  public BossPresellBillVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 商品名称
   */
  public String getProductName() {
    return this.productName;
  }

  /**
   * 商品名称
   */
  public BossPresellBillVo setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  /**
   * 购买数量
   */
  public int getBuyQuantity() {
    return this.buyQuantity;
  }

  /**
   * 购买数量
   */
  public BossPresellBillVo setBuyQuantity(int buyQuantity) {
    this.buyQuantity = buyQuantity;
    setBuyQuantityIsSet(true);
    return this;
  }

  public void unsetBuyQuantity() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUYQUANTITY_ISSET_ID);
  }

  /** Returns true if field buyQuantity is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyQuantity() {
    return EncodingUtils.testBit(__isset_bitfield, __BUYQUANTITY_ISSET_ID);
  }

  public void setBuyQuantityIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUYQUANTITY_ISSET_ID, value);
  }

  /**
   * 支付方式；1：现金支付；2：联盟积分支付；3：银行积分支付；4：联盟积分+现金支付；5：银行积分+现金支付；6：赠送积分
   */
  public String getPaymentMethod() {
    return this.paymentMethod;
  }

  /**
   * 支付方式；1：现金支付；2：联盟积分支付；3：银行积分支付；4：联盟积分+现金支付；5：银行积分+现金支付；6：赠送积分
   */
  public BossPresellBillVo setPaymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

  public void unsetPaymentMethod() {
    this.paymentMethod = null;
  }

  /** Returns true if field paymentMethod is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentMethod() {
    return this.paymentMethod != null;
  }

  public void setPaymentMethodIsSet(boolean value) {
    if (!value) {
      this.paymentMethod = null;
    }
  }

  /**
   * 总价
   */
  public double getTotalPrice() {
    return this.totalPrice;
  }

  /**
   * 总价
   */
  public BossPresellBillVo setTotalPrice(double totalPrice) {
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    return this;
  }

  public void unsetTotalPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  /** Returns true if field totalPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  public void setTotalPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPRICE_ISSET_ID, value);
  }

  /**
   * 现金
   */
  public double getCashAmount() {
    return this.cashAmount;
  }

  /**
   * 现金
   */
  public BossPresellBillVo setCashAmount(double cashAmount) {
    this.cashAmount = cashAmount;
    setCashAmountIsSet(true);
    return this;
  }

  public void unsetCashAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CASHAMOUNT_ISSET_ID);
  }

  /** Returns true if field cashAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetCashAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __CASHAMOUNT_ISSET_ID);
  }

  public void setCashAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CASHAMOUNT_ISSET_ID, value);
  }

  /**
   * 银行积分
   */
  public double getBankPoint() {
    return this.bankPoint;
  }

  /**
   * 银行积分
   */
  public BossPresellBillVo setBankPoint(double bankPoint) {
    this.bankPoint = bankPoint;
    setBankPointIsSet(true);
    return this;
  }

  public void unsetBankPoint() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BANKPOINT_ISSET_ID);
  }

  /** Returns true if field bankPoint is set (has been assigned a value) and false otherwise */
  public boolean isSetBankPoint() {
    return EncodingUtils.testBit(__isset_bitfield, __BANKPOINT_ISSET_ID);
  }

  public void setBankPointIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BANKPOINT_ISSET_ID, value);
  }

  /**
   * 联盟积分
   */
  public double getFroadPoint() {
    return this.froadPoint;
  }

  /**
   * 联盟积分
   */
  public BossPresellBillVo setFroadPoint(double froadPoint) {
    this.froadPoint = froadPoint;
    setFroadPointIsSet(true);
    return this;
  }

  public void unsetFroadPoint() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FROADPOINT_ISSET_ID);
  }

  /** Returns true if field froadPoint is set (has been assigned a value) and false otherwise */
  public boolean isSetFroadPoint() {
    return EncodingUtils.testBit(__isset_bitfield, __FROADPOINT_ISSET_ID);
  }

  public void setFroadPointIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FROADPOINT_ISSET_ID, value);
  }

  /**
   * 配送方式
   */
  public String getDeliveryOption() {
    return this.deliveryOption;
  }

  /**
   * 配送方式
   */
  public BossPresellBillVo setDeliveryOption(String deliveryOption) {
    this.deliveryOption = deliveryOption;
    return this;
  }

  public void unsetDeliveryOption() {
    this.deliveryOption = null;
  }

  /** Returns true if field deliveryOption is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryOption() {
    return this.deliveryOption != null;
  }

  public void setDeliveryOptionIsSet(boolean value) {
    if (!value) {
      this.deliveryOption = null;
    }
  }

  /**
   * 配送地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 配送地址
   */
  public BossPresellBillVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 提（收）货人
   */
  public String getConsignee() {
    return this.consignee;
  }

  /**
   * 提（收）货人
   */
  public BossPresellBillVo setConsignee(String consignee) {
    this.consignee = consignee;
    return this;
  }

  public void unsetConsignee() {
    this.consignee = null;
  }

  /** Returns true if field consignee is set (has been assigned a value) and false otherwise */
  public boolean isSetConsignee() {
    return this.consignee != null;
  }

  public void setConsigneeIsSet(boolean value) {
    if (!value) {
      this.consignee = null;
    }
  }

  /**
   * 提（收）货人电话
   */
  public String getConsigneePhone() {
    return this.consigneePhone;
  }

  /**
   * 提（收）货人电话
   */
  public BossPresellBillVo setConsigneePhone(String consigneePhone) {
    this.consigneePhone = consigneePhone;
    return this;
  }

  public void unsetConsigneePhone() {
    this.consigneePhone = null;
  }

  /** Returns true if field consigneePhone is set (has been assigned a value) and false otherwise */
  public boolean isSetConsigneePhone() {
    return this.consigneePhone != null;
  }

  public void setConsigneePhoneIsSet(boolean value) {
    if (!value) {
      this.consigneePhone = null;
    }
  }

  /**
   * 所属行社
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 所属行社
   */
  public BossPresellBillVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 提货网点
   */
  public String getConsigneeOrgName() {
    return this.consigneeOrgName;
  }

  /**
   * 提货网点
   */
  public BossPresellBillVo setConsigneeOrgName(String consigneeOrgName) {
    this.consigneeOrgName = consigneeOrgName;
    return this;
  }

  public void unsetConsigneeOrgName() {
    this.consigneeOrgName = null;
  }

  /** Returns true if field consigneeOrgName is set (has been assigned a value) and false otherwise */
  public boolean isSetConsigneeOrgName() {
    return this.consigneeOrgName != null;
  }

  public void setConsigneeOrgNameIsSet(boolean value) {
    if (!value) {
      this.consigneeOrgName = null;
    }
  }

  /**
   * 订单状态1:订单创建；2:订单用户关闭;3:订单系统关闭;4:订单支付中;5:订单支付失败;6:订单支付完成
   */
  public String getOrderStatus() {
    return this.orderStatus;
  }

  /**
   * 订单状态1:订单创建；2:订单用户关闭;3:订单系统关闭;4:订单支付中;5:订单支付失败;6:订单支付完成
   */
  public BossPresellBillVo setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

  public void unsetOrderStatus() {
    this.orderStatus = null;
  }

  /** Returns true if field orderStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderStatus() {
    return this.orderStatus != null;
  }

  public void setOrderStatusIsSet(boolean value) {
    if (!value) {
      this.orderStatus = null;
    }
  }

  /**
   * 账单号
   */
  public String getBillNo() {
    return this.billNo;
  }

  /**
   * 账单号
   */
  public BossPresellBillVo setBillNo(String billNo) {
    this.billNo = billNo;
    return this;
  }

  public void unsetBillNo() {
    this.billNo = null;
  }

  /** Returns true if field billNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBillNo() {
    return this.billNo != null;
  }

  public void setBillNoIsSet(boolean value) {
    if (!value) {
      this.billNo = null;
    }
  }

  /**
   * 当前子订单对应的大订单下时候有退款：0：有；1：没有
   */
  public String getIsExistsRefund() {
    return this.isExistsRefund;
  }

  /**
   * 当前子订单对应的大订单下时候有退款：0：有；1：没有
   */
  public BossPresellBillVo setIsExistsRefund(String isExistsRefund) {
    this.isExistsRefund = isExistsRefund;
    return this;
  }

  public void unsetIsExistsRefund() {
    this.isExistsRefund = null;
  }

  /** Returns true if field isExistsRefund is set (has been assigned a value) and false otherwise */
  public boolean isSetIsExistsRefund() {
    return this.isExistsRefund != null;
  }

  public void setIsExistsRefundIsSet(boolean value) {
    if (!value) {
      this.isExistsRefund = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SUB_ORDER_ID:
      if (value == null) {
        unsetSubOrderId();
      } else {
        setSubOrderId((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case BUY_QUANTITY:
      if (value == null) {
        unsetBuyQuantity();
      } else {
        setBuyQuantity((Integer)value);
      }
      break;

    case PAYMENT_METHOD:
      if (value == null) {
        unsetPaymentMethod();
      } else {
        setPaymentMethod((String)value);
      }
      break;

    case TOTAL_PRICE:
      if (value == null) {
        unsetTotalPrice();
      } else {
        setTotalPrice((Double)value);
      }
      break;

    case CASH_AMOUNT:
      if (value == null) {
        unsetCashAmount();
      } else {
        setCashAmount((Double)value);
      }
      break;

    case BANK_POINT:
      if (value == null) {
        unsetBankPoint();
      } else {
        setBankPoint((Double)value);
      }
      break;

    case FROAD_POINT:
      if (value == null) {
        unsetFroadPoint();
      } else {
        setFroadPoint((Double)value);
      }
      break;

    case DELIVERY_OPTION:
      if (value == null) {
        unsetDeliveryOption();
      } else {
        setDeliveryOption((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case CONSIGNEE:
      if (value == null) {
        unsetConsignee();
      } else {
        setConsignee((String)value);
      }
      break;

    case CONSIGNEE_PHONE:
      if (value == null) {
        unsetConsigneePhone();
      } else {
        setConsigneePhone((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case CONSIGNEE_ORG_NAME:
      if (value == null) {
        unsetConsigneeOrgName();
      } else {
        setConsigneeOrgName((String)value);
      }
      break;

    case ORDER_STATUS:
      if (value == null) {
        unsetOrderStatus();
      } else {
        setOrderStatus((String)value);
      }
      break;

    case BILL_NO:
      if (value == null) {
        unsetBillNo();
      } else {
        setBillNo((String)value);
      }
      break;

    case IS_EXISTS_REFUND:
      if (value == null) {
        unsetIsExistsRefund();
      } else {
        setIsExistsRefund((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SUB_ORDER_ID:
      return getSubOrderId();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case PRODUCT_NAME:
      return getProductName();

    case BUY_QUANTITY:
      return Integer.valueOf(getBuyQuantity());

    case PAYMENT_METHOD:
      return getPaymentMethod();

    case TOTAL_PRICE:
      return Double.valueOf(getTotalPrice());

    case CASH_AMOUNT:
      return Double.valueOf(getCashAmount());

    case BANK_POINT:
      return Double.valueOf(getBankPoint());

    case FROAD_POINT:
      return Double.valueOf(getFroadPoint());

    case DELIVERY_OPTION:
      return getDeliveryOption();

    case ADDRESS:
      return getAddress();

    case CONSIGNEE:
      return getConsignee();

    case CONSIGNEE_PHONE:
      return getConsigneePhone();

    case ORG_NAME:
      return getOrgName();

    case CONSIGNEE_ORG_NAME:
      return getConsigneeOrgName();

    case ORDER_STATUS:
      return getOrderStatus();

    case BILL_NO:
      return getBillNo();

    case IS_EXISTS_REFUND:
      return getIsExistsRefund();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SUB_ORDER_ID:
      return isSetSubOrderId();
    case CREATE_TIME:
      return isSetCreateTime();
    case PRODUCT_NAME:
      return isSetProductName();
    case BUY_QUANTITY:
      return isSetBuyQuantity();
    case PAYMENT_METHOD:
      return isSetPaymentMethod();
    case TOTAL_PRICE:
      return isSetTotalPrice();
    case CASH_AMOUNT:
      return isSetCashAmount();
    case BANK_POINT:
      return isSetBankPoint();
    case FROAD_POINT:
      return isSetFroadPoint();
    case DELIVERY_OPTION:
      return isSetDeliveryOption();
    case ADDRESS:
      return isSetAddress();
    case CONSIGNEE:
      return isSetConsignee();
    case CONSIGNEE_PHONE:
      return isSetConsigneePhone();
    case ORG_NAME:
      return isSetOrgName();
    case CONSIGNEE_ORG_NAME:
      return isSetConsigneeOrgName();
    case ORDER_STATUS:
      return isSetOrderStatus();
    case BILL_NO:
      return isSetBillNo();
    case IS_EXISTS_REFUND:
      return isSetIsExistsRefund();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BossPresellBillVo)
      return this.equals((BossPresellBillVo)that);
    return false;
  }

  public boolean equals(BossPresellBillVo that) {
    if (that == null)
      return false;

    boolean this_present_subOrderId = true && this.isSetSubOrderId();
    boolean that_present_subOrderId = true && that.isSetSubOrderId();
    if (this_present_subOrderId || that_present_subOrderId) {
      if (!(this_present_subOrderId && that_present_subOrderId))
        return false;
      if (!this.subOrderId.equals(that.subOrderId))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_buyQuantity = true;
    boolean that_present_buyQuantity = true;
    if (this_present_buyQuantity || that_present_buyQuantity) {
      if (!(this_present_buyQuantity && that_present_buyQuantity))
        return false;
      if (this.buyQuantity != that.buyQuantity)
        return false;
    }

    boolean this_present_paymentMethod = true && this.isSetPaymentMethod();
    boolean that_present_paymentMethod = true && that.isSetPaymentMethod();
    if (this_present_paymentMethod || that_present_paymentMethod) {
      if (!(this_present_paymentMethod && that_present_paymentMethod))
        return false;
      if (!this.paymentMethod.equals(that.paymentMethod))
        return false;
    }

    boolean this_present_totalPrice = true;
    boolean that_present_totalPrice = true;
    if (this_present_totalPrice || that_present_totalPrice) {
      if (!(this_present_totalPrice && that_present_totalPrice))
        return false;
      if (this.totalPrice != that.totalPrice)
        return false;
    }

    boolean this_present_cashAmount = true;
    boolean that_present_cashAmount = true;
    if (this_present_cashAmount || that_present_cashAmount) {
      if (!(this_present_cashAmount && that_present_cashAmount))
        return false;
      if (this.cashAmount != that.cashAmount)
        return false;
    }

    boolean this_present_bankPoint = true;
    boolean that_present_bankPoint = true;
    if (this_present_bankPoint || that_present_bankPoint) {
      if (!(this_present_bankPoint && that_present_bankPoint))
        return false;
      if (this.bankPoint != that.bankPoint)
        return false;
    }

    boolean this_present_froadPoint = true;
    boolean that_present_froadPoint = true;
    if (this_present_froadPoint || that_present_froadPoint) {
      if (!(this_present_froadPoint && that_present_froadPoint))
        return false;
      if (this.froadPoint != that.froadPoint)
        return false;
    }

    boolean this_present_deliveryOption = true && this.isSetDeliveryOption();
    boolean that_present_deliveryOption = true && that.isSetDeliveryOption();
    if (this_present_deliveryOption || that_present_deliveryOption) {
      if (!(this_present_deliveryOption && that_present_deliveryOption))
        return false;
      if (!this.deliveryOption.equals(that.deliveryOption))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_consignee = true && this.isSetConsignee();
    boolean that_present_consignee = true && that.isSetConsignee();
    if (this_present_consignee || that_present_consignee) {
      if (!(this_present_consignee && that_present_consignee))
        return false;
      if (!this.consignee.equals(that.consignee))
        return false;
    }

    boolean this_present_consigneePhone = true && this.isSetConsigneePhone();
    boolean that_present_consigneePhone = true && that.isSetConsigneePhone();
    if (this_present_consigneePhone || that_present_consigneePhone) {
      if (!(this_present_consigneePhone && that_present_consigneePhone))
        return false;
      if (!this.consigneePhone.equals(that.consigneePhone))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_consigneeOrgName = true && this.isSetConsigneeOrgName();
    boolean that_present_consigneeOrgName = true && that.isSetConsigneeOrgName();
    if (this_present_consigneeOrgName || that_present_consigneeOrgName) {
      if (!(this_present_consigneeOrgName && that_present_consigneeOrgName))
        return false;
      if (!this.consigneeOrgName.equals(that.consigneeOrgName))
        return false;
    }

    boolean this_present_orderStatus = true && this.isSetOrderStatus();
    boolean that_present_orderStatus = true && that.isSetOrderStatus();
    if (this_present_orderStatus || that_present_orderStatus) {
      if (!(this_present_orderStatus && that_present_orderStatus))
        return false;
      if (!this.orderStatus.equals(that.orderStatus))
        return false;
    }

    boolean this_present_billNo = true && this.isSetBillNo();
    boolean that_present_billNo = true && that.isSetBillNo();
    if (this_present_billNo || that_present_billNo) {
      if (!(this_present_billNo && that_present_billNo))
        return false;
      if (!this.billNo.equals(that.billNo))
        return false;
    }

    boolean this_present_isExistsRefund = true && this.isSetIsExistsRefund();
    boolean that_present_isExistsRefund = true && that.isSetIsExistsRefund();
    if (this_present_isExistsRefund || that_present_isExistsRefund) {
      if (!(this_present_isExistsRefund && that_present_isExistsRefund))
        return false;
      if (!this.isExistsRefund.equals(that.isExistsRefund))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_subOrderId = true && (isSetSubOrderId());
    list.add(present_subOrderId);
    if (present_subOrderId)
      list.add(subOrderId);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_buyQuantity = true;
    list.add(present_buyQuantity);
    if (present_buyQuantity)
      list.add(buyQuantity);

    boolean present_paymentMethod = true && (isSetPaymentMethod());
    list.add(present_paymentMethod);
    if (present_paymentMethod)
      list.add(paymentMethod);

    boolean present_totalPrice = true;
    list.add(present_totalPrice);
    if (present_totalPrice)
      list.add(totalPrice);

    boolean present_cashAmount = true;
    list.add(present_cashAmount);
    if (present_cashAmount)
      list.add(cashAmount);

    boolean present_bankPoint = true;
    list.add(present_bankPoint);
    if (present_bankPoint)
      list.add(bankPoint);

    boolean present_froadPoint = true;
    list.add(present_froadPoint);
    if (present_froadPoint)
      list.add(froadPoint);

    boolean present_deliveryOption = true && (isSetDeliveryOption());
    list.add(present_deliveryOption);
    if (present_deliveryOption)
      list.add(deliveryOption);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_consignee = true && (isSetConsignee());
    list.add(present_consignee);
    if (present_consignee)
      list.add(consignee);

    boolean present_consigneePhone = true && (isSetConsigneePhone());
    list.add(present_consigneePhone);
    if (present_consigneePhone)
      list.add(consigneePhone);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_consigneeOrgName = true && (isSetConsigneeOrgName());
    list.add(present_consigneeOrgName);
    if (present_consigneeOrgName)
      list.add(consigneeOrgName);

    boolean present_orderStatus = true && (isSetOrderStatus());
    list.add(present_orderStatus);
    if (present_orderStatus)
      list.add(orderStatus);

    boolean present_billNo = true && (isSetBillNo());
    list.add(present_billNo);
    if (present_billNo)
      list.add(billNo);

    boolean present_isExistsRefund = true && (isSetIsExistsRefund());
    list.add(present_isExistsRefund);
    if (present_isExistsRefund)
      list.add(isExistsRefund);

    return list.hashCode();
  }

  @Override
  public int compareTo(BossPresellBillVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetSubOrderId()).compareTo(other.isSetSubOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subOrderId, other.subOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyQuantity()).compareTo(other.isSetBuyQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyQuantity, other.buyQuantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentMethod()).compareTo(other.isSetPaymentMethod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentMethod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentMethod, other.paymentMethod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPrice()).compareTo(other.isSetTotalPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPrice, other.totalPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCashAmount()).compareTo(other.isSetCashAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCashAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cashAmount, other.cashAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankPoint()).compareTo(other.isSetBankPoint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankPoint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankPoint, other.bankPoint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFroadPoint()).compareTo(other.isSetFroadPoint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFroadPoint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.froadPoint, other.froadPoint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryOption()).compareTo(other.isSetDeliveryOption());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryOption()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryOption, other.deliveryOption);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsignee()).compareTo(other.isSetConsignee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsignee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consignee, other.consignee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsigneePhone()).compareTo(other.isSetConsigneePhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsigneePhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consigneePhone, other.consigneePhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsigneeOrgName()).compareTo(other.isSetConsigneeOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsigneeOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consigneeOrgName, other.consigneeOrgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderStatus()).compareTo(other.isSetOrderStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderStatus, other.orderStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBillNo()).compareTo(other.isSetBillNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBillNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.billNo, other.billNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsExistsRefund()).compareTo(other.isSetIsExistsRefund());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsExistsRefund()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isExistsRefund, other.isExistsRefund);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BossPresellBillVo(");
    boolean first = true;

    sb.append("subOrderId:");
    if (this.subOrderId == null) {
      sb.append("null");
    } else {
      sb.append(this.subOrderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyQuantity:");
    sb.append(this.buyQuantity);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentMethod:");
    if (this.paymentMethod == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentMethod);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPrice:");
    sb.append(this.totalPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cashAmount:");
    sb.append(this.cashAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankPoint:");
    sb.append(this.bankPoint);
    first = false;
    if (!first) sb.append(", ");
    sb.append("froadPoint:");
    sb.append(this.froadPoint);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryOption:");
    if (this.deliveryOption == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryOption);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("consignee:");
    if (this.consignee == null) {
      sb.append("null");
    } else {
      sb.append(this.consignee);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("consigneePhone:");
    if (this.consigneePhone == null) {
      sb.append("null");
    } else {
      sb.append(this.consigneePhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("consigneeOrgName:");
    if (this.consigneeOrgName == null) {
      sb.append("null");
    } else {
      sb.append(this.consigneeOrgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderStatus:");
    if (this.orderStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.orderStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("billNo:");
    if (this.billNo == null) {
      sb.append("null");
    } else {
      sb.append(this.billNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isExistsRefund:");
    if (this.isExistsRefund == null) {
      sb.append("null");
    } else {
      sb.append(this.isExistsRefund);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BossPresellBillVoStandardSchemeFactory implements SchemeFactory {
    public BossPresellBillVoStandardScheme getScheme() {
      return new BossPresellBillVoStandardScheme();
    }
  }

  private static class BossPresellBillVoStandardScheme extends StandardScheme<BossPresellBillVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BossPresellBillVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SUB_ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subOrderId = iprot.readString();
              struct.setSubOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BUY_QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.buyQuantity = iprot.readI32();
              struct.setBuyQuantityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PAYMENT_METHOD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paymentMethod = iprot.readString();
              struct.setPaymentMethodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TOTAL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalPrice = iprot.readDouble();
              struct.setTotalPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CASH_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.cashAmount = iprot.readDouble();
              struct.setCashAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BANK_POINT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.bankPoint = iprot.readDouble();
              struct.setBankPointIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // FROAD_POINT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.froadPoint = iprot.readDouble();
              struct.setFroadPointIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DELIVERY_OPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryOption = iprot.readString();
              struct.setDeliveryOptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CONSIGNEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.consignee = iprot.readString();
              struct.setConsigneeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CONSIGNEE_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.consigneePhone = iprot.readString();
              struct.setConsigneePhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CONSIGNEE_ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.consigneeOrgName = iprot.readString();
              struct.setConsigneeOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ORDER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderStatus = iprot.readString();
              struct.setOrderStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // BILL_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.billNo = iprot.readString();
              struct.setBillNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // IS_EXISTS_REFUND
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isExistsRefund = iprot.readString();
              struct.setIsExistsRefundIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BossPresellBillVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.subOrderId != null) {
        oprot.writeFieldBegin(SUB_ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.subOrderId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BUY_QUANTITY_FIELD_DESC);
      oprot.writeI32(struct.buyQuantity);
      oprot.writeFieldEnd();
      if (struct.paymentMethod != null) {
        oprot.writeFieldBegin(PAYMENT_METHOD_FIELD_DESC);
        oprot.writeString(struct.paymentMethod);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.totalPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CASH_AMOUNT_FIELD_DESC);
      oprot.writeDouble(struct.cashAmount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BANK_POINT_FIELD_DESC);
      oprot.writeDouble(struct.bankPoint);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FROAD_POINT_FIELD_DESC);
      oprot.writeDouble(struct.froadPoint);
      oprot.writeFieldEnd();
      if (struct.deliveryOption != null) {
        oprot.writeFieldBegin(DELIVERY_OPTION_FIELD_DESC);
        oprot.writeString(struct.deliveryOption);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        oprot.writeString(struct.address);
        oprot.writeFieldEnd();
      }
      if (struct.consignee != null) {
        oprot.writeFieldBegin(CONSIGNEE_FIELD_DESC);
        oprot.writeString(struct.consignee);
        oprot.writeFieldEnd();
      }
      if (struct.consigneePhone != null) {
        oprot.writeFieldBegin(CONSIGNEE_PHONE_FIELD_DESC);
        oprot.writeString(struct.consigneePhone);
        oprot.writeFieldEnd();
      }
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.consigneeOrgName != null) {
        oprot.writeFieldBegin(CONSIGNEE_ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.consigneeOrgName);
        oprot.writeFieldEnd();
      }
      if (struct.orderStatus != null) {
        oprot.writeFieldBegin(ORDER_STATUS_FIELD_DESC);
        oprot.writeString(struct.orderStatus);
        oprot.writeFieldEnd();
      }
      if (struct.billNo != null) {
        oprot.writeFieldBegin(BILL_NO_FIELD_DESC);
        oprot.writeString(struct.billNo);
        oprot.writeFieldEnd();
      }
      if (struct.isExistsRefund != null) {
        oprot.writeFieldBegin(IS_EXISTS_REFUND_FIELD_DESC);
        oprot.writeString(struct.isExistsRefund);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BossPresellBillVoTupleSchemeFactory implements SchemeFactory {
    public BossPresellBillVoTupleScheme getScheme() {
      return new BossPresellBillVoTupleScheme();
    }
  }

  private static class BossPresellBillVoTupleScheme extends TupleScheme<BossPresellBillVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BossPresellBillVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetSubOrderId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetProductName()) {
        optionals.set(2);
      }
      if (struct.isSetBuyQuantity()) {
        optionals.set(3);
      }
      if (struct.isSetPaymentMethod()) {
        optionals.set(4);
      }
      if (struct.isSetTotalPrice()) {
        optionals.set(5);
      }
      if (struct.isSetCashAmount()) {
        optionals.set(6);
      }
      if (struct.isSetBankPoint()) {
        optionals.set(7);
      }
      if (struct.isSetFroadPoint()) {
        optionals.set(8);
      }
      if (struct.isSetDeliveryOption()) {
        optionals.set(9);
      }
      if (struct.isSetAddress()) {
        optionals.set(10);
      }
      if (struct.isSetConsignee()) {
        optionals.set(11);
      }
      if (struct.isSetConsigneePhone()) {
        optionals.set(12);
      }
      if (struct.isSetOrgName()) {
        optionals.set(13);
      }
      if (struct.isSetConsigneeOrgName()) {
        optionals.set(14);
      }
      if (struct.isSetOrderStatus()) {
        optionals.set(15);
      }
      if (struct.isSetBillNo()) {
        optionals.set(16);
      }
      if (struct.isSetIsExistsRefund()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetSubOrderId()) {
        oprot.writeString(struct.subOrderId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetBuyQuantity()) {
        oprot.writeI32(struct.buyQuantity);
      }
      if (struct.isSetPaymentMethod()) {
        oprot.writeString(struct.paymentMethod);
      }
      if (struct.isSetTotalPrice()) {
        oprot.writeDouble(struct.totalPrice);
      }
      if (struct.isSetCashAmount()) {
        oprot.writeDouble(struct.cashAmount);
      }
      if (struct.isSetBankPoint()) {
        oprot.writeDouble(struct.bankPoint);
      }
      if (struct.isSetFroadPoint()) {
        oprot.writeDouble(struct.froadPoint);
      }
      if (struct.isSetDeliveryOption()) {
        oprot.writeString(struct.deliveryOption);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetConsignee()) {
        oprot.writeString(struct.consignee);
      }
      if (struct.isSetConsigneePhone()) {
        oprot.writeString(struct.consigneePhone);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetConsigneeOrgName()) {
        oprot.writeString(struct.consigneeOrgName);
      }
      if (struct.isSetOrderStatus()) {
        oprot.writeString(struct.orderStatus);
      }
      if (struct.isSetBillNo()) {
        oprot.writeString(struct.billNo);
      }
      if (struct.isSetIsExistsRefund()) {
        oprot.writeString(struct.isExistsRefund);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BossPresellBillVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.subOrderId = iprot.readString();
        struct.setSubOrderIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.buyQuantity = iprot.readI32();
        struct.setBuyQuantityIsSet(true);
      }
      if (incoming.get(4)) {
        struct.paymentMethod = iprot.readString();
        struct.setPaymentMethodIsSet(true);
      }
      if (incoming.get(5)) {
        struct.totalPrice = iprot.readDouble();
        struct.setTotalPriceIsSet(true);
      }
      if (incoming.get(6)) {
        struct.cashAmount = iprot.readDouble();
        struct.setCashAmountIsSet(true);
      }
      if (incoming.get(7)) {
        struct.bankPoint = iprot.readDouble();
        struct.setBankPointIsSet(true);
      }
      if (incoming.get(8)) {
        struct.froadPoint = iprot.readDouble();
        struct.setFroadPointIsSet(true);
      }
      if (incoming.get(9)) {
        struct.deliveryOption = iprot.readString();
        struct.setDeliveryOptionIsSet(true);
      }
      if (incoming.get(10)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(11)) {
        struct.consignee = iprot.readString();
        struct.setConsigneeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.consigneePhone = iprot.readString();
        struct.setConsigneePhoneIsSet(true);
      }
      if (incoming.get(13)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.consigneeOrgName = iprot.readString();
        struct.setConsigneeOrgNameIsSet(true);
      }
      if (incoming.get(15)) {
        struct.orderStatus = iprot.readString();
        struct.setOrderStatusIsSet(true);
      }
      if (incoming.get(16)) {
        struct.billNo = iprot.readString();
        struct.setBillNoIsSet(true);
      }
      if (incoming.get(17)) {
        struct.isExistsRefund = iprot.readString();
        struct.setIsExistsRefundIsSet(true);
      }
    }
  }

}

