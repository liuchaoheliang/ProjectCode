/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.recommendactivitytag;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-10-28")
public class InputRelateProductActivityReqVo implements org.apache.thrift.TBase<InputRelateProductActivityReqVo, InputRelateProductActivityReqVo._Fields>, java.io.Serializable, Cloneable, Comparable<InputRelateProductActivityReqVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InputRelateProductActivityReqVo");

  private static final org.apache.thrift.protocol.TField VOS_FIELD_DESC = new org.apache.thrift.protocol.TField("vos", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField ACTIVITY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("activityId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField ACTIVITY_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("activityNo", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField OPERATOR_FIELD_DESC = new org.apache.thrift.protocol.TField("operator", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new InputRelateProductActivityReqVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new InputRelateProductActivityReqVoTupleSchemeFactory());
  }

  /**
   * 导入文件数据 *
   */
  public List<InputRelateProductActivityVo> vos; // optional
  /**
   * 活动标签id *
   */
  public long activityId; // optional
  /**
   * 活动编号 *
   */
  public String activityNo; // optional
  /**
   * 客户端号 *
   */
  public String clientId; // optional
  /**
   * 当前操作员 *
   */
  public String operator; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 导入文件数据 *
     */
    VOS((short)1, "vos"),
    /**
     * 活动标签id *
     */
    ACTIVITY_ID((short)2, "activityId"),
    /**
     * 活动编号 *
     */
    ACTIVITY_NO((short)3, "activityNo"),
    /**
     * 客户端号 *
     */
    CLIENT_ID((short)4, "clientId"),
    /**
     * 当前操作员 *
     */
    OPERATOR((short)5, "operator");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // VOS
          return VOS;
        case 2: // ACTIVITY_ID
          return ACTIVITY_ID;
        case 3: // ACTIVITY_NO
          return ACTIVITY_NO;
        case 4: // CLIENT_ID
          return CLIENT_ID;
        case 5: // OPERATOR
          return OPERATOR;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ACTIVITYID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.VOS,_Fields.ACTIVITY_ID,_Fields.ACTIVITY_NO,_Fields.CLIENT_ID,_Fields.OPERATOR};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.VOS, new org.apache.thrift.meta_data.FieldMetaData("vos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, InputRelateProductActivityVo.class))));
    tmpMap.put(_Fields.ACTIVITY_ID, new org.apache.thrift.meta_data.FieldMetaData("activityId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ACTIVITY_NO, new org.apache.thrift.meta_data.FieldMetaData("activityNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPERATOR, new org.apache.thrift.meta_data.FieldMetaData("operator", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(InputRelateProductActivityReqVo.class, metaDataMap);
  }

  public InputRelateProductActivityReqVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public InputRelateProductActivityReqVo(InputRelateProductActivityReqVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetVos()) {
      List<InputRelateProductActivityVo> __this__vos = new ArrayList<InputRelateProductActivityVo>(other.vos.size());
      for (InputRelateProductActivityVo other_element : other.vos) {
        __this__vos.add(new InputRelateProductActivityVo(other_element));
      }
      this.vos = __this__vos;
    }
    this.activityId = other.activityId;
    if (other.isSetActivityNo()) {
      this.activityNo = other.activityNo;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetOperator()) {
      this.operator = other.operator;
    }
  }

  public InputRelateProductActivityReqVo deepCopy() {
    return new InputRelateProductActivityReqVo(this);
  }

  @Override
  public void clear() {
    this.vos = null;
    setActivityIdIsSet(false);
    this.activityId = 0;
    this.activityNo = null;
    this.clientId = null;
    this.operator = null;
  }

  public int getVosSize() {
    return (this.vos == null) ? 0 : this.vos.size();
  }

  public java.util.Iterator<InputRelateProductActivityVo> getVosIterator() {
    return (this.vos == null) ? null : this.vos.iterator();
  }

  public void addToVos(InputRelateProductActivityVo elem) {
    if (this.vos == null) {
      this.vos = new ArrayList<InputRelateProductActivityVo>();
    }
    this.vos.add(elem);
  }

  /**
   * 导入文件数据 *
   */
  public List<InputRelateProductActivityVo> getVos() {
    return this.vos;
  }

  /**
   * 导入文件数据 *
   */
  public InputRelateProductActivityReqVo setVos(List<InputRelateProductActivityVo> vos) {
    this.vos = vos;
    return this;
  }

  public void unsetVos() {
    this.vos = null;
  }

  /** Returns true if field vos is set (has been assigned a value) and false otherwise */
  public boolean isSetVos() {
    return this.vos != null;
  }

  public void setVosIsSet(boolean value) {
    if (!value) {
      this.vos = null;
    }
  }

  /**
   * 活动标签id *
   */
  public long getActivityId() {
    return this.activityId;
  }

  /**
   * 活动标签id *
   */
  public InputRelateProductActivityReqVo setActivityId(long activityId) {
    this.activityId = activityId;
    setActivityIdIsSet(true);
    return this;
  }

  public void unsetActivityId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACTIVITYID_ISSET_ID);
  }

  /** Returns true if field activityId is set (has been assigned a value) and false otherwise */
  public boolean isSetActivityId() {
    return EncodingUtils.testBit(__isset_bitfield, __ACTIVITYID_ISSET_ID);
  }

  public void setActivityIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACTIVITYID_ISSET_ID, value);
  }

  /**
   * 活动编号 *
   */
  public String getActivityNo() {
    return this.activityNo;
  }

  /**
   * 活动编号 *
   */
  public InputRelateProductActivityReqVo setActivityNo(String activityNo) {
    this.activityNo = activityNo;
    return this;
  }

  public void unsetActivityNo() {
    this.activityNo = null;
  }

  /** Returns true if field activityNo is set (has been assigned a value) and false otherwise */
  public boolean isSetActivityNo() {
    return this.activityNo != null;
  }

  public void setActivityNoIsSet(boolean value) {
    if (!value) {
      this.activityNo = null;
    }
  }

  /**
   * 客户端号 *
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端号 *
   */
  public InputRelateProductActivityReqVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 当前操作员 *
   */
  public String getOperator() {
    return this.operator;
  }

  /**
   * 当前操作员 *
   */
  public InputRelateProductActivityReqVo setOperator(String operator) {
    this.operator = operator;
    return this;
  }

  public void unsetOperator() {
    this.operator = null;
  }

  /** Returns true if field operator is set (has been assigned a value) and false otherwise */
  public boolean isSetOperator() {
    return this.operator != null;
  }

  public void setOperatorIsSet(boolean value) {
    if (!value) {
      this.operator = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case VOS:
      if (value == null) {
        unsetVos();
      } else {
        setVos((List<InputRelateProductActivityVo>)value);
      }
      break;

    case ACTIVITY_ID:
      if (value == null) {
        unsetActivityId();
      } else {
        setActivityId((Long)value);
      }
      break;

    case ACTIVITY_NO:
      if (value == null) {
        unsetActivityNo();
      } else {
        setActivityNo((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case OPERATOR:
      if (value == null) {
        unsetOperator();
      } else {
        setOperator((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case VOS:
      return getVos();

    case ACTIVITY_ID:
      return Long.valueOf(getActivityId());

    case ACTIVITY_NO:
      return getActivityNo();

    case CLIENT_ID:
      return getClientId();

    case OPERATOR:
      return getOperator();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case VOS:
      return isSetVos();
    case ACTIVITY_ID:
      return isSetActivityId();
    case ACTIVITY_NO:
      return isSetActivityNo();
    case CLIENT_ID:
      return isSetClientId();
    case OPERATOR:
      return isSetOperator();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof InputRelateProductActivityReqVo)
      return this.equals((InputRelateProductActivityReqVo)that);
    return false;
  }

  public boolean equals(InputRelateProductActivityReqVo that) {
    if (that == null)
      return false;

    boolean this_present_vos = true && this.isSetVos();
    boolean that_present_vos = true && that.isSetVos();
    if (this_present_vos || that_present_vos) {
      if (!(this_present_vos && that_present_vos))
        return false;
      if (!this.vos.equals(that.vos))
        return false;
    }

    boolean this_present_activityId = true && this.isSetActivityId();
    boolean that_present_activityId = true && that.isSetActivityId();
    if (this_present_activityId || that_present_activityId) {
      if (!(this_present_activityId && that_present_activityId))
        return false;
      if (this.activityId != that.activityId)
        return false;
    }

    boolean this_present_activityNo = true && this.isSetActivityNo();
    boolean that_present_activityNo = true && that.isSetActivityNo();
    if (this_present_activityNo || that_present_activityNo) {
      if (!(this_present_activityNo && that_present_activityNo))
        return false;
      if (!this.activityNo.equals(that.activityNo))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_operator = true && this.isSetOperator();
    boolean that_present_operator = true && that.isSetOperator();
    if (this_present_operator || that_present_operator) {
      if (!(this_present_operator && that_present_operator))
        return false;
      if (!this.operator.equals(that.operator))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_vos = true && (isSetVos());
    list.add(present_vos);
    if (present_vos)
      list.add(vos);

    boolean present_activityId = true && (isSetActivityId());
    list.add(present_activityId);
    if (present_activityId)
      list.add(activityId);

    boolean present_activityNo = true && (isSetActivityNo());
    list.add(present_activityNo);
    if (present_activityNo)
      list.add(activityNo);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_operator = true && (isSetOperator());
    list.add(present_operator);
    if (present_operator)
      list.add(operator);

    return list.hashCode();
  }

  @Override
  public int compareTo(InputRelateProductActivityReqVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetVos()).compareTo(other.isSetVos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vos, other.vos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActivityId()).compareTo(other.isSetActivityId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivityId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activityId, other.activityId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActivityNo()).compareTo(other.isSetActivityNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivityNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activityNo, other.activityNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOperator()).compareTo(other.isSetOperator());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperator()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operator, other.operator);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("InputRelateProductActivityReqVo(");
    boolean first = true;

    if (isSetVos()) {
      sb.append("vos:");
      if (this.vos == null) {
        sb.append("null");
      } else {
        sb.append(this.vos);
      }
      first = false;
    }
    if (isSetActivityId()) {
      if (!first) sb.append(", ");
      sb.append("activityId:");
      sb.append(this.activityId);
      first = false;
    }
    if (isSetActivityNo()) {
      if (!first) sb.append(", ");
      sb.append("activityNo:");
      if (this.activityNo == null) {
        sb.append("null");
      } else {
        sb.append(this.activityNo);
      }
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetOperator()) {
      if (!first) sb.append(", ");
      sb.append("operator:");
      if (this.operator == null) {
        sb.append("null");
      } else {
        sb.append(this.operator);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class InputRelateProductActivityReqVoStandardSchemeFactory implements SchemeFactory {
    public InputRelateProductActivityReqVoStandardScheme getScheme() {
      return new InputRelateProductActivityReqVoStandardScheme();
    }
  }

  private static class InputRelateProductActivityReqVoStandardScheme extends StandardScheme<InputRelateProductActivityReqVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, InputRelateProductActivityReqVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // VOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                struct.vos = new ArrayList<InputRelateProductActivityVo>(_list32.size);
                InputRelateProductActivityVo _elem33;
                for (int _i34 = 0; _i34 < _list32.size; ++_i34)
                {
                  _elem33 = new InputRelateProductActivityVo();
                  _elem33.read(iprot);
                  struct.vos.add(_elem33);
                }
                iprot.readListEnd();
              }
              struct.setVosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ACTIVITY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.activityId = iprot.readI64();
              struct.setActivityIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACTIVITY_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.activityNo = iprot.readString();
              struct.setActivityNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OPERATOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.operator = iprot.readString();
              struct.setOperatorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, InputRelateProductActivityReqVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.vos != null) {
        if (struct.isSetVos()) {
          oprot.writeFieldBegin(VOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.vos.size()));
            for (InputRelateProductActivityVo _iter35 : struct.vos)
            {
              _iter35.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetActivityId()) {
        oprot.writeFieldBegin(ACTIVITY_ID_FIELD_DESC);
        oprot.writeI64(struct.activityId);
        oprot.writeFieldEnd();
      }
      if (struct.activityNo != null) {
        if (struct.isSetActivityNo()) {
          oprot.writeFieldBegin(ACTIVITY_NO_FIELD_DESC);
          oprot.writeString(struct.activityNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.operator != null) {
        if (struct.isSetOperator()) {
          oprot.writeFieldBegin(OPERATOR_FIELD_DESC);
          oprot.writeString(struct.operator);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class InputRelateProductActivityReqVoTupleSchemeFactory implements SchemeFactory {
    public InputRelateProductActivityReqVoTupleScheme getScheme() {
      return new InputRelateProductActivityReqVoTupleScheme();
    }
  }

  private static class InputRelateProductActivityReqVoTupleScheme extends TupleScheme<InputRelateProductActivityReqVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, InputRelateProductActivityReqVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetVos()) {
        optionals.set(0);
      }
      if (struct.isSetActivityId()) {
        optionals.set(1);
      }
      if (struct.isSetActivityNo()) {
        optionals.set(2);
      }
      if (struct.isSetClientId()) {
        optionals.set(3);
      }
      if (struct.isSetOperator()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetVos()) {
        {
          oprot.writeI32(struct.vos.size());
          for (InputRelateProductActivityVo _iter36 : struct.vos)
          {
            _iter36.write(oprot);
          }
        }
      }
      if (struct.isSetActivityId()) {
        oprot.writeI64(struct.activityId);
      }
      if (struct.isSetActivityNo()) {
        oprot.writeString(struct.activityNo);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetOperator()) {
        oprot.writeString(struct.operator);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, InputRelateProductActivityReqVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.vos = new ArrayList<InputRelateProductActivityVo>(_list37.size);
          InputRelateProductActivityVo _elem38;
          for (int _i39 = 0; _i39 < _list37.size; ++_i39)
          {
            _elem38 = new InputRelateProductActivityVo();
            _elem38.read(iprot);
            struct.vos.add(_elem38);
          }
        }
        struct.setVosIsSet(true);
      }
      if (incoming.get(1)) {
        struct.activityId = iprot.readI64();
        struct.setActivityIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.activityNo = iprot.readString();
        struct.setActivityNoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.operator = iprot.readString();
        struct.setOperatorIsSet(true);
      }
    }
  }

}

