/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-1-12")
public class ProductActivityTagService {

  public interface Iface extends com.froad.thrift.monitor.service.BizMonitorService.Iface {

    /**
     * 推荐活动列表分页查询
     * 
     * @param vo
     * @param pageVo
     */
    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo findProductTagByPage(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo, com.froad.thrift.vo.PageVo pageVo) throws org.apache.thrift.TException;

    /**
     * 推荐活动列表详情查询(operator:当前操作员用户名)
     * 
     * @param reqVo
     */
    public com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo findProductTagDetail(com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo) throws org.apache.thrift.TException;

    /**
     * 关联商品信息分页查询
     * 
     * @param pageReqVo
     */
    public com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo findRelateProductInfoByPage(com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo) throws org.apache.thrift.TException;

    /**
     * 启用/禁用商品推荐活动标签
     * 
     * @param reqVo
     */
    public com.froad.thrift.vo.ResultVo enableProductRecommendActivityTag(com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo) throws org.apache.thrift.TException;

    /**
     * 调整关联商品权重
     * 
     * @param reqVo
     */
    public com.froad.thrift.vo.ResultVo adjustProductWeight(com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo) throws org.apache.thrift.TException;

    /**
     * 删除关联商品
     * 
     * @param reqVo
     */
    public com.froad.thrift.vo.ResultVo deleteRelateProduct(com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo) throws org.apache.thrift.TException;

    /**
     * 添加商品推荐活动标签信息
     * 
     * @param recommendVo
     */
    public com.froad.thrift.vo.ResultVo addProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo) throws org.apache.thrift.TException;

    /**
     * 更新商品推荐活动标签信息
     * 
     * @param recommendVo
     */
    public com.froad.thrift.vo.ResultVo updateProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo) throws org.apache.thrift.TException;

    /**
     * 关联商品
     * 
     * @param vo
     */
    public com.froad.thrift.vo.ResultVo relateProductInfo(com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo) throws org.apache.thrift.TException;

    /**
     * 批量导入关联商品
     * 
     * @param reqVo
     */
    public com.froad.thrift.vo.ResultVo inputRelateProductInfo(com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo) throws org.apache.thrift.TException;

    /**
     * 根据商品id查询商品名称
     * 
     * @param clientId
     * @param productId
     */
    public com.froad.thrift.vo.recommendactivitytag.ProductNameResVo queryProductNameByProductId(String clientId, String productId) throws org.apache.thrift.TException;

    /**
     * 导出关联商品标签信息
     * 
     * @param reqVo
     */
    public com.froad.thrift.vo.ExportResultRes exportProductRelateActivityTag(com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends com.froad.thrift.monitor.service.BizMonitorService .AsyncIface {

    public void findProductTagByPage(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo, com.froad.thrift.vo.PageVo pageVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findProductTagDetail(com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findRelateProductInfoByPage(com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void enableProductRecommendActivityTag(com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void adjustProductWeight(com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void deleteRelateProduct(com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void addProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void updateProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void relateProductInfo(com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void inputRelateProductInfo(com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void queryProductNameByProductId(String clientId, String productId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void exportProductRelateActivityTag(com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends com.froad.thrift.monitor.service.BizMonitorService.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo findProductTagByPage(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo, com.froad.thrift.vo.PageVo pageVo) throws org.apache.thrift.TException
    {
      send_findProductTagByPage(vo, pageVo);
      return recv_findProductTagByPage();
    }

    public void send_findProductTagByPage(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo, com.froad.thrift.vo.PageVo pageVo) throws org.apache.thrift.TException
    {
      findProductTagByPage_args args = new findProductTagByPage_args();
      args.setVo(vo);
      args.setPageVo(pageVo);
      sendBase("findProductTagByPage", args);
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo recv_findProductTagByPage() throws org.apache.thrift.TException
    {
      findProductTagByPage_result result = new findProductTagByPage_result();
      receiveBase(result, "findProductTagByPage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findProductTagByPage failed: unknown result");
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo findProductTagDetail(com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo) throws org.apache.thrift.TException
    {
      send_findProductTagDetail(reqVo);
      return recv_findProductTagDetail();
    }

    public void send_findProductTagDetail(com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo) throws org.apache.thrift.TException
    {
      findProductTagDetail_args args = new findProductTagDetail_args();
      args.setReqVo(reqVo);
      sendBase("findProductTagDetail", args);
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo recv_findProductTagDetail() throws org.apache.thrift.TException
    {
      findProductTagDetail_result result = new findProductTagDetail_result();
      receiveBase(result, "findProductTagDetail");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findProductTagDetail failed: unknown result");
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo findRelateProductInfoByPage(com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo) throws org.apache.thrift.TException
    {
      send_findRelateProductInfoByPage(pageReqVo);
      return recv_findRelateProductInfoByPage();
    }

    public void send_findRelateProductInfoByPage(com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo) throws org.apache.thrift.TException
    {
      findRelateProductInfoByPage_args args = new findRelateProductInfoByPage_args();
      args.setPageReqVo(pageReqVo);
      sendBase("findRelateProductInfoByPage", args);
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo recv_findRelateProductInfoByPage() throws org.apache.thrift.TException
    {
      findRelateProductInfoByPage_result result = new findRelateProductInfoByPage_result();
      receiveBase(result, "findRelateProductInfoByPage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findRelateProductInfoByPage failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo enableProductRecommendActivityTag(com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo) throws org.apache.thrift.TException
    {
      send_enableProductRecommendActivityTag(reqVo);
      return recv_enableProductRecommendActivityTag();
    }

    public void send_enableProductRecommendActivityTag(com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo) throws org.apache.thrift.TException
    {
      enableProductRecommendActivityTag_args args = new enableProductRecommendActivityTag_args();
      args.setReqVo(reqVo);
      sendBase("enableProductRecommendActivityTag", args);
    }

    public com.froad.thrift.vo.ResultVo recv_enableProductRecommendActivityTag() throws org.apache.thrift.TException
    {
      enableProductRecommendActivityTag_result result = new enableProductRecommendActivityTag_result();
      receiveBase(result, "enableProductRecommendActivityTag");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "enableProductRecommendActivityTag failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo adjustProductWeight(com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo) throws org.apache.thrift.TException
    {
      send_adjustProductWeight(reqVo);
      return recv_adjustProductWeight();
    }

    public void send_adjustProductWeight(com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo) throws org.apache.thrift.TException
    {
      adjustProductWeight_args args = new adjustProductWeight_args();
      args.setReqVo(reqVo);
      sendBase("adjustProductWeight", args);
    }

    public com.froad.thrift.vo.ResultVo recv_adjustProductWeight() throws org.apache.thrift.TException
    {
      adjustProductWeight_result result = new adjustProductWeight_result();
      receiveBase(result, "adjustProductWeight");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "adjustProductWeight failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo deleteRelateProduct(com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo) throws org.apache.thrift.TException
    {
      send_deleteRelateProduct(reqVo);
      return recv_deleteRelateProduct();
    }

    public void send_deleteRelateProduct(com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo) throws org.apache.thrift.TException
    {
      deleteRelateProduct_args args = new deleteRelateProduct_args();
      args.setReqVo(reqVo);
      sendBase("deleteRelateProduct", args);
    }

    public com.froad.thrift.vo.ResultVo recv_deleteRelateProduct() throws org.apache.thrift.TException
    {
      deleteRelateProduct_result result = new deleteRelateProduct_result();
      receiveBase(result, "deleteRelateProduct");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteRelateProduct failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo addProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo) throws org.apache.thrift.TException
    {
      send_addProductActivityTag(recommendVo);
      return recv_addProductActivityTag();
    }

    public void send_addProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo) throws org.apache.thrift.TException
    {
      addProductActivityTag_args args = new addProductActivityTag_args();
      args.setRecommendVo(recommendVo);
      sendBase("addProductActivityTag", args);
    }

    public com.froad.thrift.vo.ResultVo recv_addProductActivityTag() throws org.apache.thrift.TException
    {
      addProductActivityTag_result result = new addProductActivityTag_result();
      receiveBase(result, "addProductActivityTag");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addProductActivityTag failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo updateProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo) throws org.apache.thrift.TException
    {
      send_updateProductActivityTag(recommendVo);
      return recv_updateProductActivityTag();
    }

    public void send_updateProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo) throws org.apache.thrift.TException
    {
      updateProductActivityTag_args args = new updateProductActivityTag_args();
      args.setRecommendVo(recommendVo);
      sendBase("updateProductActivityTag", args);
    }

    public com.froad.thrift.vo.ResultVo recv_updateProductActivityTag() throws org.apache.thrift.TException
    {
      updateProductActivityTag_result result = new updateProductActivityTag_result();
      receiveBase(result, "updateProductActivityTag");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateProductActivityTag failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo relateProductInfo(com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo) throws org.apache.thrift.TException
    {
      send_relateProductInfo(vo);
      return recv_relateProductInfo();
    }

    public void send_relateProductInfo(com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo) throws org.apache.thrift.TException
    {
      relateProductInfo_args args = new relateProductInfo_args();
      args.setVo(vo);
      sendBase("relateProductInfo", args);
    }

    public com.froad.thrift.vo.ResultVo recv_relateProductInfo() throws org.apache.thrift.TException
    {
      relateProductInfo_result result = new relateProductInfo_result();
      receiveBase(result, "relateProductInfo");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "relateProductInfo failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo inputRelateProductInfo(com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo) throws org.apache.thrift.TException
    {
      send_inputRelateProductInfo(reqVo);
      return recv_inputRelateProductInfo();
    }

    public void send_inputRelateProductInfo(com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo) throws org.apache.thrift.TException
    {
      inputRelateProductInfo_args args = new inputRelateProductInfo_args();
      args.setReqVo(reqVo);
      sendBase("inputRelateProductInfo", args);
    }

    public com.froad.thrift.vo.ResultVo recv_inputRelateProductInfo() throws org.apache.thrift.TException
    {
      inputRelateProductInfo_result result = new inputRelateProductInfo_result();
      receiveBase(result, "inputRelateProductInfo");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "inputRelateProductInfo failed: unknown result");
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductNameResVo queryProductNameByProductId(String clientId, String productId) throws org.apache.thrift.TException
    {
      send_queryProductNameByProductId(clientId, productId);
      return recv_queryProductNameByProductId();
    }

    public void send_queryProductNameByProductId(String clientId, String productId) throws org.apache.thrift.TException
    {
      queryProductNameByProductId_args args = new queryProductNameByProductId_args();
      args.setClientId(clientId);
      args.setProductId(productId);
      sendBase("queryProductNameByProductId", args);
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductNameResVo recv_queryProductNameByProductId() throws org.apache.thrift.TException
    {
      queryProductNameByProductId_result result = new queryProductNameByProductId_result();
      receiveBase(result, "queryProductNameByProductId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "queryProductNameByProductId failed: unknown result");
    }

    public com.froad.thrift.vo.ExportResultRes exportProductRelateActivityTag(com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo) throws org.apache.thrift.TException
    {
      send_exportProductRelateActivityTag(reqVo);
      return recv_exportProductRelateActivityTag();
    }

    public void send_exportProductRelateActivityTag(com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo) throws org.apache.thrift.TException
    {
      exportProductRelateActivityTag_args args = new exportProductRelateActivityTag_args();
      args.setReqVo(reqVo);
      sendBase("exportProductRelateActivityTag", args);
    }

    public com.froad.thrift.vo.ExportResultRes recv_exportProductRelateActivityTag() throws org.apache.thrift.TException
    {
      exportProductRelateActivityTag_result result = new exportProductRelateActivityTag_result();
      receiveBase(result, "exportProductRelateActivityTag");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "exportProductRelateActivityTag failed: unknown result");
    }

  }
  public static class AsyncClient extends com.froad.thrift.monitor.service.BizMonitorService.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void findProductTagByPage(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo, com.froad.thrift.vo.PageVo pageVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findProductTagByPage_call method_call = new findProductTagByPage_call(vo, pageVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findProductTagByPage_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo;
      private com.froad.thrift.vo.PageVo pageVo;
      public findProductTagByPage_call(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo, com.froad.thrift.vo.PageVo pageVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.vo = vo;
        this.pageVo = pageVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findProductTagByPage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findProductTagByPage_args args = new findProductTagByPage_args();
        args.setVo(vo);
        args.setPageVo(pageVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findProductTagByPage();
      }
    }

    public void findProductTagDetail(com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findProductTagDetail_call method_call = new findProductTagDetail_call(reqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findProductTagDetail_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo;
      public findProductTagDetail_call(com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.reqVo = reqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findProductTagDetail", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findProductTagDetail_args args = new findProductTagDetail_args();
        args.setReqVo(reqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findProductTagDetail();
      }
    }

    public void findRelateProductInfoByPage(com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findRelateProductInfoByPage_call method_call = new findRelateProductInfoByPage_call(pageReqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findRelateProductInfoByPage_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo;
      public findRelateProductInfoByPage_call(com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.pageReqVo = pageReqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findRelateProductInfoByPage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findRelateProductInfoByPage_args args = new findRelateProductInfoByPage_args();
        args.setPageReqVo(pageReqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findRelateProductInfoByPage();
      }
    }

    public void enableProductRecommendActivityTag(com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      enableProductRecommendActivityTag_call method_call = new enableProductRecommendActivityTag_call(reqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class enableProductRecommendActivityTag_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo;
      public enableProductRecommendActivityTag_call(com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.reqVo = reqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("enableProductRecommendActivityTag", org.apache.thrift.protocol.TMessageType.CALL, 0));
        enableProductRecommendActivityTag_args args = new enableProductRecommendActivityTag_args();
        args.setReqVo(reqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_enableProductRecommendActivityTag();
      }
    }

    public void adjustProductWeight(com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      adjustProductWeight_call method_call = new adjustProductWeight_call(reqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class adjustProductWeight_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo;
      public adjustProductWeight_call(com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.reqVo = reqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("adjustProductWeight", org.apache.thrift.protocol.TMessageType.CALL, 0));
        adjustProductWeight_args args = new adjustProductWeight_args();
        args.setReqVo(reqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_adjustProductWeight();
      }
    }

    public void deleteRelateProduct(com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteRelateProduct_call method_call = new deleteRelateProduct_call(reqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteRelateProduct_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo;
      public deleteRelateProduct_call(com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.reqVo = reqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteRelateProduct", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteRelateProduct_args args = new deleteRelateProduct_args();
        args.setReqVo(reqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deleteRelateProduct();
      }
    }

    public void addProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addProductActivityTag_call method_call = new addProductActivityTag_call(recommendVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addProductActivityTag_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo;
      public addProductActivityTag_call(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.recommendVo = recommendVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addProductActivityTag", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addProductActivityTag_args args = new addProductActivityTag_args();
        args.setRecommendVo(recommendVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addProductActivityTag();
      }
    }

    public void updateProductActivityTag(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateProductActivityTag_call method_call = new updateProductActivityTag_call(recommendVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateProductActivityTag_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo;
      public updateProductActivityTag_call(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.recommendVo = recommendVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateProductActivityTag", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateProductActivityTag_args args = new updateProductActivityTag_args();
        args.setRecommendVo(recommendVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateProductActivityTag();
      }
    }

    public void relateProductInfo(com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      relateProductInfo_call method_call = new relateProductInfo_call(vo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class relateProductInfo_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo;
      public relateProductInfo_call(com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.vo = vo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("relateProductInfo", org.apache.thrift.protocol.TMessageType.CALL, 0));
        relateProductInfo_args args = new relateProductInfo_args();
        args.setVo(vo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_relateProductInfo();
      }
    }

    public void inputRelateProductInfo(com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      inputRelateProductInfo_call method_call = new inputRelateProductInfo_call(reqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class inputRelateProductInfo_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo;
      public inputRelateProductInfo_call(com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.reqVo = reqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("inputRelateProductInfo", org.apache.thrift.protocol.TMessageType.CALL, 0));
        inputRelateProductInfo_args args = new inputRelateProductInfo_args();
        args.setReqVo(reqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_inputRelateProductInfo();
      }
    }

    public void queryProductNameByProductId(String clientId, String productId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      queryProductNameByProductId_call method_call = new queryProductNameByProductId_call(clientId, productId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class queryProductNameByProductId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String clientId;
      private String productId;
      public queryProductNameByProductId_call(String clientId, String productId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.clientId = clientId;
        this.productId = productId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("queryProductNameByProductId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        queryProductNameByProductId_args args = new queryProductNameByProductId_args();
        args.setClientId(clientId);
        args.setProductId(productId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.recommendactivitytag.ProductNameResVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_queryProductNameByProductId();
      }
    }

    public void exportProductRelateActivityTag(com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      exportProductRelateActivityTag_call method_call = new exportProductRelateActivityTag_call(reqVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class exportProductRelateActivityTag_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo;
      public exportProductRelateActivityTag_call(com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.reqVo = reqVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("exportProductRelateActivityTag", org.apache.thrift.protocol.TMessageType.CALL, 0));
        exportProductRelateActivityTag_args args = new exportProductRelateActivityTag_args();
        args.setReqVo(reqVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ExportResultRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_exportProductRelateActivityTag();
      }
    }

  }

  public static class Processor<I extends Iface> extends com.froad.thrift.monitor.service.BizMonitorService.Processor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("findProductTagByPage", new findProductTagByPage());
      processMap.put("findProductTagDetail", new findProductTagDetail());
      processMap.put("findRelateProductInfoByPage", new findRelateProductInfoByPage());
      processMap.put("enableProductRecommendActivityTag", new enableProductRecommendActivityTag());
      processMap.put("adjustProductWeight", new adjustProductWeight());
      processMap.put("deleteRelateProduct", new deleteRelateProduct());
      processMap.put("addProductActivityTag", new addProductActivityTag());
      processMap.put("updateProductActivityTag", new updateProductActivityTag());
      processMap.put("relateProductInfo", new relateProductInfo());
      processMap.put("inputRelateProductInfo", new inputRelateProductInfo());
      processMap.put("queryProductNameByProductId", new queryProductNameByProductId());
      processMap.put("exportProductRelateActivityTag", new exportProductRelateActivityTag());
      return processMap;
    }

    public static class findProductTagByPage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findProductTagByPage_args> {
      public findProductTagByPage() {
        super("findProductTagByPage");
      }

      public findProductTagByPage_args getEmptyArgsInstance() {
        return new findProductTagByPage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findProductTagByPage_result getResult(I iface, findProductTagByPage_args args) throws org.apache.thrift.TException {
        findProductTagByPage_result result = new findProductTagByPage_result();
        result.success = iface.findProductTagByPage(args.vo, args.pageVo);
        return result;
      }
    }

    public static class findProductTagDetail<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findProductTagDetail_args> {
      public findProductTagDetail() {
        super("findProductTagDetail");
      }

      public findProductTagDetail_args getEmptyArgsInstance() {
        return new findProductTagDetail_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findProductTagDetail_result getResult(I iface, findProductTagDetail_args args) throws org.apache.thrift.TException {
        findProductTagDetail_result result = new findProductTagDetail_result();
        result.success = iface.findProductTagDetail(args.reqVo);
        return result;
      }
    }

    public static class findRelateProductInfoByPage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findRelateProductInfoByPage_args> {
      public findRelateProductInfoByPage() {
        super("findRelateProductInfoByPage");
      }

      public findRelateProductInfoByPage_args getEmptyArgsInstance() {
        return new findRelateProductInfoByPage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findRelateProductInfoByPage_result getResult(I iface, findRelateProductInfoByPage_args args) throws org.apache.thrift.TException {
        findRelateProductInfoByPage_result result = new findRelateProductInfoByPage_result();
        result.success = iface.findRelateProductInfoByPage(args.pageReqVo);
        return result;
      }
    }

    public static class enableProductRecommendActivityTag<I extends Iface> extends org.apache.thrift.ProcessFunction<I, enableProductRecommendActivityTag_args> {
      public enableProductRecommendActivityTag() {
        super("enableProductRecommendActivityTag");
      }

      public enableProductRecommendActivityTag_args getEmptyArgsInstance() {
        return new enableProductRecommendActivityTag_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public enableProductRecommendActivityTag_result getResult(I iface, enableProductRecommendActivityTag_args args) throws org.apache.thrift.TException {
        enableProductRecommendActivityTag_result result = new enableProductRecommendActivityTag_result();
        result.success = iface.enableProductRecommendActivityTag(args.reqVo);
        return result;
      }
    }

    public static class adjustProductWeight<I extends Iface> extends org.apache.thrift.ProcessFunction<I, adjustProductWeight_args> {
      public adjustProductWeight() {
        super("adjustProductWeight");
      }

      public adjustProductWeight_args getEmptyArgsInstance() {
        return new adjustProductWeight_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public adjustProductWeight_result getResult(I iface, adjustProductWeight_args args) throws org.apache.thrift.TException {
        adjustProductWeight_result result = new adjustProductWeight_result();
        result.success = iface.adjustProductWeight(args.reqVo);
        return result;
      }
    }

    public static class deleteRelateProduct<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteRelateProduct_args> {
      public deleteRelateProduct() {
        super("deleteRelateProduct");
      }

      public deleteRelateProduct_args getEmptyArgsInstance() {
        return new deleteRelateProduct_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteRelateProduct_result getResult(I iface, deleteRelateProduct_args args) throws org.apache.thrift.TException {
        deleteRelateProduct_result result = new deleteRelateProduct_result();
        result.success = iface.deleteRelateProduct(args.reqVo);
        return result;
      }
    }

    public static class addProductActivityTag<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addProductActivityTag_args> {
      public addProductActivityTag() {
        super("addProductActivityTag");
      }

      public addProductActivityTag_args getEmptyArgsInstance() {
        return new addProductActivityTag_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addProductActivityTag_result getResult(I iface, addProductActivityTag_args args) throws org.apache.thrift.TException {
        addProductActivityTag_result result = new addProductActivityTag_result();
        result.success = iface.addProductActivityTag(args.recommendVo);
        return result;
      }
    }

    public static class updateProductActivityTag<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateProductActivityTag_args> {
      public updateProductActivityTag() {
        super("updateProductActivityTag");
      }

      public updateProductActivityTag_args getEmptyArgsInstance() {
        return new updateProductActivityTag_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateProductActivityTag_result getResult(I iface, updateProductActivityTag_args args) throws org.apache.thrift.TException {
        updateProductActivityTag_result result = new updateProductActivityTag_result();
        result.success = iface.updateProductActivityTag(args.recommendVo);
        return result;
      }
    }

    public static class relateProductInfo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, relateProductInfo_args> {
      public relateProductInfo() {
        super("relateProductInfo");
      }

      public relateProductInfo_args getEmptyArgsInstance() {
        return new relateProductInfo_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public relateProductInfo_result getResult(I iface, relateProductInfo_args args) throws org.apache.thrift.TException {
        relateProductInfo_result result = new relateProductInfo_result();
        result.success = iface.relateProductInfo(args.vo);
        return result;
      }
    }

    public static class inputRelateProductInfo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, inputRelateProductInfo_args> {
      public inputRelateProductInfo() {
        super("inputRelateProductInfo");
      }

      public inputRelateProductInfo_args getEmptyArgsInstance() {
        return new inputRelateProductInfo_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public inputRelateProductInfo_result getResult(I iface, inputRelateProductInfo_args args) throws org.apache.thrift.TException {
        inputRelateProductInfo_result result = new inputRelateProductInfo_result();
        result.success = iface.inputRelateProductInfo(args.reqVo);
        return result;
      }
    }

    public static class queryProductNameByProductId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, queryProductNameByProductId_args> {
      public queryProductNameByProductId() {
        super("queryProductNameByProductId");
      }

      public queryProductNameByProductId_args getEmptyArgsInstance() {
        return new queryProductNameByProductId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public queryProductNameByProductId_result getResult(I iface, queryProductNameByProductId_args args) throws org.apache.thrift.TException {
        queryProductNameByProductId_result result = new queryProductNameByProductId_result();
        result.success = iface.queryProductNameByProductId(args.clientId, args.productId);
        return result;
      }
    }

    public static class exportProductRelateActivityTag<I extends Iface> extends org.apache.thrift.ProcessFunction<I, exportProductRelateActivityTag_args> {
      public exportProductRelateActivityTag() {
        super("exportProductRelateActivityTag");
      }

      public exportProductRelateActivityTag_args getEmptyArgsInstance() {
        return new exportProductRelateActivityTag_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public exportProductRelateActivityTag_result getResult(I iface, exportProductRelateActivityTag_args args) throws org.apache.thrift.TException {
        exportProductRelateActivityTag_result result = new exportProductRelateActivityTag_result();
        result.success = iface.exportProductRelateActivityTag(args.reqVo);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends com.froad.thrift.monitor.service.BizMonitorService.AsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("findProductTagByPage", new findProductTagByPage());
      processMap.put("findProductTagDetail", new findProductTagDetail());
      processMap.put("findRelateProductInfoByPage", new findRelateProductInfoByPage());
      processMap.put("enableProductRecommendActivityTag", new enableProductRecommendActivityTag());
      processMap.put("adjustProductWeight", new adjustProductWeight());
      processMap.put("deleteRelateProduct", new deleteRelateProduct());
      processMap.put("addProductActivityTag", new addProductActivityTag());
      processMap.put("updateProductActivityTag", new updateProductActivityTag());
      processMap.put("relateProductInfo", new relateProductInfo());
      processMap.put("inputRelateProductInfo", new inputRelateProductInfo());
      processMap.put("queryProductNameByProductId", new queryProductNameByProductId());
      processMap.put("exportProductRelateActivityTag", new exportProductRelateActivityTag());
      return processMap;
    }

    public static class findProductTagByPage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findProductTagByPage_args, com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo> {
      public findProductTagByPage() {
        super("findProductTagByPage");
      }

      public findProductTagByPage_args getEmptyArgsInstance() {
        return new findProductTagByPage_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo>() { 
          public void onComplete(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo o) {
            findProductTagByPage_result result = new findProductTagByPage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findProductTagByPage_result result = new findProductTagByPage_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findProductTagByPage_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo> resultHandler) throws TException {
        iface.findProductTagByPage(args.vo, args.pageVo,resultHandler);
      }
    }

    public static class findProductTagDetail<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findProductTagDetail_args, com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo> {
      public findProductTagDetail() {
        super("findProductTagDetail");
      }

      public findProductTagDetail_args getEmptyArgsInstance() {
        return new findProductTagDetail_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo>() { 
          public void onComplete(com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo o) {
            findProductTagDetail_result result = new findProductTagDetail_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findProductTagDetail_result result = new findProductTagDetail_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findProductTagDetail_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo> resultHandler) throws TException {
        iface.findProductTagDetail(args.reqVo,resultHandler);
      }
    }

    public static class findRelateProductInfoByPage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findRelateProductInfoByPage_args, com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo> {
      public findRelateProductInfoByPage() {
        super("findRelateProductInfoByPage");
      }

      public findRelateProductInfoByPage_args getEmptyArgsInstance() {
        return new findRelateProductInfoByPage_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo>() { 
          public void onComplete(com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo o) {
            findRelateProductInfoByPage_result result = new findRelateProductInfoByPage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findRelateProductInfoByPage_result result = new findRelateProductInfoByPage_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findRelateProductInfoByPage_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo> resultHandler) throws TException {
        iface.findRelateProductInfoByPage(args.pageReqVo,resultHandler);
      }
    }

    public static class enableProductRecommendActivityTag<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, enableProductRecommendActivityTag_args, com.froad.thrift.vo.ResultVo> {
      public enableProductRecommendActivityTag() {
        super("enableProductRecommendActivityTag");
      }

      public enableProductRecommendActivityTag_args getEmptyArgsInstance() {
        return new enableProductRecommendActivityTag_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            enableProductRecommendActivityTag_result result = new enableProductRecommendActivityTag_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            enableProductRecommendActivityTag_result result = new enableProductRecommendActivityTag_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, enableProductRecommendActivityTag_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.enableProductRecommendActivityTag(args.reqVo,resultHandler);
      }
    }

    public static class adjustProductWeight<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, adjustProductWeight_args, com.froad.thrift.vo.ResultVo> {
      public adjustProductWeight() {
        super("adjustProductWeight");
      }

      public adjustProductWeight_args getEmptyArgsInstance() {
        return new adjustProductWeight_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            adjustProductWeight_result result = new adjustProductWeight_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            adjustProductWeight_result result = new adjustProductWeight_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, adjustProductWeight_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.adjustProductWeight(args.reqVo,resultHandler);
      }
    }

    public static class deleteRelateProduct<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteRelateProduct_args, com.froad.thrift.vo.ResultVo> {
      public deleteRelateProduct() {
        super("deleteRelateProduct");
      }

      public deleteRelateProduct_args getEmptyArgsInstance() {
        return new deleteRelateProduct_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            deleteRelateProduct_result result = new deleteRelateProduct_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            deleteRelateProduct_result result = new deleteRelateProduct_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteRelateProduct_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.deleteRelateProduct(args.reqVo,resultHandler);
      }
    }

    public static class addProductActivityTag<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addProductActivityTag_args, com.froad.thrift.vo.ResultVo> {
      public addProductActivityTag() {
        super("addProductActivityTag");
      }

      public addProductActivityTag_args getEmptyArgsInstance() {
        return new addProductActivityTag_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            addProductActivityTag_result result = new addProductActivityTag_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addProductActivityTag_result result = new addProductActivityTag_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addProductActivityTag_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.addProductActivityTag(args.recommendVo,resultHandler);
      }
    }

    public static class updateProductActivityTag<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateProductActivityTag_args, com.froad.thrift.vo.ResultVo> {
      public updateProductActivityTag() {
        super("updateProductActivityTag");
      }

      public updateProductActivityTag_args getEmptyArgsInstance() {
        return new updateProductActivityTag_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            updateProductActivityTag_result result = new updateProductActivityTag_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            updateProductActivityTag_result result = new updateProductActivityTag_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateProductActivityTag_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.updateProductActivityTag(args.recommendVo,resultHandler);
      }
    }

    public static class relateProductInfo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, relateProductInfo_args, com.froad.thrift.vo.ResultVo> {
      public relateProductInfo() {
        super("relateProductInfo");
      }

      public relateProductInfo_args getEmptyArgsInstance() {
        return new relateProductInfo_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            relateProductInfo_result result = new relateProductInfo_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            relateProductInfo_result result = new relateProductInfo_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, relateProductInfo_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.relateProductInfo(args.vo,resultHandler);
      }
    }

    public static class inputRelateProductInfo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, inputRelateProductInfo_args, com.froad.thrift.vo.ResultVo> {
      public inputRelateProductInfo() {
        super("inputRelateProductInfo");
      }

      public inputRelateProductInfo_args getEmptyArgsInstance() {
        return new inputRelateProductInfo_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            inputRelateProductInfo_result result = new inputRelateProductInfo_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            inputRelateProductInfo_result result = new inputRelateProductInfo_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, inputRelateProductInfo_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.inputRelateProductInfo(args.reqVo,resultHandler);
      }
    }

    public static class queryProductNameByProductId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, queryProductNameByProductId_args, com.froad.thrift.vo.recommendactivitytag.ProductNameResVo> {
      public queryProductNameByProductId() {
        super("queryProductNameByProductId");
      }

      public queryProductNameByProductId_args getEmptyArgsInstance() {
        return new queryProductNameByProductId_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.ProductNameResVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.ProductNameResVo>() { 
          public void onComplete(com.froad.thrift.vo.recommendactivitytag.ProductNameResVo o) {
            queryProductNameByProductId_result result = new queryProductNameByProductId_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            queryProductNameByProductId_result result = new queryProductNameByProductId_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, queryProductNameByProductId_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.recommendactivitytag.ProductNameResVo> resultHandler) throws TException {
        iface.queryProductNameByProductId(args.clientId, args.productId,resultHandler);
      }
    }

    public static class exportProductRelateActivityTag<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, exportProductRelateActivityTag_args, com.froad.thrift.vo.ExportResultRes> {
      public exportProductRelateActivityTag() {
        super("exportProductRelateActivityTag");
      }

      public exportProductRelateActivityTag_args getEmptyArgsInstance() {
        return new exportProductRelateActivityTag_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes>() { 
          public void onComplete(com.froad.thrift.vo.ExportResultRes o) {
            exportProductRelateActivityTag_result result = new exportProductRelateActivityTag_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            exportProductRelateActivityTag_result result = new exportProductRelateActivityTag_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, exportProductRelateActivityTag_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ExportResultRes> resultHandler) throws TException {
        iface.exportProductRelateActivityTag(args.reqVo,resultHandler);
      }
    }

  }

  public static class findProductTagByPage_args implements org.apache.thrift.TBase<findProductTagByPage_args, findProductTagByPage_args._Fields>, java.io.Serializable, Cloneable, Comparable<findProductTagByPage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findProductTagByPage_args");

    private static final org.apache.thrift.protocol.TField VO_FIELD_DESC = new org.apache.thrift.protocol.TField("vo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField PAGE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("pageVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findProductTagByPage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findProductTagByPage_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo; // required
    public com.froad.thrift.vo.PageVo pageVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      VO((short)1, "vo"),
      PAGE_VO((short)2, "pageVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // VO
            return VO;
          case 2: // PAGE_VO
            return PAGE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.VO, new org.apache.thrift.meta_data.FieldMetaData("vo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo.class)));
      tmpMap.put(_Fields.PAGE_VO, new org.apache.thrift.meta_data.FieldMetaData("pageVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findProductTagByPage_args.class, metaDataMap);
    }

    public findProductTagByPage_args() {
    }

    public findProductTagByPage_args(
      com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo,
      com.froad.thrift.vo.PageVo pageVo)
    {
      this();
      this.vo = vo;
      this.pageVo = pageVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findProductTagByPage_args(findProductTagByPage_args other) {
      if (other.isSetVo()) {
        this.vo = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo(other.vo);
      }
      if (other.isSetPageVo()) {
        this.pageVo = new com.froad.thrift.vo.PageVo(other.pageVo);
      }
    }

    public findProductTagByPage_args deepCopy() {
      return new findProductTagByPage_args(this);
    }

    @Override
    public void clear() {
      this.vo = null;
      this.pageVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo getVo() {
      return this.vo;
    }

    public findProductTagByPage_args setVo(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo vo) {
      this.vo = vo;
      return this;
    }

    public void unsetVo() {
      this.vo = null;
    }

    /** Returns true if field vo is set (has been assigned a value) and false otherwise */
    public boolean isSetVo() {
      return this.vo != null;
    }

    public void setVoIsSet(boolean value) {
      if (!value) {
        this.vo = null;
      }
    }

    public com.froad.thrift.vo.PageVo getPageVo() {
      return this.pageVo;
    }

    public findProductTagByPage_args setPageVo(com.froad.thrift.vo.PageVo pageVo) {
      this.pageVo = pageVo;
      return this;
    }

    public void unsetPageVo() {
      this.pageVo = null;
    }

    /** Returns true if field pageVo is set (has been assigned a value) and false otherwise */
    public boolean isSetPageVo() {
      return this.pageVo != null;
    }

    public void setPageVoIsSet(boolean value) {
      if (!value) {
        this.pageVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case VO:
        if (value == null) {
          unsetVo();
        } else {
          setVo((com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo)value);
        }
        break;

      case PAGE_VO:
        if (value == null) {
          unsetPageVo();
        } else {
          setPageVo((com.froad.thrift.vo.PageVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case VO:
        return getVo();

      case PAGE_VO:
        return getPageVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case VO:
        return isSetVo();
      case PAGE_VO:
        return isSetPageVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findProductTagByPage_args)
        return this.equals((findProductTagByPage_args)that);
      return false;
    }

    public boolean equals(findProductTagByPage_args that) {
      if (that == null)
        return false;

      boolean this_present_vo = true && this.isSetVo();
      boolean that_present_vo = true && that.isSetVo();
      if (this_present_vo || that_present_vo) {
        if (!(this_present_vo && that_present_vo))
          return false;
        if (!this.vo.equals(that.vo))
          return false;
      }

      boolean this_present_pageVo = true && this.isSetPageVo();
      boolean that_present_pageVo = true && that.isSetPageVo();
      if (this_present_pageVo || that_present_pageVo) {
        if (!(this_present_pageVo && that_present_pageVo))
          return false;
        if (!this.pageVo.equals(that.pageVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_vo = true && (isSetVo());
      list.add(present_vo);
      if (present_vo)
        list.add(vo);

      boolean present_pageVo = true && (isSetPageVo());
      list.add(present_pageVo);
      if (present_pageVo)
        list.add(pageVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findProductTagByPage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetVo()).compareTo(other.isSetVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vo, other.vo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPageVo()).compareTo(other.isSetPageVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageVo, other.pageVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findProductTagByPage_args(");
      boolean first = true;

      sb.append("vo:");
      if (this.vo == null) {
        sb.append("null");
      } else {
        sb.append(this.vo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageVo:");
      if (this.pageVo == null) {
        sb.append("null");
      } else {
        sb.append(this.pageVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (vo != null) {
        vo.validate();
      }
      if (pageVo != null) {
        pageVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findProductTagByPage_argsStandardSchemeFactory implements SchemeFactory {
      public findProductTagByPage_argsStandardScheme getScheme() {
        return new findProductTagByPage_argsStandardScheme();
      }
    }

    private static class findProductTagByPage_argsStandardScheme extends StandardScheme<findProductTagByPage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findProductTagByPage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.vo = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo();
                struct.vo.read(iprot);
                struct.setVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // PAGE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.pageVo = new com.froad.thrift.vo.PageVo();
                struct.pageVo.read(iprot);
                struct.setPageVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findProductTagByPage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.vo != null) {
          oprot.writeFieldBegin(VO_FIELD_DESC);
          struct.vo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.pageVo != null) {
          oprot.writeFieldBegin(PAGE_VO_FIELD_DESC);
          struct.pageVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findProductTagByPage_argsTupleSchemeFactory implements SchemeFactory {
      public findProductTagByPage_argsTupleScheme getScheme() {
        return new findProductTagByPage_argsTupleScheme();
      }
    }

    private static class findProductTagByPage_argsTupleScheme extends TupleScheme<findProductTagByPage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findProductTagByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetVo()) {
          optionals.set(0);
        }
        if (struct.isSetPageVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetVo()) {
          struct.vo.write(oprot);
        }
        if (struct.isSetPageVo()) {
          struct.pageVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findProductTagByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.vo = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo();
          struct.vo.read(iprot);
          struct.setVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.pageVo = new com.froad.thrift.vo.PageVo();
          struct.pageVo.read(iprot);
          struct.setPageVoIsSet(true);
        }
      }
    }

  }

  public static class findProductTagByPage_result implements org.apache.thrift.TBase<findProductTagByPage_result, findProductTagByPage_result._Fields>, java.io.Serializable, Cloneable, Comparable<findProductTagByPage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findProductTagByPage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findProductTagByPage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findProductTagByPage_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findProductTagByPage_result.class, metaDataMap);
    }

    public findProductTagByPage_result() {
    }

    public findProductTagByPage_result(
      com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findProductTagByPage_result(findProductTagByPage_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo(other.success);
      }
    }

    public findProductTagByPage_result deepCopy() {
      return new findProductTagByPage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo getSuccess() {
      return this.success;
    }

    public findProductTagByPage_result setSuccess(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findProductTagByPage_result)
        return this.equals((findProductTagByPage_result)that);
      return false;
    }

    public boolean equals(findProductTagByPage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findProductTagByPage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findProductTagByPage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findProductTagByPage_resultStandardSchemeFactory implements SchemeFactory {
      public findProductTagByPage_resultStandardScheme getScheme() {
        return new findProductTagByPage_resultStandardScheme();
      }
    }

    private static class findProductTagByPage_resultStandardScheme extends StandardScheme<findProductTagByPage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findProductTagByPage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findProductTagByPage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findProductTagByPage_resultTupleSchemeFactory implements SchemeFactory {
      public findProductTagByPage_resultTupleScheme getScheme() {
        return new findProductTagByPage_resultTupleScheme();
      }
    }

    private static class findProductTagByPage_resultTupleScheme extends TupleScheme<findProductTagByPage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findProductTagByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findProductTagByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagPageVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findProductTagDetail_args implements org.apache.thrift.TBase<findProductTagDetail_args, findProductTagDetail_args._Fields>, java.io.Serializable, Cloneable, Comparable<findProductTagDetail_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findProductTagDetail_args");

    private static final org.apache.thrift.protocol.TField REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("reqVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findProductTagDetail_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findProductTagDetail_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQ_VO((short)1, "reqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQ_VO
            return REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("reqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findProductTagDetail_args.class, metaDataMap);
    }

    public findProductTagDetail_args() {
    }

    public findProductTagDetail_args(
      com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo)
    {
      this();
      this.reqVo = reqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findProductTagDetail_args(findProductTagDetail_args other) {
      if (other.isSetReqVo()) {
        this.reqVo = new com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo(other.reqVo);
      }
    }

    public findProductTagDetail_args deepCopy() {
      return new findProductTagDetail_args(this);
    }

    @Override
    public void clear() {
      this.reqVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo getReqVo() {
      return this.reqVo;
    }

    public findProductTagDetail_args setReqVo(com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo reqVo) {
      this.reqVo = reqVo;
      return this;
    }

    public void unsetReqVo() {
      this.reqVo = null;
    }

    /** Returns true if field reqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetReqVo() {
      return this.reqVo != null;
    }

    public void setReqVoIsSet(boolean value) {
      if (!value) {
        this.reqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQ_VO:
        if (value == null) {
          unsetReqVo();
        } else {
          setReqVo((com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQ_VO:
        return getReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQ_VO:
        return isSetReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findProductTagDetail_args)
        return this.equals((findProductTagDetail_args)that);
      return false;
    }

    public boolean equals(findProductTagDetail_args that) {
      if (that == null)
        return false;

      boolean this_present_reqVo = true && this.isSetReqVo();
      boolean that_present_reqVo = true && that.isSetReqVo();
      if (this_present_reqVo || that_present_reqVo) {
        if (!(this_present_reqVo && that_present_reqVo))
          return false;
        if (!this.reqVo.equals(that.reqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_reqVo = true && (isSetReqVo());
      list.add(present_reqVo);
      if (present_reqVo)
        list.add(reqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findProductTagDetail_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetReqVo()).compareTo(other.isSetReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqVo, other.reqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findProductTagDetail_args(");
      boolean first = true;

      sb.append("reqVo:");
      if (this.reqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.reqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (reqVo != null) {
        reqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findProductTagDetail_argsStandardSchemeFactory implements SchemeFactory {
      public findProductTagDetail_argsStandardScheme getScheme() {
        return new findProductTagDetail_argsStandardScheme();
      }
    }

    private static class findProductTagDetail_argsStandardScheme extends StandardScheme<findProductTagDetail_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findProductTagDetail_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo();
                struct.reqVo.read(iprot);
                struct.setReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findProductTagDetail_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.reqVo != null) {
          oprot.writeFieldBegin(REQ_VO_FIELD_DESC);
          struct.reqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findProductTagDetail_argsTupleSchemeFactory implements SchemeFactory {
      public findProductTagDetail_argsTupleScheme getScheme() {
        return new findProductTagDetail_argsTupleScheme();
      }
    }

    private static class findProductTagDetail_argsTupleScheme extends TupleScheme<findProductTagDetail_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findProductTagDetail_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetReqVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetReqVo()) {
          struct.reqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findProductTagDetail_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailReqVo();
          struct.reqVo.read(iprot);
          struct.setReqVoIsSet(true);
        }
      }
    }

  }

  public static class findProductTagDetail_result implements org.apache.thrift.TBase<findProductTagDetail_result, findProductTagDetail_result._Fields>, java.io.Serializable, Cloneable, Comparable<findProductTagDetail_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findProductTagDetail_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findProductTagDetail_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findProductTagDetail_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findProductTagDetail_result.class, metaDataMap);
    }

    public findProductTagDetail_result() {
    }

    public findProductTagDetail_result(
      com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findProductTagDetail_result(findProductTagDetail_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo(other.success);
      }
    }

    public findProductTagDetail_result deepCopy() {
      return new findProductTagDetail_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo getSuccess() {
      return this.success;
    }

    public findProductTagDetail_result setSuccess(com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findProductTagDetail_result)
        return this.equals((findProductTagDetail_result)that);
      return false;
    }

    public boolean equals(findProductTagDetail_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findProductTagDetail_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findProductTagDetail_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findProductTagDetail_resultStandardSchemeFactory implements SchemeFactory {
      public findProductTagDetail_resultStandardScheme getScheme() {
        return new findProductTagDetail_resultStandardScheme();
      }
    }

    private static class findProductTagDetail_resultStandardScheme extends StandardScheme<findProductTagDetail_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findProductTagDetail_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findProductTagDetail_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findProductTagDetail_resultTupleSchemeFactory implements SchemeFactory {
      public findProductTagDetail_resultTupleScheme getScheme() {
        return new findProductTagDetail_resultTupleScheme();
      }
    }

    private static class findProductTagDetail_resultTupleScheme extends TupleScheme<findProductTagDetail_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findProductTagDetail_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findProductTagDetail_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.recommendactivitytag.ProductActivityTagDetailResVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findRelateProductInfoByPage_args implements org.apache.thrift.TBase<findRelateProductInfoByPage_args, findRelateProductInfoByPage_args._Fields>, java.io.Serializable, Cloneable, Comparable<findRelateProductInfoByPage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findRelateProductInfoByPage_args");

    private static final org.apache.thrift.protocol.TField PAGE_REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("pageReqVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findRelateProductInfoByPage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findRelateProductInfoByPage_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PAGE_REQ_VO((short)1, "pageReqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PAGE_REQ_VO
            return PAGE_REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PAGE_REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("pageReqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findRelateProductInfoByPage_args.class, metaDataMap);
    }

    public findRelateProductInfoByPage_args() {
    }

    public findRelateProductInfoByPage_args(
      com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo)
    {
      this();
      this.pageReqVo = pageReqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findRelateProductInfoByPage_args(findRelateProductInfoByPage_args other) {
      if (other.isSetPageReqVo()) {
        this.pageReqVo = new com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo(other.pageReqVo);
      }
    }

    public findRelateProductInfoByPage_args deepCopy() {
      return new findRelateProductInfoByPage_args(this);
    }

    @Override
    public void clear() {
      this.pageReqVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo getPageReqVo() {
      return this.pageReqVo;
    }

    public findRelateProductInfoByPage_args setPageReqVo(com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo pageReqVo) {
      this.pageReqVo = pageReqVo;
      return this;
    }

    public void unsetPageReqVo() {
      this.pageReqVo = null;
    }

    /** Returns true if field pageReqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetPageReqVo() {
      return this.pageReqVo != null;
    }

    public void setPageReqVoIsSet(boolean value) {
      if (!value) {
        this.pageReqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PAGE_REQ_VO:
        if (value == null) {
          unsetPageReqVo();
        } else {
          setPageReqVo((com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PAGE_REQ_VO:
        return getPageReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PAGE_REQ_VO:
        return isSetPageReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findRelateProductInfoByPage_args)
        return this.equals((findRelateProductInfoByPage_args)that);
      return false;
    }

    public boolean equals(findRelateProductInfoByPage_args that) {
      if (that == null)
        return false;

      boolean this_present_pageReqVo = true && this.isSetPageReqVo();
      boolean that_present_pageReqVo = true && that.isSetPageReqVo();
      if (this_present_pageReqVo || that_present_pageReqVo) {
        if (!(this_present_pageReqVo && that_present_pageReqVo))
          return false;
        if (!this.pageReqVo.equals(that.pageReqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_pageReqVo = true && (isSetPageReqVo());
      list.add(present_pageReqVo);
      if (present_pageReqVo)
        list.add(pageReqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findRelateProductInfoByPage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPageReqVo()).compareTo(other.isSetPageReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageReqVo, other.pageReqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findRelateProductInfoByPage_args(");
      boolean first = true;

      sb.append("pageReqVo:");
      if (this.pageReqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.pageReqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (pageReqVo != null) {
        pageReqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findRelateProductInfoByPage_argsStandardSchemeFactory implements SchemeFactory {
      public findRelateProductInfoByPage_argsStandardScheme getScheme() {
        return new findRelateProductInfoByPage_argsStandardScheme();
      }
    }

    private static class findRelateProductInfoByPage_argsStandardScheme extends StandardScheme<findRelateProductInfoByPage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findRelateProductInfoByPage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PAGE_REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.pageReqVo = new com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo();
                struct.pageReqVo.read(iprot);
                struct.setPageReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findRelateProductInfoByPage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.pageReqVo != null) {
          oprot.writeFieldBegin(PAGE_REQ_VO_FIELD_DESC);
          struct.pageReqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findRelateProductInfoByPage_argsTupleSchemeFactory implements SchemeFactory {
      public findRelateProductInfoByPage_argsTupleScheme getScheme() {
        return new findRelateProductInfoByPage_argsTupleScheme();
      }
    }

    private static class findRelateProductInfoByPage_argsTupleScheme extends TupleScheme<findRelateProductInfoByPage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findRelateProductInfoByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPageReqVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetPageReqVo()) {
          struct.pageReqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findRelateProductInfoByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.pageReqVo = new com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageReqVo();
          struct.pageReqVo.read(iprot);
          struct.setPageReqVoIsSet(true);
        }
      }
    }

  }

  public static class findRelateProductInfoByPage_result implements org.apache.thrift.TBase<findRelateProductInfoByPage_result, findRelateProductInfoByPage_result._Fields>, java.io.Serializable, Cloneable, Comparable<findRelateProductInfoByPage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findRelateProductInfoByPage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findRelateProductInfoByPage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findRelateProductInfoByPage_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findRelateProductInfoByPage_result.class, metaDataMap);
    }

    public findRelateProductInfoByPage_result() {
    }

    public findRelateProductInfoByPage_result(
      com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findRelateProductInfoByPage_result(findRelateProductInfoByPage_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo(other.success);
      }
    }

    public findRelateProductInfoByPage_result deepCopy() {
      return new findRelateProductInfoByPage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo getSuccess() {
      return this.success;
    }

    public findRelateProductInfoByPage_result setSuccess(com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findRelateProductInfoByPage_result)
        return this.equals((findRelateProductInfoByPage_result)that);
      return false;
    }

    public boolean equals(findRelateProductInfoByPage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findRelateProductInfoByPage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findRelateProductInfoByPage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findRelateProductInfoByPage_resultStandardSchemeFactory implements SchemeFactory {
      public findRelateProductInfoByPage_resultStandardScheme getScheme() {
        return new findRelateProductInfoByPage_resultStandardScheme();
      }
    }

    private static class findRelateProductInfoByPage_resultStandardScheme extends StandardScheme<findRelateProductInfoByPage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findRelateProductInfoByPage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findRelateProductInfoByPage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findRelateProductInfoByPage_resultTupleSchemeFactory implements SchemeFactory {
      public findRelateProductInfoByPage_resultTupleScheme getScheme() {
        return new findRelateProductInfoByPage_resultTupleScheme();
      }
    }

    private static class findRelateProductInfoByPage_resultTupleScheme extends TupleScheme<findRelateProductInfoByPage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findRelateProductInfoByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findRelateProductInfoByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.recommendactivitytag.ProductWeightActivityTagPageVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class enableProductRecommendActivityTag_args implements org.apache.thrift.TBase<enableProductRecommendActivityTag_args, enableProductRecommendActivityTag_args._Fields>, java.io.Serializable, Cloneable, Comparable<enableProductRecommendActivityTag_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("enableProductRecommendActivityTag_args");

    private static final org.apache.thrift.protocol.TField REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("reqVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new enableProductRecommendActivityTag_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new enableProductRecommendActivityTag_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQ_VO((short)1, "reqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQ_VO
            return REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("reqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(enableProductRecommendActivityTag_args.class, metaDataMap);
    }

    public enableProductRecommendActivityTag_args() {
    }

    public enableProductRecommendActivityTag_args(
      com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo)
    {
      this();
      this.reqVo = reqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public enableProductRecommendActivityTag_args(enableProductRecommendActivityTag_args other) {
      if (other.isSetReqVo()) {
        this.reqVo = new com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo(other.reqVo);
      }
    }

    public enableProductRecommendActivityTag_args deepCopy() {
      return new enableProductRecommendActivityTag_args(this);
    }

    @Override
    public void clear() {
      this.reqVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo getReqVo() {
      return this.reqVo;
    }

    public enableProductRecommendActivityTag_args setReqVo(com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo reqVo) {
      this.reqVo = reqVo;
      return this;
    }

    public void unsetReqVo() {
      this.reqVo = null;
    }

    /** Returns true if field reqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetReqVo() {
      return this.reqVo != null;
    }

    public void setReqVoIsSet(boolean value) {
      if (!value) {
        this.reqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQ_VO:
        if (value == null) {
          unsetReqVo();
        } else {
          setReqVo((com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQ_VO:
        return getReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQ_VO:
        return isSetReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof enableProductRecommendActivityTag_args)
        return this.equals((enableProductRecommendActivityTag_args)that);
      return false;
    }

    public boolean equals(enableProductRecommendActivityTag_args that) {
      if (that == null)
        return false;

      boolean this_present_reqVo = true && this.isSetReqVo();
      boolean that_present_reqVo = true && that.isSetReqVo();
      if (this_present_reqVo || that_present_reqVo) {
        if (!(this_present_reqVo && that_present_reqVo))
          return false;
        if (!this.reqVo.equals(that.reqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_reqVo = true && (isSetReqVo());
      list.add(present_reqVo);
      if (present_reqVo)
        list.add(reqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(enableProductRecommendActivityTag_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetReqVo()).compareTo(other.isSetReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqVo, other.reqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("enableProductRecommendActivityTag_args(");
      boolean first = true;

      sb.append("reqVo:");
      if (this.reqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.reqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (reqVo != null) {
        reqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class enableProductRecommendActivityTag_argsStandardSchemeFactory implements SchemeFactory {
      public enableProductRecommendActivityTag_argsStandardScheme getScheme() {
        return new enableProductRecommendActivityTag_argsStandardScheme();
      }
    }

    private static class enableProductRecommendActivityTag_argsStandardScheme extends StandardScheme<enableProductRecommendActivityTag_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, enableProductRecommendActivityTag_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo();
                struct.reqVo.read(iprot);
                struct.setReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, enableProductRecommendActivityTag_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.reqVo != null) {
          oprot.writeFieldBegin(REQ_VO_FIELD_DESC);
          struct.reqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class enableProductRecommendActivityTag_argsTupleSchemeFactory implements SchemeFactory {
      public enableProductRecommendActivityTag_argsTupleScheme getScheme() {
        return new enableProductRecommendActivityTag_argsTupleScheme();
      }
    }

    private static class enableProductRecommendActivityTag_argsTupleScheme extends TupleScheme<enableProductRecommendActivityTag_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, enableProductRecommendActivityTag_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetReqVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetReqVo()) {
          struct.reqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, enableProductRecommendActivityTag_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.EnableProductActivityReqVo();
          struct.reqVo.read(iprot);
          struct.setReqVoIsSet(true);
        }
      }
    }

  }

  public static class enableProductRecommendActivityTag_result implements org.apache.thrift.TBase<enableProductRecommendActivityTag_result, enableProductRecommendActivityTag_result._Fields>, java.io.Serializable, Cloneable, Comparable<enableProductRecommendActivityTag_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("enableProductRecommendActivityTag_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new enableProductRecommendActivityTag_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new enableProductRecommendActivityTag_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(enableProductRecommendActivityTag_result.class, metaDataMap);
    }

    public enableProductRecommendActivityTag_result() {
    }

    public enableProductRecommendActivityTag_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public enableProductRecommendActivityTag_result(enableProductRecommendActivityTag_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public enableProductRecommendActivityTag_result deepCopy() {
      return new enableProductRecommendActivityTag_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public enableProductRecommendActivityTag_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof enableProductRecommendActivityTag_result)
        return this.equals((enableProductRecommendActivityTag_result)that);
      return false;
    }

    public boolean equals(enableProductRecommendActivityTag_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(enableProductRecommendActivityTag_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("enableProductRecommendActivityTag_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class enableProductRecommendActivityTag_resultStandardSchemeFactory implements SchemeFactory {
      public enableProductRecommendActivityTag_resultStandardScheme getScheme() {
        return new enableProductRecommendActivityTag_resultStandardScheme();
      }
    }

    private static class enableProductRecommendActivityTag_resultStandardScheme extends StandardScheme<enableProductRecommendActivityTag_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, enableProductRecommendActivityTag_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, enableProductRecommendActivityTag_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class enableProductRecommendActivityTag_resultTupleSchemeFactory implements SchemeFactory {
      public enableProductRecommendActivityTag_resultTupleScheme getScheme() {
        return new enableProductRecommendActivityTag_resultTupleScheme();
      }
    }

    private static class enableProductRecommendActivityTag_resultTupleScheme extends TupleScheme<enableProductRecommendActivityTag_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, enableProductRecommendActivityTag_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, enableProductRecommendActivityTag_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class adjustProductWeight_args implements org.apache.thrift.TBase<adjustProductWeight_args, adjustProductWeight_args._Fields>, java.io.Serializable, Cloneable, Comparable<adjustProductWeight_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("adjustProductWeight_args");

    private static final org.apache.thrift.protocol.TField REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("reqVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new adjustProductWeight_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new adjustProductWeight_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQ_VO((short)1, "reqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQ_VO
            return REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("reqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(adjustProductWeight_args.class, metaDataMap);
    }

    public adjustProductWeight_args() {
    }

    public adjustProductWeight_args(
      com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo)
    {
      this();
      this.reqVo = reqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public adjustProductWeight_args(adjustProductWeight_args other) {
      if (other.isSetReqVo()) {
        this.reqVo = new com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo(other.reqVo);
      }
    }

    public adjustProductWeight_args deepCopy() {
      return new adjustProductWeight_args(this);
    }

    @Override
    public void clear() {
      this.reqVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo getReqVo() {
      return this.reqVo;
    }

    public adjustProductWeight_args setReqVo(com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo reqVo) {
      this.reqVo = reqVo;
      return this;
    }

    public void unsetReqVo() {
      this.reqVo = null;
    }

    /** Returns true if field reqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetReqVo() {
      return this.reqVo != null;
    }

    public void setReqVoIsSet(boolean value) {
      if (!value) {
        this.reqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQ_VO:
        if (value == null) {
          unsetReqVo();
        } else {
          setReqVo((com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQ_VO:
        return getReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQ_VO:
        return isSetReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof adjustProductWeight_args)
        return this.equals((adjustProductWeight_args)that);
      return false;
    }

    public boolean equals(adjustProductWeight_args that) {
      if (that == null)
        return false;

      boolean this_present_reqVo = true && this.isSetReqVo();
      boolean that_present_reqVo = true && that.isSetReqVo();
      if (this_present_reqVo || that_present_reqVo) {
        if (!(this_present_reqVo && that_present_reqVo))
          return false;
        if (!this.reqVo.equals(that.reqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_reqVo = true && (isSetReqVo());
      list.add(present_reqVo);
      if (present_reqVo)
        list.add(reqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(adjustProductWeight_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetReqVo()).compareTo(other.isSetReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqVo, other.reqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("adjustProductWeight_args(");
      boolean first = true;

      sb.append("reqVo:");
      if (this.reqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.reqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (reqVo != null) {
        reqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class adjustProductWeight_argsStandardSchemeFactory implements SchemeFactory {
      public adjustProductWeight_argsStandardScheme getScheme() {
        return new adjustProductWeight_argsStandardScheme();
      }
    }

    private static class adjustProductWeight_argsStandardScheme extends StandardScheme<adjustProductWeight_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, adjustProductWeight_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo();
                struct.reqVo.read(iprot);
                struct.setReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, adjustProductWeight_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.reqVo != null) {
          oprot.writeFieldBegin(REQ_VO_FIELD_DESC);
          struct.reqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class adjustProductWeight_argsTupleSchemeFactory implements SchemeFactory {
      public adjustProductWeight_argsTupleScheme getScheme() {
        return new adjustProductWeight_argsTupleScheme();
      }
    }

    private static class adjustProductWeight_argsTupleScheme extends TupleScheme<adjustProductWeight_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, adjustProductWeight_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetReqVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetReqVo()) {
          struct.reqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, adjustProductWeight_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.AdjustProductWeightReqVo();
          struct.reqVo.read(iprot);
          struct.setReqVoIsSet(true);
        }
      }
    }

  }

  public static class adjustProductWeight_result implements org.apache.thrift.TBase<adjustProductWeight_result, adjustProductWeight_result._Fields>, java.io.Serializable, Cloneable, Comparable<adjustProductWeight_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("adjustProductWeight_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new adjustProductWeight_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new adjustProductWeight_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(adjustProductWeight_result.class, metaDataMap);
    }

    public adjustProductWeight_result() {
    }

    public adjustProductWeight_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public adjustProductWeight_result(adjustProductWeight_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public adjustProductWeight_result deepCopy() {
      return new adjustProductWeight_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public adjustProductWeight_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof adjustProductWeight_result)
        return this.equals((adjustProductWeight_result)that);
      return false;
    }

    public boolean equals(adjustProductWeight_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(adjustProductWeight_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("adjustProductWeight_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class adjustProductWeight_resultStandardSchemeFactory implements SchemeFactory {
      public adjustProductWeight_resultStandardScheme getScheme() {
        return new adjustProductWeight_resultStandardScheme();
      }
    }

    private static class adjustProductWeight_resultStandardScheme extends StandardScheme<adjustProductWeight_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, adjustProductWeight_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, adjustProductWeight_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class adjustProductWeight_resultTupleSchemeFactory implements SchemeFactory {
      public adjustProductWeight_resultTupleScheme getScheme() {
        return new adjustProductWeight_resultTupleScheme();
      }
    }

    private static class adjustProductWeight_resultTupleScheme extends TupleScheme<adjustProductWeight_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, adjustProductWeight_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, adjustProductWeight_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class deleteRelateProduct_args implements org.apache.thrift.TBase<deleteRelateProduct_args, deleteRelateProduct_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteRelateProduct_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteRelateProduct_args");

    private static final org.apache.thrift.protocol.TField REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("reqVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteRelateProduct_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteRelateProduct_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQ_VO((short)1, "reqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQ_VO
            return REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("reqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteRelateProduct_args.class, metaDataMap);
    }

    public deleteRelateProduct_args() {
    }

    public deleteRelateProduct_args(
      com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo)
    {
      this();
      this.reqVo = reqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteRelateProduct_args(deleteRelateProduct_args other) {
      if (other.isSetReqVo()) {
        this.reqVo = new com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo(other.reqVo);
      }
    }

    public deleteRelateProduct_args deepCopy() {
      return new deleteRelateProduct_args(this);
    }

    @Override
    public void clear() {
      this.reqVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo getReqVo() {
      return this.reqVo;
    }

    public deleteRelateProduct_args setReqVo(com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo reqVo) {
      this.reqVo = reqVo;
      return this;
    }

    public void unsetReqVo() {
      this.reqVo = null;
    }

    /** Returns true if field reqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetReqVo() {
      return this.reqVo != null;
    }

    public void setReqVoIsSet(boolean value) {
      if (!value) {
        this.reqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQ_VO:
        if (value == null) {
          unsetReqVo();
        } else {
          setReqVo((com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQ_VO:
        return getReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQ_VO:
        return isSetReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteRelateProduct_args)
        return this.equals((deleteRelateProduct_args)that);
      return false;
    }

    public boolean equals(deleteRelateProduct_args that) {
      if (that == null)
        return false;

      boolean this_present_reqVo = true && this.isSetReqVo();
      boolean that_present_reqVo = true && that.isSetReqVo();
      if (this_present_reqVo || that_present_reqVo) {
        if (!(this_present_reqVo && that_present_reqVo))
          return false;
        if (!this.reqVo.equals(that.reqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_reqVo = true && (isSetReqVo());
      list.add(present_reqVo);
      if (present_reqVo)
        list.add(reqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteRelateProduct_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetReqVo()).compareTo(other.isSetReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqVo, other.reqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteRelateProduct_args(");
      boolean first = true;

      sb.append("reqVo:");
      if (this.reqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.reqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (reqVo != null) {
        reqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteRelateProduct_argsStandardSchemeFactory implements SchemeFactory {
      public deleteRelateProduct_argsStandardScheme getScheme() {
        return new deleteRelateProduct_argsStandardScheme();
      }
    }

    private static class deleteRelateProduct_argsStandardScheme extends StandardScheme<deleteRelateProduct_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteRelateProduct_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo();
                struct.reqVo.read(iprot);
                struct.setReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteRelateProduct_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.reqVo != null) {
          oprot.writeFieldBegin(REQ_VO_FIELD_DESC);
          struct.reqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteRelateProduct_argsTupleSchemeFactory implements SchemeFactory {
      public deleteRelateProduct_argsTupleScheme getScheme() {
        return new deleteRelateProduct_argsTupleScheme();
      }
    }

    private static class deleteRelateProduct_argsTupleScheme extends TupleScheme<deleteRelateProduct_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteRelateProduct_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetReqVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetReqVo()) {
          struct.reqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteRelateProduct_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.DeleteRelateProductReqVo();
          struct.reqVo.read(iprot);
          struct.setReqVoIsSet(true);
        }
      }
    }

  }

  public static class deleteRelateProduct_result implements org.apache.thrift.TBase<deleteRelateProduct_result, deleteRelateProduct_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteRelateProduct_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteRelateProduct_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteRelateProduct_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteRelateProduct_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteRelateProduct_result.class, metaDataMap);
    }

    public deleteRelateProduct_result() {
    }

    public deleteRelateProduct_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteRelateProduct_result(deleteRelateProduct_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public deleteRelateProduct_result deepCopy() {
      return new deleteRelateProduct_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public deleteRelateProduct_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteRelateProduct_result)
        return this.equals((deleteRelateProduct_result)that);
      return false;
    }

    public boolean equals(deleteRelateProduct_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteRelateProduct_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteRelateProduct_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteRelateProduct_resultStandardSchemeFactory implements SchemeFactory {
      public deleteRelateProduct_resultStandardScheme getScheme() {
        return new deleteRelateProduct_resultStandardScheme();
      }
    }

    private static class deleteRelateProduct_resultStandardScheme extends StandardScheme<deleteRelateProduct_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteRelateProduct_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteRelateProduct_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteRelateProduct_resultTupleSchemeFactory implements SchemeFactory {
      public deleteRelateProduct_resultTupleScheme getScheme() {
        return new deleteRelateProduct_resultTupleScheme();
      }
    }

    private static class deleteRelateProduct_resultTupleScheme extends TupleScheme<deleteRelateProduct_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteRelateProduct_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteRelateProduct_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class addProductActivityTag_args implements org.apache.thrift.TBase<addProductActivityTag_args, addProductActivityTag_args._Fields>, java.io.Serializable, Cloneable, Comparable<addProductActivityTag_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addProductActivityTag_args");

    private static final org.apache.thrift.protocol.TField RECOMMEND_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addProductActivityTag_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addProductActivityTag_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      RECOMMEND_VO((short)1, "recommendVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // RECOMMEND_VO
            return RECOMMEND_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.RECOMMEND_VO, new org.apache.thrift.meta_data.FieldMetaData("recommendVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addProductActivityTag_args.class, metaDataMap);
    }

    public addProductActivityTag_args() {
    }

    public addProductActivityTag_args(
      com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo)
    {
      this();
      this.recommendVo = recommendVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addProductActivityTag_args(addProductActivityTag_args other) {
      if (other.isSetRecommendVo()) {
        this.recommendVo = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo(other.recommendVo);
      }
    }

    public addProductActivityTag_args deepCopy() {
      return new addProductActivityTag_args(this);
    }

    @Override
    public void clear() {
      this.recommendVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo getRecommendVo() {
      return this.recommendVo;
    }

    public addProductActivityTag_args setRecommendVo(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo) {
      this.recommendVo = recommendVo;
      return this;
    }

    public void unsetRecommendVo() {
      this.recommendVo = null;
    }

    /** Returns true if field recommendVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRecommendVo() {
      return this.recommendVo != null;
    }

    public void setRecommendVoIsSet(boolean value) {
      if (!value) {
        this.recommendVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case RECOMMEND_VO:
        if (value == null) {
          unsetRecommendVo();
        } else {
          setRecommendVo((com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case RECOMMEND_VO:
        return getRecommendVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case RECOMMEND_VO:
        return isSetRecommendVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addProductActivityTag_args)
        return this.equals((addProductActivityTag_args)that);
      return false;
    }

    public boolean equals(addProductActivityTag_args that) {
      if (that == null)
        return false;

      boolean this_present_recommendVo = true && this.isSetRecommendVo();
      boolean that_present_recommendVo = true && that.isSetRecommendVo();
      if (this_present_recommendVo || that_present_recommendVo) {
        if (!(this_present_recommendVo && that_present_recommendVo))
          return false;
        if (!this.recommendVo.equals(that.recommendVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_recommendVo = true && (isSetRecommendVo());
      list.add(present_recommendVo);
      if (present_recommendVo)
        list.add(recommendVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(addProductActivityTag_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRecommendVo()).compareTo(other.isSetRecommendVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRecommendVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendVo, other.recommendVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addProductActivityTag_args(");
      boolean first = true;

      sb.append("recommendVo:");
      if (this.recommendVo == null) {
        sb.append("null");
      } else {
        sb.append(this.recommendVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (recommendVo != null) {
        recommendVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addProductActivityTag_argsStandardSchemeFactory implements SchemeFactory {
      public addProductActivityTag_argsStandardScheme getScheme() {
        return new addProductActivityTag_argsStandardScheme();
      }
    }

    private static class addProductActivityTag_argsStandardScheme extends StandardScheme<addProductActivityTag_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addProductActivityTag_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // RECOMMEND_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.recommendVo = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo();
                struct.recommendVo.read(iprot);
                struct.setRecommendVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addProductActivityTag_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.recommendVo != null) {
          oprot.writeFieldBegin(RECOMMEND_VO_FIELD_DESC);
          struct.recommendVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addProductActivityTag_argsTupleSchemeFactory implements SchemeFactory {
      public addProductActivityTag_argsTupleScheme getScheme() {
        return new addProductActivityTag_argsTupleScheme();
      }
    }

    private static class addProductActivityTag_argsTupleScheme extends TupleScheme<addProductActivityTag_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addProductActivityTag_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRecommendVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRecommendVo()) {
          struct.recommendVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addProductActivityTag_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.recommendVo = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo();
          struct.recommendVo.read(iprot);
          struct.setRecommendVoIsSet(true);
        }
      }
    }

  }

  public static class addProductActivityTag_result implements org.apache.thrift.TBase<addProductActivityTag_result, addProductActivityTag_result._Fields>, java.io.Serializable, Cloneable, Comparable<addProductActivityTag_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addProductActivityTag_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addProductActivityTag_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addProductActivityTag_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addProductActivityTag_result.class, metaDataMap);
    }

    public addProductActivityTag_result() {
    }

    public addProductActivityTag_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addProductActivityTag_result(addProductActivityTag_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public addProductActivityTag_result deepCopy() {
      return new addProductActivityTag_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public addProductActivityTag_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addProductActivityTag_result)
        return this.equals((addProductActivityTag_result)that);
      return false;
    }

    public boolean equals(addProductActivityTag_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(addProductActivityTag_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addProductActivityTag_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addProductActivityTag_resultStandardSchemeFactory implements SchemeFactory {
      public addProductActivityTag_resultStandardScheme getScheme() {
        return new addProductActivityTag_resultStandardScheme();
      }
    }

    private static class addProductActivityTag_resultStandardScheme extends StandardScheme<addProductActivityTag_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addProductActivityTag_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addProductActivityTag_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addProductActivityTag_resultTupleSchemeFactory implements SchemeFactory {
      public addProductActivityTag_resultTupleScheme getScheme() {
        return new addProductActivityTag_resultTupleScheme();
      }
    }

    private static class addProductActivityTag_resultTupleScheme extends TupleScheme<addProductActivityTag_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addProductActivityTag_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addProductActivityTag_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class updateProductActivityTag_args implements org.apache.thrift.TBase<updateProductActivityTag_args, updateProductActivityTag_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateProductActivityTag_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateProductActivityTag_args");

    private static final org.apache.thrift.protocol.TField RECOMMEND_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateProductActivityTag_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateProductActivityTag_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      RECOMMEND_VO((short)1, "recommendVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // RECOMMEND_VO
            return RECOMMEND_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.RECOMMEND_VO, new org.apache.thrift.meta_data.FieldMetaData("recommendVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateProductActivityTag_args.class, metaDataMap);
    }

    public updateProductActivityTag_args() {
    }

    public updateProductActivityTag_args(
      com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo)
    {
      this();
      this.recommendVo = recommendVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateProductActivityTag_args(updateProductActivityTag_args other) {
      if (other.isSetRecommendVo()) {
        this.recommendVo = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo(other.recommendVo);
      }
    }

    public updateProductActivityTag_args deepCopy() {
      return new updateProductActivityTag_args(this);
    }

    @Override
    public void clear() {
      this.recommendVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo getRecommendVo() {
      return this.recommendVo;
    }

    public updateProductActivityTag_args setRecommendVo(com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo recommendVo) {
      this.recommendVo = recommendVo;
      return this;
    }

    public void unsetRecommendVo() {
      this.recommendVo = null;
    }

    /** Returns true if field recommendVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRecommendVo() {
      return this.recommendVo != null;
    }

    public void setRecommendVoIsSet(boolean value) {
      if (!value) {
        this.recommendVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case RECOMMEND_VO:
        if (value == null) {
          unsetRecommendVo();
        } else {
          setRecommendVo((com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case RECOMMEND_VO:
        return getRecommendVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case RECOMMEND_VO:
        return isSetRecommendVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateProductActivityTag_args)
        return this.equals((updateProductActivityTag_args)that);
      return false;
    }

    public boolean equals(updateProductActivityTag_args that) {
      if (that == null)
        return false;

      boolean this_present_recommendVo = true && this.isSetRecommendVo();
      boolean that_present_recommendVo = true && that.isSetRecommendVo();
      if (this_present_recommendVo || that_present_recommendVo) {
        if (!(this_present_recommendVo && that_present_recommendVo))
          return false;
        if (!this.recommendVo.equals(that.recommendVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_recommendVo = true && (isSetRecommendVo());
      list.add(present_recommendVo);
      if (present_recommendVo)
        list.add(recommendVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateProductActivityTag_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRecommendVo()).compareTo(other.isSetRecommendVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRecommendVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendVo, other.recommendVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateProductActivityTag_args(");
      boolean first = true;

      sb.append("recommendVo:");
      if (this.recommendVo == null) {
        sb.append("null");
      } else {
        sb.append(this.recommendVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (recommendVo != null) {
        recommendVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateProductActivityTag_argsStandardSchemeFactory implements SchemeFactory {
      public updateProductActivityTag_argsStandardScheme getScheme() {
        return new updateProductActivityTag_argsStandardScheme();
      }
    }

    private static class updateProductActivityTag_argsStandardScheme extends StandardScheme<updateProductActivityTag_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateProductActivityTag_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // RECOMMEND_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.recommendVo = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo();
                struct.recommendVo.read(iprot);
                struct.setRecommendVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateProductActivityTag_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.recommendVo != null) {
          oprot.writeFieldBegin(RECOMMEND_VO_FIELD_DESC);
          struct.recommendVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateProductActivityTag_argsTupleSchemeFactory implements SchemeFactory {
      public updateProductActivityTag_argsTupleScheme getScheme() {
        return new updateProductActivityTag_argsTupleScheme();
      }
    }

    private static class updateProductActivityTag_argsTupleScheme extends TupleScheme<updateProductActivityTag_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateProductActivityTag_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRecommendVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRecommendVo()) {
          struct.recommendVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateProductActivityTag_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.recommendVo = new com.froad.thrift.vo.recommendactivitytag.RecommendActivityTagVo();
          struct.recommendVo.read(iprot);
          struct.setRecommendVoIsSet(true);
        }
      }
    }

  }

  public static class updateProductActivityTag_result implements org.apache.thrift.TBase<updateProductActivityTag_result, updateProductActivityTag_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateProductActivityTag_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateProductActivityTag_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateProductActivityTag_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateProductActivityTag_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateProductActivityTag_result.class, metaDataMap);
    }

    public updateProductActivityTag_result() {
    }

    public updateProductActivityTag_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateProductActivityTag_result(updateProductActivityTag_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public updateProductActivityTag_result deepCopy() {
      return new updateProductActivityTag_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public updateProductActivityTag_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateProductActivityTag_result)
        return this.equals((updateProductActivityTag_result)that);
      return false;
    }

    public boolean equals(updateProductActivityTag_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateProductActivityTag_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateProductActivityTag_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateProductActivityTag_resultStandardSchemeFactory implements SchemeFactory {
      public updateProductActivityTag_resultStandardScheme getScheme() {
        return new updateProductActivityTag_resultStandardScheme();
      }
    }

    private static class updateProductActivityTag_resultStandardScheme extends StandardScheme<updateProductActivityTag_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateProductActivityTag_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateProductActivityTag_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateProductActivityTag_resultTupleSchemeFactory implements SchemeFactory {
      public updateProductActivityTag_resultTupleScheme getScheme() {
        return new updateProductActivityTag_resultTupleScheme();
      }
    }

    private static class updateProductActivityTag_resultTupleScheme extends TupleScheme<updateProductActivityTag_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateProductActivityTag_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateProductActivityTag_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class relateProductInfo_args implements org.apache.thrift.TBase<relateProductInfo_args, relateProductInfo_args._Fields>, java.io.Serializable, Cloneable, Comparable<relateProductInfo_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("relateProductInfo_args");

    private static final org.apache.thrift.protocol.TField VO_FIELD_DESC = new org.apache.thrift.protocol.TField("vo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new relateProductInfo_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new relateProductInfo_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      VO((short)1, "vo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // VO
            return VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.VO, new org.apache.thrift.meta_data.FieldMetaData("vo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(relateProductInfo_args.class, metaDataMap);
    }

    public relateProductInfo_args() {
    }

    public relateProductInfo_args(
      com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo)
    {
      this();
      this.vo = vo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public relateProductInfo_args(relateProductInfo_args other) {
      if (other.isSetVo()) {
        this.vo = new com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo(other.vo);
      }
    }

    public relateProductInfo_args deepCopy() {
      return new relateProductInfo_args(this);
    }

    @Override
    public void clear() {
      this.vo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo getVo() {
      return this.vo;
    }

    public relateProductInfo_args setVo(com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo vo) {
      this.vo = vo;
      return this;
    }

    public void unsetVo() {
      this.vo = null;
    }

    /** Returns true if field vo is set (has been assigned a value) and false otherwise */
    public boolean isSetVo() {
      return this.vo != null;
    }

    public void setVoIsSet(boolean value) {
      if (!value) {
        this.vo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case VO:
        if (value == null) {
          unsetVo();
        } else {
          setVo((com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case VO:
        return getVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case VO:
        return isSetVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof relateProductInfo_args)
        return this.equals((relateProductInfo_args)that);
      return false;
    }

    public boolean equals(relateProductInfo_args that) {
      if (that == null)
        return false;

      boolean this_present_vo = true && this.isSetVo();
      boolean that_present_vo = true && that.isSetVo();
      if (this_present_vo || that_present_vo) {
        if (!(this_present_vo && that_present_vo))
          return false;
        if (!this.vo.equals(that.vo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_vo = true && (isSetVo());
      list.add(present_vo);
      if (present_vo)
        list.add(vo);

      return list.hashCode();
    }

    @Override
    public int compareTo(relateProductInfo_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetVo()).compareTo(other.isSetVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vo, other.vo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("relateProductInfo_args(");
      boolean first = true;

      sb.append("vo:");
      if (this.vo == null) {
        sb.append("null");
      } else {
        sb.append(this.vo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (vo != null) {
        vo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class relateProductInfo_argsStandardSchemeFactory implements SchemeFactory {
      public relateProductInfo_argsStandardScheme getScheme() {
        return new relateProductInfo_argsStandardScheme();
      }
    }

    private static class relateProductInfo_argsStandardScheme extends StandardScheme<relateProductInfo_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, relateProductInfo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.vo = new com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo();
                struct.vo.read(iprot);
                struct.setVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, relateProductInfo_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.vo != null) {
          oprot.writeFieldBegin(VO_FIELD_DESC);
          struct.vo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class relateProductInfo_argsTupleSchemeFactory implements SchemeFactory {
      public relateProductInfo_argsTupleScheme getScheme() {
        return new relateProductInfo_argsTupleScheme();
      }
    }

    private static class relateProductInfo_argsTupleScheme extends TupleScheme<relateProductInfo_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, relateProductInfo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetVo()) {
          struct.vo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, relateProductInfo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.vo = new com.froad.thrift.vo.recommendactivitytag.RelateProductActivityVo();
          struct.vo.read(iprot);
          struct.setVoIsSet(true);
        }
      }
    }

  }

  public static class relateProductInfo_result implements org.apache.thrift.TBase<relateProductInfo_result, relateProductInfo_result._Fields>, java.io.Serializable, Cloneable, Comparable<relateProductInfo_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("relateProductInfo_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new relateProductInfo_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new relateProductInfo_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(relateProductInfo_result.class, metaDataMap);
    }

    public relateProductInfo_result() {
    }

    public relateProductInfo_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public relateProductInfo_result(relateProductInfo_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public relateProductInfo_result deepCopy() {
      return new relateProductInfo_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public relateProductInfo_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof relateProductInfo_result)
        return this.equals((relateProductInfo_result)that);
      return false;
    }

    public boolean equals(relateProductInfo_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(relateProductInfo_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("relateProductInfo_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class relateProductInfo_resultStandardSchemeFactory implements SchemeFactory {
      public relateProductInfo_resultStandardScheme getScheme() {
        return new relateProductInfo_resultStandardScheme();
      }
    }

    private static class relateProductInfo_resultStandardScheme extends StandardScheme<relateProductInfo_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, relateProductInfo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, relateProductInfo_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class relateProductInfo_resultTupleSchemeFactory implements SchemeFactory {
      public relateProductInfo_resultTupleScheme getScheme() {
        return new relateProductInfo_resultTupleScheme();
      }
    }

    private static class relateProductInfo_resultTupleScheme extends TupleScheme<relateProductInfo_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, relateProductInfo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, relateProductInfo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class inputRelateProductInfo_args implements org.apache.thrift.TBase<inputRelateProductInfo_args, inputRelateProductInfo_args._Fields>, java.io.Serializable, Cloneable, Comparable<inputRelateProductInfo_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("inputRelateProductInfo_args");

    private static final org.apache.thrift.protocol.TField REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("reqVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new inputRelateProductInfo_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new inputRelateProductInfo_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQ_VO((short)1, "reqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQ_VO
            return REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("reqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(inputRelateProductInfo_args.class, metaDataMap);
    }

    public inputRelateProductInfo_args() {
    }

    public inputRelateProductInfo_args(
      com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo)
    {
      this();
      this.reqVo = reqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public inputRelateProductInfo_args(inputRelateProductInfo_args other) {
      if (other.isSetReqVo()) {
        this.reqVo = new com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo(other.reqVo);
      }
    }

    public inputRelateProductInfo_args deepCopy() {
      return new inputRelateProductInfo_args(this);
    }

    @Override
    public void clear() {
      this.reqVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo getReqVo() {
      return this.reqVo;
    }

    public inputRelateProductInfo_args setReqVo(com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo reqVo) {
      this.reqVo = reqVo;
      return this;
    }

    public void unsetReqVo() {
      this.reqVo = null;
    }

    /** Returns true if field reqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetReqVo() {
      return this.reqVo != null;
    }

    public void setReqVoIsSet(boolean value) {
      if (!value) {
        this.reqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQ_VO:
        if (value == null) {
          unsetReqVo();
        } else {
          setReqVo((com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQ_VO:
        return getReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQ_VO:
        return isSetReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof inputRelateProductInfo_args)
        return this.equals((inputRelateProductInfo_args)that);
      return false;
    }

    public boolean equals(inputRelateProductInfo_args that) {
      if (that == null)
        return false;

      boolean this_present_reqVo = true && this.isSetReqVo();
      boolean that_present_reqVo = true && that.isSetReqVo();
      if (this_present_reqVo || that_present_reqVo) {
        if (!(this_present_reqVo && that_present_reqVo))
          return false;
        if (!this.reqVo.equals(that.reqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_reqVo = true && (isSetReqVo());
      list.add(present_reqVo);
      if (present_reqVo)
        list.add(reqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(inputRelateProductInfo_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetReqVo()).compareTo(other.isSetReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqVo, other.reqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("inputRelateProductInfo_args(");
      boolean first = true;

      sb.append("reqVo:");
      if (this.reqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.reqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (reqVo != null) {
        reqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class inputRelateProductInfo_argsStandardSchemeFactory implements SchemeFactory {
      public inputRelateProductInfo_argsStandardScheme getScheme() {
        return new inputRelateProductInfo_argsStandardScheme();
      }
    }

    private static class inputRelateProductInfo_argsStandardScheme extends StandardScheme<inputRelateProductInfo_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, inputRelateProductInfo_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo();
                struct.reqVo.read(iprot);
                struct.setReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, inputRelateProductInfo_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.reqVo != null) {
          oprot.writeFieldBegin(REQ_VO_FIELD_DESC);
          struct.reqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class inputRelateProductInfo_argsTupleSchemeFactory implements SchemeFactory {
      public inputRelateProductInfo_argsTupleScheme getScheme() {
        return new inputRelateProductInfo_argsTupleScheme();
      }
    }

    private static class inputRelateProductInfo_argsTupleScheme extends TupleScheme<inputRelateProductInfo_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, inputRelateProductInfo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetReqVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetReqVo()) {
          struct.reqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, inputRelateProductInfo_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.InputRelateProductActivityReqVo();
          struct.reqVo.read(iprot);
          struct.setReqVoIsSet(true);
        }
      }
    }

  }

  public static class inputRelateProductInfo_result implements org.apache.thrift.TBase<inputRelateProductInfo_result, inputRelateProductInfo_result._Fields>, java.io.Serializable, Cloneable, Comparable<inputRelateProductInfo_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("inputRelateProductInfo_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new inputRelateProductInfo_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new inputRelateProductInfo_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(inputRelateProductInfo_result.class, metaDataMap);
    }

    public inputRelateProductInfo_result() {
    }

    public inputRelateProductInfo_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public inputRelateProductInfo_result(inputRelateProductInfo_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public inputRelateProductInfo_result deepCopy() {
      return new inputRelateProductInfo_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public inputRelateProductInfo_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof inputRelateProductInfo_result)
        return this.equals((inputRelateProductInfo_result)that);
      return false;
    }

    public boolean equals(inputRelateProductInfo_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(inputRelateProductInfo_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("inputRelateProductInfo_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class inputRelateProductInfo_resultStandardSchemeFactory implements SchemeFactory {
      public inputRelateProductInfo_resultStandardScheme getScheme() {
        return new inputRelateProductInfo_resultStandardScheme();
      }
    }

    private static class inputRelateProductInfo_resultStandardScheme extends StandardScheme<inputRelateProductInfo_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, inputRelateProductInfo_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, inputRelateProductInfo_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class inputRelateProductInfo_resultTupleSchemeFactory implements SchemeFactory {
      public inputRelateProductInfo_resultTupleScheme getScheme() {
        return new inputRelateProductInfo_resultTupleScheme();
      }
    }

    private static class inputRelateProductInfo_resultTupleScheme extends TupleScheme<inputRelateProductInfo_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, inputRelateProductInfo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, inputRelateProductInfo_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class queryProductNameByProductId_args implements org.apache.thrift.TBase<queryProductNameByProductId_args, queryProductNameByProductId_args._Fields>, java.io.Serializable, Cloneable, Comparable<queryProductNameByProductId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryProductNameByProductId_args");

    private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new queryProductNameByProductId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new queryProductNameByProductId_argsTupleSchemeFactory());
    }

    public String clientId; // required
    public String productId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      CLIENT_ID((short)1, "clientId"),
      PRODUCT_ID((short)2, "productId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // CLIENT_ID
            return CLIENT_ID;
          case 2: // PRODUCT_ID
            return PRODUCT_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryProductNameByProductId_args.class, metaDataMap);
    }

    public queryProductNameByProductId_args() {
    }

    public queryProductNameByProductId_args(
      String clientId,
      String productId)
    {
      this();
      this.clientId = clientId;
      this.productId = productId;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryProductNameByProductId_args(queryProductNameByProductId_args other) {
      if (other.isSetClientId()) {
        this.clientId = other.clientId;
      }
      if (other.isSetProductId()) {
        this.productId = other.productId;
      }
    }

    public queryProductNameByProductId_args deepCopy() {
      return new queryProductNameByProductId_args(this);
    }

    @Override
    public void clear() {
      this.clientId = null;
      this.productId = null;
    }

    public String getClientId() {
      return this.clientId;
    }

    public queryProductNameByProductId_args setClientId(String clientId) {
      this.clientId = clientId;
      return this;
    }

    public void unsetClientId() {
      this.clientId = null;
    }

    /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
    public boolean isSetClientId() {
      return this.clientId != null;
    }

    public void setClientIdIsSet(boolean value) {
      if (!value) {
        this.clientId = null;
      }
    }

    public String getProductId() {
      return this.productId;
    }

    public queryProductNameByProductId_args setProductId(String productId) {
      this.productId = productId;
      return this;
    }

    public void unsetProductId() {
      this.productId = null;
    }

    /** Returns true if field productId is set (has been assigned a value) and false otherwise */
    public boolean isSetProductId() {
      return this.productId != null;
    }

    public void setProductIdIsSet(boolean value) {
      if (!value) {
        this.productId = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case CLIENT_ID:
        if (value == null) {
          unsetClientId();
        } else {
          setClientId((String)value);
        }
        break;

      case PRODUCT_ID:
        if (value == null) {
          unsetProductId();
        } else {
          setProductId((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case CLIENT_ID:
        return getClientId();

      case PRODUCT_ID:
        return getProductId();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case CLIENT_ID:
        return isSetClientId();
      case PRODUCT_ID:
        return isSetProductId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryProductNameByProductId_args)
        return this.equals((queryProductNameByProductId_args)that);
      return false;
    }

    public boolean equals(queryProductNameByProductId_args that) {
      if (that == null)
        return false;

      boolean this_present_clientId = true && this.isSetClientId();
      boolean that_present_clientId = true && that.isSetClientId();
      if (this_present_clientId || that_present_clientId) {
        if (!(this_present_clientId && that_present_clientId))
          return false;
        if (!this.clientId.equals(that.clientId))
          return false;
      }

      boolean this_present_productId = true && this.isSetProductId();
      boolean that_present_productId = true && that.isSetProductId();
      if (this_present_productId || that_present_productId) {
        if (!(this_present_productId && that_present_productId))
          return false;
        if (!this.productId.equals(that.productId))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_clientId = true && (isSetClientId());
      list.add(present_clientId);
      if (present_clientId)
        list.add(clientId);

      boolean present_productId = true && (isSetProductId());
      list.add(present_productId);
      if (present_productId)
        list.add(productId);

      return list.hashCode();
    }

    @Override
    public int compareTo(queryProductNameByProductId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetProductId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryProductNameByProductId_args(");
      boolean first = true;

      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("productId:");
      if (this.productId == null) {
        sb.append("null");
      } else {
        sb.append(this.productId);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryProductNameByProductId_argsStandardSchemeFactory implements SchemeFactory {
      public queryProductNameByProductId_argsStandardScheme getScheme() {
        return new queryProductNameByProductId_argsStandardScheme();
      }
    }

    private static class queryProductNameByProductId_argsStandardScheme extends StandardScheme<queryProductNameByProductId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryProductNameByProductId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // CLIENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.clientId = iprot.readString();
                struct.setClientIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // PRODUCT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.productId = iprot.readString();
                struct.setProductIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryProductNameByProductId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.clientId != null) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
        if (struct.productId != null) {
          oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
          oprot.writeString(struct.productId);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryProductNameByProductId_argsTupleSchemeFactory implements SchemeFactory {
      public queryProductNameByProductId_argsTupleScheme getScheme() {
        return new queryProductNameByProductId_argsTupleScheme();
      }
    }

    private static class queryProductNameByProductId_argsTupleScheme extends TupleScheme<queryProductNameByProductId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryProductNameByProductId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetClientId()) {
          optionals.set(0);
        }
        if (struct.isSetProductId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetClientId()) {
          oprot.writeString(struct.clientId);
        }
        if (struct.isSetProductId()) {
          oprot.writeString(struct.productId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryProductNameByProductId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.clientId = iprot.readString();
          struct.setClientIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.productId = iprot.readString();
          struct.setProductIdIsSet(true);
        }
      }
    }

  }

  public static class queryProductNameByProductId_result implements org.apache.thrift.TBase<queryProductNameByProductId_result, queryProductNameByProductId_result._Fields>, java.io.Serializable, Cloneable, Comparable<queryProductNameByProductId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryProductNameByProductId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new queryProductNameByProductId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new queryProductNameByProductId_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductNameResVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.ProductNameResVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryProductNameByProductId_result.class, metaDataMap);
    }

    public queryProductNameByProductId_result() {
    }

    public queryProductNameByProductId_result(
      com.froad.thrift.vo.recommendactivitytag.ProductNameResVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryProductNameByProductId_result(queryProductNameByProductId_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.recommendactivitytag.ProductNameResVo(other.success);
      }
    }

    public queryProductNameByProductId_result deepCopy() {
      return new queryProductNameByProductId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.ProductNameResVo getSuccess() {
      return this.success;
    }

    public queryProductNameByProductId_result setSuccess(com.froad.thrift.vo.recommendactivitytag.ProductNameResVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.recommendactivitytag.ProductNameResVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryProductNameByProductId_result)
        return this.equals((queryProductNameByProductId_result)that);
      return false;
    }

    public boolean equals(queryProductNameByProductId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(queryProductNameByProductId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryProductNameByProductId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryProductNameByProductId_resultStandardSchemeFactory implements SchemeFactory {
      public queryProductNameByProductId_resultStandardScheme getScheme() {
        return new queryProductNameByProductId_resultStandardScheme();
      }
    }

    private static class queryProductNameByProductId_resultStandardScheme extends StandardScheme<queryProductNameByProductId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryProductNameByProductId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.recommendactivitytag.ProductNameResVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryProductNameByProductId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryProductNameByProductId_resultTupleSchemeFactory implements SchemeFactory {
      public queryProductNameByProductId_resultTupleScheme getScheme() {
        return new queryProductNameByProductId_resultTupleScheme();
      }
    }

    private static class queryProductNameByProductId_resultTupleScheme extends TupleScheme<queryProductNameByProductId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryProductNameByProductId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryProductNameByProductId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.recommendactivitytag.ProductNameResVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class exportProductRelateActivityTag_args implements org.apache.thrift.TBase<exportProductRelateActivityTag_args, exportProductRelateActivityTag_args._Fields>, java.io.Serializable, Cloneable, Comparable<exportProductRelateActivityTag_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("exportProductRelateActivityTag_args");

    private static final org.apache.thrift.protocol.TField REQ_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("reqVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new exportProductRelateActivityTag_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new exportProductRelateActivityTag_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQ_VO((short)1, "reqVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQ_VO
            return REQ_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQ_VO, new org.apache.thrift.meta_data.FieldMetaData("reqVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(exportProductRelateActivityTag_args.class, metaDataMap);
    }

    public exportProductRelateActivityTag_args() {
    }

    public exportProductRelateActivityTag_args(
      com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo)
    {
      this();
      this.reqVo = reqVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public exportProductRelateActivityTag_args(exportProductRelateActivityTag_args other) {
      if (other.isSetReqVo()) {
        this.reqVo = new com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo(other.reqVo);
      }
    }

    public exportProductRelateActivityTag_args deepCopy() {
      return new exportProductRelateActivityTag_args(this);
    }

    @Override
    public void clear() {
      this.reqVo = null;
    }

    public com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo getReqVo() {
      return this.reqVo;
    }

    public exportProductRelateActivityTag_args setReqVo(com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo reqVo) {
      this.reqVo = reqVo;
      return this;
    }

    public void unsetReqVo() {
      this.reqVo = null;
    }

    /** Returns true if field reqVo is set (has been assigned a value) and false otherwise */
    public boolean isSetReqVo() {
      return this.reqVo != null;
    }

    public void setReqVoIsSet(boolean value) {
      if (!value) {
        this.reqVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQ_VO:
        if (value == null) {
          unsetReqVo();
        } else {
          setReqVo((com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQ_VO:
        return getReqVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQ_VO:
        return isSetReqVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof exportProductRelateActivityTag_args)
        return this.equals((exportProductRelateActivityTag_args)that);
      return false;
    }

    public boolean equals(exportProductRelateActivityTag_args that) {
      if (that == null)
        return false;

      boolean this_present_reqVo = true && this.isSetReqVo();
      boolean that_present_reqVo = true && that.isSetReqVo();
      if (this_present_reqVo || that_present_reqVo) {
        if (!(this_present_reqVo && that_present_reqVo))
          return false;
        if (!this.reqVo.equals(that.reqVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_reqVo = true && (isSetReqVo());
      list.add(present_reqVo);
      if (present_reqVo)
        list.add(reqVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(exportProductRelateActivityTag_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetReqVo()).compareTo(other.isSetReqVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetReqVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqVo, other.reqVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("exportProductRelateActivityTag_args(");
      boolean first = true;

      sb.append("reqVo:");
      if (this.reqVo == null) {
        sb.append("null");
      } else {
        sb.append(this.reqVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (reqVo != null) {
        reqVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class exportProductRelateActivityTag_argsStandardSchemeFactory implements SchemeFactory {
      public exportProductRelateActivityTag_argsStandardScheme getScheme() {
        return new exportProductRelateActivityTag_argsStandardScheme();
      }
    }

    private static class exportProductRelateActivityTag_argsStandardScheme extends StandardScheme<exportProductRelateActivityTag_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, exportProductRelateActivityTag_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQ_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo();
                struct.reqVo.read(iprot);
                struct.setReqVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, exportProductRelateActivityTag_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.reqVo != null) {
          oprot.writeFieldBegin(REQ_VO_FIELD_DESC);
          struct.reqVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class exportProductRelateActivityTag_argsTupleSchemeFactory implements SchemeFactory {
      public exportProductRelateActivityTag_argsTupleScheme getScheme() {
        return new exportProductRelateActivityTag_argsTupleScheme();
      }
    }

    private static class exportProductRelateActivityTag_argsTupleScheme extends TupleScheme<exportProductRelateActivityTag_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, exportProductRelateActivityTag_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetReqVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetReqVo()) {
          struct.reqVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, exportProductRelateActivityTag_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.reqVo = new com.froad.thrift.vo.recommendactivitytag.ExportRelateActivityTagReqVo();
          struct.reqVo.read(iprot);
          struct.setReqVoIsSet(true);
        }
      }
    }

  }

  public static class exportProductRelateActivityTag_result implements org.apache.thrift.TBase<exportProductRelateActivityTag_result, exportProductRelateActivityTag_result._Fields>, java.io.Serializable, Cloneable, Comparable<exportProductRelateActivityTag_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("exportProductRelateActivityTag_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new exportProductRelateActivityTag_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new exportProductRelateActivityTag_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ExportResultRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ExportResultRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(exportProductRelateActivityTag_result.class, metaDataMap);
    }

    public exportProductRelateActivityTag_result() {
    }

    public exportProductRelateActivityTag_result(
      com.froad.thrift.vo.ExportResultRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public exportProductRelateActivityTag_result(exportProductRelateActivityTag_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ExportResultRes(other.success);
      }
    }

    public exportProductRelateActivityTag_result deepCopy() {
      return new exportProductRelateActivityTag_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ExportResultRes getSuccess() {
      return this.success;
    }

    public exportProductRelateActivityTag_result setSuccess(com.froad.thrift.vo.ExportResultRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ExportResultRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof exportProductRelateActivityTag_result)
        return this.equals((exportProductRelateActivityTag_result)that);
      return false;
    }

    public boolean equals(exportProductRelateActivityTag_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(exportProductRelateActivityTag_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("exportProductRelateActivityTag_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class exportProductRelateActivityTag_resultStandardSchemeFactory implements SchemeFactory {
      public exportProductRelateActivityTag_resultStandardScheme getScheme() {
        return new exportProductRelateActivityTag_resultStandardScheme();
      }
    }

    private static class exportProductRelateActivityTag_resultStandardScheme extends StandardScheme<exportProductRelateActivityTag_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, exportProductRelateActivityTag_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ExportResultRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, exportProductRelateActivityTag_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class exportProductRelateActivityTag_resultTupleSchemeFactory implements SchemeFactory {
      public exportProductRelateActivityTag_resultTupleScheme getScheme() {
        return new exportProductRelateActivityTag_resultTupleScheme();
      }
    }

    private static class exportProductRelateActivityTag_resultTupleScheme extends TupleScheme<exportProductRelateActivityTag_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, exportProductRelateActivityTag_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, exportProductRelateActivityTag_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ExportResultRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
