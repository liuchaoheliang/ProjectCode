/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 预售交易查询res-list-vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-10-6")
public class BossPresellOrderVo implements org.apache.thrift.TBase<BossPresellOrderVo, BossPresellOrderVo._Fields>, java.io.Serializable, Cloneable, Comparable<BossPresellOrderVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BossPresellOrderVo");

  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TICKET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("ticketId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PAYMENT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentTime", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField DELIVERY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryType", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MEMBER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("memberName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DELIVERY_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryStartTime", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField DELIVERY_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryEndTime", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField CONSIGNEE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("consigneeName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CONSIGNEE_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("consigneePhone", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField TICKET_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("ticketStatus", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CONSUME_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("consumeTime", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField EXPIRE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("expireTime", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField REFUND_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("refundTime", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)16);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BossPresellOrderVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BossPresellOrderVoTupleSchemeFactory());
  }

  /**
   * 订单号
   */
  public String orderId; // required
  /**
   * 券号
   */
  public String ticketId; // required
  /**
   * 购买(支付)时间
   */
  public long paymentTime; // required
  /**
   * 提货方式:0:送货上门;1:网点自提;2:配送或自提
   */
  public String deliveryType; // required
  /**
   * 商品名称
   */
  public String productName; // required
  /**
   * 用户名称
   */
  public String memberName; // required
  /**
   * 提货开始时间
   */
  public long deliveryStartTime; // required
  /**
   * 提货结束时间
   */
  public long deliveryEndTime; // required
  /**
   * 收货人
   */
  public String consigneeName; // required
  /**
   * 收货人电话
   */
  public String consigneePhone; // required
  /**
   * 券号状态
   */
  public String ticketStatus; // required
  /**
   * 消费时间
   */
  public long consumeTime; // required
  /**
   * 过期时间
   */
  public long expireTime; // required
  /**
   * 退款时间
   */
  public long refundTime; // required
  /**
   * clinetId
   */
  public String clientId; // required
  /**
   * 券表_id
   */
  public String id; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 订单号
     */
    ORDER_ID((short)1, "orderId"),
    /**
     * 券号
     */
    TICKET_ID((short)2, "ticketId"),
    /**
     * 购买(支付)时间
     */
    PAYMENT_TIME((short)3, "paymentTime"),
    /**
     * 提货方式:0:送货上门;1:网点自提;2:配送或自提
     */
    DELIVERY_TYPE((short)4, "deliveryType"),
    /**
     * 商品名称
     */
    PRODUCT_NAME((short)5, "productName"),
    /**
     * 用户名称
     */
    MEMBER_NAME((short)6, "memberName"),
    /**
     * 提货开始时间
     */
    DELIVERY_START_TIME((short)7, "deliveryStartTime"),
    /**
     * 提货结束时间
     */
    DELIVERY_END_TIME((short)8, "deliveryEndTime"),
    /**
     * 收货人
     */
    CONSIGNEE_NAME((short)9, "consigneeName"),
    /**
     * 收货人电话
     */
    CONSIGNEE_PHONE((short)10, "consigneePhone"),
    /**
     * 券号状态
     */
    TICKET_STATUS((short)11, "ticketStatus"),
    /**
     * 消费时间
     */
    CONSUME_TIME((short)12, "consumeTime"),
    /**
     * 过期时间
     */
    EXPIRE_TIME((short)13, "expireTime"),
    /**
     * 退款时间
     */
    REFUND_TIME((short)14, "refundTime"),
    /**
     * clinetId
     */
    CLIENT_ID((short)15, "clientId"),
    /**
     * 券表_id
     */
    ID((short)16, "id");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_ID
          return ORDER_ID;
        case 2: // TICKET_ID
          return TICKET_ID;
        case 3: // PAYMENT_TIME
          return PAYMENT_TIME;
        case 4: // DELIVERY_TYPE
          return DELIVERY_TYPE;
        case 5: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 6: // MEMBER_NAME
          return MEMBER_NAME;
        case 7: // DELIVERY_START_TIME
          return DELIVERY_START_TIME;
        case 8: // DELIVERY_END_TIME
          return DELIVERY_END_TIME;
        case 9: // CONSIGNEE_NAME
          return CONSIGNEE_NAME;
        case 10: // CONSIGNEE_PHONE
          return CONSIGNEE_PHONE;
        case 11: // TICKET_STATUS
          return TICKET_STATUS;
        case 12: // CONSUME_TIME
          return CONSUME_TIME;
        case 13: // EXPIRE_TIME
          return EXPIRE_TIME;
        case 14: // REFUND_TIME
          return REFUND_TIME;
        case 15: // CLIENT_ID
          return CLIENT_ID;
        case 16: // ID
          return ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PAYMENTTIME_ISSET_ID = 0;
  private static final int __DELIVERYSTARTTIME_ISSET_ID = 1;
  private static final int __DELIVERYENDTIME_ISSET_ID = 2;
  private static final int __CONSUMETIME_ISSET_ID = 3;
  private static final int __EXPIRETIME_ISSET_ID = 4;
  private static final int __REFUNDTIME_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TICKET_ID, new org.apache.thrift.meta_data.FieldMetaData("ticketId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYMENT_TIME, new org.apache.thrift.meta_data.FieldMetaData("paymentTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DELIVERY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("deliveryType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_NAME, new org.apache.thrift.meta_data.FieldMetaData("memberName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryStartTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DELIVERY_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONSIGNEE_NAME, new org.apache.thrift.meta_data.FieldMetaData("consigneeName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONSIGNEE_PHONE, new org.apache.thrift.meta_data.FieldMetaData("consigneePhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TICKET_STATUS, new org.apache.thrift.meta_data.FieldMetaData("ticketStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONSUME_TIME, new org.apache.thrift.meta_data.FieldMetaData("consumeTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.EXPIRE_TIME, new org.apache.thrift.meta_data.FieldMetaData("expireTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.REFUND_TIME, new org.apache.thrift.meta_data.FieldMetaData("refundTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BossPresellOrderVo.class, metaDataMap);
  }

  public BossPresellOrderVo() {
  }

  public BossPresellOrderVo(
    String orderId,
    String ticketId,
    long paymentTime,
    String deliveryType,
    String productName,
    String memberName,
    long deliveryStartTime,
    long deliveryEndTime,
    String consigneeName,
    String consigneePhone,
    String ticketStatus,
    long consumeTime,
    long expireTime,
    long refundTime,
    String clientId,
    String id)
  {
    this();
    this.orderId = orderId;
    this.ticketId = ticketId;
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    this.deliveryType = deliveryType;
    this.productName = productName;
    this.memberName = memberName;
    this.deliveryStartTime = deliveryStartTime;
    setDeliveryStartTimeIsSet(true);
    this.deliveryEndTime = deliveryEndTime;
    setDeliveryEndTimeIsSet(true);
    this.consigneeName = consigneeName;
    this.consigneePhone = consigneePhone;
    this.ticketStatus = ticketStatus;
    this.consumeTime = consumeTime;
    setConsumeTimeIsSet(true);
    this.expireTime = expireTime;
    setExpireTimeIsSet(true);
    this.refundTime = refundTime;
    setRefundTimeIsSet(true);
    this.clientId = clientId;
    this.id = id;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BossPresellOrderVo(BossPresellOrderVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    if (other.isSetTicketId()) {
      this.ticketId = other.ticketId;
    }
    this.paymentTime = other.paymentTime;
    if (other.isSetDeliveryType()) {
      this.deliveryType = other.deliveryType;
    }
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetMemberName()) {
      this.memberName = other.memberName;
    }
    this.deliveryStartTime = other.deliveryStartTime;
    this.deliveryEndTime = other.deliveryEndTime;
    if (other.isSetConsigneeName()) {
      this.consigneeName = other.consigneeName;
    }
    if (other.isSetConsigneePhone()) {
      this.consigneePhone = other.consigneePhone;
    }
    if (other.isSetTicketStatus()) {
      this.ticketStatus = other.ticketStatus;
    }
    this.consumeTime = other.consumeTime;
    this.expireTime = other.expireTime;
    this.refundTime = other.refundTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetId()) {
      this.id = other.id;
    }
  }

  public BossPresellOrderVo deepCopy() {
    return new BossPresellOrderVo(this);
  }

  @Override
  public void clear() {
    this.orderId = null;
    this.ticketId = null;
    setPaymentTimeIsSet(false);
    this.paymentTime = 0;
    this.deliveryType = null;
    this.productName = null;
    this.memberName = null;
    setDeliveryStartTimeIsSet(false);
    this.deliveryStartTime = 0;
    setDeliveryEndTimeIsSet(false);
    this.deliveryEndTime = 0;
    this.consigneeName = null;
    this.consigneePhone = null;
    this.ticketStatus = null;
    setConsumeTimeIsSet(false);
    this.consumeTime = 0;
    setExpireTimeIsSet(false);
    this.expireTime = 0;
    setRefundTimeIsSet(false);
    this.refundTime = 0;
    this.clientId = null;
    this.id = null;
  }

  /**
   * 订单号
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 订单号
   */
  public BossPresellOrderVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 券号
   */
  public String getTicketId() {
    return this.ticketId;
  }

  /**
   * 券号
   */
  public BossPresellOrderVo setTicketId(String ticketId) {
    this.ticketId = ticketId;
    return this;
  }

  public void unsetTicketId() {
    this.ticketId = null;
  }

  /** Returns true if field ticketId is set (has been assigned a value) and false otherwise */
  public boolean isSetTicketId() {
    return this.ticketId != null;
  }

  public void setTicketIdIsSet(boolean value) {
    if (!value) {
      this.ticketId = null;
    }
  }

  /**
   * 购买(支付)时间
   */
  public long getPaymentTime() {
    return this.paymentTime;
  }

  /**
   * 购买(支付)时间
   */
  public BossPresellOrderVo setPaymentTime(long paymentTime) {
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    return this;
  }

  public void unsetPaymentTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  /** Returns true if field paymentTime is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentTime() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  public void setPaymentTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID, value);
  }

  /**
   * 提货方式:0:送货上门;1:网点自提;2:配送或自提
   */
  public String getDeliveryType() {
    return this.deliveryType;
  }

  /**
   * 提货方式:0:送货上门;1:网点自提;2:配送或自提
   */
  public BossPresellOrderVo setDeliveryType(String deliveryType) {
    this.deliveryType = deliveryType;
    return this;
  }

  public void unsetDeliveryType() {
    this.deliveryType = null;
  }

  /** Returns true if field deliveryType is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryType() {
    return this.deliveryType != null;
  }

  public void setDeliveryTypeIsSet(boolean value) {
    if (!value) {
      this.deliveryType = null;
    }
  }

  /**
   * 商品名称
   */
  public String getProductName() {
    return this.productName;
  }

  /**
   * 商品名称
   */
  public BossPresellOrderVo setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  /**
   * 用户名称
   */
  public String getMemberName() {
    return this.memberName;
  }

  /**
   * 用户名称
   */
  public BossPresellOrderVo setMemberName(String memberName) {
    this.memberName = memberName;
    return this;
  }

  public void unsetMemberName() {
    this.memberName = null;
  }

  /** Returns true if field memberName is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberName() {
    return this.memberName != null;
  }

  public void setMemberNameIsSet(boolean value) {
    if (!value) {
      this.memberName = null;
    }
  }

  /**
   * 提货开始时间
   */
  public long getDeliveryStartTime() {
    return this.deliveryStartTime;
  }

  /**
   * 提货开始时间
   */
  public BossPresellOrderVo setDeliveryStartTime(long deliveryStartTime) {
    this.deliveryStartTime = deliveryStartTime;
    setDeliveryStartTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID);
  }

  /** Returns true if field deliveryStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID);
  }

  public void setDeliveryStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID, value);
  }

  /**
   * 提货结束时间
   */
  public long getDeliveryEndTime() {
    return this.deliveryEndTime;
  }

  /**
   * 提货结束时间
   */
  public BossPresellOrderVo setDeliveryEndTime(long deliveryEndTime) {
    this.deliveryEndTime = deliveryEndTime;
    setDeliveryEndTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID);
  }

  /** Returns true if field deliveryEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID);
  }

  public void setDeliveryEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID, value);
  }

  /**
   * 收货人
   */
  public String getConsigneeName() {
    return this.consigneeName;
  }

  /**
   * 收货人
   */
  public BossPresellOrderVo setConsigneeName(String consigneeName) {
    this.consigneeName = consigneeName;
    return this;
  }

  public void unsetConsigneeName() {
    this.consigneeName = null;
  }

  /** Returns true if field consigneeName is set (has been assigned a value) and false otherwise */
  public boolean isSetConsigneeName() {
    return this.consigneeName != null;
  }

  public void setConsigneeNameIsSet(boolean value) {
    if (!value) {
      this.consigneeName = null;
    }
  }

  /**
   * 收货人电话
   */
  public String getConsigneePhone() {
    return this.consigneePhone;
  }

  /**
   * 收货人电话
   */
  public BossPresellOrderVo setConsigneePhone(String consigneePhone) {
    this.consigneePhone = consigneePhone;
    return this;
  }

  public void unsetConsigneePhone() {
    this.consigneePhone = null;
  }

  /** Returns true if field consigneePhone is set (has been assigned a value) and false otherwise */
  public boolean isSetConsigneePhone() {
    return this.consigneePhone != null;
  }

  public void setConsigneePhoneIsSet(boolean value) {
    if (!value) {
      this.consigneePhone = null;
    }
  }

  /**
   * 券号状态
   */
  public String getTicketStatus() {
    return this.ticketStatus;
  }

  /**
   * 券号状态
   */
  public BossPresellOrderVo setTicketStatus(String ticketStatus) {
    this.ticketStatus = ticketStatus;
    return this;
  }

  public void unsetTicketStatus() {
    this.ticketStatus = null;
  }

  /** Returns true if field ticketStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetTicketStatus() {
    return this.ticketStatus != null;
  }

  public void setTicketStatusIsSet(boolean value) {
    if (!value) {
      this.ticketStatus = null;
    }
  }

  /**
   * 消费时间
   */
  public long getConsumeTime() {
    return this.consumeTime;
  }

  /**
   * 消费时间
   */
  public BossPresellOrderVo setConsumeTime(long consumeTime) {
    this.consumeTime = consumeTime;
    setConsumeTimeIsSet(true);
    return this;
  }

  public void unsetConsumeTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONSUMETIME_ISSET_ID);
  }

  /** Returns true if field consumeTime is set (has been assigned a value) and false otherwise */
  public boolean isSetConsumeTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CONSUMETIME_ISSET_ID);
  }

  public void setConsumeTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONSUMETIME_ISSET_ID, value);
  }

  /**
   * 过期时间
   */
  public long getExpireTime() {
    return this.expireTime;
  }

  /**
   * 过期时间
   */
  public BossPresellOrderVo setExpireTime(long expireTime) {
    this.expireTime = expireTime;
    setExpireTimeIsSet(true);
    return this;
  }

  public void unsetExpireTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPIRETIME_ISSET_ID);
  }

  /** Returns true if field expireTime is set (has been assigned a value) and false otherwise */
  public boolean isSetExpireTime() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPIRETIME_ISSET_ID);
  }

  public void setExpireTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPIRETIME_ISSET_ID, value);
  }

  /**
   * 退款时间
   */
  public long getRefundTime() {
    return this.refundTime;
  }

  /**
   * 退款时间
   */
  public BossPresellOrderVo setRefundTime(long refundTime) {
    this.refundTime = refundTime;
    setRefundTimeIsSet(true);
    return this;
  }

  public void unsetRefundTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REFUNDTIME_ISSET_ID);
  }

  /** Returns true if field refundTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundTime() {
    return EncodingUtils.testBit(__isset_bitfield, __REFUNDTIME_ISSET_ID);
  }

  public void setRefundTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REFUNDTIME_ISSET_ID, value);
  }

  /**
   * clinetId
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * clinetId
   */
  public BossPresellOrderVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 券表_id
   */
  public String getId() {
    return this.id;
  }

  /**
   * 券表_id
   */
  public BossPresellOrderVo setId(String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case TICKET_ID:
      if (value == null) {
        unsetTicketId();
      } else {
        setTicketId((String)value);
      }
      break;

    case PAYMENT_TIME:
      if (value == null) {
        unsetPaymentTime();
      } else {
        setPaymentTime((Long)value);
      }
      break;

    case DELIVERY_TYPE:
      if (value == null) {
        unsetDeliveryType();
      } else {
        setDeliveryType((String)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case MEMBER_NAME:
      if (value == null) {
        unsetMemberName();
      } else {
        setMemberName((String)value);
      }
      break;

    case DELIVERY_START_TIME:
      if (value == null) {
        unsetDeliveryStartTime();
      } else {
        setDeliveryStartTime((Long)value);
      }
      break;

    case DELIVERY_END_TIME:
      if (value == null) {
        unsetDeliveryEndTime();
      } else {
        setDeliveryEndTime((Long)value);
      }
      break;

    case CONSIGNEE_NAME:
      if (value == null) {
        unsetConsigneeName();
      } else {
        setConsigneeName((String)value);
      }
      break;

    case CONSIGNEE_PHONE:
      if (value == null) {
        unsetConsigneePhone();
      } else {
        setConsigneePhone((String)value);
      }
      break;

    case TICKET_STATUS:
      if (value == null) {
        unsetTicketStatus();
      } else {
        setTicketStatus((String)value);
      }
      break;

    case CONSUME_TIME:
      if (value == null) {
        unsetConsumeTime();
      } else {
        setConsumeTime((Long)value);
      }
      break;

    case EXPIRE_TIME:
      if (value == null) {
        unsetExpireTime();
      } else {
        setExpireTime((Long)value);
      }
      break;

    case REFUND_TIME:
      if (value == null) {
        unsetRefundTime();
      } else {
        setRefundTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_ID:
      return getOrderId();

    case TICKET_ID:
      return getTicketId();

    case PAYMENT_TIME:
      return Long.valueOf(getPaymentTime());

    case DELIVERY_TYPE:
      return getDeliveryType();

    case PRODUCT_NAME:
      return getProductName();

    case MEMBER_NAME:
      return getMemberName();

    case DELIVERY_START_TIME:
      return Long.valueOf(getDeliveryStartTime());

    case DELIVERY_END_TIME:
      return Long.valueOf(getDeliveryEndTime());

    case CONSIGNEE_NAME:
      return getConsigneeName();

    case CONSIGNEE_PHONE:
      return getConsigneePhone();

    case TICKET_STATUS:
      return getTicketStatus();

    case CONSUME_TIME:
      return Long.valueOf(getConsumeTime());

    case EXPIRE_TIME:
      return Long.valueOf(getExpireTime());

    case REFUND_TIME:
      return Long.valueOf(getRefundTime());

    case CLIENT_ID:
      return getClientId();

    case ID:
      return getId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_ID:
      return isSetOrderId();
    case TICKET_ID:
      return isSetTicketId();
    case PAYMENT_TIME:
      return isSetPaymentTime();
    case DELIVERY_TYPE:
      return isSetDeliveryType();
    case PRODUCT_NAME:
      return isSetProductName();
    case MEMBER_NAME:
      return isSetMemberName();
    case DELIVERY_START_TIME:
      return isSetDeliveryStartTime();
    case DELIVERY_END_TIME:
      return isSetDeliveryEndTime();
    case CONSIGNEE_NAME:
      return isSetConsigneeName();
    case CONSIGNEE_PHONE:
      return isSetConsigneePhone();
    case TICKET_STATUS:
      return isSetTicketStatus();
    case CONSUME_TIME:
      return isSetConsumeTime();
    case EXPIRE_TIME:
      return isSetExpireTime();
    case REFUND_TIME:
      return isSetRefundTime();
    case CLIENT_ID:
      return isSetClientId();
    case ID:
      return isSetId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BossPresellOrderVo)
      return this.equals((BossPresellOrderVo)that);
    return false;
  }

  public boolean equals(BossPresellOrderVo that) {
    if (that == null)
      return false;

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_ticketId = true && this.isSetTicketId();
    boolean that_present_ticketId = true && that.isSetTicketId();
    if (this_present_ticketId || that_present_ticketId) {
      if (!(this_present_ticketId && that_present_ticketId))
        return false;
      if (!this.ticketId.equals(that.ticketId))
        return false;
    }

    boolean this_present_paymentTime = true;
    boolean that_present_paymentTime = true;
    if (this_present_paymentTime || that_present_paymentTime) {
      if (!(this_present_paymentTime && that_present_paymentTime))
        return false;
      if (this.paymentTime != that.paymentTime)
        return false;
    }

    boolean this_present_deliveryType = true && this.isSetDeliveryType();
    boolean that_present_deliveryType = true && that.isSetDeliveryType();
    if (this_present_deliveryType || that_present_deliveryType) {
      if (!(this_present_deliveryType && that_present_deliveryType))
        return false;
      if (!this.deliveryType.equals(that.deliveryType))
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_memberName = true && this.isSetMemberName();
    boolean that_present_memberName = true && that.isSetMemberName();
    if (this_present_memberName || that_present_memberName) {
      if (!(this_present_memberName && that_present_memberName))
        return false;
      if (!this.memberName.equals(that.memberName))
        return false;
    }

    boolean this_present_deliveryStartTime = true;
    boolean that_present_deliveryStartTime = true;
    if (this_present_deliveryStartTime || that_present_deliveryStartTime) {
      if (!(this_present_deliveryStartTime && that_present_deliveryStartTime))
        return false;
      if (this.deliveryStartTime != that.deliveryStartTime)
        return false;
    }

    boolean this_present_deliveryEndTime = true;
    boolean that_present_deliveryEndTime = true;
    if (this_present_deliveryEndTime || that_present_deliveryEndTime) {
      if (!(this_present_deliveryEndTime && that_present_deliveryEndTime))
        return false;
      if (this.deliveryEndTime != that.deliveryEndTime)
        return false;
    }

    boolean this_present_consigneeName = true && this.isSetConsigneeName();
    boolean that_present_consigneeName = true && that.isSetConsigneeName();
    if (this_present_consigneeName || that_present_consigneeName) {
      if (!(this_present_consigneeName && that_present_consigneeName))
        return false;
      if (!this.consigneeName.equals(that.consigneeName))
        return false;
    }

    boolean this_present_consigneePhone = true && this.isSetConsigneePhone();
    boolean that_present_consigneePhone = true && that.isSetConsigneePhone();
    if (this_present_consigneePhone || that_present_consigneePhone) {
      if (!(this_present_consigneePhone && that_present_consigneePhone))
        return false;
      if (!this.consigneePhone.equals(that.consigneePhone))
        return false;
    }

    boolean this_present_ticketStatus = true && this.isSetTicketStatus();
    boolean that_present_ticketStatus = true && that.isSetTicketStatus();
    if (this_present_ticketStatus || that_present_ticketStatus) {
      if (!(this_present_ticketStatus && that_present_ticketStatus))
        return false;
      if (!this.ticketStatus.equals(that.ticketStatus))
        return false;
    }

    boolean this_present_consumeTime = true;
    boolean that_present_consumeTime = true;
    if (this_present_consumeTime || that_present_consumeTime) {
      if (!(this_present_consumeTime && that_present_consumeTime))
        return false;
      if (this.consumeTime != that.consumeTime)
        return false;
    }

    boolean this_present_expireTime = true;
    boolean that_present_expireTime = true;
    if (this_present_expireTime || that_present_expireTime) {
      if (!(this_present_expireTime && that_present_expireTime))
        return false;
      if (this.expireTime != that.expireTime)
        return false;
    }

    boolean this_present_refundTime = true;
    boolean that_present_refundTime = true;
    if (this_present_refundTime || that_present_refundTime) {
      if (!(this_present_refundTime && that_present_refundTime))
        return false;
      if (this.refundTime != that.refundTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_ticketId = true && (isSetTicketId());
    list.add(present_ticketId);
    if (present_ticketId)
      list.add(ticketId);

    boolean present_paymentTime = true;
    list.add(present_paymentTime);
    if (present_paymentTime)
      list.add(paymentTime);

    boolean present_deliveryType = true && (isSetDeliveryType());
    list.add(present_deliveryType);
    if (present_deliveryType)
      list.add(deliveryType);

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_memberName = true && (isSetMemberName());
    list.add(present_memberName);
    if (present_memberName)
      list.add(memberName);

    boolean present_deliveryStartTime = true;
    list.add(present_deliveryStartTime);
    if (present_deliveryStartTime)
      list.add(deliveryStartTime);

    boolean present_deliveryEndTime = true;
    list.add(present_deliveryEndTime);
    if (present_deliveryEndTime)
      list.add(deliveryEndTime);

    boolean present_consigneeName = true && (isSetConsigneeName());
    list.add(present_consigneeName);
    if (present_consigneeName)
      list.add(consigneeName);

    boolean present_consigneePhone = true && (isSetConsigneePhone());
    list.add(present_consigneePhone);
    if (present_consigneePhone)
      list.add(consigneePhone);

    boolean present_ticketStatus = true && (isSetTicketStatus());
    list.add(present_ticketStatus);
    if (present_ticketStatus)
      list.add(ticketStatus);

    boolean present_consumeTime = true;
    list.add(present_consumeTime);
    if (present_consumeTime)
      list.add(consumeTime);

    boolean present_expireTime = true;
    list.add(present_expireTime);
    if (present_expireTime)
      list.add(expireTime);

    boolean present_refundTime = true;
    list.add(present_refundTime);
    if (present_refundTime)
      list.add(refundTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    return list.hashCode();
  }

  @Override
  public int compareTo(BossPresellOrderVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTicketId()).compareTo(other.isSetTicketId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTicketId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ticketId, other.ticketId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentTime()).compareTo(other.isSetPaymentTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentTime, other.paymentTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryType()).compareTo(other.isSetDeliveryType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryType, other.deliveryType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberName()).compareTo(other.isSetMemberName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberName, other.memberName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryStartTime()).compareTo(other.isSetDeliveryStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryStartTime, other.deliveryStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryEndTime()).compareTo(other.isSetDeliveryEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryEndTime, other.deliveryEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsigneeName()).compareTo(other.isSetConsigneeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsigneeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consigneeName, other.consigneeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsigneePhone()).compareTo(other.isSetConsigneePhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsigneePhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consigneePhone, other.consigneePhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTicketStatus()).compareTo(other.isSetTicketStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTicketStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ticketStatus, other.ticketStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsumeTime()).compareTo(other.isSetConsumeTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsumeTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consumeTime, other.consumeTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpireTime()).compareTo(other.isSetExpireTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpireTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expireTime, other.expireTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundTime()).compareTo(other.isSetRefundTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundTime, other.refundTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BossPresellOrderVo(");
    boolean first = true;

    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ticketId:");
    if (this.ticketId == null) {
      sb.append("null");
    } else {
      sb.append(this.ticketId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentTime:");
    sb.append(this.paymentTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryType:");
    if (this.deliveryType == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberName:");
    if (this.memberName == null) {
      sb.append("null");
    } else {
      sb.append(this.memberName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryStartTime:");
    sb.append(this.deliveryStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryEndTime:");
    sb.append(this.deliveryEndTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("consigneeName:");
    if (this.consigneeName == null) {
      sb.append("null");
    } else {
      sb.append(this.consigneeName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("consigneePhone:");
    if (this.consigneePhone == null) {
      sb.append("null");
    } else {
      sb.append(this.consigneePhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ticketStatus:");
    if (this.ticketStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.ticketStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("consumeTime:");
    sb.append(this.consumeTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("expireTime:");
    sb.append(this.expireTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundTime:");
    sb.append(this.refundTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BossPresellOrderVoStandardSchemeFactory implements SchemeFactory {
    public BossPresellOrderVoStandardScheme getScheme() {
      return new BossPresellOrderVoStandardScheme();
    }
  }

  private static class BossPresellOrderVoStandardScheme extends StandardScheme<BossPresellOrderVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BossPresellOrderVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TICKET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ticketId = iprot.readString();
              struct.setTicketIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PAYMENT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.paymentTime = iprot.readI64();
              struct.setPaymentTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DELIVERY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryType = iprot.readString();
              struct.setDeliveryTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MEMBER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberName = iprot.readString();
              struct.setMemberNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DELIVERY_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryStartTime = iprot.readI64();
              struct.setDeliveryStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DELIVERY_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryEndTime = iprot.readI64();
              struct.setDeliveryEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CONSIGNEE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.consigneeName = iprot.readString();
              struct.setConsigneeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CONSIGNEE_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.consigneePhone = iprot.readString();
              struct.setConsigneePhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TICKET_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ticketStatus = iprot.readString();
              struct.setTicketStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CONSUME_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.consumeTime = iprot.readI64();
              struct.setConsumeTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // EXPIRE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expireTime = iprot.readI64();
              struct.setExpireTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // REFUND_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.refundTime = iprot.readI64();
              struct.setRefundTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BossPresellOrderVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      if (struct.ticketId != null) {
        oprot.writeFieldBegin(TICKET_ID_FIELD_DESC);
        oprot.writeString(struct.ticketId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAYMENT_TIME_FIELD_DESC);
      oprot.writeI64(struct.paymentTime);
      oprot.writeFieldEnd();
      if (struct.deliveryType != null) {
        oprot.writeFieldBegin(DELIVERY_TYPE_FIELD_DESC);
        oprot.writeString(struct.deliveryType);
        oprot.writeFieldEnd();
      }
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      if (struct.memberName != null) {
        oprot.writeFieldBegin(MEMBER_NAME_FIELD_DESC);
        oprot.writeString(struct.memberName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DELIVERY_START_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_END_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryEndTime);
      oprot.writeFieldEnd();
      if (struct.consigneeName != null) {
        oprot.writeFieldBegin(CONSIGNEE_NAME_FIELD_DESC);
        oprot.writeString(struct.consigneeName);
        oprot.writeFieldEnd();
      }
      if (struct.consigneePhone != null) {
        oprot.writeFieldBegin(CONSIGNEE_PHONE_FIELD_DESC);
        oprot.writeString(struct.consigneePhone);
        oprot.writeFieldEnd();
      }
      if (struct.ticketStatus != null) {
        oprot.writeFieldBegin(TICKET_STATUS_FIELD_DESC);
        oprot.writeString(struct.ticketStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CONSUME_TIME_FIELD_DESC);
      oprot.writeI64(struct.consumeTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPIRE_TIME_FIELD_DESC);
      oprot.writeI64(struct.expireTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REFUND_TIME_FIELD_DESC);
      oprot.writeI64(struct.refundTime);
      oprot.writeFieldEnd();
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BossPresellOrderVoTupleSchemeFactory implements SchemeFactory {
    public BossPresellOrderVoTupleScheme getScheme() {
      return new BossPresellOrderVoTupleScheme();
    }
  }

  private static class BossPresellOrderVoTupleScheme extends TupleScheme<BossPresellOrderVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BossPresellOrderVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrderId()) {
        optionals.set(0);
      }
      if (struct.isSetTicketId()) {
        optionals.set(1);
      }
      if (struct.isSetPaymentTime()) {
        optionals.set(2);
      }
      if (struct.isSetDeliveryType()) {
        optionals.set(3);
      }
      if (struct.isSetProductName()) {
        optionals.set(4);
      }
      if (struct.isSetMemberName()) {
        optionals.set(5);
      }
      if (struct.isSetDeliveryStartTime()) {
        optionals.set(6);
      }
      if (struct.isSetDeliveryEndTime()) {
        optionals.set(7);
      }
      if (struct.isSetConsigneeName()) {
        optionals.set(8);
      }
      if (struct.isSetConsigneePhone()) {
        optionals.set(9);
      }
      if (struct.isSetTicketStatus()) {
        optionals.set(10);
      }
      if (struct.isSetConsumeTime()) {
        optionals.set(11);
      }
      if (struct.isSetExpireTime()) {
        optionals.set(12);
      }
      if (struct.isSetRefundTime()) {
        optionals.set(13);
      }
      if (struct.isSetClientId()) {
        optionals.set(14);
      }
      if (struct.isSetId()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetTicketId()) {
        oprot.writeString(struct.ticketId);
      }
      if (struct.isSetPaymentTime()) {
        oprot.writeI64(struct.paymentTime);
      }
      if (struct.isSetDeliveryType()) {
        oprot.writeString(struct.deliveryType);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetMemberName()) {
        oprot.writeString(struct.memberName);
      }
      if (struct.isSetDeliveryStartTime()) {
        oprot.writeI64(struct.deliveryStartTime);
      }
      if (struct.isSetDeliveryEndTime()) {
        oprot.writeI64(struct.deliveryEndTime);
      }
      if (struct.isSetConsigneeName()) {
        oprot.writeString(struct.consigneeName);
      }
      if (struct.isSetConsigneePhone()) {
        oprot.writeString(struct.consigneePhone);
      }
      if (struct.isSetTicketStatus()) {
        oprot.writeString(struct.ticketStatus);
      }
      if (struct.isSetConsumeTime()) {
        oprot.writeI64(struct.consumeTime);
      }
      if (struct.isSetExpireTime()) {
        oprot.writeI64(struct.expireTime);
      }
      if (struct.isSetRefundTime()) {
        oprot.writeI64(struct.refundTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BossPresellOrderVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.ticketId = iprot.readString();
        struct.setTicketIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.paymentTime = iprot.readI64();
        struct.setPaymentTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.deliveryType = iprot.readString();
        struct.setDeliveryTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.memberName = iprot.readString();
        struct.setMemberNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.deliveryStartTime = iprot.readI64();
        struct.setDeliveryStartTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.deliveryEndTime = iprot.readI64();
        struct.setDeliveryEndTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.consigneeName = iprot.readString();
        struct.setConsigneeNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.consigneePhone = iprot.readString();
        struct.setConsigneePhoneIsSet(true);
      }
      if (incoming.get(10)) {
        struct.ticketStatus = iprot.readString();
        struct.setTicketStatusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.consumeTime = iprot.readI64();
        struct.setConsumeTimeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.expireTime = iprot.readI64();
        struct.setExpireTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.refundTime = iprot.readI64();
        struct.setRefundTimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(15)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
    }
  }

}

