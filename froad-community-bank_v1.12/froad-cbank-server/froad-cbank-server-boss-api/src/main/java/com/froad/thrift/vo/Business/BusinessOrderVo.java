/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.Business;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 运营订单Vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-1-4")
public class BusinessOrderVo implements org.apache.thrift.TBase<BusinessOrderVo, BusinessOrderVo._Fields>, java.io.Serializable, Cloneable, Comparable<BusinessOrderVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BusinessOrderVo");

  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SUB_ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("subOrderId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ORDER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("orderStatus", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MEMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("memberCode", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField PAYMENT_METHOD_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentMethod", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TOTAL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField REAL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("realPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField FFT_POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("fftPoints", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField BANK_POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("bankPoints", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField POIN_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("poinRate", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField PAYMENT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentTime", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField CLIENT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("clientName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField DELIVERY_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryStatus", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField REFUND_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("refundState", org.apache.thrift.protocol.TType.STRING, (short)16);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BusinessOrderVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BusinessOrderVoTupleSchemeFactory());
  }

  /**
   * 订单编号
   */
  public String orderId; // required
  /**
   * 子订单编号
   */
  public String subOrderId; // required
  /**
   * 订单状态1:订单创建；2:订单用户关闭;3:订单系统关闭;4:订单支付中;5:订单支付失败;6:订单支付完成
   */
  public String orderStatus; // required
  /**
   * 用户编号
   */
  public long memberCode; // required
  /**
   * 支付方式 1:现金支付;2:联盟积分支付;3:银行积分支付;4:联盟积分+现金支付;5:银行积分+现金支付;6:赠送积分
   */
  public String paymentMethod; // required
  /**
   * 总金额
   */
  public double totalPrice; // required
  /**
   * 现金
   */
  public double realPrice; // required
  /**
   * 联盟积分
   */
  public double fftPoints; // required
  /**
   * 银行积分
   */
  public double bankPoints; // required
  /**
   * 银行积分兑换比例
   */
  public String poinRate; // required
  /**
   * 订单创建时间
   */
  public long createTime; // required
  /**
   * 支付时间
   */
  public long paymentTime; // required
  /**
   * 所属客户端
   */
  public String clientId; // required
  /**
   * 客户端名称
   */
  public String clientName; // required
  /**
   * 发货状态 0:未发货;1:已发货;2:已收货;3:未提货;4:已提货
   */
  public String deliveryStatus; // required
  /**
   * 退款状态 1:未退款;2:退款中;3:退款完成;4:部分退款
   */
  public String refundState; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 订单编号
     */
    ORDER_ID((short)1, "orderId"),
    /**
     * 子订单编号
     */
    SUB_ORDER_ID((short)2, "subOrderId"),
    /**
     * 订单状态1:订单创建；2:订单用户关闭;3:订单系统关闭;4:订单支付中;5:订单支付失败;6:订单支付完成
     */
    ORDER_STATUS((short)3, "orderStatus"),
    /**
     * 用户编号
     */
    MEMBER_CODE((short)4, "memberCode"),
    /**
     * 支付方式 1:现金支付;2:联盟积分支付;3:银行积分支付;4:联盟积分+现金支付;5:银行积分+现金支付;6:赠送积分
     */
    PAYMENT_METHOD((short)5, "paymentMethod"),
    /**
     * 总金额
     */
    TOTAL_PRICE((short)6, "totalPrice"),
    /**
     * 现金
     */
    REAL_PRICE((short)7, "realPrice"),
    /**
     * 联盟积分
     */
    FFT_POINTS((short)8, "fftPoints"),
    /**
     * 银行积分
     */
    BANK_POINTS((short)9, "bankPoints"),
    /**
     * 银行积分兑换比例
     */
    POIN_RATE((short)10, "poinRate"),
    /**
     * 订单创建时间
     */
    CREATE_TIME((short)11, "createTime"),
    /**
     * 支付时间
     */
    PAYMENT_TIME((short)12, "paymentTime"),
    /**
     * 所属客户端
     */
    CLIENT_ID((short)13, "clientId"),
    /**
     * 客户端名称
     */
    CLIENT_NAME((short)14, "clientName"),
    /**
     * 发货状态 0:未发货;1:已发货;2:已收货;3:未提货;4:已提货
     */
    DELIVERY_STATUS((short)15, "deliveryStatus"),
    /**
     * 退款状态 1:未退款;2:退款中;3:退款完成;4:部分退款
     */
    REFUND_STATE((short)16, "refundState");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_ID
          return ORDER_ID;
        case 2: // SUB_ORDER_ID
          return SUB_ORDER_ID;
        case 3: // ORDER_STATUS
          return ORDER_STATUS;
        case 4: // MEMBER_CODE
          return MEMBER_CODE;
        case 5: // PAYMENT_METHOD
          return PAYMENT_METHOD;
        case 6: // TOTAL_PRICE
          return TOTAL_PRICE;
        case 7: // REAL_PRICE
          return REAL_PRICE;
        case 8: // FFT_POINTS
          return FFT_POINTS;
        case 9: // BANK_POINTS
          return BANK_POINTS;
        case 10: // POIN_RATE
          return POIN_RATE;
        case 11: // CREATE_TIME
          return CREATE_TIME;
        case 12: // PAYMENT_TIME
          return PAYMENT_TIME;
        case 13: // CLIENT_ID
          return CLIENT_ID;
        case 14: // CLIENT_NAME
          return CLIENT_NAME;
        case 15: // DELIVERY_STATUS
          return DELIVERY_STATUS;
        case 16: // REFUND_STATE
          return REFUND_STATE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MEMBERCODE_ISSET_ID = 0;
  private static final int __TOTALPRICE_ISSET_ID = 1;
  private static final int __REALPRICE_ISSET_ID = 2;
  private static final int __FFTPOINTS_ISSET_ID = 3;
  private static final int __BANKPOINTS_ISSET_ID = 4;
  private static final int __CREATETIME_ISSET_ID = 5;
  private static final int __PAYMENTTIME_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUB_ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("subOrderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("orderStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("memberCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PAYMENT_METHOD, new org.apache.thrift.meta_data.FieldMetaData("paymentMethod", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("totalPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REAL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("realPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.FFT_POINTS, new org.apache.thrift.meta_data.FieldMetaData("fftPoints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BANK_POINTS, new org.apache.thrift.meta_data.FieldMetaData("bankPoints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.POIN_RATE, new org.apache.thrift.meta_data.FieldMetaData("poinRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PAYMENT_TIME, new org.apache.thrift.meta_data.FieldMetaData("paymentTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_NAME, new org.apache.thrift.meta_data.FieldMetaData("clientName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_STATUS, new org.apache.thrift.meta_data.FieldMetaData("deliveryStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFUND_STATE, new org.apache.thrift.meta_data.FieldMetaData("refundState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BusinessOrderVo.class, metaDataMap);
  }

  public BusinessOrderVo() {
  }

  public BusinessOrderVo(
    String orderId,
    String subOrderId,
    String orderStatus,
    long memberCode,
    String paymentMethod,
    double totalPrice,
    double realPrice,
    double fftPoints,
    double bankPoints,
    String poinRate,
    long createTime,
    long paymentTime,
    String clientId,
    String clientName,
    String deliveryStatus,
    String refundState)
  {
    this();
    this.orderId = orderId;
    this.subOrderId = subOrderId;
    this.orderStatus = orderStatus;
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    this.paymentMethod = paymentMethod;
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    this.realPrice = realPrice;
    setRealPriceIsSet(true);
    this.fftPoints = fftPoints;
    setFftPointsIsSet(true);
    this.bankPoints = bankPoints;
    setBankPointsIsSet(true);
    this.poinRate = poinRate;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    this.clientId = clientId;
    this.clientName = clientName;
    this.deliveryStatus = deliveryStatus;
    this.refundState = refundState;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BusinessOrderVo(BusinessOrderVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    if (other.isSetSubOrderId()) {
      this.subOrderId = other.subOrderId;
    }
    if (other.isSetOrderStatus()) {
      this.orderStatus = other.orderStatus;
    }
    this.memberCode = other.memberCode;
    if (other.isSetPaymentMethod()) {
      this.paymentMethod = other.paymentMethod;
    }
    this.totalPrice = other.totalPrice;
    this.realPrice = other.realPrice;
    this.fftPoints = other.fftPoints;
    this.bankPoints = other.bankPoints;
    if (other.isSetPoinRate()) {
      this.poinRate = other.poinRate;
    }
    this.createTime = other.createTime;
    this.paymentTime = other.paymentTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetClientName()) {
      this.clientName = other.clientName;
    }
    if (other.isSetDeliveryStatus()) {
      this.deliveryStatus = other.deliveryStatus;
    }
    if (other.isSetRefundState()) {
      this.refundState = other.refundState;
    }
  }

  public BusinessOrderVo deepCopy() {
    return new BusinessOrderVo(this);
  }

  @Override
  public void clear() {
    this.orderId = null;
    this.subOrderId = null;
    this.orderStatus = null;
    setMemberCodeIsSet(false);
    this.memberCode = 0;
    this.paymentMethod = null;
    setTotalPriceIsSet(false);
    this.totalPrice = 0.0;
    setRealPriceIsSet(false);
    this.realPrice = 0.0;
    setFftPointsIsSet(false);
    this.fftPoints = 0.0;
    setBankPointsIsSet(false);
    this.bankPoints = 0.0;
    this.poinRate = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setPaymentTimeIsSet(false);
    this.paymentTime = 0;
    this.clientId = null;
    this.clientName = null;
    this.deliveryStatus = null;
    this.refundState = null;
  }

  /**
   * 订单编号
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 订单编号
   */
  public BusinessOrderVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 子订单编号
   */
  public String getSubOrderId() {
    return this.subOrderId;
  }

  /**
   * 子订单编号
   */
  public BusinessOrderVo setSubOrderId(String subOrderId) {
    this.subOrderId = subOrderId;
    return this;
  }

  public void unsetSubOrderId() {
    this.subOrderId = null;
  }

  /** Returns true if field subOrderId is set (has been assigned a value) and false otherwise */
  public boolean isSetSubOrderId() {
    return this.subOrderId != null;
  }

  public void setSubOrderIdIsSet(boolean value) {
    if (!value) {
      this.subOrderId = null;
    }
  }

  /**
   * 订单状态1:订单创建；2:订单用户关闭;3:订单系统关闭;4:订单支付中;5:订单支付失败;6:订单支付完成
   */
  public String getOrderStatus() {
    return this.orderStatus;
  }

  /**
   * 订单状态1:订单创建；2:订单用户关闭;3:订单系统关闭;4:订单支付中;5:订单支付失败;6:订单支付完成
   */
  public BusinessOrderVo setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

  public void unsetOrderStatus() {
    this.orderStatus = null;
  }

  /** Returns true if field orderStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderStatus() {
    return this.orderStatus != null;
  }

  public void setOrderStatusIsSet(boolean value) {
    if (!value) {
      this.orderStatus = null;
    }
  }

  /**
   * 用户编号
   */
  public long getMemberCode() {
    return this.memberCode;
  }

  /**
   * 用户编号
   */
  public BusinessOrderVo setMemberCode(long memberCode) {
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    return this;
  }

  public void unsetMemberCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  /** Returns true if field memberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberCode() {
    return EncodingUtils.testBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  public void setMemberCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEMBERCODE_ISSET_ID, value);
  }

  /**
   * 支付方式 1:现金支付;2:联盟积分支付;3:银行积分支付;4:联盟积分+现金支付;5:银行积分+现金支付;6:赠送积分
   */
  public String getPaymentMethod() {
    return this.paymentMethod;
  }

  /**
   * 支付方式 1:现金支付;2:联盟积分支付;3:银行积分支付;4:联盟积分+现金支付;5:银行积分+现金支付;6:赠送积分
   */
  public BusinessOrderVo setPaymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

  public void unsetPaymentMethod() {
    this.paymentMethod = null;
  }

  /** Returns true if field paymentMethod is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentMethod() {
    return this.paymentMethod != null;
  }

  public void setPaymentMethodIsSet(boolean value) {
    if (!value) {
      this.paymentMethod = null;
    }
  }

  /**
   * 总金额
   */
  public double getTotalPrice() {
    return this.totalPrice;
  }

  /**
   * 总金额
   */
  public BusinessOrderVo setTotalPrice(double totalPrice) {
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    return this;
  }

  public void unsetTotalPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  /** Returns true if field totalPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  public void setTotalPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPRICE_ISSET_ID, value);
  }

  /**
   * 现金
   */
  public double getRealPrice() {
    return this.realPrice;
  }

  /**
   * 现金
   */
  public BusinessOrderVo setRealPrice(double realPrice) {
    this.realPrice = realPrice;
    setRealPriceIsSet(true);
    return this;
  }

  public void unsetRealPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REALPRICE_ISSET_ID);
  }

  /** Returns true if field realPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetRealPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __REALPRICE_ISSET_ID);
  }

  public void setRealPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REALPRICE_ISSET_ID, value);
  }

  /**
   * 联盟积分
   */
  public double getFftPoints() {
    return this.fftPoints;
  }

  /**
   * 联盟积分
   */
  public BusinessOrderVo setFftPoints(double fftPoints) {
    this.fftPoints = fftPoints;
    setFftPointsIsSet(true);
    return this;
  }

  public void unsetFftPoints() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FFTPOINTS_ISSET_ID);
  }

  /** Returns true if field fftPoints is set (has been assigned a value) and false otherwise */
  public boolean isSetFftPoints() {
    return EncodingUtils.testBit(__isset_bitfield, __FFTPOINTS_ISSET_ID);
  }

  public void setFftPointsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FFTPOINTS_ISSET_ID, value);
  }

  /**
   * 银行积分
   */
  public double getBankPoints() {
    return this.bankPoints;
  }

  /**
   * 银行积分
   */
  public BusinessOrderVo setBankPoints(double bankPoints) {
    this.bankPoints = bankPoints;
    setBankPointsIsSet(true);
    return this;
  }

  public void unsetBankPoints() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BANKPOINTS_ISSET_ID);
  }

  /** Returns true if field bankPoints is set (has been assigned a value) and false otherwise */
  public boolean isSetBankPoints() {
    return EncodingUtils.testBit(__isset_bitfield, __BANKPOINTS_ISSET_ID);
  }

  public void setBankPointsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BANKPOINTS_ISSET_ID, value);
  }

  /**
   * 银行积分兑换比例
   */
  public String getPoinRate() {
    return this.poinRate;
  }

  /**
   * 银行积分兑换比例
   */
  public BusinessOrderVo setPoinRate(String poinRate) {
    this.poinRate = poinRate;
    return this;
  }

  public void unsetPoinRate() {
    this.poinRate = null;
  }

  /** Returns true if field poinRate is set (has been assigned a value) and false otherwise */
  public boolean isSetPoinRate() {
    return this.poinRate != null;
  }

  public void setPoinRateIsSet(boolean value) {
    if (!value) {
      this.poinRate = null;
    }
  }

  /**
   * 订单创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 订单创建时间
   */
  public BusinessOrderVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 支付时间
   */
  public long getPaymentTime() {
    return this.paymentTime;
  }

  /**
   * 支付时间
   */
  public BusinessOrderVo setPaymentTime(long paymentTime) {
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    return this;
  }

  public void unsetPaymentTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  /** Returns true if field paymentTime is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentTime() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  public void setPaymentTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID, value);
  }

  /**
   * 所属客户端
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 所属客户端
   */
  public BusinessOrderVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 客户端名称
   */
  public String getClientName() {
    return this.clientName;
  }

  /**
   * 客户端名称
   */
  public BusinessOrderVo setClientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

  public void unsetClientName() {
    this.clientName = null;
  }

  /** Returns true if field clientName is set (has been assigned a value) and false otherwise */
  public boolean isSetClientName() {
    return this.clientName != null;
  }

  public void setClientNameIsSet(boolean value) {
    if (!value) {
      this.clientName = null;
    }
  }

  /**
   * 发货状态 0:未发货;1:已发货;2:已收货;3:未提货;4:已提货
   */
  public String getDeliveryStatus() {
    return this.deliveryStatus;
  }

  /**
   * 发货状态 0:未发货;1:已发货;2:已收货;3:未提货;4:已提货
   */
  public BusinessOrderVo setDeliveryStatus(String deliveryStatus) {
    this.deliveryStatus = deliveryStatus;
    return this;
  }

  public void unsetDeliveryStatus() {
    this.deliveryStatus = null;
  }

  /** Returns true if field deliveryStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryStatus() {
    return this.deliveryStatus != null;
  }

  public void setDeliveryStatusIsSet(boolean value) {
    if (!value) {
      this.deliveryStatus = null;
    }
  }

  /**
   * 退款状态 1:未退款;2:退款中;3:退款完成;4:部分退款
   */
  public String getRefundState() {
    return this.refundState;
  }

  /**
   * 退款状态 1:未退款;2:退款中;3:退款完成;4:部分退款
   */
  public BusinessOrderVo setRefundState(String refundState) {
    this.refundState = refundState;
    return this;
  }

  public void unsetRefundState() {
    this.refundState = null;
  }

  /** Returns true if field refundState is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundState() {
    return this.refundState != null;
  }

  public void setRefundStateIsSet(boolean value) {
    if (!value) {
      this.refundState = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case SUB_ORDER_ID:
      if (value == null) {
        unsetSubOrderId();
      } else {
        setSubOrderId((String)value);
      }
      break;

    case ORDER_STATUS:
      if (value == null) {
        unsetOrderStatus();
      } else {
        setOrderStatus((String)value);
      }
      break;

    case MEMBER_CODE:
      if (value == null) {
        unsetMemberCode();
      } else {
        setMemberCode((Long)value);
      }
      break;

    case PAYMENT_METHOD:
      if (value == null) {
        unsetPaymentMethod();
      } else {
        setPaymentMethod((String)value);
      }
      break;

    case TOTAL_PRICE:
      if (value == null) {
        unsetTotalPrice();
      } else {
        setTotalPrice((Double)value);
      }
      break;

    case REAL_PRICE:
      if (value == null) {
        unsetRealPrice();
      } else {
        setRealPrice((Double)value);
      }
      break;

    case FFT_POINTS:
      if (value == null) {
        unsetFftPoints();
      } else {
        setFftPoints((Double)value);
      }
      break;

    case BANK_POINTS:
      if (value == null) {
        unsetBankPoints();
      } else {
        setBankPoints((Double)value);
      }
      break;

    case POIN_RATE:
      if (value == null) {
        unsetPoinRate();
      } else {
        setPoinRate((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case PAYMENT_TIME:
      if (value == null) {
        unsetPaymentTime();
      } else {
        setPaymentTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case CLIENT_NAME:
      if (value == null) {
        unsetClientName();
      } else {
        setClientName((String)value);
      }
      break;

    case DELIVERY_STATUS:
      if (value == null) {
        unsetDeliveryStatus();
      } else {
        setDeliveryStatus((String)value);
      }
      break;

    case REFUND_STATE:
      if (value == null) {
        unsetRefundState();
      } else {
        setRefundState((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_ID:
      return getOrderId();

    case SUB_ORDER_ID:
      return getSubOrderId();

    case ORDER_STATUS:
      return getOrderStatus();

    case MEMBER_CODE:
      return Long.valueOf(getMemberCode());

    case PAYMENT_METHOD:
      return getPaymentMethod();

    case TOTAL_PRICE:
      return Double.valueOf(getTotalPrice());

    case REAL_PRICE:
      return Double.valueOf(getRealPrice());

    case FFT_POINTS:
      return Double.valueOf(getFftPoints());

    case BANK_POINTS:
      return Double.valueOf(getBankPoints());

    case POIN_RATE:
      return getPoinRate();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case PAYMENT_TIME:
      return Long.valueOf(getPaymentTime());

    case CLIENT_ID:
      return getClientId();

    case CLIENT_NAME:
      return getClientName();

    case DELIVERY_STATUS:
      return getDeliveryStatus();

    case REFUND_STATE:
      return getRefundState();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_ID:
      return isSetOrderId();
    case SUB_ORDER_ID:
      return isSetSubOrderId();
    case ORDER_STATUS:
      return isSetOrderStatus();
    case MEMBER_CODE:
      return isSetMemberCode();
    case PAYMENT_METHOD:
      return isSetPaymentMethod();
    case TOTAL_PRICE:
      return isSetTotalPrice();
    case REAL_PRICE:
      return isSetRealPrice();
    case FFT_POINTS:
      return isSetFftPoints();
    case BANK_POINTS:
      return isSetBankPoints();
    case POIN_RATE:
      return isSetPoinRate();
    case CREATE_TIME:
      return isSetCreateTime();
    case PAYMENT_TIME:
      return isSetPaymentTime();
    case CLIENT_ID:
      return isSetClientId();
    case CLIENT_NAME:
      return isSetClientName();
    case DELIVERY_STATUS:
      return isSetDeliveryStatus();
    case REFUND_STATE:
      return isSetRefundState();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BusinessOrderVo)
      return this.equals((BusinessOrderVo)that);
    return false;
  }

  public boolean equals(BusinessOrderVo that) {
    if (that == null)
      return false;

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_subOrderId = true && this.isSetSubOrderId();
    boolean that_present_subOrderId = true && that.isSetSubOrderId();
    if (this_present_subOrderId || that_present_subOrderId) {
      if (!(this_present_subOrderId && that_present_subOrderId))
        return false;
      if (!this.subOrderId.equals(that.subOrderId))
        return false;
    }

    boolean this_present_orderStatus = true && this.isSetOrderStatus();
    boolean that_present_orderStatus = true && that.isSetOrderStatus();
    if (this_present_orderStatus || that_present_orderStatus) {
      if (!(this_present_orderStatus && that_present_orderStatus))
        return false;
      if (!this.orderStatus.equals(that.orderStatus))
        return false;
    }

    boolean this_present_memberCode = true;
    boolean that_present_memberCode = true;
    if (this_present_memberCode || that_present_memberCode) {
      if (!(this_present_memberCode && that_present_memberCode))
        return false;
      if (this.memberCode != that.memberCode)
        return false;
    }

    boolean this_present_paymentMethod = true && this.isSetPaymentMethod();
    boolean that_present_paymentMethod = true && that.isSetPaymentMethod();
    if (this_present_paymentMethod || that_present_paymentMethod) {
      if (!(this_present_paymentMethod && that_present_paymentMethod))
        return false;
      if (!this.paymentMethod.equals(that.paymentMethod))
        return false;
    }

    boolean this_present_totalPrice = true;
    boolean that_present_totalPrice = true;
    if (this_present_totalPrice || that_present_totalPrice) {
      if (!(this_present_totalPrice && that_present_totalPrice))
        return false;
      if (this.totalPrice != that.totalPrice)
        return false;
    }

    boolean this_present_realPrice = true;
    boolean that_present_realPrice = true;
    if (this_present_realPrice || that_present_realPrice) {
      if (!(this_present_realPrice && that_present_realPrice))
        return false;
      if (this.realPrice != that.realPrice)
        return false;
    }

    boolean this_present_fftPoints = true;
    boolean that_present_fftPoints = true;
    if (this_present_fftPoints || that_present_fftPoints) {
      if (!(this_present_fftPoints && that_present_fftPoints))
        return false;
      if (this.fftPoints != that.fftPoints)
        return false;
    }

    boolean this_present_bankPoints = true;
    boolean that_present_bankPoints = true;
    if (this_present_bankPoints || that_present_bankPoints) {
      if (!(this_present_bankPoints && that_present_bankPoints))
        return false;
      if (this.bankPoints != that.bankPoints)
        return false;
    }

    boolean this_present_poinRate = true && this.isSetPoinRate();
    boolean that_present_poinRate = true && that.isSetPoinRate();
    if (this_present_poinRate || that_present_poinRate) {
      if (!(this_present_poinRate && that_present_poinRate))
        return false;
      if (!this.poinRate.equals(that.poinRate))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_paymentTime = true;
    boolean that_present_paymentTime = true;
    if (this_present_paymentTime || that_present_paymentTime) {
      if (!(this_present_paymentTime && that_present_paymentTime))
        return false;
      if (this.paymentTime != that.paymentTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_clientName = true && this.isSetClientName();
    boolean that_present_clientName = true && that.isSetClientName();
    if (this_present_clientName || that_present_clientName) {
      if (!(this_present_clientName && that_present_clientName))
        return false;
      if (!this.clientName.equals(that.clientName))
        return false;
    }

    boolean this_present_deliveryStatus = true && this.isSetDeliveryStatus();
    boolean that_present_deliveryStatus = true && that.isSetDeliveryStatus();
    if (this_present_deliveryStatus || that_present_deliveryStatus) {
      if (!(this_present_deliveryStatus && that_present_deliveryStatus))
        return false;
      if (!this.deliveryStatus.equals(that.deliveryStatus))
        return false;
    }

    boolean this_present_refundState = true && this.isSetRefundState();
    boolean that_present_refundState = true && that.isSetRefundState();
    if (this_present_refundState || that_present_refundState) {
      if (!(this_present_refundState && that_present_refundState))
        return false;
      if (!this.refundState.equals(that.refundState))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_subOrderId = true && (isSetSubOrderId());
    list.add(present_subOrderId);
    if (present_subOrderId)
      list.add(subOrderId);

    boolean present_orderStatus = true && (isSetOrderStatus());
    list.add(present_orderStatus);
    if (present_orderStatus)
      list.add(orderStatus);

    boolean present_memberCode = true;
    list.add(present_memberCode);
    if (present_memberCode)
      list.add(memberCode);

    boolean present_paymentMethod = true && (isSetPaymentMethod());
    list.add(present_paymentMethod);
    if (present_paymentMethod)
      list.add(paymentMethod);

    boolean present_totalPrice = true;
    list.add(present_totalPrice);
    if (present_totalPrice)
      list.add(totalPrice);

    boolean present_realPrice = true;
    list.add(present_realPrice);
    if (present_realPrice)
      list.add(realPrice);

    boolean present_fftPoints = true;
    list.add(present_fftPoints);
    if (present_fftPoints)
      list.add(fftPoints);

    boolean present_bankPoints = true;
    list.add(present_bankPoints);
    if (present_bankPoints)
      list.add(bankPoints);

    boolean present_poinRate = true && (isSetPoinRate());
    list.add(present_poinRate);
    if (present_poinRate)
      list.add(poinRate);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_paymentTime = true;
    list.add(present_paymentTime);
    if (present_paymentTime)
      list.add(paymentTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_clientName = true && (isSetClientName());
    list.add(present_clientName);
    if (present_clientName)
      list.add(clientName);

    boolean present_deliveryStatus = true && (isSetDeliveryStatus());
    list.add(present_deliveryStatus);
    if (present_deliveryStatus)
      list.add(deliveryStatus);

    boolean present_refundState = true && (isSetRefundState());
    list.add(present_refundState);
    if (present_refundState)
      list.add(refundState);

    return list.hashCode();
  }

  @Override
  public int compareTo(BusinessOrderVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubOrderId()).compareTo(other.isSetSubOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subOrderId, other.subOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderStatus()).compareTo(other.isSetOrderStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderStatus, other.orderStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberCode()).compareTo(other.isSetMemberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberCode, other.memberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentMethod()).compareTo(other.isSetPaymentMethod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentMethod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentMethod, other.paymentMethod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPrice()).compareTo(other.isSetTotalPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPrice, other.totalPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRealPrice()).compareTo(other.isSetRealPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRealPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.realPrice, other.realPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFftPoints()).compareTo(other.isSetFftPoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFftPoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fftPoints, other.fftPoints);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankPoints()).compareTo(other.isSetBankPoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankPoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankPoints, other.bankPoints);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoinRate()).compareTo(other.isSetPoinRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoinRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poinRate, other.poinRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentTime()).compareTo(other.isSetPaymentTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentTime, other.paymentTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientName()).compareTo(other.isSetClientName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientName, other.clientName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryStatus()).compareTo(other.isSetDeliveryStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryStatus, other.deliveryStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundState()).compareTo(other.isSetRefundState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundState, other.refundState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BusinessOrderVo(");
    boolean first = true;

    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("subOrderId:");
    if (this.subOrderId == null) {
      sb.append("null");
    } else {
      sb.append(this.subOrderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderStatus:");
    if (this.orderStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.orderStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberCode:");
    sb.append(this.memberCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentMethod:");
    if (this.paymentMethod == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentMethod);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPrice:");
    sb.append(this.totalPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("realPrice:");
    sb.append(this.realPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fftPoints:");
    sb.append(this.fftPoints);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankPoints:");
    sb.append(this.bankPoints);
    first = false;
    if (!first) sb.append(", ");
    sb.append("poinRate:");
    if (this.poinRate == null) {
      sb.append("null");
    } else {
      sb.append(this.poinRate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentTime:");
    sb.append(this.paymentTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientName:");
    if (this.clientName == null) {
      sb.append("null");
    } else {
      sb.append(this.clientName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryStatus:");
    if (this.deliveryStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundState:");
    if (this.refundState == null) {
      sb.append("null");
    } else {
      sb.append(this.refundState);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BusinessOrderVoStandardSchemeFactory implements SchemeFactory {
    public BusinessOrderVoStandardScheme getScheme() {
      return new BusinessOrderVoStandardScheme();
    }
  }

  private static class BusinessOrderVoStandardScheme extends StandardScheme<BusinessOrderVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BusinessOrderVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SUB_ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subOrderId = iprot.readString();
              struct.setSubOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORDER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderStatus = iprot.readString();
              struct.setOrderStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MEMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.memberCode = iprot.readI64();
              struct.setMemberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PAYMENT_METHOD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paymentMethod = iprot.readString();
              struct.setPaymentMethodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TOTAL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalPrice = iprot.readDouble();
              struct.setTotalPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // REAL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.realPrice = iprot.readDouble();
              struct.setRealPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // FFT_POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.fftPoints = iprot.readDouble();
              struct.setFftPointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // BANK_POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.bankPoints = iprot.readDouble();
              struct.setBankPointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // POIN_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.poinRate = iprot.readString();
              struct.setPoinRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PAYMENT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.paymentTime = iprot.readI64();
              struct.setPaymentTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CLIENT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientName = iprot.readString();
              struct.setClientNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DELIVERY_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryStatus = iprot.readString();
              struct.setDeliveryStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // REFUND_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundState = iprot.readString();
              struct.setRefundStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BusinessOrderVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      if (struct.subOrderId != null) {
        oprot.writeFieldBegin(SUB_ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.subOrderId);
        oprot.writeFieldEnd();
      }
      if (struct.orderStatus != null) {
        oprot.writeFieldBegin(ORDER_STATUS_FIELD_DESC);
        oprot.writeString(struct.orderStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MEMBER_CODE_FIELD_DESC);
      oprot.writeI64(struct.memberCode);
      oprot.writeFieldEnd();
      if (struct.paymentMethod != null) {
        oprot.writeFieldBegin(PAYMENT_METHOD_FIELD_DESC);
        oprot.writeString(struct.paymentMethod);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.totalPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REAL_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.realPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FFT_POINTS_FIELD_DESC);
      oprot.writeDouble(struct.fftPoints);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BANK_POINTS_FIELD_DESC);
      oprot.writeDouble(struct.bankPoints);
      oprot.writeFieldEnd();
      if (struct.poinRate != null) {
        oprot.writeFieldBegin(POIN_RATE_FIELD_DESC);
        oprot.writeString(struct.poinRate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAYMENT_TIME_FIELD_DESC);
      oprot.writeI64(struct.paymentTime);
      oprot.writeFieldEnd();
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.clientName != null) {
        oprot.writeFieldBegin(CLIENT_NAME_FIELD_DESC);
        oprot.writeString(struct.clientName);
        oprot.writeFieldEnd();
      }
      if (struct.deliveryStatus != null) {
        oprot.writeFieldBegin(DELIVERY_STATUS_FIELD_DESC);
        oprot.writeString(struct.deliveryStatus);
        oprot.writeFieldEnd();
      }
      if (struct.refundState != null) {
        oprot.writeFieldBegin(REFUND_STATE_FIELD_DESC);
        oprot.writeString(struct.refundState);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BusinessOrderVoTupleSchemeFactory implements SchemeFactory {
    public BusinessOrderVoTupleScheme getScheme() {
      return new BusinessOrderVoTupleScheme();
    }
  }

  private static class BusinessOrderVoTupleScheme extends TupleScheme<BusinessOrderVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BusinessOrderVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrderId()) {
        optionals.set(0);
      }
      if (struct.isSetSubOrderId()) {
        optionals.set(1);
      }
      if (struct.isSetOrderStatus()) {
        optionals.set(2);
      }
      if (struct.isSetMemberCode()) {
        optionals.set(3);
      }
      if (struct.isSetPaymentMethod()) {
        optionals.set(4);
      }
      if (struct.isSetTotalPrice()) {
        optionals.set(5);
      }
      if (struct.isSetRealPrice()) {
        optionals.set(6);
      }
      if (struct.isSetFftPoints()) {
        optionals.set(7);
      }
      if (struct.isSetBankPoints()) {
        optionals.set(8);
      }
      if (struct.isSetPoinRate()) {
        optionals.set(9);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(10);
      }
      if (struct.isSetPaymentTime()) {
        optionals.set(11);
      }
      if (struct.isSetClientId()) {
        optionals.set(12);
      }
      if (struct.isSetClientName()) {
        optionals.set(13);
      }
      if (struct.isSetDeliveryStatus()) {
        optionals.set(14);
      }
      if (struct.isSetRefundState()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetSubOrderId()) {
        oprot.writeString(struct.subOrderId);
      }
      if (struct.isSetOrderStatus()) {
        oprot.writeString(struct.orderStatus);
      }
      if (struct.isSetMemberCode()) {
        oprot.writeI64(struct.memberCode);
      }
      if (struct.isSetPaymentMethod()) {
        oprot.writeString(struct.paymentMethod);
      }
      if (struct.isSetTotalPrice()) {
        oprot.writeDouble(struct.totalPrice);
      }
      if (struct.isSetRealPrice()) {
        oprot.writeDouble(struct.realPrice);
      }
      if (struct.isSetFftPoints()) {
        oprot.writeDouble(struct.fftPoints);
      }
      if (struct.isSetBankPoints()) {
        oprot.writeDouble(struct.bankPoints);
      }
      if (struct.isSetPoinRate()) {
        oprot.writeString(struct.poinRate);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetPaymentTime()) {
        oprot.writeI64(struct.paymentTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetClientName()) {
        oprot.writeString(struct.clientName);
      }
      if (struct.isSetDeliveryStatus()) {
        oprot.writeString(struct.deliveryStatus);
      }
      if (struct.isSetRefundState()) {
        oprot.writeString(struct.refundState);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BusinessOrderVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.subOrderId = iprot.readString();
        struct.setSubOrderIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.orderStatus = iprot.readString();
        struct.setOrderStatusIsSet(true);
      }
      if (incoming.get(3)) {
        struct.memberCode = iprot.readI64();
        struct.setMemberCodeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.paymentMethod = iprot.readString();
        struct.setPaymentMethodIsSet(true);
      }
      if (incoming.get(5)) {
        struct.totalPrice = iprot.readDouble();
        struct.setTotalPriceIsSet(true);
      }
      if (incoming.get(6)) {
        struct.realPrice = iprot.readDouble();
        struct.setRealPriceIsSet(true);
      }
      if (incoming.get(7)) {
        struct.fftPoints = iprot.readDouble();
        struct.setFftPointsIsSet(true);
      }
      if (incoming.get(8)) {
        struct.bankPoints = iprot.readDouble();
        struct.setBankPointsIsSet(true);
      }
      if (incoming.get(9)) {
        struct.poinRate = iprot.readString();
        struct.setPoinRateIsSet(true);
      }
      if (incoming.get(10)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.paymentTime = iprot.readI64();
        struct.setPaymentTimeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(13)) {
        struct.clientName = iprot.readString();
        struct.setClientNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.deliveryStatus = iprot.readString();
        struct.setDeliveryStatusIsSet(true);
      }
      if (incoming.get(15)) {
        struct.refundState = iprot.readString();
        struct.setRefundStateIsSet(true);
      }
    }
  }

}

