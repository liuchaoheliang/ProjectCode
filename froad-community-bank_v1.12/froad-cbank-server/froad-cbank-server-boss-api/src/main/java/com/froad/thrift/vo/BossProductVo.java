/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * Boss商品管理平台新增商品基础信息Vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-3")
public class BossProductVo implements org.apache.thrift.TBase<BossProductVo, BossProductVo._Fields>, java.io.Serializable, Cloneable, Comparable<BossProductVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BossProductVo");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CATEGORY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryId", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField FULL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("fullName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField BRIEF_INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("briefIntroduction", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField VIP_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("vipPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField MAX_VIP_FIELD_DESC = new org.apache.thrift.protocol.TField("maxVip", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField MARKET_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("marketPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)12);
  private static final org.apache.thrift.protocol.TField DELIVERY_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)13);
  private static final org.apache.thrift.protocol.TField STORE_FIELD_DESC = new org.apache.thrift.protocol.TField("store", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField MAX_FIELD_DESC = new org.apache.thrift.protocol.TField("max", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField WEIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("weight", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField WEIGHT_UNIT_FIELD_DESC = new org.apache.thrift.protocol.TField("weightUnit", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)18);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)19);
  private static final org.apache.thrift.protocol.TField DELIVERY_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryStartTime", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField DELIVERY_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryEndTime", org.apache.thrift.protocol.TType.I64, (short)21);
  private static final org.apache.thrift.protocol.TField DELIVERY_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryOption", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField BUY_KNOW_FIELD_DESC = new org.apache.thrift.protocol.TField("buyKnow", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("introduction", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField PLAT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("platType", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField AUDIT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStatus", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField MARKETABLE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("marketableStatus", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField EXPIRE_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("expireStartTime", org.apache.thrift.protocol.TType.I64, (short)28);
  private static final org.apache.thrift.protocol.TField EXPIRE_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("expireEndTime", org.apache.thrift.protocol.TType.I64, (short)29);
  private static final org.apache.thrift.protocol.TField VIP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("vipId", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField IS_REMOVE_VIP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("isRemoveVipId", org.apache.thrift.protocol.TType.BOOL, (short)31);
  private static final org.apache.thrift.protocol.TField CATEGORY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryName", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField CLIENT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("clientName", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField VIP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("vipName", org.apache.thrift.protocol.TType.STRING, (short)34);
  private static final org.apache.thrift.protocol.TField BANK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("bankName", org.apache.thrift.protocol.TType.STRING, (short)35);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BossProductVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BossProductVoTupleSchemeFactory());
  }

  /**
   * 商品id
   */
  public String productId; // required
  /**
   * 商品类型 "1":团购,"2":预售,"3":名优特惠,"4":在线积分兑换,"5":网点礼品;
   */
  public String type; // required
  /**
   * 商品分类id
   */
  public long categoryId; // required
  /**
   * 客户端id 即所属行id
   */
  public String clientId; // required
  /**
   * 所属行的以及机构编号
   */
  public String orgCode; // required
  /**
   * 商品简称
   */
  public String name; // required
  /**
   * 商品全称
   */
  public String fullName; // required
  /**
   * 副标题
   */
  public String briefIntroduction; // required
  /**
   * VIP价
   */
  public double vipPrice; // optional
  /**
   * vip限购数量
   */
  public int maxVip; // optional
  /**
   * 销售价
   */
  public double price; // required
  /**
   * 市场价
   */
  public double marketPrice; // required
  /**
   * 运费
   */
  public double deliveryMoney; // required
  /**
   * 库存数量
   */
  public int store; // required
  /**
   * 限购数量
   */
  public int max; // optional
  /**
   * 商品重量
   */
  public String weight; // required
  /**
   * 重量单位
   */
  public String weightUnit; // required
  /**
   * 销售开始
   */
  public long startTime; // required
  /**
   * 销售结束
   */
  public long endTime; // required
  /**
   * 提货-开始
   */
  public long deliveryStartTime; // required
  /**
   * 提货-结束
   */
  public long deliveryEndTime; // required
  /**
   * 提货方式 "0":送货上门,"1":网点自提,"2":配送或自提;
   */
  public String deliveryOption; // required
  /**
   * 商品购买须知
   */
  public String buyKnow; // required
  /**
   * 介绍即商品详情
   */
  public String introduction; // required
  /**
   * 录入渠道 "1":boss,"2":银行端,"3":商户pc,"4":商户h5,"5":个人pc,"6":个人h5;
   */
  public String platType; // required
  /**
   * 审核状态
   */
  public String auditStatus; // required
  /**
   * 上下架状态
   */
  public String marketableStatus; // required
  /**
   * 团购或预售券有效起始日
   */
  public long expireStartTime; // required
  /**
   * 团购或预售券有效结束日
   */
  public long expireEndTime; // required
  /**
   * VIP活动id 新增商品时候绑定vip价格时候需要传值
   */
  public String vipId; // required
  /**
   * 修改商品时候是否删除VIP规则绑定关系
   */
  public boolean isRemoveVipId; // required
  /**
   * 商品分类名称
   */
  public String categoryName; // required
  /**
   * 客户端名称即所属行
   */
  public String clientName; // required
  /**
   * vip名称
   */
  public String vipName; // required
  /**
   * vip名称
   */
  public String bankName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商品id
     */
    PRODUCT_ID((short)1, "productId"),
    /**
     * 商品类型 "1":团购,"2":预售,"3":名优特惠,"4":在线积分兑换,"5":网点礼品;
     */
    TYPE((short)2, "type"),
    /**
     * 商品分类id
     */
    CATEGORY_ID((short)3, "categoryId"),
    /**
     * 客户端id 即所属行id
     */
    CLIENT_ID((short)4, "clientId"),
    /**
     * 所属行的以及机构编号
     */
    ORG_CODE((short)5, "orgCode"),
    /**
     * 商品简称
     */
    NAME((short)6, "name"),
    /**
     * 商品全称
     */
    FULL_NAME((short)7, "fullName"),
    /**
     * 副标题
     */
    BRIEF_INTRODUCTION((short)8, "briefIntroduction"),
    /**
     * VIP价
     */
    VIP_PRICE((short)9, "vipPrice"),
    /**
     * vip限购数量
     */
    MAX_VIP((short)10, "maxVip"),
    /**
     * 销售价
     */
    PRICE((short)11, "price"),
    /**
     * 市场价
     */
    MARKET_PRICE((short)12, "marketPrice"),
    /**
     * 运费
     */
    DELIVERY_MONEY((short)13, "deliveryMoney"),
    /**
     * 库存数量
     */
    STORE((short)14, "store"),
    /**
     * 限购数量
     */
    MAX((short)15, "max"),
    /**
     * 商品重量
     */
    WEIGHT((short)16, "weight"),
    /**
     * 重量单位
     */
    WEIGHT_UNIT((short)17, "weightUnit"),
    /**
     * 销售开始
     */
    START_TIME((short)18, "startTime"),
    /**
     * 销售结束
     */
    END_TIME((short)19, "endTime"),
    /**
     * 提货-开始
     */
    DELIVERY_START_TIME((short)20, "deliveryStartTime"),
    /**
     * 提货-结束
     */
    DELIVERY_END_TIME((short)21, "deliveryEndTime"),
    /**
     * 提货方式 "0":送货上门,"1":网点自提,"2":配送或自提;
     */
    DELIVERY_OPTION((short)22, "deliveryOption"),
    /**
     * 商品购买须知
     */
    BUY_KNOW((short)23, "buyKnow"),
    /**
     * 介绍即商品详情
     */
    INTRODUCTION((short)24, "introduction"),
    /**
     * 录入渠道 "1":boss,"2":银行端,"3":商户pc,"4":商户h5,"5":个人pc,"6":个人h5;
     */
    PLAT_TYPE((short)25, "platType"),
    /**
     * 审核状态
     */
    AUDIT_STATUS((short)26, "auditStatus"),
    /**
     * 上下架状态
     */
    MARKETABLE_STATUS((short)27, "marketableStatus"),
    /**
     * 团购或预售券有效起始日
     */
    EXPIRE_START_TIME((short)28, "expireStartTime"),
    /**
     * 团购或预售券有效结束日
     */
    EXPIRE_END_TIME((short)29, "expireEndTime"),
    /**
     * VIP活动id 新增商品时候绑定vip价格时候需要传值
     */
    VIP_ID((short)30, "vipId"),
    /**
     * 修改商品时候是否删除VIP规则绑定关系
     */
    IS_REMOVE_VIP_ID((short)31, "isRemoveVipId"),
    /**
     * 商品分类名称
     */
    CATEGORY_NAME((short)32, "categoryName"),
    /**
     * 客户端名称即所属行
     */
    CLIENT_NAME((short)33, "clientName"),
    /**
     * vip名称
     */
    VIP_NAME((short)34, "vipName"),
    /**
     * vip名称
     */
    BANK_NAME((short)35, "bankName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // TYPE
          return TYPE;
        case 3: // CATEGORY_ID
          return CATEGORY_ID;
        case 4: // CLIENT_ID
          return CLIENT_ID;
        case 5: // ORG_CODE
          return ORG_CODE;
        case 6: // NAME
          return NAME;
        case 7: // FULL_NAME
          return FULL_NAME;
        case 8: // BRIEF_INTRODUCTION
          return BRIEF_INTRODUCTION;
        case 9: // VIP_PRICE
          return VIP_PRICE;
        case 10: // MAX_VIP
          return MAX_VIP;
        case 11: // PRICE
          return PRICE;
        case 12: // MARKET_PRICE
          return MARKET_PRICE;
        case 13: // DELIVERY_MONEY
          return DELIVERY_MONEY;
        case 14: // STORE
          return STORE;
        case 15: // MAX
          return MAX;
        case 16: // WEIGHT
          return WEIGHT;
        case 17: // WEIGHT_UNIT
          return WEIGHT_UNIT;
        case 18: // START_TIME
          return START_TIME;
        case 19: // END_TIME
          return END_TIME;
        case 20: // DELIVERY_START_TIME
          return DELIVERY_START_TIME;
        case 21: // DELIVERY_END_TIME
          return DELIVERY_END_TIME;
        case 22: // DELIVERY_OPTION
          return DELIVERY_OPTION;
        case 23: // BUY_KNOW
          return BUY_KNOW;
        case 24: // INTRODUCTION
          return INTRODUCTION;
        case 25: // PLAT_TYPE
          return PLAT_TYPE;
        case 26: // AUDIT_STATUS
          return AUDIT_STATUS;
        case 27: // MARKETABLE_STATUS
          return MARKETABLE_STATUS;
        case 28: // EXPIRE_START_TIME
          return EXPIRE_START_TIME;
        case 29: // EXPIRE_END_TIME
          return EXPIRE_END_TIME;
        case 30: // VIP_ID
          return VIP_ID;
        case 31: // IS_REMOVE_VIP_ID
          return IS_REMOVE_VIP_ID;
        case 32: // CATEGORY_NAME
          return CATEGORY_NAME;
        case 33: // CLIENT_NAME
          return CLIENT_NAME;
        case 34: // VIP_NAME
          return VIP_NAME;
        case 35: // BANK_NAME
          return BANK_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CATEGORYID_ISSET_ID = 0;
  private static final int __VIPPRICE_ISSET_ID = 1;
  private static final int __MAXVIP_ISSET_ID = 2;
  private static final int __PRICE_ISSET_ID = 3;
  private static final int __MARKETPRICE_ISSET_ID = 4;
  private static final int __DELIVERYMONEY_ISSET_ID = 5;
  private static final int __STORE_ISSET_ID = 6;
  private static final int __MAX_ISSET_ID = 7;
  private static final int __STARTTIME_ISSET_ID = 8;
  private static final int __ENDTIME_ISSET_ID = 9;
  private static final int __DELIVERYSTARTTIME_ISSET_ID = 10;
  private static final int __DELIVERYENDTIME_ISSET_ID = 11;
  private static final int __EXPIRESTARTTIME_ISSET_ID = 12;
  private static final int __EXPIREENDTIME_ISSET_ID = 13;
  private static final int __ISREMOVEVIPID_ISSET_ID = 14;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.VIP_PRICE,_Fields.MAX_VIP,_Fields.MAX};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_ID, new org.apache.thrift.meta_data.FieldMetaData("categoryId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FULL_NAME, new org.apache.thrift.meta_data.FieldMetaData("fullName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BRIEF_INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("briefIntroduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VIP_PRICE, new org.apache.thrift.meta_data.FieldMetaData("vipPrice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MAX_VIP, new org.apache.thrift.meta_data.FieldMetaData("maxVip", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MARKET_PRICE, new org.apache.thrift.meta_data.FieldMetaData("marketPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DELIVERY_MONEY, new org.apache.thrift.meta_data.FieldMetaData("deliveryMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.STORE, new org.apache.thrift.meta_data.FieldMetaData("store", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX, new org.apache.thrift.meta_data.FieldMetaData("max", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WEIGHT, new org.apache.thrift.meta_data.FieldMetaData("weight", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEIGHT_UNIT, new org.apache.thrift.meta_data.FieldMetaData("weightUnit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DELIVERY_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryStartTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DELIVERY_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DELIVERY_OPTION, new org.apache.thrift.meta_data.FieldMetaData("deliveryOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUY_KNOW, new org.apache.thrift.meta_data.FieldMetaData("buyKnow", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("introduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLAT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("platType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("auditStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MARKETABLE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("marketableStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPIRE_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("expireStartTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.EXPIRE_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("expireEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VIP_ID, new org.apache.thrift.meta_data.FieldMetaData("vipId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_REMOVE_VIP_ID, new org.apache.thrift.meta_data.FieldMetaData("isRemoveVipId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CATEGORY_NAME, new org.apache.thrift.meta_data.FieldMetaData("categoryName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_NAME, new org.apache.thrift.meta_data.FieldMetaData("clientName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VIP_NAME, new org.apache.thrift.meta_data.FieldMetaData("vipName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_NAME, new org.apache.thrift.meta_data.FieldMetaData("bankName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BossProductVo.class, metaDataMap);
  }

  public BossProductVo() {
  }

  public BossProductVo(
    String productId,
    String type,
    long categoryId,
    String clientId,
    String orgCode,
    String name,
    String fullName,
    String briefIntroduction,
    double price,
    double marketPrice,
    double deliveryMoney,
    int store,
    String weight,
    String weightUnit,
    long startTime,
    long endTime,
    long deliveryStartTime,
    long deliveryEndTime,
    String deliveryOption,
    String buyKnow,
    String introduction,
    String platType,
    String auditStatus,
    String marketableStatus,
    long expireStartTime,
    long expireEndTime,
    String vipId,
    boolean isRemoveVipId,
    String categoryName,
    String clientName,
    String vipName,
    String bankName)
  {
    this();
    this.productId = productId;
    this.type = type;
    this.categoryId = categoryId;
    setCategoryIdIsSet(true);
    this.clientId = clientId;
    this.orgCode = orgCode;
    this.name = name;
    this.fullName = fullName;
    this.briefIntroduction = briefIntroduction;
    this.price = price;
    setPriceIsSet(true);
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    this.deliveryMoney = deliveryMoney;
    setDeliveryMoneyIsSet(true);
    this.store = store;
    setStoreIsSet(true);
    this.weight = weight;
    this.weightUnit = weightUnit;
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
    this.deliveryStartTime = deliveryStartTime;
    setDeliveryStartTimeIsSet(true);
    this.deliveryEndTime = deliveryEndTime;
    setDeliveryEndTimeIsSet(true);
    this.deliveryOption = deliveryOption;
    this.buyKnow = buyKnow;
    this.introduction = introduction;
    this.platType = platType;
    this.auditStatus = auditStatus;
    this.marketableStatus = marketableStatus;
    this.expireStartTime = expireStartTime;
    setExpireStartTimeIsSet(true);
    this.expireEndTime = expireEndTime;
    setExpireEndTimeIsSet(true);
    this.vipId = vipId;
    this.isRemoveVipId = isRemoveVipId;
    setIsRemoveVipIdIsSet(true);
    this.categoryName = categoryName;
    this.clientName = clientName;
    this.vipName = vipName;
    this.bankName = bankName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BossProductVo(BossProductVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    this.categoryId = other.categoryId;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetFullName()) {
      this.fullName = other.fullName;
    }
    if (other.isSetBriefIntroduction()) {
      this.briefIntroduction = other.briefIntroduction;
    }
    this.vipPrice = other.vipPrice;
    this.maxVip = other.maxVip;
    this.price = other.price;
    this.marketPrice = other.marketPrice;
    this.deliveryMoney = other.deliveryMoney;
    this.store = other.store;
    this.max = other.max;
    if (other.isSetWeight()) {
      this.weight = other.weight;
    }
    if (other.isSetWeightUnit()) {
      this.weightUnit = other.weightUnit;
    }
    this.startTime = other.startTime;
    this.endTime = other.endTime;
    this.deliveryStartTime = other.deliveryStartTime;
    this.deliveryEndTime = other.deliveryEndTime;
    if (other.isSetDeliveryOption()) {
      this.deliveryOption = other.deliveryOption;
    }
    if (other.isSetBuyKnow()) {
      this.buyKnow = other.buyKnow;
    }
    if (other.isSetIntroduction()) {
      this.introduction = other.introduction;
    }
    if (other.isSetPlatType()) {
      this.platType = other.platType;
    }
    if (other.isSetAuditStatus()) {
      this.auditStatus = other.auditStatus;
    }
    if (other.isSetMarketableStatus()) {
      this.marketableStatus = other.marketableStatus;
    }
    this.expireStartTime = other.expireStartTime;
    this.expireEndTime = other.expireEndTime;
    if (other.isSetVipId()) {
      this.vipId = other.vipId;
    }
    this.isRemoveVipId = other.isRemoveVipId;
    if (other.isSetCategoryName()) {
      this.categoryName = other.categoryName;
    }
    if (other.isSetClientName()) {
      this.clientName = other.clientName;
    }
    if (other.isSetVipName()) {
      this.vipName = other.vipName;
    }
    if (other.isSetBankName()) {
      this.bankName = other.bankName;
    }
  }

  public BossProductVo deepCopy() {
    return new BossProductVo(this);
  }

  @Override
  public void clear() {
    this.productId = null;
    this.type = null;
    setCategoryIdIsSet(false);
    this.categoryId = 0;
    this.clientId = null;
    this.orgCode = null;
    this.name = null;
    this.fullName = null;
    this.briefIntroduction = null;
    setVipPriceIsSet(false);
    this.vipPrice = 0.0;
    setMaxVipIsSet(false);
    this.maxVip = 0;
    setPriceIsSet(false);
    this.price = 0.0;
    setMarketPriceIsSet(false);
    this.marketPrice = 0.0;
    setDeliveryMoneyIsSet(false);
    this.deliveryMoney = 0.0;
    setStoreIsSet(false);
    this.store = 0;
    setMaxIsSet(false);
    this.max = 0;
    this.weight = null;
    this.weightUnit = null;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    setDeliveryStartTimeIsSet(false);
    this.deliveryStartTime = 0;
    setDeliveryEndTimeIsSet(false);
    this.deliveryEndTime = 0;
    this.deliveryOption = null;
    this.buyKnow = null;
    this.introduction = null;
    this.platType = null;
    this.auditStatus = null;
    this.marketableStatus = null;
    setExpireStartTimeIsSet(false);
    this.expireStartTime = 0;
    setExpireEndTimeIsSet(false);
    this.expireEndTime = 0;
    this.vipId = null;
    setIsRemoveVipIdIsSet(false);
    this.isRemoveVipId = false;
    this.categoryName = null;
    this.clientName = null;
    this.vipName = null;
    this.bankName = null;
  }

  /**
   * 商品id
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品id
   */
  public BossProductVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 商品类型 "1":团购,"2":预售,"3":名优特惠,"4":在线积分兑换,"5":网点礼品;
   */
  public String getType() {
    return this.type;
  }

  /**
   * 商品类型 "1":团购,"2":预售,"3":名优特惠,"4":在线积分兑换,"5":网点礼品;
   */
  public BossProductVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 商品分类id
   */
  public long getCategoryId() {
    return this.categoryId;
  }

  /**
   * 商品分类id
   */
  public BossProductVo setCategoryId(long categoryId) {
    this.categoryId = categoryId;
    setCategoryIdIsSet(true);
    return this;
  }

  public void unsetCategoryId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CATEGORYID_ISSET_ID);
  }

  /** Returns true if field categoryId is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryId() {
    return EncodingUtils.testBit(__isset_bitfield, __CATEGORYID_ISSET_ID);
  }

  public void setCategoryIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CATEGORYID_ISSET_ID, value);
  }

  /**
   * 客户端id 即所属行id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id 即所属行id
   */
  public BossProductVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 所属行的以及机构编号
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 所属行的以及机构编号
   */
  public BossProductVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 商品简称
   */
  public String getName() {
    return this.name;
  }

  /**
   * 商品简称
   */
  public BossProductVo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  /**
   * 商品全称
   */
  public String getFullName() {
    return this.fullName;
  }

  /**
   * 商品全称
   */
  public BossProductVo setFullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  public void unsetFullName() {
    this.fullName = null;
  }

  /** Returns true if field fullName is set (has been assigned a value) and false otherwise */
  public boolean isSetFullName() {
    return this.fullName != null;
  }

  public void setFullNameIsSet(boolean value) {
    if (!value) {
      this.fullName = null;
    }
  }

  /**
   * 副标题
   */
  public String getBriefIntroduction() {
    return this.briefIntroduction;
  }

  /**
   * 副标题
   */
  public BossProductVo setBriefIntroduction(String briefIntroduction) {
    this.briefIntroduction = briefIntroduction;
    return this;
  }

  public void unsetBriefIntroduction() {
    this.briefIntroduction = null;
  }

  /** Returns true if field briefIntroduction is set (has been assigned a value) and false otherwise */
  public boolean isSetBriefIntroduction() {
    return this.briefIntroduction != null;
  }

  public void setBriefIntroductionIsSet(boolean value) {
    if (!value) {
      this.briefIntroduction = null;
    }
  }

  /**
   * VIP价
   */
  public double getVipPrice() {
    return this.vipPrice;
  }

  /**
   * VIP价
   */
  public BossProductVo setVipPrice(double vipPrice) {
    this.vipPrice = vipPrice;
    setVipPriceIsSet(true);
    return this;
  }

  public void unsetVipPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIPPRICE_ISSET_ID);
  }

  /** Returns true if field vipPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetVipPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __VIPPRICE_ISSET_ID);
  }

  public void setVipPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIPPRICE_ISSET_ID, value);
  }

  /**
   * vip限购数量
   */
  public int getMaxVip() {
    return this.maxVip;
  }

  /**
   * vip限购数量
   */
  public BossProductVo setMaxVip(int maxVip) {
    this.maxVip = maxVip;
    setMaxVipIsSet(true);
    return this;
  }

  public void unsetMaxVip() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXVIP_ISSET_ID);
  }

  /** Returns true if field maxVip is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxVip() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXVIP_ISSET_ID);
  }

  public void setMaxVipIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXVIP_ISSET_ID, value);
  }

  /**
   * 销售价
   */
  public double getPrice() {
    return this.price;
  }

  /**
   * 销售价
   */
  public BossProductVo setPrice(double price) {
    this.price = price;
    setPriceIsSet(true);
    return this;
  }

  public void unsetPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  public void setPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRICE_ISSET_ID, value);
  }

  /**
   * 市场价
   */
  public double getMarketPrice() {
    return this.marketPrice;
  }

  /**
   * 市场价
   */
  public BossProductVo setMarketPrice(double marketPrice) {
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    return this;
  }

  public void unsetMarketPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  /** Returns true if field marketPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetMarketPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  public void setMarketPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MARKETPRICE_ISSET_ID, value);
  }

  /**
   * 运费
   */
  public double getDeliveryMoney() {
    return this.deliveryMoney;
  }

  /**
   * 运费
   */
  public BossProductVo setDeliveryMoney(double deliveryMoney) {
    this.deliveryMoney = deliveryMoney;
    setDeliveryMoneyIsSet(true);
    return this;
  }

  public void unsetDeliveryMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID);
  }

  /** Returns true if field deliveryMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID);
  }

  public void setDeliveryMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID, value);
  }

  /**
   * 库存数量
   */
  public int getStore() {
    return this.store;
  }

  /**
   * 库存数量
   */
  public BossProductVo setStore(int store) {
    this.store = store;
    setStoreIsSet(true);
    return this;
  }

  public void unsetStore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STORE_ISSET_ID);
  }

  /** Returns true if field store is set (has been assigned a value) and false otherwise */
  public boolean isSetStore() {
    return EncodingUtils.testBit(__isset_bitfield, __STORE_ISSET_ID);
  }

  public void setStoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STORE_ISSET_ID, value);
  }

  /**
   * 限购数量
   */
  public int getMax() {
    return this.max;
  }

  /**
   * 限购数量
   */
  public BossProductVo setMax(int max) {
    this.max = max;
    setMaxIsSet(true);
    return this;
  }

  public void unsetMax() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAX_ISSET_ID);
  }

  /** Returns true if field max is set (has been assigned a value) and false otherwise */
  public boolean isSetMax() {
    return EncodingUtils.testBit(__isset_bitfield, __MAX_ISSET_ID);
  }

  public void setMaxIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAX_ISSET_ID, value);
  }

  /**
   * 商品重量
   */
  public String getWeight() {
    return this.weight;
  }

  /**
   * 商品重量
   */
  public BossProductVo setWeight(String weight) {
    this.weight = weight;
    return this;
  }

  public void unsetWeight() {
    this.weight = null;
  }

  /** Returns true if field weight is set (has been assigned a value) and false otherwise */
  public boolean isSetWeight() {
    return this.weight != null;
  }

  public void setWeightIsSet(boolean value) {
    if (!value) {
      this.weight = null;
    }
  }

  /**
   * 重量单位
   */
  public String getWeightUnit() {
    return this.weightUnit;
  }

  /**
   * 重量单位
   */
  public BossProductVo setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
    return this;
  }

  public void unsetWeightUnit() {
    this.weightUnit = null;
  }

  /** Returns true if field weightUnit is set (has been assigned a value) and false otherwise */
  public boolean isSetWeightUnit() {
    return this.weightUnit != null;
  }

  public void setWeightUnitIsSet(boolean value) {
    if (!value) {
      this.weightUnit = null;
    }
  }

  /**
   * 销售开始
   */
  public long getStartTime() {
    return this.startTime;
  }

  /**
   * 销售开始
   */
  public BossProductVo setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  /**
   * 销售结束
   */
  public long getEndTime() {
    return this.endTime;
  }

  /**
   * 销售结束
   */
  public BossProductVo setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  /**
   * 提货-开始
   */
  public long getDeliveryStartTime() {
    return this.deliveryStartTime;
  }

  /**
   * 提货-开始
   */
  public BossProductVo setDeliveryStartTime(long deliveryStartTime) {
    this.deliveryStartTime = deliveryStartTime;
    setDeliveryStartTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID);
  }

  /** Returns true if field deliveryStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID);
  }

  public void setDeliveryStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID, value);
  }

  /**
   * 提货-结束
   */
  public long getDeliveryEndTime() {
    return this.deliveryEndTime;
  }

  /**
   * 提货-结束
   */
  public BossProductVo setDeliveryEndTime(long deliveryEndTime) {
    this.deliveryEndTime = deliveryEndTime;
    setDeliveryEndTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID);
  }

  /** Returns true if field deliveryEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID);
  }

  public void setDeliveryEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID, value);
  }

  /**
   * 提货方式 "0":送货上门,"1":网点自提,"2":配送或自提;
   */
  public String getDeliveryOption() {
    return this.deliveryOption;
  }

  /**
   * 提货方式 "0":送货上门,"1":网点自提,"2":配送或自提;
   */
  public BossProductVo setDeliveryOption(String deliveryOption) {
    this.deliveryOption = deliveryOption;
    return this;
  }

  public void unsetDeliveryOption() {
    this.deliveryOption = null;
  }

  /** Returns true if field deliveryOption is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryOption() {
    return this.deliveryOption != null;
  }

  public void setDeliveryOptionIsSet(boolean value) {
    if (!value) {
      this.deliveryOption = null;
    }
  }

  /**
   * 商品购买须知
   */
  public String getBuyKnow() {
    return this.buyKnow;
  }

  /**
   * 商品购买须知
   */
  public BossProductVo setBuyKnow(String buyKnow) {
    this.buyKnow = buyKnow;
    return this;
  }

  public void unsetBuyKnow() {
    this.buyKnow = null;
  }

  /** Returns true if field buyKnow is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyKnow() {
    return this.buyKnow != null;
  }

  public void setBuyKnowIsSet(boolean value) {
    if (!value) {
      this.buyKnow = null;
    }
  }

  /**
   * 介绍即商品详情
   */
  public String getIntroduction() {
    return this.introduction;
  }

  /**
   * 介绍即商品详情
   */
  public BossProductVo setIntroduction(String introduction) {
    this.introduction = introduction;
    return this;
  }

  public void unsetIntroduction() {
    this.introduction = null;
  }

  /** Returns true if field introduction is set (has been assigned a value) and false otherwise */
  public boolean isSetIntroduction() {
    return this.introduction != null;
  }

  public void setIntroductionIsSet(boolean value) {
    if (!value) {
      this.introduction = null;
    }
  }

  /**
   * 录入渠道 "1":boss,"2":银行端,"3":商户pc,"4":商户h5,"5":个人pc,"6":个人h5;
   */
  public String getPlatType() {
    return this.platType;
  }

  /**
   * 录入渠道 "1":boss,"2":银行端,"3":商户pc,"4":商户h5,"5":个人pc,"6":个人h5;
   */
  public BossProductVo setPlatType(String platType) {
    this.platType = platType;
    return this;
  }

  public void unsetPlatType() {
    this.platType = null;
  }

  /** Returns true if field platType is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatType() {
    return this.platType != null;
  }

  public void setPlatTypeIsSet(boolean value) {
    if (!value) {
      this.platType = null;
    }
  }

  /**
   * 审核状态
   */
  public String getAuditStatus() {
    return this.auditStatus;
  }

  /**
   * 审核状态
   */
  public BossProductVo setAuditStatus(String auditStatus) {
    this.auditStatus = auditStatus;
    return this;
  }

  public void unsetAuditStatus() {
    this.auditStatus = null;
  }

  /** Returns true if field auditStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStatus() {
    return this.auditStatus != null;
  }

  public void setAuditStatusIsSet(boolean value) {
    if (!value) {
      this.auditStatus = null;
    }
  }

  /**
   * 上下架状态
   */
  public String getMarketableStatus() {
    return this.marketableStatus;
  }

  /**
   * 上下架状态
   */
  public BossProductVo setMarketableStatus(String marketableStatus) {
    this.marketableStatus = marketableStatus;
    return this;
  }

  public void unsetMarketableStatus() {
    this.marketableStatus = null;
  }

  /** Returns true if field marketableStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetMarketableStatus() {
    return this.marketableStatus != null;
  }

  public void setMarketableStatusIsSet(boolean value) {
    if (!value) {
      this.marketableStatus = null;
    }
  }

  /**
   * 团购或预售券有效起始日
   */
  public long getExpireStartTime() {
    return this.expireStartTime;
  }

  /**
   * 团购或预售券有效起始日
   */
  public BossProductVo setExpireStartTime(long expireStartTime) {
    this.expireStartTime = expireStartTime;
    setExpireStartTimeIsSet(true);
    return this;
  }

  public void unsetExpireStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPIRESTARTTIME_ISSET_ID);
  }

  /** Returns true if field expireStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSetExpireStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPIRESTARTTIME_ISSET_ID);
  }

  public void setExpireStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPIRESTARTTIME_ISSET_ID, value);
  }

  /**
   * 团购或预售券有效结束日
   */
  public long getExpireEndTime() {
    return this.expireEndTime;
  }

  /**
   * 团购或预售券有效结束日
   */
  public BossProductVo setExpireEndTime(long expireEndTime) {
    this.expireEndTime = expireEndTime;
    setExpireEndTimeIsSet(true);
    return this;
  }

  public void unsetExpireEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPIREENDTIME_ISSET_ID);
  }

  /** Returns true if field expireEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetExpireEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPIREENDTIME_ISSET_ID);
  }

  public void setExpireEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPIREENDTIME_ISSET_ID, value);
  }

  /**
   * VIP活动id 新增商品时候绑定vip价格时候需要传值
   */
  public String getVipId() {
    return this.vipId;
  }

  /**
   * VIP活动id 新增商品时候绑定vip价格时候需要传值
   */
  public BossProductVo setVipId(String vipId) {
    this.vipId = vipId;
    return this;
  }

  public void unsetVipId() {
    this.vipId = null;
  }

  /** Returns true if field vipId is set (has been assigned a value) and false otherwise */
  public boolean isSetVipId() {
    return this.vipId != null;
  }

  public void setVipIdIsSet(boolean value) {
    if (!value) {
      this.vipId = null;
    }
  }

  /**
   * 修改商品时候是否删除VIP规则绑定关系
   */
  public boolean isIsRemoveVipId() {
    return this.isRemoveVipId;
  }

  /**
   * 修改商品时候是否删除VIP规则绑定关系
   */
  public BossProductVo setIsRemoveVipId(boolean isRemoveVipId) {
    this.isRemoveVipId = isRemoveVipId;
    setIsRemoveVipIdIsSet(true);
    return this;
  }

  public void unsetIsRemoveVipId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISREMOVEVIPID_ISSET_ID);
  }

  /** Returns true if field isRemoveVipId is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRemoveVipId() {
    return EncodingUtils.testBit(__isset_bitfield, __ISREMOVEVIPID_ISSET_ID);
  }

  public void setIsRemoveVipIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISREMOVEVIPID_ISSET_ID, value);
  }

  /**
   * 商品分类名称
   */
  public String getCategoryName() {
    return this.categoryName;
  }

  /**
   * 商品分类名称
   */
  public BossProductVo setCategoryName(String categoryName) {
    this.categoryName = categoryName;
    return this;
  }

  public void unsetCategoryName() {
    this.categoryName = null;
  }

  /** Returns true if field categoryName is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryName() {
    return this.categoryName != null;
  }

  public void setCategoryNameIsSet(boolean value) {
    if (!value) {
      this.categoryName = null;
    }
  }

  /**
   * 客户端名称即所属行
   */
  public String getClientName() {
    return this.clientName;
  }

  /**
   * 客户端名称即所属行
   */
  public BossProductVo setClientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

  public void unsetClientName() {
    this.clientName = null;
  }

  /** Returns true if field clientName is set (has been assigned a value) and false otherwise */
  public boolean isSetClientName() {
    return this.clientName != null;
  }

  public void setClientNameIsSet(boolean value) {
    if (!value) {
      this.clientName = null;
    }
  }

  /**
   * vip名称
   */
  public String getVipName() {
    return this.vipName;
  }

  /**
   * vip名称
   */
  public BossProductVo setVipName(String vipName) {
    this.vipName = vipName;
    return this;
  }

  public void unsetVipName() {
    this.vipName = null;
  }

  /** Returns true if field vipName is set (has been assigned a value) and false otherwise */
  public boolean isSetVipName() {
    return this.vipName != null;
  }

  public void setVipNameIsSet(boolean value) {
    if (!value) {
      this.vipName = null;
    }
  }

  /**
   * vip名称
   */
  public String getBankName() {
    return this.bankName;
  }

  /**
   * vip名称
   */
  public BossProductVo setBankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

  public void unsetBankName() {
    this.bankName = null;
  }

  /** Returns true if field bankName is set (has been assigned a value) and false otherwise */
  public boolean isSetBankName() {
    return this.bankName != null;
  }

  public void setBankNameIsSet(boolean value) {
    if (!value) {
      this.bankName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case CATEGORY_ID:
      if (value == null) {
        unsetCategoryId();
      } else {
        setCategoryId((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case FULL_NAME:
      if (value == null) {
        unsetFullName();
      } else {
        setFullName((String)value);
      }
      break;

    case BRIEF_INTRODUCTION:
      if (value == null) {
        unsetBriefIntroduction();
      } else {
        setBriefIntroduction((String)value);
      }
      break;

    case VIP_PRICE:
      if (value == null) {
        unsetVipPrice();
      } else {
        setVipPrice((Double)value);
      }
      break;

    case MAX_VIP:
      if (value == null) {
        unsetMaxVip();
      } else {
        setMaxVip((Integer)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((Double)value);
      }
      break;

    case MARKET_PRICE:
      if (value == null) {
        unsetMarketPrice();
      } else {
        setMarketPrice((Double)value);
      }
      break;

    case DELIVERY_MONEY:
      if (value == null) {
        unsetDeliveryMoney();
      } else {
        setDeliveryMoney((Double)value);
      }
      break;

    case STORE:
      if (value == null) {
        unsetStore();
      } else {
        setStore((Integer)value);
      }
      break;

    case MAX:
      if (value == null) {
        unsetMax();
      } else {
        setMax((Integer)value);
      }
      break;

    case WEIGHT:
      if (value == null) {
        unsetWeight();
      } else {
        setWeight((String)value);
      }
      break;

    case WEIGHT_UNIT:
      if (value == null) {
        unsetWeightUnit();
      } else {
        setWeightUnit((String)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((Long)value);
      }
      break;

    case DELIVERY_START_TIME:
      if (value == null) {
        unsetDeliveryStartTime();
      } else {
        setDeliveryStartTime((Long)value);
      }
      break;

    case DELIVERY_END_TIME:
      if (value == null) {
        unsetDeliveryEndTime();
      } else {
        setDeliveryEndTime((Long)value);
      }
      break;

    case DELIVERY_OPTION:
      if (value == null) {
        unsetDeliveryOption();
      } else {
        setDeliveryOption((String)value);
      }
      break;

    case BUY_KNOW:
      if (value == null) {
        unsetBuyKnow();
      } else {
        setBuyKnow((String)value);
      }
      break;

    case INTRODUCTION:
      if (value == null) {
        unsetIntroduction();
      } else {
        setIntroduction((String)value);
      }
      break;

    case PLAT_TYPE:
      if (value == null) {
        unsetPlatType();
      } else {
        setPlatType((String)value);
      }
      break;

    case AUDIT_STATUS:
      if (value == null) {
        unsetAuditStatus();
      } else {
        setAuditStatus((String)value);
      }
      break;

    case MARKETABLE_STATUS:
      if (value == null) {
        unsetMarketableStatus();
      } else {
        setMarketableStatus((String)value);
      }
      break;

    case EXPIRE_START_TIME:
      if (value == null) {
        unsetExpireStartTime();
      } else {
        setExpireStartTime((Long)value);
      }
      break;

    case EXPIRE_END_TIME:
      if (value == null) {
        unsetExpireEndTime();
      } else {
        setExpireEndTime((Long)value);
      }
      break;

    case VIP_ID:
      if (value == null) {
        unsetVipId();
      } else {
        setVipId((String)value);
      }
      break;

    case IS_REMOVE_VIP_ID:
      if (value == null) {
        unsetIsRemoveVipId();
      } else {
        setIsRemoveVipId((Boolean)value);
      }
      break;

    case CATEGORY_NAME:
      if (value == null) {
        unsetCategoryName();
      } else {
        setCategoryName((String)value);
      }
      break;

    case CLIENT_NAME:
      if (value == null) {
        unsetClientName();
      } else {
        setClientName((String)value);
      }
      break;

    case VIP_NAME:
      if (value == null) {
        unsetVipName();
      } else {
        setVipName((String)value);
      }
      break;

    case BANK_NAME:
      if (value == null) {
        unsetBankName();
      } else {
        setBankName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return getProductId();

    case TYPE:
      return getType();

    case CATEGORY_ID:
      return Long.valueOf(getCategoryId());

    case CLIENT_ID:
      return getClientId();

    case ORG_CODE:
      return getOrgCode();

    case NAME:
      return getName();

    case FULL_NAME:
      return getFullName();

    case BRIEF_INTRODUCTION:
      return getBriefIntroduction();

    case VIP_PRICE:
      return Double.valueOf(getVipPrice());

    case MAX_VIP:
      return Integer.valueOf(getMaxVip());

    case PRICE:
      return Double.valueOf(getPrice());

    case MARKET_PRICE:
      return Double.valueOf(getMarketPrice());

    case DELIVERY_MONEY:
      return Double.valueOf(getDeliveryMoney());

    case STORE:
      return Integer.valueOf(getStore());

    case MAX:
      return Integer.valueOf(getMax());

    case WEIGHT:
      return getWeight();

    case WEIGHT_UNIT:
      return getWeightUnit();

    case START_TIME:
      return Long.valueOf(getStartTime());

    case END_TIME:
      return Long.valueOf(getEndTime());

    case DELIVERY_START_TIME:
      return Long.valueOf(getDeliveryStartTime());

    case DELIVERY_END_TIME:
      return Long.valueOf(getDeliveryEndTime());

    case DELIVERY_OPTION:
      return getDeliveryOption();

    case BUY_KNOW:
      return getBuyKnow();

    case INTRODUCTION:
      return getIntroduction();

    case PLAT_TYPE:
      return getPlatType();

    case AUDIT_STATUS:
      return getAuditStatus();

    case MARKETABLE_STATUS:
      return getMarketableStatus();

    case EXPIRE_START_TIME:
      return Long.valueOf(getExpireStartTime());

    case EXPIRE_END_TIME:
      return Long.valueOf(getExpireEndTime());

    case VIP_ID:
      return getVipId();

    case IS_REMOVE_VIP_ID:
      return Boolean.valueOf(isIsRemoveVipId());

    case CATEGORY_NAME:
      return getCategoryName();

    case CLIENT_NAME:
      return getClientName();

    case VIP_NAME:
      return getVipName();

    case BANK_NAME:
      return getBankName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case TYPE:
      return isSetType();
    case CATEGORY_ID:
      return isSetCategoryId();
    case CLIENT_ID:
      return isSetClientId();
    case ORG_CODE:
      return isSetOrgCode();
    case NAME:
      return isSetName();
    case FULL_NAME:
      return isSetFullName();
    case BRIEF_INTRODUCTION:
      return isSetBriefIntroduction();
    case VIP_PRICE:
      return isSetVipPrice();
    case MAX_VIP:
      return isSetMaxVip();
    case PRICE:
      return isSetPrice();
    case MARKET_PRICE:
      return isSetMarketPrice();
    case DELIVERY_MONEY:
      return isSetDeliveryMoney();
    case STORE:
      return isSetStore();
    case MAX:
      return isSetMax();
    case WEIGHT:
      return isSetWeight();
    case WEIGHT_UNIT:
      return isSetWeightUnit();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case DELIVERY_START_TIME:
      return isSetDeliveryStartTime();
    case DELIVERY_END_TIME:
      return isSetDeliveryEndTime();
    case DELIVERY_OPTION:
      return isSetDeliveryOption();
    case BUY_KNOW:
      return isSetBuyKnow();
    case INTRODUCTION:
      return isSetIntroduction();
    case PLAT_TYPE:
      return isSetPlatType();
    case AUDIT_STATUS:
      return isSetAuditStatus();
    case MARKETABLE_STATUS:
      return isSetMarketableStatus();
    case EXPIRE_START_TIME:
      return isSetExpireStartTime();
    case EXPIRE_END_TIME:
      return isSetExpireEndTime();
    case VIP_ID:
      return isSetVipId();
    case IS_REMOVE_VIP_ID:
      return isSetIsRemoveVipId();
    case CATEGORY_NAME:
      return isSetCategoryName();
    case CLIENT_NAME:
      return isSetClientName();
    case VIP_NAME:
      return isSetVipName();
    case BANK_NAME:
      return isSetBankName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BossProductVo)
      return this.equals((BossProductVo)that);
    return false;
  }

  public boolean equals(BossProductVo that) {
    if (that == null)
      return false;

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_categoryId = true;
    boolean that_present_categoryId = true;
    if (this_present_categoryId || that_present_categoryId) {
      if (!(this_present_categoryId && that_present_categoryId))
        return false;
      if (this.categoryId != that.categoryId)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_fullName = true && this.isSetFullName();
    boolean that_present_fullName = true && that.isSetFullName();
    if (this_present_fullName || that_present_fullName) {
      if (!(this_present_fullName && that_present_fullName))
        return false;
      if (!this.fullName.equals(that.fullName))
        return false;
    }

    boolean this_present_briefIntroduction = true && this.isSetBriefIntroduction();
    boolean that_present_briefIntroduction = true && that.isSetBriefIntroduction();
    if (this_present_briefIntroduction || that_present_briefIntroduction) {
      if (!(this_present_briefIntroduction && that_present_briefIntroduction))
        return false;
      if (!this.briefIntroduction.equals(that.briefIntroduction))
        return false;
    }

    boolean this_present_vipPrice = true && this.isSetVipPrice();
    boolean that_present_vipPrice = true && that.isSetVipPrice();
    if (this_present_vipPrice || that_present_vipPrice) {
      if (!(this_present_vipPrice && that_present_vipPrice))
        return false;
      if (this.vipPrice != that.vipPrice)
        return false;
    }

    boolean this_present_maxVip = true && this.isSetMaxVip();
    boolean that_present_maxVip = true && that.isSetMaxVip();
    if (this_present_maxVip || that_present_maxVip) {
      if (!(this_present_maxVip && that_present_maxVip))
        return false;
      if (this.maxVip != that.maxVip)
        return false;
    }

    boolean this_present_price = true;
    boolean that_present_price = true;
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (this.price != that.price)
        return false;
    }

    boolean this_present_marketPrice = true;
    boolean that_present_marketPrice = true;
    if (this_present_marketPrice || that_present_marketPrice) {
      if (!(this_present_marketPrice && that_present_marketPrice))
        return false;
      if (this.marketPrice != that.marketPrice)
        return false;
    }

    boolean this_present_deliveryMoney = true;
    boolean that_present_deliveryMoney = true;
    if (this_present_deliveryMoney || that_present_deliveryMoney) {
      if (!(this_present_deliveryMoney && that_present_deliveryMoney))
        return false;
      if (this.deliveryMoney != that.deliveryMoney)
        return false;
    }

    boolean this_present_store = true;
    boolean that_present_store = true;
    if (this_present_store || that_present_store) {
      if (!(this_present_store && that_present_store))
        return false;
      if (this.store != that.store)
        return false;
    }

    boolean this_present_max = true && this.isSetMax();
    boolean that_present_max = true && that.isSetMax();
    if (this_present_max || that_present_max) {
      if (!(this_present_max && that_present_max))
        return false;
      if (this.max != that.max)
        return false;
    }

    boolean this_present_weight = true && this.isSetWeight();
    boolean that_present_weight = true && that.isSetWeight();
    if (this_present_weight || that_present_weight) {
      if (!(this_present_weight && that_present_weight))
        return false;
      if (!this.weight.equals(that.weight))
        return false;
    }

    boolean this_present_weightUnit = true && this.isSetWeightUnit();
    boolean that_present_weightUnit = true && that.isSetWeightUnit();
    if (this_present_weightUnit || that_present_weightUnit) {
      if (!(this_present_weightUnit && that_present_weightUnit))
        return false;
      if (!this.weightUnit.equals(that.weightUnit))
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_deliveryStartTime = true;
    boolean that_present_deliveryStartTime = true;
    if (this_present_deliveryStartTime || that_present_deliveryStartTime) {
      if (!(this_present_deliveryStartTime && that_present_deliveryStartTime))
        return false;
      if (this.deliveryStartTime != that.deliveryStartTime)
        return false;
    }

    boolean this_present_deliveryEndTime = true;
    boolean that_present_deliveryEndTime = true;
    if (this_present_deliveryEndTime || that_present_deliveryEndTime) {
      if (!(this_present_deliveryEndTime && that_present_deliveryEndTime))
        return false;
      if (this.deliveryEndTime != that.deliveryEndTime)
        return false;
    }

    boolean this_present_deliveryOption = true && this.isSetDeliveryOption();
    boolean that_present_deliveryOption = true && that.isSetDeliveryOption();
    if (this_present_deliveryOption || that_present_deliveryOption) {
      if (!(this_present_deliveryOption && that_present_deliveryOption))
        return false;
      if (!this.deliveryOption.equals(that.deliveryOption))
        return false;
    }

    boolean this_present_buyKnow = true && this.isSetBuyKnow();
    boolean that_present_buyKnow = true && that.isSetBuyKnow();
    if (this_present_buyKnow || that_present_buyKnow) {
      if (!(this_present_buyKnow && that_present_buyKnow))
        return false;
      if (!this.buyKnow.equals(that.buyKnow))
        return false;
    }

    boolean this_present_introduction = true && this.isSetIntroduction();
    boolean that_present_introduction = true && that.isSetIntroduction();
    if (this_present_introduction || that_present_introduction) {
      if (!(this_present_introduction && that_present_introduction))
        return false;
      if (!this.introduction.equals(that.introduction))
        return false;
    }

    boolean this_present_platType = true && this.isSetPlatType();
    boolean that_present_platType = true && that.isSetPlatType();
    if (this_present_platType || that_present_platType) {
      if (!(this_present_platType && that_present_platType))
        return false;
      if (!this.platType.equals(that.platType))
        return false;
    }

    boolean this_present_auditStatus = true && this.isSetAuditStatus();
    boolean that_present_auditStatus = true && that.isSetAuditStatus();
    if (this_present_auditStatus || that_present_auditStatus) {
      if (!(this_present_auditStatus && that_present_auditStatus))
        return false;
      if (!this.auditStatus.equals(that.auditStatus))
        return false;
    }

    boolean this_present_marketableStatus = true && this.isSetMarketableStatus();
    boolean that_present_marketableStatus = true && that.isSetMarketableStatus();
    if (this_present_marketableStatus || that_present_marketableStatus) {
      if (!(this_present_marketableStatus && that_present_marketableStatus))
        return false;
      if (!this.marketableStatus.equals(that.marketableStatus))
        return false;
    }

    boolean this_present_expireStartTime = true;
    boolean that_present_expireStartTime = true;
    if (this_present_expireStartTime || that_present_expireStartTime) {
      if (!(this_present_expireStartTime && that_present_expireStartTime))
        return false;
      if (this.expireStartTime != that.expireStartTime)
        return false;
    }

    boolean this_present_expireEndTime = true;
    boolean that_present_expireEndTime = true;
    if (this_present_expireEndTime || that_present_expireEndTime) {
      if (!(this_present_expireEndTime && that_present_expireEndTime))
        return false;
      if (this.expireEndTime != that.expireEndTime)
        return false;
    }

    boolean this_present_vipId = true && this.isSetVipId();
    boolean that_present_vipId = true && that.isSetVipId();
    if (this_present_vipId || that_present_vipId) {
      if (!(this_present_vipId && that_present_vipId))
        return false;
      if (!this.vipId.equals(that.vipId))
        return false;
    }

    boolean this_present_isRemoveVipId = true;
    boolean that_present_isRemoveVipId = true;
    if (this_present_isRemoveVipId || that_present_isRemoveVipId) {
      if (!(this_present_isRemoveVipId && that_present_isRemoveVipId))
        return false;
      if (this.isRemoveVipId != that.isRemoveVipId)
        return false;
    }

    boolean this_present_categoryName = true && this.isSetCategoryName();
    boolean that_present_categoryName = true && that.isSetCategoryName();
    if (this_present_categoryName || that_present_categoryName) {
      if (!(this_present_categoryName && that_present_categoryName))
        return false;
      if (!this.categoryName.equals(that.categoryName))
        return false;
    }

    boolean this_present_clientName = true && this.isSetClientName();
    boolean that_present_clientName = true && that.isSetClientName();
    if (this_present_clientName || that_present_clientName) {
      if (!(this_present_clientName && that_present_clientName))
        return false;
      if (!this.clientName.equals(that.clientName))
        return false;
    }

    boolean this_present_vipName = true && this.isSetVipName();
    boolean that_present_vipName = true && that.isSetVipName();
    if (this_present_vipName || that_present_vipName) {
      if (!(this_present_vipName && that_present_vipName))
        return false;
      if (!this.vipName.equals(that.vipName))
        return false;
    }

    boolean this_present_bankName = true && this.isSetBankName();
    boolean that_present_bankName = true && that.isSetBankName();
    if (this_present_bankName || that_present_bankName) {
      if (!(this_present_bankName && that_present_bankName))
        return false;
      if (!this.bankName.equals(that.bankName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_categoryId = true;
    list.add(present_categoryId);
    if (present_categoryId)
      list.add(categoryId);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_fullName = true && (isSetFullName());
    list.add(present_fullName);
    if (present_fullName)
      list.add(fullName);

    boolean present_briefIntroduction = true && (isSetBriefIntroduction());
    list.add(present_briefIntroduction);
    if (present_briefIntroduction)
      list.add(briefIntroduction);

    boolean present_vipPrice = true && (isSetVipPrice());
    list.add(present_vipPrice);
    if (present_vipPrice)
      list.add(vipPrice);

    boolean present_maxVip = true && (isSetMaxVip());
    list.add(present_maxVip);
    if (present_maxVip)
      list.add(maxVip);

    boolean present_price = true;
    list.add(present_price);
    if (present_price)
      list.add(price);

    boolean present_marketPrice = true;
    list.add(present_marketPrice);
    if (present_marketPrice)
      list.add(marketPrice);

    boolean present_deliveryMoney = true;
    list.add(present_deliveryMoney);
    if (present_deliveryMoney)
      list.add(deliveryMoney);

    boolean present_store = true;
    list.add(present_store);
    if (present_store)
      list.add(store);

    boolean present_max = true && (isSetMax());
    list.add(present_max);
    if (present_max)
      list.add(max);

    boolean present_weight = true && (isSetWeight());
    list.add(present_weight);
    if (present_weight)
      list.add(weight);

    boolean present_weightUnit = true && (isSetWeightUnit());
    list.add(present_weightUnit);
    if (present_weightUnit)
      list.add(weightUnit);

    boolean present_startTime = true;
    list.add(present_startTime);
    if (present_startTime)
      list.add(startTime);

    boolean present_endTime = true;
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    boolean present_deliveryStartTime = true;
    list.add(present_deliveryStartTime);
    if (present_deliveryStartTime)
      list.add(deliveryStartTime);

    boolean present_deliveryEndTime = true;
    list.add(present_deliveryEndTime);
    if (present_deliveryEndTime)
      list.add(deliveryEndTime);

    boolean present_deliveryOption = true && (isSetDeliveryOption());
    list.add(present_deliveryOption);
    if (present_deliveryOption)
      list.add(deliveryOption);

    boolean present_buyKnow = true && (isSetBuyKnow());
    list.add(present_buyKnow);
    if (present_buyKnow)
      list.add(buyKnow);

    boolean present_introduction = true && (isSetIntroduction());
    list.add(present_introduction);
    if (present_introduction)
      list.add(introduction);

    boolean present_platType = true && (isSetPlatType());
    list.add(present_platType);
    if (present_platType)
      list.add(platType);

    boolean present_auditStatus = true && (isSetAuditStatus());
    list.add(present_auditStatus);
    if (present_auditStatus)
      list.add(auditStatus);

    boolean present_marketableStatus = true && (isSetMarketableStatus());
    list.add(present_marketableStatus);
    if (present_marketableStatus)
      list.add(marketableStatus);

    boolean present_expireStartTime = true;
    list.add(present_expireStartTime);
    if (present_expireStartTime)
      list.add(expireStartTime);

    boolean present_expireEndTime = true;
    list.add(present_expireEndTime);
    if (present_expireEndTime)
      list.add(expireEndTime);

    boolean present_vipId = true && (isSetVipId());
    list.add(present_vipId);
    if (present_vipId)
      list.add(vipId);

    boolean present_isRemoveVipId = true;
    list.add(present_isRemoveVipId);
    if (present_isRemoveVipId)
      list.add(isRemoveVipId);

    boolean present_categoryName = true && (isSetCategoryName());
    list.add(present_categoryName);
    if (present_categoryName)
      list.add(categoryName);

    boolean present_clientName = true && (isSetClientName());
    list.add(present_clientName);
    if (present_clientName)
      list.add(clientName);

    boolean present_vipName = true && (isSetVipName());
    list.add(present_vipName);
    if (present_vipName)
      list.add(vipName);

    boolean present_bankName = true && (isSetBankName());
    list.add(present_bankName);
    if (present_bankName)
      list.add(bankName);

    return list.hashCode();
  }

  @Override
  public int compareTo(BossProductVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryId()).compareTo(other.isSetCategoryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryId, other.categoryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFullName()).compareTo(other.isSetFullName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFullName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fullName, other.fullName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBriefIntroduction()).compareTo(other.isSetBriefIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBriefIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.briefIntroduction, other.briefIntroduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipPrice()).compareTo(other.isSetVipPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipPrice, other.vipPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxVip()).compareTo(other.isSetMaxVip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxVip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxVip, other.maxVip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMarketPrice()).compareTo(other.isSetMarketPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarketPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marketPrice, other.marketPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryMoney()).compareTo(other.isSetDeliveryMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryMoney, other.deliveryMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStore()).compareTo(other.isSetStore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.store, other.store);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMax()).compareTo(other.isSetMax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.max, other.max);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWeight()).compareTo(other.isSetWeight());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeight()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weight, other.weight);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWeightUnit()).compareTo(other.isSetWeightUnit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeightUnit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weightUnit, other.weightUnit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryStartTime()).compareTo(other.isSetDeliveryStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryStartTime, other.deliveryStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryEndTime()).compareTo(other.isSetDeliveryEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryEndTime, other.deliveryEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryOption()).compareTo(other.isSetDeliveryOption());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryOption()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryOption, other.deliveryOption);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyKnow()).compareTo(other.isSetBuyKnow());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyKnow()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyKnow, other.buyKnow);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntroduction()).compareTo(other.isSetIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.introduction, other.introduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatType()).compareTo(other.isSetPlatType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platType, other.platType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStatus()).compareTo(other.isSetAuditStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStatus, other.auditStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMarketableStatus()).compareTo(other.isSetMarketableStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarketableStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marketableStatus, other.marketableStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpireStartTime()).compareTo(other.isSetExpireStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpireStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expireStartTime, other.expireStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpireEndTime()).compareTo(other.isSetExpireEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpireEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expireEndTime, other.expireEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipId()).compareTo(other.isSetVipId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipId, other.vipId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsRemoveVipId()).compareTo(other.isSetIsRemoveVipId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRemoveVipId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRemoveVipId, other.isRemoveVipId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryName()).compareTo(other.isSetCategoryName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryName, other.categoryName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientName()).compareTo(other.isSetClientName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientName, other.clientName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipName()).compareTo(other.isSetVipName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipName, other.vipName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankName()).compareTo(other.isSetBankName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankName, other.bankName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BossProductVo(");
    boolean first = true;

    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("categoryId:");
    sb.append(this.categoryId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fullName:");
    if (this.fullName == null) {
      sb.append("null");
    } else {
      sb.append(this.fullName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("briefIntroduction:");
    if (this.briefIntroduction == null) {
      sb.append("null");
    } else {
      sb.append(this.briefIntroduction);
    }
    first = false;
    if (isSetVipPrice()) {
      if (!first) sb.append(", ");
      sb.append("vipPrice:");
      sb.append(this.vipPrice);
      first = false;
    }
    if (isSetMaxVip()) {
      if (!first) sb.append(", ");
      sb.append("maxVip:");
      sb.append(this.maxVip);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("price:");
    sb.append(this.price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("marketPrice:");
    sb.append(this.marketPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryMoney:");
    sb.append(this.deliveryMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("store:");
    sb.append(this.store);
    first = false;
    if (isSetMax()) {
      if (!first) sb.append(", ");
      sb.append("max:");
      sb.append(this.max);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("weight:");
    if (this.weight == null) {
      sb.append("null");
    } else {
      sb.append(this.weight);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("weightUnit:");
    if (this.weightUnit == null) {
      sb.append("null");
    } else {
      sb.append(this.weightUnit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryStartTime:");
    sb.append(this.deliveryStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryEndTime:");
    sb.append(this.deliveryEndTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryOption:");
    if (this.deliveryOption == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryOption);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyKnow:");
    if (this.buyKnow == null) {
      sb.append("null");
    } else {
      sb.append(this.buyKnow);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("introduction:");
    if (this.introduction == null) {
      sb.append("null");
    } else {
      sb.append(this.introduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("platType:");
    if (this.platType == null) {
      sb.append("null");
    } else {
      sb.append(this.platType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStatus:");
    if (this.auditStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.auditStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("marketableStatus:");
    if (this.marketableStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.marketableStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("expireStartTime:");
    sb.append(this.expireStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("expireEndTime:");
    sb.append(this.expireEndTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipId:");
    if (this.vipId == null) {
      sb.append("null");
    } else {
      sb.append(this.vipId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isRemoveVipId:");
    sb.append(this.isRemoveVipId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("categoryName:");
    if (this.categoryName == null) {
      sb.append("null");
    } else {
      sb.append(this.categoryName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientName:");
    if (this.clientName == null) {
      sb.append("null");
    } else {
      sb.append(this.clientName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipName:");
    if (this.vipName == null) {
      sb.append("null");
    } else {
      sb.append(this.vipName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankName:");
    if (this.bankName == null) {
      sb.append("null");
    } else {
      sb.append(this.bankName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BossProductVoStandardSchemeFactory implements SchemeFactory {
    public BossProductVoStandardScheme getScheme() {
      return new BossProductVoStandardScheme();
    }
  }

  private static class BossProductVoStandardScheme extends StandardScheme<BossProductVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BossProductVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CATEGORY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.categoryId = iprot.readI64();
              struct.setCategoryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // FULL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fullName = iprot.readString();
              struct.setFullNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BRIEF_INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.briefIntroduction = iprot.readString();
              struct.setBriefIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // VIP_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.vipPrice = iprot.readDouble();
              struct.setVipPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MAX_VIP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxVip = iprot.readI32();
              struct.setMaxVipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.price = iprot.readDouble();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // MARKET_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.marketPrice = iprot.readDouble();
              struct.setMarketPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // DELIVERY_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.deliveryMoney = iprot.readDouble();
              struct.setDeliveryMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // STORE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.store = iprot.readI32();
              struct.setStoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // MAX
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.max = iprot.readI32();
              struct.setMaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // WEIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.weight = iprot.readString();
              struct.setWeightIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // WEIGHT_UNIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.weightUnit = iprot.readString();
              struct.setWeightUnitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // DELIVERY_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryStartTime = iprot.readI64();
              struct.setDeliveryStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // DELIVERY_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryEndTime = iprot.readI64();
              struct.setDeliveryEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // DELIVERY_OPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryOption = iprot.readString();
              struct.setDeliveryOptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // BUY_KNOW
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyKnow = iprot.readString();
              struct.setBuyKnowIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.introduction = iprot.readString();
              struct.setIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // PLAT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.platType = iprot.readString();
              struct.setPlatTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // AUDIT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStatus = iprot.readString();
              struct.setAuditStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // MARKETABLE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.marketableStatus = iprot.readString();
              struct.setMarketableStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // EXPIRE_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expireStartTime = iprot.readI64();
              struct.setExpireStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // EXPIRE_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expireEndTime = iprot.readI64();
              struct.setExpireEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // VIP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.vipId = iprot.readString();
              struct.setVipIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // IS_REMOVE_VIP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isRemoveVipId = iprot.readBool();
              struct.setIsRemoveVipIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // CATEGORY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.categoryName = iprot.readString();
              struct.setCategoryNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // CLIENT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientName = iprot.readString();
              struct.setClientNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // VIP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.vipName = iprot.readString();
              struct.setVipNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // BANK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankName = iprot.readString();
              struct.setBankNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BossProductVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CATEGORY_ID_FIELD_DESC);
      oprot.writeI64(struct.categoryId);
      oprot.writeFieldEnd();
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.fullName != null) {
        oprot.writeFieldBegin(FULL_NAME_FIELD_DESC);
        oprot.writeString(struct.fullName);
        oprot.writeFieldEnd();
      }
      if (struct.briefIntroduction != null) {
        oprot.writeFieldBegin(BRIEF_INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.briefIntroduction);
        oprot.writeFieldEnd();
      }
      if (struct.isSetVipPrice()) {
        oprot.writeFieldBegin(VIP_PRICE_FIELD_DESC);
        oprot.writeDouble(struct.vipPrice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMaxVip()) {
        oprot.writeFieldBegin(MAX_VIP_FIELD_DESC);
        oprot.writeI32(struct.maxVip);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeDouble(struct.price);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MARKET_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.marketPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.deliveryMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STORE_FIELD_DESC);
      oprot.writeI32(struct.store);
      oprot.writeFieldEnd();
      if (struct.isSetMax()) {
        oprot.writeFieldBegin(MAX_FIELD_DESC);
        oprot.writeI32(struct.max);
        oprot.writeFieldEnd();
      }
      if (struct.weight != null) {
        oprot.writeFieldBegin(WEIGHT_FIELD_DESC);
        oprot.writeString(struct.weight);
        oprot.writeFieldEnd();
      }
      if (struct.weightUnit != null) {
        oprot.writeFieldBegin(WEIGHT_UNIT_FIELD_DESC);
        oprot.writeString(struct.weightUnit);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_START_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_END_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryEndTime);
      oprot.writeFieldEnd();
      if (struct.deliveryOption != null) {
        oprot.writeFieldBegin(DELIVERY_OPTION_FIELD_DESC);
        oprot.writeString(struct.deliveryOption);
        oprot.writeFieldEnd();
      }
      if (struct.buyKnow != null) {
        oprot.writeFieldBegin(BUY_KNOW_FIELD_DESC);
        oprot.writeString(struct.buyKnow);
        oprot.writeFieldEnd();
      }
      if (struct.introduction != null) {
        oprot.writeFieldBegin(INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.introduction);
        oprot.writeFieldEnd();
      }
      if (struct.platType != null) {
        oprot.writeFieldBegin(PLAT_TYPE_FIELD_DESC);
        oprot.writeString(struct.platType);
        oprot.writeFieldEnd();
      }
      if (struct.auditStatus != null) {
        oprot.writeFieldBegin(AUDIT_STATUS_FIELD_DESC);
        oprot.writeString(struct.auditStatus);
        oprot.writeFieldEnd();
      }
      if (struct.marketableStatus != null) {
        oprot.writeFieldBegin(MARKETABLE_STATUS_FIELD_DESC);
        oprot.writeString(struct.marketableStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EXPIRE_START_TIME_FIELD_DESC);
      oprot.writeI64(struct.expireStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPIRE_END_TIME_FIELD_DESC);
      oprot.writeI64(struct.expireEndTime);
      oprot.writeFieldEnd();
      if (struct.vipId != null) {
        oprot.writeFieldBegin(VIP_ID_FIELD_DESC);
        oprot.writeString(struct.vipId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_REMOVE_VIP_ID_FIELD_DESC);
      oprot.writeBool(struct.isRemoveVipId);
      oprot.writeFieldEnd();
      if (struct.categoryName != null) {
        oprot.writeFieldBegin(CATEGORY_NAME_FIELD_DESC);
        oprot.writeString(struct.categoryName);
        oprot.writeFieldEnd();
      }
      if (struct.clientName != null) {
        oprot.writeFieldBegin(CLIENT_NAME_FIELD_DESC);
        oprot.writeString(struct.clientName);
        oprot.writeFieldEnd();
      }
      if (struct.vipName != null) {
        oprot.writeFieldBegin(VIP_NAME_FIELD_DESC);
        oprot.writeString(struct.vipName);
        oprot.writeFieldEnd();
      }
      if (struct.bankName != null) {
        oprot.writeFieldBegin(BANK_NAME_FIELD_DESC);
        oprot.writeString(struct.bankName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BossProductVoTupleSchemeFactory implements SchemeFactory {
    public BossProductVoTupleScheme getScheme() {
      return new BossProductVoTupleScheme();
    }
  }

  private static class BossProductVoTupleScheme extends TupleScheme<BossProductVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BossProductVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProductId()) {
        optionals.set(0);
      }
      if (struct.isSetType()) {
        optionals.set(1);
      }
      if (struct.isSetCategoryId()) {
        optionals.set(2);
      }
      if (struct.isSetClientId()) {
        optionals.set(3);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(4);
      }
      if (struct.isSetName()) {
        optionals.set(5);
      }
      if (struct.isSetFullName()) {
        optionals.set(6);
      }
      if (struct.isSetBriefIntroduction()) {
        optionals.set(7);
      }
      if (struct.isSetVipPrice()) {
        optionals.set(8);
      }
      if (struct.isSetMaxVip()) {
        optionals.set(9);
      }
      if (struct.isSetPrice()) {
        optionals.set(10);
      }
      if (struct.isSetMarketPrice()) {
        optionals.set(11);
      }
      if (struct.isSetDeliveryMoney()) {
        optionals.set(12);
      }
      if (struct.isSetStore()) {
        optionals.set(13);
      }
      if (struct.isSetMax()) {
        optionals.set(14);
      }
      if (struct.isSetWeight()) {
        optionals.set(15);
      }
      if (struct.isSetWeightUnit()) {
        optionals.set(16);
      }
      if (struct.isSetStartTime()) {
        optionals.set(17);
      }
      if (struct.isSetEndTime()) {
        optionals.set(18);
      }
      if (struct.isSetDeliveryStartTime()) {
        optionals.set(19);
      }
      if (struct.isSetDeliveryEndTime()) {
        optionals.set(20);
      }
      if (struct.isSetDeliveryOption()) {
        optionals.set(21);
      }
      if (struct.isSetBuyKnow()) {
        optionals.set(22);
      }
      if (struct.isSetIntroduction()) {
        optionals.set(23);
      }
      if (struct.isSetPlatType()) {
        optionals.set(24);
      }
      if (struct.isSetAuditStatus()) {
        optionals.set(25);
      }
      if (struct.isSetMarketableStatus()) {
        optionals.set(26);
      }
      if (struct.isSetExpireStartTime()) {
        optionals.set(27);
      }
      if (struct.isSetExpireEndTime()) {
        optionals.set(28);
      }
      if (struct.isSetVipId()) {
        optionals.set(29);
      }
      if (struct.isSetIsRemoveVipId()) {
        optionals.set(30);
      }
      if (struct.isSetCategoryName()) {
        optionals.set(31);
      }
      if (struct.isSetClientName()) {
        optionals.set(32);
      }
      if (struct.isSetVipName()) {
        optionals.set(33);
      }
      if (struct.isSetBankName()) {
        optionals.set(34);
      }
      oprot.writeBitSet(optionals, 35);
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetCategoryId()) {
        oprot.writeI64(struct.categoryId);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetFullName()) {
        oprot.writeString(struct.fullName);
      }
      if (struct.isSetBriefIntroduction()) {
        oprot.writeString(struct.briefIntroduction);
      }
      if (struct.isSetVipPrice()) {
        oprot.writeDouble(struct.vipPrice);
      }
      if (struct.isSetMaxVip()) {
        oprot.writeI32(struct.maxVip);
      }
      if (struct.isSetPrice()) {
        oprot.writeDouble(struct.price);
      }
      if (struct.isSetMarketPrice()) {
        oprot.writeDouble(struct.marketPrice);
      }
      if (struct.isSetDeliveryMoney()) {
        oprot.writeDouble(struct.deliveryMoney);
      }
      if (struct.isSetStore()) {
        oprot.writeI32(struct.store);
      }
      if (struct.isSetMax()) {
        oprot.writeI32(struct.max);
      }
      if (struct.isSetWeight()) {
        oprot.writeString(struct.weight);
      }
      if (struct.isSetWeightUnit()) {
        oprot.writeString(struct.weightUnit);
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetDeliveryStartTime()) {
        oprot.writeI64(struct.deliveryStartTime);
      }
      if (struct.isSetDeliveryEndTime()) {
        oprot.writeI64(struct.deliveryEndTime);
      }
      if (struct.isSetDeliveryOption()) {
        oprot.writeString(struct.deliveryOption);
      }
      if (struct.isSetBuyKnow()) {
        oprot.writeString(struct.buyKnow);
      }
      if (struct.isSetIntroduction()) {
        oprot.writeString(struct.introduction);
      }
      if (struct.isSetPlatType()) {
        oprot.writeString(struct.platType);
      }
      if (struct.isSetAuditStatus()) {
        oprot.writeString(struct.auditStatus);
      }
      if (struct.isSetMarketableStatus()) {
        oprot.writeString(struct.marketableStatus);
      }
      if (struct.isSetExpireStartTime()) {
        oprot.writeI64(struct.expireStartTime);
      }
      if (struct.isSetExpireEndTime()) {
        oprot.writeI64(struct.expireEndTime);
      }
      if (struct.isSetVipId()) {
        oprot.writeString(struct.vipId);
      }
      if (struct.isSetIsRemoveVipId()) {
        oprot.writeBool(struct.isRemoveVipId);
      }
      if (struct.isSetCategoryName()) {
        oprot.writeString(struct.categoryName);
      }
      if (struct.isSetClientName()) {
        oprot.writeString(struct.clientName);
      }
      if (struct.isSetVipName()) {
        oprot.writeString(struct.vipName);
      }
      if (struct.isSetBankName()) {
        oprot.writeString(struct.bankName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BossProductVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(35);
      if (incoming.get(0)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.categoryId = iprot.readI64();
        struct.setCategoryIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.fullName = iprot.readString();
        struct.setFullNameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.briefIntroduction = iprot.readString();
        struct.setBriefIntroductionIsSet(true);
      }
      if (incoming.get(8)) {
        struct.vipPrice = iprot.readDouble();
        struct.setVipPriceIsSet(true);
      }
      if (incoming.get(9)) {
        struct.maxVip = iprot.readI32();
        struct.setMaxVipIsSet(true);
      }
      if (incoming.get(10)) {
        struct.price = iprot.readDouble();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(11)) {
        struct.marketPrice = iprot.readDouble();
        struct.setMarketPriceIsSet(true);
      }
      if (incoming.get(12)) {
        struct.deliveryMoney = iprot.readDouble();
        struct.setDeliveryMoneyIsSet(true);
      }
      if (incoming.get(13)) {
        struct.store = iprot.readI32();
        struct.setStoreIsSet(true);
      }
      if (incoming.get(14)) {
        struct.max = iprot.readI32();
        struct.setMaxIsSet(true);
      }
      if (incoming.get(15)) {
        struct.weight = iprot.readString();
        struct.setWeightIsSet(true);
      }
      if (incoming.get(16)) {
        struct.weightUnit = iprot.readString();
        struct.setWeightUnitIsSet(true);
      }
      if (incoming.get(17)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.deliveryStartTime = iprot.readI64();
        struct.setDeliveryStartTimeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.deliveryEndTime = iprot.readI64();
        struct.setDeliveryEndTimeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.deliveryOption = iprot.readString();
        struct.setDeliveryOptionIsSet(true);
      }
      if (incoming.get(22)) {
        struct.buyKnow = iprot.readString();
        struct.setBuyKnowIsSet(true);
      }
      if (incoming.get(23)) {
        struct.introduction = iprot.readString();
        struct.setIntroductionIsSet(true);
      }
      if (incoming.get(24)) {
        struct.platType = iprot.readString();
        struct.setPlatTypeIsSet(true);
      }
      if (incoming.get(25)) {
        struct.auditStatus = iprot.readString();
        struct.setAuditStatusIsSet(true);
      }
      if (incoming.get(26)) {
        struct.marketableStatus = iprot.readString();
        struct.setMarketableStatusIsSet(true);
      }
      if (incoming.get(27)) {
        struct.expireStartTime = iprot.readI64();
        struct.setExpireStartTimeIsSet(true);
      }
      if (incoming.get(28)) {
        struct.expireEndTime = iprot.readI64();
        struct.setExpireEndTimeIsSet(true);
      }
      if (incoming.get(29)) {
        struct.vipId = iprot.readString();
        struct.setVipIdIsSet(true);
      }
      if (incoming.get(30)) {
        struct.isRemoveVipId = iprot.readBool();
        struct.setIsRemoveVipIdIsSet(true);
      }
      if (incoming.get(31)) {
        struct.categoryName = iprot.readString();
        struct.setCategoryNameIsSet(true);
      }
      if (incoming.get(32)) {
        struct.clientName = iprot.readString();
        struct.setClientNameIsSet(true);
      }
      if (incoming.get(33)) {
        struct.vipName = iprot.readString();
        struct.setVipNameIsSet(true);
      }
      if (incoming.get(34)) {
        struct.bankName = iprot.readString();
        struct.setBankNameIsSet(true);
      }
    }
  }

}

