/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.Business;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 运营订单交易概要信息Vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-1-7")
public class BusinessOrderTradeInfoVo implements org.apache.thrift.TBase<BusinessOrderTradeInfoVo, BusinessOrderTradeInfoVo._Fields>, java.io.Serializable, Cloneable, Comparable<BusinessOrderTradeInfoVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BusinessOrderTradeInfoVo");

  private static final org.apache.thrift.protocol.TField SETTLE_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("settleState", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SETTLEMENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("settlement_id", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SETTLEMENT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("settlementTime", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField ORDER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderType", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PRODUCT_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("productCount", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField DELIVERY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryTime", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField MONEY_LITTLE_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("moneyLittleCount", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField DELIVERY_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryOption", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField DELIVERY_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryAddress", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CONSIGNEE_FIELD_DESC = new org.apache.thrift.protocol.TField("consignee", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField DEALINE_CONSUME_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("dealineConsumeTime", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField CONSUME_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("consumeAmount", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField IS_REFUND_FIELD_DESC = new org.apache.thrift.protocol.TField("isRefund", org.apache.thrift.protocol.TType.BOOL, (short)17);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BusinessOrderTradeInfoVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BusinessOrderTradeInfoVoTupleSchemeFactory());
  }

  /**
   * 结算状态
   */
  public String settleState; // required
  /**
   * 结算账单号
   */
  public String settlement_id; // required
  /**
   * 结算时间
   */
  public long settlementTime; // required
  /**
   * 订单类型
   */
  public String orderType; // required
  /**
   * 商品名称
   */
  public String productName; // required
  /**
   * 购买数量
   */
  public int productCount; // required
  /**
   * 预计发货日期
   */
  public long deliveryTime; // required
  /**
   * 购买单价
   */
  public double price; // required
  /**
   * 金额小计
   */
  public double moneyLittleCount; // required
  /**
   * 提货方式
   */
  public String deliveryOption; // required
  /**
   * 提货网点
   */
  public String deliveryAddress; // required
  /**
   * 提（收）货人
   */
  public String consignee; // required
  /**
   * 提（收）货手机号
   */
  public String phone; // required
  /**
   * 最后消费时间
   */
  public long dealineConsumeTime; // required
  /**
   * 消费数量
   */
  public int consumeAmount; // required
  /**
   * 商品ID
   */
  public String productId; // required
  /**
   * 该商品是否退款
   */
  public boolean isRefund; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 结算状态
     */
    SETTLE_STATE((short)1, "settleState"),
    /**
     * 结算账单号
     */
    SETTLEMENT_ID((short)2, "settlement_id"),
    /**
     * 结算时间
     */
    SETTLEMENT_TIME((short)3, "settlementTime"),
    /**
     * 订单类型
     */
    ORDER_TYPE((short)4, "orderType"),
    /**
     * 商品名称
     */
    PRODUCT_NAME((short)5, "productName"),
    /**
     * 购买数量
     */
    PRODUCT_COUNT((short)6, "productCount"),
    /**
     * 预计发货日期
     */
    DELIVERY_TIME((short)7, "deliveryTime"),
    /**
     * 购买单价
     */
    PRICE((short)8, "price"),
    /**
     * 金额小计
     */
    MONEY_LITTLE_COUNT((short)9, "moneyLittleCount"),
    /**
     * 提货方式
     */
    DELIVERY_OPTION((short)10, "deliveryOption"),
    /**
     * 提货网点
     */
    DELIVERY_ADDRESS((short)11, "deliveryAddress"),
    /**
     * 提（收）货人
     */
    CONSIGNEE((short)12, "consignee"),
    /**
     * 提（收）货手机号
     */
    PHONE((short)13, "phone"),
    /**
     * 最后消费时间
     */
    DEALINE_CONSUME_TIME((short)14, "dealineConsumeTime"),
    /**
     * 消费数量
     */
    CONSUME_AMOUNT((short)15, "consumeAmount"),
    /**
     * 商品ID
     */
    PRODUCT_ID((short)16, "productId"),
    /**
     * 该商品是否退款
     */
    IS_REFUND((short)17, "isRefund");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SETTLE_STATE
          return SETTLE_STATE;
        case 2: // SETTLEMENT_ID
          return SETTLEMENT_ID;
        case 3: // SETTLEMENT_TIME
          return SETTLEMENT_TIME;
        case 4: // ORDER_TYPE
          return ORDER_TYPE;
        case 5: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 6: // PRODUCT_COUNT
          return PRODUCT_COUNT;
        case 7: // DELIVERY_TIME
          return DELIVERY_TIME;
        case 8: // PRICE
          return PRICE;
        case 9: // MONEY_LITTLE_COUNT
          return MONEY_LITTLE_COUNT;
        case 10: // DELIVERY_OPTION
          return DELIVERY_OPTION;
        case 11: // DELIVERY_ADDRESS
          return DELIVERY_ADDRESS;
        case 12: // CONSIGNEE
          return CONSIGNEE;
        case 13: // PHONE
          return PHONE;
        case 14: // DEALINE_CONSUME_TIME
          return DEALINE_CONSUME_TIME;
        case 15: // CONSUME_AMOUNT
          return CONSUME_AMOUNT;
        case 16: // PRODUCT_ID
          return PRODUCT_ID;
        case 17: // IS_REFUND
          return IS_REFUND;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SETTLEMENTTIME_ISSET_ID = 0;
  private static final int __PRODUCTCOUNT_ISSET_ID = 1;
  private static final int __DELIVERYTIME_ISSET_ID = 2;
  private static final int __PRICE_ISSET_ID = 3;
  private static final int __MONEYLITTLECOUNT_ISSET_ID = 4;
  private static final int __DEALINECONSUMETIME_ISSET_ID = 5;
  private static final int __CONSUMEAMOUNT_ISSET_ID = 6;
  private static final int __ISREFUND_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SETTLE_STATE, new org.apache.thrift.meta_data.FieldMetaData("settleState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLEMENT_ID, new org.apache.thrift.meta_data.FieldMetaData("settlement_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLEMENT_TIME, new org.apache.thrift.meta_data.FieldMetaData("settlementTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ORDER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("orderType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_COUNT, new org.apache.thrift.meta_data.FieldMetaData("productCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DELIVERY_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MONEY_LITTLE_COUNT, new org.apache.thrift.meta_data.FieldMetaData("moneyLittleCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DELIVERY_OPTION, new org.apache.thrift.meta_data.FieldMetaData("deliveryOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("deliveryAddress", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONSIGNEE, new org.apache.thrift.meta_data.FieldMetaData("consignee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEALINE_CONSUME_TIME, new org.apache.thrift.meta_data.FieldMetaData("dealineConsumeTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONSUME_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("consumeAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_REFUND, new org.apache.thrift.meta_data.FieldMetaData("isRefund", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BusinessOrderTradeInfoVo.class, metaDataMap);
  }

  public BusinessOrderTradeInfoVo() {
  }

  public BusinessOrderTradeInfoVo(
    String settleState,
    String settlement_id,
    long settlementTime,
    String orderType,
    String productName,
    int productCount,
    long deliveryTime,
    double price,
    double moneyLittleCount,
    String deliveryOption,
    String deliveryAddress,
    String consignee,
    String phone,
    long dealineConsumeTime,
    int consumeAmount,
    String productId,
    boolean isRefund)
  {
    this();
    this.settleState = settleState;
    this.settlement_id = settlement_id;
    this.settlementTime = settlementTime;
    setSettlementTimeIsSet(true);
    this.orderType = orderType;
    this.productName = productName;
    this.productCount = productCount;
    setProductCountIsSet(true);
    this.deliveryTime = deliveryTime;
    setDeliveryTimeIsSet(true);
    this.price = price;
    setPriceIsSet(true);
    this.moneyLittleCount = moneyLittleCount;
    setMoneyLittleCountIsSet(true);
    this.deliveryOption = deliveryOption;
    this.deliveryAddress = deliveryAddress;
    this.consignee = consignee;
    this.phone = phone;
    this.dealineConsumeTime = dealineConsumeTime;
    setDealineConsumeTimeIsSet(true);
    this.consumeAmount = consumeAmount;
    setConsumeAmountIsSet(true);
    this.productId = productId;
    this.isRefund = isRefund;
    setIsRefundIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BusinessOrderTradeInfoVo(BusinessOrderTradeInfoVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSettleState()) {
      this.settleState = other.settleState;
    }
    if (other.isSetSettlement_id()) {
      this.settlement_id = other.settlement_id;
    }
    this.settlementTime = other.settlementTime;
    if (other.isSetOrderType()) {
      this.orderType = other.orderType;
    }
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    this.productCount = other.productCount;
    this.deliveryTime = other.deliveryTime;
    this.price = other.price;
    this.moneyLittleCount = other.moneyLittleCount;
    if (other.isSetDeliveryOption()) {
      this.deliveryOption = other.deliveryOption;
    }
    if (other.isSetDeliveryAddress()) {
      this.deliveryAddress = other.deliveryAddress;
    }
    if (other.isSetConsignee()) {
      this.consignee = other.consignee;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    this.dealineConsumeTime = other.dealineConsumeTime;
    this.consumeAmount = other.consumeAmount;
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    this.isRefund = other.isRefund;
  }

  public BusinessOrderTradeInfoVo deepCopy() {
    return new BusinessOrderTradeInfoVo(this);
  }

  @Override
  public void clear() {
    this.settleState = null;
    this.settlement_id = null;
    setSettlementTimeIsSet(false);
    this.settlementTime = 0;
    this.orderType = null;
    this.productName = null;
    setProductCountIsSet(false);
    this.productCount = 0;
    setDeliveryTimeIsSet(false);
    this.deliveryTime = 0;
    setPriceIsSet(false);
    this.price = 0.0;
    setMoneyLittleCountIsSet(false);
    this.moneyLittleCount = 0.0;
    this.deliveryOption = null;
    this.deliveryAddress = null;
    this.consignee = null;
    this.phone = null;
    setDealineConsumeTimeIsSet(false);
    this.dealineConsumeTime = 0;
    setConsumeAmountIsSet(false);
    this.consumeAmount = 0;
    this.productId = null;
    setIsRefundIsSet(false);
    this.isRefund = false;
  }

  /**
   * 结算状态
   */
  public String getSettleState() {
    return this.settleState;
  }

  /**
   * 结算状态
   */
  public BusinessOrderTradeInfoVo setSettleState(String settleState) {
    this.settleState = settleState;
    return this;
  }

  public void unsetSettleState() {
    this.settleState = null;
  }

  /** Returns true if field settleState is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleState() {
    return this.settleState != null;
  }

  public void setSettleStateIsSet(boolean value) {
    if (!value) {
      this.settleState = null;
    }
  }

  /**
   * 结算账单号
   */
  public String getSettlement_id() {
    return this.settlement_id;
  }

  /**
   * 结算账单号
   */
  public BusinessOrderTradeInfoVo setSettlement_id(String settlement_id) {
    this.settlement_id = settlement_id;
    return this;
  }

  public void unsetSettlement_id() {
    this.settlement_id = null;
  }

  /** Returns true if field settlement_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSettlement_id() {
    return this.settlement_id != null;
  }

  public void setSettlement_idIsSet(boolean value) {
    if (!value) {
      this.settlement_id = null;
    }
  }

  /**
   * 结算时间
   */
  public long getSettlementTime() {
    return this.settlementTime;
  }

  /**
   * 结算时间
   */
  public BusinessOrderTradeInfoVo setSettlementTime(long settlementTime) {
    this.settlementTime = settlementTime;
    setSettlementTimeIsSet(true);
    return this;
  }

  public void unsetSettlementTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SETTLEMENTTIME_ISSET_ID);
  }

  /** Returns true if field settlementTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSettlementTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SETTLEMENTTIME_ISSET_ID);
  }

  public void setSettlementTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SETTLEMENTTIME_ISSET_ID, value);
  }

  /**
   * 订单类型
   */
  public String getOrderType() {
    return this.orderType;
  }

  /**
   * 订单类型
   */
  public BusinessOrderTradeInfoVo setOrderType(String orderType) {
    this.orderType = orderType;
    return this;
  }

  public void unsetOrderType() {
    this.orderType = null;
  }

  /** Returns true if field orderType is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderType() {
    return this.orderType != null;
  }

  public void setOrderTypeIsSet(boolean value) {
    if (!value) {
      this.orderType = null;
    }
  }

  /**
   * 商品名称
   */
  public String getProductName() {
    return this.productName;
  }

  /**
   * 商品名称
   */
  public BusinessOrderTradeInfoVo setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  /**
   * 购买数量
   */
  public int getProductCount() {
    return this.productCount;
  }

  /**
   * 购买数量
   */
  public BusinessOrderTradeInfoVo setProductCount(int productCount) {
    this.productCount = productCount;
    setProductCountIsSet(true);
    return this;
  }

  public void unsetProductCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRODUCTCOUNT_ISSET_ID);
  }

  /** Returns true if field productCount is set (has been assigned a value) and false otherwise */
  public boolean isSetProductCount() {
    return EncodingUtils.testBit(__isset_bitfield, __PRODUCTCOUNT_ISSET_ID);
  }

  public void setProductCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRODUCTCOUNT_ISSET_ID, value);
  }

  /**
   * 预计发货日期
   */
  public long getDeliveryTime() {
    return this.deliveryTime;
  }

  /**
   * 预计发货日期
   */
  public BusinessOrderTradeInfoVo setDeliveryTime(long deliveryTime) {
    this.deliveryTime = deliveryTime;
    setDeliveryTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYTIME_ISSET_ID);
  }

  /** Returns true if field deliveryTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYTIME_ISSET_ID);
  }

  public void setDeliveryTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYTIME_ISSET_ID, value);
  }

  /**
   * 购买单价
   */
  public double getPrice() {
    return this.price;
  }

  /**
   * 购买单价
   */
  public BusinessOrderTradeInfoVo setPrice(double price) {
    this.price = price;
    setPriceIsSet(true);
    return this;
  }

  public void unsetPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  public void setPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRICE_ISSET_ID, value);
  }

  /**
   * 金额小计
   */
  public double getMoneyLittleCount() {
    return this.moneyLittleCount;
  }

  /**
   * 金额小计
   */
  public BusinessOrderTradeInfoVo setMoneyLittleCount(double moneyLittleCount) {
    this.moneyLittleCount = moneyLittleCount;
    setMoneyLittleCountIsSet(true);
    return this;
  }

  public void unsetMoneyLittleCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MONEYLITTLECOUNT_ISSET_ID);
  }

  /** Returns true if field moneyLittleCount is set (has been assigned a value) and false otherwise */
  public boolean isSetMoneyLittleCount() {
    return EncodingUtils.testBit(__isset_bitfield, __MONEYLITTLECOUNT_ISSET_ID);
  }

  public void setMoneyLittleCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MONEYLITTLECOUNT_ISSET_ID, value);
  }

  /**
   * 提货方式
   */
  public String getDeliveryOption() {
    return this.deliveryOption;
  }

  /**
   * 提货方式
   */
  public BusinessOrderTradeInfoVo setDeliveryOption(String deliveryOption) {
    this.deliveryOption = deliveryOption;
    return this;
  }

  public void unsetDeliveryOption() {
    this.deliveryOption = null;
  }

  /** Returns true if field deliveryOption is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryOption() {
    return this.deliveryOption != null;
  }

  public void setDeliveryOptionIsSet(boolean value) {
    if (!value) {
      this.deliveryOption = null;
    }
  }

  /**
   * 提货网点
   */
  public String getDeliveryAddress() {
    return this.deliveryAddress;
  }

  /**
   * 提货网点
   */
  public BusinessOrderTradeInfoVo setDeliveryAddress(String deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
    return this;
  }

  public void unsetDeliveryAddress() {
    this.deliveryAddress = null;
  }

  /** Returns true if field deliveryAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryAddress() {
    return this.deliveryAddress != null;
  }

  public void setDeliveryAddressIsSet(boolean value) {
    if (!value) {
      this.deliveryAddress = null;
    }
  }

  /**
   * 提（收）货人
   */
  public String getConsignee() {
    return this.consignee;
  }

  /**
   * 提（收）货人
   */
  public BusinessOrderTradeInfoVo setConsignee(String consignee) {
    this.consignee = consignee;
    return this;
  }

  public void unsetConsignee() {
    this.consignee = null;
  }

  /** Returns true if field consignee is set (has been assigned a value) and false otherwise */
  public boolean isSetConsignee() {
    return this.consignee != null;
  }

  public void setConsigneeIsSet(boolean value) {
    if (!value) {
      this.consignee = null;
    }
  }

  /**
   * 提（收）货手机号
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 提（收）货手机号
   */
  public BusinessOrderTradeInfoVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 最后消费时间
   */
  public long getDealineConsumeTime() {
    return this.dealineConsumeTime;
  }

  /**
   * 最后消费时间
   */
  public BusinessOrderTradeInfoVo setDealineConsumeTime(long dealineConsumeTime) {
    this.dealineConsumeTime = dealineConsumeTime;
    setDealineConsumeTimeIsSet(true);
    return this;
  }

  public void unsetDealineConsumeTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DEALINECONSUMETIME_ISSET_ID);
  }

  /** Returns true if field dealineConsumeTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDealineConsumeTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DEALINECONSUMETIME_ISSET_ID);
  }

  public void setDealineConsumeTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DEALINECONSUMETIME_ISSET_ID, value);
  }

  /**
   * 消费数量
   */
  public int getConsumeAmount() {
    return this.consumeAmount;
  }

  /**
   * 消费数量
   */
  public BusinessOrderTradeInfoVo setConsumeAmount(int consumeAmount) {
    this.consumeAmount = consumeAmount;
    setConsumeAmountIsSet(true);
    return this;
  }

  public void unsetConsumeAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONSUMEAMOUNT_ISSET_ID);
  }

  /** Returns true if field consumeAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetConsumeAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __CONSUMEAMOUNT_ISSET_ID);
  }

  public void setConsumeAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONSUMEAMOUNT_ISSET_ID, value);
  }

  /**
   * 商品ID
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品ID
   */
  public BusinessOrderTradeInfoVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 该商品是否退款
   */
  public boolean isIsRefund() {
    return this.isRefund;
  }

  /**
   * 该商品是否退款
   */
  public BusinessOrderTradeInfoVo setIsRefund(boolean isRefund) {
    this.isRefund = isRefund;
    setIsRefundIsSet(true);
    return this;
  }

  public void unsetIsRefund() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISREFUND_ISSET_ID);
  }

  /** Returns true if field isRefund is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRefund() {
    return EncodingUtils.testBit(__isset_bitfield, __ISREFUND_ISSET_ID);
  }

  public void setIsRefundIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISREFUND_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SETTLE_STATE:
      if (value == null) {
        unsetSettleState();
      } else {
        setSettleState((String)value);
      }
      break;

    case SETTLEMENT_ID:
      if (value == null) {
        unsetSettlement_id();
      } else {
        setSettlement_id((String)value);
      }
      break;

    case SETTLEMENT_TIME:
      if (value == null) {
        unsetSettlementTime();
      } else {
        setSettlementTime((Long)value);
      }
      break;

    case ORDER_TYPE:
      if (value == null) {
        unsetOrderType();
      } else {
        setOrderType((String)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case PRODUCT_COUNT:
      if (value == null) {
        unsetProductCount();
      } else {
        setProductCount((Integer)value);
      }
      break;

    case DELIVERY_TIME:
      if (value == null) {
        unsetDeliveryTime();
      } else {
        setDeliveryTime((Long)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((Double)value);
      }
      break;

    case MONEY_LITTLE_COUNT:
      if (value == null) {
        unsetMoneyLittleCount();
      } else {
        setMoneyLittleCount((Double)value);
      }
      break;

    case DELIVERY_OPTION:
      if (value == null) {
        unsetDeliveryOption();
      } else {
        setDeliveryOption((String)value);
      }
      break;

    case DELIVERY_ADDRESS:
      if (value == null) {
        unsetDeliveryAddress();
      } else {
        setDeliveryAddress((String)value);
      }
      break;

    case CONSIGNEE:
      if (value == null) {
        unsetConsignee();
      } else {
        setConsignee((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case DEALINE_CONSUME_TIME:
      if (value == null) {
        unsetDealineConsumeTime();
      } else {
        setDealineConsumeTime((Long)value);
      }
      break;

    case CONSUME_AMOUNT:
      if (value == null) {
        unsetConsumeAmount();
      } else {
        setConsumeAmount((Integer)value);
      }
      break;

    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case IS_REFUND:
      if (value == null) {
        unsetIsRefund();
      } else {
        setIsRefund((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SETTLE_STATE:
      return getSettleState();

    case SETTLEMENT_ID:
      return getSettlement_id();

    case SETTLEMENT_TIME:
      return Long.valueOf(getSettlementTime());

    case ORDER_TYPE:
      return getOrderType();

    case PRODUCT_NAME:
      return getProductName();

    case PRODUCT_COUNT:
      return Integer.valueOf(getProductCount());

    case DELIVERY_TIME:
      return Long.valueOf(getDeliveryTime());

    case PRICE:
      return Double.valueOf(getPrice());

    case MONEY_LITTLE_COUNT:
      return Double.valueOf(getMoneyLittleCount());

    case DELIVERY_OPTION:
      return getDeliveryOption();

    case DELIVERY_ADDRESS:
      return getDeliveryAddress();

    case CONSIGNEE:
      return getConsignee();

    case PHONE:
      return getPhone();

    case DEALINE_CONSUME_TIME:
      return Long.valueOf(getDealineConsumeTime());

    case CONSUME_AMOUNT:
      return Integer.valueOf(getConsumeAmount());

    case PRODUCT_ID:
      return getProductId();

    case IS_REFUND:
      return Boolean.valueOf(isIsRefund());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SETTLE_STATE:
      return isSetSettleState();
    case SETTLEMENT_ID:
      return isSetSettlement_id();
    case SETTLEMENT_TIME:
      return isSetSettlementTime();
    case ORDER_TYPE:
      return isSetOrderType();
    case PRODUCT_NAME:
      return isSetProductName();
    case PRODUCT_COUNT:
      return isSetProductCount();
    case DELIVERY_TIME:
      return isSetDeliveryTime();
    case PRICE:
      return isSetPrice();
    case MONEY_LITTLE_COUNT:
      return isSetMoneyLittleCount();
    case DELIVERY_OPTION:
      return isSetDeliveryOption();
    case DELIVERY_ADDRESS:
      return isSetDeliveryAddress();
    case CONSIGNEE:
      return isSetConsignee();
    case PHONE:
      return isSetPhone();
    case DEALINE_CONSUME_TIME:
      return isSetDealineConsumeTime();
    case CONSUME_AMOUNT:
      return isSetConsumeAmount();
    case PRODUCT_ID:
      return isSetProductId();
    case IS_REFUND:
      return isSetIsRefund();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BusinessOrderTradeInfoVo)
      return this.equals((BusinessOrderTradeInfoVo)that);
    return false;
  }

  public boolean equals(BusinessOrderTradeInfoVo that) {
    if (that == null)
      return false;

    boolean this_present_settleState = true && this.isSetSettleState();
    boolean that_present_settleState = true && that.isSetSettleState();
    if (this_present_settleState || that_present_settleState) {
      if (!(this_present_settleState && that_present_settleState))
        return false;
      if (!this.settleState.equals(that.settleState))
        return false;
    }

    boolean this_present_settlement_id = true && this.isSetSettlement_id();
    boolean that_present_settlement_id = true && that.isSetSettlement_id();
    if (this_present_settlement_id || that_present_settlement_id) {
      if (!(this_present_settlement_id && that_present_settlement_id))
        return false;
      if (!this.settlement_id.equals(that.settlement_id))
        return false;
    }

    boolean this_present_settlementTime = true;
    boolean that_present_settlementTime = true;
    if (this_present_settlementTime || that_present_settlementTime) {
      if (!(this_present_settlementTime && that_present_settlementTime))
        return false;
      if (this.settlementTime != that.settlementTime)
        return false;
    }

    boolean this_present_orderType = true && this.isSetOrderType();
    boolean that_present_orderType = true && that.isSetOrderType();
    if (this_present_orderType || that_present_orderType) {
      if (!(this_present_orderType && that_present_orderType))
        return false;
      if (!this.orderType.equals(that.orderType))
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_productCount = true;
    boolean that_present_productCount = true;
    if (this_present_productCount || that_present_productCount) {
      if (!(this_present_productCount && that_present_productCount))
        return false;
      if (this.productCount != that.productCount)
        return false;
    }

    boolean this_present_deliveryTime = true;
    boolean that_present_deliveryTime = true;
    if (this_present_deliveryTime || that_present_deliveryTime) {
      if (!(this_present_deliveryTime && that_present_deliveryTime))
        return false;
      if (this.deliveryTime != that.deliveryTime)
        return false;
    }

    boolean this_present_price = true;
    boolean that_present_price = true;
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (this.price != that.price)
        return false;
    }

    boolean this_present_moneyLittleCount = true;
    boolean that_present_moneyLittleCount = true;
    if (this_present_moneyLittleCount || that_present_moneyLittleCount) {
      if (!(this_present_moneyLittleCount && that_present_moneyLittleCount))
        return false;
      if (this.moneyLittleCount != that.moneyLittleCount)
        return false;
    }

    boolean this_present_deliveryOption = true && this.isSetDeliveryOption();
    boolean that_present_deliveryOption = true && that.isSetDeliveryOption();
    if (this_present_deliveryOption || that_present_deliveryOption) {
      if (!(this_present_deliveryOption && that_present_deliveryOption))
        return false;
      if (!this.deliveryOption.equals(that.deliveryOption))
        return false;
    }

    boolean this_present_deliveryAddress = true && this.isSetDeliveryAddress();
    boolean that_present_deliveryAddress = true && that.isSetDeliveryAddress();
    if (this_present_deliveryAddress || that_present_deliveryAddress) {
      if (!(this_present_deliveryAddress && that_present_deliveryAddress))
        return false;
      if (!this.deliveryAddress.equals(that.deliveryAddress))
        return false;
    }

    boolean this_present_consignee = true && this.isSetConsignee();
    boolean that_present_consignee = true && that.isSetConsignee();
    if (this_present_consignee || that_present_consignee) {
      if (!(this_present_consignee && that_present_consignee))
        return false;
      if (!this.consignee.equals(that.consignee))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_dealineConsumeTime = true;
    boolean that_present_dealineConsumeTime = true;
    if (this_present_dealineConsumeTime || that_present_dealineConsumeTime) {
      if (!(this_present_dealineConsumeTime && that_present_dealineConsumeTime))
        return false;
      if (this.dealineConsumeTime != that.dealineConsumeTime)
        return false;
    }

    boolean this_present_consumeAmount = true;
    boolean that_present_consumeAmount = true;
    if (this_present_consumeAmount || that_present_consumeAmount) {
      if (!(this_present_consumeAmount && that_present_consumeAmount))
        return false;
      if (this.consumeAmount != that.consumeAmount)
        return false;
    }

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_isRefund = true;
    boolean that_present_isRefund = true;
    if (this_present_isRefund || that_present_isRefund) {
      if (!(this_present_isRefund && that_present_isRefund))
        return false;
      if (this.isRefund != that.isRefund)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_settleState = true && (isSetSettleState());
    list.add(present_settleState);
    if (present_settleState)
      list.add(settleState);

    boolean present_settlement_id = true && (isSetSettlement_id());
    list.add(present_settlement_id);
    if (present_settlement_id)
      list.add(settlement_id);

    boolean present_settlementTime = true;
    list.add(present_settlementTime);
    if (present_settlementTime)
      list.add(settlementTime);

    boolean present_orderType = true && (isSetOrderType());
    list.add(present_orderType);
    if (present_orderType)
      list.add(orderType);

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_productCount = true;
    list.add(present_productCount);
    if (present_productCount)
      list.add(productCount);

    boolean present_deliveryTime = true;
    list.add(present_deliveryTime);
    if (present_deliveryTime)
      list.add(deliveryTime);

    boolean present_price = true;
    list.add(present_price);
    if (present_price)
      list.add(price);

    boolean present_moneyLittleCount = true;
    list.add(present_moneyLittleCount);
    if (present_moneyLittleCount)
      list.add(moneyLittleCount);

    boolean present_deliveryOption = true && (isSetDeliveryOption());
    list.add(present_deliveryOption);
    if (present_deliveryOption)
      list.add(deliveryOption);

    boolean present_deliveryAddress = true && (isSetDeliveryAddress());
    list.add(present_deliveryAddress);
    if (present_deliveryAddress)
      list.add(deliveryAddress);

    boolean present_consignee = true && (isSetConsignee());
    list.add(present_consignee);
    if (present_consignee)
      list.add(consignee);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_dealineConsumeTime = true;
    list.add(present_dealineConsumeTime);
    if (present_dealineConsumeTime)
      list.add(dealineConsumeTime);

    boolean present_consumeAmount = true;
    list.add(present_consumeAmount);
    if (present_consumeAmount)
      list.add(consumeAmount);

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_isRefund = true;
    list.add(present_isRefund);
    if (present_isRefund)
      list.add(isRefund);

    return list.hashCode();
  }

  @Override
  public int compareTo(BusinessOrderTradeInfoVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetSettleState()).compareTo(other.isSetSettleState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleState, other.settleState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettlement_id()).compareTo(other.isSetSettlement_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettlement_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settlement_id, other.settlement_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettlementTime()).compareTo(other.isSetSettlementTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettlementTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settlementTime, other.settlementTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderType()).compareTo(other.isSetOrderType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderType, other.orderType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductCount()).compareTo(other.isSetProductCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productCount, other.productCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryTime()).compareTo(other.isSetDeliveryTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryTime, other.deliveryTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMoneyLittleCount()).compareTo(other.isSetMoneyLittleCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMoneyLittleCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.moneyLittleCount, other.moneyLittleCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryOption()).compareTo(other.isSetDeliveryOption());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryOption()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryOption, other.deliveryOption);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryAddress()).compareTo(other.isSetDeliveryAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryAddress, other.deliveryAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsignee()).compareTo(other.isSetConsignee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsignee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consignee, other.consignee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDealineConsumeTime()).compareTo(other.isSetDealineConsumeTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDealineConsumeTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dealineConsumeTime, other.dealineConsumeTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsumeAmount()).compareTo(other.isSetConsumeAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsumeAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consumeAmount, other.consumeAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsRefund()).compareTo(other.isSetIsRefund());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRefund()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRefund, other.isRefund);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BusinessOrderTradeInfoVo(");
    boolean first = true;

    sb.append("settleState:");
    if (this.settleState == null) {
      sb.append("null");
    } else {
      sb.append(this.settleState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settlement_id:");
    if (this.settlement_id == null) {
      sb.append("null");
    } else {
      sb.append(this.settlement_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settlementTime:");
    sb.append(this.settlementTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderType:");
    if (this.orderType == null) {
      sb.append("null");
    } else {
      sb.append(this.orderType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productCount:");
    sb.append(this.productCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryTime:");
    sb.append(this.deliveryTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    sb.append(this.price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("moneyLittleCount:");
    sb.append(this.moneyLittleCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryOption:");
    if (this.deliveryOption == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryOption);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryAddress:");
    if (this.deliveryAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryAddress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("consignee:");
    if (this.consignee == null) {
      sb.append("null");
    } else {
      sb.append(this.consignee);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dealineConsumeTime:");
    sb.append(this.dealineConsumeTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("consumeAmount:");
    sb.append(this.consumeAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isRefund:");
    sb.append(this.isRefund);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BusinessOrderTradeInfoVoStandardSchemeFactory implements SchemeFactory {
    public BusinessOrderTradeInfoVoStandardScheme getScheme() {
      return new BusinessOrderTradeInfoVoStandardScheme();
    }
  }

  private static class BusinessOrderTradeInfoVoStandardScheme extends StandardScheme<BusinessOrderTradeInfoVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BusinessOrderTradeInfoVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SETTLE_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleState = iprot.readString();
              struct.setSettleStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SETTLEMENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settlement_id = iprot.readString();
              struct.setSettlement_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SETTLEMENT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.settlementTime = iprot.readI64();
              struct.setSettlementTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORDER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderType = iprot.readString();
              struct.setOrderTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PRODUCT_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productCount = iprot.readI32();
              struct.setProductCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DELIVERY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryTime = iprot.readI64();
              struct.setDeliveryTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.price = iprot.readDouble();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MONEY_LITTLE_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.moneyLittleCount = iprot.readDouble();
              struct.setMoneyLittleCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DELIVERY_OPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryOption = iprot.readString();
              struct.setDeliveryOptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DELIVERY_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryAddress = iprot.readString();
              struct.setDeliveryAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CONSIGNEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.consignee = iprot.readString();
              struct.setConsigneeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // DEALINE_CONSUME_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dealineConsumeTime = iprot.readI64();
              struct.setDealineConsumeTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CONSUME_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.consumeAmount = iprot.readI32();
              struct.setConsumeAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // IS_REFUND
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isRefund = iprot.readBool();
              struct.setIsRefundIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BusinessOrderTradeInfoVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.settleState != null) {
        oprot.writeFieldBegin(SETTLE_STATE_FIELD_DESC);
        oprot.writeString(struct.settleState);
        oprot.writeFieldEnd();
      }
      if (struct.settlement_id != null) {
        oprot.writeFieldBegin(SETTLEMENT_ID_FIELD_DESC);
        oprot.writeString(struct.settlement_id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SETTLEMENT_TIME_FIELD_DESC);
      oprot.writeI64(struct.settlementTime);
      oprot.writeFieldEnd();
      if (struct.orderType != null) {
        oprot.writeFieldBegin(ORDER_TYPE_FIELD_DESC);
        oprot.writeString(struct.orderType);
        oprot.writeFieldEnd();
      }
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRODUCT_COUNT_FIELD_DESC);
      oprot.writeI32(struct.productCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeDouble(struct.price);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MONEY_LITTLE_COUNT_FIELD_DESC);
      oprot.writeDouble(struct.moneyLittleCount);
      oprot.writeFieldEnd();
      if (struct.deliveryOption != null) {
        oprot.writeFieldBegin(DELIVERY_OPTION_FIELD_DESC);
        oprot.writeString(struct.deliveryOption);
        oprot.writeFieldEnd();
      }
      if (struct.deliveryAddress != null) {
        oprot.writeFieldBegin(DELIVERY_ADDRESS_FIELD_DESC);
        oprot.writeString(struct.deliveryAddress);
        oprot.writeFieldEnd();
      }
      if (struct.consignee != null) {
        oprot.writeFieldBegin(CONSIGNEE_FIELD_DESC);
        oprot.writeString(struct.consignee);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DEALINE_CONSUME_TIME_FIELD_DESC);
      oprot.writeI64(struct.dealineConsumeTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CONSUME_AMOUNT_FIELD_DESC);
      oprot.writeI32(struct.consumeAmount);
      oprot.writeFieldEnd();
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_REFUND_FIELD_DESC);
      oprot.writeBool(struct.isRefund);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BusinessOrderTradeInfoVoTupleSchemeFactory implements SchemeFactory {
    public BusinessOrderTradeInfoVoTupleScheme getScheme() {
      return new BusinessOrderTradeInfoVoTupleScheme();
    }
  }

  private static class BusinessOrderTradeInfoVoTupleScheme extends TupleScheme<BusinessOrderTradeInfoVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BusinessOrderTradeInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetSettleState()) {
        optionals.set(0);
      }
      if (struct.isSetSettlement_id()) {
        optionals.set(1);
      }
      if (struct.isSetSettlementTime()) {
        optionals.set(2);
      }
      if (struct.isSetOrderType()) {
        optionals.set(3);
      }
      if (struct.isSetProductName()) {
        optionals.set(4);
      }
      if (struct.isSetProductCount()) {
        optionals.set(5);
      }
      if (struct.isSetDeliveryTime()) {
        optionals.set(6);
      }
      if (struct.isSetPrice()) {
        optionals.set(7);
      }
      if (struct.isSetMoneyLittleCount()) {
        optionals.set(8);
      }
      if (struct.isSetDeliveryOption()) {
        optionals.set(9);
      }
      if (struct.isSetDeliveryAddress()) {
        optionals.set(10);
      }
      if (struct.isSetConsignee()) {
        optionals.set(11);
      }
      if (struct.isSetPhone()) {
        optionals.set(12);
      }
      if (struct.isSetDealineConsumeTime()) {
        optionals.set(13);
      }
      if (struct.isSetConsumeAmount()) {
        optionals.set(14);
      }
      if (struct.isSetProductId()) {
        optionals.set(15);
      }
      if (struct.isSetIsRefund()) {
        optionals.set(16);
      }
      oprot.writeBitSet(optionals, 17);
      if (struct.isSetSettleState()) {
        oprot.writeString(struct.settleState);
      }
      if (struct.isSetSettlement_id()) {
        oprot.writeString(struct.settlement_id);
      }
      if (struct.isSetSettlementTime()) {
        oprot.writeI64(struct.settlementTime);
      }
      if (struct.isSetOrderType()) {
        oprot.writeString(struct.orderType);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetProductCount()) {
        oprot.writeI32(struct.productCount);
      }
      if (struct.isSetDeliveryTime()) {
        oprot.writeI64(struct.deliveryTime);
      }
      if (struct.isSetPrice()) {
        oprot.writeDouble(struct.price);
      }
      if (struct.isSetMoneyLittleCount()) {
        oprot.writeDouble(struct.moneyLittleCount);
      }
      if (struct.isSetDeliveryOption()) {
        oprot.writeString(struct.deliveryOption);
      }
      if (struct.isSetDeliveryAddress()) {
        oprot.writeString(struct.deliveryAddress);
      }
      if (struct.isSetConsignee()) {
        oprot.writeString(struct.consignee);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetDealineConsumeTime()) {
        oprot.writeI64(struct.dealineConsumeTime);
      }
      if (struct.isSetConsumeAmount()) {
        oprot.writeI32(struct.consumeAmount);
      }
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetIsRefund()) {
        oprot.writeBool(struct.isRefund);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BusinessOrderTradeInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(17);
      if (incoming.get(0)) {
        struct.settleState = iprot.readString();
        struct.setSettleStateIsSet(true);
      }
      if (incoming.get(1)) {
        struct.settlement_id = iprot.readString();
        struct.setSettlement_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.settlementTime = iprot.readI64();
        struct.setSettlementTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.orderType = iprot.readString();
        struct.setOrderTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.productCount = iprot.readI32();
        struct.setProductCountIsSet(true);
      }
      if (incoming.get(6)) {
        struct.deliveryTime = iprot.readI64();
        struct.setDeliveryTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.price = iprot.readDouble();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(8)) {
        struct.moneyLittleCount = iprot.readDouble();
        struct.setMoneyLittleCountIsSet(true);
      }
      if (incoming.get(9)) {
        struct.deliveryOption = iprot.readString();
        struct.setDeliveryOptionIsSet(true);
      }
      if (incoming.get(10)) {
        struct.deliveryAddress = iprot.readString();
        struct.setDeliveryAddressIsSet(true);
      }
      if (incoming.get(11)) {
        struct.consignee = iprot.readString();
        struct.setConsigneeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(13)) {
        struct.dealineConsumeTime = iprot.readI64();
        struct.setDealineConsumeTimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.consumeAmount = iprot.readI32();
        struct.setConsumeAmountIsSet(true);
      }
      if (incoming.get(15)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(16)) {
        struct.isRefund = iprot.readBool();
        struct.setIsRefundIsSet(true);
      }
    }
  }

}

