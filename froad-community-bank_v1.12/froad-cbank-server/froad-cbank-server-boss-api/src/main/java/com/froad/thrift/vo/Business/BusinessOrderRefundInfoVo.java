/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.Business;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 运营订单退款信息 Vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-12-18")
public class BusinessOrderRefundInfoVo implements org.apache.thrift.TBase<BusinessOrderRefundInfoVo, BusinessOrderRefundInfoVo._Fields>, java.io.Serializable, Cloneable, Comparable<BusinessOrderRefundInfoVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BusinessOrderRefundInfoVo");

  private static final org.apache.thrift.protocol.TField REFUND_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("refundId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField REFUND_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("refundStatus", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField REFUND_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("refundValue", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField REFUND_POINT_FIELD_DESC = new org.apache.thrift.protocol.TField("refundPoint", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField APPLY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("applyTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField REFUND_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("refundTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField REFUND_DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("refundDesc", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PRODUCT_ID_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("productIdList", org.apache.thrift.protocol.TType.LIST, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BusinessOrderRefundInfoVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BusinessOrderRefundInfoVoTupleSchemeFactory());
  }

  /**
   * 退款编号
   */
  public String refundId; // required
  /**
   * 退款状态 1:待处理;2:退款中;3:退款完成;4:退款失败;5:异常处理完成;6:商户审核中;7:商户审核拒绝;8:商户审核通过
   */
  public String refundStatus; // required
  /**
   * 退款金额
   */
  public String refundValue; // required
  /**
   * 退款积分
   */
  public String refundPoint; // required
  /**
   * 申请时间
   */
  public long applyTime; // required
  /**
   * 退款时间
   */
  public long refundTime; // required
  /**
   * 退款说明
   */
  public String refundDesc; // required
  /**
   * 退款对应的商品Id
   */
  public List<String> productIdList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 退款编号
     */
    REFUND_ID((short)1, "refundId"),
    /**
     * 退款状态 1:待处理;2:退款中;3:退款完成;4:退款失败;5:异常处理完成;6:商户审核中;7:商户审核拒绝;8:商户审核通过
     */
    REFUND_STATUS((short)2, "refundStatus"),
    /**
     * 退款金额
     */
    REFUND_VALUE((short)3, "refundValue"),
    /**
     * 退款积分
     */
    REFUND_POINT((short)4, "refundPoint"),
    /**
     * 申请时间
     */
    APPLY_TIME((short)5, "applyTime"),
    /**
     * 退款时间
     */
    REFUND_TIME((short)6, "refundTime"),
    /**
     * 退款说明
     */
    REFUND_DESC((short)7, "refundDesc"),
    /**
     * 退款对应的商品Id
     */
    PRODUCT_ID_LIST((short)8, "productIdList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // REFUND_ID
          return REFUND_ID;
        case 2: // REFUND_STATUS
          return REFUND_STATUS;
        case 3: // REFUND_VALUE
          return REFUND_VALUE;
        case 4: // REFUND_POINT
          return REFUND_POINT;
        case 5: // APPLY_TIME
          return APPLY_TIME;
        case 6: // REFUND_TIME
          return REFUND_TIME;
        case 7: // REFUND_DESC
          return REFUND_DESC;
        case 8: // PRODUCT_ID_LIST
          return PRODUCT_ID_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __APPLYTIME_ISSET_ID = 0;
  private static final int __REFUNDTIME_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.REFUND_ID, new org.apache.thrift.meta_data.FieldMetaData("refundId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFUND_STATUS, new org.apache.thrift.meta_data.FieldMetaData("refundStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFUND_VALUE, new org.apache.thrift.meta_data.FieldMetaData("refundValue", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFUND_POINT, new org.apache.thrift.meta_data.FieldMetaData("refundPoint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLY_TIME, new org.apache.thrift.meta_data.FieldMetaData("applyTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.REFUND_TIME, new org.apache.thrift.meta_data.FieldMetaData("refundTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.REFUND_DESC, new org.apache.thrift.meta_data.FieldMetaData("refundDesc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_ID_LIST, new org.apache.thrift.meta_data.FieldMetaData("productIdList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BusinessOrderRefundInfoVo.class, metaDataMap);
  }

  public BusinessOrderRefundInfoVo() {
  }

  public BusinessOrderRefundInfoVo(
    String refundId,
    String refundStatus,
    String refundValue,
    String refundPoint,
    long applyTime,
    long refundTime,
    String refundDesc,
    List<String> productIdList)
  {
    this();
    this.refundId = refundId;
    this.refundStatus = refundStatus;
    this.refundValue = refundValue;
    this.refundPoint = refundPoint;
    this.applyTime = applyTime;
    setApplyTimeIsSet(true);
    this.refundTime = refundTime;
    setRefundTimeIsSet(true);
    this.refundDesc = refundDesc;
    this.productIdList = productIdList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BusinessOrderRefundInfoVo(BusinessOrderRefundInfoVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetRefundId()) {
      this.refundId = other.refundId;
    }
    if (other.isSetRefundStatus()) {
      this.refundStatus = other.refundStatus;
    }
    if (other.isSetRefundValue()) {
      this.refundValue = other.refundValue;
    }
    if (other.isSetRefundPoint()) {
      this.refundPoint = other.refundPoint;
    }
    this.applyTime = other.applyTime;
    this.refundTime = other.refundTime;
    if (other.isSetRefundDesc()) {
      this.refundDesc = other.refundDesc;
    }
    if (other.isSetProductIdList()) {
      List<String> __this__productIdList = new ArrayList<String>(other.productIdList);
      this.productIdList = __this__productIdList;
    }
  }

  public BusinessOrderRefundInfoVo deepCopy() {
    return new BusinessOrderRefundInfoVo(this);
  }

  @Override
  public void clear() {
    this.refundId = null;
    this.refundStatus = null;
    this.refundValue = null;
    this.refundPoint = null;
    setApplyTimeIsSet(false);
    this.applyTime = 0;
    setRefundTimeIsSet(false);
    this.refundTime = 0;
    this.refundDesc = null;
    this.productIdList = null;
  }

  /**
   * 退款编号
   */
  public String getRefundId() {
    return this.refundId;
  }

  /**
   * 退款编号
   */
  public BusinessOrderRefundInfoVo setRefundId(String refundId) {
    this.refundId = refundId;
    return this;
  }

  public void unsetRefundId() {
    this.refundId = null;
  }

  /** Returns true if field refundId is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundId() {
    return this.refundId != null;
  }

  public void setRefundIdIsSet(boolean value) {
    if (!value) {
      this.refundId = null;
    }
  }

  /**
   * 退款状态 1:待处理;2:退款中;3:退款完成;4:退款失败;5:异常处理完成;6:商户审核中;7:商户审核拒绝;8:商户审核通过
   */
  public String getRefundStatus() {
    return this.refundStatus;
  }

  /**
   * 退款状态 1:待处理;2:退款中;3:退款完成;4:退款失败;5:异常处理完成;6:商户审核中;7:商户审核拒绝;8:商户审核通过
   */
  public BusinessOrderRefundInfoVo setRefundStatus(String refundStatus) {
    this.refundStatus = refundStatus;
    return this;
  }

  public void unsetRefundStatus() {
    this.refundStatus = null;
  }

  /** Returns true if field refundStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundStatus() {
    return this.refundStatus != null;
  }

  public void setRefundStatusIsSet(boolean value) {
    if (!value) {
      this.refundStatus = null;
    }
  }

  /**
   * 退款金额
   */
  public String getRefundValue() {
    return this.refundValue;
  }

  /**
   * 退款金额
   */
  public BusinessOrderRefundInfoVo setRefundValue(String refundValue) {
    this.refundValue = refundValue;
    return this;
  }

  public void unsetRefundValue() {
    this.refundValue = null;
  }

  /** Returns true if field refundValue is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundValue() {
    return this.refundValue != null;
  }

  public void setRefundValueIsSet(boolean value) {
    if (!value) {
      this.refundValue = null;
    }
  }

  /**
   * 退款积分
   */
  public String getRefundPoint() {
    return this.refundPoint;
  }

  /**
   * 退款积分
   */
  public BusinessOrderRefundInfoVo setRefundPoint(String refundPoint) {
    this.refundPoint = refundPoint;
    return this;
  }

  public void unsetRefundPoint() {
    this.refundPoint = null;
  }

  /** Returns true if field refundPoint is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundPoint() {
    return this.refundPoint != null;
  }

  public void setRefundPointIsSet(boolean value) {
    if (!value) {
      this.refundPoint = null;
    }
  }

  /**
   * 申请时间
   */
  public long getApplyTime() {
    return this.applyTime;
  }

  /**
   * 申请时间
   */
  public BusinessOrderRefundInfoVo setApplyTime(long applyTime) {
    this.applyTime = applyTime;
    setApplyTimeIsSet(true);
    return this;
  }

  public void unsetApplyTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPLYTIME_ISSET_ID);
  }

  /** Returns true if field applyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyTime() {
    return EncodingUtils.testBit(__isset_bitfield, __APPLYTIME_ISSET_ID);
  }

  public void setApplyTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPLYTIME_ISSET_ID, value);
  }

  /**
   * 退款时间
   */
  public long getRefundTime() {
    return this.refundTime;
  }

  /**
   * 退款时间
   */
  public BusinessOrderRefundInfoVo setRefundTime(long refundTime) {
    this.refundTime = refundTime;
    setRefundTimeIsSet(true);
    return this;
  }

  public void unsetRefundTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REFUNDTIME_ISSET_ID);
  }

  /** Returns true if field refundTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundTime() {
    return EncodingUtils.testBit(__isset_bitfield, __REFUNDTIME_ISSET_ID);
  }

  public void setRefundTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REFUNDTIME_ISSET_ID, value);
  }

  /**
   * 退款说明
   */
  public String getRefundDesc() {
    return this.refundDesc;
  }

  /**
   * 退款说明
   */
  public BusinessOrderRefundInfoVo setRefundDesc(String refundDesc) {
    this.refundDesc = refundDesc;
    return this;
  }

  public void unsetRefundDesc() {
    this.refundDesc = null;
  }

  /** Returns true if field refundDesc is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundDesc() {
    return this.refundDesc != null;
  }

  public void setRefundDescIsSet(boolean value) {
    if (!value) {
      this.refundDesc = null;
    }
  }

  public int getProductIdListSize() {
    return (this.productIdList == null) ? 0 : this.productIdList.size();
  }

  public java.util.Iterator<String> getProductIdListIterator() {
    return (this.productIdList == null) ? null : this.productIdList.iterator();
  }

  public void addToProductIdList(String elem) {
    if (this.productIdList == null) {
      this.productIdList = new ArrayList<String>();
    }
    this.productIdList.add(elem);
  }

  /**
   * 退款对应的商品Id
   */
  public List<String> getProductIdList() {
    return this.productIdList;
  }

  /**
   * 退款对应的商品Id
   */
  public BusinessOrderRefundInfoVo setProductIdList(List<String> productIdList) {
    this.productIdList = productIdList;
    return this;
  }

  public void unsetProductIdList() {
    this.productIdList = null;
  }

  /** Returns true if field productIdList is set (has been assigned a value) and false otherwise */
  public boolean isSetProductIdList() {
    return this.productIdList != null;
  }

  public void setProductIdListIsSet(boolean value) {
    if (!value) {
      this.productIdList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case REFUND_ID:
      if (value == null) {
        unsetRefundId();
      } else {
        setRefundId((String)value);
      }
      break;

    case REFUND_STATUS:
      if (value == null) {
        unsetRefundStatus();
      } else {
        setRefundStatus((String)value);
      }
      break;

    case REFUND_VALUE:
      if (value == null) {
        unsetRefundValue();
      } else {
        setRefundValue((String)value);
      }
      break;

    case REFUND_POINT:
      if (value == null) {
        unsetRefundPoint();
      } else {
        setRefundPoint((String)value);
      }
      break;

    case APPLY_TIME:
      if (value == null) {
        unsetApplyTime();
      } else {
        setApplyTime((Long)value);
      }
      break;

    case REFUND_TIME:
      if (value == null) {
        unsetRefundTime();
      } else {
        setRefundTime((Long)value);
      }
      break;

    case REFUND_DESC:
      if (value == null) {
        unsetRefundDesc();
      } else {
        setRefundDesc((String)value);
      }
      break;

    case PRODUCT_ID_LIST:
      if (value == null) {
        unsetProductIdList();
      } else {
        setProductIdList((List<String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case REFUND_ID:
      return getRefundId();

    case REFUND_STATUS:
      return getRefundStatus();

    case REFUND_VALUE:
      return getRefundValue();

    case REFUND_POINT:
      return getRefundPoint();

    case APPLY_TIME:
      return Long.valueOf(getApplyTime());

    case REFUND_TIME:
      return Long.valueOf(getRefundTime());

    case REFUND_DESC:
      return getRefundDesc();

    case PRODUCT_ID_LIST:
      return getProductIdList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case REFUND_ID:
      return isSetRefundId();
    case REFUND_STATUS:
      return isSetRefundStatus();
    case REFUND_VALUE:
      return isSetRefundValue();
    case REFUND_POINT:
      return isSetRefundPoint();
    case APPLY_TIME:
      return isSetApplyTime();
    case REFUND_TIME:
      return isSetRefundTime();
    case REFUND_DESC:
      return isSetRefundDesc();
    case PRODUCT_ID_LIST:
      return isSetProductIdList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BusinessOrderRefundInfoVo)
      return this.equals((BusinessOrderRefundInfoVo)that);
    return false;
  }

  public boolean equals(BusinessOrderRefundInfoVo that) {
    if (that == null)
      return false;

    boolean this_present_refundId = true && this.isSetRefundId();
    boolean that_present_refundId = true && that.isSetRefundId();
    if (this_present_refundId || that_present_refundId) {
      if (!(this_present_refundId && that_present_refundId))
        return false;
      if (!this.refundId.equals(that.refundId))
        return false;
    }

    boolean this_present_refundStatus = true && this.isSetRefundStatus();
    boolean that_present_refundStatus = true && that.isSetRefundStatus();
    if (this_present_refundStatus || that_present_refundStatus) {
      if (!(this_present_refundStatus && that_present_refundStatus))
        return false;
      if (!this.refundStatus.equals(that.refundStatus))
        return false;
    }

    boolean this_present_refundValue = true && this.isSetRefundValue();
    boolean that_present_refundValue = true && that.isSetRefundValue();
    if (this_present_refundValue || that_present_refundValue) {
      if (!(this_present_refundValue && that_present_refundValue))
        return false;
      if (!this.refundValue.equals(that.refundValue))
        return false;
    }

    boolean this_present_refundPoint = true && this.isSetRefundPoint();
    boolean that_present_refundPoint = true && that.isSetRefundPoint();
    if (this_present_refundPoint || that_present_refundPoint) {
      if (!(this_present_refundPoint && that_present_refundPoint))
        return false;
      if (!this.refundPoint.equals(that.refundPoint))
        return false;
    }

    boolean this_present_applyTime = true;
    boolean that_present_applyTime = true;
    if (this_present_applyTime || that_present_applyTime) {
      if (!(this_present_applyTime && that_present_applyTime))
        return false;
      if (this.applyTime != that.applyTime)
        return false;
    }

    boolean this_present_refundTime = true;
    boolean that_present_refundTime = true;
    if (this_present_refundTime || that_present_refundTime) {
      if (!(this_present_refundTime && that_present_refundTime))
        return false;
      if (this.refundTime != that.refundTime)
        return false;
    }

    boolean this_present_refundDesc = true && this.isSetRefundDesc();
    boolean that_present_refundDesc = true && that.isSetRefundDesc();
    if (this_present_refundDesc || that_present_refundDesc) {
      if (!(this_present_refundDesc && that_present_refundDesc))
        return false;
      if (!this.refundDesc.equals(that.refundDesc))
        return false;
    }

    boolean this_present_productIdList = true && this.isSetProductIdList();
    boolean that_present_productIdList = true && that.isSetProductIdList();
    if (this_present_productIdList || that_present_productIdList) {
      if (!(this_present_productIdList && that_present_productIdList))
        return false;
      if (!this.productIdList.equals(that.productIdList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_refundId = true && (isSetRefundId());
    list.add(present_refundId);
    if (present_refundId)
      list.add(refundId);

    boolean present_refundStatus = true && (isSetRefundStatus());
    list.add(present_refundStatus);
    if (present_refundStatus)
      list.add(refundStatus);

    boolean present_refundValue = true && (isSetRefundValue());
    list.add(present_refundValue);
    if (present_refundValue)
      list.add(refundValue);

    boolean present_refundPoint = true && (isSetRefundPoint());
    list.add(present_refundPoint);
    if (present_refundPoint)
      list.add(refundPoint);

    boolean present_applyTime = true;
    list.add(present_applyTime);
    if (present_applyTime)
      list.add(applyTime);

    boolean present_refundTime = true;
    list.add(present_refundTime);
    if (present_refundTime)
      list.add(refundTime);

    boolean present_refundDesc = true && (isSetRefundDesc());
    list.add(present_refundDesc);
    if (present_refundDesc)
      list.add(refundDesc);

    boolean present_productIdList = true && (isSetProductIdList());
    list.add(present_productIdList);
    if (present_productIdList)
      list.add(productIdList);

    return list.hashCode();
  }

  @Override
  public int compareTo(BusinessOrderRefundInfoVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetRefundId()).compareTo(other.isSetRefundId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundId, other.refundId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundStatus()).compareTo(other.isSetRefundStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundStatus, other.refundStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundValue()).compareTo(other.isSetRefundValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundValue, other.refundValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundPoint()).compareTo(other.isSetRefundPoint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundPoint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundPoint, other.refundPoint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplyTime()).compareTo(other.isSetApplyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyTime, other.applyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundTime()).compareTo(other.isSetRefundTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundTime, other.refundTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundDesc()).compareTo(other.isSetRefundDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundDesc, other.refundDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductIdList()).compareTo(other.isSetProductIdList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductIdList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productIdList, other.productIdList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BusinessOrderRefundInfoVo(");
    boolean first = true;

    sb.append("refundId:");
    if (this.refundId == null) {
      sb.append("null");
    } else {
      sb.append(this.refundId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundStatus:");
    if (this.refundStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.refundStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundValue:");
    if (this.refundValue == null) {
      sb.append("null");
    } else {
      sb.append(this.refundValue);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundPoint:");
    if (this.refundPoint == null) {
      sb.append("null");
    } else {
      sb.append(this.refundPoint);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyTime:");
    sb.append(this.applyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundTime:");
    sb.append(this.refundTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundDesc:");
    if (this.refundDesc == null) {
      sb.append("null");
    } else {
      sb.append(this.refundDesc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productIdList:");
    if (this.productIdList == null) {
      sb.append("null");
    } else {
      sb.append(this.productIdList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BusinessOrderRefundInfoVoStandardSchemeFactory implements SchemeFactory {
    public BusinessOrderRefundInfoVoStandardScheme getScheme() {
      return new BusinessOrderRefundInfoVoStandardScheme();
    }
  }

  private static class BusinessOrderRefundInfoVoStandardScheme extends StandardScheme<BusinessOrderRefundInfoVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BusinessOrderRefundInfoVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // REFUND_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundId = iprot.readString();
              struct.setRefundIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // REFUND_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundStatus = iprot.readString();
              struct.setRefundStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REFUND_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundValue = iprot.readString();
              struct.setRefundValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // REFUND_POINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundPoint = iprot.readString();
              struct.setRefundPointIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // APPLY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.applyTime = iprot.readI64();
              struct.setApplyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // REFUND_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.refundTime = iprot.readI64();
              struct.setRefundTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // REFUND_DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundDesc = iprot.readString();
              struct.setRefundDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PRODUCT_ID_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.productIdList = new ArrayList<String>(_list8.size);
                String _elem9;
                for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                {
                  _elem9 = iprot.readString();
                  struct.productIdList.add(_elem9);
                }
                iprot.readListEnd();
              }
              struct.setProductIdListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BusinessOrderRefundInfoVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.refundId != null) {
        oprot.writeFieldBegin(REFUND_ID_FIELD_DESC);
        oprot.writeString(struct.refundId);
        oprot.writeFieldEnd();
      }
      if (struct.refundStatus != null) {
        oprot.writeFieldBegin(REFUND_STATUS_FIELD_DESC);
        oprot.writeString(struct.refundStatus);
        oprot.writeFieldEnd();
      }
      if (struct.refundValue != null) {
        oprot.writeFieldBegin(REFUND_VALUE_FIELD_DESC);
        oprot.writeString(struct.refundValue);
        oprot.writeFieldEnd();
      }
      if (struct.refundPoint != null) {
        oprot.writeFieldBegin(REFUND_POINT_FIELD_DESC);
        oprot.writeString(struct.refundPoint);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(APPLY_TIME_FIELD_DESC);
      oprot.writeI64(struct.applyTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REFUND_TIME_FIELD_DESC);
      oprot.writeI64(struct.refundTime);
      oprot.writeFieldEnd();
      if (struct.refundDesc != null) {
        oprot.writeFieldBegin(REFUND_DESC_FIELD_DESC);
        oprot.writeString(struct.refundDesc);
        oprot.writeFieldEnd();
      }
      if (struct.productIdList != null) {
        oprot.writeFieldBegin(PRODUCT_ID_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.productIdList.size()));
          for (String _iter11 : struct.productIdList)
          {
            oprot.writeString(_iter11);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BusinessOrderRefundInfoVoTupleSchemeFactory implements SchemeFactory {
    public BusinessOrderRefundInfoVoTupleScheme getScheme() {
      return new BusinessOrderRefundInfoVoTupleScheme();
    }
  }

  private static class BusinessOrderRefundInfoVoTupleScheme extends TupleScheme<BusinessOrderRefundInfoVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BusinessOrderRefundInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetRefundId()) {
        optionals.set(0);
      }
      if (struct.isSetRefundStatus()) {
        optionals.set(1);
      }
      if (struct.isSetRefundValue()) {
        optionals.set(2);
      }
      if (struct.isSetRefundPoint()) {
        optionals.set(3);
      }
      if (struct.isSetApplyTime()) {
        optionals.set(4);
      }
      if (struct.isSetRefundTime()) {
        optionals.set(5);
      }
      if (struct.isSetRefundDesc()) {
        optionals.set(6);
      }
      if (struct.isSetProductIdList()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetRefundId()) {
        oprot.writeString(struct.refundId);
      }
      if (struct.isSetRefundStatus()) {
        oprot.writeString(struct.refundStatus);
      }
      if (struct.isSetRefundValue()) {
        oprot.writeString(struct.refundValue);
      }
      if (struct.isSetRefundPoint()) {
        oprot.writeString(struct.refundPoint);
      }
      if (struct.isSetApplyTime()) {
        oprot.writeI64(struct.applyTime);
      }
      if (struct.isSetRefundTime()) {
        oprot.writeI64(struct.refundTime);
      }
      if (struct.isSetRefundDesc()) {
        oprot.writeString(struct.refundDesc);
      }
      if (struct.isSetProductIdList()) {
        {
          oprot.writeI32(struct.productIdList.size());
          for (String _iter12 : struct.productIdList)
          {
            oprot.writeString(_iter12);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BusinessOrderRefundInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.refundId = iprot.readString();
        struct.setRefundIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.refundStatus = iprot.readString();
        struct.setRefundStatusIsSet(true);
      }
      if (incoming.get(2)) {
        struct.refundValue = iprot.readString();
        struct.setRefundValueIsSet(true);
      }
      if (incoming.get(3)) {
        struct.refundPoint = iprot.readString();
        struct.setRefundPointIsSet(true);
      }
      if (incoming.get(4)) {
        struct.applyTime = iprot.readI64();
        struct.setApplyTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.refundTime = iprot.readI64();
        struct.setRefundTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.refundDesc = iprot.readString();
        struct.setRefundDescIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.productIdList = new ArrayList<String>(_list13.size);
          String _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = iprot.readString();
            struct.productIdList.add(_elem14);
          }
        }
        struct.setProductIdListIsSet(true);
      }
    }
  }

}

