/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.providerorder;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-12-28")
public class ProviderOrderQueryVo implements org.apache.thrift.TBase<ProviderOrderQueryVo, ProviderOrderQueryVo._Fields>, java.io.Serializable, Cloneable, Comparable<ProviderOrderQueryVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProviderOrderQueryVo");

  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MEMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("memberCode", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField TOTAL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField RECV_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("recvAddress", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField SHIPPING_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("shippingStatus", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SHIPPING_CORP_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("shippingCorpCode", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField SHIPPING_CORP_FIELD_DESC = new org.apache.thrift.protocol.TField("shippingCorp", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField SHIPPING_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("shippingId", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField INPUT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("inputTime", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField ORDER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("orderStatus", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField CLIENT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("clientName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField SUB_ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("subOrderId", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField CONSIGNEE_FIELD_DESC = new org.apache.thrift.protocol.TField("consignee", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField PRODUCT_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("productInfo", org.apache.thrift.protocol.TType.STRING, (short)17);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProviderOrderQueryVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProviderOrderQueryVoTupleSchemeFactory());
  }

  /**
   * 订单编号 *
   */
  public String orderId; // optional
  /**
   * 用户编号 *
   */
  public long memberCode; // optional
  /**
   * 用户手机号 *
   */
  public String phone; // optional
  /**
   * 订单总金额 *
   */
  public double totalPrice; // optional
  /**
   * 创建时间 *
   */
  public long createTime; // optional
  /**
   * 客户端ID *
   */
  public String clientId; // optional
  /**
   * 收货地址 *
   */
  public String recvAddress; // optional
  /**
   * 发货状态 *
   */
  public String shippingStatus; // optional
  /**
   * 物流公司编号 *
   */
  public String shippingCorpCode; // optional
  /**
   * 物流公司名称 *
   */
  public String shippingCorp; // optional
  /**
   * 物流单号 *
   */
  public String shippingId; // optional
  /**
   * 上传时间 *
   */
  public long inputTime; // optional
  /**
   * 订单状态 *
   */
  public String orderStatus; // optional
  /**
   * 客户端ID *
   */
  public String clientName; // optional
  /**
   * 子订单编号 *
   */
  public String subOrderId; // optional
  /**
   * 收货人姓名 *
   */
  public String consignee; // optional
  /**
   * 商品信息 *
   */
  public String productInfo; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 订单编号 *
     */
    ORDER_ID((short)1, "orderId"),
    /**
     * 用户编号 *
     */
    MEMBER_CODE((short)2, "memberCode"),
    /**
     * 用户手机号 *
     */
    PHONE((short)3, "phone"),
    /**
     * 订单总金额 *
     */
    TOTAL_PRICE((short)4, "totalPrice"),
    /**
     * 创建时间 *
     */
    CREATE_TIME((short)5, "createTime"),
    /**
     * 客户端ID *
     */
    CLIENT_ID((short)6, "clientId"),
    /**
     * 收货地址 *
     */
    RECV_ADDRESS((short)7, "recvAddress"),
    /**
     * 发货状态 *
     */
    SHIPPING_STATUS((short)8, "shippingStatus"),
    /**
     * 物流公司编号 *
     */
    SHIPPING_CORP_CODE((short)9, "shippingCorpCode"),
    /**
     * 物流公司名称 *
     */
    SHIPPING_CORP((short)10, "shippingCorp"),
    /**
     * 物流单号 *
     */
    SHIPPING_ID((short)11, "shippingId"),
    /**
     * 上传时间 *
     */
    INPUT_TIME((short)12, "inputTime"),
    /**
     * 订单状态 *
     */
    ORDER_STATUS((short)13, "orderStatus"),
    /**
     * 客户端ID *
     */
    CLIENT_NAME((short)14, "clientName"),
    /**
     * 子订单编号 *
     */
    SUB_ORDER_ID((short)15, "subOrderId"),
    /**
     * 收货人姓名 *
     */
    CONSIGNEE((short)16, "consignee"),
    /**
     * 商品信息 *
     */
    PRODUCT_INFO((short)17, "productInfo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_ID
          return ORDER_ID;
        case 2: // MEMBER_CODE
          return MEMBER_CODE;
        case 3: // PHONE
          return PHONE;
        case 4: // TOTAL_PRICE
          return TOTAL_PRICE;
        case 5: // CREATE_TIME
          return CREATE_TIME;
        case 6: // CLIENT_ID
          return CLIENT_ID;
        case 7: // RECV_ADDRESS
          return RECV_ADDRESS;
        case 8: // SHIPPING_STATUS
          return SHIPPING_STATUS;
        case 9: // SHIPPING_CORP_CODE
          return SHIPPING_CORP_CODE;
        case 10: // SHIPPING_CORP
          return SHIPPING_CORP;
        case 11: // SHIPPING_ID
          return SHIPPING_ID;
        case 12: // INPUT_TIME
          return INPUT_TIME;
        case 13: // ORDER_STATUS
          return ORDER_STATUS;
        case 14: // CLIENT_NAME
          return CLIENT_NAME;
        case 15: // SUB_ORDER_ID
          return SUB_ORDER_ID;
        case 16: // CONSIGNEE
          return CONSIGNEE;
        case 17: // PRODUCT_INFO
          return PRODUCT_INFO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MEMBERCODE_ISSET_ID = 0;
  private static final int __TOTALPRICE_ISSET_ID = 1;
  private static final int __CREATETIME_ISSET_ID = 2;
  private static final int __INPUTTIME_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ORDER_ID,_Fields.MEMBER_CODE,_Fields.PHONE,_Fields.TOTAL_PRICE,_Fields.CREATE_TIME,_Fields.CLIENT_ID,_Fields.RECV_ADDRESS,_Fields.SHIPPING_STATUS,_Fields.SHIPPING_CORP_CODE,_Fields.SHIPPING_CORP,_Fields.SHIPPING_ID,_Fields.INPUT_TIME,_Fields.ORDER_STATUS,_Fields.CLIENT_NAME,_Fields.SUB_ORDER_ID,_Fields.CONSIGNEE,_Fields.PRODUCT_INFO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("memberCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("totalPrice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECV_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("recvAddress", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHIPPING_STATUS, new org.apache.thrift.meta_data.FieldMetaData("shippingStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHIPPING_CORP_CODE, new org.apache.thrift.meta_data.FieldMetaData("shippingCorpCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHIPPING_CORP, new org.apache.thrift.meta_data.FieldMetaData("shippingCorp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHIPPING_ID, new org.apache.thrift.meta_data.FieldMetaData("shippingId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INPUT_TIME, new org.apache.thrift.meta_data.FieldMetaData("inputTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ORDER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("orderStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_NAME, new org.apache.thrift.meta_data.FieldMetaData("clientName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUB_ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("subOrderId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONSIGNEE, new org.apache.thrift.meta_data.FieldMetaData("consignee", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_INFO, new org.apache.thrift.meta_data.FieldMetaData("productInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProviderOrderQueryVo.class, metaDataMap);
  }

  public ProviderOrderQueryVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProviderOrderQueryVo(ProviderOrderQueryVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    this.memberCode = other.memberCode;
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    this.totalPrice = other.totalPrice;
    this.createTime = other.createTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetRecvAddress()) {
      this.recvAddress = other.recvAddress;
    }
    if (other.isSetShippingStatus()) {
      this.shippingStatus = other.shippingStatus;
    }
    if (other.isSetShippingCorpCode()) {
      this.shippingCorpCode = other.shippingCorpCode;
    }
    if (other.isSetShippingCorp()) {
      this.shippingCorp = other.shippingCorp;
    }
    if (other.isSetShippingId()) {
      this.shippingId = other.shippingId;
    }
    this.inputTime = other.inputTime;
    if (other.isSetOrderStatus()) {
      this.orderStatus = other.orderStatus;
    }
    if (other.isSetClientName()) {
      this.clientName = other.clientName;
    }
    if (other.isSetSubOrderId()) {
      this.subOrderId = other.subOrderId;
    }
    if (other.isSetConsignee()) {
      this.consignee = other.consignee;
    }
    if (other.isSetProductInfo()) {
      this.productInfo = other.productInfo;
    }
  }

  public ProviderOrderQueryVo deepCopy() {
    return new ProviderOrderQueryVo(this);
  }

  @Override
  public void clear() {
    this.orderId = null;
    setMemberCodeIsSet(false);
    this.memberCode = 0;
    this.phone = null;
    setTotalPriceIsSet(false);
    this.totalPrice = 0.0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.clientId = null;
    this.recvAddress = null;
    this.shippingStatus = null;
    this.shippingCorpCode = null;
    this.shippingCorp = null;
    this.shippingId = null;
    setInputTimeIsSet(false);
    this.inputTime = 0;
    this.orderStatus = null;
    this.clientName = null;
    this.subOrderId = null;
    this.consignee = null;
    this.productInfo = null;
  }

  /**
   * 订单编号 *
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 订单编号 *
   */
  public ProviderOrderQueryVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 用户编号 *
   */
  public long getMemberCode() {
    return this.memberCode;
  }

  /**
   * 用户编号 *
   */
  public ProviderOrderQueryVo setMemberCode(long memberCode) {
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    return this;
  }

  public void unsetMemberCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  /** Returns true if field memberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberCode() {
    return EncodingUtils.testBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  public void setMemberCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEMBERCODE_ISSET_ID, value);
  }

  /**
   * 用户手机号 *
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 用户手机号 *
   */
  public ProviderOrderQueryVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 订单总金额 *
   */
  public double getTotalPrice() {
    return this.totalPrice;
  }

  /**
   * 订单总金额 *
   */
  public ProviderOrderQueryVo setTotalPrice(double totalPrice) {
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    return this;
  }

  public void unsetTotalPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  /** Returns true if field totalPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  public void setTotalPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPRICE_ISSET_ID, value);
  }

  /**
   * 创建时间 *
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间 *
   */
  public ProviderOrderQueryVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端ID *
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID *
   */
  public ProviderOrderQueryVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 收货地址 *
   */
  public String getRecvAddress() {
    return this.recvAddress;
  }

  /**
   * 收货地址 *
   */
  public ProviderOrderQueryVo setRecvAddress(String recvAddress) {
    this.recvAddress = recvAddress;
    return this;
  }

  public void unsetRecvAddress() {
    this.recvAddress = null;
  }

  /** Returns true if field recvAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetRecvAddress() {
    return this.recvAddress != null;
  }

  public void setRecvAddressIsSet(boolean value) {
    if (!value) {
      this.recvAddress = null;
    }
  }

  /**
   * 发货状态 *
   */
  public String getShippingStatus() {
    return this.shippingStatus;
  }

  /**
   * 发货状态 *
   */
  public ProviderOrderQueryVo setShippingStatus(String shippingStatus) {
    this.shippingStatus = shippingStatus;
    return this;
  }

  public void unsetShippingStatus() {
    this.shippingStatus = null;
  }

  /** Returns true if field shippingStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetShippingStatus() {
    return this.shippingStatus != null;
  }

  public void setShippingStatusIsSet(boolean value) {
    if (!value) {
      this.shippingStatus = null;
    }
  }

  /**
   * 物流公司编号 *
   */
  public String getShippingCorpCode() {
    return this.shippingCorpCode;
  }

  /**
   * 物流公司编号 *
   */
  public ProviderOrderQueryVo setShippingCorpCode(String shippingCorpCode) {
    this.shippingCorpCode = shippingCorpCode;
    return this;
  }

  public void unsetShippingCorpCode() {
    this.shippingCorpCode = null;
  }

  /** Returns true if field shippingCorpCode is set (has been assigned a value) and false otherwise */
  public boolean isSetShippingCorpCode() {
    return this.shippingCorpCode != null;
  }

  public void setShippingCorpCodeIsSet(boolean value) {
    if (!value) {
      this.shippingCorpCode = null;
    }
  }

  /**
   * 物流公司名称 *
   */
  public String getShippingCorp() {
    return this.shippingCorp;
  }

  /**
   * 物流公司名称 *
   */
  public ProviderOrderQueryVo setShippingCorp(String shippingCorp) {
    this.shippingCorp = shippingCorp;
    return this;
  }

  public void unsetShippingCorp() {
    this.shippingCorp = null;
  }

  /** Returns true if field shippingCorp is set (has been assigned a value) and false otherwise */
  public boolean isSetShippingCorp() {
    return this.shippingCorp != null;
  }

  public void setShippingCorpIsSet(boolean value) {
    if (!value) {
      this.shippingCorp = null;
    }
  }

  /**
   * 物流单号 *
   */
  public String getShippingId() {
    return this.shippingId;
  }

  /**
   * 物流单号 *
   */
  public ProviderOrderQueryVo setShippingId(String shippingId) {
    this.shippingId = shippingId;
    return this;
  }

  public void unsetShippingId() {
    this.shippingId = null;
  }

  /** Returns true if field shippingId is set (has been assigned a value) and false otherwise */
  public boolean isSetShippingId() {
    return this.shippingId != null;
  }

  public void setShippingIdIsSet(boolean value) {
    if (!value) {
      this.shippingId = null;
    }
  }

  /**
   * 上传时间 *
   */
  public long getInputTime() {
    return this.inputTime;
  }

  /**
   * 上传时间 *
   */
  public ProviderOrderQueryVo setInputTime(long inputTime) {
    this.inputTime = inputTime;
    setInputTimeIsSet(true);
    return this;
  }

  public void unsetInputTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INPUTTIME_ISSET_ID);
  }

  /** Returns true if field inputTime is set (has been assigned a value) and false otherwise */
  public boolean isSetInputTime() {
    return EncodingUtils.testBit(__isset_bitfield, __INPUTTIME_ISSET_ID);
  }

  public void setInputTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INPUTTIME_ISSET_ID, value);
  }

  /**
   * 订单状态 *
   */
  public String getOrderStatus() {
    return this.orderStatus;
  }

  /**
   * 订单状态 *
   */
  public ProviderOrderQueryVo setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

  public void unsetOrderStatus() {
    this.orderStatus = null;
  }

  /** Returns true if field orderStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderStatus() {
    return this.orderStatus != null;
  }

  public void setOrderStatusIsSet(boolean value) {
    if (!value) {
      this.orderStatus = null;
    }
  }

  /**
   * 客户端ID *
   */
  public String getClientName() {
    return this.clientName;
  }

  /**
   * 客户端ID *
   */
  public ProviderOrderQueryVo setClientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

  public void unsetClientName() {
    this.clientName = null;
  }

  /** Returns true if field clientName is set (has been assigned a value) and false otherwise */
  public boolean isSetClientName() {
    return this.clientName != null;
  }

  public void setClientNameIsSet(boolean value) {
    if (!value) {
      this.clientName = null;
    }
  }

  /**
   * 子订单编号 *
   */
  public String getSubOrderId() {
    return this.subOrderId;
  }

  /**
   * 子订单编号 *
   */
  public ProviderOrderQueryVo setSubOrderId(String subOrderId) {
    this.subOrderId = subOrderId;
    return this;
  }

  public void unsetSubOrderId() {
    this.subOrderId = null;
  }

  /** Returns true if field subOrderId is set (has been assigned a value) and false otherwise */
  public boolean isSetSubOrderId() {
    return this.subOrderId != null;
  }

  public void setSubOrderIdIsSet(boolean value) {
    if (!value) {
      this.subOrderId = null;
    }
  }

  /**
   * 收货人姓名 *
   */
  public String getConsignee() {
    return this.consignee;
  }

  /**
   * 收货人姓名 *
   */
  public ProviderOrderQueryVo setConsignee(String consignee) {
    this.consignee = consignee;
    return this;
  }

  public void unsetConsignee() {
    this.consignee = null;
  }

  /** Returns true if field consignee is set (has been assigned a value) and false otherwise */
  public boolean isSetConsignee() {
    return this.consignee != null;
  }

  public void setConsigneeIsSet(boolean value) {
    if (!value) {
      this.consignee = null;
    }
  }

  /**
   * 商品信息 *
   */
  public String getProductInfo() {
    return this.productInfo;
  }

  /**
   * 商品信息 *
   */
  public ProviderOrderQueryVo setProductInfo(String productInfo) {
    this.productInfo = productInfo;
    return this;
  }

  public void unsetProductInfo() {
    this.productInfo = null;
  }

  /** Returns true if field productInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetProductInfo() {
    return this.productInfo != null;
  }

  public void setProductInfoIsSet(boolean value) {
    if (!value) {
      this.productInfo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case MEMBER_CODE:
      if (value == null) {
        unsetMemberCode();
      } else {
        setMemberCode((Long)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case TOTAL_PRICE:
      if (value == null) {
        unsetTotalPrice();
      } else {
        setTotalPrice((Double)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case RECV_ADDRESS:
      if (value == null) {
        unsetRecvAddress();
      } else {
        setRecvAddress((String)value);
      }
      break;

    case SHIPPING_STATUS:
      if (value == null) {
        unsetShippingStatus();
      } else {
        setShippingStatus((String)value);
      }
      break;

    case SHIPPING_CORP_CODE:
      if (value == null) {
        unsetShippingCorpCode();
      } else {
        setShippingCorpCode((String)value);
      }
      break;

    case SHIPPING_CORP:
      if (value == null) {
        unsetShippingCorp();
      } else {
        setShippingCorp((String)value);
      }
      break;

    case SHIPPING_ID:
      if (value == null) {
        unsetShippingId();
      } else {
        setShippingId((String)value);
      }
      break;

    case INPUT_TIME:
      if (value == null) {
        unsetInputTime();
      } else {
        setInputTime((Long)value);
      }
      break;

    case ORDER_STATUS:
      if (value == null) {
        unsetOrderStatus();
      } else {
        setOrderStatus((String)value);
      }
      break;

    case CLIENT_NAME:
      if (value == null) {
        unsetClientName();
      } else {
        setClientName((String)value);
      }
      break;

    case SUB_ORDER_ID:
      if (value == null) {
        unsetSubOrderId();
      } else {
        setSubOrderId((String)value);
      }
      break;

    case CONSIGNEE:
      if (value == null) {
        unsetConsignee();
      } else {
        setConsignee((String)value);
      }
      break;

    case PRODUCT_INFO:
      if (value == null) {
        unsetProductInfo();
      } else {
        setProductInfo((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_ID:
      return getOrderId();

    case MEMBER_CODE:
      return Long.valueOf(getMemberCode());

    case PHONE:
      return getPhone();

    case TOTAL_PRICE:
      return Double.valueOf(getTotalPrice());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case CLIENT_ID:
      return getClientId();

    case RECV_ADDRESS:
      return getRecvAddress();

    case SHIPPING_STATUS:
      return getShippingStatus();

    case SHIPPING_CORP_CODE:
      return getShippingCorpCode();

    case SHIPPING_CORP:
      return getShippingCorp();

    case SHIPPING_ID:
      return getShippingId();

    case INPUT_TIME:
      return Long.valueOf(getInputTime());

    case ORDER_STATUS:
      return getOrderStatus();

    case CLIENT_NAME:
      return getClientName();

    case SUB_ORDER_ID:
      return getSubOrderId();

    case CONSIGNEE:
      return getConsignee();

    case PRODUCT_INFO:
      return getProductInfo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_ID:
      return isSetOrderId();
    case MEMBER_CODE:
      return isSetMemberCode();
    case PHONE:
      return isSetPhone();
    case TOTAL_PRICE:
      return isSetTotalPrice();
    case CREATE_TIME:
      return isSetCreateTime();
    case CLIENT_ID:
      return isSetClientId();
    case RECV_ADDRESS:
      return isSetRecvAddress();
    case SHIPPING_STATUS:
      return isSetShippingStatus();
    case SHIPPING_CORP_CODE:
      return isSetShippingCorpCode();
    case SHIPPING_CORP:
      return isSetShippingCorp();
    case SHIPPING_ID:
      return isSetShippingId();
    case INPUT_TIME:
      return isSetInputTime();
    case ORDER_STATUS:
      return isSetOrderStatus();
    case CLIENT_NAME:
      return isSetClientName();
    case SUB_ORDER_ID:
      return isSetSubOrderId();
    case CONSIGNEE:
      return isSetConsignee();
    case PRODUCT_INFO:
      return isSetProductInfo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProviderOrderQueryVo)
      return this.equals((ProviderOrderQueryVo)that);
    return false;
  }

  public boolean equals(ProviderOrderQueryVo that) {
    if (that == null)
      return false;

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_memberCode = true && this.isSetMemberCode();
    boolean that_present_memberCode = true && that.isSetMemberCode();
    if (this_present_memberCode || that_present_memberCode) {
      if (!(this_present_memberCode && that_present_memberCode))
        return false;
      if (this.memberCode != that.memberCode)
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_totalPrice = true && this.isSetTotalPrice();
    boolean that_present_totalPrice = true && that.isSetTotalPrice();
    if (this_present_totalPrice || that_present_totalPrice) {
      if (!(this_present_totalPrice && that_present_totalPrice))
        return false;
      if (this.totalPrice != that.totalPrice)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_recvAddress = true && this.isSetRecvAddress();
    boolean that_present_recvAddress = true && that.isSetRecvAddress();
    if (this_present_recvAddress || that_present_recvAddress) {
      if (!(this_present_recvAddress && that_present_recvAddress))
        return false;
      if (!this.recvAddress.equals(that.recvAddress))
        return false;
    }

    boolean this_present_shippingStatus = true && this.isSetShippingStatus();
    boolean that_present_shippingStatus = true && that.isSetShippingStatus();
    if (this_present_shippingStatus || that_present_shippingStatus) {
      if (!(this_present_shippingStatus && that_present_shippingStatus))
        return false;
      if (!this.shippingStatus.equals(that.shippingStatus))
        return false;
    }

    boolean this_present_shippingCorpCode = true && this.isSetShippingCorpCode();
    boolean that_present_shippingCorpCode = true && that.isSetShippingCorpCode();
    if (this_present_shippingCorpCode || that_present_shippingCorpCode) {
      if (!(this_present_shippingCorpCode && that_present_shippingCorpCode))
        return false;
      if (!this.shippingCorpCode.equals(that.shippingCorpCode))
        return false;
    }

    boolean this_present_shippingCorp = true && this.isSetShippingCorp();
    boolean that_present_shippingCorp = true && that.isSetShippingCorp();
    if (this_present_shippingCorp || that_present_shippingCorp) {
      if (!(this_present_shippingCorp && that_present_shippingCorp))
        return false;
      if (!this.shippingCorp.equals(that.shippingCorp))
        return false;
    }

    boolean this_present_shippingId = true && this.isSetShippingId();
    boolean that_present_shippingId = true && that.isSetShippingId();
    if (this_present_shippingId || that_present_shippingId) {
      if (!(this_present_shippingId && that_present_shippingId))
        return false;
      if (!this.shippingId.equals(that.shippingId))
        return false;
    }

    boolean this_present_inputTime = true && this.isSetInputTime();
    boolean that_present_inputTime = true && that.isSetInputTime();
    if (this_present_inputTime || that_present_inputTime) {
      if (!(this_present_inputTime && that_present_inputTime))
        return false;
      if (this.inputTime != that.inputTime)
        return false;
    }

    boolean this_present_orderStatus = true && this.isSetOrderStatus();
    boolean that_present_orderStatus = true && that.isSetOrderStatus();
    if (this_present_orderStatus || that_present_orderStatus) {
      if (!(this_present_orderStatus && that_present_orderStatus))
        return false;
      if (!this.orderStatus.equals(that.orderStatus))
        return false;
    }

    boolean this_present_clientName = true && this.isSetClientName();
    boolean that_present_clientName = true && that.isSetClientName();
    if (this_present_clientName || that_present_clientName) {
      if (!(this_present_clientName && that_present_clientName))
        return false;
      if (!this.clientName.equals(that.clientName))
        return false;
    }

    boolean this_present_subOrderId = true && this.isSetSubOrderId();
    boolean that_present_subOrderId = true && that.isSetSubOrderId();
    if (this_present_subOrderId || that_present_subOrderId) {
      if (!(this_present_subOrderId && that_present_subOrderId))
        return false;
      if (!this.subOrderId.equals(that.subOrderId))
        return false;
    }

    boolean this_present_consignee = true && this.isSetConsignee();
    boolean that_present_consignee = true && that.isSetConsignee();
    if (this_present_consignee || that_present_consignee) {
      if (!(this_present_consignee && that_present_consignee))
        return false;
      if (!this.consignee.equals(that.consignee))
        return false;
    }

    boolean this_present_productInfo = true && this.isSetProductInfo();
    boolean that_present_productInfo = true && that.isSetProductInfo();
    if (this_present_productInfo || that_present_productInfo) {
      if (!(this_present_productInfo && that_present_productInfo))
        return false;
      if (!this.productInfo.equals(that.productInfo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_memberCode = true && (isSetMemberCode());
    list.add(present_memberCode);
    if (present_memberCode)
      list.add(memberCode);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_totalPrice = true && (isSetTotalPrice());
    list.add(present_totalPrice);
    if (present_totalPrice)
      list.add(totalPrice);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_recvAddress = true && (isSetRecvAddress());
    list.add(present_recvAddress);
    if (present_recvAddress)
      list.add(recvAddress);

    boolean present_shippingStatus = true && (isSetShippingStatus());
    list.add(present_shippingStatus);
    if (present_shippingStatus)
      list.add(shippingStatus);

    boolean present_shippingCorpCode = true && (isSetShippingCorpCode());
    list.add(present_shippingCorpCode);
    if (present_shippingCorpCode)
      list.add(shippingCorpCode);

    boolean present_shippingCorp = true && (isSetShippingCorp());
    list.add(present_shippingCorp);
    if (present_shippingCorp)
      list.add(shippingCorp);

    boolean present_shippingId = true && (isSetShippingId());
    list.add(present_shippingId);
    if (present_shippingId)
      list.add(shippingId);

    boolean present_inputTime = true && (isSetInputTime());
    list.add(present_inputTime);
    if (present_inputTime)
      list.add(inputTime);

    boolean present_orderStatus = true && (isSetOrderStatus());
    list.add(present_orderStatus);
    if (present_orderStatus)
      list.add(orderStatus);

    boolean present_clientName = true && (isSetClientName());
    list.add(present_clientName);
    if (present_clientName)
      list.add(clientName);

    boolean present_subOrderId = true && (isSetSubOrderId());
    list.add(present_subOrderId);
    if (present_subOrderId)
      list.add(subOrderId);

    boolean present_consignee = true && (isSetConsignee());
    list.add(present_consignee);
    if (present_consignee)
      list.add(consignee);

    boolean present_productInfo = true && (isSetProductInfo());
    list.add(present_productInfo);
    if (present_productInfo)
      list.add(productInfo);

    return list.hashCode();
  }

  @Override
  public int compareTo(ProviderOrderQueryVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberCode()).compareTo(other.isSetMemberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberCode, other.memberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPrice()).compareTo(other.isSetTotalPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPrice, other.totalPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecvAddress()).compareTo(other.isSetRecvAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecvAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recvAddress, other.recvAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShippingStatus()).compareTo(other.isSetShippingStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShippingStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shippingStatus, other.shippingStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShippingCorpCode()).compareTo(other.isSetShippingCorpCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShippingCorpCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shippingCorpCode, other.shippingCorpCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShippingCorp()).compareTo(other.isSetShippingCorp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShippingCorp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shippingCorp, other.shippingCorp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShippingId()).compareTo(other.isSetShippingId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShippingId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shippingId, other.shippingId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInputTime()).compareTo(other.isSetInputTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInputTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inputTime, other.inputTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderStatus()).compareTo(other.isSetOrderStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderStatus, other.orderStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientName()).compareTo(other.isSetClientName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientName, other.clientName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubOrderId()).compareTo(other.isSetSubOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subOrderId, other.subOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsignee()).compareTo(other.isSetConsignee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsignee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consignee, other.consignee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductInfo()).compareTo(other.isSetProductInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productInfo, other.productInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProviderOrderQueryVo(");
    boolean first = true;

    if (isSetOrderId()) {
      sb.append("orderId:");
      if (this.orderId == null) {
        sb.append("null");
      } else {
        sb.append(this.orderId);
      }
      first = false;
    }
    if (isSetMemberCode()) {
      if (!first) sb.append(", ");
      sb.append("memberCode:");
      sb.append(this.memberCode);
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetTotalPrice()) {
      if (!first) sb.append(", ");
      sb.append("totalPrice:");
      sb.append(this.totalPrice);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetRecvAddress()) {
      if (!first) sb.append(", ");
      sb.append("recvAddress:");
      if (this.recvAddress == null) {
        sb.append("null");
      } else {
        sb.append(this.recvAddress);
      }
      first = false;
    }
    if (isSetShippingStatus()) {
      if (!first) sb.append(", ");
      sb.append("shippingStatus:");
      if (this.shippingStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.shippingStatus);
      }
      first = false;
    }
    if (isSetShippingCorpCode()) {
      if (!first) sb.append(", ");
      sb.append("shippingCorpCode:");
      if (this.shippingCorpCode == null) {
        sb.append("null");
      } else {
        sb.append(this.shippingCorpCode);
      }
      first = false;
    }
    if (isSetShippingCorp()) {
      if (!first) sb.append(", ");
      sb.append("shippingCorp:");
      if (this.shippingCorp == null) {
        sb.append("null");
      } else {
        sb.append(this.shippingCorp);
      }
      first = false;
    }
    if (isSetShippingId()) {
      if (!first) sb.append(", ");
      sb.append("shippingId:");
      if (this.shippingId == null) {
        sb.append("null");
      } else {
        sb.append(this.shippingId);
      }
      first = false;
    }
    if (isSetInputTime()) {
      if (!first) sb.append(", ");
      sb.append("inputTime:");
      sb.append(this.inputTime);
      first = false;
    }
    if (isSetOrderStatus()) {
      if (!first) sb.append(", ");
      sb.append("orderStatus:");
      if (this.orderStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.orderStatus);
      }
      first = false;
    }
    if (isSetClientName()) {
      if (!first) sb.append(", ");
      sb.append("clientName:");
      if (this.clientName == null) {
        sb.append("null");
      } else {
        sb.append(this.clientName);
      }
      first = false;
    }
    if (isSetSubOrderId()) {
      if (!first) sb.append(", ");
      sb.append("subOrderId:");
      if (this.subOrderId == null) {
        sb.append("null");
      } else {
        sb.append(this.subOrderId);
      }
      first = false;
    }
    if (isSetConsignee()) {
      if (!first) sb.append(", ");
      sb.append("consignee:");
      if (this.consignee == null) {
        sb.append("null");
      } else {
        sb.append(this.consignee);
      }
      first = false;
    }
    if (isSetProductInfo()) {
      if (!first) sb.append(", ");
      sb.append("productInfo:");
      if (this.productInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.productInfo);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProviderOrderQueryVoStandardSchemeFactory implements SchemeFactory {
    public ProviderOrderQueryVoStandardScheme getScheme() {
      return new ProviderOrderQueryVoStandardScheme();
    }
  }

  private static class ProviderOrderQueryVoStandardScheme extends StandardScheme<ProviderOrderQueryVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProviderOrderQueryVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MEMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.memberCode = iprot.readI64();
              struct.setMemberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TOTAL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalPrice = iprot.readDouble();
              struct.setTotalPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RECV_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recvAddress = iprot.readString();
              struct.setRecvAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SHIPPING_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.shippingStatus = iprot.readString();
              struct.setShippingStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SHIPPING_CORP_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.shippingCorpCode = iprot.readString();
              struct.setShippingCorpCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SHIPPING_CORP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.shippingCorp = iprot.readString();
              struct.setShippingCorpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SHIPPING_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.shippingId = iprot.readString();
              struct.setShippingIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // INPUT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.inputTime = iprot.readI64();
              struct.setInputTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ORDER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderStatus = iprot.readString();
              struct.setOrderStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CLIENT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientName = iprot.readString();
              struct.setClientNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SUB_ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subOrderId = iprot.readString();
              struct.setSubOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CONSIGNEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.consignee = iprot.readString();
              struct.setConsigneeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PRODUCT_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productInfo = iprot.readString();
              struct.setProductInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProviderOrderQueryVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderId != null) {
        if (struct.isSetOrderId()) {
          oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
          oprot.writeString(struct.orderId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetMemberCode()) {
        oprot.writeFieldBegin(MEMBER_CODE_FIELD_DESC);
        oprot.writeI64(struct.memberCode);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTotalPrice()) {
        oprot.writeFieldBegin(TOTAL_PRICE_FIELD_DESC);
        oprot.writeDouble(struct.totalPrice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recvAddress != null) {
        if (struct.isSetRecvAddress()) {
          oprot.writeFieldBegin(RECV_ADDRESS_FIELD_DESC);
          oprot.writeString(struct.recvAddress);
          oprot.writeFieldEnd();
        }
      }
      if (struct.shippingStatus != null) {
        if (struct.isSetShippingStatus()) {
          oprot.writeFieldBegin(SHIPPING_STATUS_FIELD_DESC);
          oprot.writeString(struct.shippingStatus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.shippingCorpCode != null) {
        if (struct.isSetShippingCorpCode()) {
          oprot.writeFieldBegin(SHIPPING_CORP_CODE_FIELD_DESC);
          oprot.writeString(struct.shippingCorpCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.shippingCorp != null) {
        if (struct.isSetShippingCorp()) {
          oprot.writeFieldBegin(SHIPPING_CORP_FIELD_DESC);
          oprot.writeString(struct.shippingCorp);
          oprot.writeFieldEnd();
        }
      }
      if (struct.shippingId != null) {
        if (struct.isSetShippingId()) {
          oprot.writeFieldBegin(SHIPPING_ID_FIELD_DESC);
          oprot.writeString(struct.shippingId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetInputTime()) {
        oprot.writeFieldBegin(INPUT_TIME_FIELD_DESC);
        oprot.writeI64(struct.inputTime);
        oprot.writeFieldEnd();
      }
      if (struct.orderStatus != null) {
        if (struct.isSetOrderStatus()) {
          oprot.writeFieldBegin(ORDER_STATUS_FIELD_DESC);
          oprot.writeString(struct.orderStatus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.clientName != null) {
        if (struct.isSetClientName()) {
          oprot.writeFieldBegin(CLIENT_NAME_FIELD_DESC);
          oprot.writeString(struct.clientName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.subOrderId != null) {
        if (struct.isSetSubOrderId()) {
          oprot.writeFieldBegin(SUB_ORDER_ID_FIELD_DESC);
          oprot.writeString(struct.subOrderId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.consignee != null) {
        if (struct.isSetConsignee()) {
          oprot.writeFieldBegin(CONSIGNEE_FIELD_DESC);
          oprot.writeString(struct.consignee);
          oprot.writeFieldEnd();
        }
      }
      if (struct.productInfo != null) {
        if (struct.isSetProductInfo()) {
          oprot.writeFieldBegin(PRODUCT_INFO_FIELD_DESC);
          oprot.writeString(struct.productInfo);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProviderOrderQueryVoTupleSchemeFactory implements SchemeFactory {
    public ProviderOrderQueryVoTupleScheme getScheme() {
      return new ProviderOrderQueryVoTupleScheme();
    }
  }

  private static class ProviderOrderQueryVoTupleScheme extends TupleScheme<ProviderOrderQueryVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProviderOrderQueryVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrderId()) {
        optionals.set(0);
      }
      if (struct.isSetMemberCode()) {
        optionals.set(1);
      }
      if (struct.isSetPhone()) {
        optionals.set(2);
      }
      if (struct.isSetTotalPrice()) {
        optionals.set(3);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(4);
      }
      if (struct.isSetClientId()) {
        optionals.set(5);
      }
      if (struct.isSetRecvAddress()) {
        optionals.set(6);
      }
      if (struct.isSetShippingStatus()) {
        optionals.set(7);
      }
      if (struct.isSetShippingCorpCode()) {
        optionals.set(8);
      }
      if (struct.isSetShippingCorp()) {
        optionals.set(9);
      }
      if (struct.isSetShippingId()) {
        optionals.set(10);
      }
      if (struct.isSetInputTime()) {
        optionals.set(11);
      }
      if (struct.isSetOrderStatus()) {
        optionals.set(12);
      }
      if (struct.isSetClientName()) {
        optionals.set(13);
      }
      if (struct.isSetSubOrderId()) {
        optionals.set(14);
      }
      if (struct.isSetConsignee()) {
        optionals.set(15);
      }
      if (struct.isSetProductInfo()) {
        optionals.set(16);
      }
      oprot.writeBitSet(optionals, 17);
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetMemberCode()) {
        oprot.writeI64(struct.memberCode);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetTotalPrice()) {
        oprot.writeDouble(struct.totalPrice);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetRecvAddress()) {
        oprot.writeString(struct.recvAddress);
      }
      if (struct.isSetShippingStatus()) {
        oprot.writeString(struct.shippingStatus);
      }
      if (struct.isSetShippingCorpCode()) {
        oprot.writeString(struct.shippingCorpCode);
      }
      if (struct.isSetShippingCorp()) {
        oprot.writeString(struct.shippingCorp);
      }
      if (struct.isSetShippingId()) {
        oprot.writeString(struct.shippingId);
      }
      if (struct.isSetInputTime()) {
        oprot.writeI64(struct.inputTime);
      }
      if (struct.isSetOrderStatus()) {
        oprot.writeString(struct.orderStatus);
      }
      if (struct.isSetClientName()) {
        oprot.writeString(struct.clientName);
      }
      if (struct.isSetSubOrderId()) {
        oprot.writeString(struct.subOrderId);
      }
      if (struct.isSetConsignee()) {
        oprot.writeString(struct.consignee);
      }
      if (struct.isSetProductInfo()) {
        oprot.writeString(struct.productInfo);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProviderOrderQueryVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(17);
      if (incoming.get(0)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.memberCode = iprot.readI64();
        struct.setMemberCodeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(3)) {
        struct.totalPrice = iprot.readDouble();
        struct.setTotalPriceIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.recvAddress = iprot.readString();
        struct.setRecvAddressIsSet(true);
      }
      if (incoming.get(7)) {
        struct.shippingStatus = iprot.readString();
        struct.setShippingStatusIsSet(true);
      }
      if (incoming.get(8)) {
        struct.shippingCorpCode = iprot.readString();
        struct.setShippingCorpCodeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.shippingCorp = iprot.readString();
        struct.setShippingCorpIsSet(true);
      }
      if (incoming.get(10)) {
        struct.shippingId = iprot.readString();
        struct.setShippingIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.inputTime = iprot.readI64();
        struct.setInputTimeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.orderStatus = iprot.readString();
        struct.setOrderStatusIsSet(true);
      }
      if (incoming.get(13)) {
        struct.clientName = iprot.readString();
        struct.setClientNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.subOrderId = iprot.readString();
        struct.setSubOrderIdIsSet(true);
      }
      if (incoming.get(15)) {
        struct.consignee = iprot.readString();
        struct.setConsigneeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.productInfo = iprot.readString();
        struct.setProductInfoIsSet(true);
      }
    }
  }

}

