/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.outletActivity;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-11-11")
public class OutletWeightActivityTagVo implements org.apache.thrift.TBase<OutletWeightActivityTagVo, OutletWeightActivityTagVo._Fields>, java.io.Serializable, Cloneable, Comparable<OutletWeightActivityTagVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OutletWeightActivityTagVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ACTIVITY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("activityId", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField ACTIVITY_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("activityNo", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ELEMENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("elementId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField WEIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("weight", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ACTIVITY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("activityType", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField OPERATOR_FIELD_DESC = new org.apache.thrift.protocol.TField("operator", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField AREA_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("areaName", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OutletWeightActivityTagVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OutletWeightActivityTagVoTupleSchemeFactory());
  }

  /**
   * 权重id *
   */
  public long id; // optional
  /**
   * 客户端ID *
   */
  public String clientId; // optional
  /**
   * 活动标签id *
   */
  public long activityId; // optional
  /**
   * 活动编号 *
   */
  public String activityNo; // optional
  /**
   * 商户ID/门店ID/商品ID *
   */
  public String elementId; // optional
  /**
   * 权重 *
   */
  public String weight; // optional
  /**
   * 活动类型: 商户活动1; 门店活动2; 商品活动3 *
   */
  public String activityType; // optional
  /**
   * 创建时间 *
   */
  public long createTime; // optional
  /**
   * 更新时间 *
   */
  public long updateTime; // optional
  /**
   * 商户名称 *
   */
  public String merchantName; // optional
  /**
   * 商户Id *
   */
  public String merchantId; // optional
  /**
   * 门店名称 *
   */
  public String outletName; // optional
  /**
   * 操作人 *
   */
  public String operator; // optional
  /**
   * 所在地区 *
   */
  public String areaName; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 权重id *
     */
    ID((short)1, "id"),
    /**
     * 客户端ID *
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 活动标签id *
     */
    ACTIVITY_ID((short)3, "activityId"),
    /**
     * 活动编号 *
     */
    ACTIVITY_NO((short)4, "activityNo"),
    /**
     * 商户ID/门店ID/商品ID *
     */
    ELEMENT_ID((short)5, "elementId"),
    /**
     * 权重 *
     */
    WEIGHT((short)6, "weight"),
    /**
     * 活动类型: 商户活动1; 门店活动2; 商品活动3 *
     */
    ACTIVITY_TYPE((short)7, "activityType"),
    /**
     * 创建时间 *
     */
    CREATE_TIME((short)8, "createTime"),
    /**
     * 更新时间 *
     */
    UPDATE_TIME((short)9, "updateTime"),
    /**
     * 商户名称 *
     */
    MERCHANT_NAME((short)10, "merchantName"),
    /**
     * 商户Id *
     */
    MERCHANT_ID((short)11, "merchantId"),
    /**
     * 门店名称 *
     */
    OUTLET_NAME((short)12, "outletName"),
    /**
     * 操作人 *
     */
    OPERATOR((short)13, "operator"),
    /**
     * 所在地区 *
     */
    AREA_NAME((short)14, "areaName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // ACTIVITY_ID
          return ACTIVITY_ID;
        case 4: // ACTIVITY_NO
          return ACTIVITY_NO;
        case 5: // ELEMENT_ID
          return ELEMENT_ID;
        case 6: // WEIGHT
          return WEIGHT;
        case 7: // ACTIVITY_TYPE
          return ACTIVITY_TYPE;
        case 8: // CREATE_TIME
          return CREATE_TIME;
        case 9: // UPDATE_TIME
          return UPDATE_TIME;
        case 10: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 11: // MERCHANT_ID
          return MERCHANT_ID;
        case 12: // OUTLET_NAME
          return OUTLET_NAME;
        case 13: // OPERATOR
          return OPERATOR;
        case 14: // AREA_NAME
          return AREA_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __ACTIVITYID_ISSET_ID = 1;
  private static final int __CREATETIME_ISSET_ID = 2;
  private static final int __UPDATETIME_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CLIENT_ID,_Fields.ACTIVITY_ID,_Fields.ACTIVITY_NO,_Fields.ELEMENT_ID,_Fields.WEIGHT,_Fields.ACTIVITY_TYPE,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.MERCHANT_NAME,_Fields.MERCHANT_ID,_Fields.OUTLET_NAME,_Fields.OPERATOR,_Fields.AREA_NAME};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACTIVITY_ID, new org.apache.thrift.meta_data.FieldMetaData("activityId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ACTIVITY_NO, new org.apache.thrift.meta_data.FieldMetaData("activityNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ELEMENT_ID, new org.apache.thrift.meta_data.FieldMetaData("elementId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEIGHT, new org.apache.thrift.meta_data.FieldMetaData("weight", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACTIVITY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("activityType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPERATOR, new org.apache.thrift.meta_data.FieldMetaData("operator", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_NAME, new org.apache.thrift.meta_data.FieldMetaData("areaName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OutletWeightActivityTagVo.class, metaDataMap);
  }

  public OutletWeightActivityTagVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OutletWeightActivityTagVo(OutletWeightActivityTagVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    this.activityId = other.activityId;
    if (other.isSetActivityNo()) {
      this.activityNo = other.activityNo;
    }
    if (other.isSetElementId()) {
      this.elementId = other.elementId;
    }
    if (other.isSetWeight()) {
      this.weight = other.weight;
    }
    if (other.isSetActivityType()) {
      this.activityType = other.activityType;
    }
    this.createTime = other.createTime;
    this.updateTime = other.updateTime;
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    if (other.isSetOperator()) {
      this.operator = other.operator;
    }
    if (other.isSetAreaName()) {
      this.areaName = other.areaName;
    }
  }

  public OutletWeightActivityTagVo deepCopy() {
    return new OutletWeightActivityTagVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.clientId = null;
    setActivityIdIsSet(false);
    this.activityId = 0;
    this.activityNo = null;
    this.elementId = null;
    this.weight = null;
    this.activityType = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setUpdateTimeIsSet(false);
    this.updateTime = 0;
    this.merchantName = null;
    this.merchantId = null;
    this.outletName = null;
    this.operator = null;
    this.areaName = null;
  }

  /**
   * 权重id *
   */
  public long getId() {
    return this.id;
  }

  /**
   * 权重id *
   */
  public OutletWeightActivityTagVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 客户端ID *
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID *
   */
  public OutletWeightActivityTagVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 活动标签id *
   */
  public long getActivityId() {
    return this.activityId;
  }

  /**
   * 活动标签id *
   */
  public OutletWeightActivityTagVo setActivityId(long activityId) {
    this.activityId = activityId;
    setActivityIdIsSet(true);
    return this;
  }

  public void unsetActivityId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACTIVITYID_ISSET_ID);
  }

  /** Returns true if field activityId is set (has been assigned a value) and false otherwise */
  public boolean isSetActivityId() {
    return EncodingUtils.testBit(__isset_bitfield, __ACTIVITYID_ISSET_ID);
  }

  public void setActivityIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACTIVITYID_ISSET_ID, value);
  }

  /**
   * 活动编号 *
   */
  public String getActivityNo() {
    return this.activityNo;
  }

  /**
   * 活动编号 *
   */
  public OutletWeightActivityTagVo setActivityNo(String activityNo) {
    this.activityNo = activityNo;
    return this;
  }

  public void unsetActivityNo() {
    this.activityNo = null;
  }

  /** Returns true if field activityNo is set (has been assigned a value) and false otherwise */
  public boolean isSetActivityNo() {
    return this.activityNo != null;
  }

  public void setActivityNoIsSet(boolean value) {
    if (!value) {
      this.activityNo = null;
    }
  }

  /**
   * 商户ID/门店ID/商品ID *
   */
  public String getElementId() {
    return this.elementId;
  }

  /**
   * 商户ID/门店ID/商品ID *
   */
  public OutletWeightActivityTagVo setElementId(String elementId) {
    this.elementId = elementId;
    return this;
  }

  public void unsetElementId() {
    this.elementId = null;
  }

  /** Returns true if field elementId is set (has been assigned a value) and false otherwise */
  public boolean isSetElementId() {
    return this.elementId != null;
  }

  public void setElementIdIsSet(boolean value) {
    if (!value) {
      this.elementId = null;
    }
  }

  /**
   * 权重 *
   */
  public String getWeight() {
    return this.weight;
  }

  /**
   * 权重 *
   */
  public OutletWeightActivityTagVo setWeight(String weight) {
    this.weight = weight;
    return this;
  }

  public void unsetWeight() {
    this.weight = null;
  }

  /** Returns true if field weight is set (has been assigned a value) and false otherwise */
  public boolean isSetWeight() {
    return this.weight != null;
  }

  public void setWeightIsSet(boolean value) {
    if (!value) {
      this.weight = null;
    }
  }

  /**
   * 活动类型: 商户活动1; 门店活动2; 商品活动3 *
   */
  public String getActivityType() {
    return this.activityType;
  }

  /**
   * 活动类型: 商户活动1; 门店活动2; 商品活动3 *
   */
  public OutletWeightActivityTagVo setActivityType(String activityType) {
    this.activityType = activityType;
    return this;
  }

  public void unsetActivityType() {
    this.activityType = null;
  }

  /** Returns true if field activityType is set (has been assigned a value) and false otherwise */
  public boolean isSetActivityType() {
    return this.activityType != null;
  }

  public void setActivityTypeIsSet(boolean value) {
    if (!value) {
      this.activityType = null;
    }
  }

  /**
   * 创建时间 *
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间 *
   */
  public OutletWeightActivityTagVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 更新时间 *
   */
  public long getUpdateTime() {
    return this.updateTime;
  }

  /**
   * 更新时间 *
   */
  public OutletWeightActivityTagVo setUpdateTime(long updateTime) {
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    return this;
  }

  public void unsetUpdateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UPDATETIME_ISSET_ID);
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __UPDATETIME_ISSET_ID);
  }

  public void setUpdateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UPDATETIME_ISSET_ID, value);
  }

  /**
   * 商户名称 *
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称 *
   */
  public OutletWeightActivityTagVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 商户Id *
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户Id *
   */
  public OutletWeightActivityTagVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 门店名称 *
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 门店名称 *
   */
  public OutletWeightActivityTagVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 操作人 *
   */
  public String getOperator() {
    return this.operator;
  }

  /**
   * 操作人 *
   */
  public OutletWeightActivityTagVo setOperator(String operator) {
    this.operator = operator;
    return this;
  }

  public void unsetOperator() {
    this.operator = null;
  }

  /** Returns true if field operator is set (has been assigned a value) and false otherwise */
  public boolean isSetOperator() {
    return this.operator != null;
  }

  public void setOperatorIsSet(boolean value) {
    if (!value) {
      this.operator = null;
    }
  }

  /**
   * 所在地区 *
   */
  public String getAreaName() {
    return this.areaName;
  }

  /**
   * 所在地区 *
   */
  public OutletWeightActivityTagVo setAreaName(String areaName) {
    this.areaName = areaName;
    return this;
  }

  public void unsetAreaName() {
    this.areaName = null;
  }

  /** Returns true if field areaName is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaName() {
    return this.areaName != null;
  }

  public void setAreaNameIsSet(boolean value) {
    if (!value) {
      this.areaName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case ACTIVITY_ID:
      if (value == null) {
        unsetActivityId();
      } else {
        setActivityId((Long)value);
      }
      break;

    case ACTIVITY_NO:
      if (value == null) {
        unsetActivityNo();
      } else {
        setActivityNo((String)value);
      }
      break;

    case ELEMENT_ID:
      if (value == null) {
        unsetElementId();
      } else {
        setElementId((String)value);
      }
      break;

    case WEIGHT:
      if (value == null) {
        unsetWeight();
      } else {
        setWeight((String)value);
      }
      break;

    case ACTIVITY_TYPE:
      if (value == null) {
        unsetActivityType();
      } else {
        setActivityType((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((Long)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case OPERATOR:
      if (value == null) {
        unsetOperator();
      } else {
        setOperator((String)value);
      }
      break;

    case AREA_NAME:
      if (value == null) {
        unsetAreaName();
      } else {
        setAreaName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CLIENT_ID:
      return getClientId();

    case ACTIVITY_ID:
      return Long.valueOf(getActivityId());

    case ACTIVITY_NO:
      return getActivityNo();

    case ELEMENT_ID:
      return getElementId();

    case WEIGHT:
      return getWeight();

    case ACTIVITY_TYPE:
      return getActivityType();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case UPDATE_TIME:
      return Long.valueOf(getUpdateTime());

    case MERCHANT_NAME:
      return getMerchantName();

    case MERCHANT_ID:
      return getMerchantId();

    case OUTLET_NAME:
      return getOutletName();

    case OPERATOR:
      return getOperator();

    case AREA_NAME:
      return getAreaName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CLIENT_ID:
      return isSetClientId();
    case ACTIVITY_ID:
      return isSetActivityId();
    case ACTIVITY_NO:
      return isSetActivityNo();
    case ELEMENT_ID:
      return isSetElementId();
    case WEIGHT:
      return isSetWeight();
    case ACTIVITY_TYPE:
      return isSetActivityType();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case MERCHANT_ID:
      return isSetMerchantId();
    case OUTLET_NAME:
      return isSetOutletName();
    case OPERATOR:
      return isSetOperator();
    case AREA_NAME:
      return isSetAreaName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OutletWeightActivityTagVo)
      return this.equals((OutletWeightActivityTagVo)that);
    return false;
  }

  public boolean equals(OutletWeightActivityTagVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_activityId = true && this.isSetActivityId();
    boolean that_present_activityId = true && that.isSetActivityId();
    if (this_present_activityId || that_present_activityId) {
      if (!(this_present_activityId && that_present_activityId))
        return false;
      if (this.activityId != that.activityId)
        return false;
    }

    boolean this_present_activityNo = true && this.isSetActivityNo();
    boolean that_present_activityNo = true && that.isSetActivityNo();
    if (this_present_activityNo || that_present_activityNo) {
      if (!(this_present_activityNo && that_present_activityNo))
        return false;
      if (!this.activityNo.equals(that.activityNo))
        return false;
    }

    boolean this_present_elementId = true && this.isSetElementId();
    boolean that_present_elementId = true && that.isSetElementId();
    if (this_present_elementId || that_present_elementId) {
      if (!(this_present_elementId && that_present_elementId))
        return false;
      if (!this.elementId.equals(that.elementId))
        return false;
    }

    boolean this_present_weight = true && this.isSetWeight();
    boolean that_present_weight = true && that.isSetWeight();
    if (this_present_weight || that_present_weight) {
      if (!(this_present_weight && that_present_weight))
        return false;
      if (!this.weight.equals(that.weight))
        return false;
    }

    boolean this_present_activityType = true && this.isSetActivityType();
    boolean that_present_activityType = true && that.isSetActivityType();
    if (this_present_activityType || that_present_activityType) {
      if (!(this_present_activityType && that_present_activityType))
        return false;
      if (!this.activityType.equals(that.activityType))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (this.updateTime != that.updateTime)
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_operator = true && this.isSetOperator();
    boolean that_present_operator = true && that.isSetOperator();
    if (this_present_operator || that_present_operator) {
      if (!(this_present_operator && that_present_operator))
        return false;
      if (!this.operator.equals(that.operator))
        return false;
    }

    boolean this_present_areaName = true && this.isSetAreaName();
    boolean that_present_areaName = true && that.isSetAreaName();
    if (this_present_areaName || that_present_areaName) {
      if (!(this_present_areaName && that_present_areaName))
        return false;
      if (!this.areaName.equals(that.areaName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_activityId = true && (isSetActivityId());
    list.add(present_activityId);
    if (present_activityId)
      list.add(activityId);

    boolean present_activityNo = true && (isSetActivityNo());
    list.add(present_activityNo);
    if (present_activityNo)
      list.add(activityNo);

    boolean present_elementId = true && (isSetElementId());
    list.add(present_elementId);
    if (present_elementId)
      list.add(elementId);

    boolean present_weight = true && (isSetWeight());
    list.add(present_weight);
    if (present_weight)
      list.add(weight);

    boolean present_activityType = true && (isSetActivityType());
    list.add(present_activityType);
    if (present_activityType)
      list.add(activityType);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_updateTime = true && (isSetUpdateTime());
    list.add(present_updateTime);
    if (present_updateTime)
      list.add(updateTime);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_operator = true && (isSetOperator());
    list.add(present_operator);
    if (present_operator)
      list.add(operator);

    boolean present_areaName = true && (isSetAreaName());
    list.add(present_areaName);
    if (present_areaName)
      list.add(areaName);

    return list.hashCode();
  }

  @Override
  public int compareTo(OutletWeightActivityTagVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActivityId()).compareTo(other.isSetActivityId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivityId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activityId, other.activityId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActivityNo()).compareTo(other.isSetActivityNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivityNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activityNo, other.activityNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetElementId()).compareTo(other.isSetElementId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetElementId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.elementId, other.elementId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWeight()).compareTo(other.isSetWeight());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeight()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weight, other.weight);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActivityType()).compareTo(other.isSetActivityType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivityType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activityType, other.activityType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOperator()).compareTo(other.isSetOperator());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperator()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operator, other.operator);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaName()).compareTo(other.isSetAreaName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaName, other.areaName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OutletWeightActivityTagVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetActivityId()) {
      if (!first) sb.append(", ");
      sb.append("activityId:");
      sb.append(this.activityId);
      first = false;
    }
    if (isSetActivityNo()) {
      if (!first) sb.append(", ");
      sb.append("activityNo:");
      if (this.activityNo == null) {
        sb.append("null");
      } else {
        sb.append(this.activityNo);
      }
      first = false;
    }
    if (isSetElementId()) {
      if (!first) sb.append(", ");
      sb.append("elementId:");
      if (this.elementId == null) {
        sb.append("null");
      } else {
        sb.append(this.elementId);
      }
      first = false;
    }
    if (isSetWeight()) {
      if (!first) sb.append(", ");
      sb.append("weight:");
      if (this.weight == null) {
        sb.append("null");
      } else {
        sb.append(this.weight);
      }
      first = false;
    }
    if (isSetActivityType()) {
      if (!first) sb.append(", ");
      sb.append("activityType:");
      if (this.activityType == null) {
        sb.append("null");
      } else {
        sb.append(this.activityType);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      sb.append(this.updateTime);
      first = false;
    }
    if (isSetMerchantName()) {
      if (!first) sb.append(", ");
      sb.append("merchantName:");
      if (this.merchantName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantName);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetOutletName()) {
      if (!first) sb.append(", ");
      sb.append("outletName:");
      if (this.outletName == null) {
        sb.append("null");
      } else {
        sb.append(this.outletName);
      }
      first = false;
    }
    if (isSetOperator()) {
      if (!first) sb.append(", ");
      sb.append("operator:");
      if (this.operator == null) {
        sb.append("null");
      } else {
        sb.append(this.operator);
      }
      first = false;
    }
    if (isSetAreaName()) {
      if (!first) sb.append(", ");
      sb.append("areaName:");
      if (this.areaName == null) {
        sb.append("null");
      } else {
        sb.append(this.areaName);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OutletWeightActivityTagVoStandardSchemeFactory implements SchemeFactory {
    public OutletWeightActivityTagVoStandardScheme getScheme() {
      return new OutletWeightActivityTagVoStandardScheme();
    }
  }

  private static class OutletWeightActivityTagVoStandardScheme extends StandardScheme<OutletWeightActivityTagVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OutletWeightActivityTagVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACTIVITY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.activityId = iprot.readI64();
              struct.setActivityIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ACTIVITY_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.activityNo = iprot.readString();
              struct.setActivityNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ELEMENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.elementId = iprot.readString();
              struct.setElementIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // WEIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.weight = iprot.readString();
              struct.setWeightIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ACTIVITY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.activityType = iprot.readString();
              struct.setActivityTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.updateTime = iprot.readI64();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // OPERATOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.operator = iprot.readString();
              struct.setOperatorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // AREA_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaName = iprot.readString();
              struct.setAreaNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OutletWeightActivityTagVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetActivityId()) {
        oprot.writeFieldBegin(ACTIVITY_ID_FIELD_DESC);
        oprot.writeI64(struct.activityId);
        oprot.writeFieldEnd();
      }
      if (struct.activityNo != null) {
        if (struct.isSetActivityNo()) {
          oprot.writeFieldBegin(ACTIVITY_NO_FIELD_DESC);
          oprot.writeString(struct.activityNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.elementId != null) {
        if (struct.isSetElementId()) {
          oprot.writeFieldBegin(ELEMENT_ID_FIELD_DESC);
          oprot.writeString(struct.elementId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.weight != null) {
        if (struct.isSetWeight()) {
          oprot.writeFieldBegin(WEIGHT_FIELD_DESC);
          oprot.writeString(struct.weight);
          oprot.writeFieldEnd();
        }
      }
      if (struct.activityType != null) {
        if (struct.isSetActivityType()) {
          oprot.writeFieldBegin(ACTIVITY_TYPE_FIELD_DESC);
          oprot.writeString(struct.activityType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.updateTime);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        if (struct.isSetMerchantName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletName != null) {
        if (struct.isSetOutletName()) {
          oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
          oprot.writeString(struct.outletName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.operator != null) {
        if (struct.isSetOperator()) {
          oprot.writeFieldBegin(OPERATOR_FIELD_DESC);
          oprot.writeString(struct.operator);
          oprot.writeFieldEnd();
        }
      }
      if (struct.areaName != null) {
        if (struct.isSetAreaName()) {
          oprot.writeFieldBegin(AREA_NAME_FIELD_DESC);
          oprot.writeString(struct.areaName);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OutletWeightActivityTagVoTupleSchemeFactory implements SchemeFactory {
    public OutletWeightActivityTagVoTupleScheme getScheme() {
      return new OutletWeightActivityTagVoTupleScheme();
    }
  }

  private static class OutletWeightActivityTagVoTupleScheme extends TupleScheme<OutletWeightActivityTagVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OutletWeightActivityTagVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetActivityId()) {
        optionals.set(2);
      }
      if (struct.isSetActivityNo()) {
        optionals.set(3);
      }
      if (struct.isSetElementId()) {
        optionals.set(4);
      }
      if (struct.isSetWeight()) {
        optionals.set(5);
      }
      if (struct.isSetActivityType()) {
        optionals.set(6);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(7);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(8);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(9);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(10);
      }
      if (struct.isSetOutletName()) {
        optionals.set(11);
      }
      if (struct.isSetOperator()) {
        optionals.set(12);
      }
      if (struct.isSetAreaName()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetActivityId()) {
        oprot.writeI64(struct.activityId);
      }
      if (struct.isSetActivityNo()) {
        oprot.writeString(struct.activityNo);
      }
      if (struct.isSetElementId()) {
        oprot.writeString(struct.elementId);
      }
      if (struct.isSetWeight()) {
        oprot.writeString(struct.weight);
      }
      if (struct.isSetActivityType()) {
        oprot.writeString(struct.activityType);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeI64(struct.updateTime);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetOperator()) {
        oprot.writeString(struct.operator);
      }
      if (struct.isSetAreaName()) {
        oprot.writeString(struct.areaName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OutletWeightActivityTagVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.activityId = iprot.readI64();
        struct.setActivityIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.activityNo = iprot.readString();
        struct.setActivityNoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.elementId = iprot.readString();
        struct.setElementIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.weight = iprot.readString();
        struct.setWeightIsSet(true);
      }
      if (incoming.get(6)) {
        struct.activityType = iprot.readString();
        struct.setActivityTypeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.updateTime = iprot.readI64();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.operator = iprot.readString();
        struct.setOperatorIsSet(true);
      }
      if (incoming.get(13)) {
        struct.areaName = iprot.readString();
        struct.setAreaNameIsSet(true);
      }
    }
  }

}

