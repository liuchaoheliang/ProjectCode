/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-30")
public class BossSubOrderVo implements org.apache.thrift.TBase<BossSubOrderVo, BossSubOrderVo._Fields>, java.io.Serializable, Cloneable, Comparable<BossSubOrderVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BossSubOrderVo");

  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DELIVERY_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryState", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PRODUCTS_FIELD_DESC = new org.apache.thrift.protocol.TField("products", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField DELIVERY_CORP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCorpId", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DELIVERY_CORP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCorpName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField TRACKING_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("trackingNo", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SHIPPING_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("shippingTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField SUB_ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("subOrderId", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField TOTAL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField REFUND_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("refundState", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BossSubOrderVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BossSubOrderVoTupleSchemeFactory());
  }

  /**
   * 商户名
   */
  public String merchantName; // required
  /**
   * 子订单类型
   */
  public String type; // required
  /**
   * 配送状态-名优特惠有值
   */
  public String deliveryState; // required
  /**
   * 商品
   */
  public List<BossSubOrderProductVo> products; // required
  /**
   * 商户ID
   */
  public String merchantId; // required
  /**
   * 接口通用后加上名优特惠的物流信息 物流ID*
   */
  public String deliveryCorpId; // required
  /**
   * 物流名称*
   */
  public String deliveryCorpName; // required
  /**
   * 物流单号*
   */
  public String trackingNo; // required
  /**
   * 创建时间*
   */
  public long shippingTime; // required
  /**
   * 子订单编号*
   */
  public String subOrderId; // required
  /**
   * 订单金额
   */
  public double totalPrice; // required
  /**
   * 订单子状态
   */
  public String refundState; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商户名
     */
    MERCHANT_NAME((short)1, "merchantName"),
    /**
     * 子订单类型
     */
    TYPE((short)2, "type"),
    /**
     * 配送状态-名优特惠有值
     */
    DELIVERY_STATE((short)3, "deliveryState"),
    /**
     * 商品
     */
    PRODUCTS((short)4, "products"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)5, "merchantId"),
    /**
     * 接口通用后加上名优特惠的物流信息 物流ID*
     */
    DELIVERY_CORP_ID((short)6, "deliveryCorpId"),
    /**
     * 物流名称*
     */
    DELIVERY_CORP_NAME((short)7, "deliveryCorpName"),
    /**
     * 物流单号*
     */
    TRACKING_NO((short)8, "trackingNo"),
    /**
     * 创建时间*
     */
    SHIPPING_TIME((short)9, "shippingTime"),
    /**
     * 子订单编号*
     */
    SUB_ORDER_ID((short)10, "subOrderId"),
    /**
     * 订单金额
     */
    TOTAL_PRICE((short)11, "totalPrice"),
    /**
     * 订单子状态
     */
    REFUND_STATE((short)12, "refundState");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 2: // TYPE
          return TYPE;
        case 3: // DELIVERY_STATE
          return DELIVERY_STATE;
        case 4: // PRODUCTS
          return PRODUCTS;
        case 5: // MERCHANT_ID
          return MERCHANT_ID;
        case 6: // DELIVERY_CORP_ID
          return DELIVERY_CORP_ID;
        case 7: // DELIVERY_CORP_NAME
          return DELIVERY_CORP_NAME;
        case 8: // TRACKING_NO
          return TRACKING_NO;
        case 9: // SHIPPING_TIME
          return SHIPPING_TIME;
        case 10: // SUB_ORDER_ID
          return SUB_ORDER_ID;
        case 11: // TOTAL_PRICE
          return TOTAL_PRICE;
        case 12: // REFUND_STATE
          return REFUND_STATE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SHIPPINGTIME_ISSET_ID = 0;
  private static final int __TOTALPRICE_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_STATE, new org.apache.thrift.meta_data.FieldMetaData("deliveryState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCTS, new org.apache.thrift.meta_data.FieldMetaData("products", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "BossSubOrderProductVo"))));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_CORP_ID, new org.apache.thrift.meta_data.FieldMetaData("deliveryCorpId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_CORP_NAME, new org.apache.thrift.meta_data.FieldMetaData("deliveryCorpName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TRACKING_NO, new org.apache.thrift.meta_data.FieldMetaData("trackingNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHIPPING_TIME, new org.apache.thrift.meta_data.FieldMetaData("shippingTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SUB_ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("subOrderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("totalPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REFUND_STATE, new org.apache.thrift.meta_data.FieldMetaData("refundState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BossSubOrderVo.class, metaDataMap);
  }

  public BossSubOrderVo() {
  }

  public BossSubOrderVo(
    String merchantName,
    String type,
    String deliveryState,
    List<BossSubOrderProductVo> products,
    String merchantId,
    String deliveryCorpId,
    String deliveryCorpName,
    String trackingNo,
    long shippingTime,
    String subOrderId,
    double totalPrice,
    String refundState)
  {
    this();
    this.merchantName = merchantName;
    this.type = type;
    this.deliveryState = deliveryState;
    this.products = products;
    this.merchantId = merchantId;
    this.deliveryCorpId = deliveryCorpId;
    this.deliveryCorpName = deliveryCorpName;
    this.trackingNo = trackingNo;
    this.shippingTime = shippingTime;
    setShippingTimeIsSet(true);
    this.subOrderId = subOrderId;
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    this.refundState = refundState;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BossSubOrderVo(BossSubOrderVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetDeliveryState()) {
      this.deliveryState = other.deliveryState;
    }
    if (other.isSetProducts()) {
      List<BossSubOrderProductVo> __this__products = new ArrayList<BossSubOrderProductVo>(other.products.size());
      for (BossSubOrderProductVo other_element : other.products) {
        __this__products.add(other_element);
      }
      this.products = __this__products;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetDeliveryCorpId()) {
      this.deliveryCorpId = other.deliveryCorpId;
    }
    if (other.isSetDeliveryCorpName()) {
      this.deliveryCorpName = other.deliveryCorpName;
    }
    if (other.isSetTrackingNo()) {
      this.trackingNo = other.trackingNo;
    }
    this.shippingTime = other.shippingTime;
    if (other.isSetSubOrderId()) {
      this.subOrderId = other.subOrderId;
    }
    this.totalPrice = other.totalPrice;
    if (other.isSetRefundState()) {
      this.refundState = other.refundState;
    }
  }

  public BossSubOrderVo deepCopy() {
    return new BossSubOrderVo(this);
  }

  @Override
  public void clear() {
    this.merchantName = null;
    this.type = null;
    this.deliveryState = null;
    this.products = null;
    this.merchantId = null;
    this.deliveryCorpId = null;
    this.deliveryCorpName = null;
    this.trackingNo = null;
    setShippingTimeIsSet(false);
    this.shippingTime = 0;
    this.subOrderId = null;
    setTotalPriceIsSet(false);
    this.totalPrice = 0.0;
    this.refundState = null;
  }

  /**
   * 商户名
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名
   */
  public BossSubOrderVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 子订单类型
   */
  public String getType() {
    return this.type;
  }

  /**
   * 子订单类型
   */
  public BossSubOrderVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 配送状态-名优特惠有值
   */
  public String getDeliveryState() {
    return this.deliveryState;
  }

  /**
   * 配送状态-名优特惠有值
   */
  public BossSubOrderVo setDeliveryState(String deliveryState) {
    this.deliveryState = deliveryState;
    return this;
  }

  public void unsetDeliveryState() {
    this.deliveryState = null;
  }

  /** Returns true if field deliveryState is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryState() {
    return this.deliveryState != null;
  }

  public void setDeliveryStateIsSet(boolean value) {
    if (!value) {
      this.deliveryState = null;
    }
  }

  public int getProductsSize() {
    return (this.products == null) ? 0 : this.products.size();
  }

  public java.util.Iterator<BossSubOrderProductVo> getProductsIterator() {
    return (this.products == null) ? null : this.products.iterator();
  }

  public void addToProducts(BossSubOrderProductVo elem) {
    if (this.products == null) {
      this.products = new ArrayList<BossSubOrderProductVo>();
    }
    this.products.add(elem);
  }

  /**
   * 商品
   */
  public List<BossSubOrderProductVo> getProducts() {
    return this.products;
  }

  /**
   * 商品
   */
  public BossSubOrderVo setProducts(List<BossSubOrderProductVo> products) {
    this.products = products;
    return this;
  }

  public void unsetProducts() {
    this.products = null;
  }

  /** Returns true if field products is set (has been assigned a value) and false otherwise */
  public boolean isSetProducts() {
    return this.products != null;
  }

  public void setProductsIsSet(boolean value) {
    if (!value) {
      this.products = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public BossSubOrderVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 接口通用后加上名优特惠的物流信息 物流ID*
   */
  public String getDeliveryCorpId() {
    return this.deliveryCorpId;
  }

  /**
   * 接口通用后加上名优特惠的物流信息 物流ID*
   */
  public BossSubOrderVo setDeliveryCorpId(String deliveryCorpId) {
    this.deliveryCorpId = deliveryCorpId;
    return this;
  }

  public void unsetDeliveryCorpId() {
    this.deliveryCorpId = null;
  }

  /** Returns true if field deliveryCorpId is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryCorpId() {
    return this.deliveryCorpId != null;
  }

  public void setDeliveryCorpIdIsSet(boolean value) {
    if (!value) {
      this.deliveryCorpId = null;
    }
  }

  /**
   * 物流名称*
   */
  public String getDeliveryCorpName() {
    return this.deliveryCorpName;
  }

  /**
   * 物流名称*
   */
  public BossSubOrderVo setDeliveryCorpName(String deliveryCorpName) {
    this.deliveryCorpName = deliveryCorpName;
    return this;
  }

  public void unsetDeliveryCorpName() {
    this.deliveryCorpName = null;
  }

  /** Returns true if field deliveryCorpName is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryCorpName() {
    return this.deliveryCorpName != null;
  }

  public void setDeliveryCorpNameIsSet(boolean value) {
    if (!value) {
      this.deliveryCorpName = null;
    }
  }

  /**
   * 物流单号*
   */
  public String getTrackingNo() {
    return this.trackingNo;
  }

  /**
   * 物流单号*
   */
  public BossSubOrderVo setTrackingNo(String trackingNo) {
    this.trackingNo = trackingNo;
    return this;
  }

  public void unsetTrackingNo() {
    this.trackingNo = null;
  }

  /** Returns true if field trackingNo is set (has been assigned a value) and false otherwise */
  public boolean isSetTrackingNo() {
    return this.trackingNo != null;
  }

  public void setTrackingNoIsSet(boolean value) {
    if (!value) {
      this.trackingNo = null;
    }
  }

  /**
   * 创建时间*
   */
  public long getShippingTime() {
    return this.shippingTime;
  }

  /**
   * 创建时间*
   */
  public BossSubOrderVo setShippingTime(long shippingTime) {
    this.shippingTime = shippingTime;
    setShippingTimeIsSet(true);
    return this;
  }

  public void unsetShippingTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SHIPPINGTIME_ISSET_ID);
  }

  /** Returns true if field shippingTime is set (has been assigned a value) and false otherwise */
  public boolean isSetShippingTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SHIPPINGTIME_ISSET_ID);
  }

  public void setShippingTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SHIPPINGTIME_ISSET_ID, value);
  }

  /**
   * 子订单编号*
   */
  public String getSubOrderId() {
    return this.subOrderId;
  }

  /**
   * 子订单编号*
   */
  public BossSubOrderVo setSubOrderId(String subOrderId) {
    this.subOrderId = subOrderId;
    return this;
  }

  public void unsetSubOrderId() {
    this.subOrderId = null;
  }

  /** Returns true if field subOrderId is set (has been assigned a value) and false otherwise */
  public boolean isSetSubOrderId() {
    return this.subOrderId != null;
  }

  public void setSubOrderIdIsSet(boolean value) {
    if (!value) {
      this.subOrderId = null;
    }
  }

  /**
   * 订单金额
   */
  public double getTotalPrice() {
    return this.totalPrice;
  }

  /**
   * 订单金额
   */
  public BossSubOrderVo setTotalPrice(double totalPrice) {
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    return this;
  }

  public void unsetTotalPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  /** Returns true if field totalPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  public void setTotalPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPRICE_ISSET_ID, value);
  }

  /**
   * 订单子状态
   */
  public String getRefundState() {
    return this.refundState;
  }

  /**
   * 订单子状态
   */
  public BossSubOrderVo setRefundState(String refundState) {
    this.refundState = refundState;
    return this;
  }

  public void unsetRefundState() {
    this.refundState = null;
  }

  /** Returns true if field refundState is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundState() {
    return this.refundState != null;
  }

  public void setRefundStateIsSet(boolean value) {
    if (!value) {
      this.refundState = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case DELIVERY_STATE:
      if (value == null) {
        unsetDeliveryState();
      } else {
        setDeliveryState((String)value);
      }
      break;

    case PRODUCTS:
      if (value == null) {
        unsetProducts();
      } else {
        setProducts((List<BossSubOrderProductVo>)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case DELIVERY_CORP_ID:
      if (value == null) {
        unsetDeliveryCorpId();
      } else {
        setDeliveryCorpId((String)value);
      }
      break;

    case DELIVERY_CORP_NAME:
      if (value == null) {
        unsetDeliveryCorpName();
      } else {
        setDeliveryCorpName((String)value);
      }
      break;

    case TRACKING_NO:
      if (value == null) {
        unsetTrackingNo();
      } else {
        setTrackingNo((String)value);
      }
      break;

    case SHIPPING_TIME:
      if (value == null) {
        unsetShippingTime();
      } else {
        setShippingTime((Long)value);
      }
      break;

    case SUB_ORDER_ID:
      if (value == null) {
        unsetSubOrderId();
      } else {
        setSubOrderId((String)value);
      }
      break;

    case TOTAL_PRICE:
      if (value == null) {
        unsetTotalPrice();
      } else {
        setTotalPrice((Double)value);
      }
      break;

    case REFUND_STATE:
      if (value == null) {
        unsetRefundState();
      } else {
        setRefundState((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MERCHANT_NAME:
      return getMerchantName();

    case TYPE:
      return getType();

    case DELIVERY_STATE:
      return getDeliveryState();

    case PRODUCTS:
      return getProducts();

    case MERCHANT_ID:
      return getMerchantId();

    case DELIVERY_CORP_ID:
      return getDeliveryCorpId();

    case DELIVERY_CORP_NAME:
      return getDeliveryCorpName();

    case TRACKING_NO:
      return getTrackingNo();

    case SHIPPING_TIME:
      return Long.valueOf(getShippingTime());

    case SUB_ORDER_ID:
      return getSubOrderId();

    case TOTAL_PRICE:
      return Double.valueOf(getTotalPrice());

    case REFUND_STATE:
      return getRefundState();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MERCHANT_NAME:
      return isSetMerchantName();
    case TYPE:
      return isSetType();
    case DELIVERY_STATE:
      return isSetDeliveryState();
    case PRODUCTS:
      return isSetProducts();
    case MERCHANT_ID:
      return isSetMerchantId();
    case DELIVERY_CORP_ID:
      return isSetDeliveryCorpId();
    case DELIVERY_CORP_NAME:
      return isSetDeliveryCorpName();
    case TRACKING_NO:
      return isSetTrackingNo();
    case SHIPPING_TIME:
      return isSetShippingTime();
    case SUB_ORDER_ID:
      return isSetSubOrderId();
    case TOTAL_PRICE:
      return isSetTotalPrice();
    case REFUND_STATE:
      return isSetRefundState();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BossSubOrderVo)
      return this.equals((BossSubOrderVo)that);
    return false;
  }

  public boolean equals(BossSubOrderVo that) {
    if (that == null)
      return false;

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_deliveryState = true && this.isSetDeliveryState();
    boolean that_present_deliveryState = true && that.isSetDeliveryState();
    if (this_present_deliveryState || that_present_deliveryState) {
      if (!(this_present_deliveryState && that_present_deliveryState))
        return false;
      if (!this.deliveryState.equals(that.deliveryState))
        return false;
    }

    boolean this_present_products = true && this.isSetProducts();
    boolean that_present_products = true && that.isSetProducts();
    if (this_present_products || that_present_products) {
      if (!(this_present_products && that_present_products))
        return false;
      if (!this.products.equals(that.products))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_deliveryCorpId = true && this.isSetDeliveryCorpId();
    boolean that_present_deliveryCorpId = true && that.isSetDeliveryCorpId();
    if (this_present_deliveryCorpId || that_present_deliveryCorpId) {
      if (!(this_present_deliveryCorpId && that_present_deliveryCorpId))
        return false;
      if (!this.deliveryCorpId.equals(that.deliveryCorpId))
        return false;
    }

    boolean this_present_deliveryCorpName = true && this.isSetDeliveryCorpName();
    boolean that_present_deliveryCorpName = true && that.isSetDeliveryCorpName();
    if (this_present_deliveryCorpName || that_present_deliveryCorpName) {
      if (!(this_present_deliveryCorpName && that_present_deliveryCorpName))
        return false;
      if (!this.deliveryCorpName.equals(that.deliveryCorpName))
        return false;
    }

    boolean this_present_trackingNo = true && this.isSetTrackingNo();
    boolean that_present_trackingNo = true && that.isSetTrackingNo();
    if (this_present_trackingNo || that_present_trackingNo) {
      if (!(this_present_trackingNo && that_present_trackingNo))
        return false;
      if (!this.trackingNo.equals(that.trackingNo))
        return false;
    }

    boolean this_present_shippingTime = true;
    boolean that_present_shippingTime = true;
    if (this_present_shippingTime || that_present_shippingTime) {
      if (!(this_present_shippingTime && that_present_shippingTime))
        return false;
      if (this.shippingTime != that.shippingTime)
        return false;
    }

    boolean this_present_subOrderId = true && this.isSetSubOrderId();
    boolean that_present_subOrderId = true && that.isSetSubOrderId();
    if (this_present_subOrderId || that_present_subOrderId) {
      if (!(this_present_subOrderId && that_present_subOrderId))
        return false;
      if (!this.subOrderId.equals(that.subOrderId))
        return false;
    }

    boolean this_present_totalPrice = true;
    boolean that_present_totalPrice = true;
    if (this_present_totalPrice || that_present_totalPrice) {
      if (!(this_present_totalPrice && that_present_totalPrice))
        return false;
      if (this.totalPrice != that.totalPrice)
        return false;
    }

    boolean this_present_refundState = true && this.isSetRefundState();
    boolean that_present_refundState = true && that.isSetRefundState();
    if (this_present_refundState || that_present_refundState) {
      if (!(this_present_refundState && that_present_refundState))
        return false;
      if (!this.refundState.equals(that.refundState))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_deliveryState = true && (isSetDeliveryState());
    list.add(present_deliveryState);
    if (present_deliveryState)
      list.add(deliveryState);

    boolean present_products = true && (isSetProducts());
    list.add(present_products);
    if (present_products)
      list.add(products);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_deliveryCorpId = true && (isSetDeliveryCorpId());
    list.add(present_deliveryCorpId);
    if (present_deliveryCorpId)
      list.add(deliveryCorpId);

    boolean present_deliveryCorpName = true && (isSetDeliveryCorpName());
    list.add(present_deliveryCorpName);
    if (present_deliveryCorpName)
      list.add(deliveryCorpName);

    boolean present_trackingNo = true && (isSetTrackingNo());
    list.add(present_trackingNo);
    if (present_trackingNo)
      list.add(trackingNo);

    boolean present_shippingTime = true;
    list.add(present_shippingTime);
    if (present_shippingTime)
      list.add(shippingTime);

    boolean present_subOrderId = true && (isSetSubOrderId());
    list.add(present_subOrderId);
    if (present_subOrderId)
      list.add(subOrderId);

    boolean present_totalPrice = true;
    list.add(present_totalPrice);
    if (present_totalPrice)
      list.add(totalPrice);

    boolean present_refundState = true && (isSetRefundState());
    list.add(present_refundState);
    if (present_refundState)
      list.add(refundState);

    return list.hashCode();
  }

  @Override
  public int compareTo(BossSubOrderVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryState()).compareTo(other.isSetDeliveryState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryState, other.deliveryState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProducts()).compareTo(other.isSetProducts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProducts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.products, other.products);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryCorpId()).compareTo(other.isSetDeliveryCorpId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryCorpId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCorpId, other.deliveryCorpId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryCorpName()).compareTo(other.isSetDeliveryCorpName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryCorpName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCorpName, other.deliveryCorpName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTrackingNo()).compareTo(other.isSetTrackingNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrackingNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trackingNo, other.trackingNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShippingTime()).compareTo(other.isSetShippingTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShippingTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shippingTime, other.shippingTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubOrderId()).compareTo(other.isSetSubOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subOrderId, other.subOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPrice()).compareTo(other.isSetTotalPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPrice, other.totalPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundState()).compareTo(other.isSetRefundState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundState, other.refundState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BossSubOrderVo(");
    boolean first = true;

    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryState:");
    if (this.deliveryState == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("products:");
    if (this.products == null) {
      sb.append("null");
    } else {
      sb.append(this.products);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryCorpId:");
    if (this.deliveryCorpId == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryCorpId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryCorpName:");
    if (this.deliveryCorpName == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryCorpName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("trackingNo:");
    if (this.trackingNo == null) {
      sb.append("null");
    } else {
      sb.append(this.trackingNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shippingTime:");
    sb.append(this.shippingTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("subOrderId:");
    if (this.subOrderId == null) {
      sb.append("null");
    } else {
      sb.append(this.subOrderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPrice:");
    sb.append(this.totalPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundState:");
    if (this.refundState == null) {
      sb.append("null");
    } else {
      sb.append(this.refundState);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BossSubOrderVoStandardSchemeFactory implements SchemeFactory {
    public BossSubOrderVoStandardScheme getScheme() {
      return new BossSubOrderVoStandardScheme();
    }
  }

  private static class BossSubOrderVoStandardScheme extends StandardScheme<BossSubOrderVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BossSubOrderVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DELIVERY_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryState = iprot.readString();
              struct.setDeliveryStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRODUCTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list48 = iprot.readListBegin();
                struct.products = new ArrayList<BossSubOrderProductVo>(_list48.size);
                BossSubOrderProductVo _elem49;
                for (int _i50 = 0; _i50 < _list48.size; ++_i50)
                {
                  _elem49 = new BossSubOrderProductVo();
                  _elem49.read(iprot);
                  struct.products.add(_elem49);
                }
                iprot.readListEnd();
              }
              struct.setProductsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DELIVERY_CORP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryCorpId = iprot.readString();
              struct.setDeliveryCorpIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DELIVERY_CORP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryCorpName = iprot.readString();
              struct.setDeliveryCorpNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TRACKING_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.trackingNo = iprot.readString();
              struct.setTrackingNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SHIPPING_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.shippingTime = iprot.readI64();
              struct.setShippingTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SUB_ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subOrderId = iprot.readString();
              struct.setSubOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TOTAL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalPrice = iprot.readDouble();
              struct.setTotalPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // REFUND_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundState = iprot.readString();
              struct.setRefundStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BossSubOrderVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.deliveryState != null) {
        oprot.writeFieldBegin(DELIVERY_STATE_FIELD_DESC);
        oprot.writeString(struct.deliveryState);
        oprot.writeFieldEnd();
      }
      if (struct.products != null) {
        oprot.writeFieldBegin(PRODUCTS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.products.size()));
          for (BossSubOrderProductVo _iter51 : struct.products)
          {
            _iter51.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.deliveryCorpId != null) {
        oprot.writeFieldBegin(DELIVERY_CORP_ID_FIELD_DESC);
        oprot.writeString(struct.deliveryCorpId);
        oprot.writeFieldEnd();
      }
      if (struct.deliveryCorpName != null) {
        oprot.writeFieldBegin(DELIVERY_CORP_NAME_FIELD_DESC);
        oprot.writeString(struct.deliveryCorpName);
        oprot.writeFieldEnd();
      }
      if (struct.trackingNo != null) {
        oprot.writeFieldBegin(TRACKING_NO_FIELD_DESC);
        oprot.writeString(struct.trackingNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SHIPPING_TIME_FIELD_DESC);
      oprot.writeI64(struct.shippingTime);
      oprot.writeFieldEnd();
      if (struct.subOrderId != null) {
        oprot.writeFieldBegin(SUB_ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.subOrderId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.totalPrice);
      oprot.writeFieldEnd();
      if (struct.refundState != null) {
        oprot.writeFieldBegin(REFUND_STATE_FIELD_DESC);
        oprot.writeString(struct.refundState);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BossSubOrderVoTupleSchemeFactory implements SchemeFactory {
    public BossSubOrderVoTupleScheme getScheme() {
      return new BossSubOrderVoTupleScheme();
    }
  }

  private static class BossSubOrderVoTupleScheme extends TupleScheme<BossSubOrderVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BossSubOrderVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMerchantName()) {
        optionals.set(0);
      }
      if (struct.isSetType()) {
        optionals.set(1);
      }
      if (struct.isSetDeliveryState()) {
        optionals.set(2);
      }
      if (struct.isSetProducts()) {
        optionals.set(3);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(4);
      }
      if (struct.isSetDeliveryCorpId()) {
        optionals.set(5);
      }
      if (struct.isSetDeliveryCorpName()) {
        optionals.set(6);
      }
      if (struct.isSetTrackingNo()) {
        optionals.set(7);
      }
      if (struct.isSetShippingTime()) {
        optionals.set(8);
      }
      if (struct.isSetSubOrderId()) {
        optionals.set(9);
      }
      if (struct.isSetTotalPrice()) {
        optionals.set(10);
      }
      if (struct.isSetRefundState()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetDeliveryState()) {
        oprot.writeString(struct.deliveryState);
      }
      if (struct.isSetProducts()) {
        {
          oprot.writeI32(struct.products.size());
          for (BossSubOrderProductVo _iter52 : struct.products)
          {
            _iter52.write(oprot);
          }
        }
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetDeliveryCorpId()) {
        oprot.writeString(struct.deliveryCorpId);
      }
      if (struct.isSetDeliveryCorpName()) {
        oprot.writeString(struct.deliveryCorpName);
      }
      if (struct.isSetTrackingNo()) {
        oprot.writeString(struct.trackingNo);
      }
      if (struct.isSetShippingTime()) {
        oprot.writeI64(struct.shippingTime);
      }
      if (struct.isSetSubOrderId()) {
        oprot.writeString(struct.subOrderId);
      }
      if (struct.isSetTotalPrice()) {
        oprot.writeDouble(struct.totalPrice);
      }
      if (struct.isSetRefundState()) {
        oprot.writeString(struct.refundState);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BossSubOrderVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.deliveryState = iprot.readString();
        struct.setDeliveryStateIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.products = new ArrayList<BossSubOrderProductVo>(_list53.size);
          BossSubOrderProductVo _elem54;
          for (int _i55 = 0; _i55 < _list53.size; ++_i55)
          {
            _elem54 = new BossSubOrderProductVo();
            _elem54.read(iprot);
            struct.products.add(_elem54);
          }
        }
        struct.setProductsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.deliveryCorpId = iprot.readString();
        struct.setDeliveryCorpIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.deliveryCorpName = iprot.readString();
        struct.setDeliveryCorpNameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.trackingNo = iprot.readString();
        struct.setTrackingNoIsSet(true);
      }
      if (incoming.get(8)) {
        struct.shippingTime = iprot.readI64();
        struct.setShippingTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.subOrderId = iprot.readString();
        struct.setSubOrderIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.totalPrice = iprot.readDouble();
        struct.setTotalPriceIsSet(true);
      }
      if (incoming.get(11)) {
        struct.refundState = iprot.readString();
        struct.setRefundStateIsSet(true);
      }
    }
  }

}

