/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商品品论与回复表信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ProductCommentVo implements org.apache.thrift.TBase<ProductCommentVo, ProductCommentVo._Fields>, java.io.Serializable, Cloneable, Comparable<ProductCommentVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProductCommentVo");

  private static final org.apache.thrift.protocol.TField COMMENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("commentId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ORDER_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderValue", org.apache.thrift.protocol.TType.I16, (short)4);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField ORDER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderType", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField MEMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("memberCode", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField MEMBER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("memberName", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField STAR_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("starLevel", org.apache.thrift.protocol.TType.I16, (short)13);
  private static final org.apache.thrift.protocol.TField COMMENT_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("commentDescription", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField RECOMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("recomment", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)16);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField RECOMMENT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("recommentTime", org.apache.thrift.protocol.TType.I64, (short)18);
  private static final org.apache.thrift.protocol.TField MERCHANT_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantUserName", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField IMAGE_PIC_FIELD_DESC = new org.apache.thrift.protocol.TField("imagePic", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField BIG_ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bigOrderId", org.apache.thrift.protocol.TType.STRING, (short)23);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProductCommentVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProductCommentVoTupleSchemeFactory());
  }

  /**
   * 评论id
   */
  public String commentId; // required
  /**
   * 商品Id
   */
  public String productId; // required
  /**
   * 商品名称
   */
  public String productName; // required
  /**
   * 排序
   */
  public short orderValue; // required
  /**
   * 客户端id
   */
  public String clientId; // required
  /**
   * 商户ID
   */
  public String merchantId; // required
  /**
   * 商户名称
   */
  public String merchantName; // required
  /**
   * 交易编号
   */
  public String orderId; // required
  /**
   * 交易类型
   */
  public String orderType; // required
  /**
   * 用户编码
   */
  public String memberCode; // required
  /**
   * 评论人
   */
  public String memberName; // required
  /**
   * 评价星级
   */
  public short starLevel; // required
  /**
   * 评价内容
   */
  public String commentDescription; // required
  /**
   * 回复评价内容
   */
  public String recomment; // required
  /**
   * 评价时间
   */
  public long createTime; // required
  /**
   * 机构码
   */
  public String orgCode; // required
  /**
   * 回复时间
   */
  public long recommentTime; // required
  /**
   * 回复人
   */
  public String merchantUserName; // required
  /**
   * 商品电话
   */
  public String phone; // required
  /**
   * 商品图片
   */
  public String imagePic; // required
  /**
   * 商品类型
   */
  public String type; // required
  /**
   * 大交易编号
   */
  public String bigOrderId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 评论id
     */
    COMMENT_ID((short)1, "commentId"),
    /**
     * 商品Id
     */
    PRODUCT_ID((short)2, "productId"),
    /**
     * 商品名称
     */
    PRODUCT_NAME((short)3, "productName"),
    /**
     * 排序
     */
    ORDER_VALUE((short)4, "orderValue"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)5, "clientId"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)6, "merchantId"),
    /**
     * 商户名称
     */
    MERCHANT_NAME((short)7, "merchantName"),
    /**
     * 交易编号
     */
    ORDER_ID((short)8, "orderId"),
    /**
     * 交易类型
     */
    ORDER_TYPE((short)9, "orderType"),
    /**
     * 用户编码
     */
    MEMBER_CODE((short)10, "memberCode"),
    /**
     * 评论人
     */
    MEMBER_NAME((short)12, "memberName"),
    /**
     * 评价星级
     */
    STAR_LEVEL((short)13, "starLevel"),
    /**
     * 评价内容
     */
    COMMENT_DESCRIPTION((short)14, "commentDescription"),
    /**
     * 回复评价内容
     */
    RECOMMENT((short)15, "recomment"),
    /**
     * 评价时间
     */
    CREATE_TIME((short)16, "createTime"),
    /**
     * 机构码
     */
    ORG_CODE((short)17, "orgCode"),
    /**
     * 回复时间
     */
    RECOMMENT_TIME((short)18, "recommentTime"),
    /**
     * 回复人
     */
    MERCHANT_USER_NAME((short)19, "merchantUserName"),
    /**
     * 商品电话
     */
    PHONE((short)20, "phone"),
    /**
     * 商品图片
     */
    IMAGE_PIC((short)21, "imagePic"),
    /**
     * 商品类型
     */
    TYPE((short)22, "type"),
    /**
     * 大交易编号
     */
    BIG_ORDER_ID((short)23, "bigOrderId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMMENT_ID
          return COMMENT_ID;
        case 2: // PRODUCT_ID
          return PRODUCT_ID;
        case 3: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 4: // ORDER_VALUE
          return ORDER_VALUE;
        case 5: // CLIENT_ID
          return CLIENT_ID;
        case 6: // MERCHANT_ID
          return MERCHANT_ID;
        case 7: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 8: // ORDER_ID
          return ORDER_ID;
        case 9: // ORDER_TYPE
          return ORDER_TYPE;
        case 10: // MEMBER_CODE
          return MEMBER_CODE;
        case 12: // MEMBER_NAME
          return MEMBER_NAME;
        case 13: // STAR_LEVEL
          return STAR_LEVEL;
        case 14: // COMMENT_DESCRIPTION
          return COMMENT_DESCRIPTION;
        case 15: // RECOMMENT
          return RECOMMENT;
        case 16: // CREATE_TIME
          return CREATE_TIME;
        case 17: // ORG_CODE
          return ORG_CODE;
        case 18: // RECOMMENT_TIME
          return RECOMMENT_TIME;
        case 19: // MERCHANT_USER_NAME
          return MERCHANT_USER_NAME;
        case 20: // PHONE
          return PHONE;
        case 21: // IMAGE_PIC
          return IMAGE_PIC;
        case 22: // TYPE
          return TYPE;
        case 23: // BIG_ORDER_ID
          return BIG_ORDER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ORDERVALUE_ISSET_ID = 0;
  private static final int __STARLEVEL_ISSET_ID = 1;
  private static final int __CREATETIME_ISSET_ID = 2;
  private static final int __RECOMMENTTIME_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMMENT_ID, new org.apache.thrift.meta_data.FieldMetaData("commentId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_VALUE, new org.apache.thrift.meta_data.FieldMetaData("orderValue", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("orderType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("memberCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_NAME, new org.apache.thrift.meta_data.FieldMetaData("memberName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STAR_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("starLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.COMMENT_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("commentDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMENT, new org.apache.thrift.meta_data.FieldMetaData("recomment", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMENT_TIME, new org.apache.thrift.meta_data.FieldMetaData("recommentTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MERCHANT_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IMAGE_PIC, new org.apache.thrift.meta_data.FieldMetaData("imagePic", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BIG_ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("bigOrderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProductCommentVo.class, metaDataMap);
  }

  public ProductCommentVo() {
  }

  public ProductCommentVo(
    String commentId,
    String productId,
    String productName,
    short orderValue,
    String clientId,
    String merchantId,
    String merchantName,
    String orderId,
    String orderType,
    String memberCode,
    String memberName,
    short starLevel,
    String commentDescription,
    String recomment,
    long createTime,
    String orgCode,
    long recommentTime,
    String merchantUserName,
    String phone,
    String imagePic,
    String type,
    String bigOrderId)
  {
    this();
    this.commentId = commentId;
    this.productId = productId;
    this.productName = productName;
    this.orderValue = orderValue;
    setOrderValueIsSet(true);
    this.clientId = clientId;
    this.merchantId = merchantId;
    this.merchantName = merchantName;
    this.orderId = orderId;
    this.orderType = orderType;
    this.memberCode = memberCode;
    this.memberName = memberName;
    this.starLevel = starLevel;
    setStarLevelIsSet(true);
    this.commentDescription = commentDescription;
    this.recomment = recomment;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.orgCode = orgCode;
    this.recommentTime = recommentTime;
    setRecommentTimeIsSet(true);
    this.merchantUserName = merchantUserName;
    this.phone = phone;
    this.imagePic = imagePic;
    this.type = type;
    this.bigOrderId = bigOrderId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProductCommentVo(ProductCommentVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetCommentId()) {
      this.commentId = other.commentId;
    }
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    this.orderValue = other.orderValue;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    if (other.isSetOrderType()) {
      this.orderType = other.orderType;
    }
    if (other.isSetMemberCode()) {
      this.memberCode = other.memberCode;
    }
    if (other.isSetMemberName()) {
      this.memberName = other.memberName;
    }
    this.starLevel = other.starLevel;
    if (other.isSetCommentDescription()) {
      this.commentDescription = other.commentDescription;
    }
    if (other.isSetRecomment()) {
      this.recomment = other.recomment;
    }
    this.createTime = other.createTime;
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    this.recommentTime = other.recommentTime;
    if (other.isSetMerchantUserName()) {
      this.merchantUserName = other.merchantUserName;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetImagePic()) {
      this.imagePic = other.imagePic;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetBigOrderId()) {
      this.bigOrderId = other.bigOrderId;
    }
  }

  public ProductCommentVo deepCopy() {
    return new ProductCommentVo(this);
  }

  @Override
  public void clear() {
    this.commentId = null;
    this.productId = null;
    this.productName = null;
    setOrderValueIsSet(false);
    this.orderValue = 0;
    this.clientId = null;
    this.merchantId = null;
    this.merchantName = null;
    this.orderId = null;
    this.orderType = null;
    this.memberCode = null;
    this.memberName = null;
    setStarLevelIsSet(false);
    this.starLevel = 0;
    this.commentDescription = null;
    this.recomment = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.orgCode = null;
    setRecommentTimeIsSet(false);
    this.recommentTime = 0;
    this.merchantUserName = null;
    this.phone = null;
    this.imagePic = null;
    this.type = null;
    this.bigOrderId = null;
  }

  /**
   * 评论id
   */
  public String getCommentId() {
    return this.commentId;
  }

  /**
   * 评论id
   */
  public ProductCommentVo setCommentId(String commentId) {
    this.commentId = commentId;
    return this;
  }

  public void unsetCommentId() {
    this.commentId = null;
  }

  /** Returns true if field commentId is set (has been assigned a value) and false otherwise */
  public boolean isSetCommentId() {
    return this.commentId != null;
  }

  public void setCommentIdIsSet(boolean value) {
    if (!value) {
      this.commentId = null;
    }
  }

  /**
   * 商品Id
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品Id
   */
  public ProductCommentVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 商品名称
   */
  public String getProductName() {
    return this.productName;
  }

  /**
   * 商品名称
   */
  public ProductCommentVo setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  /**
   * 排序
   */
  public short getOrderValue() {
    return this.orderValue;
  }

  /**
   * 排序
   */
  public ProductCommentVo setOrderValue(short orderValue) {
    this.orderValue = orderValue;
    setOrderValueIsSet(true);
    return this;
  }

  public void unsetOrderValue() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERVALUE_ISSET_ID);
  }

  /** Returns true if field orderValue is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderValue() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERVALUE_ISSET_ID);
  }

  public void setOrderValueIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERVALUE_ISSET_ID, value);
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public ProductCommentVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public ProductCommentVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 商户名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称
   */
  public ProductCommentVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 交易编号
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 交易编号
   */
  public ProductCommentVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 交易类型
   */
  public String getOrderType() {
    return this.orderType;
  }

  /**
   * 交易类型
   */
  public ProductCommentVo setOrderType(String orderType) {
    this.orderType = orderType;
    return this;
  }

  public void unsetOrderType() {
    this.orderType = null;
  }

  /** Returns true if field orderType is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderType() {
    return this.orderType != null;
  }

  public void setOrderTypeIsSet(boolean value) {
    if (!value) {
      this.orderType = null;
    }
  }

  /**
   * 用户编码
   */
  public String getMemberCode() {
    return this.memberCode;
  }

  /**
   * 用户编码
   */
  public ProductCommentVo setMemberCode(String memberCode) {
    this.memberCode = memberCode;
    return this;
  }

  public void unsetMemberCode() {
    this.memberCode = null;
  }

  /** Returns true if field memberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberCode() {
    return this.memberCode != null;
  }

  public void setMemberCodeIsSet(boolean value) {
    if (!value) {
      this.memberCode = null;
    }
  }

  /**
   * 评论人
   */
  public String getMemberName() {
    return this.memberName;
  }

  /**
   * 评论人
   */
  public ProductCommentVo setMemberName(String memberName) {
    this.memberName = memberName;
    return this;
  }

  public void unsetMemberName() {
    this.memberName = null;
  }

  /** Returns true if field memberName is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberName() {
    return this.memberName != null;
  }

  public void setMemberNameIsSet(boolean value) {
    if (!value) {
      this.memberName = null;
    }
  }

  /**
   * 评价星级
   */
  public short getStarLevel() {
    return this.starLevel;
  }

  /**
   * 评价星级
   */
  public ProductCommentVo setStarLevel(short starLevel) {
    this.starLevel = starLevel;
    setStarLevelIsSet(true);
    return this;
  }

  public void unsetStarLevel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  /** Returns true if field starLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetStarLevel() {
    return EncodingUtils.testBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  public void setStarLevelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARLEVEL_ISSET_ID, value);
  }

  /**
   * 评价内容
   */
  public String getCommentDescription() {
    return this.commentDescription;
  }

  /**
   * 评价内容
   */
  public ProductCommentVo setCommentDescription(String commentDescription) {
    this.commentDescription = commentDescription;
    return this;
  }

  public void unsetCommentDescription() {
    this.commentDescription = null;
  }

  /** Returns true if field commentDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetCommentDescription() {
    return this.commentDescription != null;
  }

  public void setCommentDescriptionIsSet(boolean value) {
    if (!value) {
      this.commentDescription = null;
    }
  }

  /**
   * 回复评价内容
   */
  public String getRecomment() {
    return this.recomment;
  }

  /**
   * 回复评价内容
   */
  public ProductCommentVo setRecomment(String recomment) {
    this.recomment = recomment;
    return this;
  }

  public void unsetRecomment() {
    this.recomment = null;
  }

  /** Returns true if field recomment is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomment() {
    return this.recomment != null;
  }

  public void setRecommentIsSet(boolean value) {
    if (!value) {
      this.recomment = null;
    }
  }

  /**
   * 评价时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 评价时间
   */
  public ProductCommentVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 机构码
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 机构码
   */
  public ProductCommentVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 回复时间
   */
  public long getRecommentTime() {
    return this.recommentTime;
  }

  /**
   * 回复时间
   */
  public ProductCommentVo setRecommentTime(long recommentTime) {
    this.recommentTime = recommentTime;
    setRecommentTimeIsSet(true);
    return this;
  }

  public void unsetRecommentTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RECOMMENTTIME_ISSET_ID);
  }

  /** Returns true if field recommentTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommentTime() {
    return EncodingUtils.testBit(__isset_bitfield, __RECOMMENTTIME_ISSET_ID);
  }

  public void setRecommentTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RECOMMENTTIME_ISSET_ID, value);
  }

  /**
   * 回复人
   */
  public String getMerchantUserName() {
    return this.merchantUserName;
  }

  /**
   * 回复人
   */
  public ProductCommentVo setMerchantUserName(String merchantUserName) {
    this.merchantUserName = merchantUserName;
    return this;
  }

  public void unsetMerchantUserName() {
    this.merchantUserName = null;
  }

  /** Returns true if field merchantUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantUserName() {
    return this.merchantUserName != null;
  }

  public void setMerchantUserNameIsSet(boolean value) {
    if (!value) {
      this.merchantUserName = null;
    }
  }

  /**
   * 商品电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 商品电话
   */
  public ProductCommentVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 商品图片
   */
  public String getImagePic() {
    return this.imagePic;
  }

  /**
   * 商品图片
   */
  public ProductCommentVo setImagePic(String imagePic) {
    this.imagePic = imagePic;
    return this;
  }

  public void unsetImagePic() {
    this.imagePic = null;
  }

  /** Returns true if field imagePic is set (has been assigned a value) and false otherwise */
  public boolean isSetImagePic() {
    return this.imagePic != null;
  }

  public void setImagePicIsSet(boolean value) {
    if (!value) {
      this.imagePic = null;
    }
  }

  /**
   * 商品类型
   */
  public String getType() {
    return this.type;
  }

  /**
   * 商品类型
   */
  public ProductCommentVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 大交易编号
   */
  public String getBigOrderId() {
    return this.bigOrderId;
  }

  /**
   * 大交易编号
   */
  public ProductCommentVo setBigOrderId(String bigOrderId) {
    this.bigOrderId = bigOrderId;
    return this;
  }

  public void unsetBigOrderId() {
    this.bigOrderId = null;
  }

  /** Returns true if field bigOrderId is set (has been assigned a value) and false otherwise */
  public boolean isSetBigOrderId() {
    return this.bigOrderId != null;
  }

  public void setBigOrderIdIsSet(boolean value) {
    if (!value) {
      this.bigOrderId = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case COMMENT_ID:
      if (value == null) {
        unsetCommentId();
      } else {
        setCommentId((String)value);
      }
      break;

    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case ORDER_VALUE:
      if (value == null) {
        unsetOrderValue();
      } else {
        setOrderValue((Short)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case ORDER_TYPE:
      if (value == null) {
        unsetOrderType();
      } else {
        setOrderType((String)value);
      }
      break;

    case MEMBER_CODE:
      if (value == null) {
        unsetMemberCode();
      } else {
        setMemberCode((String)value);
      }
      break;

    case MEMBER_NAME:
      if (value == null) {
        unsetMemberName();
      } else {
        setMemberName((String)value);
      }
      break;

    case STAR_LEVEL:
      if (value == null) {
        unsetStarLevel();
      } else {
        setStarLevel((Short)value);
      }
      break;

    case COMMENT_DESCRIPTION:
      if (value == null) {
        unsetCommentDescription();
      } else {
        setCommentDescription((String)value);
      }
      break;

    case RECOMMENT:
      if (value == null) {
        unsetRecomment();
      } else {
        setRecomment((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case RECOMMENT_TIME:
      if (value == null) {
        unsetRecommentTime();
      } else {
        setRecommentTime((Long)value);
      }
      break;

    case MERCHANT_USER_NAME:
      if (value == null) {
        unsetMerchantUserName();
      } else {
        setMerchantUserName((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case IMAGE_PIC:
      if (value == null) {
        unsetImagePic();
      } else {
        setImagePic((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case BIG_ORDER_ID:
      if (value == null) {
        unsetBigOrderId();
      } else {
        setBigOrderId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case COMMENT_ID:
      return getCommentId();

    case PRODUCT_ID:
      return getProductId();

    case PRODUCT_NAME:
      return getProductName();

    case ORDER_VALUE:
      return Short.valueOf(getOrderValue());

    case CLIENT_ID:
      return getClientId();

    case MERCHANT_ID:
      return getMerchantId();

    case MERCHANT_NAME:
      return getMerchantName();

    case ORDER_ID:
      return getOrderId();

    case ORDER_TYPE:
      return getOrderType();

    case MEMBER_CODE:
      return getMemberCode();

    case MEMBER_NAME:
      return getMemberName();

    case STAR_LEVEL:
      return Short.valueOf(getStarLevel());

    case COMMENT_DESCRIPTION:
      return getCommentDescription();

    case RECOMMENT:
      return getRecomment();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case ORG_CODE:
      return getOrgCode();

    case RECOMMENT_TIME:
      return Long.valueOf(getRecommentTime());

    case MERCHANT_USER_NAME:
      return getMerchantUserName();

    case PHONE:
      return getPhone();

    case IMAGE_PIC:
      return getImagePic();

    case TYPE:
      return getType();

    case BIG_ORDER_ID:
      return getBigOrderId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case COMMENT_ID:
      return isSetCommentId();
    case PRODUCT_ID:
      return isSetProductId();
    case PRODUCT_NAME:
      return isSetProductName();
    case ORDER_VALUE:
      return isSetOrderValue();
    case CLIENT_ID:
      return isSetClientId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case ORDER_ID:
      return isSetOrderId();
    case ORDER_TYPE:
      return isSetOrderType();
    case MEMBER_CODE:
      return isSetMemberCode();
    case MEMBER_NAME:
      return isSetMemberName();
    case STAR_LEVEL:
      return isSetStarLevel();
    case COMMENT_DESCRIPTION:
      return isSetCommentDescription();
    case RECOMMENT:
      return isSetRecomment();
    case CREATE_TIME:
      return isSetCreateTime();
    case ORG_CODE:
      return isSetOrgCode();
    case RECOMMENT_TIME:
      return isSetRecommentTime();
    case MERCHANT_USER_NAME:
      return isSetMerchantUserName();
    case PHONE:
      return isSetPhone();
    case IMAGE_PIC:
      return isSetImagePic();
    case TYPE:
      return isSetType();
    case BIG_ORDER_ID:
      return isSetBigOrderId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProductCommentVo)
      return this.equals((ProductCommentVo)that);
    return false;
  }

  public boolean equals(ProductCommentVo that) {
    if (that == null)
      return false;

    boolean this_present_commentId = true && this.isSetCommentId();
    boolean that_present_commentId = true && that.isSetCommentId();
    if (this_present_commentId || that_present_commentId) {
      if (!(this_present_commentId && that_present_commentId))
        return false;
      if (!this.commentId.equals(that.commentId))
        return false;
    }

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_orderValue = true;
    boolean that_present_orderValue = true;
    if (this_present_orderValue || that_present_orderValue) {
      if (!(this_present_orderValue && that_present_orderValue))
        return false;
      if (this.orderValue != that.orderValue)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_orderType = true && this.isSetOrderType();
    boolean that_present_orderType = true && that.isSetOrderType();
    if (this_present_orderType || that_present_orderType) {
      if (!(this_present_orderType && that_present_orderType))
        return false;
      if (!this.orderType.equals(that.orderType))
        return false;
    }

    boolean this_present_memberCode = true && this.isSetMemberCode();
    boolean that_present_memberCode = true && that.isSetMemberCode();
    if (this_present_memberCode || that_present_memberCode) {
      if (!(this_present_memberCode && that_present_memberCode))
        return false;
      if (!this.memberCode.equals(that.memberCode))
        return false;
    }

    boolean this_present_memberName = true && this.isSetMemberName();
    boolean that_present_memberName = true && that.isSetMemberName();
    if (this_present_memberName || that_present_memberName) {
      if (!(this_present_memberName && that_present_memberName))
        return false;
      if (!this.memberName.equals(that.memberName))
        return false;
    }

    boolean this_present_starLevel = true;
    boolean that_present_starLevel = true;
    if (this_present_starLevel || that_present_starLevel) {
      if (!(this_present_starLevel && that_present_starLevel))
        return false;
      if (this.starLevel != that.starLevel)
        return false;
    }

    boolean this_present_commentDescription = true && this.isSetCommentDescription();
    boolean that_present_commentDescription = true && that.isSetCommentDescription();
    if (this_present_commentDescription || that_present_commentDescription) {
      if (!(this_present_commentDescription && that_present_commentDescription))
        return false;
      if (!this.commentDescription.equals(that.commentDescription))
        return false;
    }

    boolean this_present_recomment = true && this.isSetRecomment();
    boolean that_present_recomment = true && that.isSetRecomment();
    if (this_present_recomment || that_present_recomment) {
      if (!(this_present_recomment && that_present_recomment))
        return false;
      if (!this.recomment.equals(that.recomment))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_recommentTime = true;
    boolean that_present_recommentTime = true;
    if (this_present_recommentTime || that_present_recommentTime) {
      if (!(this_present_recommentTime && that_present_recommentTime))
        return false;
      if (this.recommentTime != that.recommentTime)
        return false;
    }

    boolean this_present_merchantUserName = true && this.isSetMerchantUserName();
    boolean that_present_merchantUserName = true && that.isSetMerchantUserName();
    if (this_present_merchantUserName || that_present_merchantUserName) {
      if (!(this_present_merchantUserName && that_present_merchantUserName))
        return false;
      if (!this.merchantUserName.equals(that.merchantUserName))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_imagePic = true && this.isSetImagePic();
    boolean that_present_imagePic = true && that.isSetImagePic();
    if (this_present_imagePic || that_present_imagePic) {
      if (!(this_present_imagePic && that_present_imagePic))
        return false;
      if (!this.imagePic.equals(that.imagePic))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_bigOrderId = true && this.isSetBigOrderId();
    boolean that_present_bigOrderId = true && that.isSetBigOrderId();
    if (this_present_bigOrderId || that_present_bigOrderId) {
      if (!(this_present_bigOrderId && that_present_bigOrderId))
        return false;
      if (!this.bigOrderId.equals(that.bigOrderId))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_commentId = true && (isSetCommentId());
    list.add(present_commentId);
    if (present_commentId)
      list.add(commentId);

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_orderValue = true;
    list.add(present_orderValue);
    if (present_orderValue)
      list.add(orderValue);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_orderType = true && (isSetOrderType());
    list.add(present_orderType);
    if (present_orderType)
      list.add(orderType);

    boolean present_memberCode = true && (isSetMemberCode());
    list.add(present_memberCode);
    if (present_memberCode)
      list.add(memberCode);

    boolean present_memberName = true && (isSetMemberName());
    list.add(present_memberName);
    if (present_memberName)
      list.add(memberName);

    boolean present_starLevel = true;
    list.add(present_starLevel);
    if (present_starLevel)
      list.add(starLevel);

    boolean present_commentDescription = true && (isSetCommentDescription());
    list.add(present_commentDescription);
    if (present_commentDescription)
      list.add(commentDescription);

    boolean present_recomment = true && (isSetRecomment());
    list.add(present_recomment);
    if (present_recomment)
      list.add(recomment);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_recommentTime = true;
    list.add(present_recommentTime);
    if (present_recommentTime)
      list.add(recommentTime);

    boolean present_merchantUserName = true && (isSetMerchantUserName());
    list.add(present_merchantUserName);
    if (present_merchantUserName)
      list.add(merchantUserName);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_imagePic = true && (isSetImagePic());
    list.add(present_imagePic);
    if (present_imagePic)
      list.add(imagePic);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_bigOrderId = true && (isSetBigOrderId());
    list.add(present_bigOrderId);
    if (present_bigOrderId)
      list.add(bigOrderId);

    return list.hashCode();
  }

  @Override
  public int compareTo(ProductCommentVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCommentId()).compareTo(other.isSetCommentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commentId, other.commentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderValue()).compareTo(other.isSetOrderValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderValue, other.orderValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderType()).compareTo(other.isSetOrderType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderType, other.orderType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberCode()).compareTo(other.isSetMemberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberCode, other.memberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberName()).compareTo(other.isSetMemberName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberName, other.memberName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarLevel()).compareTo(other.isSetStarLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starLevel, other.starLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommentDescription()).compareTo(other.isSetCommentDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommentDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commentDescription, other.commentDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecomment()).compareTo(other.isSetRecomment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomment, other.recomment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommentTime()).compareTo(other.isSetRecommentTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommentTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommentTime, other.recommentTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantUserName()).compareTo(other.isSetMerchantUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantUserName, other.merchantUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImagePic()).compareTo(other.isSetImagePic());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImagePic()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.imagePic, other.imagePic);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBigOrderId()).compareTo(other.isSetBigOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBigOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bigOrderId, other.bigOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProductCommentVo(");
    boolean first = true;

    sb.append("commentId:");
    if (this.commentId == null) {
      sb.append("null");
    } else {
      sb.append(this.commentId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderValue:");
    sb.append(this.orderValue);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderType:");
    if (this.orderType == null) {
      sb.append("null");
    } else {
      sb.append(this.orderType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberCode:");
    if (this.memberCode == null) {
      sb.append("null");
    } else {
      sb.append(this.memberCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberName:");
    if (this.memberName == null) {
      sb.append("null");
    } else {
      sb.append(this.memberName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("starLevel:");
    sb.append(this.starLevel);
    first = false;
    if (!first) sb.append(", ");
    sb.append("commentDescription:");
    if (this.commentDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.commentDescription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recomment:");
    if (this.recomment == null) {
      sb.append("null");
    } else {
      sb.append(this.recomment);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommentTime:");
    sb.append(this.recommentTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantUserName:");
    if (this.merchantUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("imagePic:");
    if (this.imagePic == null) {
      sb.append("null");
    } else {
      sb.append(this.imagePic);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bigOrderId:");
    if (this.bigOrderId == null) {
      sb.append("null");
    } else {
      sb.append(this.bigOrderId);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductCommentVoStandardSchemeFactory implements SchemeFactory {
    public ProductCommentVoStandardScheme getScheme() {
      return new ProductCommentVoStandardScheme();
    }
  }

  private static class ProductCommentVoStandardScheme extends StandardScheme<ProductCommentVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProductCommentVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMMENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.commentId = iprot.readString();
              struct.setCommentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORDER_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.orderValue = iprot.readI16();
              struct.setOrderValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ORDER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderType = iprot.readString();
              struct.setOrderTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MEMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberCode = iprot.readString();
              struct.setMemberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // MEMBER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberName = iprot.readString();
              struct.setMemberNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // STAR_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.starLevel = iprot.readI16();
              struct.setStarLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // COMMENT_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.commentDescription = iprot.readString();
              struct.setCommentDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // RECOMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recomment = iprot.readString();
              struct.setRecommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // RECOMMENT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.recommentTime = iprot.readI64();
              struct.setRecommentTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // MERCHANT_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantUserName = iprot.readString();
              struct.setMerchantUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // IMAGE_PIC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.imagePic = iprot.readString();
              struct.setImagePicIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // BIG_ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bigOrderId = iprot.readString();
              struct.setBigOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProductCommentVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.commentId != null) {
        oprot.writeFieldBegin(COMMENT_ID_FIELD_DESC);
        oprot.writeString(struct.commentId);
        oprot.writeFieldEnd();
      }
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ORDER_VALUE_FIELD_DESC);
      oprot.writeI16(struct.orderValue);
      oprot.writeFieldEnd();
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      if (struct.orderType != null) {
        oprot.writeFieldBegin(ORDER_TYPE_FIELD_DESC);
        oprot.writeString(struct.orderType);
        oprot.writeFieldEnd();
      }
      if (struct.memberCode != null) {
        oprot.writeFieldBegin(MEMBER_CODE_FIELD_DESC);
        oprot.writeString(struct.memberCode);
        oprot.writeFieldEnd();
      }
      if (struct.memberName != null) {
        oprot.writeFieldBegin(MEMBER_NAME_FIELD_DESC);
        oprot.writeString(struct.memberName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STAR_LEVEL_FIELD_DESC);
      oprot.writeI16(struct.starLevel);
      oprot.writeFieldEnd();
      if (struct.commentDescription != null) {
        oprot.writeFieldBegin(COMMENT_DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.commentDescription);
        oprot.writeFieldEnd();
      }
      if (struct.recomment != null) {
        oprot.writeFieldBegin(RECOMMENT_FIELD_DESC);
        oprot.writeString(struct.recomment);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RECOMMENT_TIME_FIELD_DESC);
      oprot.writeI64(struct.recommentTime);
      oprot.writeFieldEnd();
      if (struct.merchantUserName != null) {
        oprot.writeFieldBegin(MERCHANT_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantUserName);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.imagePic != null) {
        oprot.writeFieldBegin(IMAGE_PIC_FIELD_DESC);
        oprot.writeString(struct.imagePic);
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.bigOrderId != null) {
        oprot.writeFieldBegin(BIG_ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.bigOrderId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductCommentVoTupleSchemeFactory implements SchemeFactory {
    public ProductCommentVoTupleScheme getScheme() {
      return new ProductCommentVoTupleScheme();
    }
  }

  private static class ProductCommentVoTupleScheme extends TupleScheme<ProductCommentVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProductCommentVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCommentId()) {
        optionals.set(0);
      }
      if (struct.isSetProductId()) {
        optionals.set(1);
      }
      if (struct.isSetProductName()) {
        optionals.set(2);
      }
      if (struct.isSetOrderValue()) {
        optionals.set(3);
      }
      if (struct.isSetClientId()) {
        optionals.set(4);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(5);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(6);
      }
      if (struct.isSetOrderId()) {
        optionals.set(7);
      }
      if (struct.isSetOrderType()) {
        optionals.set(8);
      }
      if (struct.isSetMemberCode()) {
        optionals.set(9);
      }
      if (struct.isSetMemberName()) {
        optionals.set(10);
      }
      if (struct.isSetStarLevel()) {
        optionals.set(11);
      }
      if (struct.isSetCommentDescription()) {
        optionals.set(12);
      }
      if (struct.isSetRecomment()) {
        optionals.set(13);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(14);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(15);
      }
      if (struct.isSetRecommentTime()) {
        optionals.set(16);
      }
      if (struct.isSetMerchantUserName()) {
        optionals.set(17);
      }
      if (struct.isSetPhone()) {
        optionals.set(18);
      }
      if (struct.isSetImagePic()) {
        optionals.set(19);
      }
      if (struct.isSetType()) {
        optionals.set(20);
      }
      if (struct.isSetBigOrderId()) {
        optionals.set(21);
      }
      oprot.writeBitSet(optionals, 22);
      if (struct.isSetCommentId()) {
        oprot.writeString(struct.commentId);
      }
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetOrderValue()) {
        oprot.writeI16(struct.orderValue);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetOrderType()) {
        oprot.writeString(struct.orderType);
      }
      if (struct.isSetMemberCode()) {
        oprot.writeString(struct.memberCode);
      }
      if (struct.isSetMemberName()) {
        oprot.writeString(struct.memberName);
      }
      if (struct.isSetStarLevel()) {
        oprot.writeI16(struct.starLevel);
      }
      if (struct.isSetCommentDescription()) {
        oprot.writeString(struct.commentDescription);
      }
      if (struct.isSetRecomment()) {
        oprot.writeString(struct.recomment);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetRecommentTime()) {
        oprot.writeI64(struct.recommentTime);
      }
      if (struct.isSetMerchantUserName()) {
        oprot.writeString(struct.merchantUserName);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetImagePic()) {
        oprot.writeString(struct.imagePic);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetBigOrderId()) {
        oprot.writeString(struct.bigOrderId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProductCommentVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(22);
      if (incoming.get(0)) {
        struct.commentId = iprot.readString();
        struct.setCommentIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.orderValue = iprot.readI16();
        struct.setOrderValueIsSet(true);
      }
      if (incoming.get(4)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.orderType = iprot.readString();
        struct.setOrderTypeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.memberCode = iprot.readString();
        struct.setMemberCodeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.memberName = iprot.readString();
        struct.setMemberNameIsSet(true);
      }
      if (incoming.get(11)) {
        struct.starLevel = iprot.readI16();
        struct.setStarLevelIsSet(true);
      }
      if (incoming.get(12)) {
        struct.commentDescription = iprot.readString();
        struct.setCommentDescriptionIsSet(true);
      }
      if (incoming.get(13)) {
        struct.recomment = iprot.readString();
        struct.setRecommentIsSet(true);
      }
      if (incoming.get(14)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.recommentTime = iprot.readI64();
        struct.setRecommentTimeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.merchantUserName = iprot.readString();
        struct.setMerchantUserNameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(19)) {
        struct.imagePic = iprot.readString();
        struct.setImagePicIsSet(true);
      }
      if (incoming.get(20)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.bigOrderId = iprot.readString();
        struct.setBigOrderIdIsSet(true);
      }
    }
  }

}

