/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class AdvertisingService {

  /**
   * 广告服务
   */
  public interface Iface extends com.froad.thrift.monitor.service.BizMonitorService.Iface {

    /**
     * 增加 AdvertisingVo
     * @param advertisingVo
     * @return AddResultVo
     * 
     * @param originVo
     * @param advertisingVo
     */
    public com.froad.thrift.vo.AddResultVo addAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException;

    /**
     * 删除 AdvertisingVo
     * @param id
     * @return ResultVo
     * 
     * @param originVo
     * @param id
     */
    public com.froad.thrift.vo.ResultVo deleteAdvertising(com.froad.thrift.vo.OriginVo originVo, long id) throws org.apache.thrift.TException;

    /**
     * 修改 AdvertisingVo
     * @param advertisingVo
     * @return ResultVo
     * 
     * @param originVo
     * @param advertisingVo
     */
    public com.froad.thrift.vo.ResultVo updateAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException;

    /**
     * 查询 AdvertisingVo 列表
     * @param advertisingVo
     * @return List<AdvertisingVo>
     * 
     * @param advertisingVo
     */
    public com.froad.thrift.vo.FindAllAdvertisingResultVo getAdvertising(com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException;

    /**
     * 分页查询 AdvertisingVo
     * @param advertisingVo
     * @return AdvertisingPageVoRes
     * 
     * @param page
     * @param advertisingVo
     */
    public com.froad.thrift.vo.FindPageAdvertisingResultVo getAdvertisingByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException;

    /**
     * 查询 AdvertisingVo 单个
     * @return AdvertisingVo
     * 
     * @param clientId
     * @param id
     */
    public com.froad.thrift.vo.FindAdvertisingResultVo getAdvertisingById(String clientId, long id) throws org.apache.thrift.TException;

    /**
     * 页面优化查询 AdvertisingVo 列表
     * @param findAllAdvertisingParamVo
     * @return FindAllAdvertisingResultVo
     * 
     * @param findAllAdvertisingParamVo
     */
    public com.froad.thrift.vo.FindAllAdvertisingResultVo pageOptFindAdvertisings(com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends com.froad.thrift.monitor.service.BizMonitorService .AsyncIface {

    public void addAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void deleteAdvertising(com.froad.thrift.vo.OriginVo originVo, long id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void updateAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getAdvertising(com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getAdvertisingByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getAdvertisingById(String clientId, long id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void pageOptFindAdvertisings(com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends com.froad.thrift.monitor.service.BizMonitorService.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.froad.thrift.vo.AddResultVo addAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException
    {
      send_addAdvertising(originVo, advertisingVo);
      return recv_addAdvertising();
    }

    public void send_addAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException
    {
      addAdvertising_args args = new addAdvertising_args();
      args.setOriginVo(originVo);
      args.setAdvertisingVo(advertisingVo);
      sendBase("addAdvertising", args);
    }

    public com.froad.thrift.vo.AddResultVo recv_addAdvertising() throws org.apache.thrift.TException
    {
      addAdvertising_result result = new addAdvertising_result();
      receiveBase(result, "addAdvertising");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addAdvertising failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo deleteAdvertising(com.froad.thrift.vo.OriginVo originVo, long id) throws org.apache.thrift.TException
    {
      send_deleteAdvertising(originVo, id);
      return recv_deleteAdvertising();
    }

    public void send_deleteAdvertising(com.froad.thrift.vo.OriginVo originVo, long id) throws org.apache.thrift.TException
    {
      deleteAdvertising_args args = new deleteAdvertising_args();
      args.setOriginVo(originVo);
      args.setId(id);
      sendBase("deleteAdvertising", args);
    }

    public com.froad.thrift.vo.ResultVo recv_deleteAdvertising() throws org.apache.thrift.TException
    {
      deleteAdvertising_result result = new deleteAdvertising_result();
      receiveBase(result, "deleteAdvertising");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteAdvertising failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo updateAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException
    {
      send_updateAdvertising(originVo, advertisingVo);
      return recv_updateAdvertising();
    }

    public void send_updateAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException
    {
      updateAdvertising_args args = new updateAdvertising_args();
      args.setOriginVo(originVo);
      args.setAdvertisingVo(advertisingVo);
      sendBase("updateAdvertising", args);
    }

    public com.froad.thrift.vo.ResultVo recv_updateAdvertising() throws org.apache.thrift.TException
    {
      updateAdvertising_result result = new updateAdvertising_result();
      receiveBase(result, "updateAdvertising");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateAdvertising failed: unknown result");
    }

    public com.froad.thrift.vo.FindAllAdvertisingResultVo getAdvertising(com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException
    {
      send_getAdvertising(advertisingVo);
      return recv_getAdvertising();
    }

    public void send_getAdvertising(com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException
    {
      getAdvertising_args args = new getAdvertising_args();
      args.setAdvertisingVo(advertisingVo);
      sendBase("getAdvertising", args);
    }

    public com.froad.thrift.vo.FindAllAdvertisingResultVo recv_getAdvertising() throws org.apache.thrift.TException
    {
      getAdvertising_result result = new getAdvertising_result();
      receiveBase(result, "getAdvertising");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getAdvertising failed: unknown result");
    }

    public com.froad.thrift.vo.FindPageAdvertisingResultVo getAdvertisingByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException
    {
      send_getAdvertisingByPage(page, advertisingVo);
      return recv_getAdvertisingByPage();
    }

    public void send_getAdvertisingByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.AdvertisingVo advertisingVo) throws org.apache.thrift.TException
    {
      getAdvertisingByPage_args args = new getAdvertisingByPage_args();
      args.setPage(page);
      args.setAdvertisingVo(advertisingVo);
      sendBase("getAdvertisingByPage", args);
    }

    public com.froad.thrift.vo.FindPageAdvertisingResultVo recv_getAdvertisingByPage() throws org.apache.thrift.TException
    {
      getAdvertisingByPage_result result = new getAdvertisingByPage_result();
      receiveBase(result, "getAdvertisingByPage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getAdvertisingByPage failed: unknown result");
    }

    public com.froad.thrift.vo.FindAdvertisingResultVo getAdvertisingById(String clientId, long id) throws org.apache.thrift.TException
    {
      send_getAdvertisingById(clientId, id);
      return recv_getAdvertisingById();
    }

    public void send_getAdvertisingById(String clientId, long id) throws org.apache.thrift.TException
    {
      getAdvertisingById_args args = new getAdvertisingById_args();
      args.setClientId(clientId);
      args.setId(id);
      sendBase("getAdvertisingById", args);
    }

    public com.froad.thrift.vo.FindAdvertisingResultVo recv_getAdvertisingById() throws org.apache.thrift.TException
    {
      getAdvertisingById_result result = new getAdvertisingById_result();
      receiveBase(result, "getAdvertisingById");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getAdvertisingById failed: unknown result");
    }

    public com.froad.thrift.vo.FindAllAdvertisingResultVo pageOptFindAdvertisings(com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo) throws org.apache.thrift.TException
    {
      send_pageOptFindAdvertisings(findAllAdvertisingParamVo);
      return recv_pageOptFindAdvertisings();
    }

    public void send_pageOptFindAdvertisings(com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo) throws org.apache.thrift.TException
    {
      pageOptFindAdvertisings_args args = new pageOptFindAdvertisings_args();
      args.setFindAllAdvertisingParamVo(findAllAdvertisingParamVo);
      sendBase("pageOptFindAdvertisings", args);
    }

    public com.froad.thrift.vo.FindAllAdvertisingResultVo recv_pageOptFindAdvertisings() throws org.apache.thrift.TException
    {
      pageOptFindAdvertisings_result result = new pageOptFindAdvertisings_result();
      receiveBase(result, "pageOptFindAdvertisings");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "pageOptFindAdvertisings failed: unknown result");
    }

  }
  public static class AsyncClient extends com.froad.thrift.monitor.service.BizMonitorService.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void addAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addAdvertising_call method_call = new addAdvertising_call(originVo, advertisingVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addAdvertising_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.AdvertisingVo advertisingVo;
      public addAdvertising_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.advertisingVo = advertisingVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addAdvertising", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addAdvertising_args args = new addAdvertising_args();
        args.setOriginVo(originVo);
        args.setAdvertisingVo(advertisingVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.AddResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addAdvertising();
      }
    }

    public void deleteAdvertising(com.froad.thrift.vo.OriginVo originVo, long id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteAdvertising_call method_call = new deleteAdvertising_call(originVo, id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteAdvertising_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private long id;
      public deleteAdvertising_call(com.froad.thrift.vo.OriginVo originVo, long id, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.id = id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteAdvertising", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteAdvertising_args args = new deleteAdvertising_args();
        args.setOriginVo(originVo);
        args.setId(id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deleteAdvertising();
      }
    }

    public void updateAdvertising(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateAdvertising_call method_call = new updateAdvertising_call(originVo, advertisingVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateAdvertising_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.AdvertisingVo advertisingVo;
      public updateAdvertising_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.advertisingVo = advertisingVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateAdvertising", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateAdvertising_args args = new updateAdvertising_args();
        args.setOriginVo(originVo);
        args.setAdvertisingVo(advertisingVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateAdvertising();
      }
    }

    public void getAdvertising(com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getAdvertising_call method_call = new getAdvertising_call(advertisingVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getAdvertising_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.AdvertisingVo advertisingVo;
      public getAdvertising_call(com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.advertisingVo = advertisingVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getAdvertising", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getAdvertising_args args = new getAdvertising_args();
        args.setAdvertisingVo(advertisingVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.FindAllAdvertisingResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getAdvertising();
      }
    }

    public void getAdvertisingByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getAdvertisingByPage_call method_call = new getAdvertisingByPage_call(page, advertisingVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getAdvertisingByPage_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.PageVo page;
      private com.froad.thrift.vo.AdvertisingVo advertisingVo;
      public getAdvertisingByPage_call(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.AdvertisingVo advertisingVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.page = page;
        this.advertisingVo = advertisingVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getAdvertisingByPage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getAdvertisingByPage_args args = new getAdvertisingByPage_args();
        args.setPage(page);
        args.setAdvertisingVo(advertisingVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.FindPageAdvertisingResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getAdvertisingByPage();
      }
    }

    public void getAdvertisingById(String clientId, long id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getAdvertisingById_call method_call = new getAdvertisingById_call(clientId, id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getAdvertisingById_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String clientId;
      private long id;
      public getAdvertisingById_call(String clientId, long id, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.clientId = clientId;
        this.id = id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getAdvertisingById", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getAdvertisingById_args args = new getAdvertisingById_args();
        args.setClientId(clientId);
        args.setId(id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.FindAdvertisingResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getAdvertisingById();
      }
    }

    public void pageOptFindAdvertisings(com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      pageOptFindAdvertisings_call method_call = new pageOptFindAdvertisings_call(findAllAdvertisingParamVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class pageOptFindAdvertisings_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo;
      public pageOptFindAdvertisings_call(com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.findAllAdvertisingParamVo = findAllAdvertisingParamVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("pageOptFindAdvertisings", org.apache.thrift.protocol.TMessageType.CALL, 0));
        pageOptFindAdvertisings_args args = new pageOptFindAdvertisings_args();
        args.setFindAllAdvertisingParamVo(findAllAdvertisingParamVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.FindAllAdvertisingResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_pageOptFindAdvertisings();
      }
    }

  }

  public static class Processor<I extends Iface> extends com.froad.thrift.monitor.service.BizMonitorService.Processor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("addAdvertising", new addAdvertising());
      processMap.put("deleteAdvertising", new deleteAdvertising());
      processMap.put("updateAdvertising", new updateAdvertising());
      processMap.put("getAdvertising", new getAdvertising());
      processMap.put("getAdvertisingByPage", new getAdvertisingByPage());
      processMap.put("getAdvertisingById", new getAdvertisingById());
      processMap.put("pageOptFindAdvertisings", new pageOptFindAdvertisings());
      return processMap;
    }

    public static class addAdvertising<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addAdvertising_args> {
      public addAdvertising() {
        super("addAdvertising");
      }

      public addAdvertising_args getEmptyArgsInstance() {
        return new addAdvertising_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addAdvertising_result getResult(I iface, addAdvertising_args args) throws org.apache.thrift.TException {
        addAdvertising_result result = new addAdvertising_result();
        result.success = iface.addAdvertising(args.originVo, args.advertisingVo);
        return result;
      }
    }

    public static class deleteAdvertising<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteAdvertising_args> {
      public deleteAdvertising() {
        super("deleteAdvertising");
      }

      public deleteAdvertising_args getEmptyArgsInstance() {
        return new deleteAdvertising_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteAdvertising_result getResult(I iface, deleteAdvertising_args args) throws org.apache.thrift.TException {
        deleteAdvertising_result result = new deleteAdvertising_result();
        result.success = iface.deleteAdvertising(args.originVo, args.id);
        return result;
      }
    }

    public static class updateAdvertising<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateAdvertising_args> {
      public updateAdvertising() {
        super("updateAdvertising");
      }

      public updateAdvertising_args getEmptyArgsInstance() {
        return new updateAdvertising_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateAdvertising_result getResult(I iface, updateAdvertising_args args) throws org.apache.thrift.TException {
        updateAdvertising_result result = new updateAdvertising_result();
        result.success = iface.updateAdvertising(args.originVo, args.advertisingVo);
        return result;
      }
    }

    public static class getAdvertising<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getAdvertising_args> {
      public getAdvertising() {
        super("getAdvertising");
      }

      public getAdvertising_args getEmptyArgsInstance() {
        return new getAdvertising_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getAdvertising_result getResult(I iface, getAdvertising_args args) throws org.apache.thrift.TException {
        getAdvertising_result result = new getAdvertising_result();
        result.success = iface.getAdvertising(args.advertisingVo);
        return result;
      }
    }

    public static class getAdvertisingByPage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getAdvertisingByPage_args> {
      public getAdvertisingByPage() {
        super("getAdvertisingByPage");
      }

      public getAdvertisingByPage_args getEmptyArgsInstance() {
        return new getAdvertisingByPage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getAdvertisingByPage_result getResult(I iface, getAdvertisingByPage_args args) throws org.apache.thrift.TException {
        getAdvertisingByPage_result result = new getAdvertisingByPage_result();
        result.success = iface.getAdvertisingByPage(args.page, args.advertisingVo);
        return result;
      }
    }

    public static class getAdvertisingById<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getAdvertisingById_args> {
      public getAdvertisingById() {
        super("getAdvertisingById");
      }

      public getAdvertisingById_args getEmptyArgsInstance() {
        return new getAdvertisingById_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getAdvertisingById_result getResult(I iface, getAdvertisingById_args args) throws org.apache.thrift.TException {
        getAdvertisingById_result result = new getAdvertisingById_result();
        result.success = iface.getAdvertisingById(args.clientId, args.id);
        return result;
      }
    }

    public static class pageOptFindAdvertisings<I extends Iface> extends org.apache.thrift.ProcessFunction<I, pageOptFindAdvertisings_args> {
      public pageOptFindAdvertisings() {
        super("pageOptFindAdvertisings");
      }

      public pageOptFindAdvertisings_args getEmptyArgsInstance() {
        return new pageOptFindAdvertisings_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public pageOptFindAdvertisings_result getResult(I iface, pageOptFindAdvertisings_args args) throws org.apache.thrift.TException {
        pageOptFindAdvertisings_result result = new pageOptFindAdvertisings_result();
        result.success = iface.pageOptFindAdvertisings(args.findAllAdvertisingParamVo);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends com.froad.thrift.monitor.service.BizMonitorService.AsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("addAdvertising", new addAdvertising());
      processMap.put("deleteAdvertising", new deleteAdvertising());
      processMap.put("updateAdvertising", new updateAdvertising());
      processMap.put("getAdvertising", new getAdvertising());
      processMap.put("getAdvertisingByPage", new getAdvertisingByPage());
      processMap.put("getAdvertisingById", new getAdvertisingById());
      processMap.put("pageOptFindAdvertisings", new pageOptFindAdvertisings());
      return processMap;
    }

    public static class addAdvertising<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addAdvertising_args, com.froad.thrift.vo.AddResultVo> {
      public addAdvertising() {
        super("addAdvertising");
      }

      public addAdvertising_args getEmptyArgsInstance() {
        return new addAdvertising_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.AddResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.AddResultVo>() { 
          public void onComplete(com.froad.thrift.vo.AddResultVo o) {
            addAdvertising_result result = new addAdvertising_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addAdvertising_result result = new addAdvertising_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addAdvertising_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.AddResultVo> resultHandler) throws TException {
        iface.addAdvertising(args.originVo, args.advertisingVo,resultHandler);
      }
    }

    public static class deleteAdvertising<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteAdvertising_args, com.froad.thrift.vo.ResultVo> {
      public deleteAdvertising() {
        super("deleteAdvertising");
      }

      public deleteAdvertising_args getEmptyArgsInstance() {
        return new deleteAdvertising_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            deleteAdvertising_result result = new deleteAdvertising_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            deleteAdvertising_result result = new deleteAdvertising_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteAdvertising_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.deleteAdvertising(args.originVo, args.id,resultHandler);
      }
    }

    public static class updateAdvertising<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateAdvertising_args, com.froad.thrift.vo.ResultVo> {
      public updateAdvertising() {
        super("updateAdvertising");
      }

      public updateAdvertising_args getEmptyArgsInstance() {
        return new updateAdvertising_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            updateAdvertising_result result = new updateAdvertising_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            updateAdvertising_result result = new updateAdvertising_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateAdvertising_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.updateAdvertising(args.originVo, args.advertisingVo,resultHandler);
      }
    }

    public static class getAdvertising<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getAdvertising_args, com.froad.thrift.vo.FindAllAdvertisingResultVo> {
      public getAdvertising() {
        super("getAdvertising");
      }

      public getAdvertising_args getEmptyArgsInstance() {
        return new getAdvertising_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.FindAllAdvertisingResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.FindAllAdvertisingResultVo>() { 
          public void onComplete(com.froad.thrift.vo.FindAllAdvertisingResultVo o) {
            getAdvertising_result result = new getAdvertising_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getAdvertising_result result = new getAdvertising_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getAdvertising_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.FindAllAdvertisingResultVo> resultHandler) throws TException {
        iface.getAdvertising(args.advertisingVo,resultHandler);
      }
    }

    public static class getAdvertisingByPage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getAdvertisingByPage_args, com.froad.thrift.vo.FindPageAdvertisingResultVo> {
      public getAdvertisingByPage() {
        super("getAdvertisingByPage");
      }

      public getAdvertisingByPage_args getEmptyArgsInstance() {
        return new getAdvertisingByPage_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.FindPageAdvertisingResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.FindPageAdvertisingResultVo>() { 
          public void onComplete(com.froad.thrift.vo.FindPageAdvertisingResultVo o) {
            getAdvertisingByPage_result result = new getAdvertisingByPage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getAdvertisingByPage_result result = new getAdvertisingByPage_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getAdvertisingByPage_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.FindPageAdvertisingResultVo> resultHandler) throws TException {
        iface.getAdvertisingByPage(args.page, args.advertisingVo,resultHandler);
      }
    }

    public static class getAdvertisingById<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getAdvertisingById_args, com.froad.thrift.vo.FindAdvertisingResultVo> {
      public getAdvertisingById() {
        super("getAdvertisingById");
      }

      public getAdvertisingById_args getEmptyArgsInstance() {
        return new getAdvertisingById_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.FindAdvertisingResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.FindAdvertisingResultVo>() { 
          public void onComplete(com.froad.thrift.vo.FindAdvertisingResultVo o) {
            getAdvertisingById_result result = new getAdvertisingById_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getAdvertisingById_result result = new getAdvertisingById_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getAdvertisingById_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.FindAdvertisingResultVo> resultHandler) throws TException {
        iface.getAdvertisingById(args.clientId, args.id,resultHandler);
      }
    }

    public static class pageOptFindAdvertisings<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, pageOptFindAdvertisings_args, com.froad.thrift.vo.FindAllAdvertisingResultVo> {
      public pageOptFindAdvertisings() {
        super("pageOptFindAdvertisings");
      }

      public pageOptFindAdvertisings_args getEmptyArgsInstance() {
        return new pageOptFindAdvertisings_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.FindAllAdvertisingResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.FindAllAdvertisingResultVo>() { 
          public void onComplete(com.froad.thrift.vo.FindAllAdvertisingResultVo o) {
            pageOptFindAdvertisings_result result = new pageOptFindAdvertisings_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            pageOptFindAdvertisings_result result = new pageOptFindAdvertisings_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, pageOptFindAdvertisings_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.FindAllAdvertisingResultVo> resultHandler) throws TException {
        iface.pageOptFindAdvertisings(args.findAllAdvertisingParamVo,resultHandler);
      }
    }

  }

  public static class addAdvertising_args implements org.apache.thrift.TBase<addAdvertising_args, addAdvertising_args._Fields>, java.io.Serializable, Cloneable, Comparable<addAdvertising_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addAdvertising_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField ADVERTISING_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("advertisingVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addAdvertising_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addAdvertising_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.AdvertisingVo advertisingVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      ADVERTISING_VO((short)2, "advertisingVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // ADVERTISING_VO
            return ADVERTISING_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.ADVERTISING_VO, new org.apache.thrift.meta_data.FieldMetaData("advertisingVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.AdvertisingVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addAdvertising_args.class, metaDataMap);
    }

    public addAdvertising_args() {
    }

    public addAdvertising_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.AdvertisingVo advertisingVo)
    {
      this();
      this.originVo = originVo;
      this.advertisingVo = advertisingVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addAdvertising_args(addAdvertising_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetAdvertisingVo()) {
        this.advertisingVo = new com.froad.thrift.vo.AdvertisingVo(other.advertisingVo);
      }
    }

    public addAdvertising_args deepCopy() {
      return new addAdvertising_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.advertisingVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public addAdvertising_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.AdvertisingVo getAdvertisingVo() {
      return this.advertisingVo;
    }

    public addAdvertising_args setAdvertisingVo(com.froad.thrift.vo.AdvertisingVo advertisingVo) {
      this.advertisingVo = advertisingVo;
      return this;
    }

    public void unsetAdvertisingVo() {
      this.advertisingVo = null;
    }

    /** Returns true if field advertisingVo is set (has been assigned a value) and false otherwise */
    public boolean isSetAdvertisingVo() {
      return this.advertisingVo != null;
    }

    public void setAdvertisingVoIsSet(boolean value) {
      if (!value) {
        this.advertisingVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case ADVERTISING_VO:
        if (value == null) {
          unsetAdvertisingVo();
        } else {
          setAdvertisingVo((com.froad.thrift.vo.AdvertisingVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case ADVERTISING_VO:
        return getAdvertisingVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case ADVERTISING_VO:
        return isSetAdvertisingVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addAdvertising_args)
        return this.equals((addAdvertising_args)that);
      return false;
    }

    public boolean equals(addAdvertising_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_advertisingVo = true && this.isSetAdvertisingVo();
      boolean that_present_advertisingVo = true && that.isSetAdvertisingVo();
      if (this_present_advertisingVo || that_present_advertisingVo) {
        if (!(this_present_advertisingVo && that_present_advertisingVo))
          return false;
        if (!this.advertisingVo.equals(that.advertisingVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_advertisingVo = true && (isSetAdvertisingVo());
      list.add(present_advertisingVo);
      if (present_advertisingVo)
        list.add(advertisingVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(addAdvertising_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetAdvertisingVo()).compareTo(other.isSetAdvertisingVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAdvertisingVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advertisingVo, other.advertisingVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addAdvertising_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("advertisingVo:");
      if (this.advertisingVo == null) {
        sb.append("null");
      } else {
        sb.append(this.advertisingVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (advertisingVo != null) {
        advertisingVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addAdvertising_argsStandardSchemeFactory implements SchemeFactory {
      public addAdvertising_argsStandardScheme getScheme() {
        return new addAdvertising_argsStandardScheme();
      }
    }

    private static class addAdvertising_argsStandardScheme extends StandardScheme<addAdvertising_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addAdvertising_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ADVERTISING_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.advertisingVo = new com.froad.thrift.vo.AdvertisingVo();
                struct.advertisingVo.read(iprot);
                struct.setAdvertisingVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addAdvertising_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.advertisingVo != null) {
          oprot.writeFieldBegin(ADVERTISING_VO_FIELD_DESC);
          struct.advertisingVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addAdvertising_argsTupleSchemeFactory implements SchemeFactory {
      public addAdvertising_argsTupleScheme getScheme() {
        return new addAdvertising_argsTupleScheme();
      }
    }

    private static class addAdvertising_argsTupleScheme extends TupleScheme<addAdvertising_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addAdvertising_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetAdvertisingVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetAdvertisingVo()) {
          struct.advertisingVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addAdvertising_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.advertisingVo = new com.froad.thrift.vo.AdvertisingVo();
          struct.advertisingVo.read(iprot);
          struct.setAdvertisingVoIsSet(true);
        }
      }
    }

  }

  public static class addAdvertising_result implements org.apache.thrift.TBase<addAdvertising_result, addAdvertising_result._Fields>, java.io.Serializable, Cloneable, Comparable<addAdvertising_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addAdvertising_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addAdvertising_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addAdvertising_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.AddResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.AddResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addAdvertising_result.class, metaDataMap);
    }

    public addAdvertising_result() {
    }

    public addAdvertising_result(
      com.froad.thrift.vo.AddResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addAdvertising_result(addAdvertising_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.AddResultVo(other.success);
      }
    }

    public addAdvertising_result deepCopy() {
      return new addAdvertising_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.AddResultVo getSuccess() {
      return this.success;
    }

    public addAdvertising_result setSuccess(com.froad.thrift.vo.AddResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.AddResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addAdvertising_result)
        return this.equals((addAdvertising_result)that);
      return false;
    }

    public boolean equals(addAdvertising_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(addAdvertising_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addAdvertising_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addAdvertising_resultStandardSchemeFactory implements SchemeFactory {
      public addAdvertising_resultStandardScheme getScheme() {
        return new addAdvertising_resultStandardScheme();
      }
    }

    private static class addAdvertising_resultStandardScheme extends StandardScheme<addAdvertising_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addAdvertising_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.AddResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addAdvertising_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addAdvertising_resultTupleSchemeFactory implements SchemeFactory {
      public addAdvertising_resultTupleScheme getScheme() {
        return new addAdvertising_resultTupleScheme();
      }
    }

    private static class addAdvertising_resultTupleScheme extends TupleScheme<addAdvertising_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addAdvertising_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addAdvertising_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.AddResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class deleteAdvertising_args implements org.apache.thrift.TBase<deleteAdvertising_args, deleteAdvertising_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteAdvertising_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteAdvertising_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteAdvertising_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteAdvertising_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public long id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      ID((short)2, "id");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // ID
            return ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteAdvertising_args.class, metaDataMap);
    }

    public deleteAdvertising_args() {
    }

    public deleteAdvertising_args(
      com.froad.thrift.vo.OriginVo originVo,
      long id)
    {
      this();
      this.originVo = originVo;
      this.id = id;
      setIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteAdvertising_args(deleteAdvertising_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      this.id = other.id;
    }

    public deleteAdvertising_args deepCopy() {
      return new deleteAdvertising_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      setIdIsSet(false);
      this.id = 0;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public deleteAdvertising_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public long getId() {
      return this.id;
    }

    public deleteAdvertising_args setId(long id) {
      this.id = id;
      setIdIsSet(true);
      return this;
    }

    public void unsetId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((Long)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case ID:
        return Long.valueOf(getId());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case ID:
        return isSetId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteAdvertising_args)
        return this.equals((deleteAdvertising_args)that);
      return false;
    }

    public boolean equals(deleteAdvertising_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_id = true;
      boolean that_present_id = true;
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (this.id != that.id)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_id = true;
      list.add(present_id);
      if (present_id)
        list.add(id);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteAdvertising_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteAdvertising_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteAdvertising_argsStandardSchemeFactory implements SchemeFactory {
      public deleteAdvertising_argsStandardScheme getScheme() {
        return new deleteAdvertising_argsStandardScheme();
      }
    }

    private static class deleteAdvertising_argsStandardScheme extends StandardScheme<deleteAdvertising_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteAdvertising_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.id = iprot.readI64();
                struct.setIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteAdvertising_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteAdvertising_argsTupleSchemeFactory implements SchemeFactory {
      public deleteAdvertising_argsTupleScheme getScheme() {
        return new deleteAdvertising_argsTupleScheme();
      }
    }

    private static class deleteAdvertising_argsTupleScheme extends TupleScheme<deleteAdvertising_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteAdvertising_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetId()) {
          oprot.writeI64(struct.id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteAdvertising_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.id = iprot.readI64();
          struct.setIdIsSet(true);
        }
      }
    }

  }

  public static class deleteAdvertising_result implements org.apache.thrift.TBase<deleteAdvertising_result, deleteAdvertising_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteAdvertising_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteAdvertising_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteAdvertising_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteAdvertising_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteAdvertising_result.class, metaDataMap);
    }

    public deleteAdvertising_result() {
    }

    public deleteAdvertising_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteAdvertising_result(deleteAdvertising_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public deleteAdvertising_result deepCopy() {
      return new deleteAdvertising_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public deleteAdvertising_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteAdvertising_result)
        return this.equals((deleteAdvertising_result)that);
      return false;
    }

    public boolean equals(deleteAdvertising_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteAdvertising_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteAdvertising_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteAdvertising_resultStandardSchemeFactory implements SchemeFactory {
      public deleteAdvertising_resultStandardScheme getScheme() {
        return new deleteAdvertising_resultStandardScheme();
      }
    }

    private static class deleteAdvertising_resultStandardScheme extends StandardScheme<deleteAdvertising_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteAdvertising_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteAdvertising_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteAdvertising_resultTupleSchemeFactory implements SchemeFactory {
      public deleteAdvertising_resultTupleScheme getScheme() {
        return new deleteAdvertising_resultTupleScheme();
      }
    }

    private static class deleteAdvertising_resultTupleScheme extends TupleScheme<deleteAdvertising_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteAdvertising_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteAdvertising_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class updateAdvertising_args implements org.apache.thrift.TBase<updateAdvertising_args, updateAdvertising_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateAdvertising_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateAdvertising_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField ADVERTISING_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("advertisingVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateAdvertising_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateAdvertising_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.AdvertisingVo advertisingVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      ADVERTISING_VO((short)2, "advertisingVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // ADVERTISING_VO
            return ADVERTISING_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.ADVERTISING_VO, new org.apache.thrift.meta_data.FieldMetaData("advertisingVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.AdvertisingVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateAdvertising_args.class, metaDataMap);
    }

    public updateAdvertising_args() {
    }

    public updateAdvertising_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.AdvertisingVo advertisingVo)
    {
      this();
      this.originVo = originVo;
      this.advertisingVo = advertisingVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateAdvertising_args(updateAdvertising_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetAdvertisingVo()) {
        this.advertisingVo = new com.froad.thrift.vo.AdvertisingVo(other.advertisingVo);
      }
    }

    public updateAdvertising_args deepCopy() {
      return new updateAdvertising_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.advertisingVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public updateAdvertising_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.AdvertisingVo getAdvertisingVo() {
      return this.advertisingVo;
    }

    public updateAdvertising_args setAdvertisingVo(com.froad.thrift.vo.AdvertisingVo advertisingVo) {
      this.advertisingVo = advertisingVo;
      return this;
    }

    public void unsetAdvertisingVo() {
      this.advertisingVo = null;
    }

    /** Returns true if field advertisingVo is set (has been assigned a value) and false otherwise */
    public boolean isSetAdvertisingVo() {
      return this.advertisingVo != null;
    }

    public void setAdvertisingVoIsSet(boolean value) {
      if (!value) {
        this.advertisingVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case ADVERTISING_VO:
        if (value == null) {
          unsetAdvertisingVo();
        } else {
          setAdvertisingVo((com.froad.thrift.vo.AdvertisingVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case ADVERTISING_VO:
        return getAdvertisingVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case ADVERTISING_VO:
        return isSetAdvertisingVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateAdvertising_args)
        return this.equals((updateAdvertising_args)that);
      return false;
    }

    public boolean equals(updateAdvertising_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_advertisingVo = true && this.isSetAdvertisingVo();
      boolean that_present_advertisingVo = true && that.isSetAdvertisingVo();
      if (this_present_advertisingVo || that_present_advertisingVo) {
        if (!(this_present_advertisingVo && that_present_advertisingVo))
          return false;
        if (!this.advertisingVo.equals(that.advertisingVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_advertisingVo = true && (isSetAdvertisingVo());
      list.add(present_advertisingVo);
      if (present_advertisingVo)
        list.add(advertisingVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateAdvertising_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetAdvertisingVo()).compareTo(other.isSetAdvertisingVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAdvertisingVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advertisingVo, other.advertisingVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateAdvertising_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("advertisingVo:");
      if (this.advertisingVo == null) {
        sb.append("null");
      } else {
        sb.append(this.advertisingVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (advertisingVo != null) {
        advertisingVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateAdvertising_argsStandardSchemeFactory implements SchemeFactory {
      public updateAdvertising_argsStandardScheme getScheme() {
        return new updateAdvertising_argsStandardScheme();
      }
    }

    private static class updateAdvertising_argsStandardScheme extends StandardScheme<updateAdvertising_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateAdvertising_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ADVERTISING_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.advertisingVo = new com.froad.thrift.vo.AdvertisingVo();
                struct.advertisingVo.read(iprot);
                struct.setAdvertisingVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateAdvertising_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.advertisingVo != null) {
          oprot.writeFieldBegin(ADVERTISING_VO_FIELD_DESC);
          struct.advertisingVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateAdvertising_argsTupleSchemeFactory implements SchemeFactory {
      public updateAdvertising_argsTupleScheme getScheme() {
        return new updateAdvertising_argsTupleScheme();
      }
    }

    private static class updateAdvertising_argsTupleScheme extends TupleScheme<updateAdvertising_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateAdvertising_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetAdvertisingVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetAdvertisingVo()) {
          struct.advertisingVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateAdvertising_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.advertisingVo = new com.froad.thrift.vo.AdvertisingVo();
          struct.advertisingVo.read(iprot);
          struct.setAdvertisingVoIsSet(true);
        }
      }
    }

  }

  public static class updateAdvertising_result implements org.apache.thrift.TBase<updateAdvertising_result, updateAdvertising_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateAdvertising_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateAdvertising_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateAdvertising_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateAdvertising_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateAdvertising_result.class, metaDataMap);
    }

    public updateAdvertising_result() {
    }

    public updateAdvertising_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateAdvertising_result(updateAdvertising_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public updateAdvertising_result deepCopy() {
      return new updateAdvertising_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public updateAdvertising_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateAdvertising_result)
        return this.equals((updateAdvertising_result)that);
      return false;
    }

    public boolean equals(updateAdvertising_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateAdvertising_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateAdvertising_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateAdvertising_resultStandardSchemeFactory implements SchemeFactory {
      public updateAdvertising_resultStandardScheme getScheme() {
        return new updateAdvertising_resultStandardScheme();
      }
    }

    private static class updateAdvertising_resultStandardScheme extends StandardScheme<updateAdvertising_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateAdvertising_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateAdvertising_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateAdvertising_resultTupleSchemeFactory implements SchemeFactory {
      public updateAdvertising_resultTupleScheme getScheme() {
        return new updateAdvertising_resultTupleScheme();
      }
    }

    private static class updateAdvertising_resultTupleScheme extends TupleScheme<updateAdvertising_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateAdvertising_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateAdvertising_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getAdvertising_args implements org.apache.thrift.TBase<getAdvertising_args, getAdvertising_args._Fields>, java.io.Serializable, Cloneable, Comparable<getAdvertising_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getAdvertising_args");

    private static final org.apache.thrift.protocol.TField ADVERTISING_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("advertisingVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getAdvertising_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getAdvertising_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.AdvertisingVo advertisingVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ADVERTISING_VO((short)1, "advertisingVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ADVERTISING_VO
            return ADVERTISING_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ADVERTISING_VO, new org.apache.thrift.meta_data.FieldMetaData("advertisingVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.AdvertisingVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getAdvertising_args.class, metaDataMap);
    }

    public getAdvertising_args() {
    }

    public getAdvertising_args(
      com.froad.thrift.vo.AdvertisingVo advertisingVo)
    {
      this();
      this.advertisingVo = advertisingVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getAdvertising_args(getAdvertising_args other) {
      if (other.isSetAdvertisingVo()) {
        this.advertisingVo = new com.froad.thrift.vo.AdvertisingVo(other.advertisingVo);
      }
    }

    public getAdvertising_args deepCopy() {
      return new getAdvertising_args(this);
    }

    @Override
    public void clear() {
      this.advertisingVo = null;
    }

    public com.froad.thrift.vo.AdvertisingVo getAdvertisingVo() {
      return this.advertisingVo;
    }

    public getAdvertising_args setAdvertisingVo(com.froad.thrift.vo.AdvertisingVo advertisingVo) {
      this.advertisingVo = advertisingVo;
      return this;
    }

    public void unsetAdvertisingVo() {
      this.advertisingVo = null;
    }

    /** Returns true if field advertisingVo is set (has been assigned a value) and false otherwise */
    public boolean isSetAdvertisingVo() {
      return this.advertisingVo != null;
    }

    public void setAdvertisingVoIsSet(boolean value) {
      if (!value) {
        this.advertisingVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ADVERTISING_VO:
        if (value == null) {
          unsetAdvertisingVo();
        } else {
          setAdvertisingVo((com.froad.thrift.vo.AdvertisingVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ADVERTISING_VO:
        return getAdvertisingVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ADVERTISING_VO:
        return isSetAdvertisingVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getAdvertising_args)
        return this.equals((getAdvertising_args)that);
      return false;
    }

    public boolean equals(getAdvertising_args that) {
      if (that == null)
        return false;

      boolean this_present_advertisingVo = true && this.isSetAdvertisingVo();
      boolean that_present_advertisingVo = true && that.isSetAdvertisingVo();
      if (this_present_advertisingVo || that_present_advertisingVo) {
        if (!(this_present_advertisingVo && that_present_advertisingVo))
          return false;
        if (!this.advertisingVo.equals(that.advertisingVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_advertisingVo = true && (isSetAdvertisingVo());
      list.add(present_advertisingVo);
      if (present_advertisingVo)
        list.add(advertisingVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getAdvertising_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetAdvertisingVo()).compareTo(other.isSetAdvertisingVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAdvertisingVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advertisingVo, other.advertisingVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getAdvertising_args(");
      boolean first = true;

      sb.append("advertisingVo:");
      if (this.advertisingVo == null) {
        sb.append("null");
      } else {
        sb.append(this.advertisingVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (advertisingVo != null) {
        advertisingVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getAdvertising_argsStandardSchemeFactory implements SchemeFactory {
      public getAdvertising_argsStandardScheme getScheme() {
        return new getAdvertising_argsStandardScheme();
      }
    }

    private static class getAdvertising_argsStandardScheme extends StandardScheme<getAdvertising_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getAdvertising_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ADVERTISING_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.advertisingVo = new com.froad.thrift.vo.AdvertisingVo();
                struct.advertisingVo.read(iprot);
                struct.setAdvertisingVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getAdvertising_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.advertisingVo != null) {
          oprot.writeFieldBegin(ADVERTISING_VO_FIELD_DESC);
          struct.advertisingVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getAdvertising_argsTupleSchemeFactory implements SchemeFactory {
      public getAdvertising_argsTupleScheme getScheme() {
        return new getAdvertising_argsTupleScheme();
      }
    }

    private static class getAdvertising_argsTupleScheme extends TupleScheme<getAdvertising_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getAdvertising_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetAdvertisingVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetAdvertisingVo()) {
          struct.advertisingVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getAdvertising_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.advertisingVo = new com.froad.thrift.vo.AdvertisingVo();
          struct.advertisingVo.read(iprot);
          struct.setAdvertisingVoIsSet(true);
        }
      }
    }

  }

  public static class getAdvertising_result implements org.apache.thrift.TBase<getAdvertising_result, getAdvertising_result._Fields>, java.io.Serializable, Cloneable, Comparable<getAdvertising_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getAdvertising_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getAdvertising_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getAdvertising_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.FindAllAdvertisingResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.FindAllAdvertisingResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getAdvertising_result.class, metaDataMap);
    }

    public getAdvertising_result() {
    }

    public getAdvertising_result(
      com.froad.thrift.vo.FindAllAdvertisingResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getAdvertising_result(getAdvertising_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.FindAllAdvertisingResultVo(other.success);
      }
    }

    public getAdvertising_result deepCopy() {
      return new getAdvertising_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.FindAllAdvertisingResultVo getSuccess() {
      return this.success;
    }

    public getAdvertising_result setSuccess(com.froad.thrift.vo.FindAllAdvertisingResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.FindAllAdvertisingResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getAdvertising_result)
        return this.equals((getAdvertising_result)that);
      return false;
    }

    public boolean equals(getAdvertising_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getAdvertising_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getAdvertising_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getAdvertising_resultStandardSchemeFactory implements SchemeFactory {
      public getAdvertising_resultStandardScheme getScheme() {
        return new getAdvertising_resultStandardScheme();
      }
    }

    private static class getAdvertising_resultStandardScheme extends StandardScheme<getAdvertising_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getAdvertising_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.FindAllAdvertisingResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getAdvertising_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getAdvertising_resultTupleSchemeFactory implements SchemeFactory {
      public getAdvertising_resultTupleScheme getScheme() {
        return new getAdvertising_resultTupleScheme();
      }
    }

    private static class getAdvertising_resultTupleScheme extends TupleScheme<getAdvertising_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getAdvertising_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getAdvertising_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.FindAllAdvertisingResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getAdvertisingByPage_args implements org.apache.thrift.TBase<getAdvertisingByPage_args, getAdvertisingByPage_args._Fields>, java.io.Serializable, Cloneable, Comparable<getAdvertisingByPage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getAdvertisingByPage_args");

    private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField ADVERTISING_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("advertisingVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getAdvertisingByPage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getAdvertisingByPage_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.PageVo page; // required
    public com.froad.thrift.vo.AdvertisingVo advertisingVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PAGE((short)1, "page"),
      ADVERTISING_VO((short)2, "advertisingVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PAGE
            return PAGE;
          case 2: // ADVERTISING_VO
            return ADVERTISING_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
      tmpMap.put(_Fields.ADVERTISING_VO, new org.apache.thrift.meta_data.FieldMetaData("advertisingVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.AdvertisingVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getAdvertisingByPage_args.class, metaDataMap);
    }

    public getAdvertisingByPage_args() {
    }

    public getAdvertisingByPage_args(
      com.froad.thrift.vo.PageVo page,
      com.froad.thrift.vo.AdvertisingVo advertisingVo)
    {
      this();
      this.page = page;
      this.advertisingVo = advertisingVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getAdvertisingByPage_args(getAdvertisingByPage_args other) {
      if (other.isSetPage()) {
        this.page = new com.froad.thrift.vo.PageVo(other.page);
      }
      if (other.isSetAdvertisingVo()) {
        this.advertisingVo = new com.froad.thrift.vo.AdvertisingVo(other.advertisingVo);
      }
    }

    public getAdvertisingByPage_args deepCopy() {
      return new getAdvertisingByPage_args(this);
    }

    @Override
    public void clear() {
      this.page = null;
      this.advertisingVo = null;
    }

    public com.froad.thrift.vo.PageVo getPage() {
      return this.page;
    }

    public getAdvertisingByPage_args setPage(com.froad.thrift.vo.PageVo page) {
      this.page = page;
      return this;
    }

    public void unsetPage() {
      this.page = null;
    }

    /** Returns true if field page is set (has been assigned a value) and false otherwise */
    public boolean isSetPage() {
      return this.page != null;
    }

    public void setPageIsSet(boolean value) {
      if (!value) {
        this.page = null;
      }
    }

    public com.froad.thrift.vo.AdvertisingVo getAdvertisingVo() {
      return this.advertisingVo;
    }

    public getAdvertisingByPage_args setAdvertisingVo(com.froad.thrift.vo.AdvertisingVo advertisingVo) {
      this.advertisingVo = advertisingVo;
      return this;
    }

    public void unsetAdvertisingVo() {
      this.advertisingVo = null;
    }

    /** Returns true if field advertisingVo is set (has been assigned a value) and false otherwise */
    public boolean isSetAdvertisingVo() {
      return this.advertisingVo != null;
    }

    public void setAdvertisingVoIsSet(boolean value) {
      if (!value) {
        this.advertisingVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PAGE:
        if (value == null) {
          unsetPage();
        } else {
          setPage((com.froad.thrift.vo.PageVo)value);
        }
        break;

      case ADVERTISING_VO:
        if (value == null) {
          unsetAdvertisingVo();
        } else {
          setAdvertisingVo((com.froad.thrift.vo.AdvertisingVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PAGE:
        return getPage();

      case ADVERTISING_VO:
        return getAdvertisingVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PAGE:
        return isSetPage();
      case ADVERTISING_VO:
        return isSetAdvertisingVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getAdvertisingByPage_args)
        return this.equals((getAdvertisingByPage_args)that);
      return false;
    }

    public boolean equals(getAdvertisingByPage_args that) {
      if (that == null)
        return false;

      boolean this_present_page = true && this.isSetPage();
      boolean that_present_page = true && that.isSetPage();
      if (this_present_page || that_present_page) {
        if (!(this_present_page && that_present_page))
          return false;
        if (!this.page.equals(that.page))
          return false;
      }

      boolean this_present_advertisingVo = true && this.isSetAdvertisingVo();
      boolean that_present_advertisingVo = true && that.isSetAdvertisingVo();
      if (this_present_advertisingVo || that_present_advertisingVo) {
        if (!(this_present_advertisingVo && that_present_advertisingVo))
          return false;
        if (!this.advertisingVo.equals(that.advertisingVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_page = true && (isSetPage());
      list.add(present_page);
      if (present_page)
        list.add(page);

      boolean present_advertisingVo = true && (isSetAdvertisingVo());
      list.add(present_advertisingVo);
      if (present_advertisingVo)
        list.add(advertisingVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getAdvertisingByPage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetAdvertisingVo()).compareTo(other.isSetAdvertisingVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAdvertisingVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advertisingVo, other.advertisingVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getAdvertisingByPage_args(");
      boolean first = true;

      sb.append("page:");
      if (this.page == null) {
        sb.append("null");
      } else {
        sb.append(this.page);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("advertisingVo:");
      if (this.advertisingVo == null) {
        sb.append("null");
      } else {
        sb.append(this.advertisingVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (page != null) {
        page.validate();
      }
      if (advertisingVo != null) {
        advertisingVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getAdvertisingByPage_argsStandardSchemeFactory implements SchemeFactory {
      public getAdvertisingByPage_argsStandardScheme getScheme() {
        return new getAdvertisingByPage_argsStandardScheme();
      }
    }

    private static class getAdvertisingByPage_argsStandardScheme extends StandardScheme<getAdvertisingByPage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getAdvertisingByPage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.page = new com.froad.thrift.vo.PageVo();
                struct.page.read(iprot);
                struct.setPageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ADVERTISING_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.advertisingVo = new com.froad.thrift.vo.AdvertisingVo();
                struct.advertisingVo.read(iprot);
                struct.setAdvertisingVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getAdvertisingByPage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.page != null) {
          oprot.writeFieldBegin(PAGE_FIELD_DESC);
          struct.page.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.advertisingVo != null) {
          oprot.writeFieldBegin(ADVERTISING_VO_FIELD_DESC);
          struct.advertisingVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getAdvertisingByPage_argsTupleSchemeFactory implements SchemeFactory {
      public getAdvertisingByPage_argsTupleScheme getScheme() {
        return new getAdvertisingByPage_argsTupleScheme();
      }
    }

    private static class getAdvertisingByPage_argsTupleScheme extends TupleScheme<getAdvertisingByPage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getAdvertisingByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPage()) {
          optionals.set(0);
        }
        if (struct.isSetAdvertisingVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPage()) {
          struct.page.write(oprot);
        }
        if (struct.isSetAdvertisingVo()) {
          struct.advertisingVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getAdvertisingByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.page = new com.froad.thrift.vo.PageVo();
          struct.page.read(iprot);
          struct.setPageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.advertisingVo = new com.froad.thrift.vo.AdvertisingVo();
          struct.advertisingVo.read(iprot);
          struct.setAdvertisingVoIsSet(true);
        }
      }
    }

  }

  public static class getAdvertisingByPage_result implements org.apache.thrift.TBase<getAdvertisingByPage_result, getAdvertisingByPage_result._Fields>, java.io.Serializable, Cloneable, Comparable<getAdvertisingByPage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getAdvertisingByPage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getAdvertisingByPage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getAdvertisingByPage_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.FindPageAdvertisingResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.FindPageAdvertisingResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getAdvertisingByPage_result.class, metaDataMap);
    }

    public getAdvertisingByPage_result() {
    }

    public getAdvertisingByPage_result(
      com.froad.thrift.vo.FindPageAdvertisingResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getAdvertisingByPage_result(getAdvertisingByPage_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.FindPageAdvertisingResultVo(other.success);
      }
    }

    public getAdvertisingByPage_result deepCopy() {
      return new getAdvertisingByPage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.FindPageAdvertisingResultVo getSuccess() {
      return this.success;
    }

    public getAdvertisingByPage_result setSuccess(com.froad.thrift.vo.FindPageAdvertisingResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.FindPageAdvertisingResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getAdvertisingByPage_result)
        return this.equals((getAdvertisingByPage_result)that);
      return false;
    }

    public boolean equals(getAdvertisingByPage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getAdvertisingByPage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getAdvertisingByPage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getAdvertisingByPage_resultStandardSchemeFactory implements SchemeFactory {
      public getAdvertisingByPage_resultStandardScheme getScheme() {
        return new getAdvertisingByPage_resultStandardScheme();
      }
    }

    private static class getAdvertisingByPage_resultStandardScheme extends StandardScheme<getAdvertisingByPage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getAdvertisingByPage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.FindPageAdvertisingResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getAdvertisingByPage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getAdvertisingByPage_resultTupleSchemeFactory implements SchemeFactory {
      public getAdvertisingByPage_resultTupleScheme getScheme() {
        return new getAdvertisingByPage_resultTupleScheme();
      }
    }

    private static class getAdvertisingByPage_resultTupleScheme extends TupleScheme<getAdvertisingByPage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getAdvertisingByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getAdvertisingByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.FindPageAdvertisingResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getAdvertisingById_args implements org.apache.thrift.TBase<getAdvertisingById_args, getAdvertisingById_args._Fields>, java.io.Serializable, Cloneable, Comparable<getAdvertisingById_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getAdvertisingById_args");

    private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getAdvertisingById_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getAdvertisingById_argsTupleSchemeFactory());
    }

    public String clientId; // required
    public long id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      CLIENT_ID((short)1, "clientId"),
      ID((short)2, "id");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // CLIENT_ID
            return CLIENT_ID;
          case 2: // ID
            return ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getAdvertisingById_args.class, metaDataMap);
    }

    public getAdvertisingById_args() {
    }

    public getAdvertisingById_args(
      String clientId,
      long id)
    {
      this();
      this.clientId = clientId;
      this.id = id;
      setIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getAdvertisingById_args(getAdvertisingById_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetClientId()) {
        this.clientId = other.clientId;
      }
      this.id = other.id;
    }

    public getAdvertisingById_args deepCopy() {
      return new getAdvertisingById_args(this);
    }

    @Override
    public void clear() {
      this.clientId = null;
      setIdIsSet(false);
      this.id = 0;
    }

    public String getClientId() {
      return this.clientId;
    }

    public getAdvertisingById_args setClientId(String clientId) {
      this.clientId = clientId;
      return this;
    }

    public void unsetClientId() {
      this.clientId = null;
    }

    /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
    public boolean isSetClientId() {
      return this.clientId != null;
    }

    public void setClientIdIsSet(boolean value) {
      if (!value) {
        this.clientId = null;
      }
    }

    public long getId() {
      return this.id;
    }

    public getAdvertisingById_args setId(long id) {
      this.id = id;
      setIdIsSet(true);
      return this;
    }

    public void unsetId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case CLIENT_ID:
        if (value == null) {
          unsetClientId();
        } else {
          setClientId((String)value);
        }
        break;

      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((Long)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case CLIENT_ID:
        return getClientId();

      case ID:
        return Long.valueOf(getId());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case CLIENT_ID:
        return isSetClientId();
      case ID:
        return isSetId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getAdvertisingById_args)
        return this.equals((getAdvertisingById_args)that);
      return false;
    }

    public boolean equals(getAdvertisingById_args that) {
      if (that == null)
        return false;

      boolean this_present_clientId = true && this.isSetClientId();
      boolean that_present_clientId = true && that.isSetClientId();
      if (this_present_clientId || that_present_clientId) {
        if (!(this_present_clientId && that_present_clientId))
          return false;
        if (!this.clientId.equals(that.clientId))
          return false;
      }

      boolean this_present_id = true;
      boolean that_present_id = true;
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (this.id != that.id)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_clientId = true && (isSetClientId());
      list.add(present_clientId);
      if (present_clientId)
        list.add(clientId);

      boolean present_id = true;
      list.add(present_id);
      if (present_id)
        list.add(id);

      return list.hashCode();
    }

    @Override
    public int compareTo(getAdvertisingById_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getAdvertisingById_args(");
      boolean first = true;

      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getAdvertisingById_argsStandardSchemeFactory implements SchemeFactory {
      public getAdvertisingById_argsStandardScheme getScheme() {
        return new getAdvertisingById_argsStandardScheme();
      }
    }

    private static class getAdvertisingById_argsStandardScheme extends StandardScheme<getAdvertisingById_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getAdvertisingById_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // CLIENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.clientId = iprot.readString();
                struct.setClientIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.id = iprot.readI64();
                struct.setIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getAdvertisingById_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.clientId != null) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getAdvertisingById_argsTupleSchemeFactory implements SchemeFactory {
      public getAdvertisingById_argsTupleScheme getScheme() {
        return new getAdvertisingById_argsTupleScheme();
      }
    }

    private static class getAdvertisingById_argsTupleScheme extends TupleScheme<getAdvertisingById_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getAdvertisingById_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetClientId()) {
          optionals.set(0);
        }
        if (struct.isSetId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetClientId()) {
          oprot.writeString(struct.clientId);
        }
        if (struct.isSetId()) {
          oprot.writeI64(struct.id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getAdvertisingById_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.clientId = iprot.readString();
          struct.setClientIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.id = iprot.readI64();
          struct.setIdIsSet(true);
        }
      }
    }

  }

  public static class getAdvertisingById_result implements org.apache.thrift.TBase<getAdvertisingById_result, getAdvertisingById_result._Fields>, java.io.Serializable, Cloneable, Comparable<getAdvertisingById_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getAdvertisingById_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getAdvertisingById_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getAdvertisingById_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.FindAdvertisingResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.FindAdvertisingResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getAdvertisingById_result.class, metaDataMap);
    }

    public getAdvertisingById_result() {
    }

    public getAdvertisingById_result(
      com.froad.thrift.vo.FindAdvertisingResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getAdvertisingById_result(getAdvertisingById_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.FindAdvertisingResultVo(other.success);
      }
    }

    public getAdvertisingById_result deepCopy() {
      return new getAdvertisingById_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.FindAdvertisingResultVo getSuccess() {
      return this.success;
    }

    public getAdvertisingById_result setSuccess(com.froad.thrift.vo.FindAdvertisingResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.FindAdvertisingResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getAdvertisingById_result)
        return this.equals((getAdvertisingById_result)that);
      return false;
    }

    public boolean equals(getAdvertisingById_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getAdvertisingById_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getAdvertisingById_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getAdvertisingById_resultStandardSchemeFactory implements SchemeFactory {
      public getAdvertisingById_resultStandardScheme getScheme() {
        return new getAdvertisingById_resultStandardScheme();
      }
    }

    private static class getAdvertisingById_resultStandardScheme extends StandardScheme<getAdvertisingById_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getAdvertisingById_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.FindAdvertisingResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getAdvertisingById_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getAdvertisingById_resultTupleSchemeFactory implements SchemeFactory {
      public getAdvertisingById_resultTupleScheme getScheme() {
        return new getAdvertisingById_resultTupleScheme();
      }
    }

    private static class getAdvertisingById_resultTupleScheme extends TupleScheme<getAdvertisingById_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getAdvertisingById_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getAdvertisingById_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.FindAdvertisingResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class pageOptFindAdvertisings_args implements org.apache.thrift.TBase<pageOptFindAdvertisings_args, pageOptFindAdvertisings_args._Fields>, java.io.Serializable, Cloneable, Comparable<pageOptFindAdvertisings_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("pageOptFindAdvertisings_args");

    private static final org.apache.thrift.protocol.TField FIND_ALL_ADVERTISING_PARAM_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("findAllAdvertisingParamVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new pageOptFindAdvertisings_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new pageOptFindAdvertisings_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      FIND_ALL_ADVERTISING_PARAM_VO((short)1, "findAllAdvertisingParamVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // FIND_ALL_ADVERTISING_PARAM_VO
            return FIND_ALL_ADVERTISING_PARAM_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.FIND_ALL_ADVERTISING_PARAM_VO, new org.apache.thrift.meta_data.FieldMetaData("findAllAdvertisingParamVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.FindAllAdvertisingParamVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(pageOptFindAdvertisings_args.class, metaDataMap);
    }

    public pageOptFindAdvertisings_args() {
    }

    public pageOptFindAdvertisings_args(
      com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo)
    {
      this();
      this.findAllAdvertisingParamVo = findAllAdvertisingParamVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public pageOptFindAdvertisings_args(pageOptFindAdvertisings_args other) {
      if (other.isSetFindAllAdvertisingParamVo()) {
        this.findAllAdvertisingParamVo = new com.froad.thrift.vo.FindAllAdvertisingParamVo(other.findAllAdvertisingParamVo);
      }
    }

    public pageOptFindAdvertisings_args deepCopy() {
      return new pageOptFindAdvertisings_args(this);
    }

    @Override
    public void clear() {
      this.findAllAdvertisingParamVo = null;
    }

    public com.froad.thrift.vo.FindAllAdvertisingParamVo getFindAllAdvertisingParamVo() {
      return this.findAllAdvertisingParamVo;
    }

    public pageOptFindAdvertisings_args setFindAllAdvertisingParamVo(com.froad.thrift.vo.FindAllAdvertisingParamVo findAllAdvertisingParamVo) {
      this.findAllAdvertisingParamVo = findAllAdvertisingParamVo;
      return this;
    }

    public void unsetFindAllAdvertisingParamVo() {
      this.findAllAdvertisingParamVo = null;
    }

    /** Returns true if field findAllAdvertisingParamVo is set (has been assigned a value) and false otherwise */
    public boolean isSetFindAllAdvertisingParamVo() {
      return this.findAllAdvertisingParamVo != null;
    }

    public void setFindAllAdvertisingParamVoIsSet(boolean value) {
      if (!value) {
        this.findAllAdvertisingParamVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case FIND_ALL_ADVERTISING_PARAM_VO:
        if (value == null) {
          unsetFindAllAdvertisingParamVo();
        } else {
          setFindAllAdvertisingParamVo((com.froad.thrift.vo.FindAllAdvertisingParamVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case FIND_ALL_ADVERTISING_PARAM_VO:
        return getFindAllAdvertisingParamVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case FIND_ALL_ADVERTISING_PARAM_VO:
        return isSetFindAllAdvertisingParamVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof pageOptFindAdvertisings_args)
        return this.equals((pageOptFindAdvertisings_args)that);
      return false;
    }

    public boolean equals(pageOptFindAdvertisings_args that) {
      if (that == null)
        return false;

      boolean this_present_findAllAdvertisingParamVo = true && this.isSetFindAllAdvertisingParamVo();
      boolean that_present_findAllAdvertisingParamVo = true && that.isSetFindAllAdvertisingParamVo();
      if (this_present_findAllAdvertisingParamVo || that_present_findAllAdvertisingParamVo) {
        if (!(this_present_findAllAdvertisingParamVo && that_present_findAllAdvertisingParamVo))
          return false;
        if (!this.findAllAdvertisingParamVo.equals(that.findAllAdvertisingParamVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_findAllAdvertisingParamVo = true && (isSetFindAllAdvertisingParamVo());
      list.add(present_findAllAdvertisingParamVo);
      if (present_findAllAdvertisingParamVo)
        list.add(findAllAdvertisingParamVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(pageOptFindAdvertisings_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetFindAllAdvertisingParamVo()).compareTo(other.isSetFindAllAdvertisingParamVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFindAllAdvertisingParamVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.findAllAdvertisingParamVo, other.findAllAdvertisingParamVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("pageOptFindAdvertisings_args(");
      boolean first = true;

      sb.append("findAllAdvertisingParamVo:");
      if (this.findAllAdvertisingParamVo == null) {
        sb.append("null");
      } else {
        sb.append(this.findAllAdvertisingParamVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (findAllAdvertisingParamVo != null) {
        findAllAdvertisingParamVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class pageOptFindAdvertisings_argsStandardSchemeFactory implements SchemeFactory {
      public pageOptFindAdvertisings_argsStandardScheme getScheme() {
        return new pageOptFindAdvertisings_argsStandardScheme();
      }
    }

    private static class pageOptFindAdvertisings_argsStandardScheme extends StandardScheme<pageOptFindAdvertisings_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, pageOptFindAdvertisings_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // FIND_ALL_ADVERTISING_PARAM_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.findAllAdvertisingParamVo = new com.froad.thrift.vo.FindAllAdvertisingParamVo();
                struct.findAllAdvertisingParamVo.read(iprot);
                struct.setFindAllAdvertisingParamVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, pageOptFindAdvertisings_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.findAllAdvertisingParamVo != null) {
          oprot.writeFieldBegin(FIND_ALL_ADVERTISING_PARAM_VO_FIELD_DESC);
          struct.findAllAdvertisingParamVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class pageOptFindAdvertisings_argsTupleSchemeFactory implements SchemeFactory {
      public pageOptFindAdvertisings_argsTupleScheme getScheme() {
        return new pageOptFindAdvertisings_argsTupleScheme();
      }
    }

    private static class pageOptFindAdvertisings_argsTupleScheme extends TupleScheme<pageOptFindAdvertisings_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, pageOptFindAdvertisings_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetFindAllAdvertisingParamVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetFindAllAdvertisingParamVo()) {
          struct.findAllAdvertisingParamVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, pageOptFindAdvertisings_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.findAllAdvertisingParamVo = new com.froad.thrift.vo.FindAllAdvertisingParamVo();
          struct.findAllAdvertisingParamVo.read(iprot);
          struct.setFindAllAdvertisingParamVoIsSet(true);
        }
      }
    }

  }

  public static class pageOptFindAdvertisings_result implements org.apache.thrift.TBase<pageOptFindAdvertisings_result, pageOptFindAdvertisings_result._Fields>, java.io.Serializable, Cloneable, Comparable<pageOptFindAdvertisings_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("pageOptFindAdvertisings_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new pageOptFindAdvertisings_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new pageOptFindAdvertisings_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.FindAllAdvertisingResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.FindAllAdvertisingResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(pageOptFindAdvertisings_result.class, metaDataMap);
    }

    public pageOptFindAdvertisings_result() {
    }

    public pageOptFindAdvertisings_result(
      com.froad.thrift.vo.FindAllAdvertisingResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public pageOptFindAdvertisings_result(pageOptFindAdvertisings_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.FindAllAdvertisingResultVo(other.success);
      }
    }

    public pageOptFindAdvertisings_result deepCopy() {
      return new pageOptFindAdvertisings_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.FindAllAdvertisingResultVo getSuccess() {
      return this.success;
    }

    public pageOptFindAdvertisings_result setSuccess(com.froad.thrift.vo.FindAllAdvertisingResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.FindAllAdvertisingResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof pageOptFindAdvertisings_result)
        return this.equals((pageOptFindAdvertisings_result)that);
      return false;
    }

    public boolean equals(pageOptFindAdvertisings_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(pageOptFindAdvertisings_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("pageOptFindAdvertisings_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class pageOptFindAdvertisings_resultStandardSchemeFactory implements SchemeFactory {
      public pageOptFindAdvertisings_resultStandardScheme getScheme() {
        return new pageOptFindAdvertisings_resultStandardScheme();
      }
    }

    private static class pageOptFindAdvertisings_resultStandardScheme extends StandardScheme<pageOptFindAdvertisings_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, pageOptFindAdvertisings_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.FindAllAdvertisingResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, pageOptFindAdvertisings_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class pageOptFindAdvertisings_resultTupleSchemeFactory implements SchemeFactory {
      public pageOptFindAdvertisings_resultTupleScheme getScheme() {
        return new pageOptFindAdvertisings_resultTupleScheme();
      }
    }

    private static class pageOptFindAdvertisings_resultTupleScheme extends TupleScheme<pageOptFindAdvertisings_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, pageOptFindAdvertisings_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, pageOptFindAdvertisings_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.FindAllAdvertisingResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
