/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 门店详情
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class OutletDetailVo implements org.apache.thrift.TBase<OutletDetailVo, OutletDetailVo._Fields>, java.io.Serializable, Cloneable, Comparable<OutletDetailVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OutletDetailVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField PARENT_AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("parentAreaId", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField DEFAULT_IMAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("defaultImage", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField TREE_PATH_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("treePathName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField LOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("location", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnable", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField OUTLET_FULLNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletFullname", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField CATEGORY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryInfo", org.apache.thrift.protocol.TType.LIST, (short)14);
  private static final org.apache.thrift.protocol.TField TYPE_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("typeInfo", org.apache.thrift.protocol.TType.LIST, (short)15);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField PREFER_DETAILS_FIELD_DESC = new org.apache.thrift.protocol.TField("preferDetails", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField STORE_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("storeCount", org.apache.thrift.protocol.TType.I32, (short)20);
  private static final org.apache.thrift.protocol.TField DIS_FIELD_DESC = new org.apache.thrift.protocol.TField("dis", org.apache.thrift.protocol.TType.DOUBLE, (short)21);
  private static final org.apache.thrift.protocol.TField STAR_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("starLevel", org.apache.thrift.protocol.TType.DOUBLE, (short)22);
  private static final org.apache.thrift.protocol.TField ONE_LEVEL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("oneLevelCount", org.apache.thrift.protocol.TType.I32, (short)23);
  private static final org.apache.thrift.protocol.TField TWO_LEVEL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("twoLevelCount", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField THREE_LEVEL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("threeLevelCount", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField FOUR_LEVEL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("fourLevelCount", org.apache.thrift.protocol.TType.I32, (short)26);
  private static final org.apache.thrift.protocol.TField FIVE_LEVEL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("fiveLevelCount", org.apache.thrift.protocol.TType.I32, (short)27);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OutletDetailVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OutletDetailVoTupleSchemeFactory());
  }

  /**
   * 门店id
   */
  public String id; // optional
  /**
   * 创建时间
   */
  public long createTime; // optional
  /**
   * 客户端id
   */
  public String clientId; // optional
  /**
   * 商户id
   */
  public String merchantId; // optional
  /**
   * 商户名称
   */
  public String merchantName; // optional
  /**
   * 区域id
   */
  public long areaId; // optional
  /**
   * 上级区域id
   */
  public long parentAreaId; // optional
  /**
   * 门店默认图片(小图)
   */
  public String defaultImage; // optional
  /**
   * 树路径名称
   */
  public String treePathName; // optional
  /**
   * 经纬度
   */
  public com.froad.thrift.vo.LocationVo location; // required
  /**
   * 是否有效
   */
  public boolean isEnable; // optional
  /**
   * 门店名称
   */
  public String outletName; // optional
  /**
   * 门店全名
   */
  public String outletFullname; // optional
  /**
   * 分类列表
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> categoryInfo; // optional
  /**
   * 类型列表
   */
  public List<com.froad.thrift.vo.TypeInfoVo> typeInfo; // optional
  /**
   * 地址
   */
  public String address; // optional
  /**
   * 联系电话
   */
  public String phone; // optional
  /**
   * 描述
   */
  public String description; // optional
  /**
   * 优惠详情
   */
  public String preferDetails; // optional
  /**
   * 收藏总数
   */
  public int storeCount; // optional
  /**
   * 计算出的距离
   */
  public double dis; // optional
  /**
   * 评论星级
   */
  public double starLevel; // optional
  /**
   * 1 星级 总数
   */
  public int oneLevelCount; // optional
  /**
   * 2 星级 总数
   */
  public int twoLevelCount; // optional
  /**
   * 3 星级 总数
   */
  public int threeLevelCount; // optional
  /**
   * 4 星级 总数
   */
  public int fourLevelCount; // optional
  /**
   * 5 星级 总数
   */
  public int fiveLevelCount; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 门店id
     */
    ID((short)1, "id"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)2, "createTime"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)3, "clientId"),
    /**
     * 商户id
     */
    MERCHANT_ID((short)4, "merchantId"),
    /**
     * 商户名称
     */
    MERCHANT_NAME((short)5, "merchantName"),
    /**
     * 区域id
     */
    AREA_ID((short)6, "areaId"),
    /**
     * 上级区域id
     */
    PARENT_AREA_ID((short)7, "parentAreaId"),
    /**
     * 门店默认图片(小图)
     */
    DEFAULT_IMAGE((short)8, "defaultImage"),
    /**
     * 树路径名称
     */
    TREE_PATH_NAME((short)9, "treePathName"),
    /**
     * 经纬度
     */
    LOCATION((short)10, "location"),
    /**
     * 是否有效
     */
    IS_ENABLE((short)11, "isEnable"),
    /**
     * 门店名称
     */
    OUTLET_NAME((short)12, "outletName"),
    /**
     * 门店全名
     */
    OUTLET_FULLNAME((short)13, "outletFullname"),
    /**
     * 分类列表
     */
    CATEGORY_INFO((short)14, "categoryInfo"),
    /**
     * 类型列表
     */
    TYPE_INFO((short)15, "typeInfo"),
    /**
     * 地址
     */
    ADDRESS((short)16, "address"),
    /**
     * 联系电话
     */
    PHONE((short)17, "phone"),
    /**
     * 描述
     */
    DESCRIPTION((short)18, "description"),
    /**
     * 优惠详情
     */
    PREFER_DETAILS((short)19, "preferDetails"),
    /**
     * 收藏总数
     */
    STORE_COUNT((short)20, "storeCount"),
    /**
     * 计算出的距离
     */
    DIS((short)21, "dis"),
    /**
     * 评论星级
     */
    STAR_LEVEL((short)22, "starLevel"),
    /**
     * 1 星级 总数
     */
    ONE_LEVEL_COUNT((short)23, "oneLevelCount"),
    /**
     * 2 星级 总数
     */
    TWO_LEVEL_COUNT((short)24, "twoLevelCount"),
    /**
     * 3 星级 总数
     */
    THREE_LEVEL_COUNT((short)25, "threeLevelCount"),
    /**
     * 4 星级 总数
     */
    FOUR_LEVEL_COUNT((short)26, "fourLevelCount"),
    /**
     * 5 星级 总数
     */
    FIVE_LEVEL_COUNT((short)27, "fiveLevelCount");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // CLIENT_ID
          return CLIENT_ID;
        case 4: // MERCHANT_ID
          return MERCHANT_ID;
        case 5: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 6: // AREA_ID
          return AREA_ID;
        case 7: // PARENT_AREA_ID
          return PARENT_AREA_ID;
        case 8: // DEFAULT_IMAGE
          return DEFAULT_IMAGE;
        case 9: // TREE_PATH_NAME
          return TREE_PATH_NAME;
        case 10: // LOCATION
          return LOCATION;
        case 11: // IS_ENABLE
          return IS_ENABLE;
        case 12: // OUTLET_NAME
          return OUTLET_NAME;
        case 13: // OUTLET_FULLNAME
          return OUTLET_FULLNAME;
        case 14: // CATEGORY_INFO
          return CATEGORY_INFO;
        case 15: // TYPE_INFO
          return TYPE_INFO;
        case 16: // ADDRESS
          return ADDRESS;
        case 17: // PHONE
          return PHONE;
        case 18: // DESCRIPTION
          return DESCRIPTION;
        case 19: // PREFER_DETAILS
          return PREFER_DETAILS;
        case 20: // STORE_COUNT
          return STORE_COUNT;
        case 21: // DIS
          return DIS;
        case 22: // STAR_LEVEL
          return STAR_LEVEL;
        case 23: // ONE_LEVEL_COUNT
          return ONE_LEVEL_COUNT;
        case 24: // TWO_LEVEL_COUNT
          return TWO_LEVEL_COUNT;
        case 25: // THREE_LEVEL_COUNT
          return THREE_LEVEL_COUNT;
        case 26: // FOUR_LEVEL_COUNT
          return FOUR_LEVEL_COUNT;
        case 27: // FIVE_LEVEL_COUNT
          return FIVE_LEVEL_COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIME_ISSET_ID = 0;
  private static final int __AREAID_ISSET_ID = 1;
  private static final int __PARENTAREAID_ISSET_ID = 2;
  private static final int __ISENABLE_ISSET_ID = 3;
  private static final int __STORECOUNT_ISSET_ID = 4;
  private static final int __DIS_ISSET_ID = 5;
  private static final int __STARLEVEL_ISSET_ID = 6;
  private static final int __ONELEVELCOUNT_ISSET_ID = 7;
  private static final int __TWOLEVELCOUNT_ISSET_ID = 8;
  private static final int __THREELEVELCOUNT_ISSET_ID = 9;
  private static final int __FOURLEVELCOUNT_ISSET_ID = 10;
  private static final int __FIVELEVELCOUNT_ISSET_ID = 11;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CREATE_TIME,_Fields.CLIENT_ID,_Fields.MERCHANT_ID,_Fields.MERCHANT_NAME,_Fields.AREA_ID,_Fields.PARENT_AREA_ID,_Fields.DEFAULT_IMAGE,_Fields.TREE_PATH_NAME,_Fields.IS_ENABLE,_Fields.OUTLET_NAME,_Fields.OUTLET_FULLNAME,_Fields.CATEGORY_INFO,_Fields.TYPE_INFO,_Fields.ADDRESS,_Fields.PHONE,_Fields.DESCRIPTION,_Fields.PREFER_DETAILS,_Fields.STORE_COUNT,_Fields.DIS,_Fields.STAR_LEVEL,_Fields.ONE_LEVEL_COUNT,_Fields.TWO_LEVEL_COUNT,_Fields.THREE_LEVEL_COUNT,_Fields.FOUR_LEVEL_COUNT,_Fields.FIVE_LEVEL_COUNT};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PARENT_AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("parentAreaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DEFAULT_IMAGE, new org.apache.thrift.meta_data.FieldMetaData("defaultImage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TREE_PATH_NAME, new org.apache.thrift.meta_data.FieldMetaData("treePathName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOCATION, new org.apache.thrift.meta_data.FieldMetaData("location", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.LocationVo.class)));
    tmpMap.put(_Fields.IS_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("isEnable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_FULLNAME, new org.apache.thrift.meta_data.FieldMetaData("outletFullname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_INFO, new org.apache.thrift.meta_data.FieldMetaData("categoryInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.CategoryInfoVo.class))));
    tmpMap.put(_Fields.TYPE_INFO, new org.apache.thrift.meta_data.FieldMetaData("typeInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.TypeInfoVo.class))));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PREFER_DETAILS, new org.apache.thrift.meta_data.FieldMetaData("preferDetails", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STORE_COUNT, new org.apache.thrift.meta_data.FieldMetaData("storeCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DIS, new org.apache.thrift.meta_data.FieldMetaData("dis", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.STAR_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("starLevel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ONE_LEVEL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("oneLevelCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TWO_LEVEL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("twoLevelCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.THREE_LEVEL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("threeLevelCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FOUR_LEVEL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("fourLevelCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FIVE_LEVEL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("fiveLevelCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OutletDetailVo.class, metaDataMap);
  }

  public OutletDetailVo() {
  }

  public OutletDetailVo(
    com.froad.thrift.vo.LocationVo location)
  {
    this();
    this.location = location;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OutletDetailVo(OutletDetailVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    this.createTime = other.createTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    this.areaId = other.areaId;
    this.parentAreaId = other.parentAreaId;
    if (other.isSetDefaultImage()) {
      this.defaultImage = other.defaultImage;
    }
    if (other.isSetTreePathName()) {
      this.treePathName = other.treePathName;
    }
    if (other.isSetLocation()) {
      this.location = new com.froad.thrift.vo.LocationVo(other.location);
    }
    this.isEnable = other.isEnable;
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    if (other.isSetOutletFullname()) {
      this.outletFullname = other.outletFullname;
    }
    if (other.isSetCategoryInfo()) {
      List<com.froad.thrift.vo.CategoryInfoVo> __this__categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(other.categoryInfo.size());
      for (com.froad.thrift.vo.CategoryInfoVo other_element : other.categoryInfo) {
        __this__categoryInfo.add(new com.froad.thrift.vo.CategoryInfoVo(other_element));
      }
      this.categoryInfo = __this__categoryInfo;
    }
    if (other.isSetTypeInfo()) {
      List<com.froad.thrift.vo.TypeInfoVo> __this__typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(other.typeInfo.size());
      for (com.froad.thrift.vo.TypeInfoVo other_element : other.typeInfo) {
        __this__typeInfo.add(new com.froad.thrift.vo.TypeInfoVo(other_element));
      }
      this.typeInfo = __this__typeInfo;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetPreferDetails()) {
      this.preferDetails = other.preferDetails;
    }
    this.storeCount = other.storeCount;
    this.dis = other.dis;
    this.starLevel = other.starLevel;
    this.oneLevelCount = other.oneLevelCount;
    this.twoLevelCount = other.twoLevelCount;
    this.threeLevelCount = other.threeLevelCount;
    this.fourLevelCount = other.fourLevelCount;
    this.fiveLevelCount = other.fiveLevelCount;
  }

  public OutletDetailVo deepCopy() {
    return new OutletDetailVo(this);
  }

  @Override
  public void clear() {
    this.id = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.clientId = null;
    this.merchantId = null;
    this.merchantName = null;
    setAreaIdIsSet(false);
    this.areaId = 0;
    setParentAreaIdIsSet(false);
    this.parentAreaId = 0;
    this.defaultImage = null;
    this.treePathName = null;
    this.location = null;
    setIsEnableIsSet(false);
    this.isEnable = false;
    this.outletName = null;
    this.outletFullname = null;
    this.categoryInfo = null;
    this.typeInfo = null;
    this.address = null;
    this.phone = null;
    this.description = null;
    this.preferDetails = null;
    setStoreCountIsSet(false);
    this.storeCount = 0;
    setDisIsSet(false);
    this.dis = 0.0;
    setStarLevelIsSet(false);
    this.starLevel = 0.0;
    setOneLevelCountIsSet(false);
    this.oneLevelCount = 0;
    setTwoLevelCountIsSet(false);
    this.twoLevelCount = 0;
    setThreeLevelCountIsSet(false);
    this.threeLevelCount = 0;
    setFourLevelCountIsSet(false);
    this.fourLevelCount = 0;
    setFiveLevelCountIsSet(false);
    this.fiveLevelCount = 0;
  }

  /**
   * 门店id
   */
  public String getId() {
    return this.id;
  }

  /**
   * 门店id
   */
  public OutletDetailVo setId(String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public OutletDetailVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public OutletDetailVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 商户id
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户id
   */
  public OutletDetailVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 商户名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称
   */
  public OutletDetailVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 区域id
   */
  public long getAreaId() {
    return this.areaId;
  }

  /**
   * 区域id
   */
  public OutletDetailVo setAreaId(long areaId) {
    this.areaId = areaId;
    setAreaIdIsSet(true);
    return this;
  }

  public void unsetAreaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return EncodingUtils.testBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  public void setAreaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREAID_ISSET_ID, value);
  }

  /**
   * 上级区域id
   */
  public long getParentAreaId() {
    return this.parentAreaId;
  }

  /**
   * 上级区域id
   */
  public OutletDetailVo setParentAreaId(long parentAreaId) {
    this.parentAreaId = parentAreaId;
    setParentAreaIdIsSet(true);
    return this;
  }

  public void unsetParentAreaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARENTAREAID_ISSET_ID);
  }

  /** Returns true if field parentAreaId is set (has been assigned a value) and false otherwise */
  public boolean isSetParentAreaId() {
    return EncodingUtils.testBit(__isset_bitfield, __PARENTAREAID_ISSET_ID);
  }

  public void setParentAreaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARENTAREAID_ISSET_ID, value);
  }

  /**
   * 门店默认图片(小图)
   */
  public String getDefaultImage() {
    return this.defaultImage;
  }

  /**
   * 门店默认图片(小图)
   */
  public OutletDetailVo setDefaultImage(String defaultImage) {
    this.defaultImage = defaultImage;
    return this;
  }

  public void unsetDefaultImage() {
    this.defaultImage = null;
  }

  /** Returns true if field defaultImage is set (has been assigned a value) and false otherwise */
  public boolean isSetDefaultImage() {
    return this.defaultImage != null;
  }

  public void setDefaultImageIsSet(boolean value) {
    if (!value) {
      this.defaultImage = null;
    }
  }

  /**
   * 树路径名称
   */
  public String getTreePathName() {
    return this.treePathName;
  }

  /**
   * 树路径名称
   */
  public OutletDetailVo setTreePathName(String treePathName) {
    this.treePathName = treePathName;
    return this;
  }

  public void unsetTreePathName() {
    this.treePathName = null;
  }

  /** Returns true if field treePathName is set (has been assigned a value) and false otherwise */
  public boolean isSetTreePathName() {
    return this.treePathName != null;
  }

  public void setTreePathNameIsSet(boolean value) {
    if (!value) {
      this.treePathName = null;
    }
  }

  /**
   * 经纬度
   */
  public com.froad.thrift.vo.LocationVo getLocation() {
    return this.location;
  }

  /**
   * 经纬度
   */
  public OutletDetailVo setLocation(com.froad.thrift.vo.LocationVo location) {
    this.location = location;
    return this;
  }

  public void unsetLocation() {
    this.location = null;
  }

  /** Returns true if field location is set (has been assigned a value) and false otherwise */
  public boolean isSetLocation() {
    return this.location != null;
  }

  public void setLocationIsSet(boolean value) {
    if (!value) {
      this.location = null;
    }
  }

  /**
   * 是否有效
   */
  public boolean isIsEnable() {
    return this.isEnable;
  }

  /**
   * 是否有效
   */
  public OutletDetailVo setIsEnable(boolean isEnable) {
    this.isEnable = isEnable;
    setIsEnableIsSet(true);
    return this;
  }

  public void unsetIsEnable() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  /** Returns true if field isEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnable() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  public void setIsEnableIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLE_ISSET_ID, value);
  }

  /**
   * 门店名称
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 门店名称
   */
  public OutletDetailVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 门店全名
   */
  public String getOutletFullname() {
    return this.outletFullname;
  }

  /**
   * 门店全名
   */
  public OutletDetailVo setOutletFullname(String outletFullname) {
    this.outletFullname = outletFullname;
    return this;
  }

  public void unsetOutletFullname() {
    this.outletFullname = null;
  }

  /** Returns true if field outletFullname is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletFullname() {
    return this.outletFullname != null;
  }

  public void setOutletFullnameIsSet(boolean value) {
    if (!value) {
      this.outletFullname = null;
    }
  }

  public int getCategoryInfoSize() {
    return (this.categoryInfo == null) ? 0 : this.categoryInfo.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfoIterator() {
    return (this.categoryInfo == null) ? null : this.categoryInfo.iterator();
  }

  public void addToCategoryInfo(com.froad.thrift.vo.CategoryInfoVo elem) {
    if (this.categoryInfo == null) {
      this.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>();
    }
    this.categoryInfo.add(elem);
  }

  /**
   * 分类列表
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfo() {
    return this.categoryInfo;
  }

  /**
   * 分类列表
   */
  public OutletDetailVo setCategoryInfo(List<com.froad.thrift.vo.CategoryInfoVo> categoryInfo) {
    this.categoryInfo = categoryInfo;
    return this;
  }

  public void unsetCategoryInfo() {
    this.categoryInfo = null;
  }

  /** Returns true if field categoryInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryInfo() {
    return this.categoryInfo != null;
  }

  public void setCategoryInfoIsSet(boolean value) {
    if (!value) {
      this.categoryInfo = null;
    }
  }

  public int getTypeInfoSize() {
    return (this.typeInfo == null) ? 0 : this.typeInfo.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.TypeInfoVo> getTypeInfoIterator() {
    return (this.typeInfo == null) ? null : this.typeInfo.iterator();
  }

  public void addToTypeInfo(com.froad.thrift.vo.TypeInfoVo elem) {
    if (this.typeInfo == null) {
      this.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>();
    }
    this.typeInfo.add(elem);
  }

  /**
   * 类型列表
   */
  public List<com.froad.thrift.vo.TypeInfoVo> getTypeInfo() {
    return this.typeInfo;
  }

  /**
   * 类型列表
   */
  public OutletDetailVo setTypeInfo(List<com.froad.thrift.vo.TypeInfoVo> typeInfo) {
    this.typeInfo = typeInfo;
    return this;
  }

  public void unsetTypeInfo() {
    this.typeInfo = null;
  }

  /** Returns true if field typeInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetTypeInfo() {
    return this.typeInfo != null;
  }

  public void setTypeInfoIsSet(boolean value) {
    if (!value) {
      this.typeInfo = null;
    }
  }

  /**
   * 地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 地址
   */
  public OutletDetailVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 联系电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 联系电话
   */
  public OutletDetailVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 描述
   */
  public String getDescription() {
    return this.description;
  }

  /**
   * 描述
   */
  public OutletDetailVo setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  /**
   * 优惠详情
   */
  public String getPreferDetails() {
    return this.preferDetails;
  }

  /**
   * 优惠详情
   */
  public OutletDetailVo setPreferDetails(String preferDetails) {
    this.preferDetails = preferDetails;
    return this;
  }

  public void unsetPreferDetails() {
    this.preferDetails = null;
  }

  /** Returns true if field preferDetails is set (has been assigned a value) and false otherwise */
  public boolean isSetPreferDetails() {
    return this.preferDetails != null;
  }

  public void setPreferDetailsIsSet(boolean value) {
    if (!value) {
      this.preferDetails = null;
    }
  }

  /**
   * 收藏总数
   */
  public int getStoreCount() {
    return this.storeCount;
  }

  /**
   * 收藏总数
   */
  public OutletDetailVo setStoreCount(int storeCount) {
    this.storeCount = storeCount;
    setStoreCountIsSet(true);
    return this;
  }

  public void unsetStoreCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STORECOUNT_ISSET_ID);
  }

  /** Returns true if field storeCount is set (has been assigned a value) and false otherwise */
  public boolean isSetStoreCount() {
    return EncodingUtils.testBit(__isset_bitfield, __STORECOUNT_ISSET_ID);
  }

  public void setStoreCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STORECOUNT_ISSET_ID, value);
  }

  /**
   * 计算出的距离
   */
  public double getDis() {
    return this.dis;
  }

  /**
   * 计算出的距离
   */
  public OutletDetailVo setDis(double dis) {
    this.dis = dis;
    setDisIsSet(true);
    return this;
  }

  public void unsetDis() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DIS_ISSET_ID);
  }

  /** Returns true if field dis is set (has been assigned a value) and false otherwise */
  public boolean isSetDis() {
    return EncodingUtils.testBit(__isset_bitfield, __DIS_ISSET_ID);
  }

  public void setDisIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DIS_ISSET_ID, value);
  }

  /**
   * 评论星级
   */
  public double getStarLevel() {
    return this.starLevel;
  }

  /**
   * 评论星级
   */
  public OutletDetailVo setStarLevel(double starLevel) {
    this.starLevel = starLevel;
    setStarLevelIsSet(true);
    return this;
  }

  public void unsetStarLevel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  /** Returns true if field starLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetStarLevel() {
    return EncodingUtils.testBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  public void setStarLevelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARLEVEL_ISSET_ID, value);
  }

  /**
   * 1 星级 总数
   */
  public int getOneLevelCount() {
    return this.oneLevelCount;
  }

  /**
   * 1 星级 总数
   */
  public OutletDetailVo setOneLevelCount(int oneLevelCount) {
    this.oneLevelCount = oneLevelCount;
    setOneLevelCountIsSet(true);
    return this;
  }

  public void unsetOneLevelCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ONELEVELCOUNT_ISSET_ID);
  }

  /** Returns true if field oneLevelCount is set (has been assigned a value) and false otherwise */
  public boolean isSetOneLevelCount() {
    return EncodingUtils.testBit(__isset_bitfield, __ONELEVELCOUNT_ISSET_ID);
  }

  public void setOneLevelCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ONELEVELCOUNT_ISSET_ID, value);
  }

  /**
   * 2 星级 总数
   */
  public int getTwoLevelCount() {
    return this.twoLevelCount;
  }

  /**
   * 2 星级 总数
   */
  public OutletDetailVo setTwoLevelCount(int twoLevelCount) {
    this.twoLevelCount = twoLevelCount;
    setTwoLevelCountIsSet(true);
    return this;
  }

  public void unsetTwoLevelCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TWOLEVELCOUNT_ISSET_ID);
  }

  /** Returns true if field twoLevelCount is set (has been assigned a value) and false otherwise */
  public boolean isSetTwoLevelCount() {
    return EncodingUtils.testBit(__isset_bitfield, __TWOLEVELCOUNT_ISSET_ID);
  }

  public void setTwoLevelCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TWOLEVELCOUNT_ISSET_ID, value);
  }

  /**
   * 3 星级 总数
   */
  public int getThreeLevelCount() {
    return this.threeLevelCount;
  }

  /**
   * 3 星级 总数
   */
  public OutletDetailVo setThreeLevelCount(int threeLevelCount) {
    this.threeLevelCount = threeLevelCount;
    setThreeLevelCountIsSet(true);
    return this;
  }

  public void unsetThreeLevelCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __THREELEVELCOUNT_ISSET_ID);
  }

  /** Returns true if field threeLevelCount is set (has been assigned a value) and false otherwise */
  public boolean isSetThreeLevelCount() {
    return EncodingUtils.testBit(__isset_bitfield, __THREELEVELCOUNT_ISSET_ID);
  }

  public void setThreeLevelCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __THREELEVELCOUNT_ISSET_ID, value);
  }

  /**
   * 4 星级 总数
   */
  public int getFourLevelCount() {
    return this.fourLevelCount;
  }

  /**
   * 4 星级 总数
   */
  public OutletDetailVo setFourLevelCount(int fourLevelCount) {
    this.fourLevelCount = fourLevelCount;
    setFourLevelCountIsSet(true);
    return this;
  }

  public void unsetFourLevelCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FOURLEVELCOUNT_ISSET_ID);
  }

  /** Returns true if field fourLevelCount is set (has been assigned a value) and false otherwise */
  public boolean isSetFourLevelCount() {
    return EncodingUtils.testBit(__isset_bitfield, __FOURLEVELCOUNT_ISSET_ID);
  }

  public void setFourLevelCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FOURLEVELCOUNT_ISSET_ID, value);
  }

  /**
   * 5 星级 总数
   */
  public int getFiveLevelCount() {
    return this.fiveLevelCount;
  }

  /**
   * 5 星级 总数
   */
  public OutletDetailVo setFiveLevelCount(int fiveLevelCount) {
    this.fiveLevelCount = fiveLevelCount;
    setFiveLevelCountIsSet(true);
    return this;
  }

  public void unsetFiveLevelCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FIVELEVELCOUNT_ISSET_ID);
  }

  /** Returns true if field fiveLevelCount is set (has been assigned a value) and false otherwise */
  public boolean isSetFiveLevelCount() {
    return EncodingUtils.testBit(__isset_bitfield, __FIVELEVELCOUNT_ISSET_ID);
  }

  public void setFiveLevelCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FIVELEVELCOUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((Long)value);
      }
      break;

    case PARENT_AREA_ID:
      if (value == null) {
        unsetParentAreaId();
      } else {
        setParentAreaId((Long)value);
      }
      break;

    case DEFAULT_IMAGE:
      if (value == null) {
        unsetDefaultImage();
      } else {
        setDefaultImage((String)value);
      }
      break;

    case TREE_PATH_NAME:
      if (value == null) {
        unsetTreePathName();
      } else {
        setTreePathName((String)value);
      }
      break;

    case LOCATION:
      if (value == null) {
        unsetLocation();
      } else {
        setLocation((com.froad.thrift.vo.LocationVo)value);
      }
      break;

    case IS_ENABLE:
      if (value == null) {
        unsetIsEnable();
      } else {
        setIsEnable((Boolean)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case OUTLET_FULLNAME:
      if (value == null) {
        unsetOutletFullname();
      } else {
        setOutletFullname((String)value);
      }
      break;

    case CATEGORY_INFO:
      if (value == null) {
        unsetCategoryInfo();
      } else {
        setCategoryInfo((List<com.froad.thrift.vo.CategoryInfoVo>)value);
      }
      break;

    case TYPE_INFO:
      if (value == null) {
        unsetTypeInfo();
      } else {
        setTypeInfo((List<com.froad.thrift.vo.TypeInfoVo>)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case PREFER_DETAILS:
      if (value == null) {
        unsetPreferDetails();
      } else {
        setPreferDetails((String)value);
      }
      break;

    case STORE_COUNT:
      if (value == null) {
        unsetStoreCount();
      } else {
        setStoreCount((Integer)value);
      }
      break;

    case DIS:
      if (value == null) {
        unsetDis();
      } else {
        setDis((Double)value);
      }
      break;

    case STAR_LEVEL:
      if (value == null) {
        unsetStarLevel();
      } else {
        setStarLevel((Double)value);
      }
      break;

    case ONE_LEVEL_COUNT:
      if (value == null) {
        unsetOneLevelCount();
      } else {
        setOneLevelCount((Integer)value);
      }
      break;

    case TWO_LEVEL_COUNT:
      if (value == null) {
        unsetTwoLevelCount();
      } else {
        setTwoLevelCount((Integer)value);
      }
      break;

    case THREE_LEVEL_COUNT:
      if (value == null) {
        unsetThreeLevelCount();
      } else {
        setThreeLevelCount((Integer)value);
      }
      break;

    case FOUR_LEVEL_COUNT:
      if (value == null) {
        unsetFourLevelCount();
      } else {
        setFourLevelCount((Integer)value);
      }
      break;

    case FIVE_LEVEL_COUNT:
      if (value == null) {
        unsetFiveLevelCount();
      } else {
        setFiveLevelCount((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case CLIENT_ID:
      return getClientId();

    case MERCHANT_ID:
      return getMerchantId();

    case MERCHANT_NAME:
      return getMerchantName();

    case AREA_ID:
      return Long.valueOf(getAreaId());

    case PARENT_AREA_ID:
      return Long.valueOf(getParentAreaId());

    case DEFAULT_IMAGE:
      return getDefaultImage();

    case TREE_PATH_NAME:
      return getTreePathName();

    case LOCATION:
      return getLocation();

    case IS_ENABLE:
      return Boolean.valueOf(isIsEnable());

    case OUTLET_NAME:
      return getOutletName();

    case OUTLET_FULLNAME:
      return getOutletFullname();

    case CATEGORY_INFO:
      return getCategoryInfo();

    case TYPE_INFO:
      return getTypeInfo();

    case ADDRESS:
      return getAddress();

    case PHONE:
      return getPhone();

    case DESCRIPTION:
      return getDescription();

    case PREFER_DETAILS:
      return getPreferDetails();

    case STORE_COUNT:
      return Integer.valueOf(getStoreCount());

    case DIS:
      return Double.valueOf(getDis());

    case STAR_LEVEL:
      return Double.valueOf(getStarLevel());

    case ONE_LEVEL_COUNT:
      return Integer.valueOf(getOneLevelCount());

    case TWO_LEVEL_COUNT:
      return Integer.valueOf(getTwoLevelCount());

    case THREE_LEVEL_COUNT:
      return Integer.valueOf(getThreeLevelCount());

    case FOUR_LEVEL_COUNT:
      return Integer.valueOf(getFourLevelCount());

    case FIVE_LEVEL_COUNT:
      return Integer.valueOf(getFiveLevelCount());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case CLIENT_ID:
      return isSetClientId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case AREA_ID:
      return isSetAreaId();
    case PARENT_AREA_ID:
      return isSetParentAreaId();
    case DEFAULT_IMAGE:
      return isSetDefaultImage();
    case TREE_PATH_NAME:
      return isSetTreePathName();
    case LOCATION:
      return isSetLocation();
    case IS_ENABLE:
      return isSetIsEnable();
    case OUTLET_NAME:
      return isSetOutletName();
    case OUTLET_FULLNAME:
      return isSetOutletFullname();
    case CATEGORY_INFO:
      return isSetCategoryInfo();
    case TYPE_INFO:
      return isSetTypeInfo();
    case ADDRESS:
      return isSetAddress();
    case PHONE:
      return isSetPhone();
    case DESCRIPTION:
      return isSetDescription();
    case PREFER_DETAILS:
      return isSetPreferDetails();
    case STORE_COUNT:
      return isSetStoreCount();
    case DIS:
      return isSetDis();
    case STAR_LEVEL:
      return isSetStarLevel();
    case ONE_LEVEL_COUNT:
      return isSetOneLevelCount();
    case TWO_LEVEL_COUNT:
      return isSetTwoLevelCount();
    case THREE_LEVEL_COUNT:
      return isSetThreeLevelCount();
    case FOUR_LEVEL_COUNT:
      return isSetFourLevelCount();
    case FIVE_LEVEL_COUNT:
      return isSetFiveLevelCount();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OutletDetailVo)
      return this.equals((OutletDetailVo)that);
    return false;
  }

  public boolean equals(OutletDetailVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_areaId = true && this.isSetAreaId();
    boolean that_present_areaId = true && that.isSetAreaId();
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (this.areaId != that.areaId)
        return false;
    }

    boolean this_present_parentAreaId = true && this.isSetParentAreaId();
    boolean that_present_parentAreaId = true && that.isSetParentAreaId();
    if (this_present_parentAreaId || that_present_parentAreaId) {
      if (!(this_present_parentAreaId && that_present_parentAreaId))
        return false;
      if (this.parentAreaId != that.parentAreaId)
        return false;
    }

    boolean this_present_defaultImage = true && this.isSetDefaultImage();
    boolean that_present_defaultImage = true && that.isSetDefaultImage();
    if (this_present_defaultImage || that_present_defaultImage) {
      if (!(this_present_defaultImage && that_present_defaultImage))
        return false;
      if (!this.defaultImage.equals(that.defaultImage))
        return false;
    }

    boolean this_present_treePathName = true && this.isSetTreePathName();
    boolean that_present_treePathName = true && that.isSetTreePathName();
    if (this_present_treePathName || that_present_treePathName) {
      if (!(this_present_treePathName && that_present_treePathName))
        return false;
      if (!this.treePathName.equals(that.treePathName))
        return false;
    }

    boolean this_present_location = true && this.isSetLocation();
    boolean that_present_location = true && that.isSetLocation();
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (!this.location.equals(that.location))
        return false;
    }

    boolean this_present_isEnable = true && this.isSetIsEnable();
    boolean that_present_isEnable = true && that.isSetIsEnable();
    if (this_present_isEnable || that_present_isEnable) {
      if (!(this_present_isEnable && that_present_isEnable))
        return false;
      if (this.isEnable != that.isEnable)
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_outletFullname = true && this.isSetOutletFullname();
    boolean that_present_outletFullname = true && that.isSetOutletFullname();
    if (this_present_outletFullname || that_present_outletFullname) {
      if (!(this_present_outletFullname && that_present_outletFullname))
        return false;
      if (!this.outletFullname.equals(that.outletFullname))
        return false;
    }

    boolean this_present_categoryInfo = true && this.isSetCategoryInfo();
    boolean that_present_categoryInfo = true && that.isSetCategoryInfo();
    if (this_present_categoryInfo || that_present_categoryInfo) {
      if (!(this_present_categoryInfo && that_present_categoryInfo))
        return false;
      if (!this.categoryInfo.equals(that.categoryInfo))
        return false;
    }

    boolean this_present_typeInfo = true && this.isSetTypeInfo();
    boolean that_present_typeInfo = true && that.isSetTypeInfo();
    if (this_present_typeInfo || that_present_typeInfo) {
      if (!(this_present_typeInfo && that_present_typeInfo))
        return false;
      if (!this.typeInfo.equals(that.typeInfo))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_preferDetails = true && this.isSetPreferDetails();
    boolean that_present_preferDetails = true && that.isSetPreferDetails();
    if (this_present_preferDetails || that_present_preferDetails) {
      if (!(this_present_preferDetails && that_present_preferDetails))
        return false;
      if (!this.preferDetails.equals(that.preferDetails))
        return false;
    }

    boolean this_present_storeCount = true && this.isSetStoreCount();
    boolean that_present_storeCount = true && that.isSetStoreCount();
    if (this_present_storeCount || that_present_storeCount) {
      if (!(this_present_storeCount && that_present_storeCount))
        return false;
      if (this.storeCount != that.storeCount)
        return false;
    }

    boolean this_present_dis = true && this.isSetDis();
    boolean that_present_dis = true && that.isSetDis();
    if (this_present_dis || that_present_dis) {
      if (!(this_present_dis && that_present_dis))
        return false;
      if (this.dis != that.dis)
        return false;
    }

    boolean this_present_starLevel = true && this.isSetStarLevel();
    boolean that_present_starLevel = true && that.isSetStarLevel();
    if (this_present_starLevel || that_present_starLevel) {
      if (!(this_present_starLevel && that_present_starLevel))
        return false;
      if (this.starLevel != that.starLevel)
        return false;
    }

    boolean this_present_oneLevelCount = true && this.isSetOneLevelCount();
    boolean that_present_oneLevelCount = true && that.isSetOneLevelCount();
    if (this_present_oneLevelCount || that_present_oneLevelCount) {
      if (!(this_present_oneLevelCount && that_present_oneLevelCount))
        return false;
      if (this.oneLevelCount != that.oneLevelCount)
        return false;
    }

    boolean this_present_twoLevelCount = true && this.isSetTwoLevelCount();
    boolean that_present_twoLevelCount = true && that.isSetTwoLevelCount();
    if (this_present_twoLevelCount || that_present_twoLevelCount) {
      if (!(this_present_twoLevelCount && that_present_twoLevelCount))
        return false;
      if (this.twoLevelCount != that.twoLevelCount)
        return false;
    }

    boolean this_present_threeLevelCount = true && this.isSetThreeLevelCount();
    boolean that_present_threeLevelCount = true && that.isSetThreeLevelCount();
    if (this_present_threeLevelCount || that_present_threeLevelCount) {
      if (!(this_present_threeLevelCount && that_present_threeLevelCount))
        return false;
      if (this.threeLevelCount != that.threeLevelCount)
        return false;
    }

    boolean this_present_fourLevelCount = true && this.isSetFourLevelCount();
    boolean that_present_fourLevelCount = true && that.isSetFourLevelCount();
    if (this_present_fourLevelCount || that_present_fourLevelCount) {
      if (!(this_present_fourLevelCount && that_present_fourLevelCount))
        return false;
      if (this.fourLevelCount != that.fourLevelCount)
        return false;
    }

    boolean this_present_fiveLevelCount = true && this.isSetFiveLevelCount();
    boolean that_present_fiveLevelCount = true && that.isSetFiveLevelCount();
    if (this_present_fiveLevelCount || that_present_fiveLevelCount) {
      if (!(this_present_fiveLevelCount && that_present_fiveLevelCount))
        return false;
      if (this.fiveLevelCount != that.fiveLevelCount)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_areaId = true && (isSetAreaId());
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_parentAreaId = true && (isSetParentAreaId());
    list.add(present_parentAreaId);
    if (present_parentAreaId)
      list.add(parentAreaId);

    boolean present_defaultImage = true && (isSetDefaultImage());
    list.add(present_defaultImage);
    if (present_defaultImage)
      list.add(defaultImage);

    boolean present_treePathName = true && (isSetTreePathName());
    list.add(present_treePathName);
    if (present_treePathName)
      list.add(treePathName);

    boolean present_location = true && (isSetLocation());
    list.add(present_location);
    if (present_location)
      list.add(location);

    boolean present_isEnable = true && (isSetIsEnable());
    list.add(present_isEnable);
    if (present_isEnable)
      list.add(isEnable);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_outletFullname = true && (isSetOutletFullname());
    list.add(present_outletFullname);
    if (present_outletFullname)
      list.add(outletFullname);

    boolean present_categoryInfo = true && (isSetCategoryInfo());
    list.add(present_categoryInfo);
    if (present_categoryInfo)
      list.add(categoryInfo);

    boolean present_typeInfo = true && (isSetTypeInfo());
    list.add(present_typeInfo);
    if (present_typeInfo)
      list.add(typeInfo);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_description = true && (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    boolean present_preferDetails = true && (isSetPreferDetails());
    list.add(present_preferDetails);
    if (present_preferDetails)
      list.add(preferDetails);

    boolean present_storeCount = true && (isSetStoreCount());
    list.add(present_storeCount);
    if (present_storeCount)
      list.add(storeCount);

    boolean present_dis = true && (isSetDis());
    list.add(present_dis);
    if (present_dis)
      list.add(dis);

    boolean present_starLevel = true && (isSetStarLevel());
    list.add(present_starLevel);
    if (present_starLevel)
      list.add(starLevel);

    boolean present_oneLevelCount = true && (isSetOneLevelCount());
    list.add(present_oneLevelCount);
    if (present_oneLevelCount)
      list.add(oneLevelCount);

    boolean present_twoLevelCount = true && (isSetTwoLevelCount());
    list.add(present_twoLevelCount);
    if (present_twoLevelCount)
      list.add(twoLevelCount);

    boolean present_threeLevelCount = true && (isSetThreeLevelCount());
    list.add(present_threeLevelCount);
    if (present_threeLevelCount)
      list.add(threeLevelCount);

    boolean present_fourLevelCount = true && (isSetFourLevelCount());
    list.add(present_fourLevelCount);
    if (present_fourLevelCount)
      list.add(fourLevelCount);

    boolean present_fiveLevelCount = true && (isSetFiveLevelCount());
    list.add(present_fiveLevelCount);
    if (present_fiveLevelCount)
      list.add(fiveLevelCount);

    return list.hashCode();
  }

  @Override
  public int compareTo(OutletDetailVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParentAreaId()).compareTo(other.isSetParentAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParentAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.parentAreaId, other.parentAreaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDefaultImage()).compareTo(other.isSetDefaultImage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultImage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.defaultImage, other.defaultImage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTreePathName()).compareTo(other.isSetTreePathName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTreePathName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.treePathName, other.treePathName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocation()).compareTo(other.isSetLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.location, other.location);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnable()).compareTo(other.isSetIsEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnable, other.isEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletFullname()).compareTo(other.isSetOutletFullname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletFullname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletFullname, other.outletFullname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryInfo()).compareTo(other.isSetCategoryInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryInfo, other.categoryInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTypeInfo()).compareTo(other.isSetTypeInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTypeInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.typeInfo, other.typeInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreferDetails()).compareTo(other.isSetPreferDetails());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferDetails()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preferDetails, other.preferDetails);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStoreCount()).compareTo(other.isSetStoreCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStoreCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storeCount, other.storeCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDis()).compareTo(other.isSetDis());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDis()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dis, other.dis);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarLevel()).compareTo(other.isSetStarLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starLevel, other.starLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOneLevelCount()).compareTo(other.isSetOneLevelCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOneLevelCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oneLevelCount, other.oneLevelCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTwoLevelCount()).compareTo(other.isSetTwoLevelCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTwoLevelCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.twoLevelCount, other.twoLevelCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThreeLevelCount()).compareTo(other.isSetThreeLevelCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThreeLevelCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.threeLevelCount, other.threeLevelCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFourLevelCount()).compareTo(other.isSetFourLevelCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFourLevelCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fourLevelCount, other.fourLevelCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFiveLevelCount()).compareTo(other.isSetFiveLevelCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFiveLevelCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fiveLevelCount, other.fiveLevelCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OutletDetailVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      if (this.id == null) {
        sb.append("null");
      } else {
        sb.append(this.id);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetMerchantName()) {
      if (!first) sb.append(", ");
      sb.append("merchantName:");
      if (this.merchantName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantName);
      }
      first = false;
    }
    if (isSetAreaId()) {
      if (!first) sb.append(", ");
      sb.append("areaId:");
      sb.append(this.areaId);
      first = false;
    }
    if (isSetParentAreaId()) {
      if (!first) sb.append(", ");
      sb.append("parentAreaId:");
      sb.append(this.parentAreaId);
      first = false;
    }
    if (isSetDefaultImage()) {
      if (!first) sb.append(", ");
      sb.append("defaultImage:");
      if (this.defaultImage == null) {
        sb.append("null");
      } else {
        sb.append(this.defaultImage);
      }
      first = false;
    }
    if (isSetTreePathName()) {
      if (!first) sb.append(", ");
      sb.append("treePathName:");
      if (this.treePathName == null) {
        sb.append("null");
      } else {
        sb.append(this.treePathName);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("location:");
    if (this.location == null) {
      sb.append("null");
    } else {
      sb.append(this.location);
    }
    first = false;
    if (isSetIsEnable()) {
      if (!first) sb.append(", ");
      sb.append("isEnable:");
      sb.append(this.isEnable);
      first = false;
    }
    if (isSetOutletName()) {
      if (!first) sb.append(", ");
      sb.append("outletName:");
      if (this.outletName == null) {
        sb.append("null");
      } else {
        sb.append(this.outletName);
      }
      first = false;
    }
    if (isSetOutletFullname()) {
      if (!first) sb.append(", ");
      sb.append("outletFullname:");
      if (this.outletFullname == null) {
        sb.append("null");
      } else {
        sb.append(this.outletFullname);
      }
      first = false;
    }
    if (isSetCategoryInfo()) {
      if (!first) sb.append(", ");
      sb.append("categoryInfo:");
      if (this.categoryInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.categoryInfo);
      }
      first = false;
    }
    if (isSetTypeInfo()) {
      if (!first) sb.append(", ");
      sb.append("typeInfo:");
      if (this.typeInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.typeInfo);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetDescription()) {
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
    }
    if (isSetPreferDetails()) {
      if (!first) sb.append(", ");
      sb.append("preferDetails:");
      if (this.preferDetails == null) {
        sb.append("null");
      } else {
        sb.append(this.preferDetails);
      }
      first = false;
    }
    if (isSetStoreCount()) {
      if (!first) sb.append(", ");
      sb.append("storeCount:");
      sb.append(this.storeCount);
      first = false;
    }
    if (isSetDis()) {
      if (!first) sb.append(", ");
      sb.append("dis:");
      sb.append(this.dis);
      first = false;
    }
    if (isSetStarLevel()) {
      if (!first) sb.append(", ");
      sb.append("starLevel:");
      sb.append(this.starLevel);
      first = false;
    }
    if (isSetOneLevelCount()) {
      if (!first) sb.append(", ");
      sb.append("oneLevelCount:");
      sb.append(this.oneLevelCount);
      first = false;
    }
    if (isSetTwoLevelCount()) {
      if (!first) sb.append(", ");
      sb.append("twoLevelCount:");
      sb.append(this.twoLevelCount);
      first = false;
    }
    if (isSetThreeLevelCount()) {
      if (!first) sb.append(", ");
      sb.append("threeLevelCount:");
      sb.append(this.threeLevelCount);
      first = false;
    }
    if (isSetFourLevelCount()) {
      if (!first) sb.append(", ");
      sb.append("fourLevelCount:");
      sb.append(this.fourLevelCount);
      first = false;
    }
    if (isSetFiveLevelCount()) {
      if (!first) sb.append(", ");
      sb.append("fiveLevelCount:");
      sb.append(this.fiveLevelCount);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (location != null) {
      location.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OutletDetailVoStandardSchemeFactory implements SchemeFactory {
    public OutletDetailVoStandardScheme getScheme() {
      return new OutletDetailVoStandardScheme();
    }
  }

  private static class OutletDetailVoStandardScheme extends StandardScheme<OutletDetailVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OutletDetailVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.areaId = iprot.readI64();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PARENT_AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.parentAreaId = iprot.readI64();
              struct.setParentAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DEFAULT_IMAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.defaultImage = iprot.readString();
              struct.setDefaultImageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TREE_PATH_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.treePathName = iprot.readString();
              struct.setTreePathNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // LOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.location = new com.froad.thrift.vo.LocationVo();
              struct.location.read(iprot);
              struct.setLocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // IS_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnable = iprot.readBool();
              struct.setIsEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // OUTLET_FULLNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletFullname = iprot.readString();
              struct.setOutletFullnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CATEGORY_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list0.size);
                com.froad.thrift.vo.CategoryInfoVo _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new com.froad.thrift.vo.CategoryInfoVo();
                  _elem1.read(iprot);
                  struct.categoryInfo.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setCategoryInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // TYPE_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list3.size);
                com.froad.thrift.vo.TypeInfoVo _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = new com.froad.thrift.vo.TypeInfoVo();
                  _elem4.read(iprot);
                  struct.typeInfo.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setTypeInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PREFER_DETAILS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.preferDetails = iprot.readString();
              struct.setPreferDetailsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // STORE_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.storeCount = iprot.readI32();
              struct.setStoreCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // DIS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.dis = iprot.readDouble();
              struct.setDisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // STAR_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.starLevel = iprot.readDouble();
              struct.setStarLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // ONE_LEVEL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.oneLevelCount = iprot.readI32();
              struct.setOneLevelCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // TWO_LEVEL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.twoLevelCount = iprot.readI32();
              struct.setTwoLevelCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // THREE_LEVEL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.threeLevelCount = iprot.readI32();
              struct.setThreeLevelCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // FOUR_LEVEL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.fourLevelCount = iprot.readI32();
              struct.setFourLevelCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // FIVE_LEVEL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.fiveLevelCount = iprot.readI32();
              struct.setFiveLevelCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OutletDetailVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        if (struct.isSetId()) {
          oprot.writeFieldBegin(ID_FIELD_DESC);
          oprot.writeString(struct.id);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantName != null) {
        if (struct.isSetMerchantName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAreaId()) {
        oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
        oprot.writeI64(struct.areaId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetParentAreaId()) {
        oprot.writeFieldBegin(PARENT_AREA_ID_FIELD_DESC);
        oprot.writeI64(struct.parentAreaId);
        oprot.writeFieldEnd();
      }
      if (struct.defaultImage != null) {
        if (struct.isSetDefaultImage()) {
          oprot.writeFieldBegin(DEFAULT_IMAGE_FIELD_DESC);
          oprot.writeString(struct.defaultImage);
          oprot.writeFieldEnd();
        }
      }
      if (struct.treePathName != null) {
        if (struct.isSetTreePathName()) {
          oprot.writeFieldBegin(TREE_PATH_NAME_FIELD_DESC);
          oprot.writeString(struct.treePathName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.location != null) {
        oprot.writeFieldBegin(LOCATION_FIELD_DESC);
        struct.location.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsEnable()) {
        oprot.writeFieldBegin(IS_ENABLE_FIELD_DESC);
        oprot.writeBool(struct.isEnable);
        oprot.writeFieldEnd();
      }
      if (struct.outletName != null) {
        if (struct.isSetOutletName()) {
          oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
          oprot.writeString(struct.outletName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletFullname != null) {
        if (struct.isSetOutletFullname()) {
          oprot.writeFieldBegin(OUTLET_FULLNAME_FIELD_DESC);
          oprot.writeString(struct.outletFullname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.categoryInfo != null) {
        if (struct.isSetCategoryInfo()) {
          oprot.writeFieldBegin(CATEGORY_INFO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.categoryInfo.size()));
            for (com.froad.thrift.vo.CategoryInfoVo _iter6 : struct.categoryInfo)
            {
              _iter6.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.typeInfo != null) {
        if (struct.isSetTypeInfo()) {
          oprot.writeFieldBegin(TYPE_INFO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.typeInfo.size()));
            for (com.froad.thrift.vo.TypeInfoVo _iter7 : struct.typeInfo)
            {
              _iter7.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.description != null) {
        if (struct.isSetDescription()) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
      }
      if (struct.preferDetails != null) {
        if (struct.isSetPreferDetails()) {
          oprot.writeFieldBegin(PREFER_DETAILS_FIELD_DESC);
          oprot.writeString(struct.preferDetails);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStoreCount()) {
        oprot.writeFieldBegin(STORE_COUNT_FIELD_DESC);
        oprot.writeI32(struct.storeCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDis()) {
        oprot.writeFieldBegin(DIS_FIELD_DESC);
        oprot.writeDouble(struct.dis);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStarLevel()) {
        oprot.writeFieldBegin(STAR_LEVEL_FIELD_DESC);
        oprot.writeDouble(struct.starLevel);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOneLevelCount()) {
        oprot.writeFieldBegin(ONE_LEVEL_COUNT_FIELD_DESC);
        oprot.writeI32(struct.oneLevelCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTwoLevelCount()) {
        oprot.writeFieldBegin(TWO_LEVEL_COUNT_FIELD_DESC);
        oprot.writeI32(struct.twoLevelCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetThreeLevelCount()) {
        oprot.writeFieldBegin(THREE_LEVEL_COUNT_FIELD_DESC);
        oprot.writeI32(struct.threeLevelCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetFourLevelCount()) {
        oprot.writeFieldBegin(FOUR_LEVEL_COUNT_FIELD_DESC);
        oprot.writeI32(struct.fourLevelCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetFiveLevelCount()) {
        oprot.writeFieldBegin(FIVE_LEVEL_COUNT_FIELD_DESC);
        oprot.writeI32(struct.fiveLevelCount);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OutletDetailVoTupleSchemeFactory implements SchemeFactory {
    public OutletDetailVoTupleScheme getScheme() {
      return new OutletDetailVoTupleScheme();
    }
  }

  private static class OutletDetailVoTupleScheme extends TupleScheme<OutletDetailVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OutletDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetClientId()) {
        optionals.set(2);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(3);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(4);
      }
      if (struct.isSetAreaId()) {
        optionals.set(5);
      }
      if (struct.isSetParentAreaId()) {
        optionals.set(6);
      }
      if (struct.isSetDefaultImage()) {
        optionals.set(7);
      }
      if (struct.isSetTreePathName()) {
        optionals.set(8);
      }
      if (struct.isSetLocation()) {
        optionals.set(9);
      }
      if (struct.isSetIsEnable()) {
        optionals.set(10);
      }
      if (struct.isSetOutletName()) {
        optionals.set(11);
      }
      if (struct.isSetOutletFullname()) {
        optionals.set(12);
      }
      if (struct.isSetCategoryInfo()) {
        optionals.set(13);
      }
      if (struct.isSetTypeInfo()) {
        optionals.set(14);
      }
      if (struct.isSetAddress()) {
        optionals.set(15);
      }
      if (struct.isSetPhone()) {
        optionals.set(16);
      }
      if (struct.isSetDescription()) {
        optionals.set(17);
      }
      if (struct.isSetPreferDetails()) {
        optionals.set(18);
      }
      if (struct.isSetStoreCount()) {
        optionals.set(19);
      }
      if (struct.isSetDis()) {
        optionals.set(20);
      }
      if (struct.isSetStarLevel()) {
        optionals.set(21);
      }
      if (struct.isSetOneLevelCount()) {
        optionals.set(22);
      }
      if (struct.isSetTwoLevelCount()) {
        optionals.set(23);
      }
      if (struct.isSetThreeLevelCount()) {
        optionals.set(24);
      }
      if (struct.isSetFourLevelCount()) {
        optionals.set(25);
      }
      if (struct.isSetFiveLevelCount()) {
        optionals.set(26);
      }
      oprot.writeBitSet(optionals, 27);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetAreaId()) {
        oprot.writeI64(struct.areaId);
      }
      if (struct.isSetParentAreaId()) {
        oprot.writeI64(struct.parentAreaId);
      }
      if (struct.isSetDefaultImage()) {
        oprot.writeString(struct.defaultImage);
      }
      if (struct.isSetTreePathName()) {
        oprot.writeString(struct.treePathName);
      }
      if (struct.isSetLocation()) {
        struct.location.write(oprot);
      }
      if (struct.isSetIsEnable()) {
        oprot.writeBool(struct.isEnable);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetOutletFullname()) {
        oprot.writeString(struct.outletFullname);
      }
      if (struct.isSetCategoryInfo()) {
        {
          oprot.writeI32(struct.categoryInfo.size());
          for (com.froad.thrift.vo.CategoryInfoVo _iter8 : struct.categoryInfo)
          {
            _iter8.write(oprot);
          }
        }
      }
      if (struct.isSetTypeInfo()) {
        {
          oprot.writeI32(struct.typeInfo.size());
          for (com.froad.thrift.vo.TypeInfoVo _iter9 : struct.typeInfo)
          {
            _iter9.write(oprot);
          }
        }
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetPreferDetails()) {
        oprot.writeString(struct.preferDetails);
      }
      if (struct.isSetStoreCount()) {
        oprot.writeI32(struct.storeCount);
      }
      if (struct.isSetDis()) {
        oprot.writeDouble(struct.dis);
      }
      if (struct.isSetStarLevel()) {
        oprot.writeDouble(struct.starLevel);
      }
      if (struct.isSetOneLevelCount()) {
        oprot.writeI32(struct.oneLevelCount);
      }
      if (struct.isSetTwoLevelCount()) {
        oprot.writeI32(struct.twoLevelCount);
      }
      if (struct.isSetThreeLevelCount()) {
        oprot.writeI32(struct.threeLevelCount);
      }
      if (struct.isSetFourLevelCount()) {
        oprot.writeI32(struct.fourLevelCount);
      }
      if (struct.isSetFiveLevelCount()) {
        oprot.writeI32(struct.fiveLevelCount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OutletDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(27);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.areaId = iprot.readI64();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.parentAreaId = iprot.readI64();
        struct.setParentAreaIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.defaultImage = iprot.readString();
        struct.setDefaultImageIsSet(true);
      }
      if (incoming.get(8)) {
        struct.treePathName = iprot.readString();
        struct.setTreePathNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.location = new com.froad.thrift.vo.LocationVo();
        struct.location.read(iprot);
        struct.setLocationIsSet(true);
      }
      if (incoming.get(10)) {
        struct.isEnable = iprot.readBool();
        struct.setIsEnableIsSet(true);
      }
      if (incoming.get(11)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.outletFullname = iprot.readString();
        struct.setOutletFullnameIsSet(true);
      }
      if (incoming.get(13)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list10.size);
          com.froad.thrift.vo.CategoryInfoVo _elem11;
          for (int _i12 = 0; _i12 < _list10.size; ++_i12)
          {
            _elem11 = new com.froad.thrift.vo.CategoryInfoVo();
            _elem11.read(iprot);
            struct.categoryInfo.add(_elem11);
          }
        }
        struct.setCategoryInfoIsSet(true);
      }
      if (incoming.get(14)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list13.size);
          com.froad.thrift.vo.TypeInfoVo _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = new com.froad.thrift.vo.TypeInfoVo();
            _elem14.read(iprot);
            struct.typeInfo.add(_elem14);
          }
        }
        struct.setTypeInfoIsSet(true);
      }
      if (incoming.get(15)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(16)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(17)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(18)) {
        struct.preferDetails = iprot.readString();
        struct.setPreferDetailsIsSet(true);
      }
      if (incoming.get(19)) {
        struct.storeCount = iprot.readI32();
        struct.setStoreCountIsSet(true);
      }
      if (incoming.get(20)) {
        struct.dis = iprot.readDouble();
        struct.setDisIsSet(true);
      }
      if (incoming.get(21)) {
        struct.starLevel = iprot.readDouble();
        struct.setStarLevelIsSet(true);
      }
      if (incoming.get(22)) {
        struct.oneLevelCount = iprot.readI32();
        struct.setOneLevelCountIsSet(true);
      }
      if (incoming.get(23)) {
        struct.twoLevelCount = iprot.readI32();
        struct.setTwoLevelCountIsSet(true);
      }
      if (incoming.get(24)) {
        struct.threeLevelCount = iprot.readI32();
        struct.setThreeLevelCountIsSet(true);
      }
      if (incoming.get(25)) {
        struct.fourLevelCount = iprot.readI32();
        struct.setFourLevelCountIsSet(true);
      }
      if (incoming.get(26)) {
        struct.fiveLevelCount = iprot.readI32();
        struct.setFiveLevelCountIsSet(true);
      }
    }
  }

}

