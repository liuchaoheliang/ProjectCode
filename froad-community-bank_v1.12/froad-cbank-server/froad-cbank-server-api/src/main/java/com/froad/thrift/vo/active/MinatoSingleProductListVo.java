/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.active;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 凑单商品列表
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MinatoSingleProductListVo implements org.apache.thrift.TBase<MinatoSingleProductListVo, MinatoSingleProductListVo._Fields>, java.io.Serializable, Cloneable, Comparable<MinatoSingleProductListVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MinatoSingleProductListVo");

  private static final org.apache.thrift.protocol.TField REQ_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("reqId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ACTIVE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("activeVo", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField MINATO_SINGLE_PRODUCT_VO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("minatoSingleProductVoList", org.apache.thrift.protocol.TType.LIST, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MinatoSingleProductListVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MinatoSingleProductListVoTupleSchemeFactory());
  }

  /**
   * 请求id
   */
  public String reqId; // required
  /**
   * 客户端id
   */
  public String clientId; // required
  /**
   * 活动对象
   */
  public FindActiveVo activeVo; // required
  /**
   * 区域id
   */
  public String areaId; // required
  /**
   * 分页信息*
   */
  public com.froad.thrift.vo.PageVo page; // required
  /**
   * 凑单商品列表 *
   */
  public List<MinatoSingleProductVo> minatoSingleProductVoList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 请求id
     */
    REQ_ID((short)1, "reqId"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 活动对象
     */
    ACTIVE_VO((short)3, "activeVo"),
    /**
     * 区域id
     */
    AREA_ID((short)4, "areaId"),
    /**
     * 分页信息*
     */
    PAGE((short)5, "page"),
    /**
     * 凑单商品列表 *
     */
    MINATO_SINGLE_PRODUCT_VO_LIST((short)6, "minatoSingleProductVoList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // REQ_ID
          return REQ_ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // ACTIVE_VO
          return ACTIVE_VO;
        case 4: // AREA_ID
          return AREA_ID;
        case 5: // PAGE
          return PAGE;
        case 6: // MINATO_SINGLE_PRODUCT_VO_LIST
          return MINATO_SINGLE_PRODUCT_VO_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.REQ_ID, new org.apache.thrift.meta_data.FieldMetaData("reqId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACTIVE_VO, new org.apache.thrift.meta_data.FieldMetaData("activeVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FindActiveVo.class)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
    tmpMap.put(_Fields.MINATO_SINGLE_PRODUCT_VO_LIST, new org.apache.thrift.meta_data.FieldMetaData("minatoSingleProductVoList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "MinatoSingleProductVo"))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MinatoSingleProductListVo.class, metaDataMap);
  }

  public MinatoSingleProductListVo() {
  }

  public MinatoSingleProductListVo(
    String reqId,
    String clientId,
    FindActiveVo activeVo,
    String areaId,
    com.froad.thrift.vo.PageVo page,
    List<MinatoSingleProductVo> minatoSingleProductVoList)
  {
    this();
    this.reqId = reqId;
    this.clientId = clientId;
    this.activeVo = activeVo;
    this.areaId = areaId;
    this.page = page;
    this.minatoSingleProductVoList = minatoSingleProductVoList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MinatoSingleProductListVo(MinatoSingleProductListVo other) {
    if (other.isSetReqId()) {
      this.reqId = other.reqId;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetActiveVo()) {
      this.activeVo = new FindActiveVo(other.activeVo);
    }
    if (other.isSetAreaId()) {
      this.areaId = other.areaId;
    }
    if (other.isSetPage()) {
      this.page = new com.froad.thrift.vo.PageVo(other.page);
    }
    if (other.isSetMinatoSingleProductVoList()) {
      List<MinatoSingleProductVo> __this__minatoSingleProductVoList = new ArrayList<MinatoSingleProductVo>(other.minatoSingleProductVoList.size());
      for (MinatoSingleProductVo other_element : other.minatoSingleProductVoList) {
        __this__minatoSingleProductVoList.add(other_element);
      }
      this.minatoSingleProductVoList = __this__minatoSingleProductVoList;
    }
  }

  public MinatoSingleProductListVo deepCopy() {
    return new MinatoSingleProductListVo(this);
  }

  @Override
  public void clear() {
    this.reqId = null;
    this.clientId = null;
    this.activeVo = null;
    this.areaId = null;
    this.page = null;
    this.minatoSingleProductVoList = null;
  }

  /**
   * 请求id
   */
  public String getReqId() {
    return this.reqId;
  }

  /**
   * 请求id
   */
  public MinatoSingleProductListVo setReqId(String reqId) {
    this.reqId = reqId;
    return this;
  }

  public void unsetReqId() {
    this.reqId = null;
  }

  /** Returns true if field reqId is set (has been assigned a value) and false otherwise */
  public boolean isSetReqId() {
    return this.reqId != null;
  }

  public void setReqIdIsSet(boolean value) {
    if (!value) {
      this.reqId = null;
    }
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public MinatoSingleProductListVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 活动对象
   */
  public FindActiveVo getActiveVo() {
    return this.activeVo;
  }

  /**
   * 活动对象
   */
  public MinatoSingleProductListVo setActiveVo(FindActiveVo activeVo) {
    this.activeVo = activeVo;
    return this;
  }

  public void unsetActiveVo() {
    this.activeVo = null;
  }

  /** Returns true if field activeVo is set (has been assigned a value) and false otherwise */
  public boolean isSetActiveVo() {
    return this.activeVo != null;
  }

  public void setActiveVoIsSet(boolean value) {
    if (!value) {
      this.activeVo = null;
    }
  }

  /**
   * 区域id
   */
  public String getAreaId() {
    return this.areaId;
  }

  /**
   * 区域id
   */
  public MinatoSingleProductListVo setAreaId(String areaId) {
    this.areaId = areaId;
    return this;
  }

  public void unsetAreaId() {
    this.areaId = null;
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return this.areaId != null;
  }

  public void setAreaIdIsSet(boolean value) {
    if (!value) {
      this.areaId = null;
    }
  }

  /**
   * 分页信息*
   */
  public com.froad.thrift.vo.PageVo getPage() {
    return this.page;
  }

  /**
   * 分页信息*
   */
  public MinatoSingleProductListVo setPage(com.froad.thrift.vo.PageVo page) {
    this.page = page;
    return this;
  }

  public void unsetPage() {
    this.page = null;
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return this.page != null;
  }

  public void setPageIsSet(boolean value) {
    if (!value) {
      this.page = null;
    }
  }

  public int getMinatoSingleProductVoListSize() {
    return (this.minatoSingleProductVoList == null) ? 0 : this.minatoSingleProductVoList.size();
  }

  public java.util.Iterator<MinatoSingleProductVo> getMinatoSingleProductVoListIterator() {
    return (this.minatoSingleProductVoList == null) ? null : this.minatoSingleProductVoList.iterator();
  }

  public void addToMinatoSingleProductVoList(MinatoSingleProductVo elem) {
    if (this.minatoSingleProductVoList == null) {
      this.minatoSingleProductVoList = new ArrayList<MinatoSingleProductVo>();
    }
    this.minatoSingleProductVoList.add(elem);
  }

  /**
   * 凑单商品列表 *
   */
  public List<MinatoSingleProductVo> getMinatoSingleProductVoList() {
    return this.minatoSingleProductVoList;
  }

  /**
   * 凑单商品列表 *
   */
  public MinatoSingleProductListVo setMinatoSingleProductVoList(List<MinatoSingleProductVo> minatoSingleProductVoList) {
    this.minatoSingleProductVoList = minatoSingleProductVoList;
    return this;
  }

  public void unsetMinatoSingleProductVoList() {
    this.minatoSingleProductVoList = null;
  }

  /** Returns true if field minatoSingleProductVoList is set (has been assigned a value) and false otherwise */
  public boolean isSetMinatoSingleProductVoList() {
    return this.minatoSingleProductVoList != null;
  }

  public void setMinatoSingleProductVoListIsSet(boolean value) {
    if (!value) {
      this.minatoSingleProductVoList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case REQ_ID:
      if (value == null) {
        unsetReqId();
      } else {
        setReqId((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case ACTIVE_VO:
      if (value == null) {
        unsetActiveVo();
      } else {
        setActiveVo((FindActiveVo)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((com.froad.thrift.vo.PageVo)value);
      }
      break;

    case MINATO_SINGLE_PRODUCT_VO_LIST:
      if (value == null) {
        unsetMinatoSingleProductVoList();
      } else {
        setMinatoSingleProductVoList((List<MinatoSingleProductVo>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case REQ_ID:
      return getReqId();

    case CLIENT_ID:
      return getClientId();

    case ACTIVE_VO:
      return getActiveVo();

    case AREA_ID:
      return getAreaId();

    case PAGE:
      return getPage();

    case MINATO_SINGLE_PRODUCT_VO_LIST:
      return getMinatoSingleProductVoList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case REQ_ID:
      return isSetReqId();
    case CLIENT_ID:
      return isSetClientId();
    case ACTIVE_VO:
      return isSetActiveVo();
    case AREA_ID:
      return isSetAreaId();
    case PAGE:
      return isSetPage();
    case MINATO_SINGLE_PRODUCT_VO_LIST:
      return isSetMinatoSingleProductVoList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MinatoSingleProductListVo)
      return this.equals((MinatoSingleProductListVo)that);
    return false;
  }

  public boolean equals(MinatoSingleProductListVo that) {
    if (that == null)
      return false;

    boolean this_present_reqId = true && this.isSetReqId();
    boolean that_present_reqId = true && that.isSetReqId();
    if (this_present_reqId || that_present_reqId) {
      if (!(this_present_reqId && that_present_reqId))
        return false;
      if (!this.reqId.equals(that.reqId))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_activeVo = true && this.isSetActiveVo();
    boolean that_present_activeVo = true && that.isSetActiveVo();
    if (this_present_activeVo || that_present_activeVo) {
      if (!(this_present_activeVo && that_present_activeVo))
        return false;
      if (!this.activeVo.equals(that.activeVo))
        return false;
    }

    boolean this_present_areaId = true && this.isSetAreaId();
    boolean that_present_areaId = true && that.isSetAreaId();
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (!this.areaId.equals(that.areaId))
        return false;
    }

    boolean this_present_page = true && this.isSetPage();
    boolean that_present_page = true && that.isSetPage();
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (!this.page.equals(that.page))
        return false;
    }

    boolean this_present_minatoSingleProductVoList = true && this.isSetMinatoSingleProductVoList();
    boolean that_present_minatoSingleProductVoList = true && that.isSetMinatoSingleProductVoList();
    if (this_present_minatoSingleProductVoList || that_present_minatoSingleProductVoList) {
      if (!(this_present_minatoSingleProductVoList && that_present_minatoSingleProductVoList))
        return false;
      if (!this.minatoSingleProductVoList.equals(that.minatoSingleProductVoList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_reqId = true && (isSetReqId());
    list.add(present_reqId);
    if (present_reqId)
      list.add(reqId);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_activeVo = true && (isSetActiveVo());
    list.add(present_activeVo);
    if (present_activeVo)
      list.add(activeVo);

    boolean present_areaId = true && (isSetAreaId());
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_page = true && (isSetPage());
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_minatoSingleProductVoList = true && (isSetMinatoSingleProductVoList());
    list.add(present_minatoSingleProductVoList);
    if (present_minatoSingleProductVoList)
      list.add(minatoSingleProductVoList);

    return list.hashCode();
  }

  @Override
  public int compareTo(MinatoSingleProductListVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetReqId()).compareTo(other.isSetReqId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReqId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqId, other.reqId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActiveVo()).compareTo(other.isSetActiveVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActiveVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activeVo, other.activeVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMinatoSingleProductVoList()).compareTo(other.isSetMinatoSingleProductVoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMinatoSingleProductVoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.minatoSingleProductVoList, other.minatoSingleProductVoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MinatoSingleProductListVo(");
    boolean first = true;

    sb.append("reqId:");
    if (this.reqId == null) {
      sb.append("null");
    } else {
      sb.append(this.reqId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("activeVo:");
    if (this.activeVo == null) {
      sb.append("null");
    } else {
      sb.append(this.activeVo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("areaId:");
    if (this.areaId == null) {
      sb.append("null");
    } else {
      sb.append(this.areaId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    if (this.page == null) {
      sb.append("null");
    } else {
      sb.append(this.page);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("minatoSingleProductVoList:");
    if (this.minatoSingleProductVoList == null) {
      sb.append("null");
    } else {
      sb.append(this.minatoSingleProductVoList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (activeVo != null) {
      activeVo.validate();
    }
    if (page != null) {
      page.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MinatoSingleProductListVoStandardSchemeFactory implements SchemeFactory {
    public MinatoSingleProductListVoStandardScheme getScheme() {
      return new MinatoSingleProductListVoStandardScheme();
    }
  }

  private static class MinatoSingleProductListVoStandardScheme extends StandardScheme<MinatoSingleProductListVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MinatoSingleProductListVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // REQ_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reqId = iprot.readString();
              struct.setReqIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACTIVE_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.activeVo = new FindActiveVo();
              struct.activeVo.read(iprot);
              struct.setActiveVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaId = iprot.readString();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.page = new com.froad.thrift.vo.PageVo();
              struct.page.read(iprot);
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MINATO_SINGLE_PRODUCT_VO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list240 = iprot.readListBegin();
                struct.minatoSingleProductVoList = new ArrayList<MinatoSingleProductVo>(_list240.size);
                MinatoSingleProductVo _elem241;
                for (int _i242 = 0; _i242 < _list240.size; ++_i242)
                {
                  _elem241 = new MinatoSingleProductVo();
                  _elem241.read(iprot);
                  struct.minatoSingleProductVoList.add(_elem241);
                }
                iprot.readListEnd();
              }
              struct.setMinatoSingleProductVoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MinatoSingleProductListVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.reqId != null) {
        oprot.writeFieldBegin(REQ_ID_FIELD_DESC);
        oprot.writeString(struct.reqId);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.activeVo != null) {
        oprot.writeFieldBegin(ACTIVE_VO_FIELD_DESC);
        struct.activeVo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.areaId != null) {
        oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
        oprot.writeString(struct.areaId);
        oprot.writeFieldEnd();
      }
      if (struct.page != null) {
        oprot.writeFieldBegin(PAGE_FIELD_DESC);
        struct.page.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.minatoSingleProductVoList != null) {
        oprot.writeFieldBegin(MINATO_SINGLE_PRODUCT_VO_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.minatoSingleProductVoList.size()));
          for (MinatoSingleProductVo _iter243 : struct.minatoSingleProductVoList)
          {
            _iter243.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MinatoSingleProductListVoTupleSchemeFactory implements SchemeFactory {
    public MinatoSingleProductListVoTupleScheme getScheme() {
      return new MinatoSingleProductListVoTupleScheme();
    }
  }

  private static class MinatoSingleProductListVoTupleScheme extends TupleScheme<MinatoSingleProductListVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MinatoSingleProductListVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetReqId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetActiveVo()) {
        optionals.set(2);
      }
      if (struct.isSetAreaId()) {
        optionals.set(3);
      }
      if (struct.isSetPage()) {
        optionals.set(4);
      }
      if (struct.isSetMinatoSingleProductVoList()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetReqId()) {
        oprot.writeString(struct.reqId);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetActiveVo()) {
        struct.activeVo.write(oprot);
      }
      if (struct.isSetAreaId()) {
        oprot.writeString(struct.areaId);
      }
      if (struct.isSetPage()) {
        struct.page.write(oprot);
      }
      if (struct.isSetMinatoSingleProductVoList()) {
        {
          oprot.writeI32(struct.minatoSingleProductVoList.size());
          for (MinatoSingleProductVo _iter244 : struct.minatoSingleProductVoList)
          {
            _iter244.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MinatoSingleProductListVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.reqId = iprot.readString();
        struct.setReqIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.activeVo = new FindActiveVo();
        struct.activeVo.read(iprot);
        struct.setActiveVoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.areaId = iprot.readString();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.page = new com.froad.thrift.vo.PageVo();
        struct.page.read(iprot);
        struct.setPageIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list245 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.minatoSingleProductVoList = new ArrayList<MinatoSingleProductVo>(_list245.size);
          MinatoSingleProductVo _elem246;
          for (int _i247 = 0; _i247 < _list245.size; ++_i247)
          {
            _elem246 = new MinatoSingleProductVo();
            _elem246.read(iprot);
            struct.minatoSingleProductVoList.add(_elem246);
          }
        }
        struct.setMinatoSingleProductVoListIsSet(true);
      }
    }
  }

}

