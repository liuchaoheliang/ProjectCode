/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 待审核数量查询接口[待办箱]（getPendAuitCount）接口请求对象
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class GetPendAuitCountReqVo implements org.apache.thrift.TBase<GetPendAuitCountReqVo, GetPendAuitCountReqVo._Fields>, java.io.Serializable, Cloneable, Comparable<GetPendAuitCountReqVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetPendAuitCountReqVo");

  private static final org.apache.thrift.protocol.TField ORIGIN_FIELD_DESC = new org.apache.thrift.protocol.TField("origin", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField STAR_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("starTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField AND_BESS_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("andBessData", org.apache.thrift.protocol.TType.MAP, (short)4);
  private static final org.apache.thrift.protocol.TField OR_BESS_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("orBessData", org.apache.thrift.protocol.TType.MAP, (short)5);
  private static final org.apache.thrift.protocol.TField PROCESS_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("processType", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PROCESS_TYPE_DETAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("processTypeDetail", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new GetPendAuitCountReqVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new GetPendAuitCountReqVoTupleSchemeFactory());
  }

  /**
   * 源信息
   */
  public com.froad.thrift.vo.OriginVo origin; // required
  /**
   * 开始时间
   */
  public long starTime; // optional
  /**
   * 结束时间
   */
  public long endTime; // optional
  /**
   * 并且关系:key为限制条件 value为业务json对象
   */
  public Map<com.froad.thrift.vo.Restrictions,String> andBessData; // optional
  /**
   * 或者关系:key为限制条件 value为业务json对象
   */
  public Map<com.froad.thrift.vo.Restrictions,String> orBessData; // optional
  /**
   * 流程类型:1-商户,2-门店,3-团购商品,4-预售商品
   */
  public String processType; // required
  /**
   * 类型详情:0-新增审核,1-更新审核
   */
  public String processTypeDetail; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 源信息
     */
    ORIGIN((short)1, "origin"),
    /**
     * 开始时间
     */
    STAR_TIME((short)2, "starTime"),
    /**
     * 结束时间
     */
    END_TIME((short)3, "endTime"),
    /**
     * 并且关系:key为限制条件 value为业务json对象
     */
    AND_BESS_DATA((short)4, "andBessData"),
    /**
     * 或者关系:key为限制条件 value为业务json对象
     */
    OR_BESS_DATA((short)5, "orBessData"),
    /**
     * 流程类型:1-商户,2-门店,3-团购商品,4-预售商品
     */
    PROCESS_TYPE((short)6, "processType"),
    /**
     * 类型详情:0-新增审核,1-更新审核
     */
    PROCESS_TYPE_DETAIL((short)7, "processTypeDetail");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORIGIN
          return ORIGIN;
        case 2: // STAR_TIME
          return STAR_TIME;
        case 3: // END_TIME
          return END_TIME;
        case 4: // AND_BESS_DATA
          return AND_BESS_DATA;
        case 5: // OR_BESS_DATA
          return OR_BESS_DATA;
        case 6: // PROCESS_TYPE
          return PROCESS_TYPE;
        case 7: // PROCESS_TYPE_DETAIL
          return PROCESS_TYPE_DETAIL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STARTIME_ISSET_ID = 0;
  private static final int __ENDTIME_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.STAR_TIME,_Fields.END_TIME,_Fields.AND_BESS_DATA,_Fields.OR_BESS_DATA,_Fields.PROCESS_TYPE_DETAIL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORIGIN, new org.apache.thrift.meta_data.FieldMetaData("origin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
    tmpMap.put(_Fields.STAR_TIME, new org.apache.thrift.meta_data.FieldMetaData("starTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AND_BESS_DATA, new org.apache.thrift.meta_data.FieldMetaData("andBessData", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.froad.thrift.vo.Restrictions.class), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.OR_BESS_DATA, new org.apache.thrift.meta_data.FieldMetaData("orBessData", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.froad.thrift.vo.Restrictions.class), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.PROCESS_TYPE, new org.apache.thrift.meta_data.FieldMetaData("processType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROCESS_TYPE_DETAIL, new org.apache.thrift.meta_data.FieldMetaData("processTypeDetail", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetPendAuitCountReqVo.class, metaDataMap);
  }

  public GetPendAuitCountReqVo() {
  }

  public GetPendAuitCountReqVo(
    com.froad.thrift.vo.OriginVo origin,
    String processType)
  {
    this();
    this.origin = origin;
    this.processType = processType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GetPendAuitCountReqVo(GetPendAuitCountReqVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOrigin()) {
      this.origin = new com.froad.thrift.vo.OriginVo(other.origin);
    }
    this.starTime = other.starTime;
    this.endTime = other.endTime;
    if (other.isSetAndBessData()) {
      Map<com.froad.thrift.vo.Restrictions,String> __this__andBessData = new HashMap<com.froad.thrift.vo.Restrictions,String>(other.andBessData.size());
      for (Map.Entry<com.froad.thrift.vo.Restrictions, String> other_element : other.andBessData.entrySet()) {

        com.froad.thrift.vo.Restrictions other_element_key = other_element.getKey();
        String other_element_value = other_element.getValue();

        com.froad.thrift.vo.Restrictions __this__andBessData_copy_key = other_element_key;

        String __this__andBessData_copy_value = other_element_value;

        __this__andBessData.put(__this__andBessData_copy_key, __this__andBessData_copy_value);
      }
      this.andBessData = __this__andBessData;
    }
    if (other.isSetOrBessData()) {
      Map<com.froad.thrift.vo.Restrictions,String> __this__orBessData = new HashMap<com.froad.thrift.vo.Restrictions,String>(other.orBessData.size());
      for (Map.Entry<com.froad.thrift.vo.Restrictions, String> other_element : other.orBessData.entrySet()) {

        com.froad.thrift.vo.Restrictions other_element_key = other_element.getKey();
        String other_element_value = other_element.getValue();

        com.froad.thrift.vo.Restrictions __this__orBessData_copy_key = other_element_key;

        String __this__orBessData_copy_value = other_element_value;

        __this__orBessData.put(__this__orBessData_copy_key, __this__orBessData_copy_value);
      }
      this.orBessData = __this__orBessData;
    }
    if (other.isSetProcessType()) {
      this.processType = other.processType;
    }
    if (other.isSetProcessTypeDetail()) {
      this.processTypeDetail = other.processTypeDetail;
    }
  }

  public GetPendAuitCountReqVo deepCopy() {
    return new GetPendAuitCountReqVo(this);
  }

  @Override
  public void clear() {
    this.origin = null;
    setStarTimeIsSet(false);
    this.starTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    this.andBessData = null;
    this.orBessData = null;
    this.processType = null;
    this.processTypeDetail = null;
  }

  /**
   * 源信息
   */
  public com.froad.thrift.vo.OriginVo getOrigin() {
    return this.origin;
  }

  /**
   * 源信息
   */
  public GetPendAuitCountReqVo setOrigin(com.froad.thrift.vo.OriginVo origin) {
    this.origin = origin;
    return this;
  }

  public void unsetOrigin() {
    this.origin = null;
  }

  /** Returns true if field origin is set (has been assigned a value) and false otherwise */
  public boolean isSetOrigin() {
    return this.origin != null;
  }

  public void setOriginIsSet(boolean value) {
    if (!value) {
      this.origin = null;
    }
  }

  /**
   * 开始时间
   */
  public long getStarTime() {
    return this.starTime;
  }

  /**
   * 开始时间
   */
  public GetPendAuitCountReqVo setStarTime(long starTime) {
    this.starTime = starTime;
    setStarTimeIsSet(true);
    return this;
  }

  public void unsetStarTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTIME_ISSET_ID);
  }

  /** Returns true if field starTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStarTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTIME_ISSET_ID);
  }

  public void setStarTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTIME_ISSET_ID, value);
  }

  /**
   * 结束时间
   */
  public long getEndTime() {
    return this.endTime;
  }

  /**
   * 结束时间
   */
  public GetPendAuitCountReqVo setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  public int getAndBessDataSize() {
    return (this.andBessData == null) ? 0 : this.andBessData.size();
  }

  public void putToAndBessData(com.froad.thrift.vo.Restrictions key, String val) {
    if (this.andBessData == null) {
      this.andBessData = new HashMap<com.froad.thrift.vo.Restrictions,String>();
    }
    this.andBessData.put(key, val);
  }

  /**
   * 并且关系:key为限制条件 value为业务json对象
   */
  public Map<com.froad.thrift.vo.Restrictions,String> getAndBessData() {
    return this.andBessData;
  }

  /**
   * 并且关系:key为限制条件 value为业务json对象
   */
  public GetPendAuitCountReqVo setAndBessData(Map<com.froad.thrift.vo.Restrictions,String> andBessData) {
    this.andBessData = andBessData;
    return this;
  }

  public void unsetAndBessData() {
    this.andBessData = null;
  }

  /** Returns true if field andBessData is set (has been assigned a value) and false otherwise */
  public boolean isSetAndBessData() {
    return this.andBessData != null;
  }

  public void setAndBessDataIsSet(boolean value) {
    if (!value) {
      this.andBessData = null;
    }
  }

  public int getOrBessDataSize() {
    return (this.orBessData == null) ? 0 : this.orBessData.size();
  }

  public void putToOrBessData(com.froad.thrift.vo.Restrictions key, String val) {
    if (this.orBessData == null) {
      this.orBessData = new HashMap<com.froad.thrift.vo.Restrictions,String>();
    }
    this.orBessData.put(key, val);
  }

  /**
   * 或者关系:key为限制条件 value为业务json对象
   */
  public Map<com.froad.thrift.vo.Restrictions,String> getOrBessData() {
    return this.orBessData;
  }

  /**
   * 或者关系:key为限制条件 value为业务json对象
   */
  public GetPendAuitCountReqVo setOrBessData(Map<com.froad.thrift.vo.Restrictions,String> orBessData) {
    this.orBessData = orBessData;
    return this;
  }

  public void unsetOrBessData() {
    this.orBessData = null;
  }

  /** Returns true if field orBessData is set (has been assigned a value) and false otherwise */
  public boolean isSetOrBessData() {
    return this.orBessData != null;
  }

  public void setOrBessDataIsSet(boolean value) {
    if (!value) {
      this.orBessData = null;
    }
  }

  /**
   * 流程类型:1-商户,2-门店,3-团购商品,4-预售商品
   */
  public String getProcessType() {
    return this.processType;
  }

  /**
   * 流程类型:1-商户,2-门店,3-团购商品,4-预售商品
   */
  public GetPendAuitCountReqVo setProcessType(String processType) {
    this.processType = processType;
    return this;
  }

  public void unsetProcessType() {
    this.processType = null;
  }

  /** Returns true if field processType is set (has been assigned a value) and false otherwise */
  public boolean isSetProcessType() {
    return this.processType != null;
  }

  public void setProcessTypeIsSet(boolean value) {
    if (!value) {
      this.processType = null;
    }
  }

  /**
   * 类型详情:0-新增审核,1-更新审核
   */
  public String getProcessTypeDetail() {
    return this.processTypeDetail;
  }

  /**
   * 类型详情:0-新增审核,1-更新审核
   */
  public GetPendAuitCountReqVo setProcessTypeDetail(String processTypeDetail) {
    this.processTypeDetail = processTypeDetail;
    return this;
  }

  public void unsetProcessTypeDetail() {
    this.processTypeDetail = null;
  }

  /** Returns true if field processTypeDetail is set (has been assigned a value) and false otherwise */
  public boolean isSetProcessTypeDetail() {
    return this.processTypeDetail != null;
  }

  public void setProcessTypeDetailIsSet(boolean value) {
    if (!value) {
      this.processTypeDetail = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORIGIN:
      if (value == null) {
        unsetOrigin();
      } else {
        setOrigin((com.froad.thrift.vo.OriginVo)value);
      }
      break;

    case STAR_TIME:
      if (value == null) {
        unsetStarTime();
      } else {
        setStarTime((Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((Long)value);
      }
      break;

    case AND_BESS_DATA:
      if (value == null) {
        unsetAndBessData();
      } else {
        setAndBessData((Map<com.froad.thrift.vo.Restrictions,String>)value);
      }
      break;

    case OR_BESS_DATA:
      if (value == null) {
        unsetOrBessData();
      } else {
        setOrBessData((Map<com.froad.thrift.vo.Restrictions,String>)value);
      }
      break;

    case PROCESS_TYPE:
      if (value == null) {
        unsetProcessType();
      } else {
        setProcessType((String)value);
      }
      break;

    case PROCESS_TYPE_DETAIL:
      if (value == null) {
        unsetProcessTypeDetail();
      } else {
        setProcessTypeDetail((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORIGIN:
      return getOrigin();

    case STAR_TIME:
      return Long.valueOf(getStarTime());

    case END_TIME:
      return Long.valueOf(getEndTime());

    case AND_BESS_DATA:
      return getAndBessData();

    case OR_BESS_DATA:
      return getOrBessData();

    case PROCESS_TYPE:
      return getProcessType();

    case PROCESS_TYPE_DETAIL:
      return getProcessTypeDetail();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORIGIN:
      return isSetOrigin();
    case STAR_TIME:
      return isSetStarTime();
    case END_TIME:
      return isSetEndTime();
    case AND_BESS_DATA:
      return isSetAndBessData();
    case OR_BESS_DATA:
      return isSetOrBessData();
    case PROCESS_TYPE:
      return isSetProcessType();
    case PROCESS_TYPE_DETAIL:
      return isSetProcessTypeDetail();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof GetPendAuitCountReqVo)
      return this.equals((GetPendAuitCountReqVo)that);
    return false;
  }

  public boolean equals(GetPendAuitCountReqVo that) {
    if (that == null)
      return false;

    boolean this_present_origin = true && this.isSetOrigin();
    boolean that_present_origin = true && that.isSetOrigin();
    if (this_present_origin || that_present_origin) {
      if (!(this_present_origin && that_present_origin))
        return false;
      if (!this.origin.equals(that.origin))
        return false;
    }

    boolean this_present_starTime = true && this.isSetStarTime();
    boolean that_present_starTime = true && that.isSetStarTime();
    if (this_present_starTime || that_present_starTime) {
      if (!(this_present_starTime && that_present_starTime))
        return false;
      if (this.starTime != that.starTime)
        return false;
    }

    boolean this_present_endTime = true && this.isSetEndTime();
    boolean that_present_endTime = true && that.isSetEndTime();
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_andBessData = true && this.isSetAndBessData();
    boolean that_present_andBessData = true && that.isSetAndBessData();
    if (this_present_andBessData || that_present_andBessData) {
      if (!(this_present_andBessData && that_present_andBessData))
        return false;
      if (!this.andBessData.equals(that.andBessData))
        return false;
    }

    boolean this_present_orBessData = true && this.isSetOrBessData();
    boolean that_present_orBessData = true && that.isSetOrBessData();
    if (this_present_orBessData || that_present_orBessData) {
      if (!(this_present_orBessData && that_present_orBessData))
        return false;
      if (!this.orBessData.equals(that.orBessData))
        return false;
    }

    boolean this_present_processType = true && this.isSetProcessType();
    boolean that_present_processType = true && that.isSetProcessType();
    if (this_present_processType || that_present_processType) {
      if (!(this_present_processType && that_present_processType))
        return false;
      if (!this.processType.equals(that.processType))
        return false;
    }

    boolean this_present_processTypeDetail = true && this.isSetProcessTypeDetail();
    boolean that_present_processTypeDetail = true && that.isSetProcessTypeDetail();
    if (this_present_processTypeDetail || that_present_processTypeDetail) {
      if (!(this_present_processTypeDetail && that_present_processTypeDetail))
        return false;
      if (!this.processTypeDetail.equals(that.processTypeDetail))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_origin = true && (isSetOrigin());
    list.add(present_origin);
    if (present_origin)
      list.add(origin);

    boolean present_starTime = true && (isSetStarTime());
    list.add(present_starTime);
    if (present_starTime)
      list.add(starTime);

    boolean present_endTime = true && (isSetEndTime());
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    boolean present_andBessData = true && (isSetAndBessData());
    list.add(present_andBessData);
    if (present_andBessData)
      list.add(andBessData);

    boolean present_orBessData = true && (isSetOrBessData());
    list.add(present_orBessData);
    if (present_orBessData)
      list.add(orBessData);

    boolean present_processType = true && (isSetProcessType());
    list.add(present_processType);
    if (present_processType)
      list.add(processType);

    boolean present_processTypeDetail = true && (isSetProcessTypeDetail());
    list.add(present_processTypeDetail);
    if (present_processTypeDetail)
      list.add(processTypeDetail);

    return list.hashCode();
  }

  @Override
  public int compareTo(GetPendAuitCountReqVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrigin()).compareTo(other.isSetOrigin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrigin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.origin, other.origin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarTime()).compareTo(other.isSetStarTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starTime, other.starTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAndBessData()).compareTo(other.isSetAndBessData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAndBessData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.andBessData, other.andBessData);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrBessData()).compareTo(other.isSetOrBessData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrBessData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orBessData, other.orBessData);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProcessType()).compareTo(other.isSetProcessType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProcessType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.processType, other.processType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProcessTypeDetail()).compareTo(other.isSetProcessTypeDetail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProcessTypeDetail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.processTypeDetail, other.processTypeDetail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("GetPendAuitCountReqVo(");
    boolean first = true;

    sb.append("origin:");
    if (this.origin == null) {
      sb.append("null");
    } else {
      sb.append(this.origin);
    }
    first = false;
    if (isSetStarTime()) {
      if (!first) sb.append(", ");
      sb.append("starTime:");
      sb.append(this.starTime);
      first = false;
    }
    if (isSetEndTime()) {
      if (!first) sb.append(", ");
      sb.append("endTime:");
      sb.append(this.endTime);
      first = false;
    }
    if (isSetAndBessData()) {
      if (!first) sb.append(", ");
      sb.append("andBessData:");
      if (this.andBessData == null) {
        sb.append("null");
      } else {
        sb.append(this.andBessData);
      }
      first = false;
    }
    if (isSetOrBessData()) {
      if (!first) sb.append(", ");
      sb.append("orBessData:");
      if (this.orBessData == null) {
        sb.append("null");
      } else {
        sb.append(this.orBessData);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("processType:");
    if (this.processType == null) {
      sb.append("null");
    } else {
      sb.append(this.processType);
    }
    first = false;
    if (isSetProcessTypeDetail()) {
      if (!first) sb.append(", ");
      sb.append("processTypeDetail:");
      if (this.processTypeDetail == null) {
        sb.append("null");
      } else {
        sb.append(this.processTypeDetail);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (origin != null) {
      origin.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GetPendAuitCountReqVoStandardSchemeFactory implements SchemeFactory {
    public GetPendAuitCountReqVoStandardScheme getScheme() {
      return new GetPendAuitCountReqVoStandardScheme();
    }
  }

  private static class GetPendAuitCountReqVoStandardScheme extends StandardScheme<GetPendAuitCountReqVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GetPendAuitCountReqVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORIGIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.origin = new com.froad.thrift.vo.OriginVo();
              struct.origin.read(iprot);
              struct.setOriginIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STAR_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.starTime = iprot.readI64();
              struct.setStarTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AND_BESS_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map36 = iprot.readMapBegin();
                struct.andBessData = new HashMap<com.froad.thrift.vo.Restrictions,String>(2*_map36.size);
                com.froad.thrift.vo.Restrictions _key37;
                String _val38;
                for (int _i39 = 0; _i39 < _map36.size; ++_i39)
                {
                  _key37 = com.froad.thrift.vo.Restrictions.findByValue(iprot.readI32());
                  _val38 = iprot.readString();
                  struct.andBessData.put(_key37, _val38);
                }
                iprot.readMapEnd();
              }
              struct.setAndBessDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OR_BESS_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map40 = iprot.readMapBegin();
                struct.orBessData = new HashMap<com.froad.thrift.vo.Restrictions,String>(2*_map40.size);
                com.froad.thrift.vo.Restrictions _key41;
                String _val42;
                for (int _i43 = 0; _i43 < _map40.size; ++_i43)
                {
                  _key41 = com.froad.thrift.vo.Restrictions.findByValue(iprot.readI32());
                  _val42 = iprot.readString();
                  struct.orBessData.put(_key41, _val42);
                }
                iprot.readMapEnd();
              }
              struct.setOrBessDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROCESS_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.processType = iprot.readString();
              struct.setProcessTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PROCESS_TYPE_DETAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.processTypeDetail = iprot.readString();
              struct.setProcessTypeDetailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GetPendAuitCountReqVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.origin != null) {
        oprot.writeFieldBegin(ORIGIN_FIELD_DESC);
        struct.origin.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStarTime()) {
        oprot.writeFieldBegin(STAR_TIME_FIELD_DESC);
        oprot.writeI64(struct.starTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndTime()) {
        oprot.writeFieldBegin(END_TIME_FIELD_DESC);
        oprot.writeI64(struct.endTime);
        oprot.writeFieldEnd();
      }
      if (struct.andBessData != null) {
        if (struct.isSetAndBessData()) {
          oprot.writeFieldBegin(AND_BESS_DATA_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, struct.andBessData.size()));
            for (Map.Entry<com.froad.thrift.vo.Restrictions, String> _iter44 : struct.andBessData.entrySet())
            {
              oprot.writeI32(_iter44.getKey().getValue());
              oprot.writeString(_iter44.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.orBessData != null) {
        if (struct.isSetOrBessData()) {
          oprot.writeFieldBegin(OR_BESS_DATA_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, struct.orBessData.size()));
            for (Map.Entry<com.froad.thrift.vo.Restrictions, String> _iter45 : struct.orBessData.entrySet())
            {
              oprot.writeI32(_iter45.getKey().getValue());
              oprot.writeString(_iter45.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.processType != null) {
        oprot.writeFieldBegin(PROCESS_TYPE_FIELD_DESC);
        oprot.writeString(struct.processType);
        oprot.writeFieldEnd();
      }
      if (struct.processTypeDetail != null) {
        if (struct.isSetProcessTypeDetail()) {
          oprot.writeFieldBegin(PROCESS_TYPE_DETAIL_FIELD_DESC);
          oprot.writeString(struct.processTypeDetail);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GetPendAuitCountReqVoTupleSchemeFactory implements SchemeFactory {
    public GetPendAuitCountReqVoTupleScheme getScheme() {
      return new GetPendAuitCountReqVoTupleScheme();
    }
  }

  private static class GetPendAuitCountReqVoTupleScheme extends TupleScheme<GetPendAuitCountReqVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GetPendAuitCountReqVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrigin()) {
        optionals.set(0);
      }
      if (struct.isSetStarTime()) {
        optionals.set(1);
      }
      if (struct.isSetEndTime()) {
        optionals.set(2);
      }
      if (struct.isSetAndBessData()) {
        optionals.set(3);
      }
      if (struct.isSetOrBessData()) {
        optionals.set(4);
      }
      if (struct.isSetProcessType()) {
        optionals.set(5);
      }
      if (struct.isSetProcessTypeDetail()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetOrigin()) {
        struct.origin.write(oprot);
      }
      if (struct.isSetStarTime()) {
        oprot.writeI64(struct.starTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetAndBessData()) {
        {
          oprot.writeI32(struct.andBessData.size());
          for (Map.Entry<com.froad.thrift.vo.Restrictions, String> _iter46 : struct.andBessData.entrySet())
          {
            oprot.writeI32(_iter46.getKey().getValue());
            oprot.writeString(_iter46.getValue());
          }
        }
      }
      if (struct.isSetOrBessData()) {
        {
          oprot.writeI32(struct.orBessData.size());
          for (Map.Entry<com.froad.thrift.vo.Restrictions, String> _iter47 : struct.orBessData.entrySet())
          {
            oprot.writeI32(_iter47.getKey().getValue());
            oprot.writeString(_iter47.getValue());
          }
        }
      }
      if (struct.isSetProcessType()) {
        oprot.writeString(struct.processType);
      }
      if (struct.isSetProcessTypeDetail()) {
        oprot.writeString(struct.processTypeDetail);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GetPendAuitCountReqVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.origin = new com.froad.thrift.vo.OriginVo();
        struct.origin.read(iprot);
        struct.setOriginIsSet(true);
      }
      if (incoming.get(1)) {
        struct.starTime = iprot.readI64();
        struct.setStarTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TMap _map48 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.andBessData = new HashMap<com.froad.thrift.vo.Restrictions,String>(2*_map48.size);
          com.froad.thrift.vo.Restrictions _key49;
          String _val50;
          for (int _i51 = 0; _i51 < _map48.size; ++_i51)
          {
            _key49 = com.froad.thrift.vo.Restrictions.findByValue(iprot.readI32());
            _val50 = iprot.readString();
            struct.andBessData.put(_key49, _val50);
          }
        }
        struct.setAndBessDataIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TMap _map52 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.orBessData = new HashMap<com.froad.thrift.vo.Restrictions,String>(2*_map52.size);
          com.froad.thrift.vo.Restrictions _key53;
          String _val54;
          for (int _i55 = 0; _i55 < _map52.size; ++_i55)
          {
            _key53 = com.froad.thrift.vo.Restrictions.findByValue(iprot.readI32());
            _val54 = iprot.readString();
            struct.orBessData.put(_key53, _val54);
          }
        }
        struct.setOrBessDataIsSet(true);
      }
      if (incoming.get(5)) {
        struct.processType = iprot.readString();
        struct.setProcessTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.processTypeDetail = iprot.readString();
        struct.setProcessTypeDetailIsSet(true);
      }
    }
  }

}

