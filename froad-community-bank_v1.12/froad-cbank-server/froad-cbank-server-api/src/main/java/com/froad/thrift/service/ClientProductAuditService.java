/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ClientProductAuditService {

  /**
   * 商品审核配置服务
   * ClientProductAuditService
   */
  public interface Iface extends com.froad.thrift.monitor.service.BizMonitorService.Iface {

    /**
     * 增加 ClientProductAudit
     * @param clientProductAudit
     * @return long    主键ID
     * 
     * @param originVo
     * @param clientProductAuditVo
     */
    public com.froad.thrift.vo.CommonAddVoRes addClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException;

    /**
     * 删除 ClientProductAudit
     * @param clientProductAudit
     * @return boolean
     * 
     * @param originVo
     * @param clientProductAuditVo
     */
    public com.froad.thrift.vo.ResultVo deleteClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException;

    /**
     * 修改 ClientProductAudit
     * @param clientProductAudit
     * @return boolean
     * 
     * @param originVo
     * @param clientProductAuditVo
     */
    public com.froad.thrift.vo.ResultVo updateClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException;

    /**
     * 根据clientId+orgCode查询商户审核配置信息
     * @param clientId
     * @param orgCode
     * @param productType商品类型(1团购，2预售，3名优特惠，4在线积分兑换，5网点礼品)
     * @return ClientProductAuditOrgCodeVo
     * 
     * @param clientId
     * @param orgCode
     * @param productType
     */
    public com.froad.thrift.vo.ClientProductAuditOrgCodeVo getClientProductAuditByOrgCode(String clientId, String orgCode, String productType) throws org.apache.thrift.TException;

    /**
     * 查询 ClientProductAudit
     * @param clientProductAudit
     * @return List<ClientProductAuditVo>
     * 
     * @param clientProductAuditVo
     */
    public List<com.froad.thrift.vo.ClientProductAuditVo> getClientProductAudit(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException;

    /**
     * 分页查询 ClientProductAudit
     * @param clientProductAudit
     * @return ClientProductAuditPageVoRes
     * 
     * @param page
     * @param clientProductAuditVo
     */
    public com.froad.thrift.vo.ClientProductAuditPageVoRes getClientProductAuditByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends com.froad.thrift.monitor.service.BizMonitorService .AsyncIface {

    public void addClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void deleteClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void updateClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getClientProductAuditByOrgCode(String clientId, String orgCode, String productType, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getClientProductAudit(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getClientProductAuditByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends com.froad.thrift.monitor.service.BizMonitorService.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.froad.thrift.vo.CommonAddVoRes addClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      send_addClientProductAudit(originVo, clientProductAuditVo);
      return recv_addClientProductAudit();
    }

    public void send_addClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      addClientProductAudit_args args = new addClientProductAudit_args();
      args.setOriginVo(originVo);
      args.setClientProductAuditVo(clientProductAuditVo);
      sendBase("addClientProductAudit", args);
    }

    public com.froad.thrift.vo.CommonAddVoRes recv_addClientProductAudit() throws org.apache.thrift.TException
    {
      addClientProductAudit_result result = new addClientProductAudit_result();
      receiveBase(result, "addClientProductAudit");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addClientProductAudit failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo deleteClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      send_deleteClientProductAudit(originVo, clientProductAuditVo);
      return recv_deleteClientProductAudit();
    }

    public void send_deleteClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      deleteClientProductAudit_args args = new deleteClientProductAudit_args();
      args.setOriginVo(originVo);
      args.setClientProductAuditVo(clientProductAuditVo);
      sendBase("deleteClientProductAudit", args);
    }

    public com.froad.thrift.vo.ResultVo recv_deleteClientProductAudit() throws org.apache.thrift.TException
    {
      deleteClientProductAudit_result result = new deleteClientProductAudit_result();
      receiveBase(result, "deleteClientProductAudit");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteClientProductAudit failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo updateClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      send_updateClientProductAudit(originVo, clientProductAuditVo);
      return recv_updateClientProductAudit();
    }

    public void send_updateClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      updateClientProductAudit_args args = new updateClientProductAudit_args();
      args.setOriginVo(originVo);
      args.setClientProductAuditVo(clientProductAuditVo);
      sendBase("updateClientProductAudit", args);
    }

    public com.froad.thrift.vo.ResultVo recv_updateClientProductAudit() throws org.apache.thrift.TException
    {
      updateClientProductAudit_result result = new updateClientProductAudit_result();
      receiveBase(result, "updateClientProductAudit");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateClientProductAudit failed: unknown result");
    }

    public com.froad.thrift.vo.ClientProductAuditOrgCodeVo getClientProductAuditByOrgCode(String clientId, String orgCode, String productType) throws org.apache.thrift.TException
    {
      send_getClientProductAuditByOrgCode(clientId, orgCode, productType);
      return recv_getClientProductAuditByOrgCode();
    }

    public void send_getClientProductAuditByOrgCode(String clientId, String orgCode, String productType) throws org.apache.thrift.TException
    {
      getClientProductAuditByOrgCode_args args = new getClientProductAuditByOrgCode_args();
      args.setClientId(clientId);
      args.setOrgCode(orgCode);
      args.setProductType(productType);
      sendBase("getClientProductAuditByOrgCode", args);
    }

    public com.froad.thrift.vo.ClientProductAuditOrgCodeVo recv_getClientProductAuditByOrgCode() throws org.apache.thrift.TException
    {
      getClientProductAuditByOrgCode_result result = new getClientProductAuditByOrgCode_result();
      receiveBase(result, "getClientProductAuditByOrgCode");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getClientProductAuditByOrgCode failed: unknown result");
    }

    public List<com.froad.thrift.vo.ClientProductAuditVo> getClientProductAudit(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      send_getClientProductAudit(clientProductAuditVo);
      return recv_getClientProductAudit();
    }

    public void send_getClientProductAudit(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      getClientProductAudit_args args = new getClientProductAudit_args();
      args.setClientProductAuditVo(clientProductAuditVo);
      sendBase("getClientProductAudit", args);
    }

    public List<com.froad.thrift.vo.ClientProductAuditVo> recv_getClientProductAudit() throws org.apache.thrift.TException
    {
      getClientProductAudit_result result = new getClientProductAudit_result();
      receiveBase(result, "getClientProductAudit");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getClientProductAudit failed: unknown result");
    }

    public com.froad.thrift.vo.ClientProductAuditPageVoRes getClientProductAuditByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      send_getClientProductAuditByPage(page, clientProductAuditVo);
      return recv_getClientProductAuditByPage();
    }

    public void send_getClientProductAuditByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) throws org.apache.thrift.TException
    {
      getClientProductAuditByPage_args args = new getClientProductAuditByPage_args();
      args.setPage(page);
      args.setClientProductAuditVo(clientProductAuditVo);
      sendBase("getClientProductAuditByPage", args);
    }

    public com.froad.thrift.vo.ClientProductAuditPageVoRes recv_getClientProductAuditByPage() throws org.apache.thrift.TException
    {
      getClientProductAuditByPage_result result = new getClientProductAuditByPage_result();
      receiveBase(result, "getClientProductAuditByPage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getClientProductAuditByPage failed: unknown result");
    }

  }
  public static class AsyncClient extends com.froad.thrift.monitor.service.BizMonitorService.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void addClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addClientProductAudit_call method_call = new addClientProductAudit_call(originVo, clientProductAuditVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addClientProductAudit_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo;
      public addClientProductAudit_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.clientProductAuditVo = clientProductAuditVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addClientProductAudit", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addClientProductAudit_args args = new addClientProductAudit_args();
        args.setOriginVo(originVo);
        args.setClientProductAuditVo(clientProductAuditVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.CommonAddVoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addClientProductAudit();
      }
    }

    public void deleteClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteClientProductAudit_call method_call = new deleteClientProductAudit_call(originVo, clientProductAuditVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteClientProductAudit_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo;
      public deleteClientProductAudit_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.clientProductAuditVo = clientProductAuditVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteClientProductAudit", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteClientProductAudit_args args = new deleteClientProductAudit_args();
        args.setOriginVo(originVo);
        args.setClientProductAuditVo(clientProductAuditVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deleteClientProductAudit();
      }
    }

    public void updateClientProductAudit(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateClientProductAudit_call method_call = new updateClientProductAudit_call(originVo, clientProductAuditVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateClientProductAudit_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo;
      public updateClientProductAudit_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.clientProductAuditVo = clientProductAuditVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateClientProductAudit", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateClientProductAudit_args args = new updateClientProductAudit_args();
        args.setOriginVo(originVo);
        args.setClientProductAuditVo(clientProductAuditVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateClientProductAudit();
      }
    }

    public void getClientProductAuditByOrgCode(String clientId, String orgCode, String productType, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getClientProductAuditByOrgCode_call method_call = new getClientProductAuditByOrgCode_call(clientId, orgCode, productType, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getClientProductAuditByOrgCode_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String clientId;
      private String orgCode;
      private String productType;
      public getClientProductAuditByOrgCode_call(String clientId, String orgCode, String productType, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.clientId = clientId;
        this.orgCode = orgCode;
        this.productType = productType;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getClientProductAuditByOrgCode", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getClientProductAuditByOrgCode_args args = new getClientProductAuditByOrgCode_args();
        args.setClientId(clientId);
        args.setOrgCode(orgCode);
        args.setProductType(productType);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ClientProductAuditOrgCodeVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getClientProductAuditByOrgCode();
      }
    }

    public void getClientProductAudit(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getClientProductAudit_call method_call = new getClientProductAudit_call(clientProductAuditVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getClientProductAudit_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo;
      public getClientProductAudit_call(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.clientProductAuditVo = clientProductAuditVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getClientProductAudit", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getClientProductAudit_args args = new getClientProductAudit_args();
        args.setClientProductAuditVo(clientProductAuditVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<com.froad.thrift.vo.ClientProductAuditVo> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getClientProductAudit();
      }
    }

    public void getClientProductAuditByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getClientProductAuditByPage_call method_call = new getClientProductAuditByPage_call(page, clientProductAuditVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getClientProductAuditByPage_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.PageVo page;
      private com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo;
      public getClientProductAuditByPage_call(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.page = page;
        this.clientProductAuditVo = clientProductAuditVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getClientProductAuditByPage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getClientProductAuditByPage_args args = new getClientProductAuditByPage_args();
        args.setPage(page);
        args.setClientProductAuditVo(clientProductAuditVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ClientProductAuditPageVoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getClientProductAuditByPage();
      }
    }

  }

  public static class Processor<I extends Iface> extends com.froad.thrift.monitor.service.BizMonitorService.Processor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("addClientProductAudit", new addClientProductAudit());
      processMap.put("deleteClientProductAudit", new deleteClientProductAudit());
      processMap.put("updateClientProductAudit", new updateClientProductAudit());
      processMap.put("getClientProductAuditByOrgCode", new getClientProductAuditByOrgCode());
      processMap.put("getClientProductAudit", new getClientProductAudit());
      processMap.put("getClientProductAuditByPage", new getClientProductAuditByPage());
      return processMap;
    }

    public static class addClientProductAudit<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addClientProductAudit_args> {
      public addClientProductAudit() {
        super("addClientProductAudit");
      }

      public addClientProductAudit_args getEmptyArgsInstance() {
        return new addClientProductAudit_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addClientProductAudit_result getResult(I iface, addClientProductAudit_args args) throws org.apache.thrift.TException {
        addClientProductAudit_result result = new addClientProductAudit_result();
        result.success = iface.addClientProductAudit(args.originVo, args.clientProductAuditVo);
        return result;
      }
    }

    public static class deleteClientProductAudit<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteClientProductAudit_args> {
      public deleteClientProductAudit() {
        super("deleteClientProductAudit");
      }

      public deleteClientProductAudit_args getEmptyArgsInstance() {
        return new deleteClientProductAudit_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteClientProductAudit_result getResult(I iface, deleteClientProductAudit_args args) throws org.apache.thrift.TException {
        deleteClientProductAudit_result result = new deleteClientProductAudit_result();
        result.success = iface.deleteClientProductAudit(args.originVo, args.clientProductAuditVo);
        return result;
      }
    }

    public static class updateClientProductAudit<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateClientProductAudit_args> {
      public updateClientProductAudit() {
        super("updateClientProductAudit");
      }

      public updateClientProductAudit_args getEmptyArgsInstance() {
        return new updateClientProductAudit_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateClientProductAudit_result getResult(I iface, updateClientProductAudit_args args) throws org.apache.thrift.TException {
        updateClientProductAudit_result result = new updateClientProductAudit_result();
        result.success = iface.updateClientProductAudit(args.originVo, args.clientProductAuditVo);
        return result;
      }
    }

    public static class getClientProductAuditByOrgCode<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getClientProductAuditByOrgCode_args> {
      public getClientProductAuditByOrgCode() {
        super("getClientProductAuditByOrgCode");
      }

      public getClientProductAuditByOrgCode_args getEmptyArgsInstance() {
        return new getClientProductAuditByOrgCode_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getClientProductAuditByOrgCode_result getResult(I iface, getClientProductAuditByOrgCode_args args) throws org.apache.thrift.TException {
        getClientProductAuditByOrgCode_result result = new getClientProductAuditByOrgCode_result();
        result.success = iface.getClientProductAuditByOrgCode(args.clientId, args.orgCode, args.productType);
        return result;
      }
    }

    public static class getClientProductAudit<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getClientProductAudit_args> {
      public getClientProductAudit() {
        super("getClientProductAudit");
      }

      public getClientProductAudit_args getEmptyArgsInstance() {
        return new getClientProductAudit_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getClientProductAudit_result getResult(I iface, getClientProductAudit_args args) throws org.apache.thrift.TException {
        getClientProductAudit_result result = new getClientProductAudit_result();
        result.success = iface.getClientProductAudit(args.clientProductAuditVo);
        return result;
      }
    }

    public static class getClientProductAuditByPage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getClientProductAuditByPage_args> {
      public getClientProductAuditByPage() {
        super("getClientProductAuditByPage");
      }

      public getClientProductAuditByPage_args getEmptyArgsInstance() {
        return new getClientProductAuditByPage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getClientProductAuditByPage_result getResult(I iface, getClientProductAuditByPage_args args) throws org.apache.thrift.TException {
        getClientProductAuditByPage_result result = new getClientProductAuditByPage_result();
        result.success = iface.getClientProductAuditByPage(args.page, args.clientProductAuditVo);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends com.froad.thrift.monitor.service.BizMonitorService.AsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("addClientProductAudit", new addClientProductAudit());
      processMap.put("deleteClientProductAudit", new deleteClientProductAudit());
      processMap.put("updateClientProductAudit", new updateClientProductAudit());
      processMap.put("getClientProductAuditByOrgCode", new getClientProductAuditByOrgCode());
      processMap.put("getClientProductAudit", new getClientProductAudit());
      processMap.put("getClientProductAuditByPage", new getClientProductAuditByPage());
      return processMap;
    }

    public static class addClientProductAudit<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addClientProductAudit_args, com.froad.thrift.vo.CommonAddVoRes> {
      public addClientProductAudit() {
        super("addClientProductAudit");
      }

      public addClientProductAudit_args getEmptyArgsInstance() {
        return new addClientProductAudit_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.CommonAddVoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.CommonAddVoRes>() { 
          public void onComplete(com.froad.thrift.vo.CommonAddVoRes o) {
            addClientProductAudit_result result = new addClientProductAudit_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addClientProductAudit_result result = new addClientProductAudit_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addClientProductAudit_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.CommonAddVoRes> resultHandler) throws TException {
        iface.addClientProductAudit(args.originVo, args.clientProductAuditVo,resultHandler);
      }
    }

    public static class deleteClientProductAudit<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteClientProductAudit_args, com.froad.thrift.vo.ResultVo> {
      public deleteClientProductAudit() {
        super("deleteClientProductAudit");
      }

      public deleteClientProductAudit_args getEmptyArgsInstance() {
        return new deleteClientProductAudit_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            deleteClientProductAudit_result result = new deleteClientProductAudit_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            deleteClientProductAudit_result result = new deleteClientProductAudit_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteClientProductAudit_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.deleteClientProductAudit(args.originVo, args.clientProductAuditVo,resultHandler);
      }
    }

    public static class updateClientProductAudit<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateClientProductAudit_args, com.froad.thrift.vo.ResultVo> {
      public updateClientProductAudit() {
        super("updateClientProductAudit");
      }

      public updateClientProductAudit_args getEmptyArgsInstance() {
        return new updateClientProductAudit_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            updateClientProductAudit_result result = new updateClientProductAudit_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            updateClientProductAudit_result result = new updateClientProductAudit_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateClientProductAudit_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.updateClientProductAudit(args.originVo, args.clientProductAuditVo,resultHandler);
      }
    }

    public static class getClientProductAuditByOrgCode<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getClientProductAuditByOrgCode_args, com.froad.thrift.vo.ClientProductAuditOrgCodeVo> {
      public getClientProductAuditByOrgCode() {
        super("getClientProductAuditByOrgCode");
      }

      public getClientProductAuditByOrgCode_args getEmptyArgsInstance() {
        return new getClientProductAuditByOrgCode_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ClientProductAuditOrgCodeVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ClientProductAuditOrgCodeVo>() { 
          public void onComplete(com.froad.thrift.vo.ClientProductAuditOrgCodeVo o) {
            getClientProductAuditByOrgCode_result result = new getClientProductAuditByOrgCode_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getClientProductAuditByOrgCode_result result = new getClientProductAuditByOrgCode_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getClientProductAuditByOrgCode_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ClientProductAuditOrgCodeVo> resultHandler) throws TException {
        iface.getClientProductAuditByOrgCode(args.clientId, args.orgCode, args.productType,resultHandler);
      }
    }

    public static class getClientProductAudit<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getClientProductAudit_args, List<com.froad.thrift.vo.ClientProductAuditVo>> {
      public getClientProductAudit() {
        super("getClientProductAudit");
      }

      public getClientProductAudit_args getEmptyArgsInstance() {
        return new getClientProductAudit_args();
      }

      public AsyncMethodCallback<List<com.froad.thrift.vo.ClientProductAuditVo>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<com.froad.thrift.vo.ClientProductAuditVo>>() { 
          public void onComplete(List<com.froad.thrift.vo.ClientProductAuditVo> o) {
            getClientProductAudit_result result = new getClientProductAudit_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getClientProductAudit_result result = new getClientProductAudit_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getClientProductAudit_args args, org.apache.thrift.async.AsyncMethodCallback<List<com.froad.thrift.vo.ClientProductAuditVo>> resultHandler) throws TException {
        iface.getClientProductAudit(args.clientProductAuditVo,resultHandler);
      }
    }

    public static class getClientProductAuditByPage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getClientProductAuditByPage_args, com.froad.thrift.vo.ClientProductAuditPageVoRes> {
      public getClientProductAuditByPage() {
        super("getClientProductAuditByPage");
      }

      public getClientProductAuditByPage_args getEmptyArgsInstance() {
        return new getClientProductAuditByPage_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ClientProductAuditPageVoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ClientProductAuditPageVoRes>() { 
          public void onComplete(com.froad.thrift.vo.ClientProductAuditPageVoRes o) {
            getClientProductAuditByPage_result result = new getClientProductAuditByPage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getClientProductAuditByPage_result result = new getClientProductAuditByPage_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getClientProductAuditByPage_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ClientProductAuditPageVoRes> resultHandler) throws TException {
        iface.getClientProductAuditByPage(args.page, args.clientProductAuditVo,resultHandler);
      }
    }

  }

  public static class addClientProductAudit_args implements org.apache.thrift.TBase<addClientProductAudit_args, addClientProductAudit_args._Fields>, java.io.Serializable, Cloneable, Comparable<addClientProductAudit_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addClientProductAudit_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("clientProductAuditVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addClientProductAudit_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addClientProductAudit_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      CLIENT_PRODUCT_AUDIT_VO((short)2, "clientProductAuditVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // CLIENT_PRODUCT_AUDIT_VO
            return CLIENT_PRODUCT_AUDIT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.CLIENT_PRODUCT_AUDIT_VO, new org.apache.thrift.meta_data.FieldMetaData("clientProductAuditVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ClientProductAuditVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addClientProductAudit_args.class, metaDataMap);
    }

    public addClientProductAudit_args() {
    }

    public addClientProductAudit_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo)
    {
      this();
      this.originVo = originVo;
      this.clientProductAuditVo = clientProductAuditVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addClientProductAudit_args(addClientProductAudit_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetClientProductAuditVo()) {
        this.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo(other.clientProductAuditVo);
      }
    }

    public addClientProductAudit_args deepCopy() {
      return new addClientProductAudit_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.clientProductAuditVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public addClientProductAudit_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.ClientProductAuditVo getClientProductAuditVo() {
      return this.clientProductAuditVo;
    }

    public addClientProductAudit_args setClientProductAuditVo(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) {
      this.clientProductAuditVo = clientProductAuditVo;
      return this;
    }

    public void unsetClientProductAuditVo() {
      this.clientProductAuditVo = null;
    }

    /** Returns true if field clientProductAuditVo is set (has been assigned a value) and false otherwise */
    public boolean isSetClientProductAuditVo() {
      return this.clientProductAuditVo != null;
    }

    public void setClientProductAuditVoIsSet(boolean value) {
      if (!value) {
        this.clientProductAuditVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case CLIENT_PRODUCT_AUDIT_VO:
        if (value == null) {
          unsetClientProductAuditVo();
        } else {
          setClientProductAuditVo((com.froad.thrift.vo.ClientProductAuditVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case CLIENT_PRODUCT_AUDIT_VO:
        return getClientProductAuditVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case CLIENT_PRODUCT_AUDIT_VO:
        return isSetClientProductAuditVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addClientProductAudit_args)
        return this.equals((addClientProductAudit_args)that);
      return false;
    }

    public boolean equals(addClientProductAudit_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_clientProductAuditVo = true && this.isSetClientProductAuditVo();
      boolean that_present_clientProductAuditVo = true && that.isSetClientProductAuditVo();
      if (this_present_clientProductAuditVo || that_present_clientProductAuditVo) {
        if (!(this_present_clientProductAuditVo && that_present_clientProductAuditVo))
          return false;
        if (!this.clientProductAuditVo.equals(that.clientProductAuditVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_clientProductAuditVo = true && (isSetClientProductAuditVo());
      list.add(present_clientProductAuditVo);
      if (present_clientProductAuditVo)
        list.add(clientProductAuditVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(addClientProductAudit_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetClientProductAuditVo()).compareTo(other.isSetClientProductAuditVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientProductAuditVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientProductAuditVo, other.clientProductAuditVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addClientProductAudit_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("clientProductAuditVo:");
      if (this.clientProductAuditVo == null) {
        sb.append("null");
      } else {
        sb.append(this.clientProductAuditVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (clientProductAuditVo != null) {
        clientProductAuditVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addClientProductAudit_argsStandardSchemeFactory implements SchemeFactory {
      public addClientProductAudit_argsStandardScheme getScheme() {
        return new addClientProductAudit_argsStandardScheme();
      }
    }

    private static class addClientProductAudit_argsStandardScheme extends StandardScheme<addClientProductAudit_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addClientProductAudit_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CLIENT_PRODUCT_AUDIT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
                struct.clientProductAuditVo.read(iprot);
                struct.setClientProductAuditVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addClientProductAudit_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.clientProductAuditVo != null) {
          oprot.writeFieldBegin(CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC);
          struct.clientProductAuditVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addClientProductAudit_argsTupleSchemeFactory implements SchemeFactory {
      public addClientProductAudit_argsTupleScheme getScheme() {
        return new addClientProductAudit_argsTupleScheme();
      }
    }

    private static class addClientProductAudit_argsTupleScheme extends TupleScheme<addClientProductAudit_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addClientProductAudit_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetClientProductAuditVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetClientProductAuditVo()) {
          struct.clientProductAuditVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addClientProductAudit_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
          struct.clientProductAuditVo.read(iprot);
          struct.setClientProductAuditVoIsSet(true);
        }
      }
    }

  }

  public static class addClientProductAudit_result implements org.apache.thrift.TBase<addClientProductAudit_result, addClientProductAudit_result._Fields>, java.io.Serializable, Cloneable, Comparable<addClientProductAudit_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addClientProductAudit_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addClientProductAudit_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addClientProductAudit_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.CommonAddVoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.CommonAddVoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addClientProductAudit_result.class, metaDataMap);
    }

    public addClientProductAudit_result() {
    }

    public addClientProductAudit_result(
      com.froad.thrift.vo.CommonAddVoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addClientProductAudit_result(addClientProductAudit_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.CommonAddVoRes(other.success);
      }
    }

    public addClientProductAudit_result deepCopy() {
      return new addClientProductAudit_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.CommonAddVoRes getSuccess() {
      return this.success;
    }

    public addClientProductAudit_result setSuccess(com.froad.thrift.vo.CommonAddVoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.CommonAddVoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addClientProductAudit_result)
        return this.equals((addClientProductAudit_result)that);
      return false;
    }

    public boolean equals(addClientProductAudit_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(addClientProductAudit_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addClientProductAudit_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addClientProductAudit_resultStandardSchemeFactory implements SchemeFactory {
      public addClientProductAudit_resultStandardScheme getScheme() {
        return new addClientProductAudit_resultStandardScheme();
      }
    }

    private static class addClientProductAudit_resultStandardScheme extends StandardScheme<addClientProductAudit_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addClientProductAudit_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.CommonAddVoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addClientProductAudit_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addClientProductAudit_resultTupleSchemeFactory implements SchemeFactory {
      public addClientProductAudit_resultTupleScheme getScheme() {
        return new addClientProductAudit_resultTupleScheme();
      }
    }

    private static class addClientProductAudit_resultTupleScheme extends TupleScheme<addClientProductAudit_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addClientProductAudit_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addClientProductAudit_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.CommonAddVoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class deleteClientProductAudit_args implements org.apache.thrift.TBase<deleteClientProductAudit_args, deleteClientProductAudit_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteClientProductAudit_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteClientProductAudit_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("clientProductAuditVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteClientProductAudit_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteClientProductAudit_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      CLIENT_PRODUCT_AUDIT_VO((short)2, "clientProductAuditVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // CLIENT_PRODUCT_AUDIT_VO
            return CLIENT_PRODUCT_AUDIT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.CLIENT_PRODUCT_AUDIT_VO, new org.apache.thrift.meta_data.FieldMetaData("clientProductAuditVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ClientProductAuditVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteClientProductAudit_args.class, metaDataMap);
    }

    public deleteClientProductAudit_args() {
    }

    public deleteClientProductAudit_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo)
    {
      this();
      this.originVo = originVo;
      this.clientProductAuditVo = clientProductAuditVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteClientProductAudit_args(deleteClientProductAudit_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetClientProductAuditVo()) {
        this.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo(other.clientProductAuditVo);
      }
    }

    public deleteClientProductAudit_args deepCopy() {
      return new deleteClientProductAudit_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.clientProductAuditVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public deleteClientProductAudit_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.ClientProductAuditVo getClientProductAuditVo() {
      return this.clientProductAuditVo;
    }

    public deleteClientProductAudit_args setClientProductAuditVo(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) {
      this.clientProductAuditVo = clientProductAuditVo;
      return this;
    }

    public void unsetClientProductAuditVo() {
      this.clientProductAuditVo = null;
    }

    /** Returns true if field clientProductAuditVo is set (has been assigned a value) and false otherwise */
    public boolean isSetClientProductAuditVo() {
      return this.clientProductAuditVo != null;
    }

    public void setClientProductAuditVoIsSet(boolean value) {
      if (!value) {
        this.clientProductAuditVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case CLIENT_PRODUCT_AUDIT_VO:
        if (value == null) {
          unsetClientProductAuditVo();
        } else {
          setClientProductAuditVo((com.froad.thrift.vo.ClientProductAuditVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case CLIENT_PRODUCT_AUDIT_VO:
        return getClientProductAuditVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case CLIENT_PRODUCT_AUDIT_VO:
        return isSetClientProductAuditVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteClientProductAudit_args)
        return this.equals((deleteClientProductAudit_args)that);
      return false;
    }

    public boolean equals(deleteClientProductAudit_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_clientProductAuditVo = true && this.isSetClientProductAuditVo();
      boolean that_present_clientProductAuditVo = true && that.isSetClientProductAuditVo();
      if (this_present_clientProductAuditVo || that_present_clientProductAuditVo) {
        if (!(this_present_clientProductAuditVo && that_present_clientProductAuditVo))
          return false;
        if (!this.clientProductAuditVo.equals(that.clientProductAuditVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_clientProductAuditVo = true && (isSetClientProductAuditVo());
      list.add(present_clientProductAuditVo);
      if (present_clientProductAuditVo)
        list.add(clientProductAuditVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteClientProductAudit_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetClientProductAuditVo()).compareTo(other.isSetClientProductAuditVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientProductAuditVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientProductAuditVo, other.clientProductAuditVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteClientProductAudit_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("clientProductAuditVo:");
      if (this.clientProductAuditVo == null) {
        sb.append("null");
      } else {
        sb.append(this.clientProductAuditVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (clientProductAuditVo != null) {
        clientProductAuditVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteClientProductAudit_argsStandardSchemeFactory implements SchemeFactory {
      public deleteClientProductAudit_argsStandardScheme getScheme() {
        return new deleteClientProductAudit_argsStandardScheme();
      }
    }

    private static class deleteClientProductAudit_argsStandardScheme extends StandardScheme<deleteClientProductAudit_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteClientProductAudit_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CLIENT_PRODUCT_AUDIT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
                struct.clientProductAuditVo.read(iprot);
                struct.setClientProductAuditVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteClientProductAudit_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.clientProductAuditVo != null) {
          oprot.writeFieldBegin(CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC);
          struct.clientProductAuditVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteClientProductAudit_argsTupleSchemeFactory implements SchemeFactory {
      public deleteClientProductAudit_argsTupleScheme getScheme() {
        return new deleteClientProductAudit_argsTupleScheme();
      }
    }

    private static class deleteClientProductAudit_argsTupleScheme extends TupleScheme<deleteClientProductAudit_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteClientProductAudit_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetClientProductAuditVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetClientProductAuditVo()) {
          struct.clientProductAuditVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteClientProductAudit_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
          struct.clientProductAuditVo.read(iprot);
          struct.setClientProductAuditVoIsSet(true);
        }
      }
    }

  }

  public static class deleteClientProductAudit_result implements org.apache.thrift.TBase<deleteClientProductAudit_result, deleteClientProductAudit_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteClientProductAudit_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteClientProductAudit_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteClientProductAudit_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteClientProductAudit_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteClientProductAudit_result.class, metaDataMap);
    }

    public deleteClientProductAudit_result() {
    }

    public deleteClientProductAudit_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteClientProductAudit_result(deleteClientProductAudit_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public deleteClientProductAudit_result deepCopy() {
      return new deleteClientProductAudit_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public deleteClientProductAudit_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteClientProductAudit_result)
        return this.equals((deleteClientProductAudit_result)that);
      return false;
    }

    public boolean equals(deleteClientProductAudit_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteClientProductAudit_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteClientProductAudit_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteClientProductAudit_resultStandardSchemeFactory implements SchemeFactory {
      public deleteClientProductAudit_resultStandardScheme getScheme() {
        return new deleteClientProductAudit_resultStandardScheme();
      }
    }

    private static class deleteClientProductAudit_resultStandardScheme extends StandardScheme<deleteClientProductAudit_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteClientProductAudit_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteClientProductAudit_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteClientProductAudit_resultTupleSchemeFactory implements SchemeFactory {
      public deleteClientProductAudit_resultTupleScheme getScheme() {
        return new deleteClientProductAudit_resultTupleScheme();
      }
    }

    private static class deleteClientProductAudit_resultTupleScheme extends TupleScheme<deleteClientProductAudit_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteClientProductAudit_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteClientProductAudit_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class updateClientProductAudit_args implements org.apache.thrift.TBase<updateClientProductAudit_args, updateClientProductAudit_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateClientProductAudit_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateClientProductAudit_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("clientProductAuditVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateClientProductAudit_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateClientProductAudit_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      CLIENT_PRODUCT_AUDIT_VO((short)2, "clientProductAuditVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // CLIENT_PRODUCT_AUDIT_VO
            return CLIENT_PRODUCT_AUDIT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.CLIENT_PRODUCT_AUDIT_VO, new org.apache.thrift.meta_data.FieldMetaData("clientProductAuditVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ClientProductAuditVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateClientProductAudit_args.class, metaDataMap);
    }

    public updateClientProductAudit_args() {
    }

    public updateClientProductAudit_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo)
    {
      this();
      this.originVo = originVo;
      this.clientProductAuditVo = clientProductAuditVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateClientProductAudit_args(updateClientProductAudit_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetClientProductAuditVo()) {
        this.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo(other.clientProductAuditVo);
      }
    }

    public updateClientProductAudit_args deepCopy() {
      return new updateClientProductAudit_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.clientProductAuditVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public updateClientProductAudit_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.ClientProductAuditVo getClientProductAuditVo() {
      return this.clientProductAuditVo;
    }

    public updateClientProductAudit_args setClientProductAuditVo(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) {
      this.clientProductAuditVo = clientProductAuditVo;
      return this;
    }

    public void unsetClientProductAuditVo() {
      this.clientProductAuditVo = null;
    }

    /** Returns true if field clientProductAuditVo is set (has been assigned a value) and false otherwise */
    public boolean isSetClientProductAuditVo() {
      return this.clientProductAuditVo != null;
    }

    public void setClientProductAuditVoIsSet(boolean value) {
      if (!value) {
        this.clientProductAuditVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case CLIENT_PRODUCT_AUDIT_VO:
        if (value == null) {
          unsetClientProductAuditVo();
        } else {
          setClientProductAuditVo((com.froad.thrift.vo.ClientProductAuditVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case CLIENT_PRODUCT_AUDIT_VO:
        return getClientProductAuditVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case CLIENT_PRODUCT_AUDIT_VO:
        return isSetClientProductAuditVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateClientProductAudit_args)
        return this.equals((updateClientProductAudit_args)that);
      return false;
    }

    public boolean equals(updateClientProductAudit_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_clientProductAuditVo = true && this.isSetClientProductAuditVo();
      boolean that_present_clientProductAuditVo = true && that.isSetClientProductAuditVo();
      if (this_present_clientProductAuditVo || that_present_clientProductAuditVo) {
        if (!(this_present_clientProductAuditVo && that_present_clientProductAuditVo))
          return false;
        if (!this.clientProductAuditVo.equals(that.clientProductAuditVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_clientProductAuditVo = true && (isSetClientProductAuditVo());
      list.add(present_clientProductAuditVo);
      if (present_clientProductAuditVo)
        list.add(clientProductAuditVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateClientProductAudit_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetClientProductAuditVo()).compareTo(other.isSetClientProductAuditVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientProductAuditVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientProductAuditVo, other.clientProductAuditVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateClientProductAudit_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("clientProductAuditVo:");
      if (this.clientProductAuditVo == null) {
        sb.append("null");
      } else {
        sb.append(this.clientProductAuditVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (clientProductAuditVo != null) {
        clientProductAuditVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateClientProductAudit_argsStandardSchemeFactory implements SchemeFactory {
      public updateClientProductAudit_argsStandardScheme getScheme() {
        return new updateClientProductAudit_argsStandardScheme();
      }
    }

    private static class updateClientProductAudit_argsStandardScheme extends StandardScheme<updateClientProductAudit_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateClientProductAudit_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CLIENT_PRODUCT_AUDIT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
                struct.clientProductAuditVo.read(iprot);
                struct.setClientProductAuditVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateClientProductAudit_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.clientProductAuditVo != null) {
          oprot.writeFieldBegin(CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC);
          struct.clientProductAuditVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateClientProductAudit_argsTupleSchemeFactory implements SchemeFactory {
      public updateClientProductAudit_argsTupleScheme getScheme() {
        return new updateClientProductAudit_argsTupleScheme();
      }
    }

    private static class updateClientProductAudit_argsTupleScheme extends TupleScheme<updateClientProductAudit_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateClientProductAudit_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetClientProductAuditVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetClientProductAuditVo()) {
          struct.clientProductAuditVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateClientProductAudit_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
          struct.clientProductAuditVo.read(iprot);
          struct.setClientProductAuditVoIsSet(true);
        }
      }
    }

  }

  public static class updateClientProductAudit_result implements org.apache.thrift.TBase<updateClientProductAudit_result, updateClientProductAudit_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateClientProductAudit_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateClientProductAudit_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateClientProductAudit_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateClientProductAudit_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateClientProductAudit_result.class, metaDataMap);
    }

    public updateClientProductAudit_result() {
    }

    public updateClientProductAudit_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateClientProductAudit_result(updateClientProductAudit_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public updateClientProductAudit_result deepCopy() {
      return new updateClientProductAudit_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public updateClientProductAudit_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateClientProductAudit_result)
        return this.equals((updateClientProductAudit_result)that);
      return false;
    }

    public boolean equals(updateClientProductAudit_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateClientProductAudit_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateClientProductAudit_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateClientProductAudit_resultStandardSchemeFactory implements SchemeFactory {
      public updateClientProductAudit_resultStandardScheme getScheme() {
        return new updateClientProductAudit_resultStandardScheme();
      }
    }

    private static class updateClientProductAudit_resultStandardScheme extends StandardScheme<updateClientProductAudit_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateClientProductAudit_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateClientProductAudit_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateClientProductAudit_resultTupleSchemeFactory implements SchemeFactory {
      public updateClientProductAudit_resultTupleScheme getScheme() {
        return new updateClientProductAudit_resultTupleScheme();
      }
    }

    private static class updateClientProductAudit_resultTupleScheme extends TupleScheme<updateClientProductAudit_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateClientProductAudit_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateClientProductAudit_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getClientProductAuditByOrgCode_args implements org.apache.thrift.TBase<getClientProductAuditByOrgCode_args, getClientProductAuditByOrgCode_args._Fields>, java.io.Serializable, Cloneable, Comparable<getClientProductAuditByOrgCode_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getClientProductAuditByOrgCode_args");

    private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField PRODUCT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("productType", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getClientProductAuditByOrgCode_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getClientProductAuditByOrgCode_argsTupleSchemeFactory());
    }

    public String clientId; // required
    public String orgCode; // required
    public String productType; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      CLIENT_ID((short)1, "clientId"),
      ORG_CODE((short)2, "orgCode"),
      PRODUCT_TYPE((short)3, "productType");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // CLIENT_ID
            return CLIENT_ID;
          case 2: // ORG_CODE
            return ORG_CODE;
          case 3: // PRODUCT_TYPE
            return PRODUCT_TYPE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.PRODUCT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("productType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getClientProductAuditByOrgCode_args.class, metaDataMap);
    }

    public getClientProductAuditByOrgCode_args() {
    }

    public getClientProductAuditByOrgCode_args(
      String clientId,
      String orgCode,
      String productType)
    {
      this();
      this.clientId = clientId;
      this.orgCode = orgCode;
      this.productType = productType;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getClientProductAuditByOrgCode_args(getClientProductAuditByOrgCode_args other) {
      if (other.isSetClientId()) {
        this.clientId = other.clientId;
      }
      if (other.isSetOrgCode()) {
        this.orgCode = other.orgCode;
      }
      if (other.isSetProductType()) {
        this.productType = other.productType;
      }
    }

    public getClientProductAuditByOrgCode_args deepCopy() {
      return new getClientProductAuditByOrgCode_args(this);
    }

    @Override
    public void clear() {
      this.clientId = null;
      this.orgCode = null;
      this.productType = null;
    }

    public String getClientId() {
      return this.clientId;
    }

    public getClientProductAuditByOrgCode_args setClientId(String clientId) {
      this.clientId = clientId;
      return this;
    }

    public void unsetClientId() {
      this.clientId = null;
    }

    /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
    public boolean isSetClientId() {
      return this.clientId != null;
    }

    public void setClientIdIsSet(boolean value) {
      if (!value) {
        this.clientId = null;
      }
    }

    public String getOrgCode() {
      return this.orgCode;
    }

    public getClientProductAuditByOrgCode_args setOrgCode(String orgCode) {
      this.orgCode = orgCode;
      return this;
    }

    public void unsetOrgCode() {
      this.orgCode = null;
    }

    /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
    public boolean isSetOrgCode() {
      return this.orgCode != null;
    }

    public void setOrgCodeIsSet(boolean value) {
      if (!value) {
        this.orgCode = null;
      }
    }

    public String getProductType() {
      return this.productType;
    }

    public getClientProductAuditByOrgCode_args setProductType(String productType) {
      this.productType = productType;
      return this;
    }

    public void unsetProductType() {
      this.productType = null;
    }

    /** Returns true if field productType is set (has been assigned a value) and false otherwise */
    public boolean isSetProductType() {
      return this.productType != null;
    }

    public void setProductTypeIsSet(boolean value) {
      if (!value) {
        this.productType = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case CLIENT_ID:
        if (value == null) {
          unsetClientId();
        } else {
          setClientId((String)value);
        }
        break;

      case ORG_CODE:
        if (value == null) {
          unsetOrgCode();
        } else {
          setOrgCode((String)value);
        }
        break;

      case PRODUCT_TYPE:
        if (value == null) {
          unsetProductType();
        } else {
          setProductType((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case CLIENT_ID:
        return getClientId();

      case ORG_CODE:
        return getOrgCode();

      case PRODUCT_TYPE:
        return getProductType();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case CLIENT_ID:
        return isSetClientId();
      case ORG_CODE:
        return isSetOrgCode();
      case PRODUCT_TYPE:
        return isSetProductType();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getClientProductAuditByOrgCode_args)
        return this.equals((getClientProductAuditByOrgCode_args)that);
      return false;
    }

    public boolean equals(getClientProductAuditByOrgCode_args that) {
      if (that == null)
        return false;

      boolean this_present_clientId = true && this.isSetClientId();
      boolean that_present_clientId = true && that.isSetClientId();
      if (this_present_clientId || that_present_clientId) {
        if (!(this_present_clientId && that_present_clientId))
          return false;
        if (!this.clientId.equals(that.clientId))
          return false;
      }

      boolean this_present_orgCode = true && this.isSetOrgCode();
      boolean that_present_orgCode = true && that.isSetOrgCode();
      if (this_present_orgCode || that_present_orgCode) {
        if (!(this_present_orgCode && that_present_orgCode))
          return false;
        if (!this.orgCode.equals(that.orgCode))
          return false;
      }

      boolean this_present_productType = true && this.isSetProductType();
      boolean that_present_productType = true && that.isSetProductType();
      if (this_present_productType || that_present_productType) {
        if (!(this_present_productType && that_present_productType))
          return false;
        if (!this.productType.equals(that.productType))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_clientId = true && (isSetClientId());
      list.add(present_clientId);
      if (present_clientId)
        list.add(clientId);

      boolean present_orgCode = true && (isSetOrgCode());
      list.add(present_orgCode);
      if (present_orgCode)
        list.add(orgCode);

      boolean present_productType = true && (isSetProductType());
      list.add(present_productType);
      if (present_productType)
        list.add(productType);

      return list.hashCode();
    }

    @Override
    public int compareTo(getClientProductAuditByOrgCode_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOrgCode()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetProductType()).compareTo(other.isSetProductType());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetProductType()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productType, other.productType);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getClientProductAuditByOrgCode_args(");
      boolean first = true;

      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("productType:");
      if (this.productType == null) {
        sb.append("null");
      } else {
        sb.append(this.productType);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getClientProductAuditByOrgCode_argsStandardSchemeFactory implements SchemeFactory {
      public getClientProductAuditByOrgCode_argsStandardScheme getScheme() {
        return new getClientProductAuditByOrgCode_argsStandardScheme();
      }
    }

    private static class getClientProductAuditByOrgCode_argsStandardScheme extends StandardScheme<getClientProductAuditByOrgCode_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getClientProductAuditByOrgCode_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // CLIENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.clientId = iprot.readString();
                struct.setClientIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ORG_CODE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.orgCode = iprot.readString();
                struct.setOrgCodeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // PRODUCT_TYPE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.productType = iprot.readString();
                struct.setProductTypeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getClientProductAuditByOrgCode_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.clientId != null) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
        if (struct.orgCode != null) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
        if (struct.productType != null) {
          oprot.writeFieldBegin(PRODUCT_TYPE_FIELD_DESC);
          oprot.writeString(struct.productType);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getClientProductAuditByOrgCode_argsTupleSchemeFactory implements SchemeFactory {
      public getClientProductAuditByOrgCode_argsTupleScheme getScheme() {
        return new getClientProductAuditByOrgCode_argsTupleScheme();
      }
    }

    private static class getClientProductAuditByOrgCode_argsTupleScheme extends TupleScheme<getClientProductAuditByOrgCode_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getClientProductAuditByOrgCode_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetClientId()) {
          optionals.set(0);
        }
        if (struct.isSetOrgCode()) {
          optionals.set(1);
        }
        if (struct.isSetProductType()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetClientId()) {
          oprot.writeString(struct.clientId);
        }
        if (struct.isSetOrgCode()) {
          oprot.writeString(struct.orgCode);
        }
        if (struct.isSetProductType()) {
          oprot.writeString(struct.productType);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getClientProductAuditByOrgCode_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.clientId = iprot.readString();
          struct.setClientIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.orgCode = iprot.readString();
          struct.setOrgCodeIsSet(true);
        }
        if (incoming.get(2)) {
          struct.productType = iprot.readString();
          struct.setProductTypeIsSet(true);
        }
      }
    }

  }

  public static class getClientProductAuditByOrgCode_result implements org.apache.thrift.TBase<getClientProductAuditByOrgCode_result, getClientProductAuditByOrgCode_result._Fields>, java.io.Serializable, Cloneable, Comparable<getClientProductAuditByOrgCode_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getClientProductAuditByOrgCode_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getClientProductAuditByOrgCode_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getClientProductAuditByOrgCode_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ClientProductAuditOrgCodeVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ClientProductAuditOrgCodeVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getClientProductAuditByOrgCode_result.class, metaDataMap);
    }

    public getClientProductAuditByOrgCode_result() {
    }

    public getClientProductAuditByOrgCode_result(
      com.froad.thrift.vo.ClientProductAuditOrgCodeVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getClientProductAuditByOrgCode_result(getClientProductAuditByOrgCode_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ClientProductAuditOrgCodeVo(other.success);
      }
    }

    public getClientProductAuditByOrgCode_result deepCopy() {
      return new getClientProductAuditByOrgCode_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ClientProductAuditOrgCodeVo getSuccess() {
      return this.success;
    }

    public getClientProductAuditByOrgCode_result setSuccess(com.froad.thrift.vo.ClientProductAuditOrgCodeVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ClientProductAuditOrgCodeVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getClientProductAuditByOrgCode_result)
        return this.equals((getClientProductAuditByOrgCode_result)that);
      return false;
    }

    public boolean equals(getClientProductAuditByOrgCode_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getClientProductAuditByOrgCode_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getClientProductAuditByOrgCode_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getClientProductAuditByOrgCode_resultStandardSchemeFactory implements SchemeFactory {
      public getClientProductAuditByOrgCode_resultStandardScheme getScheme() {
        return new getClientProductAuditByOrgCode_resultStandardScheme();
      }
    }

    private static class getClientProductAuditByOrgCode_resultStandardScheme extends StandardScheme<getClientProductAuditByOrgCode_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getClientProductAuditByOrgCode_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ClientProductAuditOrgCodeVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getClientProductAuditByOrgCode_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getClientProductAuditByOrgCode_resultTupleSchemeFactory implements SchemeFactory {
      public getClientProductAuditByOrgCode_resultTupleScheme getScheme() {
        return new getClientProductAuditByOrgCode_resultTupleScheme();
      }
    }

    private static class getClientProductAuditByOrgCode_resultTupleScheme extends TupleScheme<getClientProductAuditByOrgCode_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getClientProductAuditByOrgCode_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getClientProductAuditByOrgCode_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ClientProductAuditOrgCodeVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getClientProductAudit_args implements org.apache.thrift.TBase<getClientProductAudit_args, getClientProductAudit_args._Fields>, java.io.Serializable, Cloneable, Comparable<getClientProductAudit_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getClientProductAudit_args");

    private static final org.apache.thrift.protocol.TField CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("clientProductAuditVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getClientProductAudit_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getClientProductAudit_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      CLIENT_PRODUCT_AUDIT_VO((short)1, "clientProductAuditVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // CLIENT_PRODUCT_AUDIT_VO
            return CLIENT_PRODUCT_AUDIT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.CLIENT_PRODUCT_AUDIT_VO, new org.apache.thrift.meta_data.FieldMetaData("clientProductAuditVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ClientProductAuditVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getClientProductAudit_args.class, metaDataMap);
    }

    public getClientProductAudit_args() {
    }

    public getClientProductAudit_args(
      com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo)
    {
      this();
      this.clientProductAuditVo = clientProductAuditVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getClientProductAudit_args(getClientProductAudit_args other) {
      if (other.isSetClientProductAuditVo()) {
        this.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo(other.clientProductAuditVo);
      }
    }

    public getClientProductAudit_args deepCopy() {
      return new getClientProductAudit_args(this);
    }

    @Override
    public void clear() {
      this.clientProductAuditVo = null;
    }

    public com.froad.thrift.vo.ClientProductAuditVo getClientProductAuditVo() {
      return this.clientProductAuditVo;
    }

    public getClientProductAudit_args setClientProductAuditVo(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) {
      this.clientProductAuditVo = clientProductAuditVo;
      return this;
    }

    public void unsetClientProductAuditVo() {
      this.clientProductAuditVo = null;
    }

    /** Returns true if field clientProductAuditVo is set (has been assigned a value) and false otherwise */
    public boolean isSetClientProductAuditVo() {
      return this.clientProductAuditVo != null;
    }

    public void setClientProductAuditVoIsSet(boolean value) {
      if (!value) {
        this.clientProductAuditVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case CLIENT_PRODUCT_AUDIT_VO:
        if (value == null) {
          unsetClientProductAuditVo();
        } else {
          setClientProductAuditVo((com.froad.thrift.vo.ClientProductAuditVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case CLIENT_PRODUCT_AUDIT_VO:
        return getClientProductAuditVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case CLIENT_PRODUCT_AUDIT_VO:
        return isSetClientProductAuditVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getClientProductAudit_args)
        return this.equals((getClientProductAudit_args)that);
      return false;
    }

    public boolean equals(getClientProductAudit_args that) {
      if (that == null)
        return false;

      boolean this_present_clientProductAuditVo = true && this.isSetClientProductAuditVo();
      boolean that_present_clientProductAuditVo = true && that.isSetClientProductAuditVo();
      if (this_present_clientProductAuditVo || that_present_clientProductAuditVo) {
        if (!(this_present_clientProductAuditVo && that_present_clientProductAuditVo))
          return false;
        if (!this.clientProductAuditVo.equals(that.clientProductAuditVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_clientProductAuditVo = true && (isSetClientProductAuditVo());
      list.add(present_clientProductAuditVo);
      if (present_clientProductAuditVo)
        list.add(clientProductAuditVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getClientProductAudit_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetClientProductAuditVo()).compareTo(other.isSetClientProductAuditVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientProductAuditVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientProductAuditVo, other.clientProductAuditVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getClientProductAudit_args(");
      boolean first = true;

      sb.append("clientProductAuditVo:");
      if (this.clientProductAuditVo == null) {
        sb.append("null");
      } else {
        sb.append(this.clientProductAuditVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (clientProductAuditVo != null) {
        clientProductAuditVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getClientProductAudit_argsStandardSchemeFactory implements SchemeFactory {
      public getClientProductAudit_argsStandardScheme getScheme() {
        return new getClientProductAudit_argsStandardScheme();
      }
    }

    private static class getClientProductAudit_argsStandardScheme extends StandardScheme<getClientProductAudit_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getClientProductAudit_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // CLIENT_PRODUCT_AUDIT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
                struct.clientProductAuditVo.read(iprot);
                struct.setClientProductAuditVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getClientProductAudit_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.clientProductAuditVo != null) {
          oprot.writeFieldBegin(CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC);
          struct.clientProductAuditVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getClientProductAudit_argsTupleSchemeFactory implements SchemeFactory {
      public getClientProductAudit_argsTupleScheme getScheme() {
        return new getClientProductAudit_argsTupleScheme();
      }
    }

    private static class getClientProductAudit_argsTupleScheme extends TupleScheme<getClientProductAudit_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getClientProductAudit_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetClientProductAuditVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetClientProductAuditVo()) {
          struct.clientProductAuditVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getClientProductAudit_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
          struct.clientProductAuditVo.read(iprot);
          struct.setClientProductAuditVoIsSet(true);
        }
      }
    }

  }

  public static class getClientProductAudit_result implements org.apache.thrift.TBase<getClientProductAudit_result, getClientProductAudit_result._Fields>, java.io.Serializable, Cloneable, Comparable<getClientProductAudit_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getClientProductAudit_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getClientProductAudit_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getClientProductAudit_resultTupleSchemeFactory());
    }

    public List<com.froad.thrift.vo.ClientProductAuditVo> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ClientProductAuditVo.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getClientProductAudit_result.class, metaDataMap);
    }

    public getClientProductAudit_result() {
    }

    public getClientProductAudit_result(
      List<com.froad.thrift.vo.ClientProductAuditVo> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getClientProductAudit_result(getClientProductAudit_result other) {
      if (other.isSetSuccess()) {
        List<com.froad.thrift.vo.ClientProductAuditVo> __this__success = new ArrayList<com.froad.thrift.vo.ClientProductAuditVo>(other.success.size());
        for (com.froad.thrift.vo.ClientProductAuditVo other_element : other.success) {
          __this__success.add(new com.froad.thrift.vo.ClientProductAuditVo(other_element));
        }
        this.success = __this__success;
      }
    }

    public getClientProductAudit_result deepCopy() {
      return new getClientProductAudit_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.froad.thrift.vo.ClientProductAuditVo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.froad.thrift.vo.ClientProductAuditVo elem) {
      if (this.success == null) {
        this.success = new ArrayList<com.froad.thrift.vo.ClientProductAuditVo>();
      }
      this.success.add(elem);
    }

    public List<com.froad.thrift.vo.ClientProductAuditVo> getSuccess() {
      return this.success;
    }

    public getClientProductAudit_result setSuccess(List<com.froad.thrift.vo.ClientProductAuditVo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<com.froad.thrift.vo.ClientProductAuditVo>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getClientProductAudit_result)
        return this.equals((getClientProductAudit_result)that);
      return false;
    }

    public boolean equals(getClientProductAudit_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getClientProductAudit_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getClientProductAudit_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getClientProductAudit_resultStandardSchemeFactory implements SchemeFactory {
      public getClientProductAudit_resultStandardScheme getScheme() {
        return new getClientProductAudit_resultStandardScheme();
      }
    }

    private static class getClientProductAudit_resultStandardScheme extends StandardScheme<getClientProductAudit_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getClientProductAudit_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list272 = iprot.readListBegin();
                  struct.success = new ArrayList<com.froad.thrift.vo.ClientProductAuditVo>(_list272.size);
                  com.froad.thrift.vo.ClientProductAuditVo _elem273;
                  for (int _i274 = 0; _i274 < _list272.size; ++_i274)
                  {
                    _elem273 = new com.froad.thrift.vo.ClientProductAuditVo();
                    _elem273.read(iprot);
                    struct.success.add(_elem273);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getClientProductAudit_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.froad.thrift.vo.ClientProductAuditVo _iter275 : struct.success)
            {
              _iter275.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getClientProductAudit_resultTupleSchemeFactory implements SchemeFactory {
      public getClientProductAudit_resultTupleScheme getScheme() {
        return new getClientProductAudit_resultTupleScheme();
      }
    }

    private static class getClientProductAudit_resultTupleScheme extends TupleScheme<getClientProductAudit_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getClientProductAudit_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.froad.thrift.vo.ClientProductAuditVo _iter276 : struct.success)
            {
              _iter276.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getClientProductAudit_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list277 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<com.froad.thrift.vo.ClientProductAuditVo>(_list277.size);
            com.froad.thrift.vo.ClientProductAuditVo _elem278;
            for (int _i279 = 0; _i279 < _list277.size; ++_i279)
            {
              _elem278 = new com.froad.thrift.vo.ClientProductAuditVo();
              _elem278.read(iprot);
              struct.success.add(_elem278);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getClientProductAuditByPage_args implements org.apache.thrift.TBase<getClientProductAuditByPage_args, getClientProductAuditByPage_args._Fields>, java.io.Serializable, Cloneable, Comparable<getClientProductAuditByPage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getClientProductAuditByPage_args");

    private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("clientProductAuditVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getClientProductAuditByPage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getClientProductAuditByPage_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.PageVo page; // required
    public com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PAGE((short)1, "page"),
      CLIENT_PRODUCT_AUDIT_VO((short)2, "clientProductAuditVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PAGE
            return PAGE;
          case 2: // CLIENT_PRODUCT_AUDIT_VO
            return CLIENT_PRODUCT_AUDIT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
      tmpMap.put(_Fields.CLIENT_PRODUCT_AUDIT_VO, new org.apache.thrift.meta_data.FieldMetaData("clientProductAuditVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ClientProductAuditVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getClientProductAuditByPage_args.class, metaDataMap);
    }

    public getClientProductAuditByPage_args() {
    }

    public getClientProductAuditByPage_args(
      com.froad.thrift.vo.PageVo page,
      com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo)
    {
      this();
      this.page = page;
      this.clientProductAuditVo = clientProductAuditVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getClientProductAuditByPage_args(getClientProductAuditByPage_args other) {
      if (other.isSetPage()) {
        this.page = new com.froad.thrift.vo.PageVo(other.page);
      }
      if (other.isSetClientProductAuditVo()) {
        this.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo(other.clientProductAuditVo);
      }
    }

    public getClientProductAuditByPage_args deepCopy() {
      return new getClientProductAuditByPage_args(this);
    }

    @Override
    public void clear() {
      this.page = null;
      this.clientProductAuditVo = null;
    }

    public com.froad.thrift.vo.PageVo getPage() {
      return this.page;
    }

    public getClientProductAuditByPage_args setPage(com.froad.thrift.vo.PageVo page) {
      this.page = page;
      return this;
    }

    public void unsetPage() {
      this.page = null;
    }

    /** Returns true if field page is set (has been assigned a value) and false otherwise */
    public boolean isSetPage() {
      return this.page != null;
    }

    public void setPageIsSet(boolean value) {
      if (!value) {
        this.page = null;
      }
    }

    public com.froad.thrift.vo.ClientProductAuditVo getClientProductAuditVo() {
      return this.clientProductAuditVo;
    }

    public getClientProductAuditByPage_args setClientProductAuditVo(com.froad.thrift.vo.ClientProductAuditVo clientProductAuditVo) {
      this.clientProductAuditVo = clientProductAuditVo;
      return this;
    }

    public void unsetClientProductAuditVo() {
      this.clientProductAuditVo = null;
    }

    /** Returns true if field clientProductAuditVo is set (has been assigned a value) and false otherwise */
    public boolean isSetClientProductAuditVo() {
      return this.clientProductAuditVo != null;
    }

    public void setClientProductAuditVoIsSet(boolean value) {
      if (!value) {
        this.clientProductAuditVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PAGE:
        if (value == null) {
          unsetPage();
        } else {
          setPage((com.froad.thrift.vo.PageVo)value);
        }
        break;

      case CLIENT_PRODUCT_AUDIT_VO:
        if (value == null) {
          unsetClientProductAuditVo();
        } else {
          setClientProductAuditVo((com.froad.thrift.vo.ClientProductAuditVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PAGE:
        return getPage();

      case CLIENT_PRODUCT_AUDIT_VO:
        return getClientProductAuditVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PAGE:
        return isSetPage();
      case CLIENT_PRODUCT_AUDIT_VO:
        return isSetClientProductAuditVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getClientProductAuditByPage_args)
        return this.equals((getClientProductAuditByPage_args)that);
      return false;
    }

    public boolean equals(getClientProductAuditByPage_args that) {
      if (that == null)
        return false;

      boolean this_present_page = true && this.isSetPage();
      boolean that_present_page = true && that.isSetPage();
      if (this_present_page || that_present_page) {
        if (!(this_present_page && that_present_page))
          return false;
        if (!this.page.equals(that.page))
          return false;
      }

      boolean this_present_clientProductAuditVo = true && this.isSetClientProductAuditVo();
      boolean that_present_clientProductAuditVo = true && that.isSetClientProductAuditVo();
      if (this_present_clientProductAuditVo || that_present_clientProductAuditVo) {
        if (!(this_present_clientProductAuditVo && that_present_clientProductAuditVo))
          return false;
        if (!this.clientProductAuditVo.equals(that.clientProductAuditVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_page = true && (isSetPage());
      list.add(present_page);
      if (present_page)
        list.add(page);

      boolean present_clientProductAuditVo = true && (isSetClientProductAuditVo());
      list.add(present_clientProductAuditVo);
      if (present_clientProductAuditVo)
        list.add(clientProductAuditVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getClientProductAuditByPage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetClientProductAuditVo()).compareTo(other.isSetClientProductAuditVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientProductAuditVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientProductAuditVo, other.clientProductAuditVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getClientProductAuditByPage_args(");
      boolean first = true;

      sb.append("page:");
      if (this.page == null) {
        sb.append("null");
      } else {
        sb.append(this.page);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("clientProductAuditVo:");
      if (this.clientProductAuditVo == null) {
        sb.append("null");
      } else {
        sb.append(this.clientProductAuditVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (page != null) {
        page.validate();
      }
      if (clientProductAuditVo != null) {
        clientProductAuditVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getClientProductAuditByPage_argsStandardSchemeFactory implements SchemeFactory {
      public getClientProductAuditByPage_argsStandardScheme getScheme() {
        return new getClientProductAuditByPage_argsStandardScheme();
      }
    }

    private static class getClientProductAuditByPage_argsStandardScheme extends StandardScheme<getClientProductAuditByPage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getClientProductAuditByPage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.page = new com.froad.thrift.vo.PageVo();
                struct.page.read(iprot);
                struct.setPageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CLIENT_PRODUCT_AUDIT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
                struct.clientProductAuditVo.read(iprot);
                struct.setClientProductAuditVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getClientProductAuditByPage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.page != null) {
          oprot.writeFieldBegin(PAGE_FIELD_DESC);
          struct.page.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.clientProductAuditVo != null) {
          oprot.writeFieldBegin(CLIENT_PRODUCT_AUDIT_VO_FIELD_DESC);
          struct.clientProductAuditVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getClientProductAuditByPage_argsTupleSchemeFactory implements SchemeFactory {
      public getClientProductAuditByPage_argsTupleScheme getScheme() {
        return new getClientProductAuditByPage_argsTupleScheme();
      }
    }

    private static class getClientProductAuditByPage_argsTupleScheme extends TupleScheme<getClientProductAuditByPage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getClientProductAuditByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPage()) {
          optionals.set(0);
        }
        if (struct.isSetClientProductAuditVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPage()) {
          struct.page.write(oprot);
        }
        if (struct.isSetClientProductAuditVo()) {
          struct.clientProductAuditVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getClientProductAuditByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.page = new com.froad.thrift.vo.PageVo();
          struct.page.read(iprot);
          struct.setPageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.clientProductAuditVo = new com.froad.thrift.vo.ClientProductAuditVo();
          struct.clientProductAuditVo.read(iprot);
          struct.setClientProductAuditVoIsSet(true);
        }
      }
    }

  }

  public static class getClientProductAuditByPage_result implements org.apache.thrift.TBase<getClientProductAuditByPage_result, getClientProductAuditByPage_result._Fields>, java.io.Serializable, Cloneable, Comparable<getClientProductAuditByPage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getClientProductAuditByPage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getClientProductAuditByPage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getClientProductAuditByPage_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ClientProductAuditPageVoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ClientProductAuditPageVoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getClientProductAuditByPage_result.class, metaDataMap);
    }

    public getClientProductAuditByPage_result() {
    }

    public getClientProductAuditByPage_result(
      com.froad.thrift.vo.ClientProductAuditPageVoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getClientProductAuditByPage_result(getClientProductAuditByPage_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ClientProductAuditPageVoRes(other.success);
      }
    }

    public getClientProductAuditByPage_result deepCopy() {
      return new getClientProductAuditByPage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ClientProductAuditPageVoRes getSuccess() {
      return this.success;
    }

    public getClientProductAuditByPage_result setSuccess(com.froad.thrift.vo.ClientProductAuditPageVoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ClientProductAuditPageVoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getClientProductAuditByPage_result)
        return this.equals((getClientProductAuditByPage_result)that);
      return false;
    }

    public boolean equals(getClientProductAuditByPage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getClientProductAuditByPage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getClientProductAuditByPage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getClientProductAuditByPage_resultStandardSchemeFactory implements SchemeFactory {
      public getClientProductAuditByPage_resultStandardScheme getScheme() {
        return new getClientProductAuditByPage_resultStandardScheme();
      }
    }

    private static class getClientProductAuditByPage_resultStandardScheme extends StandardScheme<getClientProductAuditByPage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getClientProductAuditByPage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ClientProductAuditPageVoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getClientProductAuditByPage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getClientProductAuditByPage_resultTupleSchemeFactory implements SchemeFactory {
      public getClientProductAuditByPage_resultTupleScheme getScheme() {
        return new getClientProductAuditByPage_resultTupleScheme();
      }
    }

    private static class getClientProductAuditByPage_resultTupleScheme extends TupleScheme<getClientProductAuditByPage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getClientProductAuditByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getClientProductAuditByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ClientProductAuditPageVoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
