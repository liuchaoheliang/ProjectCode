/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.member;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class QueryProtocolVo implements org.apache.thrift.TBase<QueryProtocolVo, QueryProtocolVo._Fields>, java.io.Serializable, Cloneable, Comparable<QueryProtocolVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QueryProtocolVo");

  private static final org.apache.thrift.protocol.TField POINT_INFOS_FIELD_DESC = new org.apache.thrift.protocol.TField("pointInfos", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField QUERY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("queryInfo", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField TOTAL_POINTS_INFOS_DTOS_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPointsInfosDtos", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField RESULT_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("resultMessage", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField RESULT_SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("resultSuccess", org.apache.thrift.protocol.TType.BOOL, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new QueryProtocolVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new QueryProtocolVoTupleSchemeFactory());
  }

  public List<com.froad.thrift.vo.member.UserEnginePointsRecordVo> pointInfos; // required
  public QueryInfoVo queryInfo; // required
  public List<TotalPointsInfosVo> totalPointsInfosDtos; // required
  public String resultMessage; // required
  public boolean resultSuccess; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    POINT_INFOS((short)1, "pointInfos"),
    QUERY_INFO((short)2, "queryInfo"),
    TOTAL_POINTS_INFOS_DTOS((short)3, "totalPointsInfosDtos"),
    RESULT_MESSAGE((short)4, "resultMessage"),
    RESULT_SUCCESS((short)5, "resultSuccess");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // POINT_INFOS
          return POINT_INFOS;
        case 2: // QUERY_INFO
          return QUERY_INFO;
        case 3: // TOTAL_POINTS_INFOS_DTOS
          return TOTAL_POINTS_INFOS_DTOS;
        case 4: // RESULT_MESSAGE
          return RESULT_MESSAGE;
        case 5: // RESULT_SUCCESS
          return RESULT_SUCCESS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RESULTSUCCESS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.POINT_INFOS, new org.apache.thrift.meta_data.FieldMetaData("pointInfos", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.member.UserEnginePointsRecordVo.class))));
    tmpMap.put(_Fields.QUERY_INFO, new org.apache.thrift.meta_data.FieldMetaData("queryInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "QueryInfoVo")));
    tmpMap.put(_Fields.TOTAL_POINTS_INFOS_DTOS, new org.apache.thrift.meta_data.FieldMetaData("totalPointsInfosDtos", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "TotalPointsInfosVo"))));
    tmpMap.put(_Fields.RESULT_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("resultMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT_SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("resultSuccess", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QueryProtocolVo.class, metaDataMap);
  }

  public QueryProtocolVo() {
  }

  public QueryProtocolVo(
    List<com.froad.thrift.vo.member.UserEnginePointsRecordVo> pointInfos,
    QueryInfoVo queryInfo,
    List<TotalPointsInfosVo> totalPointsInfosDtos,
    String resultMessage,
    boolean resultSuccess)
  {
    this();
    this.pointInfos = pointInfos;
    this.queryInfo = queryInfo;
    this.totalPointsInfosDtos = totalPointsInfosDtos;
    this.resultMessage = resultMessage;
    this.resultSuccess = resultSuccess;
    setResultSuccessIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QueryProtocolVo(QueryProtocolVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetPointInfos()) {
      List<com.froad.thrift.vo.member.UserEnginePointsRecordVo> __this__pointInfos = new ArrayList<com.froad.thrift.vo.member.UserEnginePointsRecordVo>(other.pointInfos.size());
      for (com.froad.thrift.vo.member.UserEnginePointsRecordVo other_element : other.pointInfos) {
        __this__pointInfos.add(new com.froad.thrift.vo.member.UserEnginePointsRecordVo(other_element));
      }
      this.pointInfos = __this__pointInfos;
    }
    if (other.isSetQueryInfo()) {
      this.queryInfo = other.queryInfo;
    }
    if (other.isSetTotalPointsInfosDtos()) {
      List<TotalPointsInfosVo> __this__totalPointsInfosDtos = new ArrayList<TotalPointsInfosVo>(other.totalPointsInfosDtos.size());
      for (TotalPointsInfosVo other_element : other.totalPointsInfosDtos) {
        __this__totalPointsInfosDtos.add(other_element);
      }
      this.totalPointsInfosDtos = __this__totalPointsInfosDtos;
    }
    if (other.isSetResultMessage()) {
      this.resultMessage = other.resultMessage;
    }
    this.resultSuccess = other.resultSuccess;
  }

  public QueryProtocolVo deepCopy() {
    return new QueryProtocolVo(this);
  }

  @Override
  public void clear() {
    this.pointInfos = null;
    this.queryInfo = null;
    this.totalPointsInfosDtos = null;
    this.resultMessage = null;
    setResultSuccessIsSet(false);
    this.resultSuccess = false;
  }

  public int getPointInfosSize() {
    return (this.pointInfos == null) ? 0 : this.pointInfos.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.member.UserEnginePointsRecordVo> getPointInfosIterator() {
    return (this.pointInfos == null) ? null : this.pointInfos.iterator();
  }

  public void addToPointInfos(com.froad.thrift.vo.member.UserEnginePointsRecordVo elem) {
    if (this.pointInfos == null) {
      this.pointInfos = new ArrayList<com.froad.thrift.vo.member.UserEnginePointsRecordVo>();
    }
    this.pointInfos.add(elem);
  }

  public List<com.froad.thrift.vo.member.UserEnginePointsRecordVo> getPointInfos() {
    return this.pointInfos;
  }

  public QueryProtocolVo setPointInfos(List<com.froad.thrift.vo.member.UserEnginePointsRecordVo> pointInfos) {
    this.pointInfos = pointInfos;
    return this;
  }

  public void unsetPointInfos() {
    this.pointInfos = null;
  }

  /** Returns true if field pointInfos is set (has been assigned a value) and false otherwise */
  public boolean isSetPointInfos() {
    return this.pointInfos != null;
  }

  public void setPointInfosIsSet(boolean value) {
    if (!value) {
      this.pointInfos = null;
    }
  }

  public QueryInfoVo getQueryInfo() {
    return this.queryInfo;
  }

  public QueryProtocolVo setQueryInfo(QueryInfoVo queryInfo) {
    this.queryInfo = queryInfo;
    return this;
  }

  public void unsetQueryInfo() {
    this.queryInfo = null;
  }

  /** Returns true if field queryInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetQueryInfo() {
    return this.queryInfo != null;
  }

  public void setQueryInfoIsSet(boolean value) {
    if (!value) {
      this.queryInfo = null;
    }
  }

  public int getTotalPointsInfosDtosSize() {
    return (this.totalPointsInfosDtos == null) ? 0 : this.totalPointsInfosDtos.size();
  }

  public java.util.Iterator<TotalPointsInfosVo> getTotalPointsInfosDtosIterator() {
    return (this.totalPointsInfosDtos == null) ? null : this.totalPointsInfosDtos.iterator();
  }

  public void addToTotalPointsInfosDtos(TotalPointsInfosVo elem) {
    if (this.totalPointsInfosDtos == null) {
      this.totalPointsInfosDtos = new ArrayList<TotalPointsInfosVo>();
    }
    this.totalPointsInfosDtos.add(elem);
  }

  public List<TotalPointsInfosVo> getTotalPointsInfosDtos() {
    return this.totalPointsInfosDtos;
  }

  public QueryProtocolVo setTotalPointsInfosDtos(List<TotalPointsInfosVo> totalPointsInfosDtos) {
    this.totalPointsInfosDtos = totalPointsInfosDtos;
    return this;
  }

  public void unsetTotalPointsInfosDtos() {
    this.totalPointsInfosDtos = null;
  }

  /** Returns true if field totalPointsInfosDtos is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPointsInfosDtos() {
    return this.totalPointsInfosDtos != null;
  }

  public void setTotalPointsInfosDtosIsSet(boolean value) {
    if (!value) {
      this.totalPointsInfosDtos = null;
    }
  }

  public String getResultMessage() {
    return this.resultMessage;
  }

  public QueryProtocolVo setResultMessage(String resultMessage) {
    this.resultMessage = resultMessage;
    return this;
  }

  public void unsetResultMessage() {
    this.resultMessage = null;
  }

  /** Returns true if field resultMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetResultMessage() {
    return this.resultMessage != null;
  }

  public void setResultMessageIsSet(boolean value) {
    if (!value) {
      this.resultMessage = null;
    }
  }

  public boolean isResultSuccess() {
    return this.resultSuccess;
  }

  public QueryProtocolVo setResultSuccess(boolean resultSuccess) {
    this.resultSuccess = resultSuccess;
    setResultSuccessIsSet(true);
    return this;
  }

  public void unsetResultSuccess() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RESULTSUCCESS_ISSET_ID);
  }

  /** Returns true if field resultSuccess is set (has been assigned a value) and false otherwise */
  public boolean isSetResultSuccess() {
    return EncodingUtils.testBit(__isset_bitfield, __RESULTSUCCESS_ISSET_ID);
  }

  public void setResultSuccessIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RESULTSUCCESS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case POINT_INFOS:
      if (value == null) {
        unsetPointInfos();
      } else {
        setPointInfos((List<com.froad.thrift.vo.member.UserEnginePointsRecordVo>)value);
      }
      break;

    case QUERY_INFO:
      if (value == null) {
        unsetQueryInfo();
      } else {
        setQueryInfo((QueryInfoVo)value);
      }
      break;

    case TOTAL_POINTS_INFOS_DTOS:
      if (value == null) {
        unsetTotalPointsInfosDtos();
      } else {
        setTotalPointsInfosDtos((List<TotalPointsInfosVo>)value);
      }
      break;

    case RESULT_MESSAGE:
      if (value == null) {
        unsetResultMessage();
      } else {
        setResultMessage((String)value);
      }
      break;

    case RESULT_SUCCESS:
      if (value == null) {
        unsetResultSuccess();
      } else {
        setResultSuccess((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case POINT_INFOS:
      return getPointInfos();

    case QUERY_INFO:
      return getQueryInfo();

    case TOTAL_POINTS_INFOS_DTOS:
      return getTotalPointsInfosDtos();

    case RESULT_MESSAGE:
      return getResultMessage();

    case RESULT_SUCCESS:
      return Boolean.valueOf(isResultSuccess());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case POINT_INFOS:
      return isSetPointInfos();
    case QUERY_INFO:
      return isSetQueryInfo();
    case TOTAL_POINTS_INFOS_DTOS:
      return isSetTotalPointsInfosDtos();
    case RESULT_MESSAGE:
      return isSetResultMessage();
    case RESULT_SUCCESS:
      return isSetResultSuccess();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QueryProtocolVo)
      return this.equals((QueryProtocolVo)that);
    return false;
  }

  public boolean equals(QueryProtocolVo that) {
    if (that == null)
      return false;

    boolean this_present_pointInfos = true && this.isSetPointInfos();
    boolean that_present_pointInfos = true && that.isSetPointInfos();
    if (this_present_pointInfos || that_present_pointInfos) {
      if (!(this_present_pointInfos && that_present_pointInfos))
        return false;
      if (!this.pointInfos.equals(that.pointInfos))
        return false;
    }

    boolean this_present_queryInfo = true && this.isSetQueryInfo();
    boolean that_present_queryInfo = true && that.isSetQueryInfo();
    if (this_present_queryInfo || that_present_queryInfo) {
      if (!(this_present_queryInfo && that_present_queryInfo))
        return false;
      if (!this.queryInfo.equals(that.queryInfo))
        return false;
    }

    boolean this_present_totalPointsInfosDtos = true && this.isSetTotalPointsInfosDtos();
    boolean that_present_totalPointsInfosDtos = true && that.isSetTotalPointsInfosDtos();
    if (this_present_totalPointsInfosDtos || that_present_totalPointsInfosDtos) {
      if (!(this_present_totalPointsInfosDtos && that_present_totalPointsInfosDtos))
        return false;
      if (!this.totalPointsInfosDtos.equals(that.totalPointsInfosDtos))
        return false;
    }

    boolean this_present_resultMessage = true && this.isSetResultMessage();
    boolean that_present_resultMessage = true && that.isSetResultMessage();
    if (this_present_resultMessage || that_present_resultMessage) {
      if (!(this_present_resultMessage && that_present_resultMessage))
        return false;
      if (!this.resultMessage.equals(that.resultMessage))
        return false;
    }

    boolean this_present_resultSuccess = true;
    boolean that_present_resultSuccess = true;
    if (this_present_resultSuccess || that_present_resultSuccess) {
      if (!(this_present_resultSuccess && that_present_resultSuccess))
        return false;
      if (this.resultSuccess != that.resultSuccess)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pointInfos = true && (isSetPointInfos());
    list.add(present_pointInfos);
    if (present_pointInfos)
      list.add(pointInfos);

    boolean present_queryInfo = true && (isSetQueryInfo());
    list.add(present_queryInfo);
    if (present_queryInfo)
      list.add(queryInfo);

    boolean present_totalPointsInfosDtos = true && (isSetTotalPointsInfosDtos());
    list.add(present_totalPointsInfosDtos);
    if (present_totalPointsInfosDtos)
      list.add(totalPointsInfosDtos);

    boolean present_resultMessage = true && (isSetResultMessage());
    list.add(present_resultMessage);
    if (present_resultMessage)
      list.add(resultMessage);

    boolean present_resultSuccess = true;
    list.add(present_resultSuccess);
    if (present_resultSuccess)
      list.add(resultSuccess);

    return list.hashCode();
  }

  @Override
  public int compareTo(QueryProtocolVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPointInfos()).compareTo(other.isSetPointInfos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPointInfos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pointInfos, other.pointInfos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQueryInfo()).compareTo(other.isSetQueryInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueryInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryInfo, other.queryInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPointsInfosDtos()).compareTo(other.isSetTotalPointsInfosDtos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPointsInfosDtos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPointsInfosDtos, other.totalPointsInfosDtos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultMessage()).compareTo(other.isSetResultMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultMessage, other.resultMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultSuccess()).compareTo(other.isSetResultSuccess());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultSuccess()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultSuccess, other.resultSuccess);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QueryProtocolVo(");
    boolean first = true;

    sb.append("pointInfos:");
    if (this.pointInfos == null) {
      sb.append("null");
    } else {
      sb.append(this.pointInfos);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("queryInfo:");
    if (this.queryInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.queryInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPointsInfosDtos:");
    if (this.totalPointsInfosDtos == null) {
      sb.append("null");
    } else {
      sb.append(this.totalPointsInfosDtos);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultMessage:");
    if (this.resultMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.resultMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultSuccess:");
    sb.append(this.resultSuccess);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QueryProtocolVoStandardSchemeFactory implements SchemeFactory {
    public QueryProtocolVoStandardScheme getScheme() {
      return new QueryProtocolVoStandardScheme();
    }
  }

  private static class QueryProtocolVoStandardScheme extends StandardScheme<QueryProtocolVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QueryProtocolVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // POINT_INFOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.pointInfos = new ArrayList<com.froad.thrift.vo.member.UserEnginePointsRecordVo>(_list16.size);
                com.froad.thrift.vo.member.UserEnginePointsRecordVo _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = new com.froad.thrift.vo.member.UserEnginePointsRecordVo();
                  _elem17.read(iprot);
                  struct.pointInfos.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setPointInfosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // QUERY_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.queryInfo = new QueryInfoVo();
              struct.queryInfo.read(iprot);
              struct.setQueryInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TOTAL_POINTS_INFOS_DTOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list19 = iprot.readListBegin();
                struct.totalPointsInfosDtos = new ArrayList<TotalPointsInfosVo>(_list19.size);
                TotalPointsInfosVo _elem20;
                for (int _i21 = 0; _i21 < _list19.size; ++_i21)
                {
                  _elem20 = new TotalPointsInfosVo();
                  _elem20.read(iprot);
                  struct.totalPointsInfosDtos.add(_elem20);
                }
                iprot.readListEnd();
              }
              struct.setTotalPointsInfosDtosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RESULT_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resultMessage = iprot.readString();
              struct.setResultMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // RESULT_SUCCESS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.resultSuccess = iprot.readBool();
              struct.setResultSuccessIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QueryProtocolVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.pointInfos != null) {
        oprot.writeFieldBegin(POINT_INFOS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.pointInfos.size()));
          for (com.froad.thrift.vo.member.UserEnginePointsRecordVo _iter22 : struct.pointInfos)
          {
            _iter22.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.queryInfo != null) {
        oprot.writeFieldBegin(QUERY_INFO_FIELD_DESC);
        struct.queryInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.totalPointsInfosDtos != null) {
        oprot.writeFieldBegin(TOTAL_POINTS_INFOS_DTOS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.totalPointsInfosDtos.size()));
          for (TotalPointsInfosVo _iter23 : struct.totalPointsInfosDtos)
          {
            _iter23.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.resultMessage != null) {
        oprot.writeFieldBegin(RESULT_MESSAGE_FIELD_DESC);
        oprot.writeString(struct.resultMessage);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RESULT_SUCCESS_FIELD_DESC);
      oprot.writeBool(struct.resultSuccess);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QueryProtocolVoTupleSchemeFactory implements SchemeFactory {
    public QueryProtocolVoTupleScheme getScheme() {
      return new QueryProtocolVoTupleScheme();
    }
  }

  private static class QueryProtocolVoTupleScheme extends TupleScheme<QueryProtocolVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QueryProtocolVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPointInfos()) {
        optionals.set(0);
      }
      if (struct.isSetQueryInfo()) {
        optionals.set(1);
      }
      if (struct.isSetTotalPointsInfosDtos()) {
        optionals.set(2);
      }
      if (struct.isSetResultMessage()) {
        optionals.set(3);
      }
      if (struct.isSetResultSuccess()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetPointInfos()) {
        {
          oprot.writeI32(struct.pointInfos.size());
          for (com.froad.thrift.vo.member.UserEnginePointsRecordVo _iter24 : struct.pointInfos)
          {
            _iter24.write(oprot);
          }
        }
      }
      if (struct.isSetQueryInfo()) {
        struct.queryInfo.write(oprot);
      }
      if (struct.isSetTotalPointsInfosDtos()) {
        {
          oprot.writeI32(struct.totalPointsInfosDtos.size());
          for (TotalPointsInfosVo _iter25 : struct.totalPointsInfosDtos)
          {
            _iter25.write(oprot);
          }
        }
      }
      if (struct.isSetResultMessage()) {
        oprot.writeString(struct.resultMessage);
      }
      if (struct.isSetResultSuccess()) {
        oprot.writeBool(struct.resultSuccess);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QueryProtocolVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list26 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.pointInfos = new ArrayList<com.froad.thrift.vo.member.UserEnginePointsRecordVo>(_list26.size);
          com.froad.thrift.vo.member.UserEnginePointsRecordVo _elem27;
          for (int _i28 = 0; _i28 < _list26.size; ++_i28)
          {
            _elem27 = new com.froad.thrift.vo.member.UserEnginePointsRecordVo();
            _elem27.read(iprot);
            struct.pointInfos.add(_elem27);
          }
        }
        struct.setPointInfosIsSet(true);
      }
      if (incoming.get(1)) {
        struct.queryInfo = new QueryInfoVo();
        struct.queryInfo.read(iprot);
        struct.setQueryInfoIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.totalPointsInfosDtos = new ArrayList<TotalPointsInfosVo>(_list29.size);
          TotalPointsInfosVo _elem30;
          for (int _i31 = 0; _i31 < _list29.size; ++_i31)
          {
            _elem30 = new TotalPointsInfosVo();
            _elem30.read(iprot);
            struct.totalPointsInfosDtos.add(_elem30);
          }
        }
        struct.setTotalPointsInfosDtosIsSet(true);
      }
      if (incoming.get(3)) {
        struct.resultMessage = iprot.readString();
        struct.setResultMessageIsSet(true);
      }
      if (incoming.get(4)) {
        struct.resultSuccess = iprot.readBool();
        struct.setResultSuccessIsSet(true);
      }
    }
  }

}

