/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.member;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class UserEnginePointsRecordVo implements org.apache.thrift.TBase<UserEnginePointsRecordVo, UserEnginePointsRecordVo._Fields>, java.io.Serializable, Cloneable, Comparable<UserEnginePointsRecordVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserEnginePointsRecordVo");

  private static final org.apache.thrift.protocol.TField OBJECT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("objectNo", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("accountNo", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PARTNER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerNo", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ORG_POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("orgPoints", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("points", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("time", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField PROTOCOL_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("protocolNo", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PROTOCOL_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("protocolType", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField BUSINESS_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("businessType", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField BUSINESS_INSTRUCTIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("businessInstructions", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField DISPLAY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("displayName", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField ORG_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("orgNo", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new UserEnginePointsRecordVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new UserEnginePointsRecordVoTupleSchemeFactory());
  }

  public String objectNo; // required
  public String accountNo; // required
  public String partnerNo; // required
  public String orgPoints; // required
  public String points; // required
  public long time; // required
  public String protocolNo; // required
  public String protocolType; // required
  public String businessType; // required
  public String businessInstructions; // required
  public String remark; // required
  public String displayName; // required
  public String orgNo; // required
  public String orderId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    OBJECT_NO((short)1, "objectNo"),
    ACCOUNT_NO((short)2, "accountNo"),
    PARTNER_NO((short)3, "partnerNo"),
    ORG_POINTS((short)4, "orgPoints"),
    POINTS((short)5, "points"),
    TIME((short)6, "time"),
    PROTOCOL_NO((short)7, "protocolNo"),
    PROTOCOL_TYPE((short)8, "protocolType"),
    BUSINESS_TYPE((short)9, "businessType"),
    BUSINESS_INSTRUCTIONS((short)10, "businessInstructions"),
    REMARK((short)11, "remark"),
    DISPLAY_NAME((short)12, "displayName"),
    ORG_NO((short)13, "orgNo"),
    ORDER_ID((short)14, "orderId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // OBJECT_NO
          return OBJECT_NO;
        case 2: // ACCOUNT_NO
          return ACCOUNT_NO;
        case 3: // PARTNER_NO
          return PARTNER_NO;
        case 4: // ORG_POINTS
          return ORG_POINTS;
        case 5: // POINTS
          return POINTS;
        case 6: // TIME
          return TIME;
        case 7: // PROTOCOL_NO
          return PROTOCOL_NO;
        case 8: // PROTOCOL_TYPE
          return PROTOCOL_TYPE;
        case 9: // BUSINESS_TYPE
          return BUSINESS_TYPE;
        case 10: // BUSINESS_INSTRUCTIONS
          return BUSINESS_INSTRUCTIONS;
        case 11: // REMARK
          return REMARK;
        case 12: // DISPLAY_NAME
          return DISPLAY_NAME;
        case 13: // ORG_NO
          return ORG_NO;
        case 14: // ORDER_ID
          return ORDER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TIME_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.OBJECT_NO, new org.apache.thrift.meta_data.FieldMetaData("objectNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_NO, new org.apache.thrift.meta_data.FieldMetaData("accountNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_NO, new org.apache.thrift.meta_data.FieldMetaData("partnerNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_POINTS, new org.apache.thrift.meta_data.FieldMetaData("orgPoints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POINTS, new org.apache.thrift.meta_data.FieldMetaData("points", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIME, new org.apache.thrift.meta_data.FieldMetaData("time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PROTOCOL_NO, new org.apache.thrift.meta_data.FieldMetaData("protocolNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROTOCOL_TYPE, new org.apache.thrift.meta_data.FieldMetaData("protocolType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_TYPE, new org.apache.thrift.meta_data.FieldMetaData("businessType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_INSTRUCTIONS, new org.apache.thrift.meta_data.FieldMetaData("businessInstructions", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISPLAY_NAME, new org.apache.thrift.meta_data.FieldMetaData("displayName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NO, new org.apache.thrift.meta_data.FieldMetaData("orgNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserEnginePointsRecordVo.class, metaDataMap);
  }

  public UserEnginePointsRecordVo() {
  }

  public UserEnginePointsRecordVo(
    String objectNo,
    String accountNo,
    String partnerNo,
    String orgPoints,
    String points,
    long time,
    String protocolNo,
    String protocolType,
    String businessType,
    String businessInstructions,
    String remark,
    String displayName,
    String orgNo,
    String orderId)
  {
    this();
    this.objectNo = objectNo;
    this.accountNo = accountNo;
    this.partnerNo = partnerNo;
    this.orgPoints = orgPoints;
    this.points = points;
    this.time = time;
    setTimeIsSet(true);
    this.protocolNo = protocolNo;
    this.protocolType = protocolType;
    this.businessType = businessType;
    this.businessInstructions = businessInstructions;
    this.remark = remark;
    this.displayName = displayName;
    this.orgNo = orgNo;
    this.orderId = orderId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserEnginePointsRecordVo(UserEnginePointsRecordVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetObjectNo()) {
      this.objectNo = other.objectNo;
    }
    if (other.isSetAccountNo()) {
      this.accountNo = other.accountNo;
    }
    if (other.isSetPartnerNo()) {
      this.partnerNo = other.partnerNo;
    }
    if (other.isSetOrgPoints()) {
      this.orgPoints = other.orgPoints;
    }
    if (other.isSetPoints()) {
      this.points = other.points;
    }
    this.time = other.time;
    if (other.isSetProtocolNo()) {
      this.protocolNo = other.protocolNo;
    }
    if (other.isSetProtocolType()) {
      this.protocolType = other.protocolType;
    }
    if (other.isSetBusinessType()) {
      this.businessType = other.businessType;
    }
    if (other.isSetBusinessInstructions()) {
      this.businessInstructions = other.businessInstructions;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    if (other.isSetDisplayName()) {
      this.displayName = other.displayName;
    }
    if (other.isSetOrgNo()) {
      this.orgNo = other.orgNo;
    }
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
  }

  public UserEnginePointsRecordVo deepCopy() {
    return new UserEnginePointsRecordVo(this);
  }

  @Override
  public void clear() {
    this.objectNo = null;
    this.accountNo = null;
    this.partnerNo = null;
    this.orgPoints = null;
    this.points = null;
    setTimeIsSet(false);
    this.time = 0;
    this.protocolNo = null;
    this.protocolType = null;
    this.businessType = null;
    this.businessInstructions = null;
    this.remark = null;
    this.displayName = null;
    this.orgNo = null;
    this.orderId = null;
  }

  public String getObjectNo() {
    return this.objectNo;
  }

  public UserEnginePointsRecordVo setObjectNo(String objectNo) {
    this.objectNo = objectNo;
    return this;
  }

  public void unsetObjectNo() {
    this.objectNo = null;
  }

  /** Returns true if field objectNo is set (has been assigned a value) and false otherwise */
  public boolean isSetObjectNo() {
    return this.objectNo != null;
  }

  public void setObjectNoIsSet(boolean value) {
    if (!value) {
      this.objectNo = null;
    }
  }

  public String getAccountNo() {
    return this.accountNo;
  }

  public UserEnginePointsRecordVo setAccountNo(String accountNo) {
    this.accountNo = accountNo;
    return this;
  }

  public void unsetAccountNo() {
    this.accountNo = null;
  }

  /** Returns true if field accountNo is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountNo() {
    return this.accountNo != null;
  }

  public void setAccountNoIsSet(boolean value) {
    if (!value) {
      this.accountNo = null;
    }
  }

  public String getPartnerNo() {
    return this.partnerNo;
  }

  public UserEnginePointsRecordVo setPartnerNo(String partnerNo) {
    this.partnerNo = partnerNo;
    return this;
  }

  public void unsetPartnerNo() {
    this.partnerNo = null;
  }

  /** Returns true if field partnerNo is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerNo() {
    return this.partnerNo != null;
  }

  public void setPartnerNoIsSet(boolean value) {
    if (!value) {
      this.partnerNo = null;
    }
  }

  public String getOrgPoints() {
    return this.orgPoints;
  }

  public UserEnginePointsRecordVo setOrgPoints(String orgPoints) {
    this.orgPoints = orgPoints;
    return this;
  }

  public void unsetOrgPoints() {
    this.orgPoints = null;
  }

  /** Returns true if field orgPoints is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgPoints() {
    return this.orgPoints != null;
  }

  public void setOrgPointsIsSet(boolean value) {
    if (!value) {
      this.orgPoints = null;
    }
  }

  public String getPoints() {
    return this.points;
  }

  public UserEnginePointsRecordVo setPoints(String points) {
    this.points = points;
    return this;
  }

  public void unsetPoints() {
    this.points = null;
  }

  /** Returns true if field points is set (has been assigned a value) and false otherwise */
  public boolean isSetPoints() {
    return this.points != null;
  }

  public void setPointsIsSet(boolean value) {
    if (!value) {
      this.points = null;
    }
  }

  public long getTime() {
    return this.time;
  }

  public UserEnginePointsRecordVo setTime(long time) {
    this.time = time;
    setTimeIsSet(true);
    return this;
  }

  public void unsetTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIME_ISSET_ID);
  }

  /** Returns true if field time is set (has been assigned a value) and false otherwise */
  public boolean isSetTime() {
    return EncodingUtils.testBit(__isset_bitfield, __TIME_ISSET_ID);
  }

  public void setTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIME_ISSET_ID, value);
  }

  public String getProtocolNo() {
    return this.protocolNo;
  }

  public UserEnginePointsRecordVo setProtocolNo(String protocolNo) {
    this.protocolNo = protocolNo;
    return this;
  }

  public void unsetProtocolNo() {
    this.protocolNo = null;
  }

  /** Returns true if field protocolNo is set (has been assigned a value) and false otherwise */
  public boolean isSetProtocolNo() {
    return this.protocolNo != null;
  }

  public void setProtocolNoIsSet(boolean value) {
    if (!value) {
      this.protocolNo = null;
    }
  }

  public String getProtocolType() {
    return this.protocolType;
  }

  public UserEnginePointsRecordVo setProtocolType(String protocolType) {
    this.protocolType = protocolType;
    return this;
  }

  public void unsetProtocolType() {
    this.protocolType = null;
  }

  /** Returns true if field protocolType is set (has been assigned a value) and false otherwise */
  public boolean isSetProtocolType() {
    return this.protocolType != null;
  }

  public void setProtocolTypeIsSet(boolean value) {
    if (!value) {
      this.protocolType = null;
    }
  }

  public String getBusinessType() {
    return this.businessType;
  }

  public UserEnginePointsRecordVo setBusinessType(String businessType) {
    this.businessType = businessType;
    return this;
  }

  public void unsetBusinessType() {
    this.businessType = null;
  }

  /** Returns true if field businessType is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessType() {
    return this.businessType != null;
  }

  public void setBusinessTypeIsSet(boolean value) {
    if (!value) {
      this.businessType = null;
    }
  }

  public String getBusinessInstructions() {
    return this.businessInstructions;
  }

  public UserEnginePointsRecordVo setBusinessInstructions(String businessInstructions) {
    this.businessInstructions = businessInstructions;
    return this;
  }

  public void unsetBusinessInstructions() {
    this.businessInstructions = null;
  }

  /** Returns true if field businessInstructions is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessInstructions() {
    return this.businessInstructions != null;
  }

  public void setBusinessInstructionsIsSet(boolean value) {
    if (!value) {
      this.businessInstructions = null;
    }
  }

  public String getRemark() {
    return this.remark;
  }

  public UserEnginePointsRecordVo setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public String getDisplayName() {
    return this.displayName;
  }

  public UserEnginePointsRecordVo setDisplayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  public void unsetDisplayName() {
    this.displayName = null;
  }

  /** Returns true if field displayName is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayName() {
    return this.displayName != null;
  }

  public void setDisplayNameIsSet(boolean value) {
    if (!value) {
      this.displayName = null;
    }
  }

  public String getOrgNo() {
    return this.orgNo;
  }

  public UserEnginePointsRecordVo setOrgNo(String orgNo) {
    this.orgNo = orgNo;
    return this;
  }

  public void unsetOrgNo() {
    this.orgNo = null;
  }

  /** Returns true if field orgNo is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgNo() {
    return this.orgNo != null;
  }

  public void setOrgNoIsSet(boolean value) {
    if (!value) {
      this.orgNo = null;
    }
  }

  public String getOrderId() {
    return this.orderId;
  }

  public UserEnginePointsRecordVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case OBJECT_NO:
      if (value == null) {
        unsetObjectNo();
      } else {
        setObjectNo((String)value);
      }
      break;

    case ACCOUNT_NO:
      if (value == null) {
        unsetAccountNo();
      } else {
        setAccountNo((String)value);
      }
      break;

    case PARTNER_NO:
      if (value == null) {
        unsetPartnerNo();
      } else {
        setPartnerNo((String)value);
      }
      break;

    case ORG_POINTS:
      if (value == null) {
        unsetOrgPoints();
      } else {
        setOrgPoints((String)value);
      }
      break;

    case POINTS:
      if (value == null) {
        unsetPoints();
      } else {
        setPoints((String)value);
      }
      break;

    case TIME:
      if (value == null) {
        unsetTime();
      } else {
        setTime((Long)value);
      }
      break;

    case PROTOCOL_NO:
      if (value == null) {
        unsetProtocolNo();
      } else {
        setProtocolNo((String)value);
      }
      break;

    case PROTOCOL_TYPE:
      if (value == null) {
        unsetProtocolType();
      } else {
        setProtocolType((String)value);
      }
      break;

    case BUSINESS_TYPE:
      if (value == null) {
        unsetBusinessType();
      } else {
        setBusinessType((String)value);
      }
      break;

    case BUSINESS_INSTRUCTIONS:
      if (value == null) {
        unsetBusinessInstructions();
      } else {
        setBusinessInstructions((String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    case DISPLAY_NAME:
      if (value == null) {
        unsetDisplayName();
      } else {
        setDisplayName((String)value);
      }
      break;

    case ORG_NO:
      if (value == null) {
        unsetOrgNo();
      } else {
        setOrgNo((String)value);
      }
      break;

    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case OBJECT_NO:
      return getObjectNo();

    case ACCOUNT_NO:
      return getAccountNo();

    case PARTNER_NO:
      return getPartnerNo();

    case ORG_POINTS:
      return getOrgPoints();

    case POINTS:
      return getPoints();

    case TIME:
      return Long.valueOf(getTime());

    case PROTOCOL_NO:
      return getProtocolNo();

    case PROTOCOL_TYPE:
      return getProtocolType();

    case BUSINESS_TYPE:
      return getBusinessType();

    case BUSINESS_INSTRUCTIONS:
      return getBusinessInstructions();

    case REMARK:
      return getRemark();

    case DISPLAY_NAME:
      return getDisplayName();

    case ORG_NO:
      return getOrgNo();

    case ORDER_ID:
      return getOrderId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case OBJECT_NO:
      return isSetObjectNo();
    case ACCOUNT_NO:
      return isSetAccountNo();
    case PARTNER_NO:
      return isSetPartnerNo();
    case ORG_POINTS:
      return isSetOrgPoints();
    case POINTS:
      return isSetPoints();
    case TIME:
      return isSetTime();
    case PROTOCOL_NO:
      return isSetProtocolNo();
    case PROTOCOL_TYPE:
      return isSetProtocolType();
    case BUSINESS_TYPE:
      return isSetBusinessType();
    case BUSINESS_INSTRUCTIONS:
      return isSetBusinessInstructions();
    case REMARK:
      return isSetRemark();
    case DISPLAY_NAME:
      return isSetDisplayName();
    case ORG_NO:
      return isSetOrgNo();
    case ORDER_ID:
      return isSetOrderId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof UserEnginePointsRecordVo)
      return this.equals((UserEnginePointsRecordVo)that);
    return false;
  }

  public boolean equals(UserEnginePointsRecordVo that) {
    if (that == null)
      return false;

    boolean this_present_objectNo = true && this.isSetObjectNo();
    boolean that_present_objectNo = true && that.isSetObjectNo();
    if (this_present_objectNo || that_present_objectNo) {
      if (!(this_present_objectNo && that_present_objectNo))
        return false;
      if (!this.objectNo.equals(that.objectNo))
        return false;
    }

    boolean this_present_accountNo = true && this.isSetAccountNo();
    boolean that_present_accountNo = true && that.isSetAccountNo();
    if (this_present_accountNo || that_present_accountNo) {
      if (!(this_present_accountNo && that_present_accountNo))
        return false;
      if (!this.accountNo.equals(that.accountNo))
        return false;
    }

    boolean this_present_partnerNo = true && this.isSetPartnerNo();
    boolean that_present_partnerNo = true && that.isSetPartnerNo();
    if (this_present_partnerNo || that_present_partnerNo) {
      if (!(this_present_partnerNo && that_present_partnerNo))
        return false;
      if (!this.partnerNo.equals(that.partnerNo))
        return false;
    }

    boolean this_present_orgPoints = true && this.isSetOrgPoints();
    boolean that_present_orgPoints = true && that.isSetOrgPoints();
    if (this_present_orgPoints || that_present_orgPoints) {
      if (!(this_present_orgPoints && that_present_orgPoints))
        return false;
      if (!this.orgPoints.equals(that.orgPoints))
        return false;
    }

    boolean this_present_points = true && this.isSetPoints();
    boolean that_present_points = true && that.isSetPoints();
    if (this_present_points || that_present_points) {
      if (!(this_present_points && that_present_points))
        return false;
      if (!this.points.equals(that.points))
        return false;
    }

    boolean this_present_time = true;
    boolean that_present_time = true;
    if (this_present_time || that_present_time) {
      if (!(this_present_time && that_present_time))
        return false;
      if (this.time != that.time)
        return false;
    }

    boolean this_present_protocolNo = true && this.isSetProtocolNo();
    boolean that_present_protocolNo = true && that.isSetProtocolNo();
    if (this_present_protocolNo || that_present_protocolNo) {
      if (!(this_present_protocolNo && that_present_protocolNo))
        return false;
      if (!this.protocolNo.equals(that.protocolNo))
        return false;
    }

    boolean this_present_protocolType = true && this.isSetProtocolType();
    boolean that_present_protocolType = true && that.isSetProtocolType();
    if (this_present_protocolType || that_present_protocolType) {
      if (!(this_present_protocolType && that_present_protocolType))
        return false;
      if (!this.protocolType.equals(that.protocolType))
        return false;
    }

    boolean this_present_businessType = true && this.isSetBusinessType();
    boolean that_present_businessType = true && that.isSetBusinessType();
    if (this_present_businessType || that_present_businessType) {
      if (!(this_present_businessType && that_present_businessType))
        return false;
      if (!this.businessType.equals(that.businessType))
        return false;
    }

    boolean this_present_businessInstructions = true && this.isSetBusinessInstructions();
    boolean that_present_businessInstructions = true && that.isSetBusinessInstructions();
    if (this_present_businessInstructions || that_present_businessInstructions) {
      if (!(this_present_businessInstructions && that_present_businessInstructions))
        return false;
      if (!this.businessInstructions.equals(that.businessInstructions))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_displayName = true && this.isSetDisplayName();
    boolean that_present_displayName = true && that.isSetDisplayName();
    if (this_present_displayName || that_present_displayName) {
      if (!(this_present_displayName && that_present_displayName))
        return false;
      if (!this.displayName.equals(that.displayName))
        return false;
    }

    boolean this_present_orgNo = true && this.isSetOrgNo();
    boolean that_present_orgNo = true && that.isSetOrgNo();
    if (this_present_orgNo || that_present_orgNo) {
      if (!(this_present_orgNo && that_present_orgNo))
        return false;
      if (!this.orgNo.equals(that.orgNo))
        return false;
    }

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_objectNo = true && (isSetObjectNo());
    list.add(present_objectNo);
    if (present_objectNo)
      list.add(objectNo);

    boolean present_accountNo = true && (isSetAccountNo());
    list.add(present_accountNo);
    if (present_accountNo)
      list.add(accountNo);

    boolean present_partnerNo = true && (isSetPartnerNo());
    list.add(present_partnerNo);
    if (present_partnerNo)
      list.add(partnerNo);

    boolean present_orgPoints = true && (isSetOrgPoints());
    list.add(present_orgPoints);
    if (present_orgPoints)
      list.add(orgPoints);

    boolean present_points = true && (isSetPoints());
    list.add(present_points);
    if (present_points)
      list.add(points);

    boolean present_time = true;
    list.add(present_time);
    if (present_time)
      list.add(time);

    boolean present_protocolNo = true && (isSetProtocolNo());
    list.add(present_protocolNo);
    if (present_protocolNo)
      list.add(protocolNo);

    boolean present_protocolType = true && (isSetProtocolType());
    list.add(present_protocolType);
    if (present_protocolType)
      list.add(protocolType);

    boolean present_businessType = true && (isSetBusinessType());
    list.add(present_businessType);
    if (present_businessType)
      list.add(businessType);

    boolean present_businessInstructions = true && (isSetBusinessInstructions());
    list.add(present_businessInstructions);
    if (present_businessInstructions)
      list.add(businessInstructions);

    boolean present_remark = true && (isSetRemark());
    list.add(present_remark);
    if (present_remark)
      list.add(remark);

    boolean present_displayName = true && (isSetDisplayName());
    list.add(present_displayName);
    if (present_displayName)
      list.add(displayName);

    boolean present_orgNo = true && (isSetOrgNo());
    list.add(present_orgNo);
    if (present_orgNo)
      list.add(orgNo);

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    return list.hashCode();
  }

  @Override
  public int compareTo(UserEnginePointsRecordVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetObjectNo()).compareTo(other.isSetObjectNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObjectNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectNo, other.objectNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountNo()).compareTo(other.isSetAccountNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountNo, other.accountNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerNo()).compareTo(other.isSetPartnerNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerNo, other.partnerNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgPoints()).compareTo(other.isSetOrgPoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgPoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgPoints, other.orgPoints);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoints()).compareTo(other.isSetPoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.points, other.points);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTime()).compareTo(other.isSetTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.time, other.time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProtocolNo()).compareTo(other.isSetProtocolNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProtocolNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.protocolNo, other.protocolNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProtocolType()).compareTo(other.isSetProtocolType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProtocolType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.protocolType, other.protocolType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessType()).compareTo(other.isSetBusinessType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessType, other.businessType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessInstructions()).compareTo(other.isSetBusinessInstructions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessInstructions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessInstructions, other.businessInstructions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisplayName()).compareTo(other.isSetDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayName, other.displayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgNo()).compareTo(other.isSetOrgNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgNo, other.orgNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("UserEnginePointsRecordVo(");
    boolean first = true;

    sb.append("objectNo:");
    if (this.objectNo == null) {
      sb.append("null");
    } else {
      sb.append(this.objectNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountNo:");
    if (this.accountNo == null) {
      sb.append("null");
    } else {
      sb.append(this.accountNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerNo:");
    if (this.partnerNo == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgPoints:");
    if (this.orgPoints == null) {
      sb.append("null");
    } else {
      sb.append(this.orgPoints);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("points:");
    if (this.points == null) {
      sb.append("null");
    } else {
      sb.append(this.points);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("time:");
    sb.append(this.time);
    first = false;
    if (!first) sb.append(", ");
    sb.append("protocolNo:");
    if (this.protocolNo == null) {
      sb.append("null");
    } else {
      sb.append(this.protocolNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("protocolType:");
    if (this.protocolType == null) {
      sb.append("null");
    } else {
      sb.append(this.protocolType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessType:");
    if (this.businessType == null) {
      sb.append("null");
    } else {
      sb.append(this.businessType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessInstructions:");
    if (this.businessInstructions == null) {
      sb.append("null");
    } else {
      sb.append(this.businessInstructions);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("remark:");
    if (this.remark == null) {
      sb.append("null");
    } else {
      sb.append(this.remark);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayName:");
    if (this.displayName == null) {
      sb.append("null");
    } else {
      sb.append(this.displayName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgNo:");
    if (this.orgNo == null) {
      sb.append("null");
    } else {
      sb.append(this.orgNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserEnginePointsRecordVoStandardSchemeFactory implements SchemeFactory {
    public UserEnginePointsRecordVoStandardScheme getScheme() {
      return new UserEnginePointsRecordVoStandardScheme();
    }
  }

  private static class UserEnginePointsRecordVoStandardScheme extends StandardScheme<UserEnginePointsRecordVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserEnginePointsRecordVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // OBJECT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.objectNo = iprot.readString();
              struct.setObjectNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ACCOUNT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountNo = iprot.readString();
              struct.setAccountNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PARTNER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerNo = iprot.readString();
              struct.setPartnerNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORG_POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgPoints = iprot.readString();
              struct.setOrgPointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.points = iprot.readString();
              struct.setPointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.time = iprot.readI64();
              struct.setTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PROTOCOL_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.protocolNo = iprot.readString();
              struct.setProtocolNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PROTOCOL_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.protocolType = iprot.readString();
              struct.setProtocolTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // BUSINESS_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessType = iprot.readString();
              struct.setBusinessTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BUSINESS_INSTRUCTIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessInstructions = iprot.readString();
              struct.setBusinessInstructionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DISPLAY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.displayName = iprot.readString();
              struct.setDisplayNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ORG_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgNo = iprot.readString();
              struct.setOrgNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserEnginePointsRecordVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.objectNo != null) {
        oprot.writeFieldBegin(OBJECT_NO_FIELD_DESC);
        oprot.writeString(struct.objectNo);
        oprot.writeFieldEnd();
      }
      if (struct.accountNo != null) {
        oprot.writeFieldBegin(ACCOUNT_NO_FIELD_DESC);
        oprot.writeString(struct.accountNo);
        oprot.writeFieldEnd();
      }
      if (struct.partnerNo != null) {
        oprot.writeFieldBegin(PARTNER_NO_FIELD_DESC);
        oprot.writeString(struct.partnerNo);
        oprot.writeFieldEnd();
      }
      if (struct.orgPoints != null) {
        oprot.writeFieldBegin(ORG_POINTS_FIELD_DESC);
        oprot.writeString(struct.orgPoints);
        oprot.writeFieldEnd();
      }
      if (struct.points != null) {
        oprot.writeFieldBegin(POINTS_FIELD_DESC);
        oprot.writeString(struct.points);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TIME_FIELD_DESC);
      oprot.writeI64(struct.time);
      oprot.writeFieldEnd();
      if (struct.protocolNo != null) {
        oprot.writeFieldBegin(PROTOCOL_NO_FIELD_DESC);
        oprot.writeString(struct.protocolNo);
        oprot.writeFieldEnd();
      }
      if (struct.protocolType != null) {
        oprot.writeFieldBegin(PROTOCOL_TYPE_FIELD_DESC);
        oprot.writeString(struct.protocolType);
        oprot.writeFieldEnd();
      }
      if (struct.businessType != null) {
        oprot.writeFieldBegin(BUSINESS_TYPE_FIELD_DESC);
        oprot.writeString(struct.businessType);
        oprot.writeFieldEnd();
      }
      if (struct.businessInstructions != null) {
        oprot.writeFieldBegin(BUSINESS_INSTRUCTIONS_FIELD_DESC);
        oprot.writeString(struct.businessInstructions);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        oprot.writeFieldBegin(REMARK_FIELD_DESC);
        oprot.writeString(struct.remark);
        oprot.writeFieldEnd();
      }
      if (struct.displayName != null) {
        oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
        oprot.writeString(struct.displayName);
        oprot.writeFieldEnd();
      }
      if (struct.orgNo != null) {
        oprot.writeFieldBegin(ORG_NO_FIELD_DESC);
        oprot.writeString(struct.orgNo);
        oprot.writeFieldEnd();
      }
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserEnginePointsRecordVoTupleSchemeFactory implements SchemeFactory {
    public UserEnginePointsRecordVoTupleScheme getScheme() {
      return new UserEnginePointsRecordVoTupleScheme();
    }
  }

  private static class UserEnginePointsRecordVoTupleScheme extends TupleScheme<UserEnginePointsRecordVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserEnginePointsRecordVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetObjectNo()) {
        optionals.set(0);
      }
      if (struct.isSetAccountNo()) {
        optionals.set(1);
      }
      if (struct.isSetPartnerNo()) {
        optionals.set(2);
      }
      if (struct.isSetOrgPoints()) {
        optionals.set(3);
      }
      if (struct.isSetPoints()) {
        optionals.set(4);
      }
      if (struct.isSetTime()) {
        optionals.set(5);
      }
      if (struct.isSetProtocolNo()) {
        optionals.set(6);
      }
      if (struct.isSetProtocolType()) {
        optionals.set(7);
      }
      if (struct.isSetBusinessType()) {
        optionals.set(8);
      }
      if (struct.isSetBusinessInstructions()) {
        optionals.set(9);
      }
      if (struct.isSetRemark()) {
        optionals.set(10);
      }
      if (struct.isSetDisplayName()) {
        optionals.set(11);
      }
      if (struct.isSetOrgNo()) {
        optionals.set(12);
      }
      if (struct.isSetOrderId()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetObjectNo()) {
        oprot.writeString(struct.objectNo);
      }
      if (struct.isSetAccountNo()) {
        oprot.writeString(struct.accountNo);
      }
      if (struct.isSetPartnerNo()) {
        oprot.writeString(struct.partnerNo);
      }
      if (struct.isSetOrgPoints()) {
        oprot.writeString(struct.orgPoints);
      }
      if (struct.isSetPoints()) {
        oprot.writeString(struct.points);
      }
      if (struct.isSetTime()) {
        oprot.writeI64(struct.time);
      }
      if (struct.isSetProtocolNo()) {
        oprot.writeString(struct.protocolNo);
      }
      if (struct.isSetProtocolType()) {
        oprot.writeString(struct.protocolType);
      }
      if (struct.isSetBusinessType()) {
        oprot.writeString(struct.businessType);
      }
      if (struct.isSetBusinessInstructions()) {
        oprot.writeString(struct.businessInstructions);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetDisplayName()) {
        oprot.writeString(struct.displayName);
      }
      if (struct.isSetOrgNo()) {
        oprot.writeString(struct.orgNo);
      }
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserEnginePointsRecordVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.objectNo = iprot.readString();
        struct.setObjectNoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.accountNo = iprot.readString();
        struct.setAccountNoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.partnerNo = iprot.readString();
        struct.setPartnerNoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.orgPoints = iprot.readString();
        struct.setOrgPointsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.points = iprot.readString();
        struct.setPointsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.time = iprot.readI64();
        struct.setTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.protocolNo = iprot.readString();
        struct.setProtocolNoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.protocolType = iprot.readString();
        struct.setProtocolTypeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.businessType = iprot.readString();
        struct.setBusinessTypeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.businessInstructions = iprot.readString();
        struct.setBusinessInstructionsIsSet(true);
      }
      if (incoming.get(10)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(11)) {
        struct.displayName = iprot.readString();
        struct.setDisplayNameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.orgNo = iprot.readString();
        struct.setOrgNoIsSet(true);
      }
      if (incoming.get(13)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
    }
  }

}

