/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 大订单显示全部子订单内容
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class OrderDetailRes implements org.apache.thrift.TBase<OrderDetailRes, OrderDetailRes._Fields>, java.io.Serializable, Cloneable, Comparable<OrderDetailRes> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrderDetailRes");

  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField ORDER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("orderStatus", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField POINT_DISCOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("pointDiscount", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField TOTAL_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("totalMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField SUB_ORDER_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("subOrderVo", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField RESULT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("resultVo", org.apache.thrift.protocol.TType.STRUCT, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrderDetailResStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrderDetailResTupleSchemeFactory());
  }

  /**
   * 订单创建时间
   */
  public long createTime; // required
  /**
   * 订单状态
   */
  public String orderStatus; // required
  /**
   * 积分抵扣
   */
  public double pointDiscount; // required
  /**
   * 金额总计
   */
  public double totalMoney; // required
  /**
   * 子订单列表
   */
  public List<SubOrderVo> subOrderVo; // required
  /**
   * 响应结果
   */
  public com.froad.thrift.vo.ResultVo resultVo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 订单创建时间
     */
    CREATE_TIME((short)1, "createTime"),
    /**
     * 订单状态
     */
    ORDER_STATUS((short)2, "orderStatus"),
    /**
     * 积分抵扣
     */
    POINT_DISCOUNT((short)3, "pointDiscount"),
    /**
     * 金额总计
     */
    TOTAL_MONEY((short)4, "totalMoney"),
    /**
     * 子订单列表
     */
    SUB_ORDER_VO((short)5, "subOrderVo"),
    /**
     * 响应结果
     */
    RESULT_VO((short)6, "resultVo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CREATE_TIME
          return CREATE_TIME;
        case 2: // ORDER_STATUS
          return ORDER_STATUS;
        case 3: // POINT_DISCOUNT
          return POINT_DISCOUNT;
        case 4: // TOTAL_MONEY
          return TOTAL_MONEY;
        case 5: // SUB_ORDER_VO
          return SUB_ORDER_VO;
        case 6: // RESULT_VO
          return RESULT_VO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIME_ISSET_ID = 0;
  private static final int __POINTDISCOUNT_ISSET_ID = 1;
  private static final int __TOTALMONEY_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ORDER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("orderStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POINT_DISCOUNT, new org.apache.thrift.meta_data.FieldMetaData("pointDiscount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TOTAL_MONEY, new org.apache.thrift.meta_data.FieldMetaData("totalMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SUB_ORDER_VO, new org.apache.thrift.meta_data.FieldMetaData("subOrderVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SubOrderVo.class))));
    tmpMap.put(_Fields.RESULT_VO, new org.apache.thrift.meta_data.FieldMetaData("resultVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrderDetailRes.class, metaDataMap);
  }

  public OrderDetailRes() {
  }

  public OrderDetailRes(
    long createTime,
    String orderStatus,
    double pointDiscount,
    double totalMoney,
    List<SubOrderVo> subOrderVo,
    com.froad.thrift.vo.ResultVo resultVo)
  {
    this();
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.orderStatus = orderStatus;
    this.pointDiscount = pointDiscount;
    setPointDiscountIsSet(true);
    this.totalMoney = totalMoney;
    setTotalMoneyIsSet(true);
    this.subOrderVo = subOrderVo;
    this.resultVo = resultVo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrderDetailRes(OrderDetailRes other) {
    __isset_bitfield = other.__isset_bitfield;
    this.createTime = other.createTime;
    if (other.isSetOrderStatus()) {
      this.orderStatus = other.orderStatus;
    }
    this.pointDiscount = other.pointDiscount;
    this.totalMoney = other.totalMoney;
    if (other.isSetSubOrderVo()) {
      List<SubOrderVo> __this__subOrderVo = new ArrayList<SubOrderVo>(other.subOrderVo.size());
      for (SubOrderVo other_element : other.subOrderVo) {
        __this__subOrderVo.add(new SubOrderVo(other_element));
      }
      this.subOrderVo = __this__subOrderVo;
    }
    if (other.isSetResultVo()) {
      this.resultVo = new com.froad.thrift.vo.ResultVo(other.resultVo);
    }
  }

  public OrderDetailRes deepCopy() {
    return new OrderDetailRes(this);
  }

  @Override
  public void clear() {
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.orderStatus = null;
    setPointDiscountIsSet(false);
    this.pointDiscount = 0.0;
    setTotalMoneyIsSet(false);
    this.totalMoney = 0.0;
    this.subOrderVo = null;
    this.resultVo = null;
  }

  /**
   * 订单创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 订单创建时间
   */
  public OrderDetailRes setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 订单状态
   */
  public String getOrderStatus() {
    return this.orderStatus;
  }

  /**
   * 订单状态
   */
  public OrderDetailRes setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

  public void unsetOrderStatus() {
    this.orderStatus = null;
  }

  /** Returns true if field orderStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderStatus() {
    return this.orderStatus != null;
  }

  public void setOrderStatusIsSet(boolean value) {
    if (!value) {
      this.orderStatus = null;
    }
  }

  /**
   * 积分抵扣
   */
  public double getPointDiscount() {
    return this.pointDiscount;
  }

  /**
   * 积分抵扣
   */
  public OrderDetailRes setPointDiscount(double pointDiscount) {
    this.pointDiscount = pointDiscount;
    setPointDiscountIsSet(true);
    return this;
  }

  public void unsetPointDiscount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __POINTDISCOUNT_ISSET_ID);
  }

  /** Returns true if field pointDiscount is set (has been assigned a value) and false otherwise */
  public boolean isSetPointDiscount() {
    return EncodingUtils.testBit(__isset_bitfield, __POINTDISCOUNT_ISSET_ID);
  }

  public void setPointDiscountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __POINTDISCOUNT_ISSET_ID, value);
  }

  /**
   * 金额总计
   */
  public double getTotalMoney() {
    return this.totalMoney;
  }

  /**
   * 金额总计
   */
  public OrderDetailRes setTotalMoney(double totalMoney) {
    this.totalMoney = totalMoney;
    setTotalMoneyIsSet(true);
    return this;
  }

  public void unsetTotalMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALMONEY_ISSET_ID);
  }

  /** Returns true if field totalMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALMONEY_ISSET_ID);
  }

  public void setTotalMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALMONEY_ISSET_ID, value);
  }

  public int getSubOrderVoSize() {
    return (this.subOrderVo == null) ? 0 : this.subOrderVo.size();
  }

  public java.util.Iterator<SubOrderVo> getSubOrderVoIterator() {
    return (this.subOrderVo == null) ? null : this.subOrderVo.iterator();
  }

  public void addToSubOrderVo(SubOrderVo elem) {
    if (this.subOrderVo == null) {
      this.subOrderVo = new ArrayList<SubOrderVo>();
    }
    this.subOrderVo.add(elem);
  }

  /**
   * 子订单列表
   */
  public List<SubOrderVo> getSubOrderVo() {
    return this.subOrderVo;
  }

  /**
   * 子订单列表
   */
  public OrderDetailRes setSubOrderVo(List<SubOrderVo> subOrderVo) {
    this.subOrderVo = subOrderVo;
    return this;
  }

  public void unsetSubOrderVo() {
    this.subOrderVo = null;
  }

  /** Returns true if field subOrderVo is set (has been assigned a value) and false otherwise */
  public boolean isSetSubOrderVo() {
    return this.subOrderVo != null;
  }

  public void setSubOrderVoIsSet(boolean value) {
    if (!value) {
      this.subOrderVo = null;
    }
  }

  /**
   * 响应结果
   */
  public com.froad.thrift.vo.ResultVo getResultVo() {
    return this.resultVo;
  }

  /**
   * 响应结果
   */
  public OrderDetailRes setResultVo(com.froad.thrift.vo.ResultVo resultVo) {
    this.resultVo = resultVo;
    return this;
  }

  public void unsetResultVo() {
    this.resultVo = null;
  }

  /** Returns true if field resultVo is set (has been assigned a value) and false otherwise */
  public boolean isSetResultVo() {
    return this.resultVo != null;
  }

  public void setResultVoIsSet(boolean value) {
    if (!value) {
      this.resultVo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case ORDER_STATUS:
      if (value == null) {
        unsetOrderStatus();
      } else {
        setOrderStatus((String)value);
      }
      break;

    case POINT_DISCOUNT:
      if (value == null) {
        unsetPointDiscount();
      } else {
        setPointDiscount((Double)value);
      }
      break;

    case TOTAL_MONEY:
      if (value == null) {
        unsetTotalMoney();
      } else {
        setTotalMoney((Double)value);
      }
      break;

    case SUB_ORDER_VO:
      if (value == null) {
        unsetSubOrderVo();
      } else {
        setSubOrderVo((List<SubOrderVo>)value);
      }
      break;

    case RESULT_VO:
      if (value == null) {
        unsetResultVo();
      } else {
        setResultVo((com.froad.thrift.vo.ResultVo)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case ORDER_STATUS:
      return getOrderStatus();

    case POINT_DISCOUNT:
      return Double.valueOf(getPointDiscount());

    case TOTAL_MONEY:
      return Double.valueOf(getTotalMoney());

    case SUB_ORDER_VO:
      return getSubOrderVo();

    case RESULT_VO:
      return getResultVo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CREATE_TIME:
      return isSetCreateTime();
    case ORDER_STATUS:
      return isSetOrderStatus();
    case POINT_DISCOUNT:
      return isSetPointDiscount();
    case TOTAL_MONEY:
      return isSetTotalMoney();
    case SUB_ORDER_VO:
      return isSetSubOrderVo();
    case RESULT_VO:
      return isSetResultVo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrderDetailRes)
      return this.equals((OrderDetailRes)that);
    return false;
  }

  public boolean equals(OrderDetailRes that) {
    if (that == null)
      return false;

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_orderStatus = true && this.isSetOrderStatus();
    boolean that_present_orderStatus = true && that.isSetOrderStatus();
    if (this_present_orderStatus || that_present_orderStatus) {
      if (!(this_present_orderStatus && that_present_orderStatus))
        return false;
      if (!this.orderStatus.equals(that.orderStatus))
        return false;
    }

    boolean this_present_pointDiscount = true;
    boolean that_present_pointDiscount = true;
    if (this_present_pointDiscount || that_present_pointDiscount) {
      if (!(this_present_pointDiscount && that_present_pointDiscount))
        return false;
      if (this.pointDiscount != that.pointDiscount)
        return false;
    }

    boolean this_present_totalMoney = true;
    boolean that_present_totalMoney = true;
    if (this_present_totalMoney || that_present_totalMoney) {
      if (!(this_present_totalMoney && that_present_totalMoney))
        return false;
      if (this.totalMoney != that.totalMoney)
        return false;
    }

    boolean this_present_subOrderVo = true && this.isSetSubOrderVo();
    boolean that_present_subOrderVo = true && that.isSetSubOrderVo();
    if (this_present_subOrderVo || that_present_subOrderVo) {
      if (!(this_present_subOrderVo && that_present_subOrderVo))
        return false;
      if (!this.subOrderVo.equals(that.subOrderVo))
        return false;
    }

    boolean this_present_resultVo = true && this.isSetResultVo();
    boolean that_present_resultVo = true && that.isSetResultVo();
    if (this_present_resultVo || that_present_resultVo) {
      if (!(this_present_resultVo && that_present_resultVo))
        return false;
      if (!this.resultVo.equals(that.resultVo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_orderStatus = true && (isSetOrderStatus());
    list.add(present_orderStatus);
    if (present_orderStatus)
      list.add(orderStatus);

    boolean present_pointDiscount = true;
    list.add(present_pointDiscount);
    if (present_pointDiscount)
      list.add(pointDiscount);

    boolean present_totalMoney = true;
    list.add(present_totalMoney);
    if (present_totalMoney)
      list.add(totalMoney);

    boolean present_subOrderVo = true && (isSetSubOrderVo());
    list.add(present_subOrderVo);
    if (present_subOrderVo)
      list.add(subOrderVo);

    boolean present_resultVo = true && (isSetResultVo());
    list.add(present_resultVo);
    if (present_resultVo)
      list.add(resultVo);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrderDetailRes other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderStatus()).compareTo(other.isSetOrderStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderStatus, other.orderStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPointDiscount()).compareTo(other.isSetPointDiscount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPointDiscount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pointDiscount, other.pointDiscount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalMoney()).compareTo(other.isSetTotalMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalMoney, other.totalMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubOrderVo()).compareTo(other.isSetSubOrderVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubOrderVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subOrderVo, other.subOrderVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultVo()).compareTo(other.isSetResultVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultVo, other.resultVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrderDetailRes(");
    boolean first = true;

    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderStatus:");
    if (this.orderStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.orderStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pointDiscount:");
    sb.append(this.pointDiscount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalMoney:");
    sb.append(this.totalMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("subOrderVo:");
    if (this.subOrderVo == null) {
      sb.append("null");
    } else {
      sb.append(this.subOrderVo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultVo:");
    if (this.resultVo == null) {
      sb.append("null");
    } else {
      sb.append(this.resultVo);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (resultVo != null) {
      resultVo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrderDetailResStandardSchemeFactory implements SchemeFactory {
    public OrderDetailResStandardScheme getScheme() {
      return new OrderDetailResStandardScheme();
    }
  }

  private static class OrderDetailResStandardScheme extends StandardScheme<OrderDetailRes> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrderDetailRes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ORDER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderStatus = iprot.readString();
              struct.setOrderStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // POINT_DISCOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.pointDiscount = iprot.readDouble();
              struct.setPointDiscountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TOTAL_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalMoney = iprot.readDouble();
              struct.setTotalMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SUB_ORDER_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list152 = iprot.readListBegin();
                struct.subOrderVo = new ArrayList<SubOrderVo>(_list152.size);
                SubOrderVo _elem153;
                for (int _i154 = 0; _i154 < _list152.size; ++_i154)
                {
                  _elem153 = new SubOrderVo();
                  _elem153.read(iprot);
                  struct.subOrderVo.add(_elem153);
                }
                iprot.readListEnd();
              }
              struct.setSubOrderVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RESULT_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.resultVo = new com.froad.thrift.vo.ResultVo();
              struct.resultVo.read(iprot);
              struct.setResultVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrderDetailRes struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.orderStatus != null) {
        oprot.writeFieldBegin(ORDER_STATUS_FIELD_DESC);
        oprot.writeString(struct.orderStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(POINT_DISCOUNT_FIELD_DESC);
      oprot.writeDouble(struct.pointDiscount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.totalMoney);
      oprot.writeFieldEnd();
      if (struct.subOrderVo != null) {
        oprot.writeFieldBegin(SUB_ORDER_VO_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.subOrderVo.size()));
          for (SubOrderVo _iter155 : struct.subOrderVo)
          {
            _iter155.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.resultVo != null) {
        oprot.writeFieldBegin(RESULT_VO_FIELD_DESC);
        struct.resultVo.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrderDetailResTupleSchemeFactory implements SchemeFactory {
    public OrderDetailResTupleScheme getScheme() {
      return new OrderDetailResTupleScheme();
    }
  }

  private static class OrderDetailResTupleScheme extends TupleScheme<OrderDetailRes> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrderDetailRes struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCreateTime()) {
        optionals.set(0);
      }
      if (struct.isSetOrderStatus()) {
        optionals.set(1);
      }
      if (struct.isSetPointDiscount()) {
        optionals.set(2);
      }
      if (struct.isSetTotalMoney()) {
        optionals.set(3);
      }
      if (struct.isSetSubOrderVo()) {
        optionals.set(4);
      }
      if (struct.isSetResultVo()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetOrderStatus()) {
        oprot.writeString(struct.orderStatus);
      }
      if (struct.isSetPointDiscount()) {
        oprot.writeDouble(struct.pointDiscount);
      }
      if (struct.isSetTotalMoney()) {
        oprot.writeDouble(struct.totalMoney);
      }
      if (struct.isSetSubOrderVo()) {
        {
          oprot.writeI32(struct.subOrderVo.size());
          for (SubOrderVo _iter156 : struct.subOrderVo)
          {
            _iter156.write(oprot);
          }
        }
      }
      if (struct.isSetResultVo()) {
        struct.resultVo.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrderDetailRes struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.orderStatus = iprot.readString();
        struct.setOrderStatusIsSet(true);
      }
      if (incoming.get(2)) {
        struct.pointDiscount = iprot.readDouble();
        struct.setPointDiscountIsSet(true);
      }
      if (incoming.get(3)) {
        struct.totalMoney = iprot.readDouble();
        struct.setTotalMoneyIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list157 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.subOrderVo = new ArrayList<SubOrderVo>(_list157.size);
          SubOrderVo _elem158;
          for (int _i159 = 0; _i159 < _list157.size; ++_i159)
          {
            _elem158 = new SubOrderVo();
            _elem158.read(iprot);
            struct.subOrderVo.add(_elem158);
          }
        }
        struct.setSubOrderVoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.resultVo = new com.froad.thrift.vo.ResultVo();
        struct.resultVo.read(iprot);
        struct.setResultVoIsSet(true);
      }
    }
  }

}

