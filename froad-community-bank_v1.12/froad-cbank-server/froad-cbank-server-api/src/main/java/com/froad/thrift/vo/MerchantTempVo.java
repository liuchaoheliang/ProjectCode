/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商户修改审核变更表
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MerchantTempVo implements org.apache.thrift.TBase<MerchantTempVo, MerchantTempVo._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantTempVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantTempVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AUDIT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("auditId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CONTACT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("contactName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField MERCHANT_CATEGORY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantCategoryId", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField MERCHANT_CATEGORY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantCategoryName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField MERCHANT_TYPE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantTypeId", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField MERCHANT_TYPE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantTypeName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField MERCHANT_TYPE_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantTypeValue", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField LEGAL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("legalName", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField LEGAL_CREDENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("legalCredentType", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField LEGAL_CREDENT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("legalCredentNo", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField CITY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("cityOrgCode", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField CITY_ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cityOrgName", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField COUNTY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("countyOrgCode", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField COUNTY_ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("countyOrgName", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("accountName", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField ACOUNT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("acountNo", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField LOGIN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("loginName", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField LOGIN_MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("loginMobile", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField PRIMEVAL_FIELD_DESC = new org.apache.thrift.protocol.TField("primeval", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField CONTACT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("contactPhone", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField LICENSE_FIELD_DESC = new org.apache.thrift.protocol.TField("license", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField CONTRACT_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("contractStaff", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField IS_OUTSOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("isOutsource", org.apache.thrift.protocol.TType.BOOL, (short)31);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I64, (short)32);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantTempVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantTempVoTupleSchemeFactory());
  }

  /**
   * 主键ID
   */
  public long id; // optional
  /**
   * 创建时间
   */
  public long createTime; // optional
  /**
   * 客户端ID
   */
  public String clientId; // optional
  /**
   * 审核订单号
   */
  public String auditId; // optional
  /**
   * 商户ID
   */
  public String merchantId; // optional
  /**
   * 联系人姓名
   */
  public String contactName; // optional
  /**
   * 商户分类ID
   */
  public long merchantCategoryId; // optional
  /**
   * 商户分类名称
   */
  public String merchantCategoryName; // optional
  /**
   * 商户类型ID，用逗号分隔
   */
  public String merchantTypeId; // optional
  /**
   * 商户类型名称，用逗号分隔
   */
  public String merchantTypeName; // optional
  /**
   * 商户类型值，用逗号分隔
   */
  public String merchantTypeValue; // optional
  /**
   * 法人姓名
   */
  public String legalName; // optional
  /**
   * 法人证件号类型
   */
  public String legalCredentType; // optional
  /**
   * 法人证件号
   */
  public String legalCredentNo; // optional
  /**
   * 开户行机构号
   */
  public String orgCode; // optional
  /**
   * 开户行机构名称
   */
  public String orgName; // optional
  /**
   * 所属分行机构代码
   */
  public String cityOrgCode; // optional
  /**
   * 所属分行机构名称
   */
  public String cityOrgName; // optional
  /**
   * 所属网点机构代码
   */
  public String countyOrgCode; // optional
  /**
   * 所属网点机构名称
   */
  public String countyOrgName; // optional
  /**
   * 收款账户名
   */
  public String accountName; // optional
  /**
   * 收款账户号
   */
  public String acountNo; // optional
  /**
   * 登录账号
   */
  public String loginName; // optional
  /**
   * 登录人手机号
   */
  public String loginMobile; // optional
  /**
   * 商户原始值
   */
  public String primeval; // optional
  /**
   * 商户名称
   */
  public String merchantName; // optional
  /**
   * 联系人电话
   */
  public String phone; // optional
  /**
   * 联系人手机
   */
  public String contactPhone; // optional
  /**
   * 营业执照
   */
  public String license; // optional
  /**
   * 签约人
   */
  public String contractStaff; // optional
  /**
   * 是否外包[false=否,true=是]
   */
  public boolean isOutsource; // optional
  /**
   * 外包公司id
   */
  public long companyId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键ID
     */
    ID((short)1, "id"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)2, "createTime"),
    /**
     * 客户端ID
     */
    CLIENT_ID((short)3, "clientId"),
    /**
     * 审核订单号
     */
    AUDIT_ID((short)4, "auditId"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)5, "merchantId"),
    /**
     * 联系人姓名
     */
    CONTACT_NAME((short)6, "contactName"),
    /**
     * 商户分类ID
     */
    MERCHANT_CATEGORY_ID((short)7, "merchantCategoryId"),
    /**
     * 商户分类名称
     */
    MERCHANT_CATEGORY_NAME((short)8, "merchantCategoryName"),
    /**
     * 商户类型ID，用逗号分隔
     */
    MERCHANT_TYPE_ID((short)9, "merchantTypeId"),
    /**
     * 商户类型名称，用逗号分隔
     */
    MERCHANT_TYPE_NAME((short)10, "merchantTypeName"),
    /**
     * 商户类型值，用逗号分隔
     */
    MERCHANT_TYPE_VALUE((short)11, "merchantTypeValue"),
    /**
     * 法人姓名
     */
    LEGAL_NAME((short)12, "legalName"),
    /**
     * 法人证件号类型
     */
    LEGAL_CREDENT_TYPE((short)13, "legalCredentType"),
    /**
     * 法人证件号
     */
    LEGAL_CREDENT_NO((short)14, "legalCredentNo"),
    /**
     * 开户行机构号
     */
    ORG_CODE((short)15, "orgCode"),
    /**
     * 开户行机构名称
     */
    ORG_NAME((short)16, "orgName"),
    /**
     * 所属分行机构代码
     */
    CITY_ORG_CODE((short)17, "cityOrgCode"),
    /**
     * 所属分行机构名称
     */
    CITY_ORG_NAME((short)18, "cityOrgName"),
    /**
     * 所属网点机构代码
     */
    COUNTY_ORG_CODE((short)19, "countyOrgCode"),
    /**
     * 所属网点机构名称
     */
    COUNTY_ORG_NAME((short)20, "countyOrgName"),
    /**
     * 收款账户名
     */
    ACCOUNT_NAME((short)21, "accountName"),
    /**
     * 收款账户号
     */
    ACOUNT_NO((short)22, "acountNo"),
    /**
     * 登录账号
     */
    LOGIN_NAME((short)23, "loginName"),
    /**
     * 登录人手机号
     */
    LOGIN_MOBILE((short)24, "loginMobile"),
    /**
     * 商户原始值
     */
    PRIMEVAL((short)25, "primeval"),
    /**
     * 商户名称
     */
    MERCHANT_NAME((short)26, "merchantName"),
    /**
     * 联系人电话
     */
    PHONE((short)27, "phone"),
    /**
     * 联系人手机
     */
    CONTACT_PHONE((short)28, "contactPhone"),
    /**
     * 营业执照
     */
    LICENSE((short)29, "license"),
    /**
     * 签约人
     */
    CONTRACT_STAFF((short)30, "contractStaff"),
    /**
     * 是否外包[false=否,true=是]
     */
    IS_OUTSOURCE((short)31, "isOutsource"),
    /**
     * 外包公司id
     */
    COMPANY_ID((short)32, "companyId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // CLIENT_ID
          return CLIENT_ID;
        case 4: // AUDIT_ID
          return AUDIT_ID;
        case 5: // MERCHANT_ID
          return MERCHANT_ID;
        case 6: // CONTACT_NAME
          return CONTACT_NAME;
        case 7: // MERCHANT_CATEGORY_ID
          return MERCHANT_CATEGORY_ID;
        case 8: // MERCHANT_CATEGORY_NAME
          return MERCHANT_CATEGORY_NAME;
        case 9: // MERCHANT_TYPE_ID
          return MERCHANT_TYPE_ID;
        case 10: // MERCHANT_TYPE_NAME
          return MERCHANT_TYPE_NAME;
        case 11: // MERCHANT_TYPE_VALUE
          return MERCHANT_TYPE_VALUE;
        case 12: // LEGAL_NAME
          return LEGAL_NAME;
        case 13: // LEGAL_CREDENT_TYPE
          return LEGAL_CREDENT_TYPE;
        case 14: // LEGAL_CREDENT_NO
          return LEGAL_CREDENT_NO;
        case 15: // ORG_CODE
          return ORG_CODE;
        case 16: // ORG_NAME
          return ORG_NAME;
        case 17: // CITY_ORG_CODE
          return CITY_ORG_CODE;
        case 18: // CITY_ORG_NAME
          return CITY_ORG_NAME;
        case 19: // COUNTY_ORG_CODE
          return COUNTY_ORG_CODE;
        case 20: // COUNTY_ORG_NAME
          return COUNTY_ORG_NAME;
        case 21: // ACCOUNT_NAME
          return ACCOUNT_NAME;
        case 22: // ACOUNT_NO
          return ACOUNT_NO;
        case 23: // LOGIN_NAME
          return LOGIN_NAME;
        case 24: // LOGIN_MOBILE
          return LOGIN_MOBILE;
        case 25: // PRIMEVAL
          return PRIMEVAL;
        case 26: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 27: // PHONE
          return PHONE;
        case 28: // CONTACT_PHONE
          return CONTACT_PHONE;
        case 29: // LICENSE
          return LICENSE;
        case 30: // CONTRACT_STAFF
          return CONTRACT_STAFF;
        case 31: // IS_OUTSOURCE
          return IS_OUTSOURCE;
        case 32: // COMPANY_ID
          return COMPANY_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __MERCHANTCATEGORYID_ISSET_ID = 2;
  private static final int __ISOUTSOURCE_ISSET_ID = 3;
  private static final int __COMPANYID_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CREATE_TIME,_Fields.CLIENT_ID,_Fields.AUDIT_ID,_Fields.MERCHANT_ID,_Fields.CONTACT_NAME,_Fields.MERCHANT_CATEGORY_ID,_Fields.MERCHANT_CATEGORY_NAME,_Fields.MERCHANT_TYPE_ID,_Fields.MERCHANT_TYPE_NAME,_Fields.MERCHANT_TYPE_VALUE,_Fields.LEGAL_NAME,_Fields.LEGAL_CREDENT_TYPE,_Fields.LEGAL_CREDENT_NO,_Fields.ORG_CODE,_Fields.ORG_NAME,_Fields.CITY_ORG_CODE,_Fields.CITY_ORG_NAME,_Fields.COUNTY_ORG_CODE,_Fields.COUNTY_ORG_NAME,_Fields.ACCOUNT_NAME,_Fields.ACOUNT_NO,_Fields.LOGIN_NAME,_Fields.LOGIN_MOBILE,_Fields.PRIMEVAL,_Fields.MERCHANT_NAME,_Fields.PHONE,_Fields.CONTACT_PHONE,_Fields.LICENSE,_Fields.CONTRACT_STAFF,_Fields.IS_OUTSOURCE,_Fields.COMPANY_ID};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_ID, new org.apache.thrift.meta_data.FieldMetaData("auditId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_NAME, new org.apache.thrift.meta_data.FieldMetaData("contactName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_CATEGORY_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantCategoryId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MERCHANT_CATEGORY_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantCategoryName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_TYPE_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantTypeId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_TYPE_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantTypeName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_TYPE_VALUE, new org.apache.thrift.meta_data.FieldMetaData("merchantTypeValue", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEGAL_NAME, new org.apache.thrift.meta_data.FieldMetaData("legalName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEGAL_CREDENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("legalCredentType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEGAL_CREDENT_NO, new org.apache.thrift.meta_data.FieldMetaData("legalCredentNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("cityOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("cityOrgName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNTY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("countyOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNTY_ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("countyOrgName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_NAME, new org.apache.thrift.meta_data.FieldMetaData("accountName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACOUNT_NO, new org.apache.thrift.meta_data.FieldMetaData("acountNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGIN_NAME, new org.apache.thrift.meta_data.FieldMetaData("loginName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGIN_MOBILE, new org.apache.thrift.meta_data.FieldMetaData("loginMobile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRIMEVAL, new org.apache.thrift.meta_data.FieldMetaData("primeval", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("contactPhone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LICENSE, new org.apache.thrift.meta_data.FieldMetaData("license", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTRACT_STAFF, new org.apache.thrift.meta_data.FieldMetaData("contractStaff", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_OUTSOURCE, new org.apache.thrift.meta_data.FieldMetaData("isOutsource", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantTempVo.class, metaDataMap);
  }

  public MerchantTempVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantTempVo(MerchantTempVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.createTime = other.createTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetAuditId()) {
      this.auditId = other.auditId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetContactName()) {
      this.contactName = other.contactName;
    }
    this.merchantCategoryId = other.merchantCategoryId;
    if (other.isSetMerchantCategoryName()) {
      this.merchantCategoryName = other.merchantCategoryName;
    }
    if (other.isSetMerchantTypeId()) {
      this.merchantTypeId = other.merchantTypeId;
    }
    if (other.isSetMerchantTypeName()) {
      this.merchantTypeName = other.merchantTypeName;
    }
    if (other.isSetMerchantTypeValue()) {
      this.merchantTypeValue = other.merchantTypeValue;
    }
    if (other.isSetLegalName()) {
      this.legalName = other.legalName;
    }
    if (other.isSetLegalCredentType()) {
      this.legalCredentType = other.legalCredentType;
    }
    if (other.isSetLegalCredentNo()) {
      this.legalCredentNo = other.legalCredentNo;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetCityOrgCode()) {
      this.cityOrgCode = other.cityOrgCode;
    }
    if (other.isSetCityOrgName()) {
      this.cityOrgName = other.cityOrgName;
    }
    if (other.isSetCountyOrgCode()) {
      this.countyOrgCode = other.countyOrgCode;
    }
    if (other.isSetCountyOrgName()) {
      this.countyOrgName = other.countyOrgName;
    }
    if (other.isSetAccountName()) {
      this.accountName = other.accountName;
    }
    if (other.isSetAcountNo()) {
      this.acountNo = other.acountNo;
    }
    if (other.isSetLoginName()) {
      this.loginName = other.loginName;
    }
    if (other.isSetLoginMobile()) {
      this.loginMobile = other.loginMobile;
    }
    if (other.isSetPrimeval()) {
      this.primeval = other.primeval;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetContactPhone()) {
      this.contactPhone = other.contactPhone;
    }
    if (other.isSetLicense()) {
      this.license = other.license;
    }
    if (other.isSetContractStaff()) {
      this.contractStaff = other.contractStaff;
    }
    this.isOutsource = other.isOutsource;
    this.companyId = other.companyId;
  }

  public MerchantTempVo deepCopy() {
    return new MerchantTempVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.clientId = null;
    this.auditId = null;
    this.merchantId = null;
    this.contactName = null;
    setMerchantCategoryIdIsSet(false);
    this.merchantCategoryId = 0;
    this.merchantCategoryName = null;
    this.merchantTypeId = null;
    this.merchantTypeName = null;
    this.merchantTypeValue = null;
    this.legalName = null;
    this.legalCredentType = null;
    this.legalCredentNo = null;
    this.orgCode = null;
    this.orgName = null;
    this.cityOrgCode = null;
    this.cityOrgName = null;
    this.countyOrgCode = null;
    this.countyOrgName = null;
    this.accountName = null;
    this.acountNo = null;
    this.loginName = null;
    this.loginMobile = null;
    this.primeval = null;
    this.merchantName = null;
    this.phone = null;
    this.contactPhone = null;
    this.license = null;
    this.contractStaff = null;
    setIsOutsourceIsSet(false);
    this.isOutsource = false;
    setCompanyIdIsSet(false);
    this.companyId = 0;
  }

  /**
   * 主键ID
   */
  public long getId() {
    return this.id;
  }

  /**
   * 主键ID
   */
  public MerchantTempVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public MerchantTempVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public MerchantTempVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 审核订单号
   */
  public String getAuditId() {
    return this.auditId;
  }

  /**
   * 审核订单号
   */
  public MerchantTempVo setAuditId(String auditId) {
    this.auditId = auditId;
    return this;
  }

  public void unsetAuditId() {
    this.auditId = null;
  }

  /** Returns true if field auditId is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditId() {
    return this.auditId != null;
  }

  public void setAuditIdIsSet(boolean value) {
    if (!value) {
      this.auditId = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public MerchantTempVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 联系人姓名
   */
  public String getContactName() {
    return this.contactName;
  }

  /**
   * 联系人姓名
   */
  public MerchantTempVo setContactName(String contactName) {
    this.contactName = contactName;
    return this;
  }

  public void unsetContactName() {
    this.contactName = null;
  }

  /** Returns true if field contactName is set (has been assigned a value) and false otherwise */
  public boolean isSetContactName() {
    return this.contactName != null;
  }

  public void setContactNameIsSet(boolean value) {
    if (!value) {
      this.contactName = null;
    }
  }

  /**
   * 商户分类ID
   */
  public long getMerchantCategoryId() {
    return this.merchantCategoryId;
  }

  /**
   * 商户分类ID
   */
  public MerchantTempVo setMerchantCategoryId(long merchantCategoryId) {
    this.merchantCategoryId = merchantCategoryId;
    setMerchantCategoryIdIsSet(true);
    return this;
  }

  public void unsetMerchantCategoryId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MERCHANTCATEGORYID_ISSET_ID);
  }

  /** Returns true if field merchantCategoryId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantCategoryId() {
    return EncodingUtils.testBit(__isset_bitfield, __MERCHANTCATEGORYID_ISSET_ID);
  }

  public void setMerchantCategoryIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MERCHANTCATEGORYID_ISSET_ID, value);
  }

  /**
   * 商户分类名称
   */
  public String getMerchantCategoryName() {
    return this.merchantCategoryName;
  }

  /**
   * 商户分类名称
   */
  public MerchantTempVo setMerchantCategoryName(String merchantCategoryName) {
    this.merchantCategoryName = merchantCategoryName;
    return this;
  }

  public void unsetMerchantCategoryName() {
    this.merchantCategoryName = null;
  }

  /** Returns true if field merchantCategoryName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantCategoryName() {
    return this.merchantCategoryName != null;
  }

  public void setMerchantCategoryNameIsSet(boolean value) {
    if (!value) {
      this.merchantCategoryName = null;
    }
  }

  /**
   * 商户类型ID，用逗号分隔
   */
  public String getMerchantTypeId() {
    return this.merchantTypeId;
  }

  /**
   * 商户类型ID，用逗号分隔
   */
  public MerchantTempVo setMerchantTypeId(String merchantTypeId) {
    this.merchantTypeId = merchantTypeId;
    return this;
  }

  public void unsetMerchantTypeId() {
    this.merchantTypeId = null;
  }

  /** Returns true if field merchantTypeId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantTypeId() {
    return this.merchantTypeId != null;
  }

  public void setMerchantTypeIdIsSet(boolean value) {
    if (!value) {
      this.merchantTypeId = null;
    }
  }

  /**
   * 商户类型名称，用逗号分隔
   */
  public String getMerchantTypeName() {
    return this.merchantTypeName;
  }

  /**
   * 商户类型名称，用逗号分隔
   */
  public MerchantTempVo setMerchantTypeName(String merchantTypeName) {
    this.merchantTypeName = merchantTypeName;
    return this;
  }

  public void unsetMerchantTypeName() {
    this.merchantTypeName = null;
  }

  /** Returns true if field merchantTypeName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantTypeName() {
    return this.merchantTypeName != null;
  }

  public void setMerchantTypeNameIsSet(boolean value) {
    if (!value) {
      this.merchantTypeName = null;
    }
  }

  /**
   * 商户类型值，用逗号分隔
   */
  public String getMerchantTypeValue() {
    return this.merchantTypeValue;
  }

  /**
   * 商户类型值，用逗号分隔
   */
  public MerchantTempVo setMerchantTypeValue(String merchantTypeValue) {
    this.merchantTypeValue = merchantTypeValue;
    return this;
  }

  public void unsetMerchantTypeValue() {
    this.merchantTypeValue = null;
  }

  /** Returns true if field merchantTypeValue is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantTypeValue() {
    return this.merchantTypeValue != null;
  }

  public void setMerchantTypeValueIsSet(boolean value) {
    if (!value) {
      this.merchantTypeValue = null;
    }
  }

  /**
   * 法人姓名
   */
  public String getLegalName() {
    return this.legalName;
  }

  /**
   * 法人姓名
   */
  public MerchantTempVo setLegalName(String legalName) {
    this.legalName = legalName;
    return this;
  }

  public void unsetLegalName() {
    this.legalName = null;
  }

  /** Returns true if field legalName is set (has been assigned a value) and false otherwise */
  public boolean isSetLegalName() {
    return this.legalName != null;
  }

  public void setLegalNameIsSet(boolean value) {
    if (!value) {
      this.legalName = null;
    }
  }

  /**
   * 法人证件号类型
   */
  public String getLegalCredentType() {
    return this.legalCredentType;
  }

  /**
   * 法人证件号类型
   */
  public MerchantTempVo setLegalCredentType(String legalCredentType) {
    this.legalCredentType = legalCredentType;
    return this;
  }

  public void unsetLegalCredentType() {
    this.legalCredentType = null;
  }

  /** Returns true if field legalCredentType is set (has been assigned a value) and false otherwise */
  public boolean isSetLegalCredentType() {
    return this.legalCredentType != null;
  }

  public void setLegalCredentTypeIsSet(boolean value) {
    if (!value) {
      this.legalCredentType = null;
    }
  }

  /**
   * 法人证件号
   */
  public String getLegalCredentNo() {
    return this.legalCredentNo;
  }

  /**
   * 法人证件号
   */
  public MerchantTempVo setLegalCredentNo(String legalCredentNo) {
    this.legalCredentNo = legalCredentNo;
    return this;
  }

  public void unsetLegalCredentNo() {
    this.legalCredentNo = null;
  }

  /** Returns true if field legalCredentNo is set (has been assigned a value) and false otherwise */
  public boolean isSetLegalCredentNo() {
    return this.legalCredentNo != null;
  }

  public void setLegalCredentNoIsSet(boolean value) {
    if (!value) {
      this.legalCredentNo = null;
    }
  }

  /**
   * 开户行机构号
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 开户行机构号
   */
  public MerchantTempVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 开户行机构名称
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 开户行机构名称
   */
  public MerchantTempVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 所属分行机构代码
   */
  public String getCityOrgCode() {
    return this.cityOrgCode;
  }

  /**
   * 所属分行机构代码
   */
  public MerchantTempVo setCityOrgCode(String cityOrgCode) {
    this.cityOrgCode = cityOrgCode;
    return this;
  }

  public void unsetCityOrgCode() {
    this.cityOrgCode = null;
  }

  /** Returns true if field cityOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCityOrgCode() {
    return this.cityOrgCode != null;
  }

  public void setCityOrgCodeIsSet(boolean value) {
    if (!value) {
      this.cityOrgCode = null;
    }
  }

  /**
   * 所属分行机构名称
   */
  public String getCityOrgName() {
    return this.cityOrgName;
  }

  /**
   * 所属分行机构名称
   */
  public MerchantTempVo setCityOrgName(String cityOrgName) {
    this.cityOrgName = cityOrgName;
    return this;
  }

  public void unsetCityOrgName() {
    this.cityOrgName = null;
  }

  /** Returns true if field cityOrgName is set (has been assigned a value) and false otherwise */
  public boolean isSetCityOrgName() {
    return this.cityOrgName != null;
  }

  public void setCityOrgNameIsSet(boolean value) {
    if (!value) {
      this.cityOrgName = null;
    }
  }

  /**
   * 所属网点机构代码
   */
  public String getCountyOrgCode() {
    return this.countyOrgCode;
  }

  /**
   * 所属网点机构代码
   */
  public MerchantTempVo setCountyOrgCode(String countyOrgCode) {
    this.countyOrgCode = countyOrgCode;
    return this;
  }

  public void unsetCountyOrgCode() {
    this.countyOrgCode = null;
  }

  /** Returns true if field countyOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCountyOrgCode() {
    return this.countyOrgCode != null;
  }

  public void setCountyOrgCodeIsSet(boolean value) {
    if (!value) {
      this.countyOrgCode = null;
    }
  }

  /**
   * 所属网点机构名称
   */
  public String getCountyOrgName() {
    return this.countyOrgName;
  }

  /**
   * 所属网点机构名称
   */
  public MerchantTempVo setCountyOrgName(String countyOrgName) {
    this.countyOrgName = countyOrgName;
    return this;
  }

  public void unsetCountyOrgName() {
    this.countyOrgName = null;
  }

  /** Returns true if field countyOrgName is set (has been assigned a value) and false otherwise */
  public boolean isSetCountyOrgName() {
    return this.countyOrgName != null;
  }

  public void setCountyOrgNameIsSet(boolean value) {
    if (!value) {
      this.countyOrgName = null;
    }
  }

  /**
   * 收款账户名
   */
  public String getAccountName() {
    return this.accountName;
  }

  /**
   * 收款账户名
   */
  public MerchantTempVo setAccountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

  public void unsetAccountName() {
    this.accountName = null;
  }

  /** Returns true if field accountName is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountName() {
    return this.accountName != null;
  }

  public void setAccountNameIsSet(boolean value) {
    if (!value) {
      this.accountName = null;
    }
  }

  /**
   * 收款账户号
   */
  public String getAcountNo() {
    return this.acountNo;
  }

  /**
   * 收款账户号
   */
  public MerchantTempVo setAcountNo(String acountNo) {
    this.acountNo = acountNo;
    return this;
  }

  public void unsetAcountNo() {
    this.acountNo = null;
  }

  /** Returns true if field acountNo is set (has been assigned a value) and false otherwise */
  public boolean isSetAcountNo() {
    return this.acountNo != null;
  }

  public void setAcountNoIsSet(boolean value) {
    if (!value) {
      this.acountNo = null;
    }
  }

  /**
   * 登录账号
   */
  public String getLoginName() {
    return this.loginName;
  }

  /**
   * 登录账号
   */
  public MerchantTempVo setLoginName(String loginName) {
    this.loginName = loginName;
    return this;
  }

  public void unsetLoginName() {
    this.loginName = null;
  }

  /** Returns true if field loginName is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginName() {
    return this.loginName != null;
  }

  public void setLoginNameIsSet(boolean value) {
    if (!value) {
      this.loginName = null;
    }
  }

  /**
   * 登录人手机号
   */
  public String getLoginMobile() {
    return this.loginMobile;
  }

  /**
   * 登录人手机号
   */
  public MerchantTempVo setLoginMobile(String loginMobile) {
    this.loginMobile = loginMobile;
    return this;
  }

  public void unsetLoginMobile() {
    this.loginMobile = null;
  }

  /** Returns true if field loginMobile is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginMobile() {
    return this.loginMobile != null;
  }

  public void setLoginMobileIsSet(boolean value) {
    if (!value) {
      this.loginMobile = null;
    }
  }

  /**
   * 商户原始值
   */
  public String getPrimeval() {
    return this.primeval;
  }

  /**
   * 商户原始值
   */
  public MerchantTempVo setPrimeval(String primeval) {
    this.primeval = primeval;
    return this;
  }

  public void unsetPrimeval() {
    this.primeval = null;
  }

  /** Returns true if field primeval is set (has been assigned a value) and false otherwise */
  public boolean isSetPrimeval() {
    return this.primeval != null;
  }

  public void setPrimevalIsSet(boolean value) {
    if (!value) {
      this.primeval = null;
    }
  }

  /**
   * 商户名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称
   */
  public MerchantTempVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 联系人电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 联系人电话
   */
  public MerchantTempVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 联系人手机
   */
  public String getContactPhone() {
    return this.contactPhone;
  }

  /**
   * 联系人手机
   */
  public MerchantTempVo setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
    return this;
  }

  public void unsetContactPhone() {
    this.contactPhone = null;
  }

  /** Returns true if field contactPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetContactPhone() {
    return this.contactPhone != null;
  }

  public void setContactPhoneIsSet(boolean value) {
    if (!value) {
      this.contactPhone = null;
    }
  }

  /**
   * 营业执照
   */
  public String getLicense() {
    return this.license;
  }

  /**
   * 营业执照
   */
  public MerchantTempVo setLicense(String license) {
    this.license = license;
    return this;
  }

  public void unsetLicense() {
    this.license = null;
  }

  /** Returns true if field license is set (has been assigned a value) and false otherwise */
  public boolean isSetLicense() {
    return this.license != null;
  }

  public void setLicenseIsSet(boolean value) {
    if (!value) {
      this.license = null;
    }
  }

  /**
   * 签约人
   */
  public String getContractStaff() {
    return this.contractStaff;
  }

  /**
   * 签约人
   */
  public MerchantTempVo setContractStaff(String contractStaff) {
    this.contractStaff = contractStaff;
    return this;
  }

  public void unsetContractStaff() {
    this.contractStaff = null;
  }

  /** Returns true if field contractStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetContractStaff() {
    return this.contractStaff != null;
  }

  public void setContractStaffIsSet(boolean value) {
    if (!value) {
      this.contractStaff = null;
    }
  }

  /**
   * 是否外包[false=否,true=是]
   */
  public boolean isIsOutsource() {
    return this.isOutsource;
  }

  /**
   * 是否外包[false=否,true=是]
   */
  public MerchantTempVo setIsOutsource(boolean isOutsource) {
    this.isOutsource = isOutsource;
    setIsOutsourceIsSet(true);
    return this;
  }

  public void unsetIsOutsource() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISOUTSOURCE_ISSET_ID);
  }

  /** Returns true if field isOutsource is set (has been assigned a value) and false otherwise */
  public boolean isSetIsOutsource() {
    return EncodingUtils.testBit(__isset_bitfield, __ISOUTSOURCE_ISSET_ID);
  }

  public void setIsOutsourceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISOUTSOURCE_ISSET_ID, value);
  }

  /**
   * 外包公司id
   */
  public long getCompanyId() {
    return this.companyId;
  }

  /**
   * 外包公司id
   */
  public MerchantTempVo setCompanyId(long companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case AUDIT_ID:
      if (value == null) {
        unsetAuditId();
      } else {
        setAuditId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case CONTACT_NAME:
      if (value == null) {
        unsetContactName();
      } else {
        setContactName((String)value);
      }
      break;

    case MERCHANT_CATEGORY_ID:
      if (value == null) {
        unsetMerchantCategoryId();
      } else {
        setMerchantCategoryId((Long)value);
      }
      break;

    case MERCHANT_CATEGORY_NAME:
      if (value == null) {
        unsetMerchantCategoryName();
      } else {
        setMerchantCategoryName((String)value);
      }
      break;

    case MERCHANT_TYPE_ID:
      if (value == null) {
        unsetMerchantTypeId();
      } else {
        setMerchantTypeId((String)value);
      }
      break;

    case MERCHANT_TYPE_NAME:
      if (value == null) {
        unsetMerchantTypeName();
      } else {
        setMerchantTypeName((String)value);
      }
      break;

    case MERCHANT_TYPE_VALUE:
      if (value == null) {
        unsetMerchantTypeValue();
      } else {
        setMerchantTypeValue((String)value);
      }
      break;

    case LEGAL_NAME:
      if (value == null) {
        unsetLegalName();
      } else {
        setLegalName((String)value);
      }
      break;

    case LEGAL_CREDENT_TYPE:
      if (value == null) {
        unsetLegalCredentType();
      } else {
        setLegalCredentType((String)value);
      }
      break;

    case LEGAL_CREDENT_NO:
      if (value == null) {
        unsetLegalCredentNo();
      } else {
        setLegalCredentNo((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case CITY_ORG_CODE:
      if (value == null) {
        unsetCityOrgCode();
      } else {
        setCityOrgCode((String)value);
      }
      break;

    case CITY_ORG_NAME:
      if (value == null) {
        unsetCityOrgName();
      } else {
        setCityOrgName((String)value);
      }
      break;

    case COUNTY_ORG_CODE:
      if (value == null) {
        unsetCountyOrgCode();
      } else {
        setCountyOrgCode((String)value);
      }
      break;

    case COUNTY_ORG_NAME:
      if (value == null) {
        unsetCountyOrgName();
      } else {
        setCountyOrgName((String)value);
      }
      break;

    case ACCOUNT_NAME:
      if (value == null) {
        unsetAccountName();
      } else {
        setAccountName((String)value);
      }
      break;

    case ACOUNT_NO:
      if (value == null) {
        unsetAcountNo();
      } else {
        setAcountNo((String)value);
      }
      break;

    case LOGIN_NAME:
      if (value == null) {
        unsetLoginName();
      } else {
        setLoginName((String)value);
      }
      break;

    case LOGIN_MOBILE:
      if (value == null) {
        unsetLoginMobile();
      } else {
        setLoginMobile((String)value);
      }
      break;

    case PRIMEVAL:
      if (value == null) {
        unsetPrimeval();
      } else {
        setPrimeval((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case CONTACT_PHONE:
      if (value == null) {
        unsetContactPhone();
      } else {
        setContactPhone((String)value);
      }
      break;

    case LICENSE:
      if (value == null) {
        unsetLicense();
      } else {
        setLicense((String)value);
      }
      break;

    case CONTRACT_STAFF:
      if (value == null) {
        unsetContractStaff();
      } else {
        setContractStaff((String)value);
      }
      break;

    case IS_OUTSOURCE:
      if (value == null) {
        unsetIsOutsource();
      } else {
        setIsOutsource((Boolean)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case CLIENT_ID:
      return getClientId();

    case AUDIT_ID:
      return getAuditId();

    case MERCHANT_ID:
      return getMerchantId();

    case CONTACT_NAME:
      return getContactName();

    case MERCHANT_CATEGORY_ID:
      return Long.valueOf(getMerchantCategoryId());

    case MERCHANT_CATEGORY_NAME:
      return getMerchantCategoryName();

    case MERCHANT_TYPE_ID:
      return getMerchantTypeId();

    case MERCHANT_TYPE_NAME:
      return getMerchantTypeName();

    case MERCHANT_TYPE_VALUE:
      return getMerchantTypeValue();

    case LEGAL_NAME:
      return getLegalName();

    case LEGAL_CREDENT_TYPE:
      return getLegalCredentType();

    case LEGAL_CREDENT_NO:
      return getLegalCredentNo();

    case ORG_CODE:
      return getOrgCode();

    case ORG_NAME:
      return getOrgName();

    case CITY_ORG_CODE:
      return getCityOrgCode();

    case CITY_ORG_NAME:
      return getCityOrgName();

    case COUNTY_ORG_CODE:
      return getCountyOrgCode();

    case COUNTY_ORG_NAME:
      return getCountyOrgName();

    case ACCOUNT_NAME:
      return getAccountName();

    case ACOUNT_NO:
      return getAcountNo();

    case LOGIN_NAME:
      return getLoginName();

    case LOGIN_MOBILE:
      return getLoginMobile();

    case PRIMEVAL:
      return getPrimeval();

    case MERCHANT_NAME:
      return getMerchantName();

    case PHONE:
      return getPhone();

    case CONTACT_PHONE:
      return getContactPhone();

    case LICENSE:
      return getLicense();

    case CONTRACT_STAFF:
      return getContractStaff();

    case IS_OUTSOURCE:
      return Boolean.valueOf(isIsOutsource());

    case COMPANY_ID:
      return Long.valueOf(getCompanyId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case CLIENT_ID:
      return isSetClientId();
    case AUDIT_ID:
      return isSetAuditId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case CONTACT_NAME:
      return isSetContactName();
    case MERCHANT_CATEGORY_ID:
      return isSetMerchantCategoryId();
    case MERCHANT_CATEGORY_NAME:
      return isSetMerchantCategoryName();
    case MERCHANT_TYPE_ID:
      return isSetMerchantTypeId();
    case MERCHANT_TYPE_NAME:
      return isSetMerchantTypeName();
    case MERCHANT_TYPE_VALUE:
      return isSetMerchantTypeValue();
    case LEGAL_NAME:
      return isSetLegalName();
    case LEGAL_CREDENT_TYPE:
      return isSetLegalCredentType();
    case LEGAL_CREDENT_NO:
      return isSetLegalCredentNo();
    case ORG_CODE:
      return isSetOrgCode();
    case ORG_NAME:
      return isSetOrgName();
    case CITY_ORG_CODE:
      return isSetCityOrgCode();
    case CITY_ORG_NAME:
      return isSetCityOrgName();
    case COUNTY_ORG_CODE:
      return isSetCountyOrgCode();
    case COUNTY_ORG_NAME:
      return isSetCountyOrgName();
    case ACCOUNT_NAME:
      return isSetAccountName();
    case ACOUNT_NO:
      return isSetAcountNo();
    case LOGIN_NAME:
      return isSetLoginName();
    case LOGIN_MOBILE:
      return isSetLoginMobile();
    case PRIMEVAL:
      return isSetPrimeval();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case PHONE:
      return isSetPhone();
    case CONTACT_PHONE:
      return isSetContactPhone();
    case LICENSE:
      return isSetLicense();
    case CONTRACT_STAFF:
      return isSetContractStaff();
    case IS_OUTSOURCE:
      return isSetIsOutsource();
    case COMPANY_ID:
      return isSetCompanyId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantTempVo)
      return this.equals((MerchantTempVo)that);
    return false;
  }

  public boolean equals(MerchantTempVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_auditId = true && this.isSetAuditId();
    boolean that_present_auditId = true && that.isSetAuditId();
    if (this_present_auditId || that_present_auditId) {
      if (!(this_present_auditId && that_present_auditId))
        return false;
      if (!this.auditId.equals(that.auditId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_contactName = true && this.isSetContactName();
    boolean that_present_contactName = true && that.isSetContactName();
    if (this_present_contactName || that_present_contactName) {
      if (!(this_present_contactName && that_present_contactName))
        return false;
      if (!this.contactName.equals(that.contactName))
        return false;
    }

    boolean this_present_merchantCategoryId = true && this.isSetMerchantCategoryId();
    boolean that_present_merchantCategoryId = true && that.isSetMerchantCategoryId();
    if (this_present_merchantCategoryId || that_present_merchantCategoryId) {
      if (!(this_present_merchantCategoryId && that_present_merchantCategoryId))
        return false;
      if (this.merchantCategoryId != that.merchantCategoryId)
        return false;
    }

    boolean this_present_merchantCategoryName = true && this.isSetMerchantCategoryName();
    boolean that_present_merchantCategoryName = true && that.isSetMerchantCategoryName();
    if (this_present_merchantCategoryName || that_present_merchantCategoryName) {
      if (!(this_present_merchantCategoryName && that_present_merchantCategoryName))
        return false;
      if (!this.merchantCategoryName.equals(that.merchantCategoryName))
        return false;
    }

    boolean this_present_merchantTypeId = true && this.isSetMerchantTypeId();
    boolean that_present_merchantTypeId = true && that.isSetMerchantTypeId();
    if (this_present_merchantTypeId || that_present_merchantTypeId) {
      if (!(this_present_merchantTypeId && that_present_merchantTypeId))
        return false;
      if (!this.merchantTypeId.equals(that.merchantTypeId))
        return false;
    }

    boolean this_present_merchantTypeName = true && this.isSetMerchantTypeName();
    boolean that_present_merchantTypeName = true && that.isSetMerchantTypeName();
    if (this_present_merchantTypeName || that_present_merchantTypeName) {
      if (!(this_present_merchantTypeName && that_present_merchantTypeName))
        return false;
      if (!this.merchantTypeName.equals(that.merchantTypeName))
        return false;
    }

    boolean this_present_merchantTypeValue = true && this.isSetMerchantTypeValue();
    boolean that_present_merchantTypeValue = true && that.isSetMerchantTypeValue();
    if (this_present_merchantTypeValue || that_present_merchantTypeValue) {
      if (!(this_present_merchantTypeValue && that_present_merchantTypeValue))
        return false;
      if (!this.merchantTypeValue.equals(that.merchantTypeValue))
        return false;
    }

    boolean this_present_legalName = true && this.isSetLegalName();
    boolean that_present_legalName = true && that.isSetLegalName();
    if (this_present_legalName || that_present_legalName) {
      if (!(this_present_legalName && that_present_legalName))
        return false;
      if (!this.legalName.equals(that.legalName))
        return false;
    }

    boolean this_present_legalCredentType = true && this.isSetLegalCredentType();
    boolean that_present_legalCredentType = true && that.isSetLegalCredentType();
    if (this_present_legalCredentType || that_present_legalCredentType) {
      if (!(this_present_legalCredentType && that_present_legalCredentType))
        return false;
      if (!this.legalCredentType.equals(that.legalCredentType))
        return false;
    }

    boolean this_present_legalCredentNo = true && this.isSetLegalCredentNo();
    boolean that_present_legalCredentNo = true && that.isSetLegalCredentNo();
    if (this_present_legalCredentNo || that_present_legalCredentNo) {
      if (!(this_present_legalCredentNo && that_present_legalCredentNo))
        return false;
      if (!this.legalCredentNo.equals(that.legalCredentNo))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_cityOrgCode = true && this.isSetCityOrgCode();
    boolean that_present_cityOrgCode = true && that.isSetCityOrgCode();
    if (this_present_cityOrgCode || that_present_cityOrgCode) {
      if (!(this_present_cityOrgCode && that_present_cityOrgCode))
        return false;
      if (!this.cityOrgCode.equals(that.cityOrgCode))
        return false;
    }

    boolean this_present_cityOrgName = true && this.isSetCityOrgName();
    boolean that_present_cityOrgName = true && that.isSetCityOrgName();
    if (this_present_cityOrgName || that_present_cityOrgName) {
      if (!(this_present_cityOrgName && that_present_cityOrgName))
        return false;
      if (!this.cityOrgName.equals(that.cityOrgName))
        return false;
    }

    boolean this_present_countyOrgCode = true && this.isSetCountyOrgCode();
    boolean that_present_countyOrgCode = true && that.isSetCountyOrgCode();
    if (this_present_countyOrgCode || that_present_countyOrgCode) {
      if (!(this_present_countyOrgCode && that_present_countyOrgCode))
        return false;
      if (!this.countyOrgCode.equals(that.countyOrgCode))
        return false;
    }

    boolean this_present_countyOrgName = true && this.isSetCountyOrgName();
    boolean that_present_countyOrgName = true && that.isSetCountyOrgName();
    if (this_present_countyOrgName || that_present_countyOrgName) {
      if (!(this_present_countyOrgName && that_present_countyOrgName))
        return false;
      if (!this.countyOrgName.equals(that.countyOrgName))
        return false;
    }

    boolean this_present_accountName = true && this.isSetAccountName();
    boolean that_present_accountName = true && that.isSetAccountName();
    if (this_present_accountName || that_present_accountName) {
      if (!(this_present_accountName && that_present_accountName))
        return false;
      if (!this.accountName.equals(that.accountName))
        return false;
    }

    boolean this_present_acountNo = true && this.isSetAcountNo();
    boolean that_present_acountNo = true && that.isSetAcountNo();
    if (this_present_acountNo || that_present_acountNo) {
      if (!(this_present_acountNo && that_present_acountNo))
        return false;
      if (!this.acountNo.equals(that.acountNo))
        return false;
    }

    boolean this_present_loginName = true && this.isSetLoginName();
    boolean that_present_loginName = true && that.isSetLoginName();
    if (this_present_loginName || that_present_loginName) {
      if (!(this_present_loginName && that_present_loginName))
        return false;
      if (!this.loginName.equals(that.loginName))
        return false;
    }

    boolean this_present_loginMobile = true && this.isSetLoginMobile();
    boolean that_present_loginMobile = true && that.isSetLoginMobile();
    if (this_present_loginMobile || that_present_loginMobile) {
      if (!(this_present_loginMobile && that_present_loginMobile))
        return false;
      if (!this.loginMobile.equals(that.loginMobile))
        return false;
    }

    boolean this_present_primeval = true && this.isSetPrimeval();
    boolean that_present_primeval = true && that.isSetPrimeval();
    if (this_present_primeval || that_present_primeval) {
      if (!(this_present_primeval && that_present_primeval))
        return false;
      if (!this.primeval.equals(that.primeval))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_contactPhone = true && this.isSetContactPhone();
    boolean that_present_contactPhone = true && that.isSetContactPhone();
    if (this_present_contactPhone || that_present_contactPhone) {
      if (!(this_present_contactPhone && that_present_contactPhone))
        return false;
      if (!this.contactPhone.equals(that.contactPhone))
        return false;
    }

    boolean this_present_license = true && this.isSetLicense();
    boolean that_present_license = true && that.isSetLicense();
    if (this_present_license || that_present_license) {
      if (!(this_present_license && that_present_license))
        return false;
      if (!this.license.equals(that.license))
        return false;
    }

    boolean this_present_contractStaff = true && this.isSetContractStaff();
    boolean that_present_contractStaff = true && that.isSetContractStaff();
    if (this_present_contractStaff || that_present_contractStaff) {
      if (!(this_present_contractStaff && that_present_contractStaff))
        return false;
      if (!this.contractStaff.equals(that.contractStaff))
        return false;
    }

    boolean this_present_isOutsource = true && this.isSetIsOutsource();
    boolean that_present_isOutsource = true && that.isSetIsOutsource();
    if (this_present_isOutsource || that_present_isOutsource) {
      if (!(this_present_isOutsource && that_present_isOutsource))
        return false;
      if (this.isOutsource != that.isOutsource)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_auditId = true && (isSetAuditId());
    list.add(present_auditId);
    if (present_auditId)
      list.add(auditId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_contactName = true && (isSetContactName());
    list.add(present_contactName);
    if (present_contactName)
      list.add(contactName);

    boolean present_merchantCategoryId = true && (isSetMerchantCategoryId());
    list.add(present_merchantCategoryId);
    if (present_merchantCategoryId)
      list.add(merchantCategoryId);

    boolean present_merchantCategoryName = true && (isSetMerchantCategoryName());
    list.add(present_merchantCategoryName);
    if (present_merchantCategoryName)
      list.add(merchantCategoryName);

    boolean present_merchantTypeId = true && (isSetMerchantTypeId());
    list.add(present_merchantTypeId);
    if (present_merchantTypeId)
      list.add(merchantTypeId);

    boolean present_merchantTypeName = true && (isSetMerchantTypeName());
    list.add(present_merchantTypeName);
    if (present_merchantTypeName)
      list.add(merchantTypeName);

    boolean present_merchantTypeValue = true && (isSetMerchantTypeValue());
    list.add(present_merchantTypeValue);
    if (present_merchantTypeValue)
      list.add(merchantTypeValue);

    boolean present_legalName = true && (isSetLegalName());
    list.add(present_legalName);
    if (present_legalName)
      list.add(legalName);

    boolean present_legalCredentType = true && (isSetLegalCredentType());
    list.add(present_legalCredentType);
    if (present_legalCredentType)
      list.add(legalCredentType);

    boolean present_legalCredentNo = true && (isSetLegalCredentNo());
    list.add(present_legalCredentNo);
    if (present_legalCredentNo)
      list.add(legalCredentNo);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_cityOrgCode = true && (isSetCityOrgCode());
    list.add(present_cityOrgCode);
    if (present_cityOrgCode)
      list.add(cityOrgCode);

    boolean present_cityOrgName = true && (isSetCityOrgName());
    list.add(present_cityOrgName);
    if (present_cityOrgName)
      list.add(cityOrgName);

    boolean present_countyOrgCode = true && (isSetCountyOrgCode());
    list.add(present_countyOrgCode);
    if (present_countyOrgCode)
      list.add(countyOrgCode);

    boolean present_countyOrgName = true && (isSetCountyOrgName());
    list.add(present_countyOrgName);
    if (present_countyOrgName)
      list.add(countyOrgName);

    boolean present_accountName = true && (isSetAccountName());
    list.add(present_accountName);
    if (present_accountName)
      list.add(accountName);

    boolean present_acountNo = true && (isSetAcountNo());
    list.add(present_acountNo);
    if (present_acountNo)
      list.add(acountNo);

    boolean present_loginName = true && (isSetLoginName());
    list.add(present_loginName);
    if (present_loginName)
      list.add(loginName);

    boolean present_loginMobile = true && (isSetLoginMobile());
    list.add(present_loginMobile);
    if (present_loginMobile)
      list.add(loginMobile);

    boolean present_primeval = true && (isSetPrimeval());
    list.add(present_primeval);
    if (present_primeval)
      list.add(primeval);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_contactPhone = true && (isSetContactPhone());
    list.add(present_contactPhone);
    if (present_contactPhone)
      list.add(contactPhone);

    boolean present_license = true && (isSetLicense());
    list.add(present_license);
    if (present_license)
      list.add(license);

    boolean present_contractStaff = true && (isSetContractStaff());
    list.add(present_contractStaff);
    if (present_contractStaff)
      list.add(contractStaff);

    boolean present_isOutsource = true && (isSetIsOutsource());
    list.add(present_isOutsource);
    if (present_isOutsource)
      list.add(isOutsource);

    boolean present_companyId = true && (isSetCompanyId());
    list.add(present_companyId);
    if (present_companyId)
      list.add(companyId);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantTempVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditId()).compareTo(other.isSetAuditId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditId, other.auditId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactName()).compareTo(other.isSetContactName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactName, other.contactName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantCategoryId()).compareTo(other.isSetMerchantCategoryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantCategoryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantCategoryId, other.merchantCategoryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantCategoryName()).compareTo(other.isSetMerchantCategoryName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantCategoryName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantCategoryName, other.merchantCategoryName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantTypeId()).compareTo(other.isSetMerchantTypeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantTypeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantTypeId, other.merchantTypeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantTypeName()).compareTo(other.isSetMerchantTypeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantTypeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantTypeName, other.merchantTypeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantTypeValue()).compareTo(other.isSetMerchantTypeValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantTypeValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantTypeValue, other.merchantTypeValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegalName()).compareTo(other.isSetLegalName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegalName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legalName, other.legalName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegalCredentType()).compareTo(other.isSetLegalCredentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegalCredentType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legalCredentType, other.legalCredentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegalCredentNo()).compareTo(other.isSetLegalCredentNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegalCredentNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legalCredentNo, other.legalCredentNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityOrgCode()).compareTo(other.isSetCityOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cityOrgCode, other.cityOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityOrgName()).compareTo(other.isSetCityOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cityOrgName, other.cityOrgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyOrgCode()).compareTo(other.isSetCountyOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.countyOrgCode, other.countyOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyOrgName()).compareTo(other.isSetCountyOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.countyOrgName, other.countyOrgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountName()).compareTo(other.isSetAccountName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountName, other.accountName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAcountNo()).compareTo(other.isSetAcountNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcountNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acountNo, other.acountNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginName()).compareTo(other.isSetLoginName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginName, other.loginName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginMobile()).compareTo(other.isSetLoginMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginMobile, other.loginMobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrimeval()).compareTo(other.isSetPrimeval());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrimeval()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.primeval, other.primeval);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactPhone()).compareTo(other.isSetContactPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactPhone, other.contactPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLicense()).compareTo(other.isSetLicense());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLicense()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.license, other.license);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractStaff()).compareTo(other.isSetContractStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contractStaff, other.contractStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsOutsource()).compareTo(other.isSetIsOutsource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsOutsource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isOutsource, other.isOutsource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantTempVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetAuditId()) {
      if (!first) sb.append(", ");
      sb.append("auditId:");
      if (this.auditId == null) {
        sb.append("null");
      } else {
        sb.append(this.auditId);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetContactName()) {
      if (!first) sb.append(", ");
      sb.append("contactName:");
      if (this.contactName == null) {
        sb.append("null");
      } else {
        sb.append(this.contactName);
      }
      first = false;
    }
    if (isSetMerchantCategoryId()) {
      if (!first) sb.append(", ");
      sb.append("merchantCategoryId:");
      sb.append(this.merchantCategoryId);
      first = false;
    }
    if (isSetMerchantCategoryName()) {
      if (!first) sb.append(", ");
      sb.append("merchantCategoryName:");
      if (this.merchantCategoryName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantCategoryName);
      }
      first = false;
    }
    if (isSetMerchantTypeId()) {
      if (!first) sb.append(", ");
      sb.append("merchantTypeId:");
      if (this.merchantTypeId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantTypeId);
      }
      first = false;
    }
    if (isSetMerchantTypeName()) {
      if (!first) sb.append(", ");
      sb.append("merchantTypeName:");
      if (this.merchantTypeName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantTypeName);
      }
      first = false;
    }
    if (isSetMerchantTypeValue()) {
      if (!first) sb.append(", ");
      sb.append("merchantTypeValue:");
      if (this.merchantTypeValue == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantTypeValue);
      }
      first = false;
    }
    if (isSetLegalName()) {
      if (!first) sb.append(", ");
      sb.append("legalName:");
      if (this.legalName == null) {
        sb.append("null");
      } else {
        sb.append(this.legalName);
      }
      first = false;
    }
    if (isSetLegalCredentType()) {
      if (!first) sb.append(", ");
      sb.append("legalCredentType:");
      if (this.legalCredentType == null) {
        sb.append("null");
      } else {
        sb.append(this.legalCredentType);
      }
      first = false;
    }
    if (isSetLegalCredentNo()) {
      if (!first) sb.append(", ");
      sb.append("legalCredentNo:");
      if (this.legalCredentNo == null) {
        sb.append("null");
      } else {
        sb.append(this.legalCredentNo);
      }
      first = false;
    }
    if (isSetOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
    }
    if (isSetOrgName()) {
      if (!first) sb.append(", ");
      sb.append("orgName:");
      if (this.orgName == null) {
        sb.append("null");
      } else {
        sb.append(this.orgName);
      }
      first = false;
    }
    if (isSetCityOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("cityOrgCode:");
      if (this.cityOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.cityOrgCode);
      }
      first = false;
    }
    if (isSetCityOrgName()) {
      if (!first) sb.append(", ");
      sb.append("cityOrgName:");
      if (this.cityOrgName == null) {
        sb.append("null");
      } else {
        sb.append(this.cityOrgName);
      }
      first = false;
    }
    if (isSetCountyOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("countyOrgCode:");
      if (this.countyOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.countyOrgCode);
      }
      first = false;
    }
    if (isSetCountyOrgName()) {
      if (!first) sb.append(", ");
      sb.append("countyOrgName:");
      if (this.countyOrgName == null) {
        sb.append("null");
      } else {
        sb.append(this.countyOrgName);
      }
      first = false;
    }
    if (isSetAccountName()) {
      if (!first) sb.append(", ");
      sb.append("accountName:");
      if (this.accountName == null) {
        sb.append("null");
      } else {
        sb.append(this.accountName);
      }
      first = false;
    }
    if (isSetAcountNo()) {
      if (!first) sb.append(", ");
      sb.append("acountNo:");
      if (this.acountNo == null) {
        sb.append("null");
      } else {
        sb.append(this.acountNo);
      }
      first = false;
    }
    if (isSetLoginName()) {
      if (!first) sb.append(", ");
      sb.append("loginName:");
      if (this.loginName == null) {
        sb.append("null");
      } else {
        sb.append(this.loginName);
      }
      first = false;
    }
    if (isSetLoginMobile()) {
      if (!first) sb.append(", ");
      sb.append("loginMobile:");
      if (this.loginMobile == null) {
        sb.append("null");
      } else {
        sb.append(this.loginMobile);
      }
      first = false;
    }
    if (isSetPrimeval()) {
      if (!first) sb.append(", ");
      sb.append("primeval:");
      if (this.primeval == null) {
        sb.append("null");
      } else {
        sb.append(this.primeval);
      }
      first = false;
    }
    if (isSetMerchantName()) {
      if (!first) sb.append(", ");
      sb.append("merchantName:");
      if (this.merchantName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantName);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetContactPhone()) {
      if (!first) sb.append(", ");
      sb.append("contactPhone:");
      if (this.contactPhone == null) {
        sb.append("null");
      } else {
        sb.append(this.contactPhone);
      }
      first = false;
    }
    if (isSetLicense()) {
      if (!first) sb.append(", ");
      sb.append("license:");
      if (this.license == null) {
        sb.append("null");
      } else {
        sb.append(this.license);
      }
      first = false;
    }
    if (isSetContractStaff()) {
      if (!first) sb.append(", ");
      sb.append("contractStaff:");
      if (this.contractStaff == null) {
        sb.append("null");
      } else {
        sb.append(this.contractStaff);
      }
      first = false;
    }
    if (isSetIsOutsource()) {
      if (!first) sb.append(", ");
      sb.append("isOutsource:");
      sb.append(this.isOutsource);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantTempVoStandardSchemeFactory implements SchemeFactory {
    public MerchantTempVoStandardScheme getScheme() {
      return new MerchantTempVoStandardScheme();
    }
  }

  private static class MerchantTempVoStandardScheme extends StandardScheme<MerchantTempVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantTempVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AUDIT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditId = iprot.readString();
              struct.setAuditIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CONTACT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactName = iprot.readString();
              struct.setContactNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MERCHANT_CATEGORY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.merchantCategoryId = iprot.readI64();
              struct.setMerchantCategoryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MERCHANT_CATEGORY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantCategoryName = iprot.readString();
              struct.setMerchantCategoryNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MERCHANT_TYPE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantTypeId = iprot.readString();
              struct.setMerchantTypeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MERCHANT_TYPE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantTypeName = iprot.readString();
              struct.setMerchantTypeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // MERCHANT_TYPE_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantTypeValue = iprot.readString();
              struct.setMerchantTypeValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // LEGAL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.legalName = iprot.readString();
              struct.setLegalNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // LEGAL_CREDENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.legalCredentType = iprot.readString();
              struct.setLegalCredentTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // LEGAL_CREDENT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.legalCredentNo = iprot.readString();
              struct.setLegalCredentNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CITY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cityOrgCode = iprot.readString();
              struct.setCityOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CITY_ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cityOrgName = iprot.readString();
              struct.setCityOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // COUNTY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.countyOrgCode = iprot.readString();
              struct.setCountyOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // COUNTY_ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.countyOrgName = iprot.readString();
              struct.setCountyOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // ACCOUNT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountName = iprot.readString();
              struct.setAccountNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // ACOUNT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.acountNo = iprot.readString();
              struct.setAcountNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // LOGIN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loginName = iprot.readString();
              struct.setLoginNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // LOGIN_MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loginMobile = iprot.readString();
              struct.setLoginMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // PRIMEVAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.primeval = iprot.readString();
              struct.setPrimevalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // CONTACT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactPhone = iprot.readString();
              struct.setContactPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // LICENSE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.license = iprot.readString();
              struct.setLicenseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // CONTRACT_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contractStaff = iprot.readString();
              struct.setContractStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // IS_OUTSOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isOutsource = iprot.readBool();
              struct.setIsOutsourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.companyId = iprot.readI64();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantTempVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.auditId != null) {
        if (struct.isSetAuditId()) {
          oprot.writeFieldBegin(AUDIT_ID_FIELD_DESC);
          oprot.writeString(struct.auditId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactName != null) {
        if (struct.isSetContactName()) {
          oprot.writeFieldBegin(CONTACT_NAME_FIELD_DESC);
          oprot.writeString(struct.contactName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetMerchantCategoryId()) {
        oprot.writeFieldBegin(MERCHANT_CATEGORY_ID_FIELD_DESC);
        oprot.writeI64(struct.merchantCategoryId);
        oprot.writeFieldEnd();
      }
      if (struct.merchantCategoryName != null) {
        if (struct.isSetMerchantCategoryName()) {
          oprot.writeFieldBegin(MERCHANT_CATEGORY_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantCategoryName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantTypeId != null) {
        if (struct.isSetMerchantTypeId()) {
          oprot.writeFieldBegin(MERCHANT_TYPE_ID_FIELD_DESC);
          oprot.writeString(struct.merchantTypeId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantTypeName != null) {
        if (struct.isSetMerchantTypeName()) {
          oprot.writeFieldBegin(MERCHANT_TYPE_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantTypeName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantTypeValue != null) {
        if (struct.isSetMerchantTypeValue()) {
          oprot.writeFieldBegin(MERCHANT_TYPE_VALUE_FIELD_DESC);
          oprot.writeString(struct.merchantTypeValue);
          oprot.writeFieldEnd();
        }
      }
      if (struct.legalName != null) {
        if (struct.isSetLegalName()) {
          oprot.writeFieldBegin(LEGAL_NAME_FIELD_DESC);
          oprot.writeString(struct.legalName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.legalCredentType != null) {
        if (struct.isSetLegalCredentType()) {
          oprot.writeFieldBegin(LEGAL_CREDENT_TYPE_FIELD_DESC);
          oprot.writeString(struct.legalCredentType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.legalCredentNo != null) {
        if (struct.isSetLegalCredentNo()) {
          oprot.writeFieldBegin(LEGAL_CREDENT_NO_FIELD_DESC);
          oprot.writeString(struct.legalCredentNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgCode != null) {
        if (struct.isSetOrgCode()) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgName != null) {
        if (struct.isSetOrgName()) {
          oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
          oprot.writeString(struct.orgName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cityOrgCode != null) {
        if (struct.isSetCityOrgCode()) {
          oprot.writeFieldBegin(CITY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.cityOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cityOrgName != null) {
        if (struct.isSetCityOrgName()) {
          oprot.writeFieldBegin(CITY_ORG_NAME_FIELD_DESC);
          oprot.writeString(struct.cityOrgName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.countyOrgCode != null) {
        if (struct.isSetCountyOrgCode()) {
          oprot.writeFieldBegin(COUNTY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.countyOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.countyOrgName != null) {
        if (struct.isSetCountyOrgName()) {
          oprot.writeFieldBegin(COUNTY_ORG_NAME_FIELD_DESC);
          oprot.writeString(struct.countyOrgName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountName != null) {
        if (struct.isSetAccountName()) {
          oprot.writeFieldBegin(ACCOUNT_NAME_FIELD_DESC);
          oprot.writeString(struct.accountName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.acountNo != null) {
        if (struct.isSetAcountNo()) {
          oprot.writeFieldBegin(ACOUNT_NO_FIELD_DESC);
          oprot.writeString(struct.acountNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.loginName != null) {
        if (struct.isSetLoginName()) {
          oprot.writeFieldBegin(LOGIN_NAME_FIELD_DESC);
          oprot.writeString(struct.loginName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.loginMobile != null) {
        if (struct.isSetLoginMobile()) {
          oprot.writeFieldBegin(LOGIN_MOBILE_FIELD_DESC);
          oprot.writeString(struct.loginMobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.primeval != null) {
        if (struct.isSetPrimeval()) {
          oprot.writeFieldBegin(PRIMEVAL_FIELD_DESC);
          oprot.writeString(struct.primeval);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantName != null) {
        if (struct.isSetMerchantName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactPhone != null) {
        if (struct.isSetContactPhone()) {
          oprot.writeFieldBegin(CONTACT_PHONE_FIELD_DESC);
          oprot.writeString(struct.contactPhone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.license != null) {
        if (struct.isSetLicense()) {
          oprot.writeFieldBegin(LICENSE_FIELD_DESC);
          oprot.writeString(struct.license);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contractStaff != null) {
        if (struct.isSetContractStaff()) {
          oprot.writeFieldBegin(CONTRACT_STAFF_FIELD_DESC);
          oprot.writeString(struct.contractStaff);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsOutsource()) {
        oprot.writeFieldBegin(IS_OUTSOURCE_FIELD_DESC);
        oprot.writeBool(struct.isOutsource);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI64(struct.companyId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantTempVoTupleSchemeFactory implements SchemeFactory {
    public MerchantTempVoTupleScheme getScheme() {
      return new MerchantTempVoTupleScheme();
    }
  }

  private static class MerchantTempVoTupleScheme extends TupleScheme<MerchantTempVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantTempVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetClientId()) {
        optionals.set(2);
      }
      if (struct.isSetAuditId()) {
        optionals.set(3);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(4);
      }
      if (struct.isSetContactName()) {
        optionals.set(5);
      }
      if (struct.isSetMerchantCategoryId()) {
        optionals.set(6);
      }
      if (struct.isSetMerchantCategoryName()) {
        optionals.set(7);
      }
      if (struct.isSetMerchantTypeId()) {
        optionals.set(8);
      }
      if (struct.isSetMerchantTypeName()) {
        optionals.set(9);
      }
      if (struct.isSetMerchantTypeValue()) {
        optionals.set(10);
      }
      if (struct.isSetLegalName()) {
        optionals.set(11);
      }
      if (struct.isSetLegalCredentType()) {
        optionals.set(12);
      }
      if (struct.isSetLegalCredentNo()) {
        optionals.set(13);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(14);
      }
      if (struct.isSetOrgName()) {
        optionals.set(15);
      }
      if (struct.isSetCityOrgCode()) {
        optionals.set(16);
      }
      if (struct.isSetCityOrgName()) {
        optionals.set(17);
      }
      if (struct.isSetCountyOrgCode()) {
        optionals.set(18);
      }
      if (struct.isSetCountyOrgName()) {
        optionals.set(19);
      }
      if (struct.isSetAccountName()) {
        optionals.set(20);
      }
      if (struct.isSetAcountNo()) {
        optionals.set(21);
      }
      if (struct.isSetLoginName()) {
        optionals.set(22);
      }
      if (struct.isSetLoginMobile()) {
        optionals.set(23);
      }
      if (struct.isSetPrimeval()) {
        optionals.set(24);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(25);
      }
      if (struct.isSetPhone()) {
        optionals.set(26);
      }
      if (struct.isSetContactPhone()) {
        optionals.set(27);
      }
      if (struct.isSetLicense()) {
        optionals.set(28);
      }
      if (struct.isSetContractStaff()) {
        optionals.set(29);
      }
      if (struct.isSetIsOutsource()) {
        optionals.set(30);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(31);
      }
      oprot.writeBitSet(optionals, 32);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetAuditId()) {
        oprot.writeString(struct.auditId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetContactName()) {
        oprot.writeString(struct.contactName);
      }
      if (struct.isSetMerchantCategoryId()) {
        oprot.writeI64(struct.merchantCategoryId);
      }
      if (struct.isSetMerchantCategoryName()) {
        oprot.writeString(struct.merchantCategoryName);
      }
      if (struct.isSetMerchantTypeId()) {
        oprot.writeString(struct.merchantTypeId);
      }
      if (struct.isSetMerchantTypeName()) {
        oprot.writeString(struct.merchantTypeName);
      }
      if (struct.isSetMerchantTypeValue()) {
        oprot.writeString(struct.merchantTypeValue);
      }
      if (struct.isSetLegalName()) {
        oprot.writeString(struct.legalName);
      }
      if (struct.isSetLegalCredentType()) {
        oprot.writeString(struct.legalCredentType);
      }
      if (struct.isSetLegalCredentNo()) {
        oprot.writeString(struct.legalCredentNo);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetCityOrgCode()) {
        oprot.writeString(struct.cityOrgCode);
      }
      if (struct.isSetCityOrgName()) {
        oprot.writeString(struct.cityOrgName);
      }
      if (struct.isSetCountyOrgCode()) {
        oprot.writeString(struct.countyOrgCode);
      }
      if (struct.isSetCountyOrgName()) {
        oprot.writeString(struct.countyOrgName);
      }
      if (struct.isSetAccountName()) {
        oprot.writeString(struct.accountName);
      }
      if (struct.isSetAcountNo()) {
        oprot.writeString(struct.acountNo);
      }
      if (struct.isSetLoginName()) {
        oprot.writeString(struct.loginName);
      }
      if (struct.isSetLoginMobile()) {
        oprot.writeString(struct.loginMobile);
      }
      if (struct.isSetPrimeval()) {
        oprot.writeString(struct.primeval);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetContactPhone()) {
        oprot.writeString(struct.contactPhone);
      }
      if (struct.isSetLicense()) {
        oprot.writeString(struct.license);
      }
      if (struct.isSetContractStaff()) {
        oprot.writeString(struct.contractStaff);
      }
      if (struct.isSetIsOutsource()) {
        oprot.writeBool(struct.isOutsource);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI64(struct.companyId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantTempVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(32);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.auditId = iprot.readString();
        struct.setAuditIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.contactName = iprot.readString();
        struct.setContactNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.merchantCategoryId = iprot.readI64();
        struct.setMerchantCategoryIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.merchantCategoryName = iprot.readString();
        struct.setMerchantCategoryNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.merchantTypeId = iprot.readString();
        struct.setMerchantTypeIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.merchantTypeName = iprot.readString();
        struct.setMerchantTypeNameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.merchantTypeValue = iprot.readString();
        struct.setMerchantTypeValueIsSet(true);
      }
      if (incoming.get(11)) {
        struct.legalName = iprot.readString();
        struct.setLegalNameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.legalCredentType = iprot.readString();
        struct.setLegalCredentTypeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.legalCredentNo = iprot.readString();
        struct.setLegalCredentNoIsSet(true);
      }
      if (incoming.get(14)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(16)) {
        struct.cityOrgCode = iprot.readString();
        struct.setCityOrgCodeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.cityOrgName = iprot.readString();
        struct.setCityOrgNameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.countyOrgCode = iprot.readString();
        struct.setCountyOrgCodeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.countyOrgName = iprot.readString();
        struct.setCountyOrgNameIsSet(true);
      }
      if (incoming.get(20)) {
        struct.accountName = iprot.readString();
        struct.setAccountNameIsSet(true);
      }
      if (incoming.get(21)) {
        struct.acountNo = iprot.readString();
        struct.setAcountNoIsSet(true);
      }
      if (incoming.get(22)) {
        struct.loginName = iprot.readString();
        struct.setLoginNameIsSet(true);
      }
      if (incoming.get(23)) {
        struct.loginMobile = iprot.readString();
        struct.setLoginMobileIsSet(true);
      }
      if (incoming.get(24)) {
        struct.primeval = iprot.readString();
        struct.setPrimevalIsSet(true);
      }
      if (incoming.get(25)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(26)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(27)) {
        struct.contactPhone = iprot.readString();
        struct.setContactPhoneIsSet(true);
      }
      if (incoming.get(28)) {
        struct.license = iprot.readString();
        struct.setLicenseIsSet(true);
      }
      if (incoming.get(29)) {
        struct.contractStaff = iprot.readString();
        struct.setContractStaffIsSet(true);
      }
      if (incoming.get(30)) {
        struct.isOutsource = iprot.readBool();
        struct.setIsOutsourceIsSet(true);
      }
      if (incoming.get(31)) {
        struct.companyId = iprot.readI64();
        struct.setCompanyIdIsSet(true);
      }
    }
  }

}

