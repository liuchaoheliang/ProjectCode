/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.active;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商品是否需要添加满减活动
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class PutFullCutReqVo implements org.apache.thrift.TBase<PutFullCutReqVo, PutFullCutReqVo._Fields>, java.io.Serializable, Cloneable, Comparable<PutFullCutReqVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PutFullCutReqVo");

  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PRODUCT_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("productIds", org.apache.thrift.protocol.TType.SET, (short)2);
  private static final org.apache.thrift.protocol.TField ITEM_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("itemType", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ITEM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("itemId", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PutFullCutReqVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PutFullCutReqVoTupleSchemeFactory());
  }

  /**
   * 客户端ID
   */
  public String clientId; // required
  /**
   * 商品ID
   */
  public Set<String> productIds; // required
  /**
   * 标签类型
   */
  public String itemType; // required
  /**
   * 标签id
   */
  public String itemId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 客户端ID
     */
    CLIENT_ID((short)1, "clientId"),
    /**
     * 商品ID
     */
    PRODUCT_IDS((short)2, "productIds"),
    /**
     * 标签类型
     */
    ITEM_TYPE((short)3, "itemType"),
    /**
     * 标签id
     */
    ITEM_ID((short)4, "itemId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CLIENT_ID
          return CLIENT_ID;
        case 2: // PRODUCT_IDS
          return PRODUCT_IDS;
        case 3: // ITEM_TYPE
          return ITEM_TYPE;
        case 4: // ITEM_ID
          return ITEM_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_IDS, new org.apache.thrift.meta_data.FieldMetaData("productIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.ITEM_TYPE, new org.apache.thrift.meta_data.FieldMetaData("itemType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ITEM_ID, new org.apache.thrift.meta_data.FieldMetaData("itemId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PutFullCutReqVo.class, metaDataMap);
  }

  public PutFullCutReqVo() {
  }

  public PutFullCutReqVo(
    String clientId,
    Set<String> productIds,
    String itemType,
    String itemId)
  {
    this();
    this.clientId = clientId;
    this.productIds = productIds;
    this.itemType = itemType;
    this.itemId = itemId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PutFullCutReqVo(PutFullCutReqVo other) {
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetProductIds()) {
      Set<String> __this__productIds = new HashSet<String>(other.productIds);
      this.productIds = __this__productIds;
    }
    if (other.isSetItemType()) {
      this.itemType = other.itemType;
    }
    if (other.isSetItemId()) {
      this.itemId = other.itemId;
    }
  }

  public PutFullCutReqVo deepCopy() {
    return new PutFullCutReqVo(this);
  }

  @Override
  public void clear() {
    this.clientId = null;
    this.productIds = null;
    this.itemType = null;
    this.itemId = null;
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public PutFullCutReqVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  public int getProductIdsSize() {
    return (this.productIds == null) ? 0 : this.productIds.size();
  }

  public java.util.Iterator<String> getProductIdsIterator() {
    return (this.productIds == null) ? null : this.productIds.iterator();
  }

  public void addToProductIds(String elem) {
    if (this.productIds == null) {
      this.productIds = new HashSet<String>();
    }
    this.productIds.add(elem);
  }

  /**
   * 商品ID
   */
  public Set<String> getProductIds() {
    return this.productIds;
  }

  /**
   * 商品ID
   */
  public PutFullCutReqVo setProductIds(Set<String> productIds) {
    this.productIds = productIds;
    return this;
  }

  public void unsetProductIds() {
    this.productIds = null;
  }

  /** Returns true if field productIds is set (has been assigned a value) and false otherwise */
  public boolean isSetProductIds() {
    return this.productIds != null;
  }

  public void setProductIdsIsSet(boolean value) {
    if (!value) {
      this.productIds = null;
    }
  }

  /**
   * 标签类型
   */
  public String getItemType() {
    return this.itemType;
  }

  /**
   * 标签类型
   */
  public PutFullCutReqVo setItemType(String itemType) {
    this.itemType = itemType;
    return this;
  }

  public void unsetItemType() {
    this.itemType = null;
  }

  /** Returns true if field itemType is set (has been assigned a value) and false otherwise */
  public boolean isSetItemType() {
    return this.itemType != null;
  }

  public void setItemTypeIsSet(boolean value) {
    if (!value) {
      this.itemType = null;
    }
  }

  /**
   * 标签id
   */
  public String getItemId() {
    return this.itemId;
  }

  /**
   * 标签id
   */
  public PutFullCutReqVo setItemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

  public void unsetItemId() {
    this.itemId = null;
  }

  /** Returns true if field itemId is set (has been assigned a value) and false otherwise */
  public boolean isSetItemId() {
    return this.itemId != null;
  }

  public void setItemIdIsSet(boolean value) {
    if (!value) {
      this.itemId = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case PRODUCT_IDS:
      if (value == null) {
        unsetProductIds();
      } else {
        setProductIds((Set<String>)value);
      }
      break;

    case ITEM_TYPE:
      if (value == null) {
        unsetItemType();
      } else {
        setItemType((String)value);
      }
      break;

    case ITEM_ID:
      if (value == null) {
        unsetItemId();
      } else {
        setItemId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CLIENT_ID:
      return getClientId();

    case PRODUCT_IDS:
      return getProductIds();

    case ITEM_TYPE:
      return getItemType();

    case ITEM_ID:
      return getItemId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CLIENT_ID:
      return isSetClientId();
    case PRODUCT_IDS:
      return isSetProductIds();
    case ITEM_TYPE:
      return isSetItemType();
    case ITEM_ID:
      return isSetItemId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PutFullCutReqVo)
      return this.equals((PutFullCutReqVo)that);
    return false;
  }

  public boolean equals(PutFullCutReqVo that) {
    if (that == null)
      return false;

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_productIds = true && this.isSetProductIds();
    boolean that_present_productIds = true && that.isSetProductIds();
    if (this_present_productIds || that_present_productIds) {
      if (!(this_present_productIds && that_present_productIds))
        return false;
      if (!this.productIds.equals(that.productIds))
        return false;
    }

    boolean this_present_itemType = true && this.isSetItemType();
    boolean that_present_itemType = true && that.isSetItemType();
    if (this_present_itemType || that_present_itemType) {
      if (!(this_present_itemType && that_present_itemType))
        return false;
      if (!this.itemType.equals(that.itemType))
        return false;
    }

    boolean this_present_itemId = true && this.isSetItemId();
    boolean that_present_itemId = true && that.isSetItemId();
    if (this_present_itemId || that_present_itemId) {
      if (!(this_present_itemId && that_present_itemId))
        return false;
      if (!this.itemId.equals(that.itemId))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_productIds = true && (isSetProductIds());
    list.add(present_productIds);
    if (present_productIds)
      list.add(productIds);

    boolean present_itemType = true && (isSetItemType());
    list.add(present_itemType);
    if (present_itemType)
      list.add(itemType);

    boolean present_itemId = true && (isSetItemId());
    list.add(present_itemId);
    if (present_itemId)
      list.add(itemId);

    return list.hashCode();
  }

  @Override
  public int compareTo(PutFullCutReqVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductIds()).compareTo(other.isSetProductIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productIds, other.productIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetItemType()).compareTo(other.isSetItemType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetItemType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.itemType, other.itemType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetItemId()).compareTo(other.isSetItemId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetItemId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.itemId, other.itemId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PutFullCutReqVo(");
    boolean first = true;

    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productIds:");
    if (this.productIds == null) {
      sb.append("null");
    } else {
      sb.append(this.productIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("itemType:");
    if (this.itemType == null) {
      sb.append("null");
    } else {
      sb.append(this.itemType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("itemId:");
    if (this.itemId == null) {
      sb.append("null");
    } else {
      sb.append(this.itemId);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PutFullCutReqVoStandardSchemeFactory implements SchemeFactory {
    public PutFullCutReqVoStandardScheme getScheme() {
      return new PutFullCutReqVoStandardScheme();
    }
  }

  private static class PutFullCutReqVoStandardScheme extends StandardScheme<PutFullCutReqVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PutFullCutReqVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PRODUCT_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set256 = iprot.readSetBegin();
                struct.productIds = new HashSet<String>(2*_set256.size);
                String _elem257;
                for (int _i258 = 0; _i258 < _set256.size; ++_i258)
                {
                  _elem257 = iprot.readString();
                  struct.productIds.add(_elem257);
                }
                iprot.readSetEnd();
              }
              struct.setProductIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ITEM_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.itemType = iprot.readString();
              struct.setItemTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ITEM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.itemId = iprot.readString();
              struct.setItemIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PutFullCutReqVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.productIds != null) {
        oprot.writeFieldBegin(PRODUCT_IDS_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, struct.productIds.size()));
          for (String _iter259 : struct.productIds)
          {
            oprot.writeString(_iter259);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.itemType != null) {
        oprot.writeFieldBegin(ITEM_TYPE_FIELD_DESC);
        oprot.writeString(struct.itemType);
        oprot.writeFieldEnd();
      }
      if (struct.itemId != null) {
        oprot.writeFieldBegin(ITEM_ID_FIELD_DESC);
        oprot.writeString(struct.itemId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PutFullCutReqVoTupleSchemeFactory implements SchemeFactory {
    public PutFullCutReqVoTupleScheme getScheme() {
      return new PutFullCutReqVoTupleScheme();
    }
  }

  private static class PutFullCutReqVoTupleScheme extends TupleScheme<PutFullCutReqVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PutFullCutReqVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetClientId()) {
        optionals.set(0);
      }
      if (struct.isSetProductIds()) {
        optionals.set(1);
      }
      if (struct.isSetItemType()) {
        optionals.set(2);
      }
      if (struct.isSetItemId()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetProductIds()) {
        {
          oprot.writeI32(struct.productIds.size());
          for (String _iter260 : struct.productIds)
          {
            oprot.writeString(_iter260);
          }
        }
      }
      if (struct.isSetItemType()) {
        oprot.writeString(struct.itemType);
      }
      if (struct.isSetItemId()) {
        oprot.writeString(struct.itemId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PutFullCutReqVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TSet _set261 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.productIds = new HashSet<String>(2*_set261.size);
          String _elem262;
          for (int _i263 = 0; _i263 < _set261.size; ++_i263)
          {
            _elem262 = iprot.readString();
            struct.productIds.add(_elem262);
          }
        }
        struct.setProductIdsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.itemType = iprot.readString();
        struct.setItemTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.itemId = iprot.readString();
        struct.setItemIdIsSet(true);
      }
    }
  }

}

