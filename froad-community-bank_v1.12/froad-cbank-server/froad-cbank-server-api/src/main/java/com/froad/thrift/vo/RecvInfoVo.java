/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 收货信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class RecvInfoVo implements org.apache.thrift.TBase<RecvInfoVo, RecvInfoVo._Fields>, java.io.Serializable, Cloneable, Comparable<RecvInfoVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RecvInfoVo");

  private static final org.apache.thrift.protocol.TField RECV_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recvId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CONSIGNEE_FIELD_DESC = new org.apache.thrift.protocol.TField("consignee", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField IS_DEFAULT_FIELD_DESC = new org.apache.thrift.protocol.TField("isDefault", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField TREE_PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("treePath", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField TREE_PATH_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("treePathName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnable", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField IS_DELIVER_DEFAULT_FIELD_DESC = new org.apache.thrift.protocol.TField("isDeliverDefault", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new RecvInfoVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new RecvInfoVoTupleSchemeFactory());
  }

  /**
   * 收货信息编号
   */
  public String recvId; // optional
  /**
   * 收货人
   */
  public String consignee; // optional
  /**
   * 收货地址
   */
  public String address; // optional
  /**
   * 电话
   */
  public String phone; // optional
  /**
   * 是否为默认,0:否 1:是
   */
  public String isDefault; // optional
  /**
   * 地区Id
   */
  public long areaId; // optional
  /**
   * 树路径
   */
  public String treePath; // optional
  /**
   * 树路径名称
   */
  public String treePathName; // optional
  /**
   * 是否启用
   */
  public String isEnable; // optional
  /**
   * 收货类型
   */
  public String type; // optional
  /**
   * 开始时间
   */
  public long createTime; // optional
  /**
   * 是否为默认提货地址
   */
  public String isDeliverDefault; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 收货信息编号
     */
    RECV_ID((short)1, "recvId"),
    /**
     * 收货人
     */
    CONSIGNEE((short)2, "consignee"),
    /**
     * 收货地址
     */
    ADDRESS((short)3, "address"),
    /**
     * 电话
     */
    PHONE((short)4, "phone"),
    /**
     * 是否为默认,0:否 1:是
     */
    IS_DEFAULT((short)5, "isDefault"),
    /**
     * 地区Id
     */
    AREA_ID((short)6, "areaId"),
    /**
     * 树路径
     */
    TREE_PATH((short)7, "treePath"),
    /**
     * 树路径名称
     */
    TREE_PATH_NAME((short)8, "treePathName"),
    /**
     * 是否启用
     */
    IS_ENABLE((short)9, "isEnable"),
    /**
     * 收货类型
     */
    TYPE((short)10, "type"),
    /**
     * 开始时间
     */
    CREATE_TIME((short)11, "createTime"),
    /**
     * 是否为默认提货地址
     */
    IS_DELIVER_DEFAULT((short)12, "isDeliverDefault");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RECV_ID
          return RECV_ID;
        case 2: // CONSIGNEE
          return CONSIGNEE;
        case 3: // ADDRESS
          return ADDRESS;
        case 4: // PHONE
          return PHONE;
        case 5: // IS_DEFAULT
          return IS_DEFAULT;
        case 6: // AREA_ID
          return AREA_ID;
        case 7: // TREE_PATH
          return TREE_PATH;
        case 8: // TREE_PATH_NAME
          return TREE_PATH_NAME;
        case 9: // IS_ENABLE
          return IS_ENABLE;
        case 10: // TYPE
          return TYPE;
        case 11: // CREATE_TIME
          return CREATE_TIME;
        case 12: // IS_DELIVER_DEFAULT
          return IS_DELIVER_DEFAULT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __AREAID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.RECV_ID,_Fields.CONSIGNEE,_Fields.ADDRESS,_Fields.PHONE,_Fields.IS_DEFAULT,_Fields.AREA_ID,_Fields.TREE_PATH,_Fields.TREE_PATH_NAME,_Fields.IS_ENABLE,_Fields.TYPE,_Fields.CREATE_TIME,_Fields.IS_DELIVER_DEFAULT};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RECV_ID, new org.apache.thrift.meta_data.FieldMetaData("recvId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONSIGNEE, new org.apache.thrift.meta_data.FieldMetaData("consignee", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_DEFAULT, new org.apache.thrift.meta_data.FieldMetaData("isDefault", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TREE_PATH, new org.apache.thrift.meta_data.FieldMetaData("treePath", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TREE_PATH_NAME, new org.apache.thrift.meta_data.FieldMetaData("treePathName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("isEnable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.IS_DELIVER_DEFAULT, new org.apache.thrift.meta_data.FieldMetaData("isDeliverDefault", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RecvInfoVo.class, metaDataMap);
  }

  public RecvInfoVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public RecvInfoVo(RecvInfoVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetRecvId()) {
      this.recvId = other.recvId;
    }
    if (other.isSetConsignee()) {
      this.consignee = other.consignee;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetIsDefault()) {
      this.isDefault = other.isDefault;
    }
    this.areaId = other.areaId;
    if (other.isSetTreePath()) {
      this.treePath = other.treePath;
    }
    if (other.isSetTreePathName()) {
      this.treePathName = other.treePathName;
    }
    if (other.isSetIsEnable()) {
      this.isEnable = other.isEnable;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    this.createTime = other.createTime;
    if (other.isSetIsDeliverDefault()) {
      this.isDeliverDefault = other.isDeliverDefault;
    }
  }

  public RecvInfoVo deepCopy() {
    return new RecvInfoVo(this);
  }

  @Override
  public void clear() {
    this.recvId = null;
    this.consignee = null;
    this.address = null;
    this.phone = null;
    this.isDefault = null;
    setAreaIdIsSet(false);
    this.areaId = 0;
    this.treePath = null;
    this.treePathName = null;
    this.isEnable = null;
    this.type = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.isDeliverDefault = null;
  }

  /**
   * 收货信息编号
   */
  public String getRecvId() {
    return this.recvId;
  }

  /**
   * 收货信息编号
   */
  public RecvInfoVo setRecvId(String recvId) {
    this.recvId = recvId;
    return this;
  }

  public void unsetRecvId() {
    this.recvId = null;
  }

  /** Returns true if field recvId is set (has been assigned a value) and false otherwise */
  public boolean isSetRecvId() {
    return this.recvId != null;
  }

  public void setRecvIdIsSet(boolean value) {
    if (!value) {
      this.recvId = null;
    }
  }

  /**
   * 收货人
   */
  public String getConsignee() {
    return this.consignee;
  }

  /**
   * 收货人
   */
  public RecvInfoVo setConsignee(String consignee) {
    this.consignee = consignee;
    return this;
  }

  public void unsetConsignee() {
    this.consignee = null;
  }

  /** Returns true if field consignee is set (has been assigned a value) and false otherwise */
  public boolean isSetConsignee() {
    return this.consignee != null;
  }

  public void setConsigneeIsSet(boolean value) {
    if (!value) {
      this.consignee = null;
    }
  }

  /**
   * 收货地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 收货地址
   */
  public RecvInfoVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 电话
   */
  public RecvInfoVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 是否为默认,0:否 1:是
   */
  public String getIsDefault() {
    return this.isDefault;
  }

  /**
   * 是否为默认,0:否 1:是
   */
  public RecvInfoVo setIsDefault(String isDefault) {
    this.isDefault = isDefault;
    return this;
  }

  public void unsetIsDefault() {
    this.isDefault = null;
  }

  /** Returns true if field isDefault is set (has been assigned a value) and false otherwise */
  public boolean isSetIsDefault() {
    return this.isDefault != null;
  }

  public void setIsDefaultIsSet(boolean value) {
    if (!value) {
      this.isDefault = null;
    }
  }

  /**
   * 地区Id
   */
  public long getAreaId() {
    return this.areaId;
  }

  /**
   * 地区Id
   */
  public RecvInfoVo setAreaId(long areaId) {
    this.areaId = areaId;
    setAreaIdIsSet(true);
    return this;
  }

  public void unsetAreaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return EncodingUtils.testBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  public void setAreaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREAID_ISSET_ID, value);
  }

  /**
   * 树路径
   */
  public String getTreePath() {
    return this.treePath;
  }

  /**
   * 树路径
   */
  public RecvInfoVo setTreePath(String treePath) {
    this.treePath = treePath;
    return this;
  }

  public void unsetTreePath() {
    this.treePath = null;
  }

  /** Returns true if field treePath is set (has been assigned a value) and false otherwise */
  public boolean isSetTreePath() {
    return this.treePath != null;
  }

  public void setTreePathIsSet(boolean value) {
    if (!value) {
      this.treePath = null;
    }
  }

  /**
   * 树路径名称
   */
  public String getTreePathName() {
    return this.treePathName;
  }

  /**
   * 树路径名称
   */
  public RecvInfoVo setTreePathName(String treePathName) {
    this.treePathName = treePathName;
    return this;
  }

  public void unsetTreePathName() {
    this.treePathName = null;
  }

  /** Returns true if field treePathName is set (has been assigned a value) and false otherwise */
  public boolean isSetTreePathName() {
    return this.treePathName != null;
  }

  public void setTreePathNameIsSet(boolean value) {
    if (!value) {
      this.treePathName = null;
    }
  }

  /**
   * 是否启用
   */
  public String getIsEnable() {
    return this.isEnable;
  }

  /**
   * 是否启用
   */
  public RecvInfoVo setIsEnable(String isEnable) {
    this.isEnable = isEnable;
    return this;
  }

  public void unsetIsEnable() {
    this.isEnable = null;
  }

  /** Returns true if field isEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnable() {
    return this.isEnable != null;
  }

  public void setIsEnableIsSet(boolean value) {
    if (!value) {
      this.isEnable = null;
    }
  }

  /**
   * 收货类型
   */
  public String getType() {
    return this.type;
  }

  /**
   * 收货类型
   */
  public RecvInfoVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 开始时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 开始时间
   */
  public RecvInfoVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 是否为默认提货地址
   */
  public String getIsDeliverDefault() {
    return this.isDeliverDefault;
  }

  /**
   * 是否为默认提货地址
   */
  public RecvInfoVo setIsDeliverDefault(String isDeliverDefault) {
    this.isDeliverDefault = isDeliverDefault;
    return this;
  }

  public void unsetIsDeliverDefault() {
    this.isDeliverDefault = null;
  }

  /** Returns true if field isDeliverDefault is set (has been assigned a value) and false otherwise */
  public boolean isSetIsDeliverDefault() {
    return this.isDeliverDefault != null;
  }

  public void setIsDeliverDefaultIsSet(boolean value) {
    if (!value) {
      this.isDeliverDefault = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RECV_ID:
      if (value == null) {
        unsetRecvId();
      } else {
        setRecvId((String)value);
      }
      break;

    case CONSIGNEE:
      if (value == null) {
        unsetConsignee();
      } else {
        setConsignee((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case IS_DEFAULT:
      if (value == null) {
        unsetIsDefault();
      } else {
        setIsDefault((String)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((Long)value);
      }
      break;

    case TREE_PATH:
      if (value == null) {
        unsetTreePath();
      } else {
        setTreePath((String)value);
      }
      break;

    case TREE_PATH_NAME:
      if (value == null) {
        unsetTreePathName();
      } else {
        setTreePathName((String)value);
      }
      break;

    case IS_ENABLE:
      if (value == null) {
        unsetIsEnable();
      } else {
        setIsEnable((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case IS_DELIVER_DEFAULT:
      if (value == null) {
        unsetIsDeliverDefault();
      } else {
        setIsDeliverDefault((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RECV_ID:
      return getRecvId();

    case CONSIGNEE:
      return getConsignee();

    case ADDRESS:
      return getAddress();

    case PHONE:
      return getPhone();

    case IS_DEFAULT:
      return getIsDefault();

    case AREA_ID:
      return Long.valueOf(getAreaId());

    case TREE_PATH:
      return getTreePath();

    case TREE_PATH_NAME:
      return getTreePathName();

    case IS_ENABLE:
      return getIsEnable();

    case TYPE:
      return getType();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case IS_DELIVER_DEFAULT:
      return getIsDeliverDefault();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RECV_ID:
      return isSetRecvId();
    case CONSIGNEE:
      return isSetConsignee();
    case ADDRESS:
      return isSetAddress();
    case PHONE:
      return isSetPhone();
    case IS_DEFAULT:
      return isSetIsDefault();
    case AREA_ID:
      return isSetAreaId();
    case TREE_PATH:
      return isSetTreePath();
    case TREE_PATH_NAME:
      return isSetTreePathName();
    case IS_ENABLE:
      return isSetIsEnable();
    case TYPE:
      return isSetType();
    case CREATE_TIME:
      return isSetCreateTime();
    case IS_DELIVER_DEFAULT:
      return isSetIsDeliverDefault();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof RecvInfoVo)
      return this.equals((RecvInfoVo)that);
    return false;
  }

  public boolean equals(RecvInfoVo that) {
    if (that == null)
      return false;

    boolean this_present_recvId = true && this.isSetRecvId();
    boolean that_present_recvId = true && that.isSetRecvId();
    if (this_present_recvId || that_present_recvId) {
      if (!(this_present_recvId && that_present_recvId))
        return false;
      if (!this.recvId.equals(that.recvId))
        return false;
    }

    boolean this_present_consignee = true && this.isSetConsignee();
    boolean that_present_consignee = true && that.isSetConsignee();
    if (this_present_consignee || that_present_consignee) {
      if (!(this_present_consignee && that_present_consignee))
        return false;
      if (!this.consignee.equals(that.consignee))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_isDefault = true && this.isSetIsDefault();
    boolean that_present_isDefault = true && that.isSetIsDefault();
    if (this_present_isDefault || that_present_isDefault) {
      if (!(this_present_isDefault && that_present_isDefault))
        return false;
      if (!this.isDefault.equals(that.isDefault))
        return false;
    }

    boolean this_present_areaId = true && this.isSetAreaId();
    boolean that_present_areaId = true && that.isSetAreaId();
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (this.areaId != that.areaId)
        return false;
    }

    boolean this_present_treePath = true && this.isSetTreePath();
    boolean that_present_treePath = true && that.isSetTreePath();
    if (this_present_treePath || that_present_treePath) {
      if (!(this_present_treePath && that_present_treePath))
        return false;
      if (!this.treePath.equals(that.treePath))
        return false;
    }

    boolean this_present_treePathName = true && this.isSetTreePathName();
    boolean that_present_treePathName = true && that.isSetTreePathName();
    if (this_present_treePathName || that_present_treePathName) {
      if (!(this_present_treePathName && that_present_treePathName))
        return false;
      if (!this.treePathName.equals(that.treePathName))
        return false;
    }

    boolean this_present_isEnable = true && this.isSetIsEnable();
    boolean that_present_isEnable = true && that.isSetIsEnable();
    if (this_present_isEnable || that_present_isEnable) {
      if (!(this_present_isEnable && that_present_isEnable))
        return false;
      if (!this.isEnable.equals(that.isEnable))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_isDeliverDefault = true && this.isSetIsDeliverDefault();
    boolean that_present_isDeliverDefault = true && that.isSetIsDeliverDefault();
    if (this_present_isDeliverDefault || that_present_isDeliverDefault) {
      if (!(this_present_isDeliverDefault && that_present_isDeliverDefault))
        return false;
      if (!this.isDeliverDefault.equals(that.isDeliverDefault))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_recvId = true && (isSetRecvId());
    list.add(present_recvId);
    if (present_recvId)
      list.add(recvId);

    boolean present_consignee = true && (isSetConsignee());
    list.add(present_consignee);
    if (present_consignee)
      list.add(consignee);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_isDefault = true && (isSetIsDefault());
    list.add(present_isDefault);
    if (present_isDefault)
      list.add(isDefault);

    boolean present_areaId = true && (isSetAreaId());
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_treePath = true && (isSetTreePath());
    list.add(present_treePath);
    if (present_treePath)
      list.add(treePath);

    boolean present_treePathName = true && (isSetTreePathName());
    list.add(present_treePathName);
    if (present_treePathName)
      list.add(treePathName);

    boolean present_isEnable = true && (isSetIsEnable());
    list.add(present_isEnable);
    if (present_isEnable)
      list.add(isEnable);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_isDeliverDefault = true && (isSetIsDeliverDefault());
    list.add(present_isDeliverDefault);
    if (present_isDeliverDefault)
      list.add(isDeliverDefault);

    return list.hashCode();
  }

  @Override
  public int compareTo(RecvInfoVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetRecvId()).compareTo(other.isSetRecvId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecvId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recvId, other.recvId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsignee()).compareTo(other.isSetConsignee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsignee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consignee, other.consignee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsDefault()).compareTo(other.isSetIsDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDefault()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDefault, other.isDefault);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTreePath()).compareTo(other.isSetTreePath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTreePath()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.treePath, other.treePath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTreePathName()).compareTo(other.isSetTreePathName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTreePathName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.treePathName, other.treePathName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnable()).compareTo(other.isSetIsEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnable, other.isEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsDeliverDefault()).compareTo(other.isSetIsDeliverDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDeliverDefault()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDeliverDefault, other.isDeliverDefault);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("RecvInfoVo(");
    boolean first = true;

    if (isSetRecvId()) {
      sb.append("recvId:");
      if (this.recvId == null) {
        sb.append("null");
      } else {
        sb.append(this.recvId);
      }
      first = false;
    }
    if (isSetConsignee()) {
      if (!first) sb.append(", ");
      sb.append("consignee:");
      if (this.consignee == null) {
        sb.append("null");
      } else {
        sb.append(this.consignee);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetIsDefault()) {
      if (!first) sb.append(", ");
      sb.append("isDefault:");
      if (this.isDefault == null) {
        sb.append("null");
      } else {
        sb.append(this.isDefault);
      }
      first = false;
    }
    if (isSetAreaId()) {
      if (!first) sb.append(", ");
      sb.append("areaId:");
      sb.append(this.areaId);
      first = false;
    }
    if (isSetTreePath()) {
      if (!first) sb.append(", ");
      sb.append("treePath:");
      if (this.treePath == null) {
        sb.append("null");
      } else {
        sb.append(this.treePath);
      }
      first = false;
    }
    if (isSetTreePathName()) {
      if (!first) sb.append(", ");
      sb.append("treePathName:");
      if (this.treePathName == null) {
        sb.append("null");
      } else {
        sb.append(this.treePathName);
      }
      first = false;
    }
    if (isSetIsEnable()) {
      if (!first) sb.append(", ");
      sb.append("isEnable:");
      if (this.isEnable == null) {
        sb.append("null");
      } else {
        sb.append(this.isEnable);
      }
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      if (this.type == null) {
        sb.append("null");
      } else {
        sb.append(this.type);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetIsDeliverDefault()) {
      if (!first) sb.append(", ");
      sb.append("isDeliverDefault:");
      if (this.isDeliverDefault == null) {
        sb.append("null");
      } else {
        sb.append(this.isDeliverDefault);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RecvInfoVoStandardSchemeFactory implements SchemeFactory {
    public RecvInfoVoStandardScheme getScheme() {
      return new RecvInfoVoStandardScheme();
    }
  }

  private static class RecvInfoVoStandardScheme extends StandardScheme<RecvInfoVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, RecvInfoVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RECV_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recvId = iprot.readString();
              struct.setRecvIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CONSIGNEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.consignee = iprot.readString();
              struct.setConsigneeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IS_DEFAULT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isDefault = iprot.readString();
              struct.setIsDefaultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.areaId = iprot.readI64();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TREE_PATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.treePath = iprot.readString();
              struct.setTreePathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TREE_PATH_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.treePathName = iprot.readString();
              struct.setTreePathNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // IS_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isEnable = iprot.readString();
              struct.setIsEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_DELIVER_DEFAULT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isDeliverDefault = iprot.readString();
              struct.setIsDeliverDefaultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, RecvInfoVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.recvId != null) {
        if (struct.isSetRecvId()) {
          oprot.writeFieldBegin(RECV_ID_FIELD_DESC);
          oprot.writeString(struct.recvId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.consignee != null) {
        if (struct.isSetConsignee()) {
          oprot.writeFieldBegin(CONSIGNEE_FIELD_DESC);
          oprot.writeString(struct.consignee);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isDefault != null) {
        if (struct.isSetIsDefault()) {
          oprot.writeFieldBegin(IS_DEFAULT_FIELD_DESC);
          oprot.writeString(struct.isDefault);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAreaId()) {
        oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
        oprot.writeI64(struct.areaId);
        oprot.writeFieldEnd();
      }
      if (struct.treePath != null) {
        if (struct.isSetTreePath()) {
          oprot.writeFieldBegin(TREE_PATH_FIELD_DESC);
          oprot.writeString(struct.treePath);
          oprot.writeFieldEnd();
        }
      }
      if (struct.treePathName != null) {
        if (struct.isSetTreePathName()) {
          oprot.writeFieldBegin(TREE_PATH_NAME_FIELD_DESC);
          oprot.writeString(struct.treePathName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isEnable != null) {
        if (struct.isSetIsEnable()) {
          oprot.writeFieldBegin(IS_ENABLE_FIELD_DESC);
          oprot.writeString(struct.isEnable);
          oprot.writeFieldEnd();
        }
      }
      if (struct.type != null) {
        if (struct.isSetType()) {
          oprot.writeFieldBegin(TYPE_FIELD_DESC);
          oprot.writeString(struct.type);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.isDeliverDefault != null) {
        if (struct.isSetIsDeliverDefault()) {
          oprot.writeFieldBegin(IS_DELIVER_DEFAULT_FIELD_DESC);
          oprot.writeString(struct.isDeliverDefault);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RecvInfoVoTupleSchemeFactory implements SchemeFactory {
    public RecvInfoVoTupleScheme getScheme() {
      return new RecvInfoVoTupleScheme();
    }
  }

  private static class RecvInfoVoTupleScheme extends TupleScheme<RecvInfoVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, RecvInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetRecvId()) {
        optionals.set(0);
      }
      if (struct.isSetConsignee()) {
        optionals.set(1);
      }
      if (struct.isSetAddress()) {
        optionals.set(2);
      }
      if (struct.isSetPhone()) {
        optionals.set(3);
      }
      if (struct.isSetIsDefault()) {
        optionals.set(4);
      }
      if (struct.isSetAreaId()) {
        optionals.set(5);
      }
      if (struct.isSetTreePath()) {
        optionals.set(6);
      }
      if (struct.isSetTreePathName()) {
        optionals.set(7);
      }
      if (struct.isSetIsEnable()) {
        optionals.set(8);
      }
      if (struct.isSetType()) {
        optionals.set(9);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(10);
      }
      if (struct.isSetIsDeliverDefault()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetRecvId()) {
        oprot.writeString(struct.recvId);
      }
      if (struct.isSetConsignee()) {
        oprot.writeString(struct.consignee);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetIsDefault()) {
        oprot.writeString(struct.isDefault);
      }
      if (struct.isSetAreaId()) {
        oprot.writeI64(struct.areaId);
      }
      if (struct.isSetTreePath()) {
        oprot.writeString(struct.treePath);
      }
      if (struct.isSetTreePathName()) {
        oprot.writeString(struct.treePathName);
      }
      if (struct.isSetIsEnable()) {
        oprot.writeString(struct.isEnable);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetIsDeliverDefault()) {
        oprot.writeString(struct.isDeliverDefault);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, RecvInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.recvId = iprot.readString();
        struct.setRecvIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.consignee = iprot.readString();
        struct.setConsigneeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(3)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(4)) {
        struct.isDefault = iprot.readString();
        struct.setIsDefaultIsSet(true);
      }
      if (incoming.get(5)) {
        struct.areaId = iprot.readI64();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.treePath = iprot.readString();
        struct.setTreePathIsSet(true);
      }
      if (incoming.get(7)) {
        struct.treePathName = iprot.readString();
        struct.setTreePathNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.isEnable = iprot.readString();
        struct.setIsEnableIsSet(true);
      }
      if (incoming.get(9)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.isDeliverDefault = iprot.readString();
        struct.setIsDeliverDefaultIsSet(true);
      }
    }
  }

}

