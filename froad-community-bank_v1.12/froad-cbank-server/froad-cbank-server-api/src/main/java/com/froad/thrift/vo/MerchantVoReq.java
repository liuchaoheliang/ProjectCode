/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商户信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MerchantVoReq implements org.apache.thrift.TBase<MerchantVoReq, MerchantVoReq._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantVoReq> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantVoReq");

  private static final org.apache.thrift.protocol.TField MERCHANT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField CATEGORY_INFO_VO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryInfoVoList", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField TYPE_INFO_VO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("typeInfoVoList", org.apache.thrift.protocol.TType.LIST, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantVoReqStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantVoReqTupleSchemeFactory());
  }

  /**
   * 商户vo
   */
  public com.froad.thrift.vo.MerchantVo merchantVo; // required
  /**
   * 商户分类VO集合
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> categoryInfoVoList; // required
  /**
   * 商户类型VO集合
   */
  public List<com.froad.thrift.vo.TypeInfoVo> typeInfoVoList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商户vo
     */
    MERCHANT_VO((short)1, "merchantVo"),
    /**
     * 商户分类VO集合
     */
    CATEGORY_INFO_VO_LIST((short)2, "categoryInfoVoList"),
    /**
     * 商户类型VO集合
     */
    TYPE_INFO_VO_LIST((short)3, "typeInfoVoList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MERCHANT_VO
          return MERCHANT_VO;
        case 2: // CATEGORY_INFO_VO_LIST
          return CATEGORY_INFO_VO_LIST;
        case 3: // TYPE_INFO_VO_LIST
          return TYPE_INFO_VO_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MERCHANT_VO, new org.apache.thrift.meta_data.FieldMetaData("merchantVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.MerchantVo.class)));
    tmpMap.put(_Fields.CATEGORY_INFO_VO_LIST, new org.apache.thrift.meta_data.FieldMetaData("categoryInfoVoList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.CategoryInfoVo.class))));
    tmpMap.put(_Fields.TYPE_INFO_VO_LIST, new org.apache.thrift.meta_data.FieldMetaData("typeInfoVoList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.TypeInfoVo.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantVoReq.class, metaDataMap);
  }

  public MerchantVoReq() {
  }

  public MerchantVoReq(
    com.froad.thrift.vo.MerchantVo merchantVo,
    List<com.froad.thrift.vo.CategoryInfoVo> categoryInfoVoList,
    List<com.froad.thrift.vo.TypeInfoVo> typeInfoVoList)
  {
    this();
    this.merchantVo = merchantVo;
    this.categoryInfoVoList = categoryInfoVoList;
    this.typeInfoVoList = typeInfoVoList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantVoReq(MerchantVoReq other) {
    if (other.isSetMerchantVo()) {
      this.merchantVo = new com.froad.thrift.vo.MerchantVo(other.merchantVo);
    }
    if (other.isSetCategoryInfoVoList()) {
      List<com.froad.thrift.vo.CategoryInfoVo> __this__categoryInfoVoList = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(other.categoryInfoVoList.size());
      for (com.froad.thrift.vo.CategoryInfoVo other_element : other.categoryInfoVoList) {
        __this__categoryInfoVoList.add(new com.froad.thrift.vo.CategoryInfoVo(other_element));
      }
      this.categoryInfoVoList = __this__categoryInfoVoList;
    }
    if (other.isSetTypeInfoVoList()) {
      List<com.froad.thrift.vo.TypeInfoVo> __this__typeInfoVoList = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(other.typeInfoVoList.size());
      for (com.froad.thrift.vo.TypeInfoVo other_element : other.typeInfoVoList) {
        __this__typeInfoVoList.add(new com.froad.thrift.vo.TypeInfoVo(other_element));
      }
      this.typeInfoVoList = __this__typeInfoVoList;
    }
  }

  public MerchantVoReq deepCopy() {
    return new MerchantVoReq(this);
  }

  @Override
  public void clear() {
    this.merchantVo = null;
    this.categoryInfoVoList = null;
    this.typeInfoVoList = null;
  }

  /**
   * 商户vo
   */
  public com.froad.thrift.vo.MerchantVo getMerchantVo() {
    return this.merchantVo;
  }

  /**
   * 商户vo
   */
  public MerchantVoReq setMerchantVo(com.froad.thrift.vo.MerchantVo merchantVo) {
    this.merchantVo = merchantVo;
    return this;
  }

  public void unsetMerchantVo() {
    this.merchantVo = null;
  }

  /** Returns true if field merchantVo is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantVo() {
    return this.merchantVo != null;
  }

  public void setMerchantVoIsSet(boolean value) {
    if (!value) {
      this.merchantVo = null;
    }
  }

  public int getCategoryInfoVoListSize() {
    return (this.categoryInfoVoList == null) ? 0 : this.categoryInfoVoList.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfoVoListIterator() {
    return (this.categoryInfoVoList == null) ? null : this.categoryInfoVoList.iterator();
  }

  public void addToCategoryInfoVoList(com.froad.thrift.vo.CategoryInfoVo elem) {
    if (this.categoryInfoVoList == null) {
      this.categoryInfoVoList = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>();
    }
    this.categoryInfoVoList.add(elem);
  }

  /**
   * 商户分类VO集合
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfoVoList() {
    return this.categoryInfoVoList;
  }

  /**
   * 商户分类VO集合
   */
  public MerchantVoReq setCategoryInfoVoList(List<com.froad.thrift.vo.CategoryInfoVo> categoryInfoVoList) {
    this.categoryInfoVoList = categoryInfoVoList;
    return this;
  }

  public void unsetCategoryInfoVoList() {
    this.categoryInfoVoList = null;
  }

  /** Returns true if field categoryInfoVoList is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryInfoVoList() {
    return this.categoryInfoVoList != null;
  }

  public void setCategoryInfoVoListIsSet(boolean value) {
    if (!value) {
      this.categoryInfoVoList = null;
    }
  }

  public int getTypeInfoVoListSize() {
    return (this.typeInfoVoList == null) ? 0 : this.typeInfoVoList.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.TypeInfoVo> getTypeInfoVoListIterator() {
    return (this.typeInfoVoList == null) ? null : this.typeInfoVoList.iterator();
  }

  public void addToTypeInfoVoList(com.froad.thrift.vo.TypeInfoVo elem) {
    if (this.typeInfoVoList == null) {
      this.typeInfoVoList = new ArrayList<com.froad.thrift.vo.TypeInfoVo>();
    }
    this.typeInfoVoList.add(elem);
  }

  /**
   * 商户类型VO集合
   */
  public List<com.froad.thrift.vo.TypeInfoVo> getTypeInfoVoList() {
    return this.typeInfoVoList;
  }

  /**
   * 商户类型VO集合
   */
  public MerchantVoReq setTypeInfoVoList(List<com.froad.thrift.vo.TypeInfoVo> typeInfoVoList) {
    this.typeInfoVoList = typeInfoVoList;
    return this;
  }

  public void unsetTypeInfoVoList() {
    this.typeInfoVoList = null;
  }

  /** Returns true if field typeInfoVoList is set (has been assigned a value) and false otherwise */
  public boolean isSetTypeInfoVoList() {
    return this.typeInfoVoList != null;
  }

  public void setTypeInfoVoListIsSet(boolean value) {
    if (!value) {
      this.typeInfoVoList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MERCHANT_VO:
      if (value == null) {
        unsetMerchantVo();
      } else {
        setMerchantVo((com.froad.thrift.vo.MerchantVo)value);
      }
      break;

    case CATEGORY_INFO_VO_LIST:
      if (value == null) {
        unsetCategoryInfoVoList();
      } else {
        setCategoryInfoVoList((List<com.froad.thrift.vo.CategoryInfoVo>)value);
      }
      break;

    case TYPE_INFO_VO_LIST:
      if (value == null) {
        unsetTypeInfoVoList();
      } else {
        setTypeInfoVoList((List<com.froad.thrift.vo.TypeInfoVo>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MERCHANT_VO:
      return getMerchantVo();

    case CATEGORY_INFO_VO_LIST:
      return getCategoryInfoVoList();

    case TYPE_INFO_VO_LIST:
      return getTypeInfoVoList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MERCHANT_VO:
      return isSetMerchantVo();
    case CATEGORY_INFO_VO_LIST:
      return isSetCategoryInfoVoList();
    case TYPE_INFO_VO_LIST:
      return isSetTypeInfoVoList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantVoReq)
      return this.equals((MerchantVoReq)that);
    return false;
  }

  public boolean equals(MerchantVoReq that) {
    if (that == null)
      return false;

    boolean this_present_merchantVo = true && this.isSetMerchantVo();
    boolean that_present_merchantVo = true && that.isSetMerchantVo();
    if (this_present_merchantVo || that_present_merchantVo) {
      if (!(this_present_merchantVo && that_present_merchantVo))
        return false;
      if (!this.merchantVo.equals(that.merchantVo))
        return false;
    }

    boolean this_present_categoryInfoVoList = true && this.isSetCategoryInfoVoList();
    boolean that_present_categoryInfoVoList = true && that.isSetCategoryInfoVoList();
    if (this_present_categoryInfoVoList || that_present_categoryInfoVoList) {
      if (!(this_present_categoryInfoVoList && that_present_categoryInfoVoList))
        return false;
      if (!this.categoryInfoVoList.equals(that.categoryInfoVoList))
        return false;
    }

    boolean this_present_typeInfoVoList = true && this.isSetTypeInfoVoList();
    boolean that_present_typeInfoVoList = true && that.isSetTypeInfoVoList();
    if (this_present_typeInfoVoList || that_present_typeInfoVoList) {
      if (!(this_present_typeInfoVoList && that_present_typeInfoVoList))
        return false;
      if (!this.typeInfoVoList.equals(that.typeInfoVoList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_merchantVo = true && (isSetMerchantVo());
    list.add(present_merchantVo);
    if (present_merchantVo)
      list.add(merchantVo);

    boolean present_categoryInfoVoList = true && (isSetCategoryInfoVoList());
    list.add(present_categoryInfoVoList);
    if (present_categoryInfoVoList)
      list.add(categoryInfoVoList);

    boolean present_typeInfoVoList = true && (isSetTypeInfoVoList());
    list.add(present_typeInfoVoList);
    if (present_typeInfoVoList)
      list.add(typeInfoVoList);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantVoReq other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMerchantVo()).compareTo(other.isSetMerchantVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantVo, other.merchantVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryInfoVoList()).compareTo(other.isSetCategoryInfoVoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryInfoVoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryInfoVoList, other.categoryInfoVoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTypeInfoVoList()).compareTo(other.isSetTypeInfoVoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTypeInfoVoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.typeInfoVoList, other.typeInfoVoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantVoReq(");
    boolean first = true;

    sb.append("merchantVo:");
    if (this.merchantVo == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantVo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("categoryInfoVoList:");
    if (this.categoryInfoVoList == null) {
      sb.append("null");
    } else {
      sb.append(this.categoryInfoVoList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("typeInfoVoList:");
    if (this.typeInfoVoList == null) {
      sb.append("null");
    } else {
      sb.append(this.typeInfoVoList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (merchantVo != null) {
      merchantVo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantVoReqStandardSchemeFactory implements SchemeFactory {
    public MerchantVoReqStandardScheme getScheme() {
      return new MerchantVoReqStandardScheme();
    }
  }

  private static class MerchantVoReqStandardScheme extends StandardScheme<MerchantVoReq> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantVoReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MERCHANT_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.merchantVo = new com.froad.thrift.vo.MerchantVo();
              struct.merchantVo.read(iprot);
              struct.setMerchantVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CATEGORY_INFO_VO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.categoryInfoVoList = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list16.size);
                com.froad.thrift.vo.CategoryInfoVo _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = new com.froad.thrift.vo.CategoryInfoVo();
                  _elem17.read(iprot);
                  struct.categoryInfoVoList.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setCategoryInfoVoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TYPE_INFO_VO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list19 = iprot.readListBegin();
                struct.typeInfoVoList = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list19.size);
                com.froad.thrift.vo.TypeInfoVo _elem20;
                for (int _i21 = 0; _i21 < _list19.size; ++_i21)
                {
                  _elem20 = new com.froad.thrift.vo.TypeInfoVo();
                  _elem20.read(iprot);
                  struct.typeInfoVoList.add(_elem20);
                }
                iprot.readListEnd();
              }
              struct.setTypeInfoVoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantVoReq struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.merchantVo != null) {
        oprot.writeFieldBegin(MERCHANT_VO_FIELD_DESC);
        struct.merchantVo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.categoryInfoVoList != null) {
        oprot.writeFieldBegin(CATEGORY_INFO_VO_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.categoryInfoVoList.size()));
          for (com.froad.thrift.vo.CategoryInfoVo _iter22 : struct.categoryInfoVoList)
          {
            _iter22.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.typeInfoVoList != null) {
        oprot.writeFieldBegin(TYPE_INFO_VO_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.typeInfoVoList.size()));
          for (com.froad.thrift.vo.TypeInfoVo _iter23 : struct.typeInfoVoList)
          {
            _iter23.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantVoReqTupleSchemeFactory implements SchemeFactory {
    public MerchantVoReqTupleScheme getScheme() {
      return new MerchantVoReqTupleScheme();
    }
  }

  private static class MerchantVoReqTupleScheme extends TupleScheme<MerchantVoReq> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantVoReq struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMerchantVo()) {
        optionals.set(0);
      }
      if (struct.isSetCategoryInfoVoList()) {
        optionals.set(1);
      }
      if (struct.isSetTypeInfoVoList()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetMerchantVo()) {
        struct.merchantVo.write(oprot);
      }
      if (struct.isSetCategoryInfoVoList()) {
        {
          oprot.writeI32(struct.categoryInfoVoList.size());
          for (com.froad.thrift.vo.CategoryInfoVo _iter24 : struct.categoryInfoVoList)
          {
            _iter24.write(oprot);
          }
        }
      }
      if (struct.isSetTypeInfoVoList()) {
        {
          oprot.writeI32(struct.typeInfoVoList.size());
          for (com.froad.thrift.vo.TypeInfoVo _iter25 : struct.typeInfoVoList)
          {
            _iter25.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantVoReq struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.merchantVo = new com.froad.thrift.vo.MerchantVo();
        struct.merchantVo.read(iprot);
        struct.setMerchantVoIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list26 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.categoryInfoVoList = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list26.size);
          com.froad.thrift.vo.CategoryInfoVo _elem27;
          for (int _i28 = 0; _i28 < _list26.size; ++_i28)
          {
            _elem27 = new com.froad.thrift.vo.CategoryInfoVo();
            _elem27.read(iprot);
            struct.categoryInfoVoList.add(_elem27);
          }
        }
        struct.setCategoryInfoVoListIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.typeInfoVoList = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list29.size);
          com.froad.thrift.vo.TypeInfoVo _elem30;
          for (int _i31 = 0; _i31 < _list29.size; ++_i31)
          {
            _elem30 = new com.froad.thrift.vo.TypeInfoVo();
            _elem30.read(iprot);
            struct.typeInfoVoList.add(_elem30);
          }
        }
        struct.setTypeInfoVoListIsSet(true);
      }
    }
  }

}

