/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class BizInstanceAttrValueService {

  /**
   * BizInstanceAttrValueService
   */
  public interface Iface extends com.froad.thrift.monitor.service.BizMonitorService.Iface {

    /**
     * 增加 BizInstanceAttrValue
     * @param originVo 源信息对象
     * @param bizInstanceAttrValueVo
     * @return String    主键ID
     * 
     * @param originVo
     * @param bizInstanceAttrValueVo
     */
    public String addBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException;

    /**
     * 删除 BizInstanceAttrValue
     * @param originVo 源信息对象
     * @param bizInstanceAttrValueVo
     * @return boolean
     * 
     * @param originVo
     * @param bizInstanceAttrValueVo
     */
    public boolean deleteBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException;

    /**
     * 根据instanceId删除单个 BizInstanceAttrValue
     * @param originVo 源信息对象
     * @param instanceId
     * @return BizInstanceAttrValueVo
     * 
     * @param originVo
     * @param instanceId
     */
    public boolean deleteBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, String instanceId) throws org.apache.thrift.TException;

    /**
     * 修改 BizInstanceAttrValue
     * @param originVo 源信息对象
     * @param bizInstanceAttrValueVo
     * @return boolean
     * 
     * @param originVo
     * @param bizInstanceAttrValueVo
     */
    public boolean updateBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException;

    /**
     * 根据instanceId修改单个 BizInstanceAttrValue
     * @param originVo 源信息对象
     * @param instanceId
     * @return BizInstanceAttrValueVo
     * 
     * @param originVo
     * @param bizInstanceAttrValueVo
     */
    public boolean updateBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException;

    /**
     * 根据instanceId查询单个 BizInstanceAttrValue
     * @param instanceId
     * @return BizInstanceAttrValueVo
     * 
     * @param instanceId
     */
    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueByInstanceId(String instanceId) throws org.apache.thrift.TException;

    /**
     * 根据条件查询一个 BizInstanceAttrValue
     * @param bizInstanceAttrValueVo
     * @return BizInstanceAttrValueVo
     * 
     * @param bizInstanceAttrValueVo
     */
    public com.froad.thrift.vo.BizInstanceAttrValueVo getOneBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException;

    /**
     * 根据条件统计 BizInstanceAttrValue
     * @param bizInstanceAttrValueVo
     * @return int
     * 
     * @param bizInstanceAttrValueVo
     */
    public int countBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException;

    /**
     * 查询 BizInstanceAttrValue
     * @param bizInstanceAttrValueVo
     * @return List<BizInstanceAttrValueVo>
     * 
     * @param bizInstanceAttrValueVo
     */
    public List<com.froad.thrift.vo.BizInstanceAttrValueVo> getBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException;

    /**
     * 分页查询 BizInstanceAttrValue
     * @param bizInstanceAttrValueVo
     * @return BizInstanceAttrValuePageVoRes
     * 
     * @param page
     * @param bizInstanceAttrValueVo
     */
    public com.froad.thrift.vo.BizInstanceAttrValuePageVoRes getBizInstanceAttrValueByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends com.froad.thrift.monitor.service.BizMonitorService .AsyncIface {

    public void addBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void deleteBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void deleteBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, String instanceId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void updateBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void updateBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getBizInstanceAttrValueByInstanceId(String instanceId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getOneBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void countBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getBizInstanceAttrValueByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends com.froad.thrift.monitor.service.BizMonitorService.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public String addBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      send_addBizInstanceAttrValue(originVo, bizInstanceAttrValueVo);
      return recv_addBizInstanceAttrValue();
    }

    public void send_addBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      addBizInstanceAttrValue_args args = new addBizInstanceAttrValue_args();
      args.setOriginVo(originVo);
      args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
      sendBase("addBizInstanceAttrValue", args);
    }

    public String recv_addBizInstanceAttrValue() throws org.apache.thrift.TException
    {
      addBizInstanceAttrValue_result result = new addBizInstanceAttrValue_result();
      receiveBase(result, "addBizInstanceAttrValue");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addBizInstanceAttrValue failed: unknown result");
    }

    public boolean deleteBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      send_deleteBizInstanceAttrValue(originVo, bizInstanceAttrValueVo);
      return recv_deleteBizInstanceAttrValue();
    }

    public void send_deleteBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      deleteBizInstanceAttrValue_args args = new deleteBizInstanceAttrValue_args();
      args.setOriginVo(originVo);
      args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
      sendBase("deleteBizInstanceAttrValue", args);
    }

    public boolean recv_deleteBizInstanceAttrValue() throws org.apache.thrift.TException
    {
      deleteBizInstanceAttrValue_result result = new deleteBizInstanceAttrValue_result();
      receiveBase(result, "deleteBizInstanceAttrValue");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteBizInstanceAttrValue failed: unknown result");
    }

    public boolean deleteBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, String instanceId) throws org.apache.thrift.TException
    {
      send_deleteBizInstanceAttrValueByInstanceId(originVo, instanceId);
      return recv_deleteBizInstanceAttrValueByInstanceId();
    }

    public void send_deleteBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, String instanceId) throws org.apache.thrift.TException
    {
      deleteBizInstanceAttrValueByInstanceId_args args = new deleteBizInstanceAttrValueByInstanceId_args();
      args.setOriginVo(originVo);
      args.setInstanceId(instanceId);
      sendBase("deleteBizInstanceAttrValueByInstanceId", args);
    }

    public boolean recv_deleteBizInstanceAttrValueByInstanceId() throws org.apache.thrift.TException
    {
      deleteBizInstanceAttrValueByInstanceId_result result = new deleteBizInstanceAttrValueByInstanceId_result();
      receiveBase(result, "deleteBizInstanceAttrValueByInstanceId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteBizInstanceAttrValueByInstanceId failed: unknown result");
    }

    public boolean updateBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      send_updateBizInstanceAttrValue(originVo, bizInstanceAttrValueVo);
      return recv_updateBizInstanceAttrValue();
    }

    public void send_updateBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      updateBizInstanceAttrValue_args args = new updateBizInstanceAttrValue_args();
      args.setOriginVo(originVo);
      args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
      sendBase("updateBizInstanceAttrValue", args);
    }

    public boolean recv_updateBizInstanceAttrValue() throws org.apache.thrift.TException
    {
      updateBizInstanceAttrValue_result result = new updateBizInstanceAttrValue_result();
      receiveBase(result, "updateBizInstanceAttrValue");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateBizInstanceAttrValue failed: unknown result");
    }

    public boolean updateBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      send_updateBizInstanceAttrValueByInstanceId(originVo, bizInstanceAttrValueVo);
      return recv_updateBizInstanceAttrValueByInstanceId();
    }

    public void send_updateBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      updateBizInstanceAttrValueByInstanceId_args args = new updateBizInstanceAttrValueByInstanceId_args();
      args.setOriginVo(originVo);
      args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
      sendBase("updateBizInstanceAttrValueByInstanceId", args);
    }

    public boolean recv_updateBizInstanceAttrValueByInstanceId() throws org.apache.thrift.TException
    {
      updateBizInstanceAttrValueByInstanceId_result result = new updateBizInstanceAttrValueByInstanceId_result();
      receiveBase(result, "updateBizInstanceAttrValueByInstanceId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateBizInstanceAttrValueByInstanceId failed: unknown result");
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueByInstanceId(String instanceId) throws org.apache.thrift.TException
    {
      send_getBizInstanceAttrValueByInstanceId(instanceId);
      return recv_getBizInstanceAttrValueByInstanceId();
    }

    public void send_getBizInstanceAttrValueByInstanceId(String instanceId) throws org.apache.thrift.TException
    {
      getBizInstanceAttrValueByInstanceId_args args = new getBizInstanceAttrValueByInstanceId_args();
      args.setInstanceId(instanceId);
      sendBase("getBizInstanceAttrValueByInstanceId", args);
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo recv_getBizInstanceAttrValueByInstanceId() throws org.apache.thrift.TException
    {
      getBizInstanceAttrValueByInstanceId_result result = new getBizInstanceAttrValueByInstanceId_result();
      receiveBase(result, "getBizInstanceAttrValueByInstanceId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBizInstanceAttrValueByInstanceId failed: unknown result");
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getOneBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      send_getOneBizInstanceAttrValue(bizInstanceAttrValueVo);
      return recv_getOneBizInstanceAttrValue();
    }

    public void send_getOneBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      getOneBizInstanceAttrValue_args args = new getOneBizInstanceAttrValue_args();
      args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
      sendBase("getOneBizInstanceAttrValue", args);
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo recv_getOneBizInstanceAttrValue() throws org.apache.thrift.TException
    {
      getOneBizInstanceAttrValue_result result = new getOneBizInstanceAttrValue_result();
      receiveBase(result, "getOneBizInstanceAttrValue");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getOneBizInstanceAttrValue failed: unknown result");
    }

    public int countBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      send_countBizInstanceAttrValue(bizInstanceAttrValueVo);
      return recv_countBizInstanceAttrValue();
    }

    public void send_countBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      countBizInstanceAttrValue_args args = new countBizInstanceAttrValue_args();
      args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
      sendBase("countBizInstanceAttrValue", args);
    }

    public int recv_countBizInstanceAttrValue() throws org.apache.thrift.TException
    {
      countBizInstanceAttrValue_result result = new countBizInstanceAttrValue_result();
      receiveBase(result, "countBizInstanceAttrValue");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "countBizInstanceAttrValue failed: unknown result");
    }

    public List<com.froad.thrift.vo.BizInstanceAttrValueVo> getBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      send_getBizInstanceAttrValue(bizInstanceAttrValueVo);
      return recv_getBizInstanceAttrValue();
    }

    public void send_getBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      getBizInstanceAttrValue_args args = new getBizInstanceAttrValue_args();
      args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
      sendBase("getBizInstanceAttrValue", args);
    }

    public List<com.froad.thrift.vo.BizInstanceAttrValueVo> recv_getBizInstanceAttrValue() throws org.apache.thrift.TException
    {
      getBizInstanceAttrValue_result result = new getBizInstanceAttrValue_result();
      receiveBase(result, "getBizInstanceAttrValue");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBizInstanceAttrValue failed: unknown result");
    }

    public com.froad.thrift.vo.BizInstanceAttrValuePageVoRes getBizInstanceAttrValueByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      send_getBizInstanceAttrValueByPage(page, bizInstanceAttrValueVo);
      return recv_getBizInstanceAttrValueByPage();
    }

    public void send_getBizInstanceAttrValueByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) throws org.apache.thrift.TException
    {
      getBizInstanceAttrValueByPage_args args = new getBizInstanceAttrValueByPage_args();
      args.setPage(page);
      args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
      sendBase("getBizInstanceAttrValueByPage", args);
    }

    public com.froad.thrift.vo.BizInstanceAttrValuePageVoRes recv_getBizInstanceAttrValueByPage() throws org.apache.thrift.TException
    {
      getBizInstanceAttrValueByPage_result result = new getBizInstanceAttrValueByPage_result();
      receiveBase(result, "getBizInstanceAttrValueByPage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBizInstanceAttrValueByPage failed: unknown result");
    }

  }
  public static class AsyncClient extends com.froad.thrift.monitor.service.BizMonitorService.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void addBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addBizInstanceAttrValue_call method_call = new addBizInstanceAttrValue_call(originVo, bizInstanceAttrValueVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addBizInstanceAttrValue_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo;
      public addBizInstanceAttrValue_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addBizInstanceAttrValue", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addBizInstanceAttrValue_args args = new addBizInstanceAttrValue_args();
        args.setOriginVo(originVo);
        args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public String getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addBizInstanceAttrValue();
      }
    }

    public void deleteBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteBizInstanceAttrValue_call method_call = new deleteBizInstanceAttrValue_call(originVo, bizInstanceAttrValueVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteBizInstanceAttrValue_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo;
      public deleteBizInstanceAttrValue_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteBizInstanceAttrValue", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteBizInstanceAttrValue_args args = new deleteBizInstanceAttrValue_args();
        args.setOriginVo(originVo);
        args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public boolean getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deleteBizInstanceAttrValue();
      }
    }

    public void deleteBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, String instanceId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteBizInstanceAttrValueByInstanceId_call method_call = new deleteBizInstanceAttrValueByInstanceId_call(originVo, instanceId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteBizInstanceAttrValueByInstanceId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private String instanceId;
      public deleteBizInstanceAttrValueByInstanceId_call(com.froad.thrift.vo.OriginVo originVo, String instanceId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.instanceId = instanceId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteBizInstanceAttrValueByInstanceId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteBizInstanceAttrValueByInstanceId_args args = new deleteBizInstanceAttrValueByInstanceId_args();
        args.setOriginVo(originVo);
        args.setInstanceId(instanceId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public boolean getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deleteBizInstanceAttrValueByInstanceId();
      }
    }

    public void updateBizInstanceAttrValue(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateBizInstanceAttrValue_call method_call = new updateBizInstanceAttrValue_call(originVo, bizInstanceAttrValueVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateBizInstanceAttrValue_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo;
      public updateBizInstanceAttrValue_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateBizInstanceAttrValue", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateBizInstanceAttrValue_args args = new updateBizInstanceAttrValue_args();
        args.setOriginVo(originVo);
        args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public boolean getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateBizInstanceAttrValue();
      }
    }

    public void updateBizInstanceAttrValueByInstanceId(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateBizInstanceAttrValueByInstanceId_call method_call = new updateBizInstanceAttrValueByInstanceId_call(originVo, bizInstanceAttrValueVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateBizInstanceAttrValueByInstanceId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo;
      public updateBizInstanceAttrValueByInstanceId_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateBizInstanceAttrValueByInstanceId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateBizInstanceAttrValueByInstanceId_args args = new updateBizInstanceAttrValueByInstanceId_args();
        args.setOriginVo(originVo);
        args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public boolean getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateBizInstanceAttrValueByInstanceId();
      }
    }

    public void getBizInstanceAttrValueByInstanceId(String instanceId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBizInstanceAttrValueByInstanceId_call method_call = new getBizInstanceAttrValueByInstanceId_call(instanceId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBizInstanceAttrValueByInstanceId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String instanceId;
      public getBizInstanceAttrValueByInstanceId_call(String instanceId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.instanceId = instanceId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBizInstanceAttrValueByInstanceId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBizInstanceAttrValueByInstanceId_args args = new getBizInstanceAttrValueByInstanceId_args();
        args.setInstanceId(instanceId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.BizInstanceAttrValueVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getBizInstanceAttrValueByInstanceId();
      }
    }

    public void getOneBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getOneBizInstanceAttrValue_call method_call = new getOneBizInstanceAttrValue_call(bizInstanceAttrValueVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getOneBizInstanceAttrValue_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo;
      public getOneBizInstanceAttrValue_call(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getOneBizInstanceAttrValue", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getOneBizInstanceAttrValue_args args = new getOneBizInstanceAttrValue_args();
        args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.BizInstanceAttrValueVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getOneBizInstanceAttrValue();
      }
    }

    public void countBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      countBizInstanceAttrValue_call method_call = new countBizInstanceAttrValue_call(bizInstanceAttrValueVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class countBizInstanceAttrValue_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo;
      public countBizInstanceAttrValue_call(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("countBizInstanceAttrValue", org.apache.thrift.protocol.TMessageType.CALL, 0));
        countBizInstanceAttrValue_args args = new countBizInstanceAttrValue_args();
        args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public int getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_countBizInstanceAttrValue();
      }
    }

    public void getBizInstanceAttrValue(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBizInstanceAttrValue_call method_call = new getBizInstanceAttrValue_call(bizInstanceAttrValueVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBizInstanceAttrValue_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo;
      public getBizInstanceAttrValue_call(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBizInstanceAttrValue", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBizInstanceAttrValue_args args = new getBizInstanceAttrValue_args();
        args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<com.froad.thrift.vo.BizInstanceAttrValueVo> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getBizInstanceAttrValue();
      }
    }

    public void getBizInstanceAttrValueByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBizInstanceAttrValueByPage_call method_call = new getBizInstanceAttrValueByPage_call(page, bizInstanceAttrValueVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBizInstanceAttrValueByPage_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.PageVo page;
      private com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo;
      public getBizInstanceAttrValueByPage_call(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.page = page;
        this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBizInstanceAttrValueByPage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBizInstanceAttrValueByPage_args args = new getBizInstanceAttrValueByPage_args();
        args.setPage(page);
        args.setBizInstanceAttrValueVo(bizInstanceAttrValueVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.BizInstanceAttrValuePageVoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getBizInstanceAttrValueByPage();
      }
    }

  }

  public static class Processor<I extends Iface> extends com.froad.thrift.monitor.service.BizMonitorService.Processor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("addBizInstanceAttrValue", new addBizInstanceAttrValue());
      processMap.put("deleteBizInstanceAttrValue", new deleteBizInstanceAttrValue());
      processMap.put("deleteBizInstanceAttrValueByInstanceId", new deleteBizInstanceAttrValueByInstanceId());
      processMap.put("updateBizInstanceAttrValue", new updateBizInstanceAttrValue());
      processMap.put("updateBizInstanceAttrValueByInstanceId", new updateBizInstanceAttrValueByInstanceId());
      processMap.put("getBizInstanceAttrValueByInstanceId", new getBizInstanceAttrValueByInstanceId());
      processMap.put("getOneBizInstanceAttrValue", new getOneBizInstanceAttrValue());
      processMap.put("countBizInstanceAttrValue", new countBizInstanceAttrValue());
      processMap.put("getBizInstanceAttrValue", new getBizInstanceAttrValue());
      processMap.put("getBizInstanceAttrValueByPage", new getBizInstanceAttrValueByPage());
      return processMap;
    }

    public static class addBizInstanceAttrValue<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addBizInstanceAttrValue_args> {
      public addBizInstanceAttrValue() {
        super("addBizInstanceAttrValue");
      }

      public addBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new addBizInstanceAttrValue_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addBizInstanceAttrValue_result getResult(I iface, addBizInstanceAttrValue_args args) throws org.apache.thrift.TException {
        addBizInstanceAttrValue_result result = new addBizInstanceAttrValue_result();
        result.success = iface.addBizInstanceAttrValue(args.originVo, args.bizInstanceAttrValueVo);
        return result;
      }
    }

    public static class deleteBizInstanceAttrValue<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteBizInstanceAttrValue_args> {
      public deleteBizInstanceAttrValue() {
        super("deleteBizInstanceAttrValue");
      }

      public deleteBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new deleteBizInstanceAttrValue_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteBizInstanceAttrValue_result getResult(I iface, deleteBizInstanceAttrValue_args args) throws org.apache.thrift.TException {
        deleteBizInstanceAttrValue_result result = new deleteBizInstanceAttrValue_result();
        result.success = iface.deleteBizInstanceAttrValue(args.originVo, args.bizInstanceAttrValueVo);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class deleteBizInstanceAttrValueByInstanceId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteBizInstanceAttrValueByInstanceId_args> {
      public deleteBizInstanceAttrValueByInstanceId() {
        super("deleteBizInstanceAttrValueByInstanceId");
      }

      public deleteBizInstanceAttrValueByInstanceId_args getEmptyArgsInstance() {
        return new deleteBizInstanceAttrValueByInstanceId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteBizInstanceAttrValueByInstanceId_result getResult(I iface, deleteBizInstanceAttrValueByInstanceId_args args) throws org.apache.thrift.TException {
        deleteBizInstanceAttrValueByInstanceId_result result = new deleteBizInstanceAttrValueByInstanceId_result();
        result.success = iface.deleteBizInstanceAttrValueByInstanceId(args.originVo, args.instanceId);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class updateBizInstanceAttrValue<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateBizInstanceAttrValue_args> {
      public updateBizInstanceAttrValue() {
        super("updateBizInstanceAttrValue");
      }

      public updateBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new updateBizInstanceAttrValue_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateBizInstanceAttrValue_result getResult(I iface, updateBizInstanceAttrValue_args args) throws org.apache.thrift.TException {
        updateBizInstanceAttrValue_result result = new updateBizInstanceAttrValue_result();
        result.success = iface.updateBizInstanceAttrValue(args.originVo, args.bizInstanceAttrValueVo);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class updateBizInstanceAttrValueByInstanceId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateBizInstanceAttrValueByInstanceId_args> {
      public updateBizInstanceAttrValueByInstanceId() {
        super("updateBizInstanceAttrValueByInstanceId");
      }

      public updateBizInstanceAttrValueByInstanceId_args getEmptyArgsInstance() {
        return new updateBizInstanceAttrValueByInstanceId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateBizInstanceAttrValueByInstanceId_result getResult(I iface, updateBizInstanceAttrValueByInstanceId_args args) throws org.apache.thrift.TException {
        updateBizInstanceAttrValueByInstanceId_result result = new updateBizInstanceAttrValueByInstanceId_result();
        result.success = iface.updateBizInstanceAttrValueByInstanceId(args.originVo, args.bizInstanceAttrValueVo);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class getBizInstanceAttrValueByInstanceId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBizInstanceAttrValueByInstanceId_args> {
      public getBizInstanceAttrValueByInstanceId() {
        super("getBizInstanceAttrValueByInstanceId");
      }

      public getBizInstanceAttrValueByInstanceId_args getEmptyArgsInstance() {
        return new getBizInstanceAttrValueByInstanceId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getBizInstanceAttrValueByInstanceId_result getResult(I iface, getBizInstanceAttrValueByInstanceId_args args) throws org.apache.thrift.TException {
        getBizInstanceAttrValueByInstanceId_result result = new getBizInstanceAttrValueByInstanceId_result();
        result.success = iface.getBizInstanceAttrValueByInstanceId(args.instanceId);
        return result;
      }
    }

    public static class getOneBizInstanceAttrValue<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getOneBizInstanceAttrValue_args> {
      public getOneBizInstanceAttrValue() {
        super("getOneBizInstanceAttrValue");
      }

      public getOneBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new getOneBizInstanceAttrValue_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getOneBizInstanceAttrValue_result getResult(I iface, getOneBizInstanceAttrValue_args args) throws org.apache.thrift.TException {
        getOneBizInstanceAttrValue_result result = new getOneBizInstanceAttrValue_result();
        result.success = iface.getOneBizInstanceAttrValue(args.bizInstanceAttrValueVo);
        return result;
      }
    }

    public static class countBizInstanceAttrValue<I extends Iface> extends org.apache.thrift.ProcessFunction<I, countBizInstanceAttrValue_args> {
      public countBizInstanceAttrValue() {
        super("countBizInstanceAttrValue");
      }

      public countBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new countBizInstanceAttrValue_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public countBizInstanceAttrValue_result getResult(I iface, countBizInstanceAttrValue_args args) throws org.apache.thrift.TException {
        countBizInstanceAttrValue_result result = new countBizInstanceAttrValue_result();
        result.success = iface.countBizInstanceAttrValue(args.bizInstanceAttrValueVo);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class getBizInstanceAttrValue<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBizInstanceAttrValue_args> {
      public getBizInstanceAttrValue() {
        super("getBizInstanceAttrValue");
      }

      public getBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new getBizInstanceAttrValue_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getBizInstanceAttrValue_result getResult(I iface, getBizInstanceAttrValue_args args) throws org.apache.thrift.TException {
        getBizInstanceAttrValue_result result = new getBizInstanceAttrValue_result();
        result.success = iface.getBizInstanceAttrValue(args.bizInstanceAttrValueVo);
        return result;
      }
    }

    public static class getBizInstanceAttrValueByPage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBizInstanceAttrValueByPage_args> {
      public getBizInstanceAttrValueByPage() {
        super("getBizInstanceAttrValueByPage");
      }

      public getBizInstanceAttrValueByPage_args getEmptyArgsInstance() {
        return new getBizInstanceAttrValueByPage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getBizInstanceAttrValueByPage_result getResult(I iface, getBizInstanceAttrValueByPage_args args) throws org.apache.thrift.TException {
        getBizInstanceAttrValueByPage_result result = new getBizInstanceAttrValueByPage_result();
        result.success = iface.getBizInstanceAttrValueByPage(args.page, args.bizInstanceAttrValueVo);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends com.froad.thrift.monitor.service.BizMonitorService.AsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("addBizInstanceAttrValue", new addBizInstanceAttrValue());
      processMap.put("deleteBizInstanceAttrValue", new deleteBizInstanceAttrValue());
      processMap.put("deleteBizInstanceAttrValueByInstanceId", new deleteBizInstanceAttrValueByInstanceId());
      processMap.put("updateBizInstanceAttrValue", new updateBizInstanceAttrValue());
      processMap.put("updateBizInstanceAttrValueByInstanceId", new updateBizInstanceAttrValueByInstanceId());
      processMap.put("getBizInstanceAttrValueByInstanceId", new getBizInstanceAttrValueByInstanceId());
      processMap.put("getOneBizInstanceAttrValue", new getOneBizInstanceAttrValue());
      processMap.put("countBizInstanceAttrValue", new countBizInstanceAttrValue());
      processMap.put("getBizInstanceAttrValue", new getBizInstanceAttrValue());
      processMap.put("getBizInstanceAttrValueByPage", new getBizInstanceAttrValueByPage());
      return processMap;
    }

    public static class addBizInstanceAttrValue<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addBizInstanceAttrValue_args, String> {
      public addBizInstanceAttrValue() {
        super("addBizInstanceAttrValue");
      }

      public addBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new addBizInstanceAttrValue_args();
      }

      public AsyncMethodCallback<String> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<String>() { 
          public void onComplete(String o) {
            addBizInstanceAttrValue_result result = new addBizInstanceAttrValue_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addBizInstanceAttrValue_result result = new addBizInstanceAttrValue_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addBizInstanceAttrValue_args args, org.apache.thrift.async.AsyncMethodCallback<String> resultHandler) throws TException {
        iface.addBizInstanceAttrValue(args.originVo, args.bizInstanceAttrValueVo,resultHandler);
      }
    }

    public static class deleteBizInstanceAttrValue<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteBizInstanceAttrValue_args, Boolean> {
      public deleteBizInstanceAttrValue() {
        super("deleteBizInstanceAttrValue");
      }

      public deleteBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new deleteBizInstanceAttrValue_args();
      }

      public AsyncMethodCallback<Boolean> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Boolean>() { 
          public void onComplete(Boolean o) {
            deleteBizInstanceAttrValue_result result = new deleteBizInstanceAttrValue_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            deleteBizInstanceAttrValue_result result = new deleteBizInstanceAttrValue_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteBizInstanceAttrValue_args args, org.apache.thrift.async.AsyncMethodCallback<Boolean> resultHandler) throws TException {
        iface.deleteBizInstanceAttrValue(args.originVo, args.bizInstanceAttrValueVo,resultHandler);
      }
    }

    public static class deleteBizInstanceAttrValueByInstanceId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteBizInstanceAttrValueByInstanceId_args, Boolean> {
      public deleteBizInstanceAttrValueByInstanceId() {
        super("deleteBizInstanceAttrValueByInstanceId");
      }

      public deleteBizInstanceAttrValueByInstanceId_args getEmptyArgsInstance() {
        return new deleteBizInstanceAttrValueByInstanceId_args();
      }

      public AsyncMethodCallback<Boolean> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Boolean>() { 
          public void onComplete(Boolean o) {
            deleteBizInstanceAttrValueByInstanceId_result result = new deleteBizInstanceAttrValueByInstanceId_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            deleteBizInstanceAttrValueByInstanceId_result result = new deleteBizInstanceAttrValueByInstanceId_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteBizInstanceAttrValueByInstanceId_args args, org.apache.thrift.async.AsyncMethodCallback<Boolean> resultHandler) throws TException {
        iface.deleteBizInstanceAttrValueByInstanceId(args.originVo, args.instanceId,resultHandler);
      }
    }

    public static class updateBizInstanceAttrValue<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateBizInstanceAttrValue_args, Boolean> {
      public updateBizInstanceAttrValue() {
        super("updateBizInstanceAttrValue");
      }

      public updateBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new updateBizInstanceAttrValue_args();
      }

      public AsyncMethodCallback<Boolean> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Boolean>() { 
          public void onComplete(Boolean o) {
            updateBizInstanceAttrValue_result result = new updateBizInstanceAttrValue_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            updateBizInstanceAttrValue_result result = new updateBizInstanceAttrValue_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateBizInstanceAttrValue_args args, org.apache.thrift.async.AsyncMethodCallback<Boolean> resultHandler) throws TException {
        iface.updateBizInstanceAttrValue(args.originVo, args.bizInstanceAttrValueVo,resultHandler);
      }
    }

    public static class updateBizInstanceAttrValueByInstanceId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateBizInstanceAttrValueByInstanceId_args, Boolean> {
      public updateBizInstanceAttrValueByInstanceId() {
        super("updateBizInstanceAttrValueByInstanceId");
      }

      public updateBizInstanceAttrValueByInstanceId_args getEmptyArgsInstance() {
        return new updateBizInstanceAttrValueByInstanceId_args();
      }

      public AsyncMethodCallback<Boolean> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Boolean>() { 
          public void onComplete(Boolean o) {
            updateBizInstanceAttrValueByInstanceId_result result = new updateBizInstanceAttrValueByInstanceId_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            updateBizInstanceAttrValueByInstanceId_result result = new updateBizInstanceAttrValueByInstanceId_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateBizInstanceAttrValueByInstanceId_args args, org.apache.thrift.async.AsyncMethodCallback<Boolean> resultHandler) throws TException {
        iface.updateBizInstanceAttrValueByInstanceId(args.originVo, args.bizInstanceAttrValueVo,resultHandler);
      }
    }

    public static class getBizInstanceAttrValueByInstanceId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBizInstanceAttrValueByInstanceId_args, com.froad.thrift.vo.BizInstanceAttrValueVo> {
      public getBizInstanceAttrValueByInstanceId() {
        super("getBizInstanceAttrValueByInstanceId");
      }

      public getBizInstanceAttrValueByInstanceId_args getEmptyArgsInstance() {
        return new getBizInstanceAttrValueByInstanceId_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.BizInstanceAttrValueVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.BizInstanceAttrValueVo>() { 
          public void onComplete(com.froad.thrift.vo.BizInstanceAttrValueVo o) {
            getBizInstanceAttrValueByInstanceId_result result = new getBizInstanceAttrValueByInstanceId_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getBizInstanceAttrValueByInstanceId_result result = new getBizInstanceAttrValueByInstanceId_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBizInstanceAttrValueByInstanceId_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.BizInstanceAttrValueVo> resultHandler) throws TException {
        iface.getBizInstanceAttrValueByInstanceId(args.instanceId,resultHandler);
      }
    }

    public static class getOneBizInstanceAttrValue<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getOneBizInstanceAttrValue_args, com.froad.thrift.vo.BizInstanceAttrValueVo> {
      public getOneBizInstanceAttrValue() {
        super("getOneBizInstanceAttrValue");
      }

      public getOneBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new getOneBizInstanceAttrValue_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.BizInstanceAttrValueVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.BizInstanceAttrValueVo>() { 
          public void onComplete(com.froad.thrift.vo.BizInstanceAttrValueVo o) {
            getOneBizInstanceAttrValue_result result = new getOneBizInstanceAttrValue_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getOneBizInstanceAttrValue_result result = new getOneBizInstanceAttrValue_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getOneBizInstanceAttrValue_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.BizInstanceAttrValueVo> resultHandler) throws TException {
        iface.getOneBizInstanceAttrValue(args.bizInstanceAttrValueVo,resultHandler);
      }
    }

    public static class countBizInstanceAttrValue<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, countBizInstanceAttrValue_args, Integer> {
      public countBizInstanceAttrValue() {
        super("countBizInstanceAttrValue");
      }

      public countBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new countBizInstanceAttrValue_args();
      }

      public AsyncMethodCallback<Integer> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Integer>() { 
          public void onComplete(Integer o) {
            countBizInstanceAttrValue_result result = new countBizInstanceAttrValue_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            countBizInstanceAttrValue_result result = new countBizInstanceAttrValue_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, countBizInstanceAttrValue_args args, org.apache.thrift.async.AsyncMethodCallback<Integer> resultHandler) throws TException {
        iface.countBizInstanceAttrValue(args.bizInstanceAttrValueVo,resultHandler);
      }
    }

    public static class getBizInstanceAttrValue<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBizInstanceAttrValue_args, List<com.froad.thrift.vo.BizInstanceAttrValueVo>> {
      public getBizInstanceAttrValue() {
        super("getBizInstanceAttrValue");
      }

      public getBizInstanceAttrValue_args getEmptyArgsInstance() {
        return new getBizInstanceAttrValue_args();
      }

      public AsyncMethodCallback<List<com.froad.thrift.vo.BizInstanceAttrValueVo>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<com.froad.thrift.vo.BizInstanceAttrValueVo>>() { 
          public void onComplete(List<com.froad.thrift.vo.BizInstanceAttrValueVo> o) {
            getBizInstanceAttrValue_result result = new getBizInstanceAttrValue_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getBizInstanceAttrValue_result result = new getBizInstanceAttrValue_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBizInstanceAttrValue_args args, org.apache.thrift.async.AsyncMethodCallback<List<com.froad.thrift.vo.BizInstanceAttrValueVo>> resultHandler) throws TException {
        iface.getBizInstanceAttrValue(args.bizInstanceAttrValueVo,resultHandler);
      }
    }

    public static class getBizInstanceAttrValueByPage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBizInstanceAttrValueByPage_args, com.froad.thrift.vo.BizInstanceAttrValuePageVoRes> {
      public getBizInstanceAttrValueByPage() {
        super("getBizInstanceAttrValueByPage");
      }

      public getBizInstanceAttrValueByPage_args getEmptyArgsInstance() {
        return new getBizInstanceAttrValueByPage_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.BizInstanceAttrValuePageVoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.BizInstanceAttrValuePageVoRes>() { 
          public void onComplete(com.froad.thrift.vo.BizInstanceAttrValuePageVoRes o) {
            getBizInstanceAttrValueByPage_result result = new getBizInstanceAttrValueByPage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getBizInstanceAttrValueByPage_result result = new getBizInstanceAttrValueByPage_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBizInstanceAttrValueByPage_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.BizInstanceAttrValuePageVoRes> resultHandler) throws TException {
        iface.getBizInstanceAttrValueByPage(args.page, args.bizInstanceAttrValueVo,resultHandler);
      }
    }

  }

  public static class addBizInstanceAttrValue_args implements org.apache.thrift.TBase<addBizInstanceAttrValue_args, addBizInstanceAttrValue_args._Fields>, java.io.Serializable, Cloneable, Comparable<addBizInstanceAttrValue_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addBizInstanceAttrValue_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bizInstanceAttrValueVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addBizInstanceAttrValue_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addBizInstanceAttrValue_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      BIZ_INSTANCE_ATTR_VALUE_VO((short)2, "bizInstanceAttrValueVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
            return BIZ_INSTANCE_ATTR_VALUE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.BIZ_INSTANCE_ATTR_VALUE_VO, new org.apache.thrift.meta_data.FieldMetaData("bizInstanceAttrValueVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addBizInstanceAttrValue_args.class, metaDataMap);
    }

    public addBizInstanceAttrValue_args() {
    }

    public addBizInstanceAttrValue_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo)
    {
      this();
      this.originVo = originVo;
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addBizInstanceAttrValue_args(addBizInstanceAttrValue_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetBizInstanceAttrValueVo()) {
        this.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.bizInstanceAttrValueVo);
      }
    }

    public addBizInstanceAttrValue_args deepCopy() {
      return new addBizInstanceAttrValue_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.bizInstanceAttrValueVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public addBizInstanceAttrValue_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo;
    }

    public addBizInstanceAttrValue_args setBizInstanceAttrValueVo(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) {
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      return this;
    }

    public void unsetBizInstanceAttrValueVo() {
      this.bizInstanceAttrValueVo = null;
    }

    /** Returns true if field bizInstanceAttrValueVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo != null;
    }

    public void setBizInstanceAttrValueVoIsSet(boolean value) {
      if (!value) {
        this.bizInstanceAttrValueVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        if (value == null) {
          unsetBizInstanceAttrValueVo();
        } else {
          setBizInstanceAttrValueVo((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return getBizInstanceAttrValueVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return isSetBizInstanceAttrValueVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addBizInstanceAttrValue_args)
        return this.equals((addBizInstanceAttrValue_args)that);
      return false;
    }

    public boolean equals(addBizInstanceAttrValue_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_bizInstanceAttrValueVo = true && this.isSetBizInstanceAttrValueVo();
      boolean that_present_bizInstanceAttrValueVo = true && that.isSetBizInstanceAttrValueVo();
      if (this_present_bizInstanceAttrValueVo || that_present_bizInstanceAttrValueVo) {
        if (!(this_present_bizInstanceAttrValueVo && that_present_bizInstanceAttrValueVo))
          return false;
        if (!this.bizInstanceAttrValueVo.equals(that.bizInstanceAttrValueVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_bizInstanceAttrValueVo = true && (isSetBizInstanceAttrValueVo());
      list.add(present_bizInstanceAttrValueVo);
      if (present_bizInstanceAttrValueVo)
        list.add(bizInstanceAttrValueVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(addBizInstanceAttrValue_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetBizInstanceAttrValueVo()).compareTo(other.isSetBizInstanceAttrValueVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBizInstanceAttrValueVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizInstanceAttrValueVo, other.bizInstanceAttrValueVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addBizInstanceAttrValue_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("bizInstanceAttrValueVo:");
      if (this.bizInstanceAttrValueVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bizInstanceAttrValueVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (bizInstanceAttrValueVo != null) {
        bizInstanceAttrValueVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addBizInstanceAttrValue_argsStandardSchemeFactory implements SchemeFactory {
      public addBizInstanceAttrValue_argsStandardScheme getScheme() {
        return new addBizInstanceAttrValue_argsStandardScheme();
      }
    }

    private static class addBizInstanceAttrValue_argsStandardScheme extends StandardScheme<addBizInstanceAttrValue_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.bizInstanceAttrValueVo.read(iprot);
                struct.setBizInstanceAttrValueVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.bizInstanceAttrValueVo != null) {
          oprot.writeFieldBegin(BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC);
          struct.bizInstanceAttrValueVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addBizInstanceAttrValue_argsTupleSchemeFactory implements SchemeFactory {
      public addBizInstanceAttrValue_argsTupleScheme getScheme() {
        return new addBizInstanceAttrValue_argsTupleScheme();
      }
    }

    private static class addBizInstanceAttrValue_argsTupleScheme extends TupleScheme<addBizInstanceAttrValue_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          struct.bizInstanceAttrValueVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.bizInstanceAttrValueVo.read(iprot);
          struct.setBizInstanceAttrValueVoIsSet(true);
        }
      }
    }

  }

  public static class addBizInstanceAttrValue_result implements org.apache.thrift.TBase<addBizInstanceAttrValue_result, addBizInstanceAttrValue_result._Fields>, java.io.Serializable, Cloneable, Comparable<addBizInstanceAttrValue_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addBizInstanceAttrValue_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addBizInstanceAttrValue_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addBizInstanceAttrValue_resultTupleSchemeFactory());
    }

    public String success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addBizInstanceAttrValue_result.class, metaDataMap);
    }

    public addBizInstanceAttrValue_result() {
    }

    public addBizInstanceAttrValue_result(
      String success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addBizInstanceAttrValue_result(addBizInstanceAttrValue_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
    }

    public addBizInstanceAttrValue_result deepCopy() {
      return new addBizInstanceAttrValue_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public String getSuccess() {
      return this.success;
    }

    public addBizInstanceAttrValue_result setSuccess(String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addBizInstanceAttrValue_result)
        return this.equals((addBizInstanceAttrValue_result)that);
      return false;
    }

    public boolean equals(addBizInstanceAttrValue_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(addBizInstanceAttrValue_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addBizInstanceAttrValue_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addBizInstanceAttrValue_resultStandardSchemeFactory implements SchemeFactory {
      public addBizInstanceAttrValue_resultStandardScheme getScheme() {
        return new addBizInstanceAttrValue_resultStandardScheme();
      }
    }

    private static class addBizInstanceAttrValue_resultStandardScheme extends StandardScheme<addBizInstanceAttrValue_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addBizInstanceAttrValue_resultTupleSchemeFactory implements SchemeFactory {
      public addBizInstanceAttrValue_resultTupleScheme getScheme() {
        return new addBizInstanceAttrValue_resultTupleScheme();
      }
    }

    private static class addBizInstanceAttrValue_resultTupleScheme extends TupleScheme<addBizInstanceAttrValue_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class deleteBizInstanceAttrValue_args implements org.apache.thrift.TBase<deleteBizInstanceAttrValue_args, deleteBizInstanceAttrValue_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteBizInstanceAttrValue_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteBizInstanceAttrValue_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bizInstanceAttrValueVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteBizInstanceAttrValue_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteBizInstanceAttrValue_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      BIZ_INSTANCE_ATTR_VALUE_VO((short)2, "bizInstanceAttrValueVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
            return BIZ_INSTANCE_ATTR_VALUE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.BIZ_INSTANCE_ATTR_VALUE_VO, new org.apache.thrift.meta_data.FieldMetaData("bizInstanceAttrValueVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteBizInstanceAttrValue_args.class, metaDataMap);
    }

    public deleteBizInstanceAttrValue_args() {
    }

    public deleteBizInstanceAttrValue_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo)
    {
      this();
      this.originVo = originVo;
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteBizInstanceAttrValue_args(deleteBizInstanceAttrValue_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetBizInstanceAttrValueVo()) {
        this.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.bizInstanceAttrValueVo);
      }
    }

    public deleteBizInstanceAttrValue_args deepCopy() {
      return new deleteBizInstanceAttrValue_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.bizInstanceAttrValueVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public deleteBizInstanceAttrValue_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo;
    }

    public deleteBizInstanceAttrValue_args setBizInstanceAttrValueVo(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) {
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      return this;
    }

    public void unsetBizInstanceAttrValueVo() {
      this.bizInstanceAttrValueVo = null;
    }

    /** Returns true if field bizInstanceAttrValueVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo != null;
    }

    public void setBizInstanceAttrValueVoIsSet(boolean value) {
      if (!value) {
        this.bizInstanceAttrValueVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        if (value == null) {
          unsetBizInstanceAttrValueVo();
        } else {
          setBizInstanceAttrValueVo((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return getBizInstanceAttrValueVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return isSetBizInstanceAttrValueVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteBizInstanceAttrValue_args)
        return this.equals((deleteBizInstanceAttrValue_args)that);
      return false;
    }

    public boolean equals(deleteBizInstanceAttrValue_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_bizInstanceAttrValueVo = true && this.isSetBizInstanceAttrValueVo();
      boolean that_present_bizInstanceAttrValueVo = true && that.isSetBizInstanceAttrValueVo();
      if (this_present_bizInstanceAttrValueVo || that_present_bizInstanceAttrValueVo) {
        if (!(this_present_bizInstanceAttrValueVo && that_present_bizInstanceAttrValueVo))
          return false;
        if (!this.bizInstanceAttrValueVo.equals(that.bizInstanceAttrValueVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_bizInstanceAttrValueVo = true && (isSetBizInstanceAttrValueVo());
      list.add(present_bizInstanceAttrValueVo);
      if (present_bizInstanceAttrValueVo)
        list.add(bizInstanceAttrValueVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteBizInstanceAttrValue_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetBizInstanceAttrValueVo()).compareTo(other.isSetBizInstanceAttrValueVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBizInstanceAttrValueVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizInstanceAttrValueVo, other.bizInstanceAttrValueVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteBizInstanceAttrValue_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("bizInstanceAttrValueVo:");
      if (this.bizInstanceAttrValueVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bizInstanceAttrValueVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (bizInstanceAttrValueVo != null) {
        bizInstanceAttrValueVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteBizInstanceAttrValue_argsStandardSchemeFactory implements SchemeFactory {
      public deleteBizInstanceAttrValue_argsStandardScheme getScheme() {
        return new deleteBizInstanceAttrValue_argsStandardScheme();
      }
    }

    private static class deleteBizInstanceAttrValue_argsStandardScheme extends StandardScheme<deleteBizInstanceAttrValue_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.bizInstanceAttrValueVo.read(iprot);
                struct.setBizInstanceAttrValueVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.bizInstanceAttrValueVo != null) {
          oprot.writeFieldBegin(BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC);
          struct.bizInstanceAttrValueVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteBizInstanceAttrValue_argsTupleSchemeFactory implements SchemeFactory {
      public deleteBizInstanceAttrValue_argsTupleScheme getScheme() {
        return new deleteBizInstanceAttrValue_argsTupleScheme();
      }
    }

    private static class deleteBizInstanceAttrValue_argsTupleScheme extends TupleScheme<deleteBizInstanceAttrValue_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          struct.bizInstanceAttrValueVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.bizInstanceAttrValueVo.read(iprot);
          struct.setBizInstanceAttrValueVoIsSet(true);
        }
      }
    }

  }

  public static class deleteBizInstanceAttrValue_result implements org.apache.thrift.TBase<deleteBizInstanceAttrValue_result, deleteBizInstanceAttrValue_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteBizInstanceAttrValue_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteBizInstanceAttrValue_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteBizInstanceAttrValue_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteBizInstanceAttrValue_resultTupleSchemeFactory());
    }

    public boolean success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteBizInstanceAttrValue_result.class, metaDataMap);
    }

    public deleteBizInstanceAttrValue_result() {
    }

    public deleteBizInstanceAttrValue_result(
      boolean success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteBizInstanceAttrValue_result(deleteBizInstanceAttrValue_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public deleteBizInstanceAttrValue_result deepCopy() {
      return new deleteBizInstanceAttrValue_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public deleteBizInstanceAttrValue_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Boolean)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Boolean.valueOf(isSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteBizInstanceAttrValue_result)
        return this.equals((deleteBizInstanceAttrValue_result)that);
      return false;
    }

    public boolean equals(deleteBizInstanceAttrValue_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteBizInstanceAttrValue_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteBizInstanceAttrValue_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteBizInstanceAttrValue_resultStandardSchemeFactory implements SchemeFactory {
      public deleteBizInstanceAttrValue_resultStandardScheme getScheme() {
        return new deleteBizInstanceAttrValue_resultStandardScheme();
      }
    }

    private static class deleteBizInstanceAttrValue_resultStandardScheme extends StandardScheme<deleteBizInstanceAttrValue_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteBizInstanceAttrValue_resultTupleSchemeFactory implements SchemeFactory {
      public deleteBizInstanceAttrValue_resultTupleScheme getScheme() {
        return new deleteBizInstanceAttrValue_resultTupleScheme();
      }
    }

    private static class deleteBizInstanceAttrValue_resultTupleScheme extends TupleScheme<deleteBizInstanceAttrValue_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class deleteBizInstanceAttrValueByInstanceId_args implements org.apache.thrift.TBase<deleteBizInstanceAttrValueByInstanceId_args, deleteBizInstanceAttrValueByInstanceId_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteBizInstanceAttrValueByInstanceId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteBizInstanceAttrValueByInstanceId_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField INSTANCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("instanceId", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteBizInstanceAttrValueByInstanceId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteBizInstanceAttrValueByInstanceId_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public String instanceId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      INSTANCE_ID((short)2, "instanceId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // INSTANCE_ID
            return INSTANCE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.INSTANCE_ID, new org.apache.thrift.meta_data.FieldMetaData("instanceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteBizInstanceAttrValueByInstanceId_args.class, metaDataMap);
    }

    public deleteBizInstanceAttrValueByInstanceId_args() {
    }

    public deleteBizInstanceAttrValueByInstanceId_args(
      com.froad.thrift.vo.OriginVo originVo,
      String instanceId)
    {
      this();
      this.originVo = originVo;
      this.instanceId = instanceId;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteBizInstanceAttrValueByInstanceId_args(deleteBizInstanceAttrValueByInstanceId_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetInstanceId()) {
        this.instanceId = other.instanceId;
      }
    }

    public deleteBizInstanceAttrValueByInstanceId_args deepCopy() {
      return new deleteBizInstanceAttrValueByInstanceId_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.instanceId = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public deleteBizInstanceAttrValueByInstanceId_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public String getInstanceId() {
      return this.instanceId;
    }

    public deleteBizInstanceAttrValueByInstanceId_args setInstanceId(String instanceId) {
      this.instanceId = instanceId;
      return this;
    }

    public void unsetInstanceId() {
      this.instanceId = null;
    }

    /** Returns true if field instanceId is set (has been assigned a value) and false otherwise */
    public boolean isSetInstanceId() {
      return this.instanceId != null;
    }

    public void setInstanceIdIsSet(boolean value) {
      if (!value) {
        this.instanceId = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case INSTANCE_ID:
        if (value == null) {
          unsetInstanceId();
        } else {
          setInstanceId((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case INSTANCE_ID:
        return getInstanceId();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case INSTANCE_ID:
        return isSetInstanceId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteBizInstanceAttrValueByInstanceId_args)
        return this.equals((deleteBizInstanceAttrValueByInstanceId_args)that);
      return false;
    }

    public boolean equals(deleteBizInstanceAttrValueByInstanceId_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_instanceId = true && this.isSetInstanceId();
      boolean that_present_instanceId = true && that.isSetInstanceId();
      if (this_present_instanceId || that_present_instanceId) {
        if (!(this_present_instanceId && that_present_instanceId))
          return false;
        if (!this.instanceId.equals(that.instanceId))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_instanceId = true && (isSetInstanceId());
      list.add(present_instanceId);
      if (present_instanceId)
        list.add(instanceId);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteBizInstanceAttrValueByInstanceId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetInstanceId()).compareTo(other.isSetInstanceId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetInstanceId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.instanceId, other.instanceId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteBizInstanceAttrValueByInstanceId_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("instanceId:");
      if (this.instanceId == null) {
        sb.append("null");
      } else {
        sb.append(this.instanceId);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteBizInstanceAttrValueByInstanceId_argsStandardSchemeFactory implements SchemeFactory {
      public deleteBizInstanceAttrValueByInstanceId_argsStandardScheme getScheme() {
        return new deleteBizInstanceAttrValueByInstanceId_argsStandardScheme();
      }
    }

    private static class deleteBizInstanceAttrValueByInstanceId_argsStandardScheme extends StandardScheme<deleteBizInstanceAttrValueByInstanceId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // INSTANCE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.instanceId = iprot.readString();
                struct.setInstanceIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.instanceId != null) {
          oprot.writeFieldBegin(INSTANCE_ID_FIELD_DESC);
          oprot.writeString(struct.instanceId);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteBizInstanceAttrValueByInstanceId_argsTupleSchemeFactory implements SchemeFactory {
      public deleteBizInstanceAttrValueByInstanceId_argsTupleScheme getScheme() {
        return new deleteBizInstanceAttrValueByInstanceId_argsTupleScheme();
      }
    }

    private static class deleteBizInstanceAttrValueByInstanceId_argsTupleScheme extends TupleScheme<deleteBizInstanceAttrValueByInstanceId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetInstanceId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetInstanceId()) {
          oprot.writeString(struct.instanceId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.instanceId = iprot.readString();
          struct.setInstanceIdIsSet(true);
        }
      }
    }

  }

  public static class deleteBizInstanceAttrValueByInstanceId_result implements org.apache.thrift.TBase<deleteBizInstanceAttrValueByInstanceId_result, deleteBizInstanceAttrValueByInstanceId_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteBizInstanceAttrValueByInstanceId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteBizInstanceAttrValueByInstanceId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteBizInstanceAttrValueByInstanceId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteBizInstanceAttrValueByInstanceId_resultTupleSchemeFactory());
    }

    public boolean success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteBizInstanceAttrValueByInstanceId_result.class, metaDataMap);
    }

    public deleteBizInstanceAttrValueByInstanceId_result() {
    }

    public deleteBizInstanceAttrValueByInstanceId_result(
      boolean success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteBizInstanceAttrValueByInstanceId_result(deleteBizInstanceAttrValueByInstanceId_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public deleteBizInstanceAttrValueByInstanceId_result deepCopy() {
      return new deleteBizInstanceAttrValueByInstanceId_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public deleteBizInstanceAttrValueByInstanceId_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Boolean)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Boolean.valueOf(isSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteBizInstanceAttrValueByInstanceId_result)
        return this.equals((deleteBizInstanceAttrValueByInstanceId_result)that);
      return false;
    }

    public boolean equals(deleteBizInstanceAttrValueByInstanceId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteBizInstanceAttrValueByInstanceId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteBizInstanceAttrValueByInstanceId_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteBizInstanceAttrValueByInstanceId_resultStandardSchemeFactory implements SchemeFactory {
      public deleteBizInstanceAttrValueByInstanceId_resultStandardScheme getScheme() {
        return new deleteBizInstanceAttrValueByInstanceId_resultStandardScheme();
      }
    }

    private static class deleteBizInstanceAttrValueByInstanceId_resultStandardScheme extends StandardScheme<deleteBizInstanceAttrValueByInstanceId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteBizInstanceAttrValueByInstanceId_resultTupleSchemeFactory implements SchemeFactory {
      public deleteBizInstanceAttrValueByInstanceId_resultTupleScheme getScheme() {
        return new deleteBizInstanceAttrValueByInstanceId_resultTupleScheme();
      }
    }

    private static class deleteBizInstanceAttrValueByInstanceId_resultTupleScheme extends TupleScheme<deleteBizInstanceAttrValueByInstanceId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class updateBizInstanceAttrValue_args implements org.apache.thrift.TBase<updateBizInstanceAttrValue_args, updateBizInstanceAttrValue_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateBizInstanceAttrValue_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateBizInstanceAttrValue_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bizInstanceAttrValueVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateBizInstanceAttrValue_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateBizInstanceAttrValue_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      BIZ_INSTANCE_ATTR_VALUE_VO((short)2, "bizInstanceAttrValueVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
            return BIZ_INSTANCE_ATTR_VALUE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.BIZ_INSTANCE_ATTR_VALUE_VO, new org.apache.thrift.meta_data.FieldMetaData("bizInstanceAttrValueVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateBizInstanceAttrValue_args.class, metaDataMap);
    }

    public updateBizInstanceAttrValue_args() {
    }

    public updateBizInstanceAttrValue_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo)
    {
      this();
      this.originVo = originVo;
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateBizInstanceAttrValue_args(updateBizInstanceAttrValue_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetBizInstanceAttrValueVo()) {
        this.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.bizInstanceAttrValueVo);
      }
    }

    public updateBizInstanceAttrValue_args deepCopy() {
      return new updateBizInstanceAttrValue_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.bizInstanceAttrValueVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public updateBizInstanceAttrValue_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo;
    }

    public updateBizInstanceAttrValue_args setBizInstanceAttrValueVo(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) {
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      return this;
    }

    public void unsetBizInstanceAttrValueVo() {
      this.bizInstanceAttrValueVo = null;
    }

    /** Returns true if field bizInstanceAttrValueVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo != null;
    }

    public void setBizInstanceAttrValueVoIsSet(boolean value) {
      if (!value) {
        this.bizInstanceAttrValueVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        if (value == null) {
          unsetBizInstanceAttrValueVo();
        } else {
          setBizInstanceAttrValueVo((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return getBizInstanceAttrValueVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return isSetBizInstanceAttrValueVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateBizInstanceAttrValue_args)
        return this.equals((updateBizInstanceAttrValue_args)that);
      return false;
    }

    public boolean equals(updateBizInstanceAttrValue_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_bizInstanceAttrValueVo = true && this.isSetBizInstanceAttrValueVo();
      boolean that_present_bizInstanceAttrValueVo = true && that.isSetBizInstanceAttrValueVo();
      if (this_present_bizInstanceAttrValueVo || that_present_bizInstanceAttrValueVo) {
        if (!(this_present_bizInstanceAttrValueVo && that_present_bizInstanceAttrValueVo))
          return false;
        if (!this.bizInstanceAttrValueVo.equals(that.bizInstanceAttrValueVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_bizInstanceAttrValueVo = true && (isSetBizInstanceAttrValueVo());
      list.add(present_bizInstanceAttrValueVo);
      if (present_bizInstanceAttrValueVo)
        list.add(bizInstanceAttrValueVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateBizInstanceAttrValue_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetBizInstanceAttrValueVo()).compareTo(other.isSetBizInstanceAttrValueVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBizInstanceAttrValueVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizInstanceAttrValueVo, other.bizInstanceAttrValueVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateBizInstanceAttrValue_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("bizInstanceAttrValueVo:");
      if (this.bizInstanceAttrValueVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bizInstanceAttrValueVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (bizInstanceAttrValueVo != null) {
        bizInstanceAttrValueVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateBizInstanceAttrValue_argsStandardSchemeFactory implements SchemeFactory {
      public updateBizInstanceAttrValue_argsStandardScheme getScheme() {
        return new updateBizInstanceAttrValue_argsStandardScheme();
      }
    }

    private static class updateBizInstanceAttrValue_argsStandardScheme extends StandardScheme<updateBizInstanceAttrValue_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.bizInstanceAttrValueVo.read(iprot);
                struct.setBizInstanceAttrValueVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.bizInstanceAttrValueVo != null) {
          oprot.writeFieldBegin(BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC);
          struct.bizInstanceAttrValueVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateBizInstanceAttrValue_argsTupleSchemeFactory implements SchemeFactory {
      public updateBizInstanceAttrValue_argsTupleScheme getScheme() {
        return new updateBizInstanceAttrValue_argsTupleScheme();
      }
    }

    private static class updateBizInstanceAttrValue_argsTupleScheme extends TupleScheme<updateBizInstanceAttrValue_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          struct.bizInstanceAttrValueVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.bizInstanceAttrValueVo.read(iprot);
          struct.setBizInstanceAttrValueVoIsSet(true);
        }
      }
    }

  }

  public static class updateBizInstanceAttrValue_result implements org.apache.thrift.TBase<updateBizInstanceAttrValue_result, updateBizInstanceAttrValue_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateBizInstanceAttrValue_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateBizInstanceAttrValue_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateBizInstanceAttrValue_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateBizInstanceAttrValue_resultTupleSchemeFactory());
    }

    public boolean success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateBizInstanceAttrValue_result.class, metaDataMap);
    }

    public updateBizInstanceAttrValue_result() {
    }

    public updateBizInstanceAttrValue_result(
      boolean success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateBizInstanceAttrValue_result(updateBizInstanceAttrValue_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public updateBizInstanceAttrValue_result deepCopy() {
      return new updateBizInstanceAttrValue_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public updateBizInstanceAttrValue_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Boolean)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Boolean.valueOf(isSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateBizInstanceAttrValue_result)
        return this.equals((updateBizInstanceAttrValue_result)that);
      return false;
    }

    public boolean equals(updateBizInstanceAttrValue_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateBizInstanceAttrValue_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateBizInstanceAttrValue_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateBizInstanceAttrValue_resultStandardSchemeFactory implements SchemeFactory {
      public updateBizInstanceAttrValue_resultStandardScheme getScheme() {
        return new updateBizInstanceAttrValue_resultStandardScheme();
      }
    }

    private static class updateBizInstanceAttrValue_resultStandardScheme extends StandardScheme<updateBizInstanceAttrValue_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateBizInstanceAttrValue_resultTupleSchemeFactory implements SchemeFactory {
      public updateBizInstanceAttrValue_resultTupleScheme getScheme() {
        return new updateBizInstanceAttrValue_resultTupleScheme();
      }
    }

    private static class updateBizInstanceAttrValue_resultTupleScheme extends TupleScheme<updateBizInstanceAttrValue_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class updateBizInstanceAttrValueByInstanceId_args implements org.apache.thrift.TBase<updateBizInstanceAttrValueByInstanceId_args, updateBizInstanceAttrValueByInstanceId_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateBizInstanceAttrValueByInstanceId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateBizInstanceAttrValueByInstanceId_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bizInstanceAttrValueVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateBizInstanceAttrValueByInstanceId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateBizInstanceAttrValueByInstanceId_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      BIZ_INSTANCE_ATTR_VALUE_VO((short)2, "bizInstanceAttrValueVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
            return BIZ_INSTANCE_ATTR_VALUE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.BIZ_INSTANCE_ATTR_VALUE_VO, new org.apache.thrift.meta_data.FieldMetaData("bizInstanceAttrValueVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateBizInstanceAttrValueByInstanceId_args.class, metaDataMap);
    }

    public updateBizInstanceAttrValueByInstanceId_args() {
    }

    public updateBizInstanceAttrValueByInstanceId_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo)
    {
      this();
      this.originVo = originVo;
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateBizInstanceAttrValueByInstanceId_args(updateBizInstanceAttrValueByInstanceId_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetBizInstanceAttrValueVo()) {
        this.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.bizInstanceAttrValueVo);
      }
    }

    public updateBizInstanceAttrValueByInstanceId_args deepCopy() {
      return new updateBizInstanceAttrValueByInstanceId_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.bizInstanceAttrValueVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public updateBizInstanceAttrValueByInstanceId_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo;
    }

    public updateBizInstanceAttrValueByInstanceId_args setBizInstanceAttrValueVo(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) {
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      return this;
    }

    public void unsetBizInstanceAttrValueVo() {
      this.bizInstanceAttrValueVo = null;
    }

    /** Returns true if field bizInstanceAttrValueVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo != null;
    }

    public void setBizInstanceAttrValueVoIsSet(boolean value) {
      if (!value) {
        this.bizInstanceAttrValueVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        if (value == null) {
          unsetBizInstanceAttrValueVo();
        } else {
          setBizInstanceAttrValueVo((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return getBizInstanceAttrValueVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return isSetBizInstanceAttrValueVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateBizInstanceAttrValueByInstanceId_args)
        return this.equals((updateBizInstanceAttrValueByInstanceId_args)that);
      return false;
    }

    public boolean equals(updateBizInstanceAttrValueByInstanceId_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_bizInstanceAttrValueVo = true && this.isSetBizInstanceAttrValueVo();
      boolean that_present_bizInstanceAttrValueVo = true && that.isSetBizInstanceAttrValueVo();
      if (this_present_bizInstanceAttrValueVo || that_present_bizInstanceAttrValueVo) {
        if (!(this_present_bizInstanceAttrValueVo && that_present_bizInstanceAttrValueVo))
          return false;
        if (!this.bizInstanceAttrValueVo.equals(that.bizInstanceAttrValueVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_bizInstanceAttrValueVo = true && (isSetBizInstanceAttrValueVo());
      list.add(present_bizInstanceAttrValueVo);
      if (present_bizInstanceAttrValueVo)
        list.add(bizInstanceAttrValueVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateBizInstanceAttrValueByInstanceId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetBizInstanceAttrValueVo()).compareTo(other.isSetBizInstanceAttrValueVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBizInstanceAttrValueVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizInstanceAttrValueVo, other.bizInstanceAttrValueVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateBizInstanceAttrValueByInstanceId_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("bizInstanceAttrValueVo:");
      if (this.bizInstanceAttrValueVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bizInstanceAttrValueVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (bizInstanceAttrValueVo != null) {
        bizInstanceAttrValueVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateBizInstanceAttrValueByInstanceId_argsStandardSchemeFactory implements SchemeFactory {
      public updateBizInstanceAttrValueByInstanceId_argsStandardScheme getScheme() {
        return new updateBizInstanceAttrValueByInstanceId_argsStandardScheme();
      }
    }

    private static class updateBizInstanceAttrValueByInstanceId_argsStandardScheme extends StandardScheme<updateBizInstanceAttrValueByInstanceId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.bizInstanceAttrValueVo.read(iprot);
                struct.setBizInstanceAttrValueVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.bizInstanceAttrValueVo != null) {
          oprot.writeFieldBegin(BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC);
          struct.bizInstanceAttrValueVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateBizInstanceAttrValueByInstanceId_argsTupleSchemeFactory implements SchemeFactory {
      public updateBizInstanceAttrValueByInstanceId_argsTupleScheme getScheme() {
        return new updateBizInstanceAttrValueByInstanceId_argsTupleScheme();
      }
    }

    private static class updateBizInstanceAttrValueByInstanceId_argsTupleScheme extends TupleScheme<updateBizInstanceAttrValueByInstanceId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          struct.bizInstanceAttrValueVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.bizInstanceAttrValueVo.read(iprot);
          struct.setBizInstanceAttrValueVoIsSet(true);
        }
      }
    }

  }

  public static class updateBizInstanceAttrValueByInstanceId_result implements org.apache.thrift.TBase<updateBizInstanceAttrValueByInstanceId_result, updateBizInstanceAttrValueByInstanceId_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateBizInstanceAttrValueByInstanceId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateBizInstanceAttrValueByInstanceId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateBizInstanceAttrValueByInstanceId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateBizInstanceAttrValueByInstanceId_resultTupleSchemeFactory());
    }

    public boolean success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateBizInstanceAttrValueByInstanceId_result.class, metaDataMap);
    }

    public updateBizInstanceAttrValueByInstanceId_result() {
    }

    public updateBizInstanceAttrValueByInstanceId_result(
      boolean success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateBizInstanceAttrValueByInstanceId_result(updateBizInstanceAttrValueByInstanceId_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public updateBizInstanceAttrValueByInstanceId_result deepCopy() {
      return new updateBizInstanceAttrValueByInstanceId_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public updateBizInstanceAttrValueByInstanceId_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Boolean)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Boolean.valueOf(isSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateBizInstanceAttrValueByInstanceId_result)
        return this.equals((updateBizInstanceAttrValueByInstanceId_result)that);
      return false;
    }

    public boolean equals(updateBizInstanceAttrValueByInstanceId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateBizInstanceAttrValueByInstanceId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateBizInstanceAttrValueByInstanceId_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateBizInstanceAttrValueByInstanceId_resultStandardSchemeFactory implements SchemeFactory {
      public updateBizInstanceAttrValueByInstanceId_resultStandardScheme getScheme() {
        return new updateBizInstanceAttrValueByInstanceId_resultStandardScheme();
      }
    }

    private static class updateBizInstanceAttrValueByInstanceId_resultStandardScheme extends StandardScheme<updateBizInstanceAttrValueByInstanceId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateBizInstanceAttrValueByInstanceId_resultTupleSchemeFactory implements SchemeFactory {
      public updateBizInstanceAttrValueByInstanceId_resultTupleScheme getScheme() {
        return new updateBizInstanceAttrValueByInstanceId_resultTupleScheme();
      }
    }

    private static class updateBizInstanceAttrValueByInstanceId_resultTupleScheme extends TupleScheme<updateBizInstanceAttrValueByInstanceId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getBizInstanceAttrValueByInstanceId_args implements org.apache.thrift.TBase<getBizInstanceAttrValueByInstanceId_args, getBizInstanceAttrValueByInstanceId_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBizInstanceAttrValueByInstanceId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBizInstanceAttrValueByInstanceId_args");

    private static final org.apache.thrift.protocol.TField INSTANCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("instanceId", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBizInstanceAttrValueByInstanceId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBizInstanceAttrValueByInstanceId_argsTupleSchemeFactory());
    }

    public String instanceId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      INSTANCE_ID((short)1, "instanceId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // INSTANCE_ID
            return INSTANCE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.INSTANCE_ID, new org.apache.thrift.meta_data.FieldMetaData("instanceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBizInstanceAttrValueByInstanceId_args.class, metaDataMap);
    }

    public getBizInstanceAttrValueByInstanceId_args() {
    }

    public getBizInstanceAttrValueByInstanceId_args(
      String instanceId)
    {
      this();
      this.instanceId = instanceId;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBizInstanceAttrValueByInstanceId_args(getBizInstanceAttrValueByInstanceId_args other) {
      if (other.isSetInstanceId()) {
        this.instanceId = other.instanceId;
      }
    }

    public getBizInstanceAttrValueByInstanceId_args deepCopy() {
      return new getBizInstanceAttrValueByInstanceId_args(this);
    }

    @Override
    public void clear() {
      this.instanceId = null;
    }

    public String getInstanceId() {
      return this.instanceId;
    }

    public getBizInstanceAttrValueByInstanceId_args setInstanceId(String instanceId) {
      this.instanceId = instanceId;
      return this;
    }

    public void unsetInstanceId() {
      this.instanceId = null;
    }

    /** Returns true if field instanceId is set (has been assigned a value) and false otherwise */
    public boolean isSetInstanceId() {
      return this.instanceId != null;
    }

    public void setInstanceIdIsSet(boolean value) {
      if (!value) {
        this.instanceId = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case INSTANCE_ID:
        if (value == null) {
          unsetInstanceId();
        } else {
          setInstanceId((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case INSTANCE_ID:
        return getInstanceId();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case INSTANCE_ID:
        return isSetInstanceId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBizInstanceAttrValueByInstanceId_args)
        return this.equals((getBizInstanceAttrValueByInstanceId_args)that);
      return false;
    }

    public boolean equals(getBizInstanceAttrValueByInstanceId_args that) {
      if (that == null)
        return false;

      boolean this_present_instanceId = true && this.isSetInstanceId();
      boolean that_present_instanceId = true && that.isSetInstanceId();
      if (this_present_instanceId || that_present_instanceId) {
        if (!(this_present_instanceId && that_present_instanceId))
          return false;
        if (!this.instanceId.equals(that.instanceId))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_instanceId = true && (isSetInstanceId());
      list.add(present_instanceId);
      if (present_instanceId)
        list.add(instanceId);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBizInstanceAttrValueByInstanceId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetInstanceId()).compareTo(other.isSetInstanceId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetInstanceId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.instanceId, other.instanceId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBizInstanceAttrValueByInstanceId_args(");
      boolean first = true;

      sb.append("instanceId:");
      if (this.instanceId == null) {
        sb.append("null");
      } else {
        sb.append(this.instanceId);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBizInstanceAttrValueByInstanceId_argsStandardSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValueByInstanceId_argsStandardScheme getScheme() {
        return new getBizInstanceAttrValueByInstanceId_argsStandardScheme();
      }
    }

    private static class getBizInstanceAttrValueByInstanceId_argsStandardScheme extends StandardScheme<getBizInstanceAttrValueByInstanceId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // INSTANCE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.instanceId = iprot.readString();
                struct.setInstanceIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.instanceId != null) {
          oprot.writeFieldBegin(INSTANCE_ID_FIELD_DESC);
          oprot.writeString(struct.instanceId);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBizInstanceAttrValueByInstanceId_argsTupleSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValueByInstanceId_argsTupleScheme getScheme() {
        return new getBizInstanceAttrValueByInstanceId_argsTupleScheme();
      }
    }

    private static class getBizInstanceAttrValueByInstanceId_argsTupleScheme extends TupleScheme<getBizInstanceAttrValueByInstanceId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetInstanceId()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetInstanceId()) {
          oprot.writeString(struct.instanceId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValueByInstanceId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.instanceId = iprot.readString();
          struct.setInstanceIdIsSet(true);
        }
      }
    }

  }

  public static class getBizInstanceAttrValueByInstanceId_result implements org.apache.thrift.TBase<getBizInstanceAttrValueByInstanceId_result, getBizInstanceAttrValueByInstanceId_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBizInstanceAttrValueByInstanceId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBizInstanceAttrValueByInstanceId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBizInstanceAttrValueByInstanceId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBizInstanceAttrValueByInstanceId_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBizInstanceAttrValueByInstanceId_result.class, metaDataMap);
    }

    public getBizInstanceAttrValueByInstanceId_result() {
    }

    public getBizInstanceAttrValueByInstanceId_result(
      com.froad.thrift.vo.BizInstanceAttrValueVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBizInstanceAttrValueByInstanceId_result(getBizInstanceAttrValueByInstanceId_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.success);
      }
    }

    public getBizInstanceAttrValueByInstanceId_result deepCopy() {
      return new getBizInstanceAttrValueByInstanceId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getSuccess() {
      return this.success;
    }

    public getBizInstanceAttrValueByInstanceId_result setSuccess(com.froad.thrift.vo.BizInstanceAttrValueVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBizInstanceAttrValueByInstanceId_result)
        return this.equals((getBizInstanceAttrValueByInstanceId_result)that);
      return false;
    }

    public boolean equals(getBizInstanceAttrValueByInstanceId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBizInstanceAttrValueByInstanceId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBizInstanceAttrValueByInstanceId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBizInstanceAttrValueByInstanceId_resultStandardSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValueByInstanceId_resultStandardScheme getScheme() {
        return new getBizInstanceAttrValueByInstanceId_resultStandardScheme();
      }
    }

    private static class getBizInstanceAttrValueByInstanceId_resultStandardScheme extends StandardScheme<getBizInstanceAttrValueByInstanceId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBizInstanceAttrValueByInstanceId_resultTupleSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValueByInstanceId_resultTupleScheme getScheme() {
        return new getBizInstanceAttrValueByInstanceId_resultTupleScheme();
      }
    }

    private static class getBizInstanceAttrValueByInstanceId_resultTupleScheme extends TupleScheme<getBizInstanceAttrValueByInstanceId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValueByInstanceId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getOneBizInstanceAttrValue_args implements org.apache.thrift.TBase<getOneBizInstanceAttrValue_args, getOneBizInstanceAttrValue_args._Fields>, java.io.Serializable, Cloneable, Comparable<getOneBizInstanceAttrValue_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getOneBizInstanceAttrValue_args");

    private static final org.apache.thrift.protocol.TField BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bizInstanceAttrValueVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getOneBizInstanceAttrValue_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getOneBizInstanceAttrValue_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      BIZ_INSTANCE_ATTR_VALUE_VO((short)1, "bizInstanceAttrValueVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // BIZ_INSTANCE_ATTR_VALUE_VO
            return BIZ_INSTANCE_ATTR_VALUE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.BIZ_INSTANCE_ATTR_VALUE_VO, new org.apache.thrift.meta_data.FieldMetaData("bizInstanceAttrValueVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getOneBizInstanceAttrValue_args.class, metaDataMap);
    }

    public getOneBizInstanceAttrValue_args() {
    }

    public getOneBizInstanceAttrValue_args(
      com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo)
    {
      this();
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getOneBizInstanceAttrValue_args(getOneBizInstanceAttrValue_args other) {
      if (other.isSetBizInstanceAttrValueVo()) {
        this.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.bizInstanceAttrValueVo);
      }
    }

    public getOneBizInstanceAttrValue_args deepCopy() {
      return new getOneBizInstanceAttrValue_args(this);
    }

    @Override
    public void clear() {
      this.bizInstanceAttrValueVo = null;
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo;
    }

    public getOneBizInstanceAttrValue_args setBizInstanceAttrValueVo(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) {
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      return this;
    }

    public void unsetBizInstanceAttrValueVo() {
      this.bizInstanceAttrValueVo = null;
    }

    /** Returns true if field bizInstanceAttrValueVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo != null;
    }

    public void setBizInstanceAttrValueVoIsSet(boolean value) {
      if (!value) {
        this.bizInstanceAttrValueVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        if (value == null) {
          unsetBizInstanceAttrValueVo();
        } else {
          setBizInstanceAttrValueVo((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return getBizInstanceAttrValueVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return isSetBizInstanceAttrValueVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getOneBizInstanceAttrValue_args)
        return this.equals((getOneBizInstanceAttrValue_args)that);
      return false;
    }

    public boolean equals(getOneBizInstanceAttrValue_args that) {
      if (that == null)
        return false;

      boolean this_present_bizInstanceAttrValueVo = true && this.isSetBizInstanceAttrValueVo();
      boolean that_present_bizInstanceAttrValueVo = true && that.isSetBizInstanceAttrValueVo();
      if (this_present_bizInstanceAttrValueVo || that_present_bizInstanceAttrValueVo) {
        if (!(this_present_bizInstanceAttrValueVo && that_present_bizInstanceAttrValueVo))
          return false;
        if (!this.bizInstanceAttrValueVo.equals(that.bizInstanceAttrValueVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_bizInstanceAttrValueVo = true && (isSetBizInstanceAttrValueVo());
      list.add(present_bizInstanceAttrValueVo);
      if (present_bizInstanceAttrValueVo)
        list.add(bizInstanceAttrValueVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getOneBizInstanceAttrValue_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetBizInstanceAttrValueVo()).compareTo(other.isSetBizInstanceAttrValueVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBizInstanceAttrValueVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizInstanceAttrValueVo, other.bizInstanceAttrValueVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getOneBizInstanceAttrValue_args(");
      boolean first = true;

      sb.append("bizInstanceAttrValueVo:");
      if (this.bizInstanceAttrValueVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bizInstanceAttrValueVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (bizInstanceAttrValueVo != null) {
        bizInstanceAttrValueVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getOneBizInstanceAttrValue_argsStandardSchemeFactory implements SchemeFactory {
      public getOneBizInstanceAttrValue_argsStandardScheme getScheme() {
        return new getOneBizInstanceAttrValue_argsStandardScheme();
      }
    }

    private static class getOneBizInstanceAttrValue_argsStandardScheme extends StandardScheme<getOneBizInstanceAttrValue_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getOneBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // BIZ_INSTANCE_ATTR_VALUE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.bizInstanceAttrValueVo.read(iprot);
                struct.setBizInstanceAttrValueVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getOneBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.bizInstanceAttrValueVo != null) {
          oprot.writeFieldBegin(BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC);
          struct.bizInstanceAttrValueVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getOneBizInstanceAttrValue_argsTupleSchemeFactory implements SchemeFactory {
      public getOneBizInstanceAttrValue_argsTupleScheme getScheme() {
        return new getOneBizInstanceAttrValue_argsTupleScheme();
      }
    }

    private static class getOneBizInstanceAttrValue_argsTupleScheme extends TupleScheme<getOneBizInstanceAttrValue_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getOneBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetBizInstanceAttrValueVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetBizInstanceAttrValueVo()) {
          struct.bizInstanceAttrValueVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getOneBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.bizInstanceAttrValueVo.read(iprot);
          struct.setBizInstanceAttrValueVoIsSet(true);
        }
      }
    }

  }

  public static class getOneBizInstanceAttrValue_result implements org.apache.thrift.TBase<getOneBizInstanceAttrValue_result, getOneBizInstanceAttrValue_result._Fields>, java.io.Serializable, Cloneable, Comparable<getOneBizInstanceAttrValue_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getOneBizInstanceAttrValue_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getOneBizInstanceAttrValue_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getOneBizInstanceAttrValue_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getOneBizInstanceAttrValue_result.class, metaDataMap);
    }

    public getOneBizInstanceAttrValue_result() {
    }

    public getOneBizInstanceAttrValue_result(
      com.froad.thrift.vo.BizInstanceAttrValueVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getOneBizInstanceAttrValue_result(getOneBizInstanceAttrValue_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.success);
      }
    }

    public getOneBizInstanceAttrValue_result deepCopy() {
      return new getOneBizInstanceAttrValue_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getSuccess() {
      return this.success;
    }

    public getOneBizInstanceAttrValue_result setSuccess(com.froad.thrift.vo.BizInstanceAttrValueVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getOneBizInstanceAttrValue_result)
        return this.equals((getOneBizInstanceAttrValue_result)that);
      return false;
    }

    public boolean equals(getOneBizInstanceAttrValue_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getOneBizInstanceAttrValue_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getOneBizInstanceAttrValue_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getOneBizInstanceAttrValue_resultStandardSchemeFactory implements SchemeFactory {
      public getOneBizInstanceAttrValue_resultStandardScheme getScheme() {
        return new getOneBizInstanceAttrValue_resultStandardScheme();
      }
    }

    private static class getOneBizInstanceAttrValue_resultStandardScheme extends StandardScheme<getOneBizInstanceAttrValue_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getOneBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getOneBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getOneBizInstanceAttrValue_resultTupleSchemeFactory implements SchemeFactory {
      public getOneBizInstanceAttrValue_resultTupleScheme getScheme() {
        return new getOneBizInstanceAttrValue_resultTupleScheme();
      }
    }

    private static class getOneBizInstanceAttrValue_resultTupleScheme extends TupleScheme<getOneBizInstanceAttrValue_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getOneBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getOneBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class countBizInstanceAttrValue_args implements org.apache.thrift.TBase<countBizInstanceAttrValue_args, countBizInstanceAttrValue_args._Fields>, java.io.Serializable, Cloneable, Comparable<countBizInstanceAttrValue_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("countBizInstanceAttrValue_args");

    private static final org.apache.thrift.protocol.TField BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bizInstanceAttrValueVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new countBizInstanceAttrValue_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new countBizInstanceAttrValue_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      BIZ_INSTANCE_ATTR_VALUE_VO((short)1, "bizInstanceAttrValueVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // BIZ_INSTANCE_ATTR_VALUE_VO
            return BIZ_INSTANCE_ATTR_VALUE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.BIZ_INSTANCE_ATTR_VALUE_VO, new org.apache.thrift.meta_data.FieldMetaData("bizInstanceAttrValueVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(countBizInstanceAttrValue_args.class, metaDataMap);
    }

    public countBizInstanceAttrValue_args() {
    }

    public countBizInstanceAttrValue_args(
      com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo)
    {
      this();
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public countBizInstanceAttrValue_args(countBizInstanceAttrValue_args other) {
      if (other.isSetBizInstanceAttrValueVo()) {
        this.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.bizInstanceAttrValueVo);
      }
    }

    public countBizInstanceAttrValue_args deepCopy() {
      return new countBizInstanceAttrValue_args(this);
    }

    @Override
    public void clear() {
      this.bizInstanceAttrValueVo = null;
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo;
    }

    public countBizInstanceAttrValue_args setBizInstanceAttrValueVo(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) {
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      return this;
    }

    public void unsetBizInstanceAttrValueVo() {
      this.bizInstanceAttrValueVo = null;
    }

    /** Returns true if field bizInstanceAttrValueVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo != null;
    }

    public void setBizInstanceAttrValueVoIsSet(boolean value) {
      if (!value) {
        this.bizInstanceAttrValueVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        if (value == null) {
          unsetBizInstanceAttrValueVo();
        } else {
          setBizInstanceAttrValueVo((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return getBizInstanceAttrValueVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return isSetBizInstanceAttrValueVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof countBizInstanceAttrValue_args)
        return this.equals((countBizInstanceAttrValue_args)that);
      return false;
    }

    public boolean equals(countBizInstanceAttrValue_args that) {
      if (that == null)
        return false;

      boolean this_present_bizInstanceAttrValueVo = true && this.isSetBizInstanceAttrValueVo();
      boolean that_present_bizInstanceAttrValueVo = true && that.isSetBizInstanceAttrValueVo();
      if (this_present_bizInstanceAttrValueVo || that_present_bizInstanceAttrValueVo) {
        if (!(this_present_bizInstanceAttrValueVo && that_present_bizInstanceAttrValueVo))
          return false;
        if (!this.bizInstanceAttrValueVo.equals(that.bizInstanceAttrValueVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_bizInstanceAttrValueVo = true && (isSetBizInstanceAttrValueVo());
      list.add(present_bizInstanceAttrValueVo);
      if (present_bizInstanceAttrValueVo)
        list.add(bizInstanceAttrValueVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(countBizInstanceAttrValue_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetBizInstanceAttrValueVo()).compareTo(other.isSetBizInstanceAttrValueVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBizInstanceAttrValueVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizInstanceAttrValueVo, other.bizInstanceAttrValueVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("countBizInstanceAttrValue_args(");
      boolean first = true;

      sb.append("bizInstanceAttrValueVo:");
      if (this.bizInstanceAttrValueVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bizInstanceAttrValueVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (bizInstanceAttrValueVo != null) {
        bizInstanceAttrValueVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class countBizInstanceAttrValue_argsStandardSchemeFactory implements SchemeFactory {
      public countBizInstanceAttrValue_argsStandardScheme getScheme() {
        return new countBizInstanceAttrValue_argsStandardScheme();
      }
    }

    private static class countBizInstanceAttrValue_argsStandardScheme extends StandardScheme<countBizInstanceAttrValue_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, countBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // BIZ_INSTANCE_ATTR_VALUE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.bizInstanceAttrValueVo.read(iprot);
                struct.setBizInstanceAttrValueVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, countBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.bizInstanceAttrValueVo != null) {
          oprot.writeFieldBegin(BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC);
          struct.bizInstanceAttrValueVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class countBizInstanceAttrValue_argsTupleSchemeFactory implements SchemeFactory {
      public countBizInstanceAttrValue_argsTupleScheme getScheme() {
        return new countBizInstanceAttrValue_argsTupleScheme();
      }
    }

    private static class countBizInstanceAttrValue_argsTupleScheme extends TupleScheme<countBizInstanceAttrValue_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, countBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetBizInstanceAttrValueVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetBizInstanceAttrValueVo()) {
          struct.bizInstanceAttrValueVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, countBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.bizInstanceAttrValueVo.read(iprot);
          struct.setBizInstanceAttrValueVoIsSet(true);
        }
      }
    }

  }

  public static class countBizInstanceAttrValue_result implements org.apache.thrift.TBase<countBizInstanceAttrValue_result, countBizInstanceAttrValue_result._Fields>, java.io.Serializable, Cloneable, Comparable<countBizInstanceAttrValue_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("countBizInstanceAttrValue_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I32, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new countBizInstanceAttrValue_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new countBizInstanceAttrValue_resultTupleSchemeFactory());
    }

    public int success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(countBizInstanceAttrValue_result.class, metaDataMap);
    }

    public countBizInstanceAttrValue_result() {
    }

    public countBizInstanceAttrValue_result(
      int success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public countBizInstanceAttrValue_result(countBizInstanceAttrValue_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public countBizInstanceAttrValue_result deepCopy() {
      return new countBizInstanceAttrValue_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
    }

    public int getSuccess() {
      return this.success;
    }

    public countBizInstanceAttrValue_result setSuccess(int success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Integer.valueOf(getSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof countBizInstanceAttrValue_result)
        return this.equals((countBizInstanceAttrValue_result)that);
      return false;
    }

    public boolean equals(countBizInstanceAttrValue_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(countBizInstanceAttrValue_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("countBizInstanceAttrValue_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class countBizInstanceAttrValue_resultStandardSchemeFactory implements SchemeFactory {
      public countBizInstanceAttrValue_resultStandardScheme getScheme() {
        return new countBizInstanceAttrValue_resultStandardScheme();
      }
    }

    private static class countBizInstanceAttrValue_resultStandardScheme extends StandardScheme<countBizInstanceAttrValue_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, countBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.success = iprot.readI32();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, countBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI32(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class countBizInstanceAttrValue_resultTupleSchemeFactory implements SchemeFactory {
      public countBizInstanceAttrValue_resultTupleScheme getScheme() {
        return new countBizInstanceAttrValue_resultTupleScheme();
      }
    }

    private static class countBizInstanceAttrValue_resultTupleScheme extends TupleScheme<countBizInstanceAttrValue_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, countBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeI32(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, countBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readI32();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getBizInstanceAttrValue_args implements org.apache.thrift.TBase<getBizInstanceAttrValue_args, getBizInstanceAttrValue_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBizInstanceAttrValue_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBizInstanceAttrValue_args");

    private static final org.apache.thrift.protocol.TField BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bizInstanceAttrValueVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBizInstanceAttrValue_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBizInstanceAttrValue_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      BIZ_INSTANCE_ATTR_VALUE_VO((short)1, "bizInstanceAttrValueVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // BIZ_INSTANCE_ATTR_VALUE_VO
            return BIZ_INSTANCE_ATTR_VALUE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.BIZ_INSTANCE_ATTR_VALUE_VO, new org.apache.thrift.meta_data.FieldMetaData("bizInstanceAttrValueVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBizInstanceAttrValue_args.class, metaDataMap);
    }

    public getBizInstanceAttrValue_args() {
    }

    public getBizInstanceAttrValue_args(
      com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo)
    {
      this();
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBizInstanceAttrValue_args(getBizInstanceAttrValue_args other) {
      if (other.isSetBizInstanceAttrValueVo()) {
        this.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.bizInstanceAttrValueVo);
      }
    }

    public getBizInstanceAttrValue_args deepCopy() {
      return new getBizInstanceAttrValue_args(this);
    }

    @Override
    public void clear() {
      this.bizInstanceAttrValueVo = null;
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo;
    }

    public getBizInstanceAttrValue_args setBizInstanceAttrValueVo(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) {
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      return this;
    }

    public void unsetBizInstanceAttrValueVo() {
      this.bizInstanceAttrValueVo = null;
    }

    /** Returns true if field bizInstanceAttrValueVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo != null;
    }

    public void setBizInstanceAttrValueVoIsSet(boolean value) {
      if (!value) {
        this.bizInstanceAttrValueVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        if (value == null) {
          unsetBizInstanceAttrValueVo();
        } else {
          setBizInstanceAttrValueVo((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return getBizInstanceAttrValueVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return isSetBizInstanceAttrValueVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBizInstanceAttrValue_args)
        return this.equals((getBizInstanceAttrValue_args)that);
      return false;
    }

    public boolean equals(getBizInstanceAttrValue_args that) {
      if (that == null)
        return false;

      boolean this_present_bizInstanceAttrValueVo = true && this.isSetBizInstanceAttrValueVo();
      boolean that_present_bizInstanceAttrValueVo = true && that.isSetBizInstanceAttrValueVo();
      if (this_present_bizInstanceAttrValueVo || that_present_bizInstanceAttrValueVo) {
        if (!(this_present_bizInstanceAttrValueVo && that_present_bizInstanceAttrValueVo))
          return false;
        if (!this.bizInstanceAttrValueVo.equals(that.bizInstanceAttrValueVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_bizInstanceAttrValueVo = true && (isSetBizInstanceAttrValueVo());
      list.add(present_bizInstanceAttrValueVo);
      if (present_bizInstanceAttrValueVo)
        list.add(bizInstanceAttrValueVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBizInstanceAttrValue_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetBizInstanceAttrValueVo()).compareTo(other.isSetBizInstanceAttrValueVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBizInstanceAttrValueVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizInstanceAttrValueVo, other.bizInstanceAttrValueVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBizInstanceAttrValue_args(");
      boolean first = true;

      sb.append("bizInstanceAttrValueVo:");
      if (this.bizInstanceAttrValueVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bizInstanceAttrValueVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (bizInstanceAttrValueVo != null) {
        bizInstanceAttrValueVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBizInstanceAttrValue_argsStandardSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValue_argsStandardScheme getScheme() {
        return new getBizInstanceAttrValue_argsStandardScheme();
      }
    }

    private static class getBizInstanceAttrValue_argsStandardScheme extends StandardScheme<getBizInstanceAttrValue_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // BIZ_INSTANCE_ATTR_VALUE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.bizInstanceAttrValueVo.read(iprot);
                struct.setBizInstanceAttrValueVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.bizInstanceAttrValueVo != null) {
          oprot.writeFieldBegin(BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC);
          struct.bizInstanceAttrValueVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBizInstanceAttrValue_argsTupleSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValue_argsTupleScheme getScheme() {
        return new getBizInstanceAttrValue_argsTupleScheme();
      }
    }

    private static class getBizInstanceAttrValue_argsTupleScheme extends TupleScheme<getBizInstanceAttrValue_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetBizInstanceAttrValueVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetBizInstanceAttrValueVo()) {
          struct.bizInstanceAttrValueVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValue_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.bizInstanceAttrValueVo.read(iprot);
          struct.setBizInstanceAttrValueVoIsSet(true);
        }
      }
    }

  }

  public static class getBizInstanceAttrValue_result implements org.apache.thrift.TBase<getBizInstanceAttrValue_result, getBizInstanceAttrValue_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBizInstanceAttrValue_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBizInstanceAttrValue_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBizInstanceAttrValue_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBizInstanceAttrValue_resultTupleSchemeFactory());
    }

    public List<com.froad.thrift.vo.BizInstanceAttrValueVo> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBizInstanceAttrValue_result.class, metaDataMap);
    }

    public getBizInstanceAttrValue_result() {
    }

    public getBizInstanceAttrValue_result(
      List<com.froad.thrift.vo.BizInstanceAttrValueVo> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBizInstanceAttrValue_result(getBizInstanceAttrValue_result other) {
      if (other.isSetSuccess()) {
        List<com.froad.thrift.vo.BizInstanceAttrValueVo> __this__success = new ArrayList<com.froad.thrift.vo.BizInstanceAttrValueVo>(other.success.size());
        for (com.froad.thrift.vo.BizInstanceAttrValueVo other_element : other.success) {
          __this__success.add(new com.froad.thrift.vo.BizInstanceAttrValueVo(other_element));
        }
        this.success = __this__success;
      }
    }

    public getBizInstanceAttrValue_result deepCopy() {
      return new getBizInstanceAttrValue_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.froad.thrift.vo.BizInstanceAttrValueVo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.froad.thrift.vo.BizInstanceAttrValueVo elem) {
      if (this.success == null) {
        this.success = new ArrayList<com.froad.thrift.vo.BizInstanceAttrValueVo>();
      }
      this.success.add(elem);
    }

    public List<com.froad.thrift.vo.BizInstanceAttrValueVo> getSuccess() {
      return this.success;
    }

    public getBizInstanceAttrValue_result setSuccess(List<com.froad.thrift.vo.BizInstanceAttrValueVo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<com.froad.thrift.vo.BizInstanceAttrValueVo>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBizInstanceAttrValue_result)
        return this.equals((getBizInstanceAttrValue_result)that);
      return false;
    }

    public boolean equals(getBizInstanceAttrValue_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBizInstanceAttrValue_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBizInstanceAttrValue_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBizInstanceAttrValue_resultStandardSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValue_resultStandardScheme getScheme() {
        return new getBizInstanceAttrValue_resultStandardScheme();
      }
    }

    private static class getBizInstanceAttrValue_resultStandardScheme extends StandardScheme<getBizInstanceAttrValue_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                  struct.success = new ArrayList<com.froad.thrift.vo.BizInstanceAttrValueVo>(_list0.size);
                  com.froad.thrift.vo.BizInstanceAttrValueVo _elem1;
                  for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                  {
                    _elem1 = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                    _elem1.read(iprot);
                    struct.success.add(_elem1);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.froad.thrift.vo.BizInstanceAttrValueVo _iter3 : struct.success)
            {
              _iter3.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBizInstanceAttrValue_resultTupleSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValue_resultTupleScheme getScheme() {
        return new getBizInstanceAttrValue_resultTupleScheme();
      }
    }

    private static class getBizInstanceAttrValue_resultTupleScheme extends TupleScheme<getBizInstanceAttrValue_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.froad.thrift.vo.BizInstanceAttrValueVo _iter4 : struct.success)
            {
              _iter4.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValue_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<com.froad.thrift.vo.BizInstanceAttrValueVo>(_list5.size);
            com.froad.thrift.vo.BizInstanceAttrValueVo _elem6;
            for (int _i7 = 0; _i7 < _list5.size; ++_i7)
            {
              _elem6 = new com.froad.thrift.vo.BizInstanceAttrValueVo();
              _elem6.read(iprot);
              struct.success.add(_elem6);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getBizInstanceAttrValueByPage_args implements org.apache.thrift.TBase<getBizInstanceAttrValueByPage_args, getBizInstanceAttrValueByPage_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBizInstanceAttrValueByPage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBizInstanceAttrValueByPage_args");

    private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("bizInstanceAttrValueVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBizInstanceAttrValueByPage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBizInstanceAttrValueByPage_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.PageVo page; // required
    public com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PAGE((short)1, "page"),
      BIZ_INSTANCE_ATTR_VALUE_VO((short)2, "bizInstanceAttrValueVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PAGE
            return PAGE;
          case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
            return BIZ_INSTANCE_ATTR_VALUE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
      tmpMap.put(_Fields.BIZ_INSTANCE_ATTR_VALUE_VO, new org.apache.thrift.meta_data.FieldMetaData("bizInstanceAttrValueVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValueVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBizInstanceAttrValueByPage_args.class, metaDataMap);
    }

    public getBizInstanceAttrValueByPage_args() {
    }

    public getBizInstanceAttrValueByPage_args(
      com.froad.thrift.vo.PageVo page,
      com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo)
    {
      this();
      this.page = page;
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBizInstanceAttrValueByPage_args(getBizInstanceAttrValueByPage_args other) {
      if (other.isSetPage()) {
        this.page = new com.froad.thrift.vo.PageVo(other.page);
      }
      if (other.isSetBizInstanceAttrValueVo()) {
        this.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo(other.bizInstanceAttrValueVo);
      }
    }

    public getBizInstanceAttrValueByPage_args deepCopy() {
      return new getBizInstanceAttrValueByPage_args(this);
    }

    @Override
    public void clear() {
      this.page = null;
      this.bizInstanceAttrValueVo = null;
    }

    public com.froad.thrift.vo.PageVo getPage() {
      return this.page;
    }

    public getBizInstanceAttrValueByPage_args setPage(com.froad.thrift.vo.PageVo page) {
      this.page = page;
      return this;
    }

    public void unsetPage() {
      this.page = null;
    }

    /** Returns true if field page is set (has been assigned a value) and false otherwise */
    public boolean isSetPage() {
      return this.page != null;
    }

    public void setPageIsSet(boolean value) {
      if (!value) {
        this.page = null;
      }
    }

    public com.froad.thrift.vo.BizInstanceAttrValueVo getBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo;
    }

    public getBizInstanceAttrValueByPage_args setBizInstanceAttrValueVo(com.froad.thrift.vo.BizInstanceAttrValueVo bizInstanceAttrValueVo) {
      this.bizInstanceAttrValueVo = bizInstanceAttrValueVo;
      return this;
    }

    public void unsetBizInstanceAttrValueVo() {
      this.bizInstanceAttrValueVo = null;
    }

    /** Returns true if field bizInstanceAttrValueVo is set (has been assigned a value) and false otherwise */
    public boolean isSetBizInstanceAttrValueVo() {
      return this.bizInstanceAttrValueVo != null;
    }

    public void setBizInstanceAttrValueVoIsSet(boolean value) {
      if (!value) {
        this.bizInstanceAttrValueVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PAGE:
        if (value == null) {
          unsetPage();
        } else {
          setPage((com.froad.thrift.vo.PageVo)value);
        }
        break;

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        if (value == null) {
          unsetBizInstanceAttrValueVo();
        } else {
          setBizInstanceAttrValueVo((com.froad.thrift.vo.BizInstanceAttrValueVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PAGE:
        return getPage();

      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return getBizInstanceAttrValueVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PAGE:
        return isSetPage();
      case BIZ_INSTANCE_ATTR_VALUE_VO:
        return isSetBizInstanceAttrValueVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBizInstanceAttrValueByPage_args)
        return this.equals((getBizInstanceAttrValueByPage_args)that);
      return false;
    }

    public boolean equals(getBizInstanceAttrValueByPage_args that) {
      if (that == null)
        return false;

      boolean this_present_page = true && this.isSetPage();
      boolean that_present_page = true && that.isSetPage();
      if (this_present_page || that_present_page) {
        if (!(this_present_page && that_present_page))
          return false;
        if (!this.page.equals(that.page))
          return false;
      }

      boolean this_present_bizInstanceAttrValueVo = true && this.isSetBizInstanceAttrValueVo();
      boolean that_present_bizInstanceAttrValueVo = true && that.isSetBizInstanceAttrValueVo();
      if (this_present_bizInstanceAttrValueVo || that_present_bizInstanceAttrValueVo) {
        if (!(this_present_bizInstanceAttrValueVo && that_present_bizInstanceAttrValueVo))
          return false;
        if (!this.bizInstanceAttrValueVo.equals(that.bizInstanceAttrValueVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_page = true && (isSetPage());
      list.add(present_page);
      if (present_page)
        list.add(page);

      boolean present_bizInstanceAttrValueVo = true && (isSetBizInstanceAttrValueVo());
      list.add(present_bizInstanceAttrValueVo);
      if (present_bizInstanceAttrValueVo)
        list.add(bizInstanceAttrValueVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBizInstanceAttrValueByPage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetBizInstanceAttrValueVo()).compareTo(other.isSetBizInstanceAttrValueVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBizInstanceAttrValueVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizInstanceAttrValueVo, other.bizInstanceAttrValueVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBizInstanceAttrValueByPage_args(");
      boolean first = true;

      sb.append("page:");
      if (this.page == null) {
        sb.append("null");
      } else {
        sb.append(this.page);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("bizInstanceAttrValueVo:");
      if (this.bizInstanceAttrValueVo == null) {
        sb.append("null");
      } else {
        sb.append(this.bizInstanceAttrValueVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (page != null) {
        page.validate();
      }
      if (bizInstanceAttrValueVo != null) {
        bizInstanceAttrValueVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBizInstanceAttrValueByPage_argsStandardSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValueByPage_argsStandardScheme getScheme() {
        return new getBizInstanceAttrValueByPage_argsStandardScheme();
      }
    }

    private static class getBizInstanceAttrValueByPage_argsStandardScheme extends StandardScheme<getBizInstanceAttrValueByPage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBizInstanceAttrValueByPage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.page = new com.froad.thrift.vo.PageVo();
                struct.page.read(iprot);
                struct.setPageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // BIZ_INSTANCE_ATTR_VALUE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
                struct.bizInstanceAttrValueVo.read(iprot);
                struct.setBizInstanceAttrValueVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBizInstanceAttrValueByPage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.page != null) {
          oprot.writeFieldBegin(PAGE_FIELD_DESC);
          struct.page.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.bizInstanceAttrValueVo != null) {
          oprot.writeFieldBegin(BIZ_INSTANCE_ATTR_VALUE_VO_FIELD_DESC);
          struct.bizInstanceAttrValueVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBizInstanceAttrValueByPage_argsTupleSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValueByPage_argsTupleScheme getScheme() {
        return new getBizInstanceAttrValueByPage_argsTupleScheme();
      }
    }

    private static class getBizInstanceAttrValueByPage_argsTupleScheme extends TupleScheme<getBizInstanceAttrValueByPage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValueByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPage()) {
          optionals.set(0);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPage()) {
          struct.page.write(oprot);
        }
        if (struct.isSetBizInstanceAttrValueVo()) {
          struct.bizInstanceAttrValueVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValueByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.page = new com.froad.thrift.vo.PageVo();
          struct.page.read(iprot);
          struct.setPageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.bizInstanceAttrValueVo = new com.froad.thrift.vo.BizInstanceAttrValueVo();
          struct.bizInstanceAttrValueVo.read(iprot);
          struct.setBizInstanceAttrValueVoIsSet(true);
        }
      }
    }

  }

  public static class getBizInstanceAttrValueByPage_result implements org.apache.thrift.TBase<getBizInstanceAttrValueByPage_result, getBizInstanceAttrValueByPage_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBizInstanceAttrValueByPage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBizInstanceAttrValueByPage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBizInstanceAttrValueByPage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBizInstanceAttrValueByPage_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.BizInstanceAttrValuePageVoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.BizInstanceAttrValuePageVoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBizInstanceAttrValueByPage_result.class, metaDataMap);
    }

    public getBizInstanceAttrValueByPage_result() {
    }

    public getBizInstanceAttrValueByPage_result(
      com.froad.thrift.vo.BizInstanceAttrValuePageVoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBizInstanceAttrValueByPage_result(getBizInstanceAttrValueByPage_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.BizInstanceAttrValuePageVoRes(other.success);
      }
    }

    public getBizInstanceAttrValueByPage_result deepCopy() {
      return new getBizInstanceAttrValueByPage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.BizInstanceAttrValuePageVoRes getSuccess() {
      return this.success;
    }

    public getBizInstanceAttrValueByPage_result setSuccess(com.froad.thrift.vo.BizInstanceAttrValuePageVoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.BizInstanceAttrValuePageVoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBizInstanceAttrValueByPage_result)
        return this.equals((getBizInstanceAttrValueByPage_result)that);
      return false;
    }

    public boolean equals(getBizInstanceAttrValueByPage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBizInstanceAttrValueByPage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBizInstanceAttrValueByPage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBizInstanceAttrValueByPage_resultStandardSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValueByPage_resultStandardScheme getScheme() {
        return new getBizInstanceAttrValueByPage_resultStandardScheme();
      }
    }

    private static class getBizInstanceAttrValueByPage_resultStandardScheme extends StandardScheme<getBizInstanceAttrValueByPage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBizInstanceAttrValueByPage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.BizInstanceAttrValuePageVoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBizInstanceAttrValueByPage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBizInstanceAttrValueByPage_resultTupleSchemeFactory implements SchemeFactory {
      public getBizInstanceAttrValueByPage_resultTupleScheme getScheme() {
        return new getBizInstanceAttrValueByPage_resultTupleScheme();
      }
    }

    private static class getBizInstanceAttrValueByPage_resultTupleScheme extends TupleScheme<getBizInstanceAttrValueByPage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValueByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBizInstanceAttrValueByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.BizInstanceAttrValuePageVoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
