/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * H5精品商城商品商品详情信息Vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class BoutiqueGoodsInfoVo implements org.apache.thrift.TBase<BoutiqueGoodsInfoVo, BoutiqueGoodsInfoVo._Fields>, java.io.Serializable, Cloneable, Comparable<BoutiqueGoodsInfoVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BoutiqueGoodsInfoVo");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField FULL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("fullName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField BRIEF_INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("briefIntroduction", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField MARKET_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("marketPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField VIP_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("vipPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField MIN_FIELD_DESC = new org.apache.thrift.protocol.TField("min", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField MAX_FIELD_DESC = new org.apache.thrift.protocol.TField("max", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField MAX_VIP_FIELD_DESC = new org.apache.thrift.protocol.TField("maxVip", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField SELL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("sellCount", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField STORE_FIELD_DESC = new org.apache.thrift.protocol.TField("store", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField IS_RECOMMEND_FIELD_DESC = new org.apache.thrift.protocol.TField("isRecommend", org.apache.thrift.protocol.TType.BOOL, (short)16);
  private static final org.apache.thrift.protocol.TField IS_NEW_FIELD_DESC = new org.apache.thrift.protocol.TField("isNew", org.apache.thrift.protocol.TType.BOOL, (short)17);
  private static final org.apache.thrift.protocol.TField IS_HOT_FIELD_DESC = new org.apache.thrift.protocol.TField("isHot", org.apache.thrift.protocol.TType.BOOL, (short)18);
  private static final org.apache.thrift.protocol.TField DELIVERY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryTime", org.apache.thrift.protocol.TType.I64, (short)19);
  private static final org.apache.thrift.protocol.TField INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("introduction", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField BUY_KNOW_FIELD_DESC = new org.apache.thrift.protocol.TField("buyKnow", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField AFTER_SHOP_FIELD_DESC = new org.apache.thrift.protocol.TField("afterShop", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField IMAGE_URLS_FIELD_DESC = new org.apache.thrift.protocol.TField("imageUrls", org.apache.thrift.protocol.TType.LIST, (short)23);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField IS_SECKILL_FIELD_DESC = new org.apache.thrift.protocol.TField("isSeckill", org.apache.thrift.protocol.TType.STRING, (short)25);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BoutiqueGoodsInfoVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BoutiqueGoodsInfoVoTupleSchemeFactory());
  }

  /**
   * 商品编号
   */
  public String productId; // required
  /**
   * 客户端id
   */
  public String clientId; // required
  /**
   * 供货商id
   */
  public String merchantId; // required
  /**
   * 商品类型
   */
  public String type; // required
  /**
   * 商品简称
   */
  public String name; // required
  /**
   * 商品全称
   */
  public String fullName; // required
  /**
   * 副标题
   */
  public String briefIntroduction; // required
  /**
   * 市场价
   */
  public double marketPrice; // required
  /**
   * 商城价
   */
  public double price; // required
  /**
   * VIP价
   */
  public double vipPrice; // required
  /**
   * 最低购买数量
   */
  public int min; // required
  /**
   * 限购数量
   */
  public int max; // required
  /**
   * VIP限购数量
   */
  public int maxVip; // required
  /**
   * 销售数量
   */
  public int sellCount; // required
  /**
   * 库存数量
   */
  public int store; // required
  /**
   * 是否推荐
   */
  public boolean isRecommend; // required
  /**
   * 是否新品
   */
  public boolean isNew; // required
  /**
   * 是否热销
   */
  public boolean isHot; // required
  /**
   * 预计发货时间
   */
  public long deliveryTime; // required
  /**
   * 商品介绍
   */
  public String introduction; // required
  /**
   * 商品购买须知
   */
  public String buyKnow; // required
  /**
   * 售后说明
   */
  public String afterShop; // required
  /**
   * 商品图片列表
   */
  public List<String> imageUrls; // required
  /**
   * 供货商名称
   */
  public String merchantName; // required
  /**
   * 是否秒杀 0非秒杀,1秒杀
   */
  public String isSeckill; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商品编号
     */
    PRODUCT_ID((short)1, "productId"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 供货商id
     */
    MERCHANT_ID((short)3, "merchantId"),
    /**
     * 商品类型
     */
    TYPE((short)4, "type"),
    /**
     * 商品简称
     */
    NAME((short)5, "name"),
    /**
     * 商品全称
     */
    FULL_NAME((short)6, "fullName"),
    /**
     * 副标题
     */
    BRIEF_INTRODUCTION((short)7, "briefIntroduction"),
    /**
     * 市场价
     */
    MARKET_PRICE((short)8, "marketPrice"),
    /**
     * 商城价
     */
    PRICE((short)9, "price"),
    /**
     * VIP价
     */
    VIP_PRICE((short)10, "vipPrice"),
    /**
     * 最低购买数量
     */
    MIN((short)11, "min"),
    /**
     * 限购数量
     */
    MAX((short)12, "max"),
    /**
     * VIP限购数量
     */
    MAX_VIP((short)13, "maxVip"),
    /**
     * 销售数量
     */
    SELL_COUNT((short)14, "sellCount"),
    /**
     * 库存数量
     */
    STORE((short)15, "store"),
    /**
     * 是否推荐
     */
    IS_RECOMMEND((short)16, "isRecommend"),
    /**
     * 是否新品
     */
    IS_NEW((short)17, "isNew"),
    /**
     * 是否热销
     */
    IS_HOT((short)18, "isHot"),
    /**
     * 预计发货时间
     */
    DELIVERY_TIME((short)19, "deliveryTime"),
    /**
     * 商品介绍
     */
    INTRODUCTION((short)20, "introduction"),
    /**
     * 商品购买须知
     */
    BUY_KNOW((short)21, "buyKnow"),
    /**
     * 售后说明
     */
    AFTER_SHOP((short)22, "afterShop"),
    /**
     * 商品图片列表
     */
    IMAGE_URLS((short)23, "imageUrls"),
    /**
     * 供货商名称
     */
    MERCHANT_NAME((short)24, "merchantName"),
    /**
     * 是否秒杀 0非秒杀,1秒杀
     */
    IS_SECKILL((short)25, "isSeckill");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // MERCHANT_ID
          return MERCHANT_ID;
        case 4: // TYPE
          return TYPE;
        case 5: // NAME
          return NAME;
        case 6: // FULL_NAME
          return FULL_NAME;
        case 7: // BRIEF_INTRODUCTION
          return BRIEF_INTRODUCTION;
        case 8: // MARKET_PRICE
          return MARKET_PRICE;
        case 9: // PRICE
          return PRICE;
        case 10: // VIP_PRICE
          return VIP_PRICE;
        case 11: // MIN
          return MIN;
        case 12: // MAX
          return MAX;
        case 13: // MAX_VIP
          return MAX_VIP;
        case 14: // SELL_COUNT
          return SELL_COUNT;
        case 15: // STORE
          return STORE;
        case 16: // IS_RECOMMEND
          return IS_RECOMMEND;
        case 17: // IS_NEW
          return IS_NEW;
        case 18: // IS_HOT
          return IS_HOT;
        case 19: // DELIVERY_TIME
          return DELIVERY_TIME;
        case 20: // INTRODUCTION
          return INTRODUCTION;
        case 21: // BUY_KNOW
          return BUY_KNOW;
        case 22: // AFTER_SHOP
          return AFTER_SHOP;
        case 23: // IMAGE_URLS
          return IMAGE_URLS;
        case 24: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 25: // IS_SECKILL
          return IS_SECKILL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MARKETPRICE_ISSET_ID = 0;
  private static final int __PRICE_ISSET_ID = 1;
  private static final int __VIPPRICE_ISSET_ID = 2;
  private static final int __MIN_ISSET_ID = 3;
  private static final int __MAX_ISSET_ID = 4;
  private static final int __MAXVIP_ISSET_ID = 5;
  private static final int __SELLCOUNT_ISSET_ID = 6;
  private static final int __STORE_ISSET_ID = 7;
  private static final int __ISRECOMMEND_ISSET_ID = 8;
  private static final int __ISNEW_ISSET_ID = 9;
  private static final int __ISHOT_ISSET_ID = 10;
  private static final int __DELIVERYTIME_ISSET_ID = 11;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FULL_NAME, new org.apache.thrift.meta_data.FieldMetaData("fullName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BRIEF_INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("briefIntroduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MARKET_PRICE, new org.apache.thrift.meta_data.FieldMetaData("marketPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.VIP_PRICE, new org.apache.thrift.meta_data.FieldMetaData("vipPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MIN, new org.apache.thrift.meta_data.FieldMetaData("min", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX, new org.apache.thrift.meta_data.FieldMetaData("max", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_VIP, new org.apache.thrift.meta_data.FieldMetaData("maxVip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SELL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("sellCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STORE, new org.apache.thrift.meta_data.FieldMetaData("store", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_RECOMMEND, new org.apache.thrift.meta_data.FieldMetaData("isRecommend", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_NEW, new org.apache.thrift.meta_data.FieldMetaData("isNew", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_HOT, new org.apache.thrift.meta_data.FieldMetaData("isHot", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DELIVERY_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("introduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUY_KNOW, new org.apache.thrift.meta_data.FieldMetaData("buyKnow", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AFTER_SHOP, new org.apache.thrift.meta_data.FieldMetaData("afterShop", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IMAGE_URLS, new org.apache.thrift.meta_data.FieldMetaData("imageUrls", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_SECKILL, new org.apache.thrift.meta_data.FieldMetaData("isSeckill", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BoutiqueGoodsInfoVo.class, metaDataMap);
  }

  public BoutiqueGoodsInfoVo() {
  }

  public BoutiqueGoodsInfoVo(
    String productId,
    String clientId,
    String merchantId,
    String type,
    String name,
    String fullName,
    String briefIntroduction,
    double marketPrice,
    double price,
    double vipPrice,
    int min,
    int max,
    int maxVip,
    int sellCount,
    int store,
    boolean isRecommend,
    boolean isNew,
    boolean isHot,
    long deliveryTime,
    String introduction,
    String buyKnow,
    String afterShop,
    List<String> imageUrls,
    String merchantName,
    String isSeckill)
  {
    this();
    this.productId = productId;
    this.clientId = clientId;
    this.merchantId = merchantId;
    this.type = type;
    this.name = name;
    this.fullName = fullName;
    this.briefIntroduction = briefIntroduction;
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    this.price = price;
    setPriceIsSet(true);
    this.vipPrice = vipPrice;
    setVipPriceIsSet(true);
    this.min = min;
    setMinIsSet(true);
    this.max = max;
    setMaxIsSet(true);
    this.maxVip = maxVip;
    setMaxVipIsSet(true);
    this.sellCount = sellCount;
    setSellCountIsSet(true);
    this.store = store;
    setStoreIsSet(true);
    this.isRecommend = isRecommend;
    setIsRecommendIsSet(true);
    this.isNew = isNew;
    setIsNewIsSet(true);
    this.isHot = isHot;
    setIsHotIsSet(true);
    this.deliveryTime = deliveryTime;
    setDeliveryTimeIsSet(true);
    this.introduction = introduction;
    this.buyKnow = buyKnow;
    this.afterShop = afterShop;
    this.imageUrls = imageUrls;
    this.merchantName = merchantName;
    this.isSeckill = isSeckill;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BoutiqueGoodsInfoVo(BoutiqueGoodsInfoVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetFullName()) {
      this.fullName = other.fullName;
    }
    if (other.isSetBriefIntroduction()) {
      this.briefIntroduction = other.briefIntroduction;
    }
    this.marketPrice = other.marketPrice;
    this.price = other.price;
    this.vipPrice = other.vipPrice;
    this.min = other.min;
    this.max = other.max;
    this.maxVip = other.maxVip;
    this.sellCount = other.sellCount;
    this.store = other.store;
    this.isRecommend = other.isRecommend;
    this.isNew = other.isNew;
    this.isHot = other.isHot;
    this.deliveryTime = other.deliveryTime;
    if (other.isSetIntroduction()) {
      this.introduction = other.introduction;
    }
    if (other.isSetBuyKnow()) {
      this.buyKnow = other.buyKnow;
    }
    if (other.isSetAfterShop()) {
      this.afterShop = other.afterShop;
    }
    if (other.isSetImageUrls()) {
      List<String> __this__imageUrls = new ArrayList<String>(other.imageUrls);
      this.imageUrls = __this__imageUrls;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetIsSeckill()) {
      this.isSeckill = other.isSeckill;
    }
  }

  public BoutiqueGoodsInfoVo deepCopy() {
    return new BoutiqueGoodsInfoVo(this);
  }

  @Override
  public void clear() {
    this.productId = null;
    this.clientId = null;
    this.merchantId = null;
    this.type = null;
    this.name = null;
    this.fullName = null;
    this.briefIntroduction = null;
    setMarketPriceIsSet(false);
    this.marketPrice = 0.0;
    setPriceIsSet(false);
    this.price = 0.0;
    setVipPriceIsSet(false);
    this.vipPrice = 0.0;
    setMinIsSet(false);
    this.min = 0;
    setMaxIsSet(false);
    this.max = 0;
    setMaxVipIsSet(false);
    this.maxVip = 0;
    setSellCountIsSet(false);
    this.sellCount = 0;
    setStoreIsSet(false);
    this.store = 0;
    setIsRecommendIsSet(false);
    this.isRecommend = false;
    setIsNewIsSet(false);
    this.isNew = false;
    setIsHotIsSet(false);
    this.isHot = false;
    setDeliveryTimeIsSet(false);
    this.deliveryTime = 0;
    this.introduction = null;
    this.buyKnow = null;
    this.afterShop = null;
    this.imageUrls = null;
    this.merchantName = null;
    this.isSeckill = null;
  }

  /**
   * 商品编号
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品编号
   */
  public BoutiqueGoodsInfoVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public BoutiqueGoodsInfoVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 供货商id
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 供货商id
   */
  public BoutiqueGoodsInfoVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 商品类型
   */
  public String getType() {
    return this.type;
  }

  /**
   * 商品类型
   */
  public BoutiqueGoodsInfoVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 商品简称
   */
  public String getName() {
    return this.name;
  }

  /**
   * 商品简称
   */
  public BoutiqueGoodsInfoVo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  /**
   * 商品全称
   */
  public String getFullName() {
    return this.fullName;
  }

  /**
   * 商品全称
   */
  public BoutiqueGoodsInfoVo setFullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  public void unsetFullName() {
    this.fullName = null;
  }

  /** Returns true if field fullName is set (has been assigned a value) and false otherwise */
  public boolean isSetFullName() {
    return this.fullName != null;
  }

  public void setFullNameIsSet(boolean value) {
    if (!value) {
      this.fullName = null;
    }
  }

  /**
   * 副标题
   */
  public String getBriefIntroduction() {
    return this.briefIntroduction;
  }

  /**
   * 副标题
   */
  public BoutiqueGoodsInfoVo setBriefIntroduction(String briefIntroduction) {
    this.briefIntroduction = briefIntroduction;
    return this;
  }

  public void unsetBriefIntroduction() {
    this.briefIntroduction = null;
  }

  /** Returns true if field briefIntroduction is set (has been assigned a value) and false otherwise */
  public boolean isSetBriefIntroduction() {
    return this.briefIntroduction != null;
  }

  public void setBriefIntroductionIsSet(boolean value) {
    if (!value) {
      this.briefIntroduction = null;
    }
  }

  /**
   * 市场价
   */
  public double getMarketPrice() {
    return this.marketPrice;
  }

  /**
   * 市场价
   */
  public BoutiqueGoodsInfoVo setMarketPrice(double marketPrice) {
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    return this;
  }

  public void unsetMarketPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  /** Returns true if field marketPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetMarketPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  public void setMarketPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MARKETPRICE_ISSET_ID, value);
  }

  /**
   * 商城价
   */
  public double getPrice() {
    return this.price;
  }

  /**
   * 商城价
   */
  public BoutiqueGoodsInfoVo setPrice(double price) {
    this.price = price;
    setPriceIsSet(true);
    return this;
  }

  public void unsetPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  public void setPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRICE_ISSET_ID, value);
  }

  /**
   * VIP价
   */
  public double getVipPrice() {
    return this.vipPrice;
  }

  /**
   * VIP价
   */
  public BoutiqueGoodsInfoVo setVipPrice(double vipPrice) {
    this.vipPrice = vipPrice;
    setVipPriceIsSet(true);
    return this;
  }

  public void unsetVipPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIPPRICE_ISSET_ID);
  }

  /** Returns true if field vipPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetVipPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __VIPPRICE_ISSET_ID);
  }

  public void setVipPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIPPRICE_ISSET_ID, value);
  }

  /**
   * 最低购买数量
   */
  public int getMin() {
    return this.min;
  }

  /**
   * 最低购买数量
   */
  public BoutiqueGoodsInfoVo setMin(int min) {
    this.min = min;
    setMinIsSet(true);
    return this;
  }

  public void unsetMin() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MIN_ISSET_ID);
  }

  /** Returns true if field min is set (has been assigned a value) and false otherwise */
  public boolean isSetMin() {
    return EncodingUtils.testBit(__isset_bitfield, __MIN_ISSET_ID);
  }

  public void setMinIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MIN_ISSET_ID, value);
  }

  /**
   * 限购数量
   */
  public int getMax() {
    return this.max;
  }

  /**
   * 限购数量
   */
  public BoutiqueGoodsInfoVo setMax(int max) {
    this.max = max;
    setMaxIsSet(true);
    return this;
  }

  public void unsetMax() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAX_ISSET_ID);
  }

  /** Returns true if field max is set (has been assigned a value) and false otherwise */
  public boolean isSetMax() {
    return EncodingUtils.testBit(__isset_bitfield, __MAX_ISSET_ID);
  }

  public void setMaxIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAX_ISSET_ID, value);
  }

  /**
   * VIP限购数量
   */
  public int getMaxVip() {
    return this.maxVip;
  }

  /**
   * VIP限购数量
   */
  public BoutiqueGoodsInfoVo setMaxVip(int maxVip) {
    this.maxVip = maxVip;
    setMaxVipIsSet(true);
    return this;
  }

  public void unsetMaxVip() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXVIP_ISSET_ID);
  }

  /** Returns true if field maxVip is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxVip() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXVIP_ISSET_ID);
  }

  public void setMaxVipIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXVIP_ISSET_ID, value);
  }

  /**
   * 销售数量
   */
  public int getSellCount() {
    return this.sellCount;
  }

  /**
   * 销售数量
   */
  public BoutiqueGoodsInfoVo setSellCount(int sellCount) {
    this.sellCount = sellCount;
    setSellCountIsSet(true);
    return this;
  }

  public void unsetSellCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SELLCOUNT_ISSET_ID);
  }

  /** Returns true if field sellCount is set (has been assigned a value) and false otherwise */
  public boolean isSetSellCount() {
    return EncodingUtils.testBit(__isset_bitfield, __SELLCOUNT_ISSET_ID);
  }

  public void setSellCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SELLCOUNT_ISSET_ID, value);
  }

  /**
   * 库存数量
   */
  public int getStore() {
    return this.store;
  }

  /**
   * 库存数量
   */
  public BoutiqueGoodsInfoVo setStore(int store) {
    this.store = store;
    setStoreIsSet(true);
    return this;
  }

  public void unsetStore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STORE_ISSET_ID);
  }

  /** Returns true if field store is set (has been assigned a value) and false otherwise */
  public boolean isSetStore() {
    return EncodingUtils.testBit(__isset_bitfield, __STORE_ISSET_ID);
  }

  public void setStoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STORE_ISSET_ID, value);
  }

  /**
   * 是否推荐
   */
  public boolean isIsRecommend() {
    return this.isRecommend;
  }

  /**
   * 是否推荐
   */
  public BoutiqueGoodsInfoVo setIsRecommend(boolean isRecommend) {
    this.isRecommend = isRecommend;
    setIsRecommendIsSet(true);
    return this;
  }

  public void unsetIsRecommend() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID);
  }

  /** Returns true if field isRecommend is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRecommend() {
    return EncodingUtils.testBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID);
  }

  public void setIsRecommendIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID, value);
  }

  /**
   * 是否新品
   */
  public boolean isIsNew() {
    return this.isNew;
  }

  /**
   * 是否新品
   */
  public BoutiqueGoodsInfoVo setIsNew(boolean isNew) {
    this.isNew = isNew;
    setIsNewIsSet(true);
    return this;
  }

  public void unsetIsNew() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISNEW_ISSET_ID);
  }

  /** Returns true if field isNew is set (has been assigned a value) and false otherwise */
  public boolean isSetIsNew() {
    return EncodingUtils.testBit(__isset_bitfield, __ISNEW_ISSET_ID);
  }

  public void setIsNewIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISNEW_ISSET_ID, value);
  }

  /**
   * 是否热销
   */
  public boolean isIsHot() {
    return this.isHot;
  }

  /**
   * 是否热销
   */
  public BoutiqueGoodsInfoVo setIsHot(boolean isHot) {
    this.isHot = isHot;
    setIsHotIsSet(true);
    return this;
  }

  public void unsetIsHot() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISHOT_ISSET_ID);
  }

  /** Returns true if field isHot is set (has been assigned a value) and false otherwise */
  public boolean isSetIsHot() {
    return EncodingUtils.testBit(__isset_bitfield, __ISHOT_ISSET_ID);
  }

  public void setIsHotIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISHOT_ISSET_ID, value);
  }

  /**
   * 预计发货时间
   */
  public long getDeliveryTime() {
    return this.deliveryTime;
  }

  /**
   * 预计发货时间
   */
  public BoutiqueGoodsInfoVo setDeliveryTime(long deliveryTime) {
    this.deliveryTime = deliveryTime;
    setDeliveryTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYTIME_ISSET_ID);
  }

  /** Returns true if field deliveryTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYTIME_ISSET_ID);
  }

  public void setDeliveryTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYTIME_ISSET_ID, value);
  }

  /**
   * 商品介绍
   */
  public String getIntroduction() {
    return this.introduction;
  }

  /**
   * 商品介绍
   */
  public BoutiqueGoodsInfoVo setIntroduction(String introduction) {
    this.introduction = introduction;
    return this;
  }

  public void unsetIntroduction() {
    this.introduction = null;
  }

  /** Returns true if field introduction is set (has been assigned a value) and false otherwise */
  public boolean isSetIntroduction() {
    return this.introduction != null;
  }

  public void setIntroductionIsSet(boolean value) {
    if (!value) {
      this.introduction = null;
    }
  }

  /**
   * 商品购买须知
   */
  public String getBuyKnow() {
    return this.buyKnow;
  }

  /**
   * 商品购买须知
   */
  public BoutiqueGoodsInfoVo setBuyKnow(String buyKnow) {
    this.buyKnow = buyKnow;
    return this;
  }

  public void unsetBuyKnow() {
    this.buyKnow = null;
  }

  /** Returns true if field buyKnow is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyKnow() {
    return this.buyKnow != null;
  }

  public void setBuyKnowIsSet(boolean value) {
    if (!value) {
      this.buyKnow = null;
    }
  }

  /**
   * 售后说明
   */
  public String getAfterShop() {
    return this.afterShop;
  }

  /**
   * 售后说明
   */
  public BoutiqueGoodsInfoVo setAfterShop(String afterShop) {
    this.afterShop = afterShop;
    return this;
  }

  public void unsetAfterShop() {
    this.afterShop = null;
  }

  /** Returns true if field afterShop is set (has been assigned a value) and false otherwise */
  public boolean isSetAfterShop() {
    return this.afterShop != null;
  }

  public void setAfterShopIsSet(boolean value) {
    if (!value) {
      this.afterShop = null;
    }
  }

  public int getImageUrlsSize() {
    return (this.imageUrls == null) ? 0 : this.imageUrls.size();
  }

  public java.util.Iterator<String> getImageUrlsIterator() {
    return (this.imageUrls == null) ? null : this.imageUrls.iterator();
  }

  public void addToImageUrls(String elem) {
    if (this.imageUrls == null) {
      this.imageUrls = new ArrayList<String>();
    }
    this.imageUrls.add(elem);
  }

  /**
   * 商品图片列表
   */
  public List<String> getImageUrls() {
    return this.imageUrls;
  }

  /**
   * 商品图片列表
   */
  public BoutiqueGoodsInfoVo setImageUrls(List<String> imageUrls) {
    this.imageUrls = imageUrls;
    return this;
  }

  public void unsetImageUrls() {
    this.imageUrls = null;
  }

  /** Returns true if field imageUrls is set (has been assigned a value) and false otherwise */
  public boolean isSetImageUrls() {
    return this.imageUrls != null;
  }

  public void setImageUrlsIsSet(boolean value) {
    if (!value) {
      this.imageUrls = null;
    }
  }

  /**
   * 供货商名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 供货商名称
   */
  public BoutiqueGoodsInfoVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 是否秒杀 0非秒杀,1秒杀
   */
  public String getIsSeckill() {
    return this.isSeckill;
  }

  /**
   * 是否秒杀 0非秒杀,1秒杀
   */
  public BoutiqueGoodsInfoVo setIsSeckill(String isSeckill) {
    this.isSeckill = isSeckill;
    return this;
  }

  public void unsetIsSeckill() {
    this.isSeckill = null;
  }

  /** Returns true if field isSeckill is set (has been assigned a value) and false otherwise */
  public boolean isSetIsSeckill() {
    return this.isSeckill != null;
  }

  public void setIsSeckillIsSet(boolean value) {
    if (!value) {
      this.isSeckill = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case FULL_NAME:
      if (value == null) {
        unsetFullName();
      } else {
        setFullName((String)value);
      }
      break;

    case BRIEF_INTRODUCTION:
      if (value == null) {
        unsetBriefIntroduction();
      } else {
        setBriefIntroduction((String)value);
      }
      break;

    case MARKET_PRICE:
      if (value == null) {
        unsetMarketPrice();
      } else {
        setMarketPrice((Double)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((Double)value);
      }
      break;

    case VIP_PRICE:
      if (value == null) {
        unsetVipPrice();
      } else {
        setVipPrice((Double)value);
      }
      break;

    case MIN:
      if (value == null) {
        unsetMin();
      } else {
        setMin((Integer)value);
      }
      break;

    case MAX:
      if (value == null) {
        unsetMax();
      } else {
        setMax((Integer)value);
      }
      break;

    case MAX_VIP:
      if (value == null) {
        unsetMaxVip();
      } else {
        setMaxVip((Integer)value);
      }
      break;

    case SELL_COUNT:
      if (value == null) {
        unsetSellCount();
      } else {
        setSellCount((Integer)value);
      }
      break;

    case STORE:
      if (value == null) {
        unsetStore();
      } else {
        setStore((Integer)value);
      }
      break;

    case IS_RECOMMEND:
      if (value == null) {
        unsetIsRecommend();
      } else {
        setIsRecommend((Boolean)value);
      }
      break;

    case IS_NEW:
      if (value == null) {
        unsetIsNew();
      } else {
        setIsNew((Boolean)value);
      }
      break;

    case IS_HOT:
      if (value == null) {
        unsetIsHot();
      } else {
        setIsHot((Boolean)value);
      }
      break;

    case DELIVERY_TIME:
      if (value == null) {
        unsetDeliveryTime();
      } else {
        setDeliveryTime((Long)value);
      }
      break;

    case INTRODUCTION:
      if (value == null) {
        unsetIntroduction();
      } else {
        setIntroduction((String)value);
      }
      break;

    case BUY_KNOW:
      if (value == null) {
        unsetBuyKnow();
      } else {
        setBuyKnow((String)value);
      }
      break;

    case AFTER_SHOP:
      if (value == null) {
        unsetAfterShop();
      } else {
        setAfterShop((String)value);
      }
      break;

    case IMAGE_URLS:
      if (value == null) {
        unsetImageUrls();
      } else {
        setImageUrls((List<String>)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case IS_SECKILL:
      if (value == null) {
        unsetIsSeckill();
      } else {
        setIsSeckill((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return getProductId();

    case CLIENT_ID:
      return getClientId();

    case MERCHANT_ID:
      return getMerchantId();

    case TYPE:
      return getType();

    case NAME:
      return getName();

    case FULL_NAME:
      return getFullName();

    case BRIEF_INTRODUCTION:
      return getBriefIntroduction();

    case MARKET_PRICE:
      return Double.valueOf(getMarketPrice());

    case PRICE:
      return Double.valueOf(getPrice());

    case VIP_PRICE:
      return Double.valueOf(getVipPrice());

    case MIN:
      return Integer.valueOf(getMin());

    case MAX:
      return Integer.valueOf(getMax());

    case MAX_VIP:
      return Integer.valueOf(getMaxVip());

    case SELL_COUNT:
      return Integer.valueOf(getSellCount());

    case STORE:
      return Integer.valueOf(getStore());

    case IS_RECOMMEND:
      return Boolean.valueOf(isIsRecommend());

    case IS_NEW:
      return Boolean.valueOf(isIsNew());

    case IS_HOT:
      return Boolean.valueOf(isIsHot());

    case DELIVERY_TIME:
      return Long.valueOf(getDeliveryTime());

    case INTRODUCTION:
      return getIntroduction();

    case BUY_KNOW:
      return getBuyKnow();

    case AFTER_SHOP:
      return getAfterShop();

    case IMAGE_URLS:
      return getImageUrls();

    case MERCHANT_NAME:
      return getMerchantName();

    case IS_SECKILL:
      return getIsSeckill();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case CLIENT_ID:
      return isSetClientId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case TYPE:
      return isSetType();
    case NAME:
      return isSetName();
    case FULL_NAME:
      return isSetFullName();
    case BRIEF_INTRODUCTION:
      return isSetBriefIntroduction();
    case MARKET_PRICE:
      return isSetMarketPrice();
    case PRICE:
      return isSetPrice();
    case VIP_PRICE:
      return isSetVipPrice();
    case MIN:
      return isSetMin();
    case MAX:
      return isSetMax();
    case MAX_VIP:
      return isSetMaxVip();
    case SELL_COUNT:
      return isSetSellCount();
    case STORE:
      return isSetStore();
    case IS_RECOMMEND:
      return isSetIsRecommend();
    case IS_NEW:
      return isSetIsNew();
    case IS_HOT:
      return isSetIsHot();
    case DELIVERY_TIME:
      return isSetDeliveryTime();
    case INTRODUCTION:
      return isSetIntroduction();
    case BUY_KNOW:
      return isSetBuyKnow();
    case AFTER_SHOP:
      return isSetAfterShop();
    case IMAGE_URLS:
      return isSetImageUrls();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case IS_SECKILL:
      return isSetIsSeckill();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BoutiqueGoodsInfoVo)
      return this.equals((BoutiqueGoodsInfoVo)that);
    return false;
  }

  public boolean equals(BoutiqueGoodsInfoVo that) {
    if (that == null)
      return false;

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_fullName = true && this.isSetFullName();
    boolean that_present_fullName = true && that.isSetFullName();
    if (this_present_fullName || that_present_fullName) {
      if (!(this_present_fullName && that_present_fullName))
        return false;
      if (!this.fullName.equals(that.fullName))
        return false;
    }

    boolean this_present_briefIntroduction = true && this.isSetBriefIntroduction();
    boolean that_present_briefIntroduction = true && that.isSetBriefIntroduction();
    if (this_present_briefIntroduction || that_present_briefIntroduction) {
      if (!(this_present_briefIntroduction && that_present_briefIntroduction))
        return false;
      if (!this.briefIntroduction.equals(that.briefIntroduction))
        return false;
    }

    boolean this_present_marketPrice = true;
    boolean that_present_marketPrice = true;
    if (this_present_marketPrice || that_present_marketPrice) {
      if (!(this_present_marketPrice && that_present_marketPrice))
        return false;
      if (this.marketPrice != that.marketPrice)
        return false;
    }

    boolean this_present_price = true;
    boolean that_present_price = true;
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (this.price != that.price)
        return false;
    }

    boolean this_present_vipPrice = true;
    boolean that_present_vipPrice = true;
    if (this_present_vipPrice || that_present_vipPrice) {
      if (!(this_present_vipPrice && that_present_vipPrice))
        return false;
      if (this.vipPrice != that.vipPrice)
        return false;
    }

    boolean this_present_min = true;
    boolean that_present_min = true;
    if (this_present_min || that_present_min) {
      if (!(this_present_min && that_present_min))
        return false;
      if (this.min != that.min)
        return false;
    }

    boolean this_present_max = true;
    boolean that_present_max = true;
    if (this_present_max || that_present_max) {
      if (!(this_present_max && that_present_max))
        return false;
      if (this.max != that.max)
        return false;
    }

    boolean this_present_maxVip = true;
    boolean that_present_maxVip = true;
    if (this_present_maxVip || that_present_maxVip) {
      if (!(this_present_maxVip && that_present_maxVip))
        return false;
      if (this.maxVip != that.maxVip)
        return false;
    }

    boolean this_present_sellCount = true;
    boolean that_present_sellCount = true;
    if (this_present_sellCount || that_present_sellCount) {
      if (!(this_present_sellCount && that_present_sellCount))
        return false;
      if (this.sellCount != that.sellCount)
        return false;
    }

    boolean this_present_store = true;
    boolean that_present_store = true;
    if (this_present_store || that_present_store) {
      if (!(this_present_store && that_present_store))
        return false;
      if (this.store != that.store)
        return false;
    }

    boolean this_present_isRecommend = true;
    boolean that_present_isRecommend = true;
    if (this_present_isRecommend || that_present_isRecommend) {
      if (!(this_present_isRecommend && that_present_isRecommend))
        return false;
      if (this.isRecommend != that.isRecommend)
        return false;
    }

    boolean this_present_isNew = true;
    boolean that_present_isNew = true;
    if (this_present_isNew || that_present_isNew) {
      if (!(this_present_isNew && that_present_isNew))
        return false;
      if (this.isNew != that.isNew)
        return false;
    }

    boolean this_present_isHot = true;
    boolean that_present_isHot = true;
    if (this_present_isHot || that_present_isHot) {
      if (!(this_present_isHot && that_present_isHot))
        return false;
      if (this.isHot != that.isHot)
        return false;
    }

    boolean this_present_deliveryTime = true;
    boolean that_present_deliveryTime = true;
    if (this_present_deliveryTime || that_present_deliveryTime) {
      if (!(this_present_deliveryTime && that_present_deliveryTime))
        return false;
      if (this.deliveryTime != that.deliveryTime)
        return false;
    }

    boolean this_present_introduction = true && this.isSetIntroduction();
    boolean that_present_introduction = true && that.isSetIntroduction();
    if (this_present_introduction || that_present_introduction) {
      if (!(this_present_introduction && that_present_introduction))
        return false;
      if (!this.introduction.equals(that.introduction))
        return false;
    }

    boolean this_present_buyKnow = true && this.isSetBuyKnow();
    boolean that_present_buyKnow = true && that.isSetBuyKnow();
    if (this_present_buyKnow || that_present_buyKnow) {
      if (!(this_present_buyKnow && that_present_buyKnow))
        return false;
      if (!this.buyKnow.equals(that.buyKnow))
        return false;
    }

    boolean this_present_afterShop = true && this.isSetAfterShop();
    boolean that_present_afterShop = true && that.isSetAfterShop();
    if (this_present_afterShop || that_present_afterShop) {
      if (!(this_present_afterShop && that_present_afterShop))
        return false;
      if (!this.afterShop.equals(that.afterShop))
        return false;
    }

    boolean this_present_imageUrls = true && this.isSetImageUrls();
    boolean that_present_imageUrls = true && that.isSetImageUrls();
    if (this_present_imageUrls || that_present_imageUrls) {
      if (!(this_present_imageUrls && that_present_imageUrls))
        return false;
      if (!this.imageUrls.equals(that.imageUrls))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_isSeckill = true && this.isSetIsSeckill();
    boolean that_present_isSeckill = true && that.isSetIsSeckill();
    if (this_present_isSeckill || that_present_isSeckill) {
      if (!(this_present_isSeckill && that_present_isSeckill))
        return false;
      if (!this.isSeckill.equals(that.isSeckill))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_fullName = true && (isSetFullName());
    list.add(present_fullName);
    if (present_fullName)
      list.add(fullName);

    boolean present_briefIntroduction = true && (isSetBriefIntroduction());
    list.add(present_briefIntroduction);
    if (present_briefIntroduction)
      list.add(briefIntroduction);

    boolean present_marketPrice = true;
    list.add(present_marketPrice);
    if (present_marketPrice)
      list.add(marketPrice);

    boolean present_price = true;
    list.add(present_price);
    if (present_price)
      list.add(price);

    boolean present_vipPrice = true;
    list.add(present_vipPrice);
    if (present_vipPrice)
      list.add(vipPrice);

    boolean present_min = true;
    list.add(present_min);
    if (present_min)
      list.add(min);

    boolean present_max = true;
    list.add(present_max);
    if (present_max)
      list.add(max);

    boolean present_maxVip = true;
    list.add(present_maxVip);
    if (present_maxVip)
      list.add(maxVip);

    boolean present_sellCount = true;
    list.add(present_sellCount);
    if (present_sellCount)
      list.add(sellCount);

    boolean present_store = true;
    list.add(present_store);
    if (present_store)
      list.add(store);

    boolean present_isRecommend = true;
    list.add(present_isRecommend);
    if (present_isRecommend)
      list.add(isRecommend);

    boolean present_isNew = true;
    list.add(present_isNew);
    if (present_isNew)
      list.add(isNew);

    boolean present_isHot = true;
    list.add(present_isHot);
    if (present_isHot)
      list.add(isHot);

    boolean present_deliveryTime = true;
    list.add(present_deliveryTime);
    if (present_deliveryTime)
      list.add(deliveryTime);

    boolean present_introduction = true && (isSetIntroduction());
    list.add(present_introduction);
    if (present_introduction)
      list.add(introduction);

    boolean present_buyKnow = true && (isSetBuyKnow());
    list.add(present_buyKnow);
    if (present_buyKnow)
      list.add(buyKnow);

    boolean present_afterShop = true && (isSetAfterShop());
    list.add(present_afterShop);
    if (present_afterShop)
      list.add(afterShop);

    boolean present_imageUrls = true && (isSetImageUrls());
    list.add(present_imageUrls);
    if (present_imageUrls)
      list.add(imageUrls);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_isSeckill = true && (isSetIsSeckill());
    list.add(present_isSeckill);
    if (present_isSeckill)
      list.add(isSeckill);

    return list.hashCode();
  }

  @Override
  public int compareTo(BoutiqueGoodsInfoVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFullName()).compareTo(other.isSetFullName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFullName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fullName, other.fullName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBriefIntroduction()).compareTo(other.isSetBriefIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBriefIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.briefIntroduction, other.briefIntroduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMarketPrice()).compareTo(other.isSetMarketPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarketPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marketPrice, other.marketPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipPrice()).compareTo(other.isSetVipPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipPrice, other.vipPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMin()).compareTo(other.isSetMin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.min, other.min);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMax()).compareTo(other.isSetMax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.max, other.max);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxVip()).compareTo(other.isSetMaxVip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxVip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxVip, other.maxVip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellCount()).compareTo(other.isSetSellCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellCount, other.sellCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStore()).compareTo(other.isSetStore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.store, other.store);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsRecommend()).compareTo(other.isSetIsRecommend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRecommend()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRecommend, other.isRecommend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsNew()).compareTo(other.isSetIsNew());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsNew()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isNew, other.isNew);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsHot()).compareTo(other.isSetIsHot());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsHot()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isHot, other.isHot);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryTime()).compareTo(other.isSetDeliveryTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryTime, other.deliveryTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntroduction()).compareTo(other.isSetIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.introduction, other.introduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyKnow()).compareTo(other.isSetBuyKnow());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyKnow()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyKnow, other.buyKnow);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAfterShop()).compareTo(other.isSetAfterShop());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAfterShop()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.afterShop, other.afterShop);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImageUrls()).compareTo(other.isSetImageUrls());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImageUrls()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.imageUrls, other.imageUrls);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsSeckill()).compareTo(other.isSetIsSeckill());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsSeckill()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isSeckill, other.isSeckill);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BoutiqueGoodsInfoVo(");
    boolean first = true;

    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fullName:");
    if (this.fullName == null) {
      sb.append("null");
    } else {
      sb.append(this.fullName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("briefIntroduction:");
    if (this.briefIntroduction == null) {
      sb.append("null");
    } else {
      sb.append(this.briefIntroduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("marketPrice:");
    sb.append(this.marketPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    sb.append(this.price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipPrice:");
    sb.append(this.vipPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("min:");
    sb.append(this.min);
    first = false;
    if (!first) sb.append(", ");
    sb.append("max:");
    sb.append(this.max);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxVip:");
    sb.append(this.maxVip);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellCount:");
    sb.append(this.sellCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("store:");
    sb.append(this.store);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isRecommend:");
    sb.append(this.isRecommend);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isNew:");
    sb.append(this.isNew);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isHot:");
    sb.append(this.isHot);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryTime:");
    sb.append(this.deliveryTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("introduction:");
    if (this.introduction == null) {
      sb.append("null");
    } else {
      sb.append(this.introduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyKnow:");
    if (this.buyKnow == null) {
      sb.append("null");
    } else {
      sb.append(this.buyKnow);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("afterShop:");
    if (this.afterShop == null) {
      sb.append("null");
    } else {
      sb.append(this.afterShop);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("imageUrls:");
    if (this.imageUrls == null) {
      sb.append("null");
    } else {
      sb.append(this.imageUrls);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isSeckill:");
    if (this.isSeckill == null) {
      sb.append("null");
    } else {
      sb.append(this.isSeckill);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BoutiqueGoodsInfoVoStandardSchemeFactory implements SchemeFactory {
    public BoutiqueGoodsInfoVoStandardScheme getScheme() {
      return new BoutiqueGoodsInfoVoStandardScheme();
    }
  }

  private static class BoutiqueGoodsInfoVoStandardScheme extends StandardScheme<BoutiqueGoodsInfoVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BoutiqueGoodsInfoVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FULL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fullName = iprot.readString();
              struct.setFullNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BRIEF_INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.briefIntroduction = iprot.readString();
              struct.setBriefIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MARKET_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.marketPrice = iprot.readDouble();
              struct.setMarketPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.price = iprot.readDouble();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // VIP_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.vipPrice = iprot.readDouble();
              struct.setVipPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // MIN
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.min = iprot.readI32();
              struct.setMinIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // MAX
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.max = iprot.readI32();
              struct.setMaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // MAX_VIP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxVip = iprot.readI32();
              struct.setMaxVipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // SELL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sellCount = iprot.readI32();
              struct.setSellCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // STORE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.store = iprot.readI32();
              struct.setStoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // IS_RECOMMEND
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isRecommend = iprot.readBool();
              struct.setIsRecommendIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // IS_NEW
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isNew = iprot.readBool();
              struct.setIsNewIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // IS_HOT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isHot = iprot.readBool();
              struct.setIsHotIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // DELIVERY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryTime = iprot.readI64();
              struct.setDeliveryTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.introduction = iprot.readString();
              struct.setIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // BUY_KNOW
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyKnow = iprot.readString();
              struct.setBuyKnowIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // AFTER_SHOP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.afterShop = iprot.readString();
              struct.setAfterShopIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // IMAGE_URLS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list240 = iprot.readListBegin();
                struct.imageUrls = new ArrayList<String>(_list240.size);
                String _elem241;
                for (int _i242 = 0; _i242 < _list240.size; ++_i242)
                {
                  _elem241 = iprot.readString();
                  struct.imageUrls.add(_elem241);
                }
                iprot.readListEnd();
              }
              struct.setImageUrlsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // IS_SECKILL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isSeckill = iprot.readString();
              struct.setIsSeckillIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BoutiqueGoodsInfoVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.fullName != null) {
        oprot.writeFieldBegin(FULL_NAME_FIELD_DESC);
        oprot.writeString(struct.fullName);
        oprot.writeFieldEnd();
      }
      if (struct.briefIntroduction != null) {
        oprot.writeFieldBegin(BRIEF_INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.briefIntroduction);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MARKET_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.marketPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeDouble(struct.price);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VIP_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.vipPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MIN_FIELD_DESC);
      oprot.writeI32(struct.min);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_FIELD_DESC);
      oprot.writeI32(struct.max);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_VIP_FIELD_DESC);
      oprot.writeI32(struct.maxVip);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SELL_COUNT_FIELD_DESC);
      oprot.writeI32(struct.sellCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STORE_FIELD_DESC);
      oprot.writeI32(struct.store);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_RECOMMEND_FIELD_DESC);
      oprot.writeBool(struct.isRecommend);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_NEW_FIELD_DESC);
      oprot.writeBool(struct.isNew);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_HOT_FIELD_DESC);
      oprot.writeBool(struct.isHot);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryTime);
      oprot.writeFieldEnd();
      if (struct.introduction != null) {
        oprot.writeFieldBegin(INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.introduction);
        oprot.writeFieldEnd();
      }
      if (struct.buyKnow != null) {
        oprot.writeFieldBegin(BUY_KNOW_FIELD_DESC);
        oprot.writeString(struct.buyKnow);
        oprot.writeFieldEnd();
      }
      if (struct.afterShop != null) {
        oprot.writeFieldBegin(AFTER_SHOP_FIELD_DESC);
        oprot.writeString(struct.afterShop);
        oprot.writeFieldEnd();
      }
      if (struct.imageUrls != null) {
        oprot.writeFieldBegin(IMAGE_URLS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.imageUrls.size()));
          for (String _iter243 : struct.imageUrls)
          {
            oprot.writeString(_iter243);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      if (struct.isSeckill != null) {
        oprot.writeFieldBegin(IS_SECKILL_FIELD_DESC);
        oprot.writeString(struct.isSeckill);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BoutiqueGoodsInfoVoTupleSchemeFactory implements SchemeFactory {
    public BoutiqueGoodsInfoVoTupleScheme getScheme() {
      return new BoutiqueGoodsInfoVoTupleScheme();
    }
  }

  private static class BoutiqueGoodsInfoVoTupleScheme extends TupleScheme<BoutiqueGoodsInfoVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BoutiqueGoodsInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProductId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(2);
      }
      if (struct.isSetType()) {
        optionals.set(3);
      }
      if (struct.isSetName()) {
        optionals.set(4);
      }
      if (struct.isSetFullName()) {
        optionals.set(5);
      }
      if (struct.isSetBriefIntroduction()) {
        optionals.set(6);
      }
      if (struct.isSetMarketPrice()) {
        optionals.set(7);
      }
      if (struct.isSetPrice()) {
        optionals.set(8);
      }
      if (struct.isSetVipPrice()) {
        optionals.set(9);
      }
      if (struct.isSetMin()) {
        optionals.set(10);
      }
      if (struct.isSetMax()) {
        optionals.set(11);
      }
      if (struct.isSetMaxVip()) {
        optionals.set(12);
      }
      if (struct.isSetSellCount()) {
        optionals.set(13);
      }
      if (struct.isSetStore()) {
        optionals.set(14);
      }
      if (struct.isSetIsRecommend()) {
        optionals.set(15);
      }
      if (struct.isSetIsNew()) {
        optionals.set(16);
      }
      if (struct.isSetIsHot()) {
        optionals.set(17);
      }
      if (struct.isSetDeliveryTime()) {
        optionals.set(18);
      }
      if (struct.isSetIntroduction()) {
        optionals.set(19);
      }
      if (struct.isSetBuyKnow()) {
        optionals.set(20);
      }
      if (struct.isSetAfterShop()) {
        optionals.set(21);
      }
      if (struct.isSetImageUrls()) {
        optionals.set(22);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(23);
      }
      if (struct.isSetIsSeckill()) {
        optionals.set(24);
      }
      oprot.writeBitSet(optionals, 25);
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetFullName()) {
        oprot.writeString(struct.fullName);
      }
      if (struct.isSetBriefIntroduction()) {
        oprot.writeString(struct.briefIntroduction);
      }
      if (struct.isSetMarketPrice()) {
        oprot.writeDouble(struct.marketPrice);
      }
      if (struct.isSetPrice()) {
        oprot.writeDouble(struct.price);
      }
      if (struct.isSetVipPrice()) {
        oprot.writeDouble(struct.vipPrice);
      }
      if (struct.isSetMin()) {
        oprot.writeI32(struct.min);
      }
      if (struct.isSetMax()) {
        oprot.writeI32(struct.max);
      }
      if (struct.isSetMaxVip()) {
        oprot.writeI32(struct.maxVip);
      }
      if (struct.isSetSellCount()) {
        oprot.writeI32(struct.sellCount);
      }
      if (struct.isSetStore()) {
        oprot.writeI32(struct.store);
      }
      if (struct.isSetIsRecommend()) {
        oprot.writeBool(struct.isRecommend);
      }
      if (struct.isSetIsNew()) {
        oprot.writeBool(struct.isNew);
      }
      if (struct.isSetIsHot()) {
        oprot.writeBool(struct.isHot);
      }
      if (struct.isSetDeliveryTime()) {
        oprot.writeI64(struct.deliveryTime);
      }
      if (struct.isSetIntroduction()) {
        oprot.writeString(struct.introduction);
      }
      if (struct.isSetBuyKnow()) {
        oprot.writeString(struct.buyKnow);
      }
      if (struct.isSetAfterShop()) {
        oprot.writeString(struct.afterShop);
      }
      if (struct.isSetImageUrls()) {
        {
          oprot.writeI32(struct.imageUrls.size());
          for (String _iter244 : struct.imageUrls)
          {
            oprot.writeString(_iter244);
          }
        }
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetIsSeckill()) {
        oprot.writeString(struct.isSeckill);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BoutiqueGoodsInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(25);
      if (incoming.get(0)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.fullName = iprot.readString();
        struct.setFullNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.briefIntroduction = iprot.readString();
        struct.setBriefIntroductionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.marketPrice = iprot.readDouble();
        struct.setMarketPriceIsSet(true);
      }
      if (incoming.get(8)) {
        struct.price = iprot.readDouble();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(9)) {
        struct.vipPrice = iprot.readDouble();
        struct.setVipPriceIsSet(true);
      }
      if (incoming.get(10)) {
        struct.min = iprot.readI32();
        struct.setMinIsSet(true);
      }
      if (incoming.get(11)) {
        struct.max = iprot.readI32();
        struct.setMaxIsSet(true);
      }
      if (incoming.get(12)) {
        struct.maxVip = iprot.readI32();
        struct.setMaxVipIsSet(true);
      }
      if (incoming.get(13)) {
        struct.sellCount = iprot.readI32();
        struct.setSellCountIsSet(true);
      }
      if (incoming.get(14)) {
        struct.store = iprot.readI32();
        struct.setStoreIsSet(true);
      }
      if (incoming.get(15)) {
        struct.isRecommend = iprot.readBool();
        struct.setIsRecommendIsSet(true);
      }
      if (incoming.get(16)) {
        struct.isNew = iprot.readBool();
        struct.setIsNewIsSet(true);
      }
      if (incoming.get(17)) {
        struct.isHot = iprot.readBool();
        struct.setIsHotIsSet(true);
      }
      if (incoming.get(18)) {
        struct.deliveryTime = iprot.readI64();
        struct.setDeliveryTimeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.introduction = iprot.readString();
        struct.setIntroductionIsSet(true);
      }
      if (incoming.get(20)) {
        struct.buyKnow = iprot.readString();
        struct.setBuyKnowIsSet(true);
      }
      if (incoming.get(21)) {
        struct.afterShop = iprot.readString();
        struct.setAfterShopIsSet(true);
      }
      if (incoming.get(22)) {
        {
          org.apache.thrift.protocol.TList _list245 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.imageUrls = new ArrayList<String>(_list245.size);
          String _elem246;
          for (int _i247 = 0; _i247 < _list245.size; ++_i247)
          {
            _elem246 = iprot.readString();
            struct.imageUrls.add(_elem246);
          }
        }
        struct.setImageUrlsIsSet(true);
      }
      if (incoming.get(23)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(24)) {
        struct.isSeckill = iprot.readString();
        struct.setIsSeckillIsSet(true);
      }
    }
  }

}

