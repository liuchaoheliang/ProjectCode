/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商户信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MerchantVo implements org.apache.thrift.TBase<MerchantVo, MerchantVo._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PRO_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("proOrgCode", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CITY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("cityOrgCode", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField COUNTY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("countyOrgCode", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField MERCHANT_FULLNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantFullname", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField LOGO_FIELD_DESC = new org.apache.thrift.protocol.TField("logo", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField MERCHANT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantStatus", org.apache.thrift.protocol.TType.BOOL, (short)15);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnable", org.apache.thrift.protocol.TType.BOOL, (short)16);
  private static final org.apache.thrift.protocol.TField DISABLE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("disableStatus", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField IS_TOP_FIELD_DESC = new org.apache.thrift.protocol.TField("isTop", org.apache.thrift.protocol.TType.BOOL, (short)18);
  private static final org.apache.thrift.protocol.TField INTRODUCE_FIELD_DESC = new org.apache.thrift.protocol.TField("introduce", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField LICENSE_FIELD_DESC = new org.apache.thrift.protocol.TField("license", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField TAX_REG_FIELD_DESC = new org.apache.thrift.protocol.TField("taxReg", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField CONTRACT_BEGINTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("contractBegintime", org.apache.thrift.protocol.TType.I64, (short)22);
  private static final org.apache.thrift.protocol.TField CONTRACT_ENDTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("contractEndtime", org.apache.thrift.protocol.TType.I64, (short)23);
  private static final org.apache.thrift.protocol.TField CONTRACT_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("contractStaff", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField AUDIT_START_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStartOrgCode", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField AUDIT_END_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditEndOrgCode", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField AUDIT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditState", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField AUDIT_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditOrgCode", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField NEED_REVIEW_FIELD_DESC = new org.apache.thrift.protocol.TField("needReview", org.apache.thrift.protocol.TType.BOOL, (short)29);
  private static final org.apache.thrift.protocol.TField AUDIT_STAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStage", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("auditTime", org.apache.thrift.protocol.TType.I64, (short)31);
  private static final org.apache.thrift.protocol.TField AUDIT_COMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("auditComment", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField AUDIT_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStaff", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField REVIEW_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewStaff", org.apache.thrift.protocol.TType.STRING, (short)34);
  private static final org.apache.thrift.protocol.TField CONTACT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("contactName", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField CONTACT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("contactPhone", org.apache.thrift.protocol.TType.STRING, (short)36);
  private static final org.apache.thrift.protocol.TField CONTACT_EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("contactEmail", org.apache.thrift.protocol.TType.STRING, (short)37);
  private static final org.apache.thrift.protocol.TField LEGAL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("legalName", org.apache.thrift.protocol.TType.STRING, (short)38);
  private static final org.apache.thrift.protocol.TField LEGAL_CREDENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("legalCredentType", org.apache.thrift.protocol.TType.I32, (short)39);
  private static final org.apache.thrift.protocol.TField LEGAL_CREDENT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("legalCredentNo", org.apache.thrift.protocol.TType.STRING, (short)40);
  private static final org.apache.thrift.protocol.TField COMPLAINT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("complaintPhone", org.apache.thrift.protocol.TType.STRING, (short)41);
  private static final org.apache.thrift.protocol.TField CATEGORY_INFO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryInfoList", org.apache.thrift.protocol.TType.LIST, (short)42);
  private static final org.apache.thrift.protocol.TField TYPE_INFO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("typeInfoList", org.apache.thrift.protocol.TType.LIST, (short)43);
  private static final org.apache.thrift.protocol.TField START_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startCreateTime", org.apache.thrift.protocol.TType.I64, (short)44);
  private static final org.apache.thrift.protocol.TField END_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endCreateTime", org.apache.thrift.protocol.TType.I64, (short)45);
  private static final org.apache.thrift.protocol.TField START_AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startAuditTime", org.apache.thrift.protocol.TType.I64, (short)46);
  private static final org.apache.thrift.protocol.TField END_AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endAuditTime", org.apache.thrift.protocol.TType.I64, (short)47);
  private static final org.apache.thrift.protocol.TField START_CONTRACT_BEGINTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startContractBegintime", org.apache.thrift.protocol.TType.I64, (short)48);
  private static final org.apache.thrift.protocol.TField END_CONTRACT_BEGINTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endContractBegintime", org.apache.thrift.protocol.TType.I64, (short)49);
  private static final org.apache.thrift.protocol.TField START_CONTRACT_ENDTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startContractEndtime", org.apache.thrift.protocol.TType.I64, (short)50);
  private static final org.apache.thrift.protocol.TField END_CONTRACT_ENDTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endContractEndtime", org.apache.thrift.protocol.TType.I64, (short)51);
  private static final org.apache.thrift.protocol.TField USER_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("userOrgCode", org.apache.thrift.protocol.TType.STRING, (short)52);
  private static final org.apache.thrift.protocol.TField COMPANY_CREDENTIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("companyCredential", org.apache.thrift.protocol.TType.STRING, (short)53);
  private static final org.apache.thrift.protocol.TField EDIT_AUDIT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("editAuditState", org.apache.thrift.protocol.TType.STRING, (short)54);
  private static final org.apache.thrift.protocol.TField OPERATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("operateTime", org.apache.thrift.protocol.TType.I64, (short)55);
  private static final org.apache.thrift.protocol.TField OPERATE_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("operateUser", org.apache.thrift.protocol.TType.STRING, (short)56);
  private static final org.apache.thrift.protocol.TField IS_OUTSOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("isOutsource", org.apache.thrift.protocol.TType.BOOL, (short)57);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I64, (short)58);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantVoTupleSchemeFactory());
  }

  /**
   * 主键ID
   */
  public long id; // optional
  /**
   * 创建时间
   */
  public long createTime; // optional
  /**
   * 客户端ID
   */
  public String clientId; // optional
  /**
   * 商户ID
   */
  public String merchantId; // optional
  /**
   * 被发展组织机构代码的省级机构
   */
  public String proOrgCode; // optional
  /**
   * 被发展组织机构代码的市级机构
   */
  public String cityOrgCode; // optional
  /**
   * 被发展组织机构代码的区级机构
   */
  public String countyOrgCode; // optional
  /**
   * 被发展组织机构代码
   */
  public String orgCode; // optional
  /**
   * 商户名
   */
  public String merchantName; // optional
  /**
   * 商户全名
   */
  public String merchantFullname; // optional
  /**
   * 商户商标
   */
  public String logo; // optional
  /**
   * 商户地址
   */
  public String address; // optional
  /**
   * 商户电话
   */
  public String phone; // optional
  /**
   * 所在地区
   */
  public long areaId; // optional
  /**
   * 是否银⾏行机构对应的商户
   */
  public boolean merchantStatus; // optional
  /**
   * 是否有效商户
   */
  public boolean isEnable; // optional
  /**
   * 无效状态,0正常;1禁用;2解约
   */
  public String disableStatus; // optional
  /**
   * 是否置顶
   */
  public boolean isTop; // optional
  /**
   * 简介
   */
  public String introduce; // optional
  /**
   * 营业执照号码
   */
  public String license; // optional
  /**
   * 税务登记证
   */
  public String taxReg; // optional
  /**
   * 签约时间
   */
  public long contractBegintime; // optional
  /**
   * 签约到期时间
   */
  public long contractEndtime; // optional
  /**
   * 签约人员
   */
  public String contractStaff; // optional
  /**
   * 起始审核机构
   */
  public String auditStartOrgCode; // optional
  /**
   * 最终审核机构
   */
  public String auditEndOrgCode; // optional
  /**
   * 审核状态
   */
  public String auditState; // optional
  /**
   * 待审核机构编号(完成置0)
   */
  public String auditOrgCode; // optional
  /**
   * 是否需要复核(0/1) - 已删除
   */
  public boolean needReview; // optional
  /**
   * 审核步骤(0-初审/1-复审)
   */
  public String auditStage; // optional
  /**
   * 审核时间
   */
  public long auditTime; // optional
  /**
   * 审核备注
   */
  public String auditComment; // optional
  /**
   * 审核人员
   */
  public String auditStaff; // optional
  /**
   * 复核人员
   */
  public String reviewStaff; // optional
  /**
   * 联系人姓名
   */
  public String contactName; // optional
  /**
   * 联系人电话
   */
  public String contactPhone; // optional
  /**
   * 联系人邮箱
   */
  public String contactEmail; // optional
  /**
   * 法人姓名
   */
  public String legalName; // optional
  /**
   * 法人证件号类型
   */
  public int legalCredentType; // optional
  /**
   * 法人证件号
   */
  public String legalCredentNo; // optional
  /**
   * 投诉电话
   */
  public String complaintPhone; // optional
  /**
   * 分类id列表(查询使用 - 餐饮、休闲、美容、汽车等)
   */
  public List<Long> categoryInfoList; // optional
  /**
   * 类型id列表(查询使用 - 团购、面对面、名优特惠、等)
   */
  public List<Long> typeInfoList; // optional
  /**
   * 开始创建时间(查询条件使用)
   */
  public long startCreateTime; // optional
  /**
   * 结束创建时间(查询条件使用)
   */
  public long endCreateTime; // optional
  /**
   * 开始审核时间(查询条件使用)
   */
  public long startAuditTime; // optional
  /**
   * 结束审核时间(查询条件使用)
   */
  public long endAuditTime; // optional
  /**
   * 开始签约时间(查询条件使用)
   */
  public long startContractBegintime; // optional
  /**
   * 开始签约时间(查询条件使用)
   */
  public long endContractBegintime; // optional
  /**
   * 开始签约到期时间(查询条件使用)
   */
  public long startContractEndtime; // optional
  /**
   * 结束签约到期时间(查询条件使用)
   */
  public long endContractEndtime; // optional
  /**
   * 用户录入机构
   */
  public String userOrgCode; // optional
  /**
   * 商户组织机构代码证
   */
  public String companyCredential; // optional
  /**
   * 0-更新审核中1-正常(编辑审核通过)2-审核未通过
   */
  public String editAuditState; // optional
  /**
   * 操作时间
   */
  public long operateTime; // optional
  /**
   * 操作人 *
   */
  public String operateUser; // optional
  /**
   * 是否外包[false=否,true=是]
   */
  public boolean isOutsource; // optional
  /**
   * 外包公司id
   */
  public long companyId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键ID
     */
    ID((short)1, "id"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)2, "createTime"),
    /**
     * 客户端ID
     */
    CLIENT_ID((short)3, "clientId"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)4, "merchantId"),
    /**
     * 被发展组织机构代码的省级机构
     */
    PRO_ORG_CODE((short)5, "proOrgCode"),
    /**
     * 被发展组织机构代码的市级机构
     */
    CITY_ORG_CODE((short)6, "cityOrgCode"),
    /**
     * 被发展组织机构代码的区级机构
     */
    COUNTY_ORG_CODE((short)7, "countyOrgCode"),
    /**
     * 被发展组织机构代码
     */
    ORG_CODE((short)8, "orgCode"),
    /**
     * 商户名
     */
    MERCHANT_NAME((short)9, "merchantName"),
    /**
     * 商户全名
     */
    MERCHANT_FULLNAME((short)10, "merchantFullname"),
    /**
     * 商户商标
     */
    LOGO((short)11, "logo"),
    /**
     * 商户地址
     */
    ADDRESS((short)12, "address"),
    /**
     * 商户电话
     */
    PHONE((short)13, "phone"),
    /**
     * 所在地区
     */
    AREA_ID((short)14, "areaId"),
    /**
     * 是否银⾏行机构对应的商户
     */
    MERCHANT_STATUS((short)15, "merchantStatus"),
    /**
     * 是否有效商户
     */
    IS_ENABLE((short)16, "isEnable"),
    /**
     * 无效状态,0正常;1禁用;2解约
     */
    DISABLE_STATUS((short)17, "disableStatus"),
    /**
     * 是否置顶
     */
    IS_TOP((short)18, "isTop"),
    /**
     * 简介
     */
    INTRODUCE((short)19, "introduce"),
    /**
     * 营业执照号码
     */
    LICENSE((short)20, "license"),
    /**
     * 税务登记证
     */
    TAX_REG((short)21, "taxReg"),
    /**
     * 签约时间
     */
    CONTRACT_BEGINTIME((short)22, "contractBegintime"),
    /**
     * 签约到期时间
     */
    CONTRACT_ENDTIME((short)23, "contractEndtime"),
    /**
     * 签约人员
     */
    CONTRACT_STAFF((short)24, "contractStaff"),
    /**
     * 起始审核机构
     */
    AUDIT_START_ORG_CODE((short)25, "auditStartOrgCode"),
    /**
     * 最终审核机构
     */
    AUDIT_END_ORG_CODE((short)26, "auditEndOrgCode"),
    /**
     * 审核状态
     */
    AUDIT_STATE((short)27, "auditState"),
    /**
     * 待审核机构编号(完成置0)
     */
    AUDIT_ORG_CODE((short)28, "auditOrgCode"),
    /**
     * 是否需要复核(0/1) - 已删除
     */
    NEED_REVIEW((short)29, "needReview"),
    /**
     * 审核步骤(0-初审/1-复审)
     */
    AUDIT_STAGE((short)30, "auditStage"),
    /**
     * 审核时间
     */
    AUDIT_TIME((short)31, "auditTime"),
    /**
     * 审核备注
     */
    AUDIT_COMMENT((short)32, "auditComment"),
    /**
     * 审核人员
     */
    AUDIT_STAFF((short)33, "auditStaff"),
    /**
     * 复核人员
     */
    REVIEW_STAFF((short)34, "reviewStaff"),
    /**
     * 联系人姓名
     */
    CONTACT_NAME((short)35, "contactName"),
    /**
     * 联系人电话
     */
    CONTACT_PHONE((short)36, "contactPhone"),
    /**
     * 联系人邮箱
     */
    CONTACT_EMAIL((short)37, "contactEmail"),
    /**
     * 法人姓名
     */
    LEGAL_NAME((short)38, "legalName"),
    /**
     * 法人证件号类型
     */
    LEGAL_CREDENT_TYPE((short)39, "legalCredentType"),
    /**
     * 法人证件号
     */
    LEGAL_CREDENT_NO((short)40, "legalCredentNo"),
    /**
     * 投诉电话
     */
    COMPLAINT_PHONE((short)41, "complaintPhone"),
    /**
     * 分类id列表(查询使用 - 餐饮、休闲、美容、汽车等)
     */
    CATEGORY_INFO_LIST((short)42, "categoryInfoList"),
    /**
     * 类型id列表(查询使用 - 团购、面对面、名优特惠、等)
     */
    TYPE_INFO_LIST((short)43, "typeInfoList"),
    /**
     * 开始创建时间(查询条件使用)
     */
    START_CREATE_TIME((short)44, "startCreateTime"),
    /**
     * 结束创建时间(查询条件使用)
     */
    END_CREATE_TIME((short)45, "endCreateTime"),
    /**
     * 开始审核时间(查询条件使用)
     */
    START_AUDIT_TIME((short)46, "startAuditTime"),
    /**
     * 结束审核时间(查询条件使用)
     */
    END_AUDIT_TIME((short)47, "endAuditTime"),
    /**
     * 开始签约时间(查询条件使用)
     */
    START_CONTRACT_BEGINTIME((short)48, "startContractBegintime"),
    /**
     * 开始签约时间(查询条件使用)
     */
    END_CONTRACT_BEGINTIME((short)49, "endContractBegintime"),
    /**
     * 开始签约到期时间(查询条件使用)
     */
    START_CONTRACT_ENDTIME((short)50, "startContractEndtime"),
    /**
     * 结束签约到期时间(查询条件使用)
     */
    END_CONTRACT_ENDTIME((short)51, "endContractEndtime"),
    /**
     * 用户录入机构
     */
    USER_ORG_CODE((short)52, "userOrgCode"),
    /**
     * 商户组织机构代码证
     */
    COMPANY_CREDENTIAL((short)53, "companyCredential"),
    /**
     * 0-更新审核中1-正常(编辑审核通过)2-审核未通过
     */
    EDIT_AUDIT_STATE((short)54, "editAuditState"),
    /**
     * 操作时间
     */
    OPERATE_TIME((short)55, "operateTime"),
    /**
     * 操作人 *
     */
    OPERATE_USER((short)56, "operateUser"),
    /**
     * 是否外包[false=否,true=是]
     */
    IS_OUTSOURCE((short)57, "isOutsource"),
    /**
     * 外包公司id
     */
    COMPANY_ID((short)58, "companyId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // CLIENT_ID
          return CLIENT_ID;
        case 4: // MERCHANT_ID
          return MERCHANT_ID;
        case 5: // PRO_ORG_CODE
          return PRO_ORG_CODE;
        case 6: // CITY_ORG_CODE
          return CITY_ORG_CODE;
        case 7: // COUNTY_ORG_CODE
          return COUNTY_ORG_CODE;
        case 8: // ORG_CODE
          return ORG_CODE;
        case 9: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 10: // MERCHANT_FULLNAME
          return MERCHANT_FULLNAME;
        case 11: // LOGO
          return LOGO;
        case 12: // ADDRESS
          return ADDRESS;
        case 13: // PHONE
          return PHONE;
        case 14: // AREA_ID
          return AREA_ID;
        case 15: // MERCHANT_STATUS
          return MERCHANT_STATUS;
        case 16: // IS_ENABLE
          return IS_ENABLE;
        case 17: // DISABLE_STATUS
          return DISABLE_STATUS;
        case 18: // IS_TOP
          return IS_TOP;
        case 19: // INTRODUCE
          return INTRODUCE;
        case 20: // LICENSE
          return LICENSE;
        case 21: // TAX_REG
          return TAX_REG;
        case 22: // CONTRACT_BEGINTIME
          return CONTRACT_BEGINTIME;
        case 23: // CONTRACT_ENDTIME
          return CONTRACT_ENDTIME;
        case 24: // CONTRACT_STAFF
          return CONTRACT_STAFF;
        case 25: // AUDIT_START_ORG_CODE
          return AUDIT_START_ORG_CODE;
        case 26: // AUDIT_END_ORG_CODE
          return AUDIT_END_ORG_CODE;
        case 27: // AUDIT_STATE
          return AUDIT_STATE;
        case 28: // AUDIT_ORG_CODE
          return AUDIT_ORG_CODE;
        case 29: // NEED_REVIEW
          return NEED_REVIEW;
        case 30: // AUDIT_STAGE
          return AUDIT_STAGE;
        case 31: // AUDIT_TIME
          return AUDIT_TIME;
        case 32: // AUDIT_COMMENT
          return AUDIT_COMMENT;
        case 33: // AUDIT_STAFF
          return AUDIT_STAFF;
        case 34: // REVIEW_STAFF
          return REVIEW_STAFF;
        case 35: // CONTACT_NAME
          return CONTACT_NAME;
        case 36: // CONTACT_PHONE
          return CONTACT_PHONE;
        case 37: // CONTACT_EMAIL
          return CONTACT_EMAIL;
        case 38: // LEGAL_NAME
          return LEGAL_NAME;
        case 39: // LEGAL_CREDENT_TYPE
          return LEGAL_CREDENT_TYPE;
        case 40: // LEGAL_CREDENT_NO
          return LEGAL_CREDENT_NO;
        case 41: // COMPLAINT_PHONE
          return COMPLAINT_PHONE;
        case 42: // CATEGORY_INFO_LIST
          return CATEGORY_INFO_LIST;
        case 43: // TYPE_INFO_LIST
          return TYPE_INFO_LIST;
        case 44: // START_CREATE_TIME
          return START_CREATE_TIME;
        case 45: // END_CREATE_TIME
          return END_CREATE_TIME;
        case 46: // START_AUDIT_TIME
          return START_AUDIT_TIME;
        case 47: // END_AUDIT_TIME
          return END_AUDIT_TIME;
        case 48: // START_CONTRACT_BEGINTIME
          return START_CONTRACT_BEGINTIME;
        case 49: // END_CONTRACT_BEGINTIME
          return END_CONTRACT_BEGINTIME;
        case 50: // START_CONTRACT_ENDTIME
          return START_CONTRACT_ENDTIME;
        case 51: // END_CONTRACT_ENDTIME
          return END_CONTRACT_ENDTIME;
        case 52: // USER_ORG_CODE
          return USER_ORG_CODE;
        case 53: // COMPANY_CREDENTIAL
          return COMPANY_CREDENTIAL;
        case 54: // EDIT_AUDIT_STATE
          return EDIT_AUDIT_STATE;
        case 55: // OPERATE_TIME
          return OPERATE_TIME;
        case 56: // OPERATE_USER
          return OPERATE_USER;
        case 57: // IS_OUTSOURCE
          return IS_OUTSOURCE;
        case 58: // COMPANY_ID
          return COMPANY_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __AREAID_ISSET_ID = 2;
  private static final int __MERCHANTSTATUS_ISSET_ID = 3;
  private static final int __ISENABLE_ISSET_ID = 4;
  private static final int __ISTOP_ISSET_ID = 5;
  private static final int __CONTRACTBEGINTIME_ISSET_ID = 6;
  private static final int __CONTRACTENDTIME_ISSET_ID = 7;
  private static final int __NEEDREVIEW_ISSET_ID = 8;
  private static final int __AUDITTIME_ISSET_ID = 9;
  private static final int __LEGALCREDENTTYPE_ISSET_ID = 10;
  private static final int __STARTCREATETIME_ISSET_ID = 11;
  private static final int __ENDCREATETIME_ISSET_ID = 12;
  private static final int __STARTAUDITTIME_ISSET_ID = 13;
  private static final int __ENDAUDITTIME_ISSET_ID = 14;
  private static final int __STARTCONTRACTBEGINTIME_ISSET_ID = 15;
  private static final int __ENDCONTRACTBEGINTIME_ISSET_ID = 16;
  private static final int __STARTCONTRACTENDTIME_ISSET_ID = 17;
  private static final int __ENDCONTRACTENDTIME_ISSET_ID = 18;
  private static final int __OPERATETIME_ISSET_ID = 19;
  private static final int __ISOUTSOURCE_ISSET_ID = 20;
  private static final int __COMPANYID_ISSET_ID = 21;
  private int __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CREATE_TIME,_Fields.CLIENT_ID,_Fields.MERCHANT_ID,_Fields.PRO_ORG_CODE,_Fields.CITY_ORG_CODE,_Fields.COUNTY_ORG_CODE,_Fields.ORG_CODE,_Fields.MERCHANT_NAME,_Fields.MERCHANT_FULLNAME,_Fields.LOGO,_Fields.ADDRESS,_Fields.PHONE,_Fields.AREA_ID,_Fields.MERCHANT_STATUS,_Fields.IS_ENABLE,_Fields.DISABLE_STATUS,_Fields.IS_TOP,_Fields.INTRODUCE,_Fields.LICENSE,_Fields.TAX_REG,_Fields.CONTRACT_BEGINTIME,_Fields.CONTRACT_ENDTIME,_Fields.CONTRACT_STAFF,_Fields.AUDIT_START_ORG_CODE,_Fields.AUDIT_END_ORG_CODE,_Fields.AUDIT_STATE,_Fields.AUDIT_ORG_CODE,_Fields.NEED_REVIEW,_Fields.AUDIT_STAGE,_Fields.AUDIT_TIME,_Fields.AUDIT_COMMENT,_Fields.AUDIT_STAFF,_Fields.REVIEW_STAFF,_Fields.CONTACT_NAME,_Fields.CONTACT_PHONE,_Fields.CONTACT_EMAIL,_Fields.LEGAL_NAME,_Fields.LEGAL_CREDENT_TYPE,_Fields.LEGAL_CREDENT_NO,_Fields.COMPLAINT_PHONE,_Fields.CATEGORY_INFO_LIST,_Fields.TYPE_INFO_LIST,_Fields.START_CREATE_TIME,_Fields.END_CREATE_TIME,_Fields.START_AUDIT_TIME,_Fields.END_AUDIT_TIME,_Fields.START_CONTRACT_BEGINTIME,_Fields.END_CONTRACT_BEGINTIME,_Fields.START_CONTRACT_ENDTIME,_Fields.END_CONTRACT_ENDTIME,_Fields.USER_ORG_CODE,_Fields.COMPANY_CREDENTIAL,_Fields.EDIT_AUDIT_STATE,_Fields.OPERATE_TIME,_Fields.OPERATE_USER,_Fields.IS_OUTSOURCE,_Fields.COMPANY_ID};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRO_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("proOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("cityOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNTY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("countyOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_FULLNAME, new org.apache.thrift.meta_data.FieldMetaData("merchantFullname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGO, new org.apache.thrift.meta_data.FieldMetaData("logo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MERCHANT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("merchantStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("isEnable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DISABLE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("disableStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_TOP, new org.apache.thrift.meta_data.FieldMetaData("isTop", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.INTRODUCE, new org.apache.thrift.meta_data.FieldMetaData("introduce", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LICENSE, new org.apache.thrift.meta_data.FieldMetaData("license", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TAX_REG, new org.apache.thrift.meta_data.FieldMetaData("taxReg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTRACT_BEGINTIME, new org.apache.thrift.meta_data.FieldMetaData("contractBegintime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONTRACT_ENDTIME, new org.apache.thrift.meta_data.FieldMetaData("contractEndtime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONTRACT_STAFF, new org.apache.thrift.meta_data.FieldMetaData("contractStaff", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_START_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditStartOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_END_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditEndOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STATE, new org.apache.thrift.meta_data.FieldMetaData("auditState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NEED_REVIEW, new org.apache.thrift.meta_data.FieldMetaData("needReview", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.AUDIT_STAGE, new org.apache.thrift.meta_data.FieldMetaData("auditStage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("auditTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AUDIT_COMMENT, new org.apache.thrift.meta_data.FieldMetaData("auditComment", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STAFF, new org.apache.thrift.meta_data.FieldMetaData("auditStaff", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REVIEW_STAFF, new org.apache.thrift.meta_data.FieldMetaData("reviewStaff", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_NAME, new org.apache.thrift.meta_data.FieldMetaData("contactName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("contactPhone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_EMAIL, new org.apache.thrift.meta_data.FieldMetaData("contactEmail", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEGAL_NAME, new org.apache.thrift.meta_data.FieldMetaData("legalName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEGAL_CREDENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("legalCredentType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LEGAL_CREDENT_NO, new org.apache.thrift.meta_data.FieldMetaData("legalCredentNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPLAINT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("complaintPhone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_INFO_LIST, new org.apache.thrift.meta_data.FieldMetaData("categoryInfoList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.TYPE_INFO_LIST, new org.apache.thrift.meta_data.FieldMetaData("typeInfoList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.START_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("startCreateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("endCreateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.START_AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("startAuditTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("endAuditTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.START_CONTRACT_BEGINTIME, new org.apache.thrift.meta_data.FieldMetaData("startContractBegintime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_CONTRACT_BEGINTIME, new org.apache.thrift.meta_data.FieldMetaData("endContractBegintime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.START_CONTRACT_ENDTIME, new org.apache.thrift.meta_data.FieldMetaData("startContractEndtime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_CONTRACT_ENDTIME, new org.apache.thrift.meta_data.FieldMetaData("endContractEndtime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("userOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_CREDENTIAL, new org.apache.thrift.meta_data.FieldMetaData("companyCredential", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDIT_AUDIT_STATE, new org.apache.thrift.meta_data.FieldMetaData("editAuditState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPERATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("operateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OPERATE_USER, new org.apache.thrift.meta_data.FieldMetaData("operateUser", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_OUTSOURCE, new org.apache.thrift.meta_data.FieldMetaData("isOutsource", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantVo.class, metaDataMap);
  }

  public MerchantVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantVo(MerchantVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.createTime = other.createTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetProOrgCode()) {
      this.proOrgCode = other.proOrgCode;
    }
    if (other.isSetCityOrgCode()) {
      this.cityOrgCode = other.cityOrgCode;
    }
    if (other.isSetCountyOrgCode()) {
      this.countyOrgCode = other.countyOrgCode;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetMerchantFullname()) {
      this.merchantFullname = other.merchantFullname;
    }
    if (other.isSetLogo()) {
      this.logo = other.logo;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    this.areaId = other.areaId;
    this.merchantStatus = other.merchantStatus;
    this.isEnable = other.isEnable;
    if (other.isSetDisableStatus()) {
      this.disableStatus = other.disableStatus;
    }
    this.isTop = other.isTop;
    if (other.isSetIntroduce()) {
      this.introduce = other.introduce;
    }
    if (other.isSetLicense()) {
      this.license = other.license;
    }
    if (other.isSetTaxReg()) {
      this.taxReg = other.taxReg;
    }
    this.contractBegintime = other.contractBegintime;
    this.contractEndtime = other.contractEndtime;
    if (other.isSetContractStaff()) {
      this.contractStaff = other.contractStaff;
    }
    if (other.isSetAuditStartOrgCode()) {
      this.auditStartOrgCode = other.auditStartOrgCode;
    }
    if (other.isSetAuditEndOrgCode()) {
      this.auditEndOrgCode = other.auditEndOrgCode;
    }
    if (other.isSetAuditState()) {
      this.auditState = other.auditState;
    }
    if (other.isSetAuditOrgCode()) {
      this.auditOrgCode = other.auditOrgCode;
    }
    this.needReview = other.needReview;
    if (other.isSetAuditStage()) {
      this.auditStage = other.auditStage;
    }
    this.auditTime = other.auditTime;
    if (other.isSetAuditComment()) {
      this.auditComment = other.auditComment;
    }
    if (other.isSetAuditStaff()) {
      this.auditStaff = other.auditStaff;
    }
    if (other.isSetReviewStaff()) {
      this.reviewStaff = other.reviewStaff;
    }
    if (other.isSetContactName()) {
      this.contactName = other.contactName;
    }
    if (other.isSetContactPhone()) {
      this.contactPhone = other.contactPhone;
    }
    if (other.isSetContactEmail()) {
      this.contactEmail = other.contactEmail;
    }
    if (other.isSetLegalName()) {
      this.legalName = other.legalName;
    }
    this.legalCredentType = other.legalCredentType;
    if (other.isSetLegalCredentNo()) {
      this.legalCredentNo = other.legalCredentNo;
    }
    if (other.isSetComplaintPhone()) {
      this.complaintPhone = other.complaintPhone;
    }
    if (other.isSetCategoryInfoList()) {
      List<Long> __this__categoryInfoList = new ArrayList<Long>(other.categoryInfoList);
      this.categoryInfoList = __this__categoryInfoList;
    }
    if (other.isSetTypeInfoList()) {
      List<Long> __this__typeInfoList = new ArrayList<Long>(other.typeInfoList);
      this.typeInfoList = __this__typeInfoList;
    }
    this.startCreateTime = other.startCreateTime;
    this.endCreateTime = other.endCreateTime;
    this.startAuditTime = other.startAuditTime;
    this.endAuditTime = other.endAuditTime;
    this.startContractBegintime = other.startContractBegintime;
    this.endContractBegintime = other.endContractBegintime;
    this.startContractEndtime = other.startContractEndtime;
    this.endContractEndtime = other.endContractEndtime;
    if (other.isSetUserOrgCode()) {
      this.userOrgCode = other.userOrgCode;
    }
    if (other.isSetCompanyCredential()) {
      this.companyCredential = other.companyCredential;
    }
    if (other.isSetEditAuditState()) {
      this.editAuditState = other.editAuditState;
    }
    this.operateTime = other.operateTime;
    if (other.isSetOperateUser()) {
      this.operateUser = other.operateUser;
    }
    this.isOutsource = other.isOutsource;
    this.companyId = other.companyId;
  }

  public MerchantVo deepCopy() {
    return new MerchantVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.clientId = null;
    this.merchantId = null;
    this.proOrgCode = null;
    this.cityOrgCode = null;
    this.countyOrgCode = null;
    this.orgCode = null;
    this.merchantName = null;
    this.merchantFullname = null;
    this.logo = null;
    this.address = null;
    this.phone = null;
    setAreaIdIsSet(false);
    this.areaId = 0;
    setMerchantStatusIsSet(false);
    this.merchantStatus = false;
    setIsEnableIsSet(false);
    this.isEnable = false;
    this.disableStatus = null;
    setIsTopIsSet(false);
    this.isTop = false;
    this.introduce = null;
    this.license = null;
    this.taxReg = null;
    setContractBegintimeIsSet(false);
    this.contractBegintime = 0;
    setContractEndtimeIsSet(false);
    this.contractEndtime = 0;
    this.contractStaff = null;
    this.auditStartOrgCode = null;
    this.auditEndOrgCode = null;
    this.auditState = null;
    this.auditOrgCode = null;
    setNeedReviewIsSet(false);
    this.needReview = false;
    this.auditStage = null;
    setAuditTimeIsSet(false);
    this.auditTime = 0;
    this.auditComment = null;
    this.auditStaff = null;
    this.reviewStaff = null;
    this.contactName = null;
    this.contactPhone = null;
    this.contactEmail = null;
    this.legalName = null;
    setLegalCredentTypeIsSet(false);
    this.legalCredentType = 0;
    this.legalCredentNo = null;
    this.complaintPhone = null;
    this.categoryInfoList = null;
    this.typeInfoList = null;
    setStartCreateTimeIsSet(false);
    this.startCreateTime = 0;
    setEndCreateTimeIsSet(false);
    this.endCreateTime = 0;
    setStartAuditTimeIsSet(false);
    this.startAuditTime = 0;
    setEndAuditTimeIsSet(false);
    this.endAuditTime = 0;
    setStartContractBegintimeIsSet(false);
    this.startContractBegintime = 0;
    setEndContractBegintimeIsSet(false);
    this.endContractBegintime = 0;
    setStartContractEndtimeIsSet(false);
    this.startContractEndtime = 0;
    setEndContractEndtimeIsSet(false);
    this.endContractEndtime = 0;
    this.userOrgCode = null;
    this.companyCredential = null;
    this.editAuditState = null;
    setOperateTimeIsSet(false);
    this.operateTime = 0;
    this.operateUser = null;
    setIsOutsourceIsSet(false);
    this.isOutsource = false;
    setCompanyIdIsSet(false);
    this.companyId = 0;
  }

  /**
   * 主键ID
   */
  public long getId() {
    return this.id;
  }

  /**
   * 主键ID
   */
  public MerchantVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public MerchantVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public MerchantVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public MerchantVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 被发展组织机构代码的省级机构
   */
  public String getProOrgCode() {
    return this.proOrgCode;
  }

  /**
   * 被发展组织机构代码的省级机构
   */
  public MerchantVo setProOrgCode(String proOrgCode) {
    this.proOrgCode = proOrgCode;
    return this;
  }

  public void unsetProOrgCode() {
    this.proOrgCode = null;
  }

  /** Returns true if field proOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetProOrgCode() {
    return this.proOrgCode != null;
  }

  public void setProOrgCodeIsSet(boolean value) {
    if (!value) {
      this.proOrgCode = null;
    }
  }

  /**
   * 被发展组织机构代码的市级机构
   */
  public String getCityOrgCode() {
    return this.cityOrgCode;
  }

  /**
   * 被发展组织机构代码的市级机构
   */
  public MerchantVo setCityOrgCode(String cityOrgCode) {
    this.cityOrgCode = cityOrgCode;
    return this;
  }

  public void unsetCityOrgCode() {
    this.cityOrgCode = null;
  }

  /** Returns true if field cityOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCityOrgCode() {
    return this.cityOrgCode != null;
  }

  public void setCityOrgCodeIsSet(boolean value) {
    if (!value) {
      this.cityOrgCode = null;
    }
  }

  /**
   * 被发展组织机构代码的区级机构
   */
  public String getCountyOrgCode() {
    return this.countyOrgCode;
  }

  /**
   * 被发展组织机构代码的区级机构
   */
  public MerchantVo setCountyOrgCode(String countyOrgCode) {
    this.countyOrgCode = countyOrgCode;
    return this;
  }

  public void unsetCountyOrgCode() {
    this.countyOrgCode = null;
  }

  /** Returns true if field countyOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCountyOrgCode() {
    return this.countyOrgCode != null;
  }

  public void setCountyOrgCodeIsSet(boolean value) {
    if (!value) {
      this.countyOrgCode = null;
    }
  }

  /**
   * 被发展组织机构代码
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 被发展组织机构代码
   */
  public MerchantVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 商户名
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名
   */
  public MerchantVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 商户全名
   */
  public String getMerchantFullname() {
    return this.merchantFullname;
  }

  /**
   * 商户全名
   */
  public MerchantVo setMerchantFullname(String merchantFullname) {
    this.merchantFullname = merchantFullname;
    return this;
  }

  public void unsetMerchantFullname() {
    this.merchantFullname = null;
  }

  /** Returns true if field merchantFullname is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantFullname() {
    return this.merchantFullname != null;
  }

  public void setMerchantFullnameIsSet(boolean value) {
    if (!value) {
      this.merchantFullname = null;
    }
  }

  /**
   * 商户商标
   */
  public String getLogo() {
    return this.logo;
  }

  /**
   * 商户商标
   */
  public MerchantVo setLogo(String logo) {
    this.logo = logo;
    return this;
  }

  public void unsetLogo() {
    this.logo = null;
  }

  /** Returns true if field logo is set (has been assigned a value) and false otherwise */
  public boolean isSetLogo() {
    return this.logo != null;
  }

  public void setLogoIsSet(boolean value) {
    if (!value) {
      this.logo = null;
    }
  }

  /**
   * 商户地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 商户地址
   */
  public MerchantVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 商户电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 商户电话
   */
  public MerchantVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 所在地区
   */
  public long getAreaId() {
    return this.areaId;
  }

  /**
   * 所在地区
   */
  public MerchantVo setAreaId(long areaId) {
    this.areaId = areaId;
    setAreaIdIsSet(true);
    return this;
  }

  public void unsetAreaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return EncodingUtils.testBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  public void setAreaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREAID_ISSET_ID, value);
  }

  /**
   * 是否银⾏行机构对应的商户
   */
  public boolean isMerchantStatus() {
    return this.merchantStatus;
  }

  /**
   * 是否银⾏行机构对应的商户
   */
  public MerchantVo setMerchantStatus(boolean merchantStatus) {
    this.merchantStatus = merchantStatus;
    setMerchantStatusIsSet(true);
    return this;
  }

  public void unsetMerchantStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MERCHANTSTATUS_ISSET_ID);
  }

  /** Returns true if field merchantStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __MERCHANTSTATUS_ISSET_ID);
  }

  public void setMerchantStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MERCHANTSTATUS_ISSET_ID, value);
  }

  /**
   * 是否有效商户
   */
  public boolean isIsEnable() {
    return this.isEnable;
  }

  /**
   * 是否有效商户
   */
  public MerchantVo setIsEnable(boolean isEnable) {
    this.isEnable = isEnable;
    setIsEnableIsSet(true);
    return this;
  }

  public void unsetIsEnable() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  /** Returns true if field isEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnable() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  public void setIsEnableIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLE_ISSET_ID, value);
  }

  /**
   * 无效状态,0正常;1禁用;2解约
   */
  public String getDisableStatus() {
    return this.disableStatus;
  }

  /**
   * 无效状态,0正常;1禁用;2解约
   */
  public MerchantVo setDisableStatus(String disableStatus) {
    this.disableStatus = disableStatus;
    return this;
  }

  public void unsetDisableStatus() {
    this.disableStatus = null;
  }

  /** Returns true if field disableStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetDisableStatus() {
    return this.disableStatus != null;
  }

  public void setDisableStatusIsSet(boolean value) {
    if (!value) {
      this.disableStatus = null;
    }
  }

  /**
   * 是否置顶
   */
  public boolean isIsTop() {
    return this.isTop;
  }

  /**
   * 是否置顶
   */
  public MerchantVo setIsTop(boolean isTop) {
    this.isTop = isTop;
    setIsTopIsSet(true);
    return this;
  }

  public void unsetIsTop() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISTOP_ISSET_ID);
  }

  /** Returns true if field isTop is set (has been assigned a value) and false otherwise */
  public boolean isSetIsTop() {
    return EncodingUtils.testBit(__isset_bitfield, __ISTOP_ISSET_ID);
  }

  public void setIsTopIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISTOP_ISSET_ID, value);
  }

  /**
   * 简介
   */
  public String getIntroduce() {
    return this.introduce;
  }

  /**
   * 简介
   */
  public MerchantVo setIntroduce(String introduce) {
    this.introduce = introduce;
    return this;
  }

  public void unsetIntroduce() {
    this.introduce = null;
  }

  /** Returns true if field introduce is set (has been assigned a value) and false otherwise */
  public boolean isSetIntroduce() {
    return this.introduce != null;
  }

  public void setIntroduceIsSet(boolean value) {
    if (!value) {
      this.introduce = null;
    }
  }

  /**
   * 营业执照号码
   */
  public String getLicense() {
    return this.license;
  }

  /**
   * 营业执照号码
   */
  public MerchantVo setLicense(String license) {
    this.license = license;
    return this;
  }

  public void unsetLicense() {
    this.license = null;
  }

  /** Returns true if field license is set (has been assigned a value) and false otherwise */
  public boolean isSetLicense() {
    return this.license != null;
  }

  public void setLicenseIsSet(boolean value) {
    if (!value) {
      this.license = null;
    }
  }

  /**
   * 税务登记证
   */
  public String getTaxReg() {
    return this.taxReg;
  }

  /**
   * 税务登记证
   */
  public MerchantVo setTaxReg(String taxReg) {
    this.taxReg = taxReg;
    return this;
  }

  public void unsetTaxReg() {
    this.taxReg = null;
  }

  /** Returns true if field taxReg is set (has been assigned a value) and false otherwise */
  public boolean isSetTaxReg() {
    return this.taxReg != null;
  }

  public void setTaxRegIsSet(boolean value) {
    if (!value) {
      this.taxReg = null;
    }
  }

  /**
   * 签约时间
   */
  public long getContractBegintime() {
    return this.contractBegintime;
  }

  /**
   * 签约时间
   */
  public MerchantVo setContractBegintime(long contractBegintime) {
    this.contractBegintime = contractBegintime;
    setContractBegintimeIsSet(true);
    return this;
  }

  public void unsetContractBegintime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONTRACTBEGINTIME_ISSET_ID);
  }

  /** Returns true if field contractBegintime is set (has been assigned a value) and false otherwise */
  public boolean isSetContractBegintime() {
    return EncodingUtils.testBit(__isset_bitfield, __CONTRACTBEGINTIME_ISSET_ID);
  }

  public void setContractBegintimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONTRACTBEGINTIME_ISSET_ID, value);
  }

  /**
   * 签约到期时间
   */
  public long getContractEndtime() {
    return this.contractEndtime;
  }

  /**
   * 签约到期时间
   */
  public MerchantVo setContractEndtime(long contractEndtime) {
    this.contractEndtime = contractEndtime;
    setContractEndtimeIsSet(true);
    return this;
  }

  public void unsetContractEndtime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONTRACTENDTIME_ISSET_ID);
  }

  /** Returns true if field contractEndtime is set (has been assigned a value) and false otherwise */
  public boolean isSetContractEndtime() {
    return EncodingUtils.testBit(__isset_bitfield, __CONTRACTENDTIME_ISSET_ID);
  }

  public void setContractEndtimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONTRACTENDTIME_ISSET_ID, value);
  }

  /**
   * 签约人员
   */
  public String getContractStaff() {
    return this.contractStaff;
  }

  /**
   * 签约人员
   */
  public MerchantVo setContractStaff(String contractStaff) {
    this.contractStaff = contractStaff;
    return this;
  }

  public void unsetContractStaff() {
    this.contractStaff = null;
  }

  /** Returns true if field contractStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetContractStaff() {
    return this.contractStaff != null;
  }

  public void setContractStaffIsSet(boolean value) {
    if (!value) {
      this.contractStaff = null;
    }
  }

  /**
   * 起始审核机构
   */
  public String getAuditStartOrgCode() {
    return this.auditStartOrgCode;
  }

  /**
   * 起始审核机构
   */
  public MerchantVo setAuditStartOrgCode(String auditStartOrgCode) {
    this.auditStartOrgCode = auditStartOrgCode;
    return this;
  }

  public void unsetAuditStartOrgCode() {
    this.auditStartOrgCode = null;
  }

  /** Returns true if field auditStartOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStartOrgCode() {
    return this.auditStartOrgCode != null;
  }

  public void setAuditStartOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditStartOrgCode = null;
    }
  }

  /**
   * 最终审核机构
   */
  public String getAuditEndOrgCode() {
    return this.auditEndOrgCode;
  }

  /**
   * 最终审核机构
   */
  public MerchantVo setAuditEndOrgCode(String auditEndOrgCode) {
    this.auditEndOrgCode = auditEndOrgCode;
    return this;
  }

  public void unsetAuditEndOrgCode() {
    this.auditEndOrgCode = null;
  }

  /** Returns true if field auditEndOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditEndOrgCode() {
    return this.auditEndOrgCode != null;
  }

  public void setAuditEndOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditEndOrgCode = null;
    }
  }

  /**
   * 审核状态
   */
  public String getAuditState() {
    return this.auditState;
  }

  /**
   * 审核状态
   */
  public MerchantVo setAuditState(String auditState) {
    this.auditState = auditState;
    return this;
  }

  public void unsetAuditState() {
    this.auditState = null;
  }

  /** Returns true if field auditState is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditState() {
    return this.auditState != null;
  }

  public void setAuditStateIsSet(boolean value) {
    if (!value) {
      this.auditState = null;
    }
  }

  /**
   * 待审核机构编号(完成置0)
   */
  public String getAuditOrgCode() {
    return this.auditOrgCode;
  }

  /**
   * 待审核机构编号(完成置0)
   */
  public MerchantVo setAuditOrgCode(String auditOrgCode) {
    this.auditOrgCode = auditOrgCode;
    return this;
  }

  public void unsetAuditOrgCode() {
    this.auditOrgCode = null;
  }

  /** Returns true if field auditOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditOrgCode() {
    return this.auditOrgCode != null;
  }

  public void setAuditOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditOrgCode = null;
    }
  }

  /**
   * 是否需要复核(0/1) - 已删除
   */
  public boolean isNeedReview() {
    return this.needReview;
  }

  /**
   * 是否需要复核(0/1) - 已删除
   */
  public MerchantVo setNeedReview(boolean needReview) {
    this.needReview = needReview;
    setNeedReviewIsSet(true);
    return this;
  }

  public void unsetNeedReview() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NEEDREVIEW_ISSET_ID);
  }

  /** Returns true if field needReview is set (has been assigned a value) and false otherwise */
  public boolean isSetNeedReview() {
    return EncodingUtils.testBit(__isset_bitfield, __NEEDREVIEW_ISSET_ID);
  }

  public void setNeedReviewIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NEEDREVIEW_ISSET_ID, value);
  }

  /**
   * 审核步骤(0-初审/1-复审)
   */
  public String getAuditStage() {
    return this.auditStage;
  }

  /**
   * 审核步骤(0-初审/1-复审)
   */
  public MerchantVo setAuditStage(String auditStage) {
    this.auditStage = auditStage;
    return this;
  }

  public void unsetAuditStage() {
    this.auditStage = null;
  }

  /** Returns true if field auditStage is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStage() {
    return this.auditStage != null;
  }

  public void setAuditStageIsSet(boolean value) {
    if (!value) {
      this.auditStage = null;
    }
  }

  /**
   * 审核时间
   */
  public long getAuditTime() {
    return this.auditTime;
  }

  /**
   * 审核时间
   */
  public MerchantVo setAuditTime(long auditTime) {
    this.auditTime = auditTime;
    setAuditTimeIsSet(true);
    return this;
  }

  public void unsetAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  /** Returns true if field auditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  public void setAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AUDITTIME_ISSET_ID, value);
  }

  /**
   * 审核备注
   */
  public String getAuditComment() {
    return this.auditComment;
  }

  /**
   * 审核备注
   */
  public MerchantVo setAuditComment(String auditComment) {
    this.auditComment = auditComment;
    return this;
  }

  public void unsetAuditComment() {
    this.auditComment = null;
  }

  /** Returns true if field auditComment is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditComment() {
    return this.auditComment != null;
  }

  public void setAuditCommentIsSet(boolean value) {
    if (!value) {
      this.auditComment = null;
    }
  }

  /**
   * 审核人员
   */
  public String getAuditStaff() {
    return this.auditStaff;
  }

  /**
   * 审核人员
   */
  public MerchantVo setAuditStaff(String auditStaff) {
    this.auditStaff = auditStaff;
    return this;
  }

  public void unsetAuditStaff() {
    this.auditStaff = null;
  }

  /** Returns true if field auditStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStaff() {
    return this.auditStaff != null;
  }

  public void setAuditStaffIsSet(boolean value) {
    if (!value) {
      this.auditStaff = null;
    }
  }

  /**
   * 复核人员
   */
  public String getReviewStaff() {
    return this.reviewStaff;
  }

  /**
   * 复核人员
   */
  public MerchantVo setReviewStaff(String reviewStaff) {
    this.reviewStaff = reviewStaff;
    return this;
  }

  public void unsetReviewStaff() {
    this.reviewStaff = null;
  }

  /** Returns true if field reviewStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewStaff() {
    return this.reviewStaff != null;
  }

  public void setReviewStaffIsSet(boolean value) {
    if (!value) {
      this.reviewStaff = null;
    }
  }

  /**
   * 联系人姓名
   */
  public String getContactName() {
    return this.contactName;
  }

  /**
   * 联系人姓名
   */
  public MerchantVo setContactName(String contactName) {
    this.contactName = contactName;
    return this;
  }

  public void unsetContactName() {
    this.contactName = null;
  }

  /** Returns true if field contactName is set (has been assigned a value) and false otherwise */
  public boolean isSetContactName() {
    return this.contactName != null;
  }

  public void setContactNameIsSet(boolean value) {
    if (!value) {
      this.contactName = null;
    }
  }

  /**
   * 联系人电话
   */
  public String getContactPhone() {
    return this.contactPhone;
  }

  /**
   * 联系人电话
   */
  public MerchantVo setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
    return this;
  }

  public void unsetContactPhone() {
    this.contactPhone = null;
  }

  /** Returns true if field contactPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetContactPhone() {
    return this.contactPhone != null;
  }

  public void setContactPhoneIsSet(boolean value) {
    if (!value) {
      this.contactPhone = null;
    }
  }

  /**
   * 联系人邮箱
   */
  public String getContactEmail() {
    return this.contactEmail;
  }

  /**
   * 联系人邮箱
   */
  public MerchantVo setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
    return this;
  }

  public void unsetContactEmail() {
    this.contactEmail = null;
  }

  /** Returns true if field contactEmail is set (has been assigned a value) and false otherwise */
  public boolean isSetContactEmail() {
    return this.contactEmail != null;
  }

  public void setContactEmailIsSet(boolean value) {
    if (!value) {
      this.contactEmail = null;
    }
  }

  /**
   * 法人姓名
   */
  public String getLegalName() {
    return this.legalName;
  }

  /**
   * 法人姓名
   */
  public MerchantVo setLegalName(String legalName) {
    this.legalName = legalName;
    return this;
  }

  public void unsetLegalName() {
    this.legalName = null;
  }

  /** Returns true if field legalName is set (has been assigned a value) and false otherwise */
  public boolean isSetLegalName() {
    return this.legalName != null;
  }

  public void setLegalNameIsSet(boolean value) {
    if (!value) {
      this.legalName = null;
    }
  }

  /**
   * 法人证件号类型
   */
  public int getLegalCredentType() {
    return this.legalCredentType;
  }

  /**
   * 法人证件号类型
   */
  public MerchantVo setLegalCredentType(int legalCredentType) {
    this.legalCredentType = legalCredentType;
    setLegalCredentTypeIsSet(true);
    return this;
  }

  public void unsetLegalCredentType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LEGALCREDENTTYPE_ISSET_ID);
  }

  /** Returns true if field legalCredentType is set (has been assigned a value) and false otherwise */
  public boolean isSetLegalCredentType() {
    return EncodingUtils.testBit(__isset_bitfield, __LEGALCREDENTTYPE_ISSET_ID);
  }

  public void setLegalCredentTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LEGALCREDENTTYPE_ISSET_ID, value);
  }

  /**
   * 法人证件号
   */
  public String getLegalCredentNo() {
    return this.legalCredentNo;
  }

  /**
   * 法人证件号
   */
  public MerchantVo setLegalCredentNo(String legalCredentNo) {
    this.legalCredentNo = legalCredentNo;
    return this;
  }

  public void unsetLegalCredentNo() {
    this.legalCredentNo = null;
  }

  /** Returns true if field legalCredentNo is set (has been assigned a value) and false otherwise */
  public boolean isSetLegalCredentNo() {
    return this.legalCredentNo != null;
  }

  public void setLegalCredentNoIsSet(boolean value) {
    if (!value) {
      this.legalCredentNo = null;
    }
  }

  /**
   * 投诉电话
   */
  public String getComplaintPhone() {
    return this.complaintPhone;
  }

  /**
   * 投诉电话
   */
  public MerchantVo setComplaintPhone(String complaintPhone) {
    this.complaintPhone = complaintPhone;
    return this;
  }

  public void unsetComplaintPhone() {
    this.complaintPhone = null;
  }

  /** Returns true if field complaintPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetComplaintPhone() {
    return this.complaintPhone != null;
  }

  public void setComplaintPhoneIsSet(boolean value) {
    if (!value) {
      this.complaintPhone = null;
    }
  }

  public int getCategoryInfoListSize() {
    return (this.categoryInfoList == null) ? 0 : this.categoryInfoList.size();
  }

  public java.util.Iterator<Long> getCategoryInfoListIterator() {
    return (this.categoryInfoList == null) ? null : this.categoryInfoList.iterator();
  }

  public void addToCategoryInfoList(long elem) {
    if (this.categoryInfoList == null) {
      this.categoryInfoList = new ArrayList<Long>();
    }
    this.categoryInfoList.add(elem);
  }

  /**
   * 分类id列表(查询使用 - 餐饮、休闲、美容、汽车等)
   */
  public List<Long> getCategoryInfoList() {
    return this.categoryInfoList;
  }

  /**
   * 分类id列表(查询使用 - 餐饮、休闲、美容、汽车等)
   */
  public MerchantVo setCategoryInfoList(List<Long> categoryInfoList) {
    this.categoryInfoList = categoryInfoList;
    return this;
  }

  public void unsetCategoryInfoList() {
    this.categoryInfoList = null;
  }

  /** Returns true if field categoryInfoList is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryInfoList() {
    return this.categoryInfoList != null;
  }

  public void setCategoryInfoListIsSet(boolean value) {
    if (!value) {
      this.categoryInfoList = null;
    }
  }

  public int getTypeInfoListSize() {
    return (this.typeInfoList == null) ? 0 : this.typeInfoList.size();
  }

  public java.util.Iterator<Long> getTypeInfoListIterator() {
    return (this.typeInfoList == null) ? null : this.typeInfoList.iterator();
  }

  public void addToTypeInfoList(long elem) {
    if (this.typeInfoList == null) {
      this.typeInfoList = new ArrayList<Long>();
    }
    this.typeInfoList.add(elem);
  }

  /**
   * 类型id列表(查询使用 - 团购、面对面、名优特惠、等)
   */
  public List<Long> getTypeInfoList() {
    return this.typeInfoList;
  }

  /**
   * 类型id列表(查询使用 - 团购、面对面、名优特惠、等)
   */
  public MerchantVo setTypeInfoList(List<Long> typeInfoList) {
    this.typeInfoList = typeInfoList;
    return this;
  }

  public void unsetTypeInfoList() {
    this.typeInfoList = null;
  }

  /** Returns true if field typeInfoList is set (has been assigned a value) and false otherwise */
  public boolean isSetTypeInfoList() {
    return this.typeInfoList != null;
  }

  public void setTypeInfoListIsSet(boolean value) {
    if (!value) {
      this.typeInfoList = null;
    }
  }

  /**
   * 开始创建时间(查询条件使用)
   */
  public long getStartCreateTime() {
    return this.startCreateTime;
  }

  /**
   * 开始创建时间(查询条件使用)
   */
  public MerchantVo setStartCreateTime(long startCreateTime) {
    this.startCreateTime = startCreateTime;
    setStartCreateTimeIsSet(true);
    return this;
  }

  public void unsetStartCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID);
  }

  /** Returns true if field startCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID);
  }

  public void setStartCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID, value);
  }

  /**
   * 结束创建时间(查询条件使用)
   */
  public long getEndCreateTime() {
    return this.endCreateTime;
  }

  /**
   * 结束创建时间(查询条件使用)
   */
  public MerchantVo setEndCreateTime(long endCreateTime) {
    this.endCreateTime = endCreateTime;
    setEndCreateTimeIsSet(true);
    return this;
  }

  public void unsetEndCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID);
  }

  /** Returns true if field endCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID);
  }

  public void setEndCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID, value);
  }

  /**
   * 开始审核时间(查询条件使用)
   */
  public long getStartAuditTime() {
    return this.startAuditTime;
  }

  /**
   * 开始审核时间(查询条件使用)
   */
  public MerchantVo setStartAuditTime(long startAuditTime) {
    this.startAuditTime = startAuditTime;
    setStartAuditTimeIsSet(true);
    return this;
  }

  public void unsetStartAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTAUDITTIME_ISSET_ID);
  }

  /** Returns true if field startAuditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTAUDITTIME_ISSET_ID);
  }

  public void setStartAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTAUDITTIME_ISSET_ID, value);
  }

  /**
   * 结束审核时间(查询条件使用)
   */
  public long getEndAuditTime() {
    return this.endAuditTime;
  }

  /**
   * 结束审核时间(查询条件使用)
   */
  public MerchantVo setEndAuditTime(long endAuditTime) {
    this.endAuditTime = endAuditTime;
    setEndAuditTimeIsSet(true);
    return this;
  }

  public void unsetEndAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDAUDITTIME_ISSET_ID);
  }

  /** Returns true if field endAuditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDAUDITTIME_ISSET_ID);
  }

  public void setEndAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDAUDITTIME_ISSET_ID, value);
  }

  /**
   * 开始签约时间(查询条件使用)
   */
  public long getStartContractBegintime() {
    return this.startContractBegintime;
  }

  /**
   * 开始签约时间(查询条件使用)
   */
  public MerchantVo setStartContractBegintime(long startContractBegintime) {
    this.startContractBegintime = startContractBegintime;
    setStartContractBegintimeIsSet(true);
    return this;
  }

  public void unsetStartContractBegintime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTCONTRACTBEGINTIME_ISSET_ID);
  }

  /** Returns true if field startContractBegintime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartContractBegintime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTCONTRACTBEGINTIME_ISSET_ID);
  }

  public void setStartContractBegintimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTCONTRACTBEGINTIME_ISSET_ID, value);
  }

  /**
   * 开始签约时间(查询条件使用)
   */
  public long getEndContractBegintime() {
    return this.endContractBegintime;
  }

  /**
   * 开始签约时间(查询条件使用)
   */
  public MerchantVo setEndContractBegintime(long endContractBegintime) {
    this.endContractBegintime = endContractBegintime;
    setEndContractBegintimeIsSet(true);
    return this;
  }

  public void unsetEndContractBegintime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDCONTRACTBEGINTIME_ISSET_ID);
  }

  /** Returns true if field endContractBegintime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndContractBegintime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDCONTRACTBEGINTIME_ISSET_ID);
  }

  public void setEndContractBegintimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDCONTRACTBEGINTIME_ISSET_ID, value);
  }

  /**
   * 开始签约到期时间(查询条件使用)
   */
  public long getStartContractEndtime() {
    return this.startContractEndtime;
  }

  /**
   * 开始签约到期时间(查询条件使用)
   */
  public MerchantVo setStartContractEndtime(long startContractEndtime) {
    this.startContractEndtime = startContractEndtime;
    setStartContractEndtimeIsSet(true);
    return this;
  }

  public void unsetStartContractEndtime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTCONTRACTENDTIME_ISSET_ID);
  }

  /** Returns true if field startContractEndtime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartContractEndtime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTCONTRACTENDTIME_ISSET_ID);
  }

  public void setStartContractEndtimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTCONTRACTENDTIME_ISSET_ID, value);
  }

  /**
   * 结束签约到期时间(查询条件使用)
   */
  public long getEndContractEndtime() {
    return this.endContractEndtime;
  }

  /**
   * 结束签约到期时间(查询条件使用)
   */
  public MerchantVo setEndContractEndtime(long endContractEndtime) {
    this.endContractEndtime = endContractEndtime;
    setEndContractEndtimeIsSet(true);
    return this;
  }

  public void unsetEndContractEndtime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDCONTRACTENDTIME_ISSET_ID);
  }

  /** Returns true if field endContractEndtime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndContractEndtime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDCONTRACTENDTIME_ISSET_ID);
  }

  public void setEndContractEndtimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDCONTRACTENDTIME_ISSET_ID, value);
  }

  /**
   * 用户录入机构
   */
  public String getUserOrgCode() {
    return this.userOrgCode;
  }

  /**
   * 用户录入机构
   */
  public MerchantVo setUserOrgCode(String userOrgCode) {
    this.userOrgCode = userOrgCode;
    return this;
  }

  public void unsetUserOrgCode() {
    this.userOrgCode = null;
  }

  /** Returns true if field userOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetUserOrgCode() {
    return this.userOrgCode != null;
  }

  public void setUserOrgCodeIsSet(boolean value) {
    if (!value) {
      this.userOrgCode = null;
    }
  }

  /**
   * 商户组织机构代码证
   */
  public String getCompanyCredential() {
    return this.companyCredential;
  }

  /**
   * 商户组织机构代码证
   */
  public MerchantVo setCompanyCredential(String companyCredential) {
    this.companyCredential = companyCredential;
    return this;
  }

  public void unsetCompanyCredential() {
    this.companyCredential = null;
  }

  /** Returns true if field companyCredential is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyCredential() {
    return this.companyCredential != null;
  }

  public void setCompanyCredentialIsSet(boolean value) {
    if (!value) {
      this.companyCredential = null;
    }
  }

  /**
   * 0-更新审核中1-正常(编辑审核通过)2-审核未通过
   */
  public String getEditAuditState() {
    return this.editAuditState;
  }

  /**
   * 0-更新审核中1-正常(编辑审核通过)2-审核未通过
   */
  public MerchantVo setEditAuditState(String editAuditState) {
    this.editAuditState = editAuditState;
    return this;
  }

  public void unsetEditAuditState() {
    this.editAuditState = null;
  }

  /** Returns true if field editAuditState is set (has been assigned a value) and false otherwise */
  public boolean isSetEditAuditState() {
    return this.editAuditState != null;
  }

  public void setEditAuditStateIsSet(boolean value) {
    if (!value) {
      this.editAuditState = null;
    }
  }

  /**
   * 操作时间
   */
  public long getOperateTime() {
    return this.operateTime;
  }

  /**
   * 操作时间
   */
  public MerchantVo setOperateTime(long operateTime) {
    this.operateTime = operateTime;
    setOperateTimeIsSet(true);
    return this;
  }

  public void unsetOperateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OPERATETIME_ISSET_ID);
  }

  /** Returns true if field operateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetOperateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __OPERATETIME_ISSET_ID);
  }

  public void setOperateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OPERATETIME_ISSET_ID, value);
  }

  /**
   * 操作人 *
   */
  public String getOperateUser() {
    return this.operateUser;
  }

  /**
   * 操作人 *
   */
  public MerchantVo setOperateUser(String operateUser) {
    this.operateUser = operateUser;
    return this;
  }

  public void unsetOperateUser() {
    this.operateUser = null;
  }

  /** Returns true if field operateUser is set (has been assigned a value) and false otherwise */
  public boolean isSetOperateUser() {
    return this.operateUser != null;
  }

  public void setOperateUserIsSet(boolean value) {
    if (!value) {
      this.operateUser = null;
    }
  }

  /**
   * 是否外包[false=否,true=是]
   */
  public boolean isIsOutsource() {
    return this.isOutsource;
  }

  /**
   * 是否外包[false=否,true=是]
   */
  public MerchantVo setIsOutsource(boolean isOutsource) {
    this.isOutsource = isOutsource;
    setIsOutsourceIsSet(true);
    return this;
  }

  public void unsetIsOutsource() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISOUTSOURCE_ISSET_ID);
  }

  /** Returns true if field isOutsource is set (has been assigned a value) and false otherwise */
  public boolean isSetIsOutsource() {
    return EncodingUtils.testBit(__isset_bitfield, __ISOUTSOURCE_ISSET_ID);
  }

  public void setIsOutsourceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISOUTSOURCE_ISSET_ID, value);
  }

  /**
   * 外包公司id
   */
  public long getCompanyId() {
    return this.companyId;
  }

  /**
   * 外包公司id
   */
  public MerchantVo setCompanyId(long companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case PRO_ORG_CODE:
      if (value == null) {
        unsetProOrgCode();
      } else {
        setProOrgCode((String)value);
      }
      break;

    case CITY_ORG_CODE:
      if (value == null) {
        unsetCityOrgCode();
      } else {
        setCityOrgCode((String)value);
      }
      break;

    case COUNTY_ORG_CODE:
      if (value == null) {
        unsetCountyOrgCode();
      } else {
        setCountyOrgCode((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case MERCHANT_FULLNAME:
      if (value == null) {
        unsetMerchantFullname();
      } else {
        setMerchantFullname((String)value);
      }
      break;

    case LOGO:
      if (value == null) {
        unsetLogo();
      } else {
        setLogo((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((Long)value);
      }
      break;

    case MERCHANT_STATUS:
      if (value == null) {
        unsetMerchantStatus();
      } else {
        setMerchantStatus((Boolean)value);
      }
      break;

    case IS_ENABLE:
      if (value == null) {
        unsetIsEnable();
      } else {
        setIsEnable((Boolean)value);
      }
      break;

    case DISABLE_STATUS:
      if (value == null) {
        unsetDisableStatus();
      } else {
        setDisableStatus((String)value);
      }
      break;

    case IS_TOP:
      if (value == null) {
        unsetIsTop();
      } else {
        setIsTop((Boolean)value);
      }
      break;

    case INTRODUCE:
      if (value == null) {
        unsetIntroduce();
      } else {
        setIntroduce((String)value);
      }
      break;

    case LICENSE:
      if (value == null) {
        unsetLicense();
      } else {
        setLicense((String)value);
      }
      break;

    case TAX_REG:
      if (value == null) {
        unsetTaxReg();
      } else {
        setTaxReg((String)value);
      }
      break;

    case CONTRACT_BEGINTIME:
      if (value == null) {
        unsetContractBegintime();
      } else {
        setContractBegintime((Long)value);
      }
      break;

    case CONTRACT_ENDTIME:
      if (value == null) {
        unsetContractEndtime();
      } else {
        setContractEndtime((Long)value);
      }
      break;

    case CONTRACT_STAFF:
      if (value == null) {
        unsetContractStaff();
      } else {
        setContractStaff((String)value);
      }
      break;

    case AUDIT_START_ORG_CODE:
      if (value == null) {
        unsetAuditStartOrgCode();
      } else {
        setAuditStartOrgCode((String)value);
      }
      break;

    case AUDIT_END_ORG_CODE:
      if (value == null) {
        unsetAuditEndOrgCode();
      } else {
        setAuditEndOrgCode((String)value);
      }
      break;

    case AUDIT_STATE:
      if (value == null) {
        unsetAuditState();
      } else {
        setAuditState((String)value);
      }
      break;

    case AUDIT_ORG_CODE:
      if (value == null) {
        unsetAuditOrgCode();
      } else {
        setAuditOrgCode((String)value);
      }
      break;

    case NEED_REVIEW:
      if (value == null) {
        unsetNeedReview();
      } else {
        setNeedReview((Boolean)value);
      }
      break;

    case AUDIT_STAGE:
      if (value == null) {
        unsetAuditStage();
      } else {
        setAuditStage((String)value);
      }
      break;

    case AUDIT_TIME:
      if (value == null) {
        unsetAuditTime();
      } else {
        setAuditTime((Long)value);
      }
      break;

    case AUDIT_COMMENT:
      if (value == null) {
        unsetAuditComment();
      } else {
        setAuditComment((String)value);
      }
      break;

    case AUDIT_STAFF:
      if (value == null) {
        unsetAuditStaff();
      } else {
        setAuditStaff((String)value);
      }
      break;

    case REVIEW_STAFF:
      if (value == null) {
        unsetReviewStaff();
      } else {
        setReviewStaff((String)value);
      }
      break;

    case CONTACT_NAME:
      if (value == null) {
        unsetContactName();
      } else {
        setContactName((String)value);
      }
      break;

    case CONTACT_PHONE:
      if (value == null) {
        unsetContactPhone();
      } else {
        setContactPhone((String)value);
      }
      break;

    case CONTACT_EMAIL:
      if (value == null) {
        unsetContactEmail();
      } else {
        setContactEmail((String)value);
      }
      break;

    case LEGAL_NAME:
      if (value == null) {
        unsetLegalName();
      } else {
        setLegalName((String)value);
      }
      break;

    case LEGAL_CREDENT_TYPE:
      if (value == null) {
        unsetLegalCredentType();
      } else {
        setLegalCredentType((Integer)value);
      }
      break;

    case LEGAL_CREDENT_NO:
      if (value == null) {
        unsetLegalCredentNo();
      } else {
        setLegalCredentNo((String)value);
      }
      break;

    case COMPLAINT_PHONE:
      if (value == null) {
        unsetComplaintPhone();
      } else {
        setComplaintPhone((String)value);
      }
      break;

    case CATEGORY_INFO_LIST:
      if (value == null) {
        unsetCategoryInfoList();
      } else {
        setCategoryInfoList((List<Long>)value);
      }
      break;

    case TYPE_INFO_LIST:
      if (value == null) {
        unsetTypeInfoList();
      } else {
        setTypeInfoList((List<Long>)value);
      }
      break;

    case START_CREATE_TIME:
      if (value == null) {
        unsetStartCreateTime();
      } else {
        setStartCreateTime((Long)value);
      }
      break;

    case END_CREATE_TIME:
      if (value == null) {
        unsetEndCreateTime();
      } else {
        setEndCreateTime((Long)value);
      }
      break;

    case START_AUDIT_TIME:
      if (value == null) {
        unsetStartAuditTime();
      } else {
        setStartAuditTime((Long)value);
      }
      break;

    case END_AUDIT_TIME:
      if (value == null) {
        unsetEndAuditTime();
      } else {
        setEndAuditTime((Long)value);
      }
      break;

    case START_CONTRACT_BEGINTIME:
      if (value == null) {
        unsetStartContractBegintime();
      } else {
        setStartContractBegintime((Long)value);
      }
      break;

    case END_CONTRACT_BEGINTIME:
      if (value == null) {
        unsetEndContractBegintime();
      } else {
        setEndContractBegintime((Long)value);
      }
      break;

    case START_CONTRACT_ENDTIME:
      if (value == null) {
        unsetStartContractEndtime();
      } else {
        setStartContractEndtime((Long)value);
      }
      break;

    case END_CONTRACT_ENDTIME:
      if (value == null) {
        unsetEndContractEndtime();
      } else {
        setEndContractEndtime((Long)value);
      }
      break;

    case USER_ORG_CODE:
      if (value == null) {
        unsetUserOrgCode();
      } else {
        setUserOrgCode((String)value);
      }
      break;

    case COMPANY_CREDENTIAL:
      if (value == null) {
        unsetCompanyCredential();
      } else {
        setCompanyCredential((String)value);
      }
      break;

    case EDIT_AUDIT_STATE:
      if (value == null) {
        unsetEditAuditState();
      } else {
        setEditAuditState((String)value);
      }
      break;

    case OPERATE_TIME:
      if (value == null) {
        unsetOperateTime();
      } else {
        setOperateTime((Long)value);
      }
      break;

    case OPERATE_USER:
      if (value == null) {
        unsetOperateUser();
      } else {
        setOperateUser((String)value);
      }
      break;

    case IS_OUTSOURCE:
      if (value == null) {
        unsetIsOutsource();
      } else {
        setIsOutsource((Boolean)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case CLIENT_ID:
      return getClientId();

    case MERCHANT_ID:
      return getMerchantId();

    case PRO_ORG_CODE:
      return getProOrgCode();

    case CITY_ORG_CODE:
      return getCityOrgCode();

    case COUNTY_ORG_CODE:
      return getCountyOrgCode();

    case ORG_CODE:
      return getOrgCode();

    case MERCHANT_NAME:
      return getMerchantName();

    case MERCHANT_FULLNAME:
      return getMerchantFullname();

    case LOGO:
      return getLogo();

    case ADDRESS:
      return getAddress();

    case PHONE:
      return getPhone();

    case AREA_ID:
      return Long.valueOf(getAreaId());

    case MERCHANT_STATUS:
      return Boolean.valueOf(isMerchantStatus());

    case IS_ENABLE:
      return Boolean.valueOf(isIsEnable());

    case DISABLE_STATUS:
      return getDisableStatus();

    case IS_TOP:
      return Boolean.valueOf(isIsTop());

    case INTRODUCE:
      return getIntroduce();

    case LICENSE:
      return getLicense();

    case TAX_REG:
      return getTaxReg();

    case CONTRACT_BEGINTIME:
      return Long.valueOf(getContractBegintime());

    case CONTRACT_ENDTIME:
      return Long.valueOf(getContractEndtime());

    case CONTRACT_STAFF:
      return getContractStaff();

    case AUDIT_START_ORG_CODE:
      return getAuditStartOrgCode();

    case AUDIT_END_ORG_CODE:
      return getAuditEndOrgCode();

    case AUDIT_STATE:
      return getAuditState();

    case AUDIT_ORG_CODE:
      return getAuditOrgCode();

    case NEED_REVIEW:
      return Boolean.valueOf(isNeedReview());

    case AUDIT_STAGE:
      return getAuditStage();

    case AUDIT_TIME:
      return Long.valueOf(getAuditTime());

    case AUDIT_COMMENT:
      return getAuditComment();

    case AUDIT_STAFF:
      return getAuditStaff();

    case REVIEW_STAFF:
      return getReviewStaff();

    case CONTACT_NAME:
      return getContactName();

    case CONTACT_PHONE:
      return getContactPhone();

    case CONTACT_EMAIL:
      return getContactEmail();

    case LEGAL_NAME:
      return getLegalName();

    case LEGAL_CREDENT_TYPE:
      return Integer.valueOf(getLegalCredentType());

    case LEGAL_CREDENT_NO:
      return getLegalCredentNo();

    case COMPLAINT_PHONE:
      return getComplaintPhone();

    case CATEGORY_INFO_LIST:
      return getCategoryInfoList();

    case TYPE_INFO_LIST:
      return getTypeInfoList();

    case START_CREATE_TIME:
      return Long.valueOf(getStartCreateTime());

    case END_CREATE_TIME:
      return Long.valueOf(getEndCreateTime());

    case START_AUDIT_TIME:
      return Long.valueOf(getStartAuditTime());

    case END_AUDIT_TIME:
      return Long.valueOf(getEndAuditTime());

    case START_CONTRACT_BEGINTIME:
      return Long.valueOf(getStartContractBegintime());

    case END_CONTRACT_BEGINTIME:
      return Long.valueOf(getEndContractBegintime());

    case START_CONTRACT_ENDTIME:
      return Long.valueOf(getStartContractEndtime());

    case END_CONTRACT_ENDTIME:
      return Long.valueOf(getEndContractEndtime());

    case USER_ORG_CODE:
      return getUserOrgCode();

    case COMPANY_CREDENTIAL:
      return getCompanyCredential();

    case EDIT_AUDIT_STATE:
      return getEditAuditState();

    case OPERATE_TIME:
      return Long.valueOf(getOperateTime());

    case OPERATE_USER:
      return getOperateUser();

    case IS_OUTSOURCE:
      return Boolean.valueOf(isIsOutsource());

    case COMPANY_ID:
      return Long.valueOf(getCompanyId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case CLIENT_ID:
      return isSetClientId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case PRO_ORG_CODE:
      return isSetProOrgCode();
    case CITY_ORG_CODE:
      return isSetCityOrgCode();
    case COUNTY_ORG_CODE:
      return isSetCountyOrgCode();
    case ORG_CODE:
      return isSetOrgCode();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case MERCHANT_FULLNAME:
      return isSetMerchantFullname();
    case LOGO:
      return isSetLogo();
    case ADDRESS:
      return isSetAddress();
    case PHONE:
      return isSetPhone();
    case AREA_ID:
      return isSetAreaId();
    case MERCHANT_STATUS:
      return isSetMerchantStatus();
    case IS_ENABLE:
      return isSetIsEnable();
    case DISABLE_STATUS:
      return isSetDisableStatus();
    case IS_TOP:
      return isSetIsTop();
    case INTRODUCE:
      return isSetIntroduce();
    case LICENSE:
      return isSetLicense();
    case TAX_REG:
      return isSetTaxReg();
    case CONTRACT_BEGINTIME:
      return isSetContractBegintime();
    case CONTRACT_ENDTIME:
      return isSetContractEndtime();
    case CONTRACT_STAFF:
      return isSetContractStaff();
    case AUDIT_START_ORG_CODE:
      return isSetAuditStartOrgCode();
    case AUDIT_END_ORG_CODE:
      return isSetAuditEndOrgCode();
    case AUDIT_STATE:
      return isSetAuditState();
    case AUDIT_ORG_CODE:
      return isSetAuditOrgCode();
    case NEED_REVIEW:
      return isSetNeedReview();
    case AUDIT_STAGE:
      return isSetAuditStage();
    case AUDIT_TIME:
      return isSetAuditTime();
    case AUDIT_COMMENT:
      return isSetAuditComment();
    case AUDIT_STAFF:
      return isSetAuditStaff();
    case REVIEW_STAFF:
      return isSetReviewStaff();
    case CONTACT_NAME:
      return isSetContactName();
    case CONTACT_PHONE:
      return isSetContactPhone();
    case CONTACT_EMAIL:
      return isSetContactEmail();
    case LEGAL_NAME:
      return isSetLegalName();
    case LEGAL_CREDENT_TYPE:
      return isSetLegalCredentType();
    case LEGAL_CREDENT_NO:
      return isSetLegalCredentNo();
    case COMPLAINT_PHONE:
      return isSetComplaintPhone();
    case CATEGORY_INFO_LIST:
      return isSetCategoryInfoList();
    case TYPE_INFO_LIST:
      return isSetTypeInfoList();
    case START_CREATE_TIME:
      return isSetStartCreateTime();
    case END_CREATE_TIME:
      return isSetEndCreateTime();
    case START_AUDIT_TIME:
      return isSetStartAuditTime();
    case END_AUDIT_TIME:
      return isSetEndAuditTime();
    case START_CONTRACT_BEGINTIME:
      return isSetStartContractBegintime();
    case END_CONTRACT_BEGINTIME:
      return isSetEndContractBegintime();
    case START_CONTRACT_ENDTIME:
      return isSetStartContractEndtime();
    case END_CONTRACT_ENDTIME:
      return isSetEndContractEndtime();
    case USER_ORG_CODE:
      return isSetUserOrgCode();
    case COMPANY_CREDENTIAL:
      return isSetCompanyCredential();
    case EDIT_AUDIT_STATE:
      return isSetEditAuditState();
    case OPERATE_TIME:
      return isSetOperateTime();
    case OPERATE_USER:
      return isSetOperateUser();
    case IS_OUTSOURCE:
      return isSetIsOutsource();
    case COMPANY_ID:
      return isSetCompanyId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantVo)
      return this.equals((MerchantVo)that);
    return false;
  }

  public boolean equals(MerchantVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_proOrgCode = true && this.isSetProOrgCode();
    boolean that_present_proOrgCode = true && that.isSetProOrgCode();
    if (this_present_proOrgCode || that_present_proOrgCode) {
      if (!(this_present_proOrgCode && that_present_proOrgCode))
        return false;
      if (!this.proOrgCode.equals(that.proOrgCode))
        return false;
    }

    boolean this_present_cityOrgCode = true && this.isSetCityOrgCode();
    boolean that_present_cityOrgCode = true && that.isSetCityOrgCode();
    if (this_present_cityOrgCode || that_present_cityOrgCode) {
      if (!(this_present_cityOrgCode && that_present_cityOrgCode))
        return false;
      if (!this.cityOrgCode.equals(that.cityOrgCode))
        return false;
    }

    boolean this_present_countyOrgCode = true && this.isSetCountyOrgCode();
    boolean that_present_countyOrgCode = true && that.isSetCountyOrgCode();
    if (this_present_countyOrgCode || that_present_countyOrgCode) {
      if (!(this_present_countyOrgCode && that_present_countyOrgCode))
        return false;
      if (!this.countyOrgCode.equals(that.countyOrgCode))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_merchantFullname = true && this.isSetMerchantFullname();
    boolean that_present_merchantFullname = true && that.isSetMerchantFullname();
    if (this_present_merchantFullname || that_present_merchantFullname) {
      if (!(this_present_merchantFullname && that_present_merchantFullname))
        return false;
      if (!this.merchantFullname.equals(that.merchantFullname))
        return false;
    }

    boolean this_present_logo = true && this.isSetLogo();
    boolean that_present_logo = true && that.isSetLogo();
    if (this_present_logo || that_present_logo) {
      if (!(this_present_logo && that_present_logo))
        return false;
      if (!this.logo.equals(that.logo))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_areaId = true && this.isSetAreaId();
    boolean that_present_areaId = true && that.isSetAreaId();
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (this.areaId != that.areaId)
        return false;
    }

    boolean this_present_merchantStatus = true && this.isSetMerchantStatus();
    boolean that_present_merchantStatus = true && that.isSetMerchantStatus();
    if (this_present_merchantStatus || that_present_merchantStatus) {
      if (!(this_present_merchantStatus && that_present_merchantStatus))
        return false;
      if (this.merchantStatus != that.merchantStatus)
        return false;
    }

    boolean this_present_isEnable = true && this.isSetIsEnable();
    boolean that_present_isEnable = true && that.isSetIsEnable();
    if (this_present_isEnable || that_present_isEnable) {
      if (!(this_present_isEnable && that_present_isEnable))
        return false;
      if (this.isEnable != that.isEnable)
        return false;
    }

    boolean this_present_disableStatus = true && this.isSetDisableStatus();
    boolean that_present_disableStatus = true && that.isSetDisableStatus();
    if (this_present_disableStatus || that_present_disableStatus) {
      if (!(this_present_disableStatus && that_present_disableStatus))
        return false;
      if (!this.disableStatus.equals(that.disableStatus))
        return false;
    }

    boolean this_present_isTop = true && this.isSetIsTop();
    boolean that_present_isTop = true && that.isSetIsTop();
    if (this_present_isTop || that_present_isTop) {
      if (!(this_present_isTop && that_present_isTop))
        return false;
      if (this.isTop != that.isTop)
        return false;
    }

    boolean this_present_introduce = true && this.isSetIntroduce();
    boolean that_present_introduce = true && that.isSetIntroduce();
    if (this_present_introduce || that_present_introduce) {
      if (!(this_present_introduce && that_present_introduce))
        return false;
      if (!this.introduce.equals(that.introduce))
        return false;
    }

    boolean this_present_license = true && this.isSetLicense();
    boolean that_present_license = true && that.isSetLicense();
    if (this_present_license || that_present_license) {
      if (!(this_present_license && that_present_license))
        return false;
      if (!this.license.equals(that.license))
        return false;
    }

    boolean this_present_taxReg = true && this.isSetTaxReg();
    boolean that_present_taxReg = true && that.isSetTaxReg();
    if (this_present_taxReg || that_present_taxReg) {
      if (!(this_present_taxReg && that_present_taxReg))
        return false;
      if (!this.taxReg.equals(that.taxReg))
        return false;
    }

    boolean this_present_contractBegintime = true && this.isSetContractBegintime();
    boolean that_present_contractBegintime = true && that.isSetContractBegintime();
    if (this_present_contractBegintime || that_present_contractBegintime) {
      if (!(this_present_contractBegintime && that_present_contractBegintime))
        return false;
      if (this.contractBegintime != that.contractBegintime)
        return false;
    }

    boolean this_present_contractEndtime = true && this.isSetContractEndtime();
    boolean that_present_contractEndtime = true && that.isSetContractEndtime();
    if (this_present_contractEndtime || that_present_contractEndtime) {
      if (!(this_present_contractEndtime && that_present_contractEndtime))
        return false;
      if (this.contractEndtime != that.contractEndtime)
        return false;
    }

    boolean this_present_contractStaff = true && this.isSetContractStaff();
    boolean that_present_contractStaff = true && that.isSetContractStaff();
    if (this_present_contractStaff || that_present_contractStaff) {
      if (!(this_present_contractStaff && that_present_contractStaff))
        return false;
      if (!this.contractStaff.equals(that.contractStaff))
        return false;
    }

    boolean this_present_auditStartOrgCode = true && this.isSetAuditStartOrgCode();
    boolean that_present_auditStartOrgCode = true && that.isSetAuditStartOrgCode();
    if (this_present_auditStartOrgCode || that_present_auditStartOrgCode) {
      if (!(this_present_auditStartOrgCode && that_present_auditStartOrgCode))
        return false;
      if (!this.auditStartOrgCode.equals(that.auditStartOrgCode))
        return false;
    }

    boolean this_present_auditEndOrgCode = true && this.isSetAuditEndOrgCode();
    boolean that_present_auditEndOrgCode = true && that.isSetAuditEndOrgCode();
    if (this_present_auditEndOrgCode || that_present_auditEndOrgCode) {
      if (!(this_present_auditEndOrgCode && that_present_auditEndOrgCode))
        return false;
      if (!this.auditEndOrgCode.equals(that.auditEndOrgCode))
        return false;
    }

    boolean this_present_auditState = true && this.isSetAuditState();
    boolean that_present_auditState = true && that.isSetAuditState();
    if (this_present_auditState || that_present_auditState) {
      if (!(this_present_auditState && that_present_auditState))
        return false;
      if (!this.auditState.equals(that.auditState))
        return false;
    }

    boolean this_present_auditOrgCode = true && this.isSetAuditOrgCode();
    boolean that_present_auditOrgCode = true && that.isSetAuditOrgCode();
    if (this_present_auditOrgCode || that_present_auditOrgCode) {
      if (!(this_present_auditOrgCode && that_present_auditOrgCode))
        return false;
      if (!this.auditOrgCode.equals(that.auditOrgCode))
        return false;
    }

    boolean this_present_needReview = true && this.isSetNeedReview();
    boolean that_present_needReview = true && that.isSetNeedReview();
    if (this_present_needReview || that_present_needReview) {
      if (!(this_present_needReview && that_present_needReview))
        return false;
      if (this.needReview != that.needReview)
        return false;
    }

    boolean this_present_auditStage = true && this.isSetAuditStage();
    boolean that_present_auditStage = true && that.isSetAuditStage();
    if (this_present_auditStage || that_present_auditStage) {
      if (!(this_present_auditStage && that_present_auditStage))
        return false;
      if (!this.auditStage.equals(that.auditStage))
        return false;
    }

    boolean this_present_auditTime = true && this.isSetAuditTime();
    boolean that_present_auditTime = true && that.isSetAuditTime();
    if (this_present_auditTime || that_present_auditTime) {
      if (!(this_present_auditTime && that_present_auditTime))
        return false;
      if (this.auditTime != that.auditTime)
        return false;
    }

    boolean this_present_auditComment = true && this.isSetAuditComment();
    boolean that_present_auditComment = true && that.isSetAuditComment();
    if (this_present_auditComment || that_present_auditComment) {
      if (!(this_present_auditComment && that_present_auditComment))
        return false;
      if (!this.auditComment.equals(that.auditComment))
        return false;
    }

    boolean this_present_auditStaff = true && this.isSetAuditStaff();
    boolean that_present_auditStaff = true && that.isSetAuditStaff();
    if (this_present_auditStaff || that_present_auditStaff) {
      if (!(this_present_auditStaff && that_present_auditStaff))
        return false;
      if (!this.auditStaff.equals(that.auditStaff))
        return false;
    }

    boolean this_present_reviewStaff = true && this.isSetReviewStaff();
    boolean that_present_reviewStaff = true && that.isSetReviewStaff();
    if (this_present_reviewStaff || that_present_reviewStaff) {
      if (!(this_present_reviewStaff && that_present_reviewStaff))
        return false;
      if (!this.reviewStaff.equals(that.reviewStaff))
        return false;
    }

    boolean this_present_contactName = true && this.isSetContactName();
    boolean that_present_contactName = true && that.isSetContactName();
    if (this_present_contactName || that_present_contactName) {
      if (!(this_present_contactName && that_present_contactName))
        return false;
      if (!this.contactName.equals(that.contactName))
        return false;
    }

    boolean this_present_contactPhone = true && this.isSetContactPhone();
    boolean that_present_contactPhone = true && that.isSetContactPhone();
    if (this_present_contactPhone || that_present_contactPhone) {
      if (!(this_present_contactPhone && that_present_contactPhone))
        return false;
      if (!this.contactPhone.equals(that.contactPhone))
        return false;
    }

    boolean this_present_contactEmail = true && this.isSetContactEmail();
    boolean that_present_contactEmail = true && that.isSetContactEmail();
    if (this_present_contactEmail || that_present_contactEmail) {
      if (!(this_present_contactEmail && that_present_contactEmail))
        return false;
      if (!this.contactEmail.equals(that.contactEmail))
        return false;
    }

    boolean this_present_legalName = true && this.isSetLegalName();
    boolean that_present_legalName = true && that.isSetLegalName();
    if (this_present_legalName || that_present_legalName) {
      if (!(this_present_legalName && that_present_legalName))
        return false;
      if (!this.legalName.equals(that.legalName))
        return false;
    }

    boolean this_present_legalCredentType = true && this.isSetLegalCredentType();
    boolean that_present_legalCredentType = true && that.isSetLegalCredentType();
    if (this_present_legalCredentType || that_present_legalCredentType) {
      if (!(this_present_legalCredentType && that_present_legalCredentType))
        return false;
      if (this.legalCredentType != that.legalCredentType)
        return false;
    }

    boolean this_present_legalCredentNo = true && this.isSetLegalCredentNo();
    boolean that_present_legalCredentNo = true && that.isSetLegalCredentNo();
    if (this_present_legalCredentNo || that_present_legalCredentNo) {
      if (!(this_present_legalCredentNo && that_present_legalCredentNo))
        return false;
      if (!this.legalCredentNo.equals(that.legalCredentNo))
        return false;
    }

    boolean this_present_complaintPhone = true && this.isSetComplaintPhone();
    boolean that_present_complaintPhone = true && that.isSetComplaintPhone();
    if (this_present_complaintPhone || that_present_complaintPhone) {
      if (!(this_present_complaintPhone && that_present_complaintPhone))
        return false;
      if (!this.complaintPhone.equals(that.complaintPhone))
        return false;
    }

    boolean this_present_categoryInfoList = true && this.isSetCategoryInfoList();
    boolean that_present_categoryInfoList = true && that.isSetCategoryInfoList();
    if (this_present_categoryInfoList || that_present_categoryInfoList) {
      if (!(this_present_categoryInfoList && that_present_categoryInfoList))
        return false;
      if (!this.categoryInfoList.equals(that.categoryInfoList))
        return false;
    }

    boolean this_present_typeInfoList = true && this.isSetTypeInfoList();
    boolean that_present_typeInfoList = true && that.isSetTypeInfoList();
    if (this_present_typeInfoList || that_present_typeInfoList) {
      if (!(this_present_typeInfoList && that_present_typeInfoList))
        return false;
      if (!this.typeInfoList.equals(that.typeInfoList))
        return false;
    }

    boolean this_present_startCreateTime = true && this.isSetStartCreateTime();
    boolean that_present_startCreateTime = true && that.isSetStartCreateTime();
    if (this_present_startCreateTime || that_present_startCreateTime) {
      if (!(this_present_startCreateTime && that_present_startCreateTime))
        return false;
      if (this.startCreateTime != that.startCreateTime)
        return false;
    }

    boolean this_present_endCreateTime = true && this.isSetEndCreateTime();
    boolean that_present_endCreateTime = true && that.isSetEndCreateTime();
    if (this_present_endCreateTime || that_present_endCreateTime) {
      if (!(this_present_endCreateTime && that_present_endCreateTime))
        return false;
      if (this.endCreateTime != that.endCreateTime)
        return false;
    }

    boolean this_present_startAuditTime = true && this.isSetStartAuditTime();
    boolean that_present_startAuditTime = true && that.isSetStartAuditTime();
    if (this_present_startAuditTime || that_present_startAuditTime) {
      if (!(this_present_startAuditTime && that_present_startAuditTime))
        return false;
      if (this.startAuditTime != that.startAuditTime)
        return false;
    }

    boolean this_present_endAuditTime = true && this.isSetEndAuditTime();
    boolean that_present_endAuditTime = true && that.isSetEndAuditTime();
    if (this_present_endAuditTime || that_present_endAuditTime) {
      if (!(this_present_endAuditTime && that_present_endAuditTime))
        return false;
      if (this.endAuditTime != that.endAuditTime)
        return false;
    }

    boolean this_present_startContractBegintime = true && this.isSetStartContractBegintime();
    boolean that_present_startContractBegintime = true && that.isSetStartContractBegintime();
    if (this_present_startContractBegintime || that_present_startContractBegintime) {
      if (!(this_present_startContractBegintime && that_present_startContractBegintime))
        return false;
      if (this.startContractBegintime != that.startContractBegintime)
        return false;
    }

    boolean this_present_endContractBegintime = true && this.isSetEndContractBegintime();
    boolean that_present_endContractBegintime = true && that.isSetEndContractBegintime();
    if (this_present_endContractBegintime || that_present_endContractBegintime) {
      if (!(this_present_endContractBegintime && that_present_endContractBegintime))
        return false;
      if (this.endContractBegintime != that.endContractBegintime)
        return false;
    }

    boolean this_present_startContractEndtime = true && this.isSetStartContractEndtime();
    boolean that_present_startContractEndtime = true && that.isSetStartContractEndtime();
    if (this_present_startContractEndtime || that_present_startContractEndtime) {
      if (!(this_present_startContractEndtime && that_present_startContractEndtime))
        return false;
      if (this.startContractEndtime != that.startContractEndtime)
        return false;
    }

    boolean this_present_endContractEndtime = true && this.isSetEndContractEndtime();
    boolean that_present_endContractEndtime = true && that.isSetEndContractEndtime();
    if (this_present_endContractEndtime || that_present_endContractEndtime) {
      if (!(this_present_endContractEndtime && that_present_endContractEndtime))
        return false;
      if (this.endContractEndtime != that.endContractEndtime)
        return false;
    }

    boolean this_present_userOrgCode = true && this.isSetUserOrgCode();
    boolean that_present_userOrgCode = true && that.isSetUserOrgCode();
    if (this_present_userOrgCode || that_present_userOrgCode) {
      if (!(this_present_userOrgCode && that_present_userOrgCode))
        return false;
      if (!this.userOrgCode.equals(that.userOrgCode))
        return false;
    }

    boolean this_present_companyCredential = true && this.isSetCompanyCredential();
    boolean that_present_companyCredential = true && that.isSetCompanyCredential();
    if (this_present_companyCredential || that_present_companyCredential) {
      if (!(this_present_companyCredential && that_present_companyCredential))
        return false;
      if (!this.companyCredential.equals(that.companyCredential))
        return false;
    }

    boolean this_present_editAuditState = true && this.isSetEditAuditState();
    boolean that_present_editAuditState = true && that.isSetEditAuditState();
    if (this_present_editAuditState || that_present_editAuditState) {
      if (!(this_present_editAuditState && that_present_editAuditState))
        return false;
      if (!this.editAuditState.equals(that.editAuditState))
        return false;
    }

    boolean this_present_operateTime = true && this.isSetOperateTime();
    boolean that_present_operateTime = true && that.isSetOperateTime();
    if (this_present_operateTime || that_present_operateTime) {
      if (!(this_present_operateTime && that_present_operateTime))
        return false;
      if (this.operateTime != that.operateTime)
        return false;
    }

    boolean this_present_operateUser = true && this.isSetOperateUser();
    boolean that_present_operateUser = true && that.isSetOperateUser();
    if (this_present_operateUser || that_present_operateUser) {
      if (!(this_present_operateUser && that_present_operateUser))
        return false;
      if (!this.operateUser.equals(that.operateUser))
        return false;
    }

    boolean this_present_isOutsource = true && this.isSetIsOutsource();
    boolean that_present_isOutsource = true && that.isSetIsOutsource();
    if (this_present_isOutsource || that_present_isOutsource) {
      if (!(this_present_isOutsource && that_present_isOutsource))
        return false;
      if (this.isOutsource != that.isOutsource)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_proOrgCode = true && (isSetProOrgCode());
    list.add(present_proOrgCode);
    if (present_proOrgCode)
      list.add(proOrgCode);

    boolean present_cityOrgCode = true && (isSetCityOrgCode());
    list.add(present_cityOrgCode);
    if (present_cityOrgCode)
      list.add(cityOrgCode);

    boolean present_countyOrgCode = true && (isSetCountyOrgCode());
    list.add(present_countyOrgCode);
    if (present_countyOrgCode)
      list.add(countyOrgCode);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_merchantFullname = true && (isSetMerchantFullname());
    list.add(present_merchantFullname);
    if (present_merchantFullname)
      list.add(merchantFullname);

    boolean present_logo = true && (isSetLogo());
    list.add(present_logo);
    if (present_logo)
      list.add(logo);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_areaId = true && (isSetAreaId());
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_merchantStatus = true && (isSetMerchantStatus());
    list.add(present_merchantStatus);
    if (present_merchantStatus)
      list.add(merchantStatus);

    boolean present_isEnable = true && (isSetIsEnable());
    list.add(present_isEnable);
    if (present_isEnable)
      list.add(isEnable);

    boolean present_disableStatus = true && (isSetDisableStatus());
    list.add(present_disableStatus);
    if (present_disableStatus)
      list.add(disableStatus);

    boolean present_isTop = true && (isSetIsTop());
    list.add(present_isTop);
    if (present_isTop)
      list.add(isTop);

    boolean present_introduce = true && (isSetIntroduce());
    list.add(present_introduce);
    if (present_introduce)
      list.add(introduce);

    boolean present_license = true && (isSetLicense());
    list.add(present_license);
    if (present_license)
      list.add(license);

    boolean present_taxReg = true && (isSetTaxReg());
    list.add(present_taxReg);
    if (present_taxReg)
      list.add(taxReg);

    boolean present_contractBegintime = true && (isSetContractBegintime());
    list.add(present_contractBegintime);
    if (present_contractBegintime)
      list.add(contractBegintime);

    boolean present_contractEndtime = true && (isSetContractEndtime());
    list.add(present_contractEndtime);
    if (present_contractEndtime)
      list.add(contractEndtime);

    boolean present_contractStaff = true && (isSetContractStaff());
    list.add(present_contractStaff);
    if (present_contractStaff)
      list.add(contractStaff);

    boolean present_auditStartOrgCode = true && (isSetAuditStartOrgCode());
    list.add(present_auditStartOrgCode);
    if (present_auditStartOrgCode)
      list.add(auditStartOrgCode);

    boolean present_auditEndOrgCode = true && (isSetAuditEndOrgCode());
    list.add(present_auditEndOrgCode);
    if (present_auditEndOrgCode)
      list.add(auditEndOrgCode);

    boolean present_auditState = true && (isSetAuditState());
    list.add(present_auditState);
    if (present_auditState)
      list.add(auditState);

    boolean present_auditOrgCode = true && (isSetAuditOrgCode());
    list.add(present_auditOrgCode);
    if (present_auditOrgCode)
      list.add(auditOrgCode);

    boolean present_needReview = true && (isSetNeedReview());
    list.add(present_needReview);
    if (present_needReview)
      list.add(needReview);

    boolean present_auditStage = true && (isSetAuditStage());
    list.add(present_auditStage);
    if (present_auditStage)
      list.add(auditStage);

    boolean present_auditTime = true && (isSetAuditTime());
    list.add(present_auditTime);
    if (present_auditTime)
      list.add(auditTime);

    boolean present_auditComment = true && (isSetAuditComment());
    list.add(present_auditComment);
    if (present_auditComment)
      list.add(auditComment);

    boolean present_auditStaff = true && (isSetAuditStaff());
    list.add(present_auditStaff);
    if (present_auditStaff)
      list.add(auditStaff);

    boolean present_reviewStaff = true && (isSetReviewStaff());
    list.add(present_reviewStaff);
    if (present_reviewStaff)
      list.add(reviewStaff);

    boolean present_contactName = true && (isSetContactName());
    list.add(present_contactName);
    if (present_contactName)
      list.add(contactName);

    boolean present_contactPhone = true && (isSetContactPhone());
    list.add(present_contactPhone);
    if (present_contactPhone)
      list.add(contactPhone);

    boolean present_contactEmail = true && (isSetContactEmail());
    list.add(present_contactEmail);
    if (present_contactEmail)
      list.add(contactEmail);

    boolean present_legalName = true && (isSetLegalName());
    list.add(present_legalName);
    if (present_legalName)
      list.add(legalName);

    boolean present_legalCredentType = true && (isSetLegalCredentType());
    list.add(present_legalCredentType);
    if (present_legalCredentType)
      list.add(legalCredentType);

    boolean present_legalCredentNo = true && (isSetLegalCredentNo());
    list.add(present_legalCredentNo);
    if (present_legalCredentNo)
      list.add(legalCredentNo);

    boolean present_complaintPhone = true && (isSetComplaintPhone());
    list.add(present_complaintPhone);
    if (present_complaintPhone)
      list.add(complaintPhone);

    boolean present_categoryInfoList = true && (isSetCategoryInfoList());
    list.add(present_categoryInfoList);
    if (present_categoryInfoList)
      list.add(categoryInfoList);

    boolean present_typeInfoList = true && (isSetTypeInfoList());
    list.add(present_typeInfoList);
    if (present_typeInfoList)
      list.add(typeInfoList);

    boolean present_startCreateTime = true && (isSetStartCreateTime());
    list.add(present_startCreateTime);
    if (present_startCreateTime)
      list.add(startCreateTime);

    boolean present_endCreateTime = true && (isSetEndCreateTime());
    list.add(present_endCreateTime);
    if (present_endCreateTime)
      list.add(endCreateTime);

    boolean present_startAuditTime = true && (isSetStartAuditTime());
    list.add(present_startAuditTime);
    if (present_startAuditTime)
      list.add(startAuditTime);

    boolean present_endAuditTime = true && (isSetEndAuditTime());
    list.add(present_endAuditTime);
    if (present_endAuditTime)
      list.add(endAuditTime);

    boolean present_startContractBegintime = true && (isSetStartContractBegintime());
    list.add(present_startContractBegintime);
    if (present_startContractBegintime)
      list.add(startContractBegintime);

    boolean present_endContractBegintime = true && (isSetEndContractBegintime());
    list.add(present_endContractBegintime);
    if (present_endContractBegintime)
      list.add(endContractBegintime);

    boolean present_startContractEndtime = true && (isSetStartContractEndtime());
    list.add(present_startContractEndtime);
    if (present_startContractEndtime)
      list.add(startContractEndtime);

    boolean present_endContractEndtime = true && (isSetEndContractEndtime());
    list.add(present_endContractEndtime);
    if (present_endContractEndtime)
      list.add(endContractEndtime);

    boolean present_userOrgCode = true && (isSetUserOrgCode());
    list.add(present_userOrgCode);
    if (present_userOrgCode)
      list.add(userOrgCode);

    boolean present_companyCredential = true && (isSetCompanyCredential());
    list.add(present_companyCredential);
    if (present_companyCredential)
      list.add(companyCredential);

    boolean present_editAuditState = true && (isSetEditAuditState());
    list.add(present_editAuditState);
    if (present_editAuditState)
      list.add(editAuditState);

    boolean present_operateTime = true && (isSetOperateTime());
    list.add(present_operateTime);
    if (present_operateTime)
      list.add(operateTime);

    boolean present_operateUser = true && (isSetOperateUser());
    list.add(present_operateUser);
    if (present_operateUser)
      list.add(operateUser);

    boolean present_isOutsource = true && (isSetIsOutsource());
    list.add(present_isOutsource);
    if (present_isOutsource)
      list.add(isOutsource);

    boolean present_companyId = true && (isSetCompanyId());
    list.add(present_companyId);
    if (present_companyId)
      list.add(companyId);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProOrgCode()).compareTo(other.isSetProOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.proOrgCode, other.proOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityOrgCode()).compareTo(other.isSetCityOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cityOrgCode, other.cityOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyOrgCode()).compareTo(other.isSetCountyOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.countyOrgCode, other.countyOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantFullname()).compareTo(other.isSetMerchantFullname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantFullname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantFullname, other.merchantFullname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLogo()).compareTo(other.isSetLogo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.logo, other.logo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantStatus()).compareTo(other.isSetMerchantStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantStatus, other.merchantStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnable()).compareTo(other.isSetIsEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnable, other.isEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisableStatus()).compareTo(other.isSetDisableStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisableStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disableStatus, other.disableStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsTop()).compareTo(other.isSetIsTop());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsTop()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isTop, other.isTop);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntroduce()).compareTo(other.isSetIntroduce());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntroduce()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.introduce, other.introduce);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLicense()).compareTo(other.isSetLicense());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLicense()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.license, other.license);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTaxReg()).compareTo(other.isSetTaxReg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTaxReg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.taxReg, other.taxReg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractBegintime()).compareTo(other.isSetContractBegintime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractBegintime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contractBegintime, other.contractBegintime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractEndtime()).compareTo(other.isSetContractEndtime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractEndtime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contractEndtime, other.contractEndtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractStaff()).compareTo(other.isSetContractStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contractStaff, other.contractStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStartOrgCode()).compareTo(other.isSetAuditStartOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStartOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStartOrgCode, other.auditStartOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditEndOrgCode()).compareTo(other.isSetAuditEndOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditEndOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditEndOrgCode, other.auditEndOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditState()).compareTo(other.isSetAuditState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditState, other.auditState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditOrgCode()).compareTo(other.isSetAuditOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditOrgCode, other.auditOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNeedReview()).compareTo(other.isSetNeedReview());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNeedReview()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.needReview, other.needReview);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStage()).compareTo(other.isSetAuditStage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStage, other.auditStage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditTime()).compareTo(other.isSetAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditTime, other.auditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditComment()).compareTo(other.isSetAuditComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditComment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditComment, other.auditComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStaff()).compareTo(other.isSetAuditStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStaff, other.auditStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewStaff()).compareTo(other.isSetReviewStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewStaff, other.reviewStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactName()).compareTo(other.isSetContactName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactName, other.contactName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactPhone()).compareTo(other.isSetContactPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactPhone, other.contactPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactEmail()).compareTo(other.isSetContactEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactEmail, other.contactEmail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegalName()).compareTo(other.isSetLegalName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegalName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legalName, other.legalName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegalCredentType()).compareTo(other.isSetLegalCredentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegalCredentType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legalCredentType, other.legalCredentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegalCredentNo()).compareTo(other.isSetLegalCredentNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegalCredentNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legalCredentNo, other.legalCredentNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComplaintPhone()).compareTo(other.isSetComplaintPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComplaintPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.complaintPhone, other.complaintPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryInfoList()).compareTo(other.isSetCategoryInfoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryInfoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryInfoList, other.categoryInfoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTypeInfoList()).compareTo(other.isSetTypeInfoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTypeInfoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.typeInfoList, other.typeInfoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartCreateTime()).compareTo(other.isSetStartCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startCreateTime, other.startCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndCreateTime()).compareTo(other.isSetEndCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endCreateTime, other.endCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartAuditTime()).compareTo(other.isSetStartAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startAuditTime, other.startAuditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndAuditTime()).compareTo(other.isSetEndAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endAuditTime, other.endAuditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartContractBegintime()).compareTo(other.isSetStartContractBegintime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartContractBegintime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startContractBegintime, other.startContractBegintime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndContractBegintime()).compareTo(other.isSetEndContractBegintime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndContractBegintime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endContractBegintime, other.endContractBegintime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartContractEndtime()).compareTo(other.isSetStartContractEndtime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartContractEndtime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startContractEndtime, other.startContractEndtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndContractEndtime()).compareTo(other.isSetEndContractEndtime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndContractEndtime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endContractEndtime, other.endContractEndtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserOrgCode()).compareTo(other.isSetUserOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userOrgCode, other.userOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyCredential()).compareTo(other.isSetCompanyCredential());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyCredential()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyCredential, other.companyCredential);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEditAuditState()).compareTo(other.isSetEditAuditState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEditAuditState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.editAuditState, other.editAuditState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOperateTime()).compareTo(other.isSetOperateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operateTime, other.operateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOperateUser()).compareTo(other.isSetOperateUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperateUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operateUser, other.operateUser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsOutsource()).compareTo(other.isSetIsOutsource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsOutsource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isOutsource, other.isOutsource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetProOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("proOrgCode:");
      if (this.proOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.proOrgCode);
      }
      first = false;
    }
    if (isSetCityOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("cityOrgCode:");
      if (this.cityOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.cityOrgCode);
      }
      first = false;
    }
    if (isSetCountyOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("countyOrgCode:");
      if (this.countyOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.countyOrgCode);
      }
      first = false;
    }
    if (isSetOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
    }
    if (isSetMerchantName()) {
      if (!first) sb.append(", ");
      sb.append("merchantName:");
      if (this.merchantName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantName);
      }
      first = false;
    }
    if (isSetMerchantFullname()) {
      if (!first) sb.append(", ");
      sb.append("merchantFullname:");
      if (this.merchantFullname == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantFullname);
      }
      first = false;
    }
    if (isSetLogo()) {
      if (!first) sb.append(", ");
      sb.append("logo:");
      if (this.logo == null) {
        sb.append("null");
      } else {
        sb.append(this.logo);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetAreaId()) {
      if (!first) sb.append(", ");
      sb.append("areaId:");
      sb.append(this.areaId);
      first = false;
    }
    if (isSetMerchantStatus()) {
      if (!first) sb.append(", ");
      sb.append("merchantStatus:");
      sb.append(this.merchantStatus);
      first = false;
    }
    if (isSetIsEnable()) {
      if (!first) sb.append(", ");
      sb.append("isEnable:");
      sb.append(this.isEnable);
      first = false;
    }
    if (isSetDisableStatus()) {
      if (!first) sb.append(", ");
      sb.append("disableStatus:");
      if (this.disableStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.disableStatus);
      }
      first = false;
    }
    if (isSetIsTop()) {
      if (!first) sb.append(", ");
      sb.append("isTop:");
      sb.append(this.isTop);
      first = false;
    }
    if (isSetIntroduce()) {
      if (!first) sb.append(", ");
      sb.append("introduce:");
      if (this.introduce == null) {
        sb.append("null");
      } else {
        sb.append(this.introduce);
      }
      first = false;
    }
    if (isSetLicense()) {
      if (!first) sb.append(", ");
      sb.append("license:");
      if (this.license == null) {
        sb.append("null");
      } else {
        sb.append(this.license);
      }
      first = false;
    }
    if (isSetTaxReg()) {
      if (!first) sb.append(", ");
      sb.append("taxReg:");
      if (this.taxReg == null) {
        sb.append("null");
      } else {
        sb.append(this.taxReg);
      }
      first = false;
    }
    if (isSetContractBegintime()) {
      if (!first) sb.append(", ");
      sb.append("contractBegintime:");
      sb.append(this.contractBegintime);
      first = false;
    }
    if (isSetContractEndtime()) {
      if (!first) sb.append(", ");
      sb.append("contractEndtime:");
      sb.append(this.contractEndtime);
      first = false;
    }
    if (isSetContractStaff()) {
      if (!first) sb.append(", ");
      sb.append("contractStaff:");
      if (this.contractStaff == null) {
        sb.append("null");
      } else {
        sb.append(this.contractStaff);
      }
      first = false;
    }
    if (isSetAuditStartOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("auditStartOrgCode:");
      if (this.auditStartOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.auditStartOrgCode);
      }
      first = false;
    }
    if (isSetAuditEndOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("auditEndOrgCode:");
      if (this.auditEndOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.auditEndOrgCode);
      }
      first = false;
    }
    if (isSetAuditState()) {
      if (!first) sb.append(", ");
      sb.append("auditState:");
      if (this.auditState == null) {
        sb.append("null");
      } else {
        sb.append(this.auditState);
      }
      first = false;
    }
    if (isSetAuditOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("auditOrgCode:");
      if (this.auditOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.auditOrgCode);
      }
      first = false;
    }
    if (isSetNeedReview()) {
      if (!first) sb.append(", ");
      sb.append("needReview:");
      sb.append(this.needReview);
      first = false;
    }
    if (isSetAuditStage()) {
      if (!first) sb.append(", ");
      sb.append("auditStage:");
      if (this.auditStage == null) {
        sb.append("null");
      } else {
        sb.append(this.auditStage);
      }
      first = false;
    }
    if (isSetAuditTime()) {
      if (!first) sb.append(", ");
      sb.append("auditTime:");
      sb.append(this.auditTime);
      first = false;
    }
    if (isSetAuditComment()) {
      if (!first) sb.append(", ");
      sb.append("auditComment:");
      if (this.auditComment == null) {
        sb.append("null");
      } else {
        sb.append(this.auditComment);
      }
      first = false;
    }
    if (isSetAuditStaff()) {
      if (!first) sb.append(", ");
      sb.append("auditStaff:");
      if (this.auditStaff == null) {
        sb.append("null");
      } else {
        sb.append(this.auditStaff);
      }
      first = false;
    }
    if (isSetReviewStaff()) {
      if (!first) sb.append(", ");
      sb.append("reviewStaff:");
      if (this.reviewStaff == null) {
        sb.append("null");
      } else {
        sb.append(this.reviewStaff);
      }
      first = false;
    }
    if (isSetContactName()) {
      if (!first) sb.append(", ");
      sb.append("contactName:");
      if (this.contactName == null) {
        sb.append("null");
      } else {
        sb.append(this.contactName);
      }
      first = false;
    }
    if (isSetContactPhone()) {
      if (!first) sb.append(", ");
      sb.append("contactPhone:");
      if (this.contactPhone == null) {
        sb.append("null");
      } else {
        sb.append(this.contactPhone);
      }
      first = false;
    }
    if (isSetContactEmail()) {
      if (!first) sb.append(", ");
      sb.append("contactEmail:");
      if (this.contactEmail == null) {
        sb.append("null");
      } else {
        sb.append(this.contactEmail);
      }
      first = false;
    }
    if (isSetLegalName()) {
      if (!first) sb.append(", ");
      sb.append("legalName:");
      if (this.legalName == null) {
        sb.append("null");
      } else {
        sb.append(this.legalName);
      }
      first = false;
    }
    if (isSetLegalCredentType()) {
      if (!first) sb.append(", ");
      sb.append("legalCredentType:");
      sb.append(this.legalCredentType);
      first = false;
    }
    if (isSetLegalCredentNo()) {
      if (!first) sb.append(", ");
      sb.append("legalCredentNo:");
      if (this.legalCredentNo == null) {
        sb.append("null");
      } else {
        sb.append(this.legalCredentNo);
      }
      first = false;
    }
    if (isSetComplaintPhone()) {
      if (!first) sb.append(", ");
      sb.append("complaintPhone:");
      if (this.complaintPhone == null) {
        sb.append("null");
      } else {
        sb.append(this.complaintPhone);
      }
      first = false;
    }
    if (isSetCategoryInfoList()) {
      if (!first) sb.append(", ");
      sb.append("categoryInfoList:");
      if (this.categoryInfoList == null) {
        sb.append("null");
      } else {
        sb.append(this.categoryInfoList);
      }
      first = false;
    }
    if (isSetTypeInfoList()) {
      if (!first) sb.append(", ");
      sb.append("typeInfoList:");
      if (this.typeInfoList == null) {
        sb.append("null");
      } else {
        sb.append(this.typeInfoList);
      }
      first = false;
    }
    if (isSetStartCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("startCreateTime:");
      sb.append(this.startCreateTime);
      first = false;
    }
    if (isSetEndCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("endCreateTime:");
      sb.append(this.endCreateTime);
      first = false;
    }
    if (isSetStartAuditTime()) {
      if (!first) sb.append(", ");
      sb.append("startAuditTime:");
      sb.append(this.startAuditTime);
      first = false;
    }
    if (isSetEndAuditTime()) {
      if (!first) sb.append(", ");
      sb.append("endAuditTime:");
      sb.append(this.endAuditTime);
      first = false;
    }
    if (isSetStartContractBegintime()) {
      if (!first) sb.append(", ");
      sb.append("startContractBegintime:");
      sb.append(this.startContractBegintime);
      first = false;
    }
    if (isSetEndContractBegintime()) {
      if (!first) sb.append(", ");
      sb.append("endContractBegintime:");
      sb.append(this.endContractBegintime);
      first = false;
    }
    if (isSetStartContractEndtime()) {
      if (!first) sb.append(", ");
      sb.append("startContractEndtime:");
      sb.append(this.startContractEndtime);
      first = false;
    }
    if (isSetEndContractEndtime()) {
      if (!first) sb.append(", ");
      sb.append("endContractEndtime:");
      sb.append(this.endContractEndtime);
      first = false;
    }
    if (isSetUserOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("userOrgCode:");
      if (this.userOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.userOrgCode);
      }
      first = false;
    }
    if (isSetCompanyCredential()) {
      if (!first) sb.append(", ");
      sb.append("companyCredential:");
      if (this.companyCredential == null) {
        sb.append("null");
      } else {
        sb.append(this.companyCredential);
      }
      first = false;
    }
    if (isSetEditAuditState()) {
      if (!first) sb.append(", ");
      sb.append("editAuditState:");
      if (this.editAuditState == null) {
        sb.append("null");
      } else {
        sb.append(this.editAuditState);
      }
      first = false;
    }
    if (isSetOperateTime()) {
      if (!first) sb.append(", ");
      sb.append("operateTime:");
      sb.append(this.operateTime);
      first = false;
    }
    if (isSetOperateUser()) {
      if (!first) sb.append(", ");
      sb.append("operateUser:");
      if (this.operateUser == null) {
        sb.append("null");
      } else {
        sb.append(this.operateUser);
      }
      first = false;
    }
    if (isSetIsOutsource()) {
      if (!first) sb.append(", ");
      sb.append("isOutsource:");
      sb.append(this.isOutsource);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantVoStandardSchemeFactory implements SchemeFactory {
    public MerchantVoStandardScheme getScheme() {
      return new MerchantVoStandardScheme();
    }
  }

  private static class MerchantVoStandardScheme extends StandardScheme<MerchantVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PRO_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.proOrgCode = iprot.readString();
              struct.setProOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CITY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cityOrgCode = iprot.readString();
              struct.setCityOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // COUNTY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.countyOrgCode = iprot.readString();
              struct.setCountyOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MERCHANT_FULLNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantFullname = iprot.readString();
              struct.setMerchantFullnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // LOGO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.logo = iprot.readString();
              struct.setLogoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.areaId = iprot.readI64();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // MERCHANT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.merchantStatus = iprot.readBool();
              struct.setMerchantStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // IS_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnable = iprot.readBool();
              struct.setIsEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // DISABLE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.disableStatus = iprot.readString();
              struct.setDisableStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // IS_TOP
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isTop = iprot.readBool();
              struct.setIsTopIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // INTRODUCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.introduce = iprot.readString();
              struct.setIntroduceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // LICENSE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.license = iprot.readString();
              struct.setLicenseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // TAX_REG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.taxReg = iprot.readString();
              struct.setTaxRegIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CONTRACT_BEGINTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.contractBegintime = iprot.readI64();
              struct.setContractBegintimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // CONTRACT_ENDTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.contractEndtime = iprot.readI64();
              struct.setContractEndtimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // CONTRACT_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contractStaff = iprot.readString();
              struct.setContractStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // AUDIT_START_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStartOrgCode = iprot.readString();
              struct.setAuditStartOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // AUDIT_END_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditEndOrgCode = iprot.readString();
              struct.setAuditEndOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // AUDIT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditState = iprot.readString();
              struct.setAuditStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // AUDIT_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditOrgCode = iprot.readString();
              struct.setAuditOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // NEED_REVIEW
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.needReview = iprot.readBool();
              struct.setNeedReviewIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // AUDIT_STAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStage = iprot.readString();
              struct.setAuditStageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.auditTime = iprot.readI64();
              struct.setAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // AUDIT_COMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditComment = iprot.readString();
              struct.setAuditCommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // AUDIT_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStaff = iprot.readString();
              struct.setAuditStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // REVIEW_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reviewStaff = iprot.readString();
              struct.setReviewStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // CONTACT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactName = iprot.readString();
              struct.setContactNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // CONTACT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactPhone = iprot.readString();
              struct.setContactPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // CONTACT_EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactEmail = iprot.readString();
              struct.setContactEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // LEGAL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.legalName = iprot.readString();
              struct.setLegalNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // LEGAL_CREDENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.legalCredentType = iprot.readI32();
              struct.setLegalCredentTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // LEGAL_CREDENT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.legalCredentNo = iprot.readString();
              struct.setLegalCredentNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // COMPLAINT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.complaintPhone = iprot.readString();
              struct.setComplaintPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // CATEGORY_INFO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.categoryInfoList = new ArrayList<Long>(_list0.size);
                long _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI64();
                  struct.categoryInfoList.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setCategoryInfoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // TYPE_INFO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.typeInfoList = new ArrayList<Long>(_list3.size);
                long _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = iprot.readI64();
                  struct.typeInfoList.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setTypeInfoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // START_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startCreateTime = iprot.readI64();
              struct.setStartCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 45: // END_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endCreateTime = iprot.readI64();
              struct.setEndCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 46: // START_AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startAuditTime = iprot.readI64();
              struct.setStartAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 47: // END_AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endAuditTime = iprot.readI64();
              struct.setEndAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 48: // START_CONTRACT_BEGINTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startContractBegintime = iprot.readI64();
              struct.setStartContractBegintimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 49: // END_CONTRACT_BEGINTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endContractBegintime = iprot.readI64();
              struct.setEndContractBegintimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 50: // START_CONTRACT_ENDTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startContractEndtime = iprot.readI64();
              struct.setStartContractEndtimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 51: // END_CONTRACT_ENDTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endContractEndtime = iprot.readI64();
              struct.setEndContractEndtimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 52: // USER_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userOrgCode = iprot.readString();
              struct.setUserOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 53: // COMPANY_CREDENTIAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyCredential = iprot.readString();
              struct.setCompanyCredentialIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 54: // EDIT_AUDIT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.editAuditState = iprot.readString();
              struct.setEditAuditStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 55: // OPERATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.operateTime = iprot.readI64();
              struct.setOperateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 56: // OPERATE_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.operateUser = iprot.readString();
              struct.setOperateUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 57: // IS_OUTSOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isOutsource = iprot.readBool();
              struct.setIsOutsourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 58: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.companyId = iprot.readI64();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.proOrgCode != null) {
        if (struct.isSetProOrgCode()) {
          oprot.writeFieldBegin(PRO_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.proOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cityOrgCode != null) {
        if (struct.isSetCityOrgCode()) {
          oprot.writeFieldBegin(CITY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.cityOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.countyOrgCode != null) {
        if (struct.isSetCountyOrgCode()) {
          oprot.writeFieldBegin(COUNTY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.countyOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgCode != null) {
        if (struct.isSetOrgCode()) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantName != null) {
        if (struct.isSetMerchantName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantFullname != null) {
        if (struct.isSetMerchantFullname()) {
          oprot.writeFieldBegin(MERCHANT_FULLNAME_FIELD_DESC);
          oprot.writeString(struct.merchantFullname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.logo != null) {
        if (struct.isSetLogo()) {
          oprot.writeFieldBegin(LOGO_FIELD_DESC);
          oprot.writeString(struct.logo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAreaId()) {
        oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
        oprot.writeI64(struct.areaId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMerchantStatus()) {
        oprot.writeFieldBegin(MERCHANT_STATUS_FIELD_DESC);
        oprot.writeBool(struct.merchantStatus);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsEnable()) {
        oprot.writeFieldBegin(IS_ENABLE_FIELD_DESC);
        oprot.writeBool(struct.isEnable);
        oprot.writeFieldEnd();
      }
      if (struct.disableStatus != null) {
        if (struct.isSetDisableStatus()) {
          oprot.writeFieldBegin(DISABLE_STATUS_FIELD_DESC);
          oprot.writeString(struct.disableStatus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsTop()) {
        oprot.writeFieldBegin(IS_TOP_FIELD_DESC);
        oprot.writeBool(struct.isTop);
        oprot.writeFieldEnd();
      }
      if (struct.introduce != null) {
        if (struct.isSetIntroduce()) {
          oprot.writeFieldBegin(INTRODUCE_FIELD_DESC);
          oprot.writeString(struct.introduce);
          oprot.writeFieldEnd();
        }
      }
      if (struct.license != null) {
        if (struct.isSetLicense()) {
          oprot.writeFieldBegin(LICENSE_FIELD_DESC);
          oprot.writeString(struct.license);
          oprot.writeFieldEnd();
        }
      }
      if (struct.taxReg != null) {
        if (struct.isSetTaxReg()) {
          oprot.writeFieldBegin(TAX_REG_FIELD_DESC);
          oprot.writeString(struct.taxReg);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetContractBegintime()) {
        oprot.writeFieldBegin(CONTRACT_BEGINTIME_FIELD_DESC);
        oprot.writeI64(struct.contractBegintime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetContractEndtime()) {
        oprot.writeFieldBegin(CONTRACT_ENDTIME_FIELD_DESC);
        oprot.writeI64(struct.contractEndtime);
        oprot.writeFieldEnd();
      }
      if (struct.contractStaff != null) {
        if (struct.isSetContractStaff()) {
          oprot.writeFieldBegin(CONTRACT_STAFF_FIELD_DESC);
          oprot.writeString(struct.contractStaff);
          oprot.writeFieldEnd();
        }
      }
      if (struct.auditStartOrgCode != null) {
        if (struct.isSetAuditStartOrgCode()) {
          oprot.writeFieldBegin(AUDIT_START_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.auditStartOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.auditEndOrgCode != null) {
        if (struct.isSetAuditEndOrgCode()) {
          oprot.writeFieldBegin(AUDIT_END_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.auditEndOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.auditState != null) {
        if (struct.isSetAuditState()) {
          oprot.writeFieldBegin(AUDIT_STATE_FIELD_DESC);
          oprot.writeString(struct.auditState);
          oprot.writeFieldEnd();
        }
      }
      if (struct.auditOrgCode != null) {
        if (struct.isSetAuditOrgCode()) {
          oprot.writeFieldBegin(AUDIT_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.auditOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNeedReview()) {
        oprot.writeFieldBegin(NEED_REVIEW_FIELD_DESC);
        oprot.writeBool(struct.needReview);
        oprot.writeFieldEnd();
      }
      if (struct.auditStage != null) {
        if (struct.isSetAuditStage()) {
          oprot.writeFieldBegin(AUDIT_STAGE_FIELD_DESC);
          oprot.writeString(struct.auditStage);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAuditTime()) {
        oprot.writeFieldBegin(AUDIT_TIME_FIELD_DESC);
        oprot.writeI64(struct.auditTime);
        oprot.writeFieldEnd();
      }
      if (struct.auditComment != null) {
        if (struct.isSetAuditComment()) {
          oprot.writeFieldBegin(AUDIT_COMMENT_FIELD_DESC);
          oprot.writeString(struct.auditComment);
          oprot.writeFieldEnd();
        }
      }
      if (struct.auditStaff != null) {
        if (struct.isSetAuditStaff()) {
          oprot.writeFieldBegin(AUDIT_STAFF_FIELD_DESC);
          oprot.writeString(struct.auditStaff);
          oprot.writeFieldEnd();
        }
      }
      if (struct.reviewStaff != null) {
        if (struct.isSetReviewStaff()) {
          oprot.writeFieldBegin(REVIEW_STAFF_FIELD_DESC);
          oprot.writeString(struct.reviewStaff);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactName != null) {
        if (struct.isSetContactName()) {
          oprot.writeFieldBegin(CONTACT_NAME_FIELD_DESC);
          oprot.writeString(struct.contactName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactPhone != null) {
        if (struct.isSetContactPhone()) {
          oprot.writeFieldBegin(CONTACT_PHONE_FIELD_DESC);
          oprot.writeString(struct.contactPhone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactEmail != null) {
        if (struct.isSetContactEmail()) {
          oprot.writeFieldBegin(CONTACT_EMAIL_FIELD_DESC);
          oprot.writeString(struct.contactEmail);
          oprot.writeFieldEnd();
        }
      }
      if (struct.legalName != null) {
        if (struct.isSetLegalName()) {
          oprot.writeFieldBegin(LEGAL_NAME_FIELD_DESC);
          oprot.writeString(struct.legalName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetLegalCredentType()) {
        oprot.writeFieldBegin(LEGAL_CREDENT_TYPE_FIELD_DESC);
        oprot.writeI32(struct.legalCredentType);
        oprot.writeFieldEnd();
      }
      if (struct.legalCredentNo != null) {
        if (struct.isSetLegalCredentNo()) {
          oprot.writeFieldBegin(LEGAL_CREDENT_NO_FIELD_DESC);
          oprot.writeString(struct.legalCredentNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.complaintPhone != null) {
        if (struct.isSetComplaintPhone()) {
          oprot.writeFieldBegin(COMPLAINT_PHONE_FIELD_DESC);
          oprot.writeString(struct.complaintPhone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.categoryInfoList != null) {
        if (struct.isSetCategoryInfoList()) {
          oprot.writeFieldBegin(CATEGORY_INFO_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.categoryInfoList.size()));
            for (long _iter6 : struct.categoryInfoList)
            {
              oprot.writeI64(_iter6);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.typeInfoList != null) {
        if (struct.isSetTypeInfoList()) {
          oprot.writeFieldBegin(TYPE_INFO_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.typeInfoList.size()));
            for (long _iter7 : struct.typeInfoList)
            {
              oprot.writeI64(_iter7);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStartCreateTime()) {
        oprot.writeFieldBegin(START_CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.startCreateTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndCreateTime()) {
        oprot.writeFieldBegin(END_CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.endCreateTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStartAuditTime()) {
        oprot.writeFieldBegin(START_AUDIT_TIME_FIELD_DESC);
        oprot.writeI64(struct.startAuditTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndAuditTime()) {
        oprot.writeFieldBegin(END_AUDIT_TIME_FIELD_DESC);
        oprot.writeI64(struct.endAuditTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStartContractBegintime()) {
        oprot.writeFieldBegin(START_CONTRACT_BEGINTIME_FIELD_DESC);
        oprot.writeI64(struct.startContractBegintime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndContractBegintime()) {
        oprot.writeFieldBegin(END_CONTRACT_BEGINTIME_FIELD_DESC);
        oprot.writeI64(struct.endContractBegintime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStartContractEndtime()) {
        oprot.writeFieldBegin(START_CONTRACT_ENDTIME_FIELD_DESC);
        oprot.writeI64(struct.startContractEndtime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndContractEndtime()) {
        oprot.writeFieldBegin(END_CONTRACT_ENDTIME_FIELD_DESC);
        oprot.writeI64(struct.endContractEndtime);
        oprot.writeFieldEnd();
      }
      if (struct.userOrgCode != null) {
        if (struct.isSetUserOrgCode()) {
          oprot.writeFieldBegin(USER_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.userOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyCredential != null) {
        if (struct.isSetCompanyCredential()) {
          oprot.writeFieldBegin(COMPANY_CREDENTIAL_FIELD_DESC);
          oprot.writeString(struct.companyCredential);
          oprot.writeFieldEnd();
        }
      }
      if (struct.editAuditState != null) {
        if (struct.isSetEditAuditState()) {
          oprot.writeFieldBegin(EDIT_AUDIT_STATE_FIELD_DESC);
          oprot.writeString(struct.editAuditState);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOperateTime()) {
        oprot.writeFieldBegin(OPERATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.operateTime);
        oprot.writeFieldEnd();
      }
      if (struct.operateUser != null) {
        if (struct.isSetOperateUser()) {
          oprot.writeFieldBegin(OPERATE_USER_FIELD_DESC);
          oprot.writeString(struct.operateUser);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsOutsource()) {
        oprot.writeFieldBegin(IS_OUTSOURCE_FIELD_DESC);
        oprot.writeBool(struct.isOutsource);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI64(struct.companyId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantVoTupleSchemeFactory implements SchemeFactory {
    public MerchantVoTupleScheme getScheme() {
      return new MerchantVoTupleScheme();
    }
  }

  private static class MerchantVoTupleScheme extends TupleScheme<MerchantVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetClientId()) {
        optionals.set(2);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(3);
      }
      if (struct.isSetProOrgCode()) {
        optionals.set(4);
      }
      if (struct.isSetCityOrgCode()) {
        optionals.set(5);
      }
      if (struct.isSetCountyOrgCode()) {
        optionals.set(6);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(7);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(8);
      }
      if (struct.isSetMerchantFullname()) {
        optionals.set(9);
      }
      if (struct.isSetLogo()) {
        optionals.set(10);
      }
      if (struct.isSetAddress()) {
        optionals.set(11);
      }
      if (struct.isSetPhone()) {
        optionals.set(12);
      }
      if (struct.isSetAreaId()) {
        optionals.set(13);
      }
      if (struct.isSetMerchantStatus()) {
        optionals.set(14);
      }
      if (struct.isSetIsEnable()) {
        optionals.set(15);
      }
      if (struct.isSetDisableStatus()) {
        optionals.set(16);
      }
      if (struct.isSetIsTop()) {
        optionals.set(17);
      }
      if (struct.isSetIntroduce()) {
        optionals.set(18);
      }
      if (struct.isSetLicense()) {
        optionals.set(19);
      }
      if (struct.isSetTaxReg()) {
        optionals.set(20);
      }
      if (struct.isSetContractBegintime()) {
        optionals.set(21);
      }
      if (struct.isSetContractEndtime()) {
        optionals.set(22);
      }
      if (struct.isSetContractStaff()) {
        optionals.set(23);
      }
      if (struct.isSetAuditStartOrgCode()) {
        optionals.set(24);
      }
      if (struct.isSetAuditEndOrgCode()) {
        optionals.set(25);
      }
      if (struct.isSetAuditState()) {
        optionals.set(26);
      }
      if (struct.isSetAuditOrgCode()) {
        optionals.set(27);
      }
      if (struct.isSetNeedReview()) {
        optionals.set(28);
      }
      if (struct.isSetAuditStage()) {
        optionals.set(29);
      }
      if (struct.isSetAuditTime()) {
        optionals.set(30);
      }
      if (struct.isSetAuditComment()) {
        optionals.set(31);
      }
      if (struct.isSetAuditStaff()) {
        optionals.set(32);
      }
      if (struct.isSetReviewStaff()) {
        optionals.set(33);
      }
      if (struct.isSetContactName()) {
        optionals.set(34);
      }
      if (struct.isSetContactPhone()) {
        optionals.set(35);
      }
      if (struct.isSetContactEmail()) {
        optionals.set(36);
      }
      if (struct.isSetLegalName()) {
        optionals.set(37);
      }
      if (struct.isSetLegalCredentType()) {
        optionals.set(38);
      }
      if (struct.isSetLegalCredentNo()) {
        optionals.set(39);
      }
      if (struct.isSetComplaintPhone()) {
        optionals.set(40);
      }
      if (struct.isSetCategoryInfoList()) {
        optionals.set(41);
      }
      if (struct.isSetTypeInfoList()) {
        optionals.set(42);
      }
      if (struct.isSetStartCreateTime()) {
        optionals.set(43);
      }
      if (struct.isSetEndCreateTime()) {
        optionals.set(44);
      }
      if (struct.isSetStartAuditTime()) {
        optionals.set(45);
      }
      if (struct.isSetEndAuditTime()) {
        optionals.set(46);
      }
      if (struct.isSetStartContractBegintime()) {
        optionals.set(47);
      }
      if (struct.isSetEndContractBegintime()) {
        optionals.set(48);
      }
      if (struct.isSetStartContractEndtime()) {
        optionals.set(49);
      }
      if (struct.isSetEndContractEndtime()) {
        optionals.set(50);
      }
      if (struct.isSetUserOrgCode()) {
        optionals.set(51);
      }
      if (struct.isSetCompanyCredential()) {
        optionals.set(52);
      }
      if (struct.isSetEditAuditState()) {
        optionals.set(53);
      }
      if (struct.isSetOperateTime()) {
        optionals.set(54);
      }
      if (struct.isSetOperateUser()) {
        optionals.set(55);
      }
      if (struct.isSetIsOutsource()) {
        optionals.set(56);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(57);
      }
      oprot.writeBitSet(optionals, 58);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetProOrgCode()) {
        oprot.writeString(struct.proOrgCode);
      }
      if (struct.isSetCityOrgCode()) {
        oprot.writeString(struct.cityOrgCode);
      }
      if (struct.isSetCountyOrgCode()) {
        oprot.writeString(struct.countyOrgCode);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetMerchantFullname()) {
        oprot.writeString(struct.merchantFullname);
      }
      if (struct.isSetLogo()) {
        oprot.writeString(struct.logo);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetAreaId()) {
        oprot.writeI64(struct.areaId);
      }
      if (struct.isSetMerchantStatus()) {
        oprot.writeBool(struct.merchantStatus);
      }
      if (struct.isSetIsEnable()) {
        oprot.writeBool(struct.isEnable);
      }
      if (struct.isSetDisableStatus()) {
        oprot.writeString(struct.disableStatus);
      }
      if (struct.isSetIsTop()) {
        oprot.writeBool(struct.isTop);
      }
      if (struct.isSetIntroduce()) {
        oprot.writeString(struct.introduce);
      }
      if (struct.isSetLicense()) {
        oprot.writeString(struct.license);
      }
      if (struct.isSetTaxReg()) {
        oprot.writeString(struct.taxReg);
      }
      if (struct.isSetContractBegintime()) {
        oprot.writeI64(struct.contractBegintime);
      }
      if (struct.isSetContractEndtime()) {
        oprot.writeI64(struct.contractEndtime);
      }
      if (struct.isSetContractStaff()) {
        oprot.writeString(struct.contractStaff);
      }
      if (struct.isSetAuditStartOrgCode()) {
        oprot.writeString(struct.auditStartOrgCode);
      }
      if (struct.isSetAuditEndOrgCode()) {
        oprot.writeString(struct.auditEndOrgCode);
      }
      if (struct.isSetAuditState()) {
        oprot.writeString(struct.auditState);
      }
      if (struct.isSetAuditOrgCode()) {
        oprot.writeString(struct.auditOrgCode);
      }
      if (struct.isSetNeedReview()) {
        oprot.writeBool(struct.needReview);
      }
      if (struct.isSetAuditStage()) {
        oprot.writeString(struct.auditStage);
      }
      if (struct.isSetAuditTime()) {
        oprot.writeI64(struct.auditTime);
      }
      if (struct.isSetAuditComment()) {
        oprot.writeString(struct.auditComment);
      }
      if (struct.isSetAuditStaff()) {
        oprot.writeString(struct.auditStaff);
      }
      if (struct.isSetReviewStaff()) {
        oprot.writeString(struct.reviewStaff);
      }
      if (struct.isSetContactName()) {
        oprot.writeString(struct.contactName);
      }
      if (struct.isSetContactPhone()) {
        oprot.writeString(struct.contactPhone);
      }
      if (struct.isSetContactEmail()) {
        oprot.writeString(struct.contactEmail);
      }
      if (struct.isSetLegalName()) {
        oprot.writeString(struct.legalName);
      }
      if (struct.isSetLegalCredentType()) {
        oprot.writeI32(struct.legalCredentType);
      }
      if (struct.isSetLegalCredentNo()) {
        oprot.writeString(struct.legalCredentNo);
      }
      if (struct.isSetComplaintPhone()) {
        oprot.writeString(struct.complaintPhone);
      }
      if (struct.isSetCategoryInfoList()) {
        {
          oprot.writeI32(struct.categoryInfoList.size());
          for (long _iter8 : struct.categoryInfoList)
          {
            oprot.writeI64(_iter8);
          }
        }
      }
      if (struct.isSetTypeInfoList()) {
        {
          oprot.writeI32(struct.typeInfoList.size());
          for (long _iter9 : struct.typeInfoList)
          {
            oprot.writeI64(_iter9);
          }
        }
      }
      if (struct.isSetStartCreateTime()) {
        oprot.writeI64(struct.startCreateTime);
      }
      if (struct.isSetEndCreateTime()) {
        oprot.writeI64(struct.endCreateTime);
      }
      if (struct.isSetStartAuditTime()) {
        oprot.writeI64(struct.startAuditTime);
      }
      if (struct.isSetEndAuditTime()) {
        oprot.writeI64(struct.endAuditTime);
      }
      if (struct.isSetStartContractBegintime()) {
        oprot.writeI64(struct.startContractBegintime);
      }
      if (struct.isSetEndContractBegintime()) {
        oprot.writeI64(struct.endContractBegintime);
      }
      if (struct.isSetStartContractEndtime()) {
        oprot.writeI64(struct.startContractEndtime);
      }
      if (struct.isSetEndContractEndtime()) {
        oprot.writeI64(struct.endContractEndtime);
      }
      if (struct.isSetUserOrgCode()) {
        oprot.writeString(struct.userOrgCode);
      }
      if (struct.isSetCompanyCredential()) {
        oprot.writeString(struct.companyCredential);
      }
      if (struct.isSetEditAuditState()) {
        oprot.writeString(struct.editAuditState);
      }
      if (struct.isSetOperateTime()) {
        oprot.writeI64(struct.operateTime);
      }
      if (struct.isSetOperateUser()) {
        oprot.writeString(struct.operateUser);
      }
      if (struct.isSetIsOutsource()) {
        oprot.writeBool(struct.isOutsource);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI64(struct.companyId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(58);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.proOrgCode = iprot.readString();
        struct.setProOrgCodeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.cityOrgCode = iprot.readString();
        struct.setCityOrgCodeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.countyOrgCode = iprot.readString();
        struct.setCountyOrgCodeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.merchantFullname = iprot.readString();
        struct.setMerchantFullnameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.logo = iprot.readString();
        struct.setLogoIsSet(true);
      }
      if (incoming.get(11)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(12)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(13)) {
        struct.areaId = iprot.readI64();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(14)) {
        struct.merchantStatus = iprot.readBool();
        struct.setMerchantStatusIsSet(true);
      }
      if (incoming.get(15)) {
        struct.isEnable = iprot.readBool();
        struct.setIsEnableIsSet(true);
      }
      if (incoming.get(16)) {
        struct.disableStatus = iprot.readString();
        struct.setDisableStatusIsSet(true);
      }
      if (incoming.get(17)) {
        struct.isTop = iprot.readBool();
        struct.setIsTopIsSet(true);
      }
      if (incoming.get(18)) {
        struct.introduce = iprot.readString();
        struct.setIntroduceIsSet(true);
      }
      if (incoming.get(19)) {
        struct.license = iprot.readString();
        struct.setLicenseIsSet(true);
      }
      if (incoming.get(20)) {
        struct.taxReg = iprot.readString();
        struct.setTaxRegIsSet(true);
      }
      if (incoming.get(21)) {
        struct.contractBegintime = iprot.readI64();
        struct.setContractBegintimeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.contractEndtime = iprot.readI64();
        struct.setContractEndtimeIsSet(true);
      }
      if (incoming.get(23)) {
        struct.contractStaff = iprot.readString();
        struct.setContractStaffIsSet(true);
      }
      if (incoming.get(24)) {
        struct.auditStartOrgCode = iprot.readString();
        struct.setAuditStartOrgCodeIsSet(true);
      }
      if (incoming.get(25)) {
        struct.auditEndOrgCode = iprot.readString();
        struct.setAuditEndOrgCodeIsSet(true);
      }
      if (incoming.get(26)) {
        struct.auditState = iprot.readString();
        struct.setAuditStateIsSet(true);
      }
      if (incoming.get(27)) {
        struct.auditOrgCode = iprot.readString();
        struct.setAuditOrgCodeIsSet(true);
      }
      if (incoming.get(28)) {
        struct.needReview = iprot.readBool();
        struct.setNeedReviewIsSet(true);
      }
      if (incoming.get(29)) {
        struct.auditStage = iprot.readString();
        struct.setAuditStageIsSet(true);
      }
      if (incoming.get(30)) {
        struct.auditTime = iprot.readI64();
        struct.setAuditTimeIsSet(true);
      }
      if (incoming.get(31)) {
        struct.auditComment = iprot.readString();
        struct.setAuditCommentIsSet(true);
      }
      if (incoming.get(32)) {
        struct.auditStaff = iprot.readString();
        struct.setAuditStaffIsSet(true);
      }
      if (incoming.get(33)) {
        struct.reviewStaff = iprot.readString();
        struct.setReviewStaffIsSet(true);
      }
      if (incoming.get(34)) {
        struct.contactName = iprot.readString();
        struct.setContactNameIsSet(true);
      }
      if (incoming.get(35)) {
        struct.contactPhone = iprot.readString();
        struct.setContactPhoneIsSet(true);
      }
      if (incoming.get(36)) {
        struct.contactEmail = iprot.readString();
        struct.setContactEmailIsSet(true);
      }
      if (incoming.get(37)) {
        struct.legalName = iprot.readString();
        struct.setLegalNameIsSet(true);
      }
      if (incoming.get(38)) {
        struct.legalCredentType = iprot.readI32();
        struct.setLegalCredentTypeIsSet(true);
      }
      if (incoming.get(39)) {
        struct.legalCredentNo = iprot.readString();
        struct.setLegalCredentNoIsSet(true);
      }
      if (incoming.get(40)) {
        struct.complaintPhone = iprot.readString();
        struct.setComplaintPhoneIsSet(true);
      }
      if (incoming.get(41)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.categoryInfoList = new ArrayList<Long>(_list10.size);
          long _elem11;
          for (int _i12 = 0; _i12 < _list10.size; ++_i12)
          {
            _elem11 = iprot.readI64();
            struct.categoryInfoList.add(_elem11);
          }
        }
        struct.setCategoryInfoListIsSet(true);
      }
      if (incoming.get(42)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.typeInfoList = new ArrayList<Long>(_list13.size);
          long _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = iprot.readI64();
            struct.typeInfoList.add(_elem14);
          }
        }
        struct.setTypeInfoListIsSet(true);
      }
      if (incoming.get(43)) {
        struct.startCreateTime = iprot.readI64();
        struct.setStartCreateTimeIsSet(true);
      }
      if (incoming.get(44)) {
        struct.endCreateTime = iprot.readI64();
        struct.setEndCreateTimeIsSet(true);
      }
      if (incoming.get(45)) {
        struct.startAuditTime = iprot.readI64();
        struct.setStartAuditTimeIsSet(true);
      }
      if (incoming.get(46)) {
        struct.endAuditTime = iprot.readI64();
        struct.setEndAuditTimeIsSet(true);
      }
      if (incoming.get(47)) {
        struct.startContractBegintime = iprot.readI64();
        struct.setStartContractBegintimeIsSet(true);
      }
      if (incoming.get(48)) {
        struct.endContractBegintime = iprot.readI64();
        struct.setEndContractBegintimeIsSet(true);
      }
      if (incoming.get(49)) {
        struct.startContractEndtime = iprot.readI64();
        struct.setStartContractEndtimeIsSet(true);
      }
      if (incoming.get(50)) {
        struct.endContractEndtime = iprot.readI64();
        struct.setEndContractEndtimeIsSet(true);
      }
      if (incoming.get(51)) {
        struct.userOrgCode = iprot.readString();
        struct.setUserOrgCodeIsSet(true);
      }
      if (incoming.get(52)) {
        struct.companyCredential = iprot.readString();
        struct.setCompanyCredentialIsSet(true);
      }
      if (incoming.get(53)) {
        struct.editAuditState = iprot.readString();
        struct.setEditAuditStateIsSet(true);
      }
      if (incoming.get(54)) {
        struct.operateTime = iprot.readI64();
        struct.setOperateTimeIsSet(true);
      }
      if (incoming.get(55)) {
        struct.operateUser = iprot.readString();
        struct.setOperateUserIsSet(true);
      }
      if (incoming.get(56)) {
        struct.isOutsource = iprot.readBool();
        struct.setIsOutsourceIsSet(true);
      }
      if (incoming.get(57)) {
        struct.companyId = iprot.readI64();
        struct.setCompanyIdIsSet(true);
      }
    }
  }

}

