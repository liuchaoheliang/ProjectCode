/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.pointsettlement;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 积分结算商户汇总详情响应Vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class PointSettlementMerchantDetailResVo implements org.apache.thrift.TBase<PointSettlementMerchantDetailResVo, PointSettlementMerchantDetailResVo._Fields>, java.io.Serializable, Cloneable, Comparable<PointSettlementMerchantDetailResVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PointSettlementMerchantDetailResVo");

  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField FROAD_POINT_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("froadPointCount", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField BANK_POINT_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("bankPointCount", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField BANK_POINT_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("bankPointRate", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ORDER_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("orderCount", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PointSettlementMerchantDetailResVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PointSettlementMerchantDetailResVoTupleSchemeFactory());
  }

  /**
   * 所属商户
   */
  public String merchantName; // required
  /**
   * 联盟积分总计
   */
  public double froadPointCount; // required
  /**
   * 银行积分总计
   */
  public double bankPointCount; // required
  /**
   * 银行积分比例
   */
  public String bankPointRate; // required
  /**
   * 订单数量
   */
  public int orderCount; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 所属商户
     */
    MERCHANT_NAME((short)1, "merchantName"),
    /**
     * 联盟积分总计
     */
    FROAD_POINT_COUNT((short)2, "froadPointCount"),
    /**
     * 银行积分总计
     */
    BANK_POINT_COUNT((short)3, "bankPointCount"),
    /**
     * 银行积分比例
     */
    BANK_POINT_RATE((short)4, "bankPointRate"),
    /**
     * 订单数量
     */
    ORDER_COUNT((short)5, "orderCount");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 2: // FROAD_POINT_COUNT
          return FROAD_POINT_COUNT;
        case 3: // BANK_POINT_COUNT
          return BANK_POINT_COUNT;
        case 4: // BANK_POINT_RATE
          return BANK_POINT_RATE;
        case 5: // ORDER_COUNT
          return ORDER_COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __FROADPOINTCOUNT_ISSET_ID = 0;
  private static final int __BANKPOINTCOUNT_ISSET_ID = 1;
  private static final int __ORDERCOUNT_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FROAD_POINT_COUNT, new org.apache.thrift.meta_data.FieldMetaData("froadPointCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BANK_POINT_COUNT, new org.apache.thrift.meta_data.FieldMetaData("bankPointCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BANK_POINT_RATE, new org.apache.thrift.meta_data.FieldMetaData("bankPointRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_COUNT, new org.apache.thrift.meta_data.FieldMetaData("orderCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PointSettlementMerchantDetailResVo.class, metaDataMap);
  }

  public PointSettlementMerchantDetailResVo() {
  }

  public PointSettlementMerchantDetailResVo(
    String merchantName,
    double froadPointCount,
    double bankPointCount,
    String bankPointRate,
    int orderCount)
  {
    this();
    this.merchantName = merchantName;
    this.froadPointCount = froadPointCount;
    setFroadPointCountIsSet(true);
    this.bankPointCount = bankPointCount;
    setBankPointCountIsSet(true);
    this.bankPointRate = bankPointRate;
    this.orderCount = orderCount;
    setOrderCountIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PointSettlementMerchantDetailResVo(PointSettlementMerchantDetailResVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    this.froadPointCount = other.froadPointCount;
    this.bankPointCount = other.bankPointCount;
    if (other.isSetBankPointRate()) {
      this.bankPointRate = other.bankPointRate;
    }
    this.orderCount = other.orderCount;
  }

  public PointSettlementMerchantDetailResVo deepCopy() {
    return new PointSettlementMerchantDetailResVo(this);
  }

  @Override
  public void clear() {
    this.merchantName = null;
    setFroadPointCountIsSet(false);
    this.froadPointCount = 0.0;
    setBankPointCountIsSet(false);
    this.bankPointCount = 0.0;
    this.bankPointRate = null;
    setOrderCountIsSet(false);
    this.orderCount = 0;
  }

  /**
   * 所属商户
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 所属商户
   */
  public PointSettlementMerchantDetailResVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 联盟积分总计
   */
  public double getFroadPointCount() {
    return this.froadPointCount;
  }

  /**
   * 联盟积分总计
   */
  public PointSettlementMerchantDetailResVo setFroadPointCount(double froadPointCount) {
    this.froadPointCount = froadPointCount;
    setFroadPointCountIsSet(true);
    return this;
  }

  public void unsetFroadPointCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FROADPOINTCOUNT_ISSET_ID);
  }

  /** Returns true if field froadPointCount is set (has been assigned a value) and false otherwise */
  public boolean isSetFroadPointCount() {
    return EncodingUtils.testBit(__isset_bitfield, __FROADPOINTCOUNT_ISSET_ID);
  }

  public void setFroadPointCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FROADPOINTCOUNT_ISSET_ID, value);
  }

  /**
   * 银行积分总计
   */
  public double getBankPointCount() {
    return this.bankPointCount;
  }

  /**
   * 银行积分总计
   */
  public PointSettlementMerchantDetailResVo setBankPointCount(double bankPointCount) {
    this.bankPointCount = bankPointCount;
    setBankPointCountIsSet(true);
    return this;
  }

  public void unsetBankPointCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BANKPOINTCOUNT_ISSET_ID);
  }

  /** Returns true if field bankPointCount is set (has been assigned a value) and false otherwise */
  public boolean isSetBankPointCount() {
    return EncodingUtils.testBit(__isset_bitfield, __BANKPOINTCOUNT_ISSET_ID);
  }

  public void setBankPointCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BANKPOINTCOUNT_ISSET_ID, value);
  }

  /**
   * 银行积分比例
   */
  public String getBankPointRate() {
    return this.bankPointRate;
  }

  /**
   * 银行积分比例
   */
  public PointSettlementMerchantDetailResVo setBankPointRate(String bankPointRate) {
    this.bankPointRate = bankPointRate;
    return this;
  }

  public void unsetBankPointRate() {
    this.bankPointRate = null;
  }

  /** Returns true if field bankPointRate is set (has been assigned a value) and false otherwise */
  public boolean isSetBankPointRate() {
    return this.bankPointRate != null;
  }

  public void setBankPointRateIsSet(boolean value) {
    if (!value) {
      this.bankPointRate = null;
    }
  }

  /**
   * 订单数量
   */
  public int getOrderCount() {
    return this.orderCount;
  }

  /**
   * 订单数量
   */
  public PointSettlementMerchantDetailResVo setOrderCount(int orderCount) {
    this.orderCount = orderCount;
    setOrderCountIsSet(true);
    return this;
  }

  public void unsetOrderCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERCOUNT_ISSET_ID);
  }

  /** Returns true if field orderCount is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderCount() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERCOUNT_ISSET_ID);
  }

  public void setOrderCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERCOUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case FROAD_POINT_COUNT:
      if (value == null) {
        unsetFroadPointCount();
      } else {
        setFroadPointCount((Double)value);
      }
      break;

    case BANK_POINT_COUNT:
      if (value == null) {
        unsetBankPointCount();
      } else {
        setBankPointCount((Double)value);
      }
      break;

    case BANK_POINT_RATE:
      if (value == null) {
        unsetBankPointRate();
      } else {
        setBankPointRate((String)value);
      }
      break;

    case ORDER_COUNT:
      if (value == null) {
        unsetOrderCount();
      } else {
        setOrderCount((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MERCHANT_NAME:
      return getMerchantName();

    case FROAD_POINT_COUNT:
      return Double.valueOf(getFroadPointCount());

    case BANK_POINT_COUNT:
      return Double.valueOf(getBankPointCount());

    case BANK_POINT_RATE:
      return getBankPointRate();

    case ORDER_COUNT:
      return Integer.valueOf(getOrderCount());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MERCHANT_NAME:
      return isSetMerchantName();
    case FROAD_POINT_COUNT:
      return isSetFroadPointCount();
    case BANK_POINT_COUNT:
      return isSetBankPointCount();
    case BANK_POINT_RATE:
      return isSetBankPointRate();
    case ORDER_COUNT:
      return isSetOrderCount();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PointSettlementMerchantDetailResVo)
      return this.equals((PointSettlementMerchantDetailResVo)that);
    return false;
  }

  public boolean equals(PointSettlementMerchantDetailResVo that) {
    if (that == null)
      return false;

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_froadPointCount = true;
    boolean that_present_froadPointCount = true;
    if (this_present_froadPointCount || that_present_froadPointCount) {
      if (!(this_present_froadPointCount && that_present_froadPointCount))
        return false;
      if (this.froadPointCount != that.froadPointCount)
        return false;
    }

    boolean this_present_bankPointCount = true;
    boolean that_present_bankPointCount = true;
    if (this_present_bankPointCount || that_present_bankPointCount) {
      if (!(this_present_bankPointCount && that_present_bankPointCount))
        return false;
      if (this.bankPointCount != that.bankPointCount)
        return false;
    }

    boolean this_present_bankPointRate = true && this.isSetBankPointRate();
    boolean that_present_bankPointRate = true && that.isSetBankPointRate();
    if (this_present_bankPointRate || that_present_bankPointRate) {
      if (!(this_present_bankPointRate && that_present_bankPointRate))
        return false;
      if (!this.bankPointRate.equals(that.bankPointRate))
        return false;
    }

    boolean this_present_orderCount = true;
    boolean that_present_orderCount = true;
    if (this_present_orderCount || that_present_orderCount) {
      if (!(this_present_orderCount && that_present_orderCount))
        return false;
      if (this.orderCount != that.orderCount)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_froadPointCount = true;
    list.add(present_froadPointCount);
    if (present_froadPointCount)
      list.add(froadPointCount);

    boolean present_bankPointCount = true;
    list.add(present_bankPointCount);
    if (present_bankPointCount)
      list.add(bankPointCount);

    boolean present_bankPointRate = true && (isSetBankPointRate());
    list.add(present_bankPointRate);
    if (present_bankPointRate)
      list.add(bankPointRate);

    boolean present_orderCount = true;
    list.add(present_orderCount);
    if (present_orderCount)
      list.add(orderCount);

    return list.hashCode();
  }

  @Override
  public int compareTo(PointSettlementMerchantDetailResVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFroadPointCount()).compareTo(other.isSetFroadPointCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFroadPointCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.froadPointCount, other.froadPointCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankPointCount()).compareTo(other.isSetBankPointCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankPointCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankPointCount, other.bankPointCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankPointRate()).compareTo(other.isSetBankPointRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankPointRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankPointRate, other.bankPointRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderCount()).compareTo(other.isSetOrderCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderCount, other.orderCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PointSettlementMerchantDetailResVo(");
    boolean first = true;

    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("froadPointCount:");
    sb.append(this.froadPointCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankPointCount:");
    sb.append(this.bankPointCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankPointRate:");
    if (this.bankPointRate == null) {
      sb.append("null");
    } else {
      sb.append(this.bankPointRate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderCount:");
    sb.append(this.orderCount);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PointSettlementMerchantDetailResVoStandardSchemeFactory implements SchemeFactory {
    public PointSettlementMerchantDetailResVoStandardScheme getScheme() {
      return new PointSettlementMerchantDetailResVoStandardScheme();
    }
  }

  private static class PointSettlementMerchantDetailResVoStandardScheme extends StandardScheme<PointSettlementMerchantDetailResVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PointSettlementMerchantDetailResVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FROAD_POINT_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.froadPointCount = iprot.readDouble();
              struct.setFroadPointCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BANK_POINT_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.bankPointCount = iprot.readDouble();
              struct.setBankPointCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BANK_POINT_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankPointRate = iprot.readString();
              struct.setBankPointRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORDER_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderCount = iprot.readI32();
              struct.setOrderCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PointSettlementMerchantDetailResVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FROAD_POINT_COUNT_FIELD_DESC);
      oprot.writeDouble(struct.froadPointCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BANK_POINT_COUNT_FIELD_DESC);
      oprot.writeDouble(struct.bankPointCount);
      oprot.writeFieldEnd();
      if (struct.bankPointRate != null) {
        oprot.writeFieldBegin(BANK_POINT_RATE_FIELD_DESC);
        oprot.writeString(struct.bankPointRate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ORDER_COUNT_FIELD_DESC);
      oprot.writeI32(struct.orderCount);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PointSettlementMerchantDetailResVoTupleSchemeFactory implements SchemeFactory {
    public PointSettlementMerchantDetailResVoTupleScheme getScheme() {
      return new PointSettlementMerchantDetailResVoTupleScheme();
    }
  }

  private static class PointSettlementMerchantDetailResVoTupleScheme extends TupleScheme<PointSettlementMerchantDetailResVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PointSettlementMerchantDetailResVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMerchantName()) {
        optionals.set(0);
      }
      if (struct.isSetFroadPointCount()) {
        optionals.set(1);
      }
      if (struct.isSetBankPointCount()) {
        optionals.set(2);
      }
      if (struct.isSetBankPointRate()) {
        optionals.set(3);
      }
      if (struct.isSetOrderCount()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetFroadPointCount()) {
        oprot.writeDouble(struct.froadPointCount);
      }
      if (struct.isSetBankPointCount()) {
        oprot.writeDouble(struct.bankPointCount);
      }
      if (struct.isSetBankPointRate()) {
        oprot.writeString(struct.bankPointRate);
      }
      if (struct.isSetOrderCount()) {
        oprot.writeI32(struct.orderCount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PointSettlementMerchantDetailResVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.froadPointCount = iprot.readDouble();
        struct.setFroadPointCountIsSet(true);
      }
      if (incoming.get(2)) {
        struct.bankPointCount = iprot.readDouble();
        struct.setBankPointCountIsSet(true);
      }
      if (incoming.get(3)) {
        struct.bankPointRate = iprot.readString();
        struct.setBankPointRateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orderCount = iprot.readI32();
        struct.setOrderCountIsSet(true);
      }
    }
  }

}

