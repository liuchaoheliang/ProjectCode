/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 广告详情
 * AdvertisingVo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class AdvertisingVo implements org.apache.thrift.TBase<AdvertisingVo, AdvertisingVo._Fields>, java.io.Serializable, Cloneable, Comparable<AdvertisingVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdvertisingVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AD_LOCATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("adLocationId", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ORDER_SN_FIELD_DESC = new org.apache.thrift.protocol.TField("orderSn", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField BEGIN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("beginTime", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField PARAM_ONE_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("paramOneValue", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField PARAM_TWO_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("paramTwoValue", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField PARAM_THREE_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("paramThreeValue", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("content", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField LINK_FIELD_DESC = new org.apache.thrift.protocol.TField("link", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("path", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField IS_BLANK_TARGE_FIELD_DESC = new org.apache.thrift.protocol.TField("isBlankTarge", org.apache.thrift.protocol.TType.BOOL, (short)15);
  private static final org.apache.thrift.protocol.TField ENABLE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("enableStatus", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField CLICK_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("clickCount", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField AD_LOCATION_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("adLocationName", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField PARAM_ONE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("paramOneType", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField PARAM_TWO_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("paramTwoType", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField PARAM_THREE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("paramThreeType", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField TERMINAL_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("terminalType", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField POSITION_PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("positionPage", org.apache.thrift.protocol.TType.STRING, (short)24);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AdvertisingVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AdvertisingVoTupleSchemeFactory());
  }

  /**
   * 主键ID
   */
  public long id; // optional
  /**
   * 客户端ID
   */
  public String clientId; // optional
  /**
   * 标题
   */
  public String title; // optional
  /**
   * 广告位ID
   */
  public long adLocationId; // optional
  /**
   * 类型 0-文本 1-图片 2-flash
   */
  public String type; // optional
  /**
   * 序号
   */
  public int orderSn; // optional
  /**
   * 开始时间
   */
  public long beginTime; // optional
  /**
   * 结束时间
   */
  public long endTime; // optional
  /**
   * 第一参数-内容
   */
  public String paramOneValue; // optional
  /**
   * 第二参数-内容
   */
  public String paramTwoValue; // optional
  /**
   * 第三参数-内容
   */
  public String paramThreeValue; // optional
  /**
   * 内容
   */
  public String content; // optional
  /**
   * 链接地址
   */
  public String link; // optional
  /**
   * 路径
   */
  public String path; // optional
  /**
   * 是否在新窗打开
   */
  public boolean isBlankTarge; // optional
  /**
   * 启用状态 0-启用 1-禁用 2-新增审核中 3-编辑审核中 4-禁用审核中
   */
  public String enableStatus; // optional
  /**
   * 点击次数
   */
  public int clickCount; // optional
  /**
   * 描述
   */
  public String description; // optional
  /**
   * 广告位名称
   */
  public String adLocationName; // optional
  /**
   * 第一附加参数类型 1-地区 2-商户类型 3-商品类型
   */
  public String paramOneType; // optional
  /**
   * 第二附加参数类型 1-地区 2-商户类型 3-商品类型
   */
  public String paramTwoType; // optional
  /**
   * 第三附加参数类型 1-地区 2-商户类型 3-商品类型
   */
  public String paramThreeType; // optional
  /**
   * 终端位置
   */
  public String terminalType; // optional
  /**
   * 页面标识
   */
  public String positionPage; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键ID
     */
    ID((short)1, "id"),
    /**
     * 客户端ID
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 标题
     */
    TITLE((short)3, "title"),
    /**
     * 广告位ID
     */
    AD_LOCATION_ID((short)4, "adLocationId"),
    /**
     * 类型 0-文本 1-图片 2-flash
     */
    TYPE((short)5, "type"),
    /**
     * 序号
     */
    ORDER_SN((short)6, "orderSn"),
    /**
     * 开始时间
     */
    BEGIN_TIME((short)7, "beginTime"),
    /**
     * 结束时间
     */
    END_TIME((short)8, "endTime"),
    /**
     * 第一参数-内容
     */
    PARAM_ONE_VALUE((short)9, "paramOneValue"),
    /**
     * 第二参数-内容
     */
    PARAM_TWO_VALUE((short)10, "paramTwoValue"),
    /**
     * 第三参数-内容
     */
    PARAM_THREE_VALUE((short)11, "paramThreeValue"),
    /**
     * 内容
     */
    CONTENT((short)12, "content"),
    /**
     * 链接地址
     */
    LINK((short)13, "link"),
    /**
     * 路径
     */
    PATH((short)14, "path"),
    /**
     * 是否在新窗打开
     */
    IS_BLANK_TARGE((short)15, "isBlankTarge"),
    /**
     * 启用状态 0-启用 1-禁用 2-新增审核中 3-编辑审核中 4-禁用审核中
     */
    ENABLE_STATUS((short)16, "enableStatus"),
    /**
     * 点击次数
     */
    CLICK_COUNT((short)17, "clickCount"),
    /**
     * 描述
     */
    DESCRIPTION((short)18, "description"),
    /**
     * 广告位名称
     */
    AD_LOCATION_NAME((short)19, "adLocationName"),
    /**
     * 第一附加参数类型 1-地区 2-商户类型 3-商品类型
     */
    PARAM_ONE_TYPE((short)20, "paramOneType"),
    /**
     * 第二附加参数类型 1-地区 2-商户类型 3-商品类型
     */
    PARAM_TWO_TYPE((short)21, "paramTwoType"),
    /**
     * 第三附加参数类型 1-地区 2-商户类型 3-商品类型
     */
    PARAM_THREE_TYPE((short)22, "paramThreeType"),
    /**
     * 终端位置
     */
    TERMINAL_TYPE((short)23, "terminalType"),
    /**
     * 页面标识
     */
    POSITION_PAGE((short)24, "positionPage");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // TITLE
          return TITLE;
        case 4: // AD_LOCATION_ID
          return AD_LOCATION_ID;
        case 5: // TYPE
          return TYPE;
        case 6: // ORDER_SN
          return ORDER_SN;
        case 7: // BEGIN_TIME
          return BEGIN_TIME;
        case 8: // END_TIME
          return END_TIME;
        case 9: // PARAM_ONE_VALUE
          return PARAM_ONE_VALUE;
        case 10: // PARAM_TWO_VALUE
          return PARAM_TWO_VALUE;
        case 11: // PARAM_THREE_VALUE
          return PARAM_THREE_VALUE;
        case 12: // CONTENT
          return CONTENT;
        case 13: // LINK
          return LINK;
        case 14: // PATH
          return PATH;
        case 15: // IS_BLANK_TARGE
          return IS_BLANK_TARGE;
        case 16: // ENABLE_STATUS
          return ENABLE_STATUS;
        case 17: // CLICK_COUNT
          return CLICK_COUNT;
        case 18: // DESCRIPTION
          return DESCRIPTION;
        case 19: // AD_LOCATION_NAME
          return AD_LOCATION_NAME;
        case 20: // PARAM_ONE_TYPE
          return PARAM_ONE_TYPE;
        case 21: // PARAM_TWO_TYPE
          return PARAM_TWO_TYPE;
        case 22: // PARAM_THREE_TYPE
          return PARAM_THREE_TYPE;
        case 23: // TERMINAL_TYPE
          return TERMINAL_TYPE;
        case 24: // POSITION_PAGE
          return POSITION_PAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __ADLOCATIONID_ISSET_ID = 1;
  private static final int __ORDERSN_ISSET_ID = 2;
  private static final int __BEGINTIME_ISSET_ID = 3;
  private static final int __ENDTIME_ISSET_ID = 4;
  private static final int __ISBLANKTARGE_ISSET_ID = 5;
  private static final int __CLICKCOUNT_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CLIENT_ID,_Fields.TITLE,_Fields.AD_LOCATION_ID,_Fields.TYPE,_Fields.ORDER_SN,_Fields.BEGIN_TIME,_Fields.END_TIME,_Fields.PARAM_ONE_VALUE,_Fields.PARAM_TWO_VALUE,_Fields.PARAM_THREE_VALUE,_Fields.CONTENT,_Fields.LINK,_Fields.PATH,_Fields.IS_BLANK_TARGE,_Fields.ENABLE_STATUS,_Fields.CLICK_COUNT,_Fields.DESCRIPTION,_Fields.AD_LOCATION_NAME,_Fields.PARAM_ONE_TYPE,_Fields.PARAM_TWO_TYPE,_Fields.PARAM_THREE_TYPE,_Fields.TERMINAL_TYPE,_Fields.POSITION_PAGE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AD_LOCATION_ID, new org.apache.thrift.meta_data.FieldMetaData("adLocationId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_SN, new org.apache.thrift.meta_data.FieldMetaData("orderSn", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BEGIN_TIME, new org.apache.thrift.meta_data.FieldMetaData("beginTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PARAM_ONE_VALUE, new org.apache.thrift.meta_data.FieldMetaData("paramOneValue", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARAM_TWO_VALUE, new org.apache.thrift.meta_data.FieldMetaData("paramTwoValue", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARAM_THREE_VALUE, new org.apache.thrift.meta_data.FieldMetaData("paramThreeValue", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTENT, new org.apache.thrift.meta_data.FieldMetaData("content", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LINK, new org.apache.thrift.meta_data.FieldMetaData("link", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PATH, new org.apache.thrift.meta_data.FieldMetaData("path", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_BLANK_TARGE, new org.apache.thrift.meta_data.FieldMetaData("isBlankTarge", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ENABLE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("enableStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLICK_COUNT, new org.apache.thrift.meta_data.FieldMetaData("clickCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AD_LOCATION_NAME, new org.apache.thrift.meta_data.FieldMetaData("adLocationName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARAM_ONE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("paramOneType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARAM_TWO_TYPE, new org.apache.thrift.meta_data.FieldMetaData("paramTwoType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARAM_THREE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("paramThreeType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TERMINAL_TYPE, new org.apache.thrift.meta_data.FieldMetaData("terminalType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_PAGE, new org.apache.thrift.meta_data.FieldMetaData("positionPage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdvertisingVo.class, metaDataMap);
  }

  public AdvertisingVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AdvertisingVo(AdvertisingVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    this.adLocationId = other.adLocationId;
    if (other.isSetType()) {
      this.type = other.type;
    }
    this.orderSn = other.orderSn;
    this.beginTime = other.beginTime;
    this.endTime = other.endTime;
    if (other.isSetParamOneValue()) {
      this.paramOneValue = other.paramOneValue;
    }
    if (other.isSetParamTwoValue()) {
      this.paramTwoValue = other.paramTwoValue;
    }
    if (other.isSetParamThreeValue()) {
      this.paramThreeValue = other.paramThreeValue;
    }
    if (other.isSetContent()) {
      this.content = other.content;
    }
    if (other.isSetLink()) {
      this.link = other.link;
    }
    if (other.isSetPath()) {
      this.path = other.path;
    }
    this.isBlankTarge = other.isBlankTarge;
    if (other.isSetEnableStatus()) {
      this.enableStatus = other.enableStatus;
    }
    this.clickCount = other.clickCount;
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetAdLocationName()) {
      this.adLocationName = other.adLocationName;
    }
    if (other.isSetParamOneType()) {
      this.paramOneType = other.paramOneType;
    }
    if (other.isSetParamTwoType()) {
      this.paramTwoType = other.paramTwoType;
    }
    if (other.isSetParamThreeType()) {
      this.paramThreeType = other.paramThreeType;
    }
    if (other.isSetTerminalType()) {
      this.terminalType = other.terminalType;
    }
    if (other.isSetPositionPage()) {
      this.positionPage = other.positionPage;
    }
  }

  public AdvertisingVo deepCopy() {
    return new AdvertisingVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.clientId = null;
    this.title = null;
    setAdLocationIdIsSet(false);
    this.adLocationId = 0;
    this.type = null;
    setOrderSnIsSet(false);
    this.orderSn = 0;
    setBeginTimeIsSet(false);
    this.beginTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    this.paramOneValue = null;
    this.paramTwoValue = null;
    this.paramThreeValue = null;
    this.content = null;
    this.link = null;
    this.path = null;
    setIsBlankTargeIsSet(false);
    this.isBlankTarge = false;
    this.enableStatus = null;
    setClickCountIsSet(false);
    this.clickCount = 0;
    this.description = null;
    this.adLocationName = null;
    this.paramOneType = null;
    this.paramTwoType = null;
    this.paramThreeType = null;
    this.terminalType = null;
    this.positionPage = null;
  }

  /**
   * 主键ID
   */
  public long getId() {
    return this.id;
  }

  /**
   * 主键ID
   */
  public AdvertisingVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public AdvertisingVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 标题
   */
  public String getTitle() {
    return this.title;
  }

  /**
   * 标题
   */
  public AdvertisingVo setTitle(String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  /**
   * 广告位ID
   */
  public long getAdLocationId() {
    return this.adLocationId;
  }

  /**
   * 广告位ID
   */
  public AdvertisingVo setAdLocationId(long adLocationId) {
    this.adLocationId = adLocationId;
    setAdLocationIdIsSet(true);
    return this;
  }

  public void unsetAdLocationId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ADLOCATIONID_ISSET_ID);
  }

  /** Returns true if field adLocationId is set (has been assigned a value) and false otherwise */
  public boolean isSetAdLocationId() {
    return EncodingUtils.testBit(__isset_bitfield, __ADLOCATIONID_ISSET_ID);
  }

  public void setAdLocationIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ADLOCATIONID_ISSET_ID, value);
  }

  /**
   * 类型 0-文本 1-图片 2-flash
   */
  public String getType() {
    return this.type;
  }

  /**
   * 类型 0-文本 1-图片 2-flash
   */
  public AdvertisingVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 序号
   */
  public int getOrderSn() {
    return this.orderSn;
  }

  /**
   * 序号
   */
  public AdvertisingVo setOrderSn(int orderSn) {
    this.orderSn = orderSn;
    setOrderSnIsSet(true);
    return this;
  }

  public void unsetOrderSn() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERSN_ISSET_ID);
  }

  /** Returns true if field orderSn is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderSn() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERSN_ISSET_ID);
  }

  public void setOrderSnIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERSN_ISSET_ID, value);
  }

  /**
   * 开始时间
   */
  public long getBeginTime() {
    return this.beginTime;
  }

  /**
   * 开始时间
   */
  public AdvertisingVo setBeginTime(long beginTime) {
    this.beginTime = beginTime;
    setBeginTimeIsSet(true);
    return this;
  }

  public void unsetBeginTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BEGINTIME_ISSET_ID);
  }

  /** Returns true if field beginTime is set (has been assigned a value) and false otherwise */
  public boolean isSetBeginTime() {
    return EncodingUtils.testBit(__isset_bitfield, __BEGINTIME_ISSET_ID);
  }

  public void setBeginTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BEGINTIME_ISSET_ID, value);
  }

  /**
   * 结束时间
   */
  public long getEndTime() {
    return this.endTime;
  }

  /**
   * 结束时间
   */
  public AdvertisingVo setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  /**
   * 第一参数-内容
   */
  public String getParamOneValue() {
    return this.paramOneValue;
  }

  /**
   * 第一参数-内容
   */
  public AdvertisingVo setParamOneValue(String paramOneValue) {
    this.paramOneValue = paramOneValue;
    return this;
  }

  public void unsetParamOneValue() {
    this.paramOneValue = null;
  }

  /** Returns true if field paramOneValue is set (has been assigned a value) and false otherwise */
  public boolean isSetParamOneValue() {
    return this.paramOneValue != null;
  }

  public void setParamOneValueIsSet(boolean value) {
    if (!value) {
      this.paramOneValue = null;
    }
  }

  /**
   * 第二参数-内容
   */
  public String getParamTwoValue() {
    return this.paramTwoValue;
  }

  /**
   * 第二参数-内容
   */
  public AdvertisingVo setParamTwoValue(String paramTwoValue) {
    this.paramTwoValue = paramTwoValue;
    return this;
  }

  public void unsetParamTwoValue() {
    this.paramTwoValue = null;
  }

  /** Returns true if field paramTwoValue is set (has been assigned a value) and false otherwise */
  public boolean isSetParamTwoValue() {
    return this.paramTwoValue != null;
  }

  public void setParamTwoValueIsSet(boolean value) {
    if (!value) {
      this.paramTwoValue = null;
    }
  }

  /**
   * 第三参数-内容
   */
  public String getParamThreeValue() {
    return this.paramThreeValue;
  }

  /**
   * 第三参数-内容
   */
  public AdvertisingVo setParamThreeValue(String paramThreeValue) {
    this.paramThreeValue = paramThreeValue;
    return this;
  }

  public void unsetParamThreeValue() {
    this.paramThreeValue = null;
  }

  /** Returns true if field paramThreeValue is set (has been assigned a value) and false otherwise */
  public boolean isSetParamThreeValue() {
    return this.paramThreeValue != null;
  }

  public void setParamThreeValueIsSet(boolean value) {
    if (!value) {
      this.paramThreeValue = null;
    }
  }

  /**
   * 内容
   */
  public String getContent() {
    return this.content;
  }

  /**
   * 内容
   */
  public AdvertisingVo setContent(String content) {
    this.content = content;
    return this;
  }

  public void unsetContent() {
    this.content = null;
  }

  /** Returns true if field content is set (has been assigned a value) and false otherwise */
  public boolean isSetContent() {
    return this.content != null;
  }

  public void setContentIsSet(boolean value) {
    if (!value) {
      this.content = null;
    }
  }

  /**
   * 链接地址
   */
  public String getLink() {
    return this.link;
  }

  /**
   * 链接地址
   */
  public AdvertisingVo setLink(String link) {
    this.link = link;
    return this;
  }

  public void unsetLink() {
    this.link = null;
  }

  /** Returns true if field link is set (has been assigned a value) and false otherwise */
  public boolean isSetLink() {
    return this.link != null;
  }

  public void setLinkIsSet(boolean value) {
    if (!value) {
      this.link = null;
    }
  }

  /**
   * 路径
   */
  public String getPath() {
    return this.path;
  }

  /**
   * 路径
   */
  public AdvertisingVo setPath(String path) {
    this.path = path;
    return this;
  }

  public void unsetPath() {
    this.path = null;
  }

  /** Returns true if field path is set (has been assigned a value) and false otherwise */
  public boolean isSetPath() {
    return this.path != null;
  }

  public void setPathIsSet(boolean value) {
    if (!value) {
      this.path = null;
    }
  }

  /**
   * 是否在新窗打开
   */
  public boolean isIsBlankTarge() {
    return this.isBlankTarge;
  }

  /**
   * 是否在新窗打开
   */
  public AdvertisingVo setIsBlankTarge(boolean isBlankTarge) {
    this.isBlankTarge = isBlankTarge;
    setIsBlankTargeIsSet(true);
    return this;
  }

  public void unsetIsBlankTarge() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISBLANKTARGE_ISSET_ID);
  }

  /** Returns true if field isBlankTarge is set (has been assigned a value) and false otherwise */
  public boolean isSetIsBlankTarge() {
    return EncodingUtils.testBit(__isset_bitfield, __ISBLANKTARGE_ISSET_ID);
  }

  public void setIsBlankTargeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISBLANKTARGE_ISSET_ID, value);
  }

  /**
   * 启用状态 0-启用 1-禁用 2-新增审核中 3-编辑审核中 4-禁用审核中
   */
  public String getEnableStatus() {
    return this.enableStatus;
  }

  /**
   * 启用状态 0-启用 1-禁用 2-新增审核中 3-编辑审核中 4-禁用审核中
   */
  public AdvertisingVo setEnableStatus(String enableStatus) {
    this.enableStatus = enableStatus;
    return this;
  }

  public void unsetEnableStatus() {
    this.enableStatus = null;
  }

  /** Returns true if field enableStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetEnableStatus() {
    return this.enableStatus != null;
  }

  public void setEnableStatusIsSet(boolean value) {
    if (!value) {
      this.enableStatus = null;
    }
  }

  /**
   * 点击次数
   */
  public int getClickCount() {
    return this.clickCount;
  }

  /**
   * 点击次数
   */
  public AdvertisingVo setClickCount(int clickCount) {
    this.clickCount = clickCount;
    setClickCountIsSet(true);
    return this;
  }

  public void unsetClickCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CLICKCOUNT_ISSET_ID);
  }

  /** Returns true if field clickCount is set (has been assigned a value) and false otherwise */
  public boolean isSetClickCount() {
    return EncodingUtils.testBit(__isset_bitfield, __CLICKCOUNT_ISSET_ID);
  }

  public void setClickCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CLICKCOUNT_ISSET_ID, value);
  }

  /**
   * 描述
   */
  public String getDescription() {
    return this.description;
  }

  /**
   * 描述
   */
  public AdvertisingVo setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  /**
   * 广告位名称
   */
  public String getAdLocationName() {
    return this.adLocationName;
  }

  /**
   * 广告位名称
   */
  public AdvertisingVo setAdLocationName(String adLocationName) {
    this.adLocationName = adLocationName;
    return this;
  }

  public void unsetAdLocationName() {
    this.adLocationName = null;
  }

  /** Returns true if field adLocationName is set (has been assigned a value) and false otherwise */
  public boolean isSetAdLocationName() {
    return this.adLocationName != null;
  }

  public void setAdLocationNameIsSet(boolean value) {
    if (!value) {
      this.adLocationName = null;
    }
  }

  /**
   * 第一附加参数类型 1-地区 2-商户类型 3-商品类型
   */
  public String getParamOneType() {
    return this.paramOneType;
  }

  /**
   * 第一附加参数类型 1-地区 2-商户类型 3-商品类型
   */
  public AdvertisingVo setParamOneType(String paramOneType) {
    this.paramOneType = paramOneType;
    return this;
  }

  public void unsetParamOneType() {
    this.paramOneType = null;
  }

  /** Returns true if field paramOneType is set (has been assigned a value) and false otherwise */
  public boolean isSetParamOneType() {
    return this.paramOneType != null;
  }

  public void setParamOneTypeIsSet(boolean value) {
    if (!value) {
      this.paramOneType = null;
    }
  }

  /**
   * 第二附加参数类型 1-地区 2-商户类型 3-商品类型
   */
  public String getParamTwoType() {
    return this.paramTwoType;
  }

  /**
   * 第二附加参数类型 1-地区 2-商户类型 3-商品类型
   */
  public AdvertisingVo setParamTwoType(String paramTwoType) {
    this.paramTwoType = paramTwoType;
    return this;
  }

  public void unsetParamTwoType() {
    this.paramTwoType = null;
  }

  /** Returns true if field paramTwoType is set (has been assigned a value) and false otherwise */
  public boolean isSetParamTwoType() {
    return this.paramTwoType != null;
  }

  public void setParamTwoTypeIsSet(boolean value) {
    if (!value) {
      this.paramTwoType = null;
    }
  }

  /**
   * 第三附加参数类型 1-地区 2-商户类型 3-商品类型
   */
  public String getParamThreeType() {
    return this.paramThreeType;
  }

  /**
   * 第三附加参数类型 1-地区 2-商户类型 3-商品类型
   */
  public AdvertisingVo setParamThreeType(String paramThreeType) {
    this.paramThreeType = paramThreeType;
    return this;
  }

  public void unsetParamThreeType() {
    this.paramThreeType = null;
  }

  /** Returns true if field paramThreeType is set (has been assigned a value) and false otherwise */
  public boolean isSetParamThreeType() {
    return this.paramThreeType != null;
  }

  public void setParamThreeTypeIsSet(boolean value) {
    if (!value) {
      this.paramThreeType = null;
    }
  }

  /**
   * 终端位置
   */
  public String getTerminalType() {
    return this.terminalType;
  }

  /**
   * 终端位置
   */
  public AdvertisingVo setTerminalType(String terminalType) {
    this.terminalType = terminalType;
    return this;
  }

  public void unsetTerminalType() {
    this.terminalType = null;
  }

  /** Returns true if field terminalType is set (has been assigned a value) and false otherwise */
  public boolean isSetTerminalType() {
    return this.terminalType != null;
  }

  public void setTerminalTypeIsSet(boolean value) {
    if (!value) {
      this.terminalType = null;
    }
  }

  /**
   * 页面标识
   */
  public String getPositionPage() {
    return this.positionPage;
  }

  /**
   * 页面标识
   */
  public AdvertisingVo setPositionPage(String positionPage) {
    this.positionPage = positionPage;
    return this;
  }

  public void unsetPositionPage() {
    this.positionPage = null;
  }

  /** Returns true if field positionPage is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionPage() {
    return this.positionPage != null;
  }

  public void setPositionPageIsSet(boolean value) {
    if (!value) {
      this.positionPage = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case AD_LOCATION_ID:
      if (value == null) {
        unsetAdLocationId();
      } else {
        setAdLocationId((Long)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case ORDER_SN:
      if (value == null) {
        unsetOrderSn();
      } else {
        setOrderSn((Integer)value);
      }
      break;

    case BEGIN_TIME:
      if (value == null) {
        unsetBeginTime();
      } else {
        setBeginTime((Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((Long)value);
      }
      break;

    case PARAM_ONE_VALUE:
      if (value == null) {
        unsetParamOneValue();
      } else {
        setParamOneValue((String)value);
      }
      break;

    case PARAM_TWO_VALUE:
      if (value == null) {
        unsetParamTwoValue();
      } else {
        setParamTwoValue((String)value);
      }
      break;

    case PARAM_THREE_VALUE:
      if (value == null) {
        unsetParamThreeValue();
      } else {
        setParamThreeValue((String)value);
      }
      break;

    case CONTENT:
      if (value == null) {
        unsetContent();
      } else {
        setContent((String)value);
      }
      break;

    case LINK:
      if (value == null) {
        unsetLink();
      } else {
        setLink((String)value);
      }
      break;

    case PATH:
      if (value == null) {
        unsetPath();
      } else {
        setPath((String)value);
      }
      break;

    case IS_BLANK_TARGE:
      if (value == null) {
        unsetIsBlankTarge();
      } else {
        setIsBlankTarge((Boolean)value);
      }
      break;

    case ENABLE_STATUS:
      if (value == null) {
        unsetEnableStatus();
      } else {
        setEnableStatus((String)value);
      }
      break;

    case CLICK_COUNT:
      if (value == null) {
        unsetClickCount();
      } else {
        setClickCount((Integer)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case AD_LOCATION_NAME:
      if (value == null) {
        unsetAdLocationName();
      } else {
        setAdLocationName((String)value);
      }
      break;

    case PARAM_ONE_TYPE:
      if (value == null) {
        unsetParamOneType();
      } else {
        setParamOneType((String)value);
      }
      break;

    case PARAM_TWO_TYPE:
      if (value == null) {
        unsetParamTwoType();
      } else {
        setParamTwoType((String)value);
      }
      break;

    case PARAM_THREE_TYPE:
      if (value == null) {
        unsetParamThreeType();
      } else {
        setParamThreeType((String)value);
      }
      break;

    case TERMINAL_TYPE:
      if (value == null) {
        unsetTerminalType();
      } else {
        setTerminalType((String)value);
      }
      break;

    case POSITION_PAGE:
      if (value == null) {
        unsetPositionPage();
      } else {
        setPositionPage((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CLIENT_ID:
      return getClientId();

    case TITLE:
      return getTitle();

    case AD_LOCATION_ID:
      return Long.valueOf(getAdLocationId());

    case TYPE:
      return getType();

    case ORDER_SN:
      return Integer.valueOf(getOrderSn());

    case BEGIN_TIME:
      return Long.valueOf(getBeginTime());

    case END_TIME:
      return Long.valueOf(getEndTime());

    case PARAM_ONE_VALUE:
      return getParamOneValue();

    case PARAM_TWO_VALUE:
      return getParamTwoValue();

    case PARAM_THREE_VALUE:
      return getParamThreeValue();

    case CONTENT:
      return getContent();

    case LINK:
      return getLink();

    case PATH:
      return getPath();

    case IS_BLANK_TARGE:
      return Boolean.valueOf(isIsBlankTarge());

    case ENABLE_STATUS:
      return getEnableStatus();

    case CLICK_COUNT:
      return Integer.valueOf(getClickCount());

    case DESCRIPTION:
      return getDescription();

    case AD_LOCATION_NAME:
      return getAdLocationName();

    case PARAM_ONE_TYPE:
      return getParamOneType();

    case PARAM_TWO_TYPE:
      return getParamTwoType();

    case PARAM_THREE_TYPE:
      return getParamThreeType();

    case TERMINAL_TYPE:
      return getTerminalType();

    case POSITION_PAGE:
      return getPositionPage();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CLIENT_ID:
      return isSetClientId();
    case TITLE:
      return isSetTitle();
    case AD_LOCATION_ID:
      return isSetAdLocationId();
    case TYPE:
      return isSetType();
    case ORDER_SN:
      return isSetOrderSn();
    case BEGIN_TIME:
      return isSetBeginTime();
    case END_TIME:
      return isSetEndTime();
    case PARAM_ONE_VALUE:
      return isSetParamOneValue();
    case PARAM_TWO_VALUE:
      return isSetParamTwoValue();
    case PARAM_THREE_VALUE:
      return isSetParamThreeValue();
    case CONTENT:
      return isSetContent();
    case LINK:
      return isSetLink();
    case PATH:
      return isSetPath();
    case IS_BLANK_TARGE:
      return isSetIsBlankTarge();
    case ENABLE_STATUS:
      return isSetEnableStatus();
    case CLICK_COUNT:
      return isSetClickCount();
    case DESCRIPTION:
      return isSetDescription();
    case AD_LOCATION_NAME:
      return isSetAdLocationName();
    case PARAM_ONE_TYPE:
      return isSetParamOneType();
    case PARAM_TWO_TYPE:
      return isSetParamTwoType();
    case PARAM_THREE_TYPE:
      return isSetParamThreeType();
    case TERMINAL_TYPE:
      return isSetTerminalType();
    case POSITION_PAGE:
      return isSetPositionPage();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AdvertisingVo)
      return this.equals((AdvertisingVo)that);
    return false;
  }

  public boolean equals(AdvertisingVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_adLocationId = true && this.isSetAdLocationId();
    boolean that_present_adLocationId = true && that.isSetAdLocationId();
    if (this_present_adLocationId || that_present_adLocationId) {
      if (!(this_present_adLocationId && that_present_adLocationId))
        return false;
      if (this.adLocationId != that.adLocationId)
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_orderSn = true && this.isSetOrderSn();
    boolean that_present_orderSn = true && that.isSetOrderSn();
    if (this_present_orderSn || that_present_orderSn) {
      if (!(this_present_orderSn && that_present_orderSn))
        return false;
      if (this.orderSn != that.orderSn)
        return false;
    }

    boolean this_present_beginTime = true && this.isSetBeginTime();
    boolean that_present_beginTime = true && that.isSetBeginTime();
    if (this_present_beginTime || that_present_beginTime) {
      if (!(this_present_beginTime && that_present_beginTime))
        return false;
      if (this.beginTime != that.beginTime)
        return false;
    }

    boolean this_present_endTime = true && this.isSetEndTime();
    boolean that_present_endTime = true && that.isSetEndTime();
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_paramOneValue = true && this.isSetParamOneValue();
    boolean that_present_paramOneValue = true && that.isSetParamOneValue();
    if (this_present_paramOneValue || that_present_paramOneValue) {
      if (!(this_present_paramOneValue && that_present_paramOneValue))
        return false;
      if (!this.paramOneValue.equals(that.paramOneValue))
        return false;
    }

    boolean this_present_paramTwoValue = true && this.isSetParamTwoValue();
    boolean that_present_paramTwoValue = true && that.isSetParamTwoValue();
    if (this_present_paramTwoValue || that_present_paramTwoValue) {
      if (!(this_present_paramTwoValue && that_present_paramTwoValue))
        return false;
      if (!this.paramTwoValue.equals(that.paramTwoValue))
        return false;
    }

    boolean this_present_paramThreeValue = true && this.isSetParamThreeValue();
    boolean that_present_paramThreeValue = true && that.isSetParamThreeValue();
    if (this_present_paramThreeValue || that_present_paramThreeValue) {
      if (!(this_present_paramThreeValue && that_present_paramThreeValue))
        return false;
      if (!this.paramThreeValue.equals(that.paramThreeValue))
        return false;
    }

    boolean this_present_content = true && this.isSetContent();
    boolean that_present_content = true && that.isSetContent();
    if (this_present_content || that_present_content) {
      if (!(this_present_content && that_present_content))
        return false;
      if (!this.content.equals(that.content))
        return false;
    }

    boolean this_present_link = true && this.isSetLink();
    boolean that_present_link = true && that.isSetLink();
    if (this_present_link || that_present_link) {
      if (!(this_present_link && that_present_link))
        return false;
      if (!this.link.equals(that.link))
        return false;
    }

    boolean this_present_path = true && this.isSetPath();
    boolean that_present_path = true && that.isSetPath();
    if (this_present_path || that_present_path) {
      if (!(this_present_path && that_present_path))
        return false;
      if (!this.path.equals(that.path))
        return false;
    }

    boolean this_present_isBlankTarge = true && this.isSetIsBlankTarge();
    boolean that_present_isBlankTarge = true && that.isSetIsBlankTarge();
    if (this_present_isBlankTarge || that_present_isBlankTarge) {
      if (!(this_present_isBlankTarge && that_present_isBlankTarge))
        return false;
      if (this.isBlankTarge != that.isBlankTarge)
        return false;
    }

    boolean this_present_enableStatus = true && this.isSetEnableStatus();
    boolean that_present_enableStatus = true && that.isSetEnableStatus();
    if (this_present_enableStatus || that_present_enableStatus) {
      if (!(this_present_enableStatus && that_present_enableStatus))
        return false;
      if (!this.enableStatus.equals(that.enableStatus))
        return false;
    }

    boolean this_present_clickCount = true && this.isSetClickCount();
    boolean that_present_clickCount = true && that.isSetClickCount();
    if (this_present_clickCount || that_present_clickCount) {
      if (!(this_present_clickCount && that_present_clickCount))
        return false;
      if (this.clickCount != that.clickCount)
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_adLocationName = true && this.isSetAdLocationName();
    boolean that_present_adLocationName = true && that.isSetAdLocationName();
    if (this_present_adLocationName || that_present_adLocationName) {
      if (!(this_present_adLocationName && that_present_adLocationName))
        return false;
      if (!this.adLocationName.equals(that.adLocationName))
        return false;
    }

    boolean this_present_paramOneType = true && this.isSetParamOneType();
    boolean that_present_paramOneType = true && that.isSetParamOneType();
    if (this_present_paramOneType || that_present_paramOneType) {
      if (!(this_present_paramOneType && that_present_paramOneType))
        return false;
      if (!this.paramOneType.equals(that.paramOneType))
        return false;
    }

    boolean this_present_paramTwoType = true && this.isSetParamTwoType();
    boolean that_present_paramTwoType = true && that.isSetParamTwoType();
    if (this_present_paramTwoType || that_present_paramTwoType) {
      if (!(this_present_paramTwoType && that_present_paramTwoType))
        return false;
      if (!this.paramTwoType.equals(that.paramTwoType))
        return false;
    }

    boolean this_present_paramThreeType = true && this.isSetParamThreeType();
    boolean that_present_paramThreeType = true && that.isSetParamThreeType();
    if (this_present_paramThreeType || that_present_paramThreeType) {
      if (!(this_present_paramThreeType && that_present_paramThreeType))
        return false;
      if (!this.paramThreeType.equals(that.paramThreeType))
        return false;
    }

    boolean this_present_terminalType = true && this.isSetTerminalType();
    boolean that_present_terminalType = true && that.isSetTerminalType();
    if (this_present_terminalType || that_present_terminalType) {
      if (!(this_present_terminalType && that_present_terminalType))
        return false;
      if (!this.terminalType.equals(that.terminalType))
        return false;
    }

    boolean this_present_positionPage = true && this.isSetPositionPage();
    boolean that_present_positionPage = true && that.isSetPositionPage();
    if (this_present_positionPage || that_present_positionPage) {
      if (!(this_present_positionPage && that_present_positionPage))
        return false;
      if (!this.positionPage.equals(that.positionPage))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_title = true && (isSetTitle());
    list.add(present_title);
    if (present_title)
      list.add(title);

    boolean present_adLocationId = true && (isSetAdLocationId());
    list.add(present_adLocationId);
    if (present_adLocationId)
      list.add(adLocationId);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_orderSn = true && (isSetOrderSn());
    list.add(present_orderSn);
    if (present_orderSn)
      list.add(orderSn);

    boolean present_beginTime = true && (isSetBeginTime());
    list.add(present_beginTime);
    if (present_beginTime)
      list.add(beginTime);

    boolean present_endTime = true && (isSetEndTime());
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    boolean present_paramOneValue = true && (isSetParamOneValue());
    list.add(present_paramOneValue);
    if (present_paramOneValue)
      list.add(paramOneValue);

    boolean present_paramTwoValue = true && (isSetParamTwoValue());
    list.add(present_paramTwoValue);
    if (present_paramTwoValue)
      list.add(paramTwoValue);

    boolean present_paramThreeValue = true && (isSetParamThreeValue());
    list.add(present_paramThreeValue);
    if (present_paramThreeValue)
      list.add(paramThreeValue);

    boolean present_content = true && (isSetContent());
    list.add(present_content);
    if (present_content)
      list.add(content);

    boolean present_link = true && (isSetLink());
    list.add(present_link);
    if (present_link)
      list.add(link);

    boolean present_path = true && (isSetPath());
    list.add(present_path);
    if (present_path)
      list.add(path);

    boolean present_isBlankTarge = true && (isSetIsBlankTarge());
    list.add(present_isBlankTarge);
    if (present_isBlankTarge)
      list.add(isBlankTarge);

    boolean present_enableStatus = true && (isSetEnableStatus());
    list.add(present_enableStatus);
    if (present_enableStatus)
      list.add(enableStatus);

    boolean present_clickCount = true && (isSetClickCount());
    list.add(present_clickCount);
    if (present_clickCount)
      list.add(clickCount);

    boolean present_description = true && (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    boolean present_adLocationName = true && (isSetAdLocationName());
    list.add(present_adLocationName);
    if (present_adLocationName)
      list.add(adLocationName);

    boolean present_paramOneType = true && (isSetParamOneType());
    list.add(present_paramOneType);
    if (present_paramOneType)
      list.add(paramOneType);

    boolean present_paramTwoType = true && (isSetParamTwoType());
    list.add(present_paramTwoType);
    if (present_paramTwoType)
      list.add(paramTwoType);

    boolean present_paramThreeType = true && (isSetParamThreeType());
    list.add(present_paramThreeType);
    if (present_paramThreeType)
      list.add(paramThreeType);

    boolean present_terminalType = true && (isSetTerminalType());
    list.add(present_terminalType);
    if (present_terminalType)
      list.add(terminalType);

    boolean present_positionPage = true && (isSetPositionPage());
    list.add(present_positionPage);
    if (present_positionPage)
      list.add(positionPage);

    return list.hashCode();
  }

  @Override
  public int compareTo(AdvertisingVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdLocationId()).compareTo(other.isSetAdLocationId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdLocationId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adLocationId, other.adLocationId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderSn()).compareTo(other.isSetOrderSn());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderSn()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderSn, other.orderSn);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBeginTime()).compareTo(other.isSetBeginTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBeginTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.beginTime, other.beginTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParamOneValue()).compareTo(other.isSetParamOneValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParamOneValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paramOneValue, other.paramOneValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParamTwoValue()).compareTo(other.isSetParamTwoValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParamTwoValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paramTwoValue, other.paramTwoValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParamThreeValue()).compareTo(other.isSetParamThreeValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParamThreeValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paramThreeValue, other.paramThreeValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContent()).compareTo(other.isSetContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.content, other.content);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLink()).compareTo(other.isSetLink());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLink()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.link, other.link);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPath()).compareTo(other.isSetPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPath()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.path, other.path);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsBlankTarge()).compareTo(other.isSetIsBlankTarge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsBlankTarge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isBlankTarge, other.isBlankTarge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnableStatus()).compareTo(other.isSetEnableStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnableStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableStatus, other.enableStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClickCount()).compareTo(other.isSetClickCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClickCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clickCount, other.clickCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdLocationName()).compareTo(other.isSetAdLocationName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdLocationName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adLocationName, other.adLocationName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParamOneType()).compareTo(other.isSetParamOneType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParamOneType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paramOneType, other.paramOneType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParamTwoType()).compareTo(other.isSetParamTwoType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParamTwoType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paramTwoType, other.paramTwoType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParamThreeType()).compareTo(other.isSetParamThreeType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParamThreeType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paramThreeType, other.paramThreeType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTerminalType()).compareTo(other.isSetTerminalType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTerminalType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.terminalType, other.terminalType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionPage()).compareTo(other.isSetPositionPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionPage, other.positionPage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AdvertisingVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetTitle()) {
      if (!first) sb.append(", ");
      sb.append("title:");
      if (this.title == null) {
        sb.append("null");
      } else {
        sb.append(this.title);
      }
      first = false;
    }
    if (isSetAdLocationId()) {
      if (!first) sb.append(", ");
      sb.append("adLocationId:");
      sb.append(this.adLocationId);
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      if (this.type == null) {
        sb.append("null");
      } else {
        sb.append(this.type);
      }
      first = false;
    }
    if (isSetOrderSn()) {
      if (!first) sb.append(", ");
      sb.append("orderSn:");
      sb.append(this.orderSn);
      first = false;
    }
    if (isSetBeginTime()) {
      if (!first) sb.append(", ");
      sb.append("beginTime:");
      sb.append(this.beginTime);
      first = false;
    }
    if (isSetEndTime()) {
      if (!first) sb.append(", ");
      sb.append("endTime:");
      sb.append(this.endTime);
      first = false;
    }
    if (isSetParamOneValue()) {
      if (!first) sb.append(", ");
      sb.append("paramOneValue:");
      if (this.paramOneValue == null) {
        sb.append("null");
      } else {
        sb.append(this.paramOneValue);
      }
      first = false;
    }
    if (isSetParamTwoValue()) {
      if (!first) sb.append(", ");
      sb.append("paramTwoValue:");
      if (this.paramTwoValue == null) {
        sb.append("null");
      } else {
        sb.append(this.paramTwoValue);
      }
      first = false;
    }
    if (isSetParamThreeValue()) {
      if (!first) sb.append(", ");
      sb.append("paramThreeValue:");
      if (this.paramThreeValue == null) {
        sb.append("null");
      } else {
        sb.append(this.paramThreeValue);
      }
      first = false;
    }
    if (isSetContent()) {
      if (!first) sb.append(", ");
      sb.append("content:");
      if (this.content == null) {
        sb.append("null");
      } else {
        sb.append(this.content);
      }
      first = false;
    }
    if (isSetLink()) {
      if (!first) sb.append(", ");
      sb.append("link:");
      if (this.link == null) {
        sb.append("null");
      } else {
        sb.append(this.link);
      }
      first = false;
    }
    if (isSetPath()) {
      if (!first) sb.append(", ");
      sb.append("path:");
      if (this.path == null) {
        sb.append("null");
      } else {
        sb.append(this.path);
      }
      first = false;
    }
    if (isSetIsBlankTarge()) {
      if (!first) sb.append(", ");
      sb.append("isBlankTarge:");
      sb.append(this.isBlankTarge);
      first = false;
    }
    if (isSetEnableStatus()) {
      if (!first) sb.append(", ");
      sb.append("enableStatus:");
      if (this.enableStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.enableStatus);
      }
      first = false;
    }
    if (isSetClickCount()) {
      if (!first) sb.append(", ");
      sb.append("clickCount:");
      sb.append(this.clickCount);
      first = false;
    }
    if (isSetDescription()) {
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
    }
    if (isSetAdLocationName()) {
      if (!first) sb.append(", ");
      sb.append("adLocationName:");
      if (this.adLocationName == null) {
        sb.append("null");
      } else {
        sb.append(this.adLocationName);
      }
      first = false;
    }
    if (isSetParamOneType()) {
      if (!first) sb.append(", ");
      sb.append("paramOneType:");
      if (this.paramOneType == null) {
        sb.append("null");
      } else {
        sb.append(this.paramOneType);
      }
      first = false;
    }
    if (isSetParamTwoType()) {
      if (!first) sb.append(", ");
      sb.append("paramTwoType:");
      if (this.paramTwoType == null) {
        sb.append("null");
      } else {
        sb.append(this.paramTwoType);
      }
      first = false;
    }
    if (isSetParamThreeType()) {
      if (!first) sb.append(", ");
      sb.append("paramThreeType:");
      if (this.paramThreeType == null) {
        sb.append("null");
      } else {
        sb.append(this.paramThreeType);
      }
      first = false;
    }
    if (isSetTerminalType()) {
      if (!first) sb.append(", ");
      sb.append("terminalType:");
      if (this.terminalType == null) {
        sb.append("null");
      } else {
        sb.append(this.terminalType);
      }
      first = false;
    }
    if (isSetPositionPage()) {
      if (!first) sb.append(", ");
      sb.append("positionPage:");
      if (this.positionPage == null) {
        sb.append("null");
      } else {
        sb.append(this.positionPage);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AdvertisingVoStandardSchemeFactory implements SchemeFactory {
    public AdvertisingVoStandardScheme getScheme() {
      return new AdvertisingVoStandardScheme();
    }
  }

  private static class AdvertisingVoStandardScheme extends StandardScheme<AdvertisingVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AdvertisingVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AD_LOCATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.adLocationId = iprot.readI64();
              struct.setAdLocationIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ORDER_SN
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderSn = iprot.readI32();
              struct.setOrderSnIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BEGIN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.beginTime = iprot.readI64();
              struct.setBeginTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PARAM_ONE_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paramOneValue = iprot.readString();
              struct.setParamOneValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PARAM_TWO_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paramTwoValue = iprot.readString();
              struct.setParamTwoValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PARAM_THREE_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paramThreeValue = iprot.readString();
              struct.setParamThreeValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.content = iprot.readString();
              struct.setContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // LINK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.link = iprot.readString();
              struct.setLinkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.path = iprot.readString();
              struct.setPathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // IS_BLANK_TARGE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isBlankTarge = iprot.readBool();
              struct.setIsBlankTargeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ENABLE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.enableStatus = iprot.readString();
              struct.setEnableStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CLICK_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.clickCount = iprot.readI32();
              struct.setClickCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // AD_LOCATION_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.adLocationName = iprot.readString();
              struct.setAdLocationNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PARAM_ONE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paramOneType = iprot.readString();
              struct.setParamOneTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PARAM_TWO_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paramTwoType = iprot.readString();
              struct.setParamTwoTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // PARAM_THREE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paramThreeType = iprot.readString();
              struct.setParamThreeTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // TERMINAL_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.terminalType = iprot.readString();
              struct.setTerminalTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // POSITION_PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.positionPage = iprot.readString();
              struct.setPositionPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AdvertisingVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.title != null) {
        if (struct.isSetTitle()) {
          oprot.writeFieldBegin(TITLE_FIELD_DESC);
          oprot.writeString(struct.title);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAdLocationId()) {
        oprot.writeFieldBegin(AD_LOCATION_ID_FIELD_DESC);
        oprot.writeI64(struct.adLocationId);
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        if (struct.isSetType()) {
          oprot.writeFieldBegin(TYPE_FIELD_DESC);
          oprot.writeString(struct.type);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOrderSn()) {
        oprot.writeFieldBegin(ORDER_SN_FIELD_DESC);
        oprot.writeI32(struct.orderSn);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBeginTime()) {
        oprot.writeFieldBegin(BEGIN_TIME_FIELD_DESC);
        oprot.writeI64(struct.beginTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndTime()) {
        oprot.writeFieldBegin(END_TIME_FIELD_DESC);
        oprot.writeI64(struct.endTime);
        oprot.writeFieldEnd();
      }
      if (struct.paramOneValue != null) {
        if (struct.isSetParamOneValue()) {
          oprot.writeFieldBegin(PARAM_ONE_VALUE_FIELD_DESC);
          oprot.writeString(struct.paramOneValue);
          oprot.writeFieldEnd();
        }
      }
      if (struct.paramTwoValue != null) {
        if (struct.isSetParamTwoValue()) {
          oprot.writeFieldBegin(PARAM_TWO_VALUE_FIELD_DESC);
          oprot.writeString(struct.paramTwoValue);
          oprot.writeFieldEnd();
        }
      }
      if (struct.paramThreeValue != null) {
        if (struct.isSetParamThreeValue()) {
          oprot.writeFieldBegin(PARAM_THREE_VALUE_FIELD_DESC);
          oprot.writeString(struct.paramThreeValue);
          oprot.writeFieldEnd();
        }
      }
      if (struct.content != null) {
        if (struct.isSetContent()) {
          oprot.writeFieldBegin(CONTENT_FIELD_DESC);
          oprot.writeString(struct.content);
          oprot.writeFieldEnd();
        }
      }
      if (struct.link != null) {
        if (struct.isSetLink()) {
          oprot.writeFieldBegin(LINK_FIELD_DESC);
          oprot.writeString(struct.link);
          oprot.writeFieldEnd();
        }
      }
      if (struct.path != null) {
        if (struct.isSetPath()) {
          oprot.writeFieldBegin(PATH_FIELD_DESC);
          oprot.writeString(struct.path);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsBlankTarge()) {
        oprot.writeFieldBegin(IS_BLANK_TARGE_FIELD_DESC);
        oprot.writeBool(struct.isBlankTarge);
        oprot.writeFieldEnd();
      }
      if (struct.enableStatus != null) {
        if (struct.isSetEnableStatus()) {
          oprot.writeFieldBegin(ENABLE_STATUS_FIELD_DESC);
          oprot.writeString(struct.enableStatus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetClickCount()) {
        oprot.writeFieldBegin(CLICK_COUNT_FIELD_DESC);
        oprot.writeI32(struct.clickCount);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        if (struct.isSetDescription()) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
      }
      if (struct.adLocationName != null) {
        if (struct.isSetAdLocationName()) {
          oprot.writeFieldBegin(AD_LOCATION_NAME_FIELD_DESC);
          oprot.writeString(struct.adLocationName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.paramOneType != null) {
        if (struct.isSetParamOneType()) {
          oprot.writeFieldBegin(PARAM_ONE_TYPE_FIELD_DESC);
          oprot.writeString(struct.paramOneType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.paramTwoType != null) {
        if (struct.isSetParamTwoType()) {
          oprot.writeFieldBegin(PARAM_TWO_TYPE_FIELD_DESC);
          oprot.writeString(struct.paramTwoType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.paramThreeType != null) {
        if (struct.isSetParamThreeType()) {
          oprot.writeFieldBegin(PARAM_THREE_TYPE_FIELD_DESC);
          oprot.writeString(struct.paramThreeType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.terminalType != null) {
        if (struct.isSetTerminalType()) {
          oprot.writeFieldBegin(TERMINAL_TYPE_FIELD_DESC);
          oprot.writeString(struct.terminalType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.positionPage != null) {
        if (struct.isSetPositionPage()) {
          oprot.writeFieldBegin(POSITION_PAGE_FIELD_DESC);
          oprot.writeString(struct.positionPage);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AdvertisingVoTupleSchemeFactory implements SchemeFactory {
    public AdvertisingVoTupleScheme getScheme() {
      return new AdvertisingVoTupleScheme();
    }
  }

  private static class AdvertisingVoTupleScheme extends TupleScheme<AdvertisingVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AdvertisingVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetTitle()) {
        optionals.set(2);
      }
      if (struct.isSetAdLocationId()) {
        optionals.set(3);
      }
      if (struct.isSetType()) {
        optionals.set(4);
      }
      if (struct.isSetOrderSn()) {
        optionals.set(5);
      }
      if (struct.isSetBeginTime()) {
        optionals.set(6);
      }
      if (struct.isSetEndTime()) {
        optionals.set(7);
      }
      if (struct.isSetParamOneValue()) {
        optionals.set(8);
      }
      if (struct.isSetParamTwoValue()) {
        optionals.set(9);
      }
      if (struct.isSetParamThreeValue()) {
        optionals.set(10);
      }
      if (struct.isSetContent()) {
        optionals.set(11);
      }
      if (struct.isSetLink()) {
        optionals.set(12);
      }
      if (struct.isSetPath()) {
        optionals.set(13);
      }
      if (struct.isSetIsBlankTarge()) {
        optionals.set(14);
      }
      if (struct.isSetEnableStatus()) {
        optionals.set(15);
      }
      if (struct.isSetClickCount()) {
        optionals.set(16);
      }
      if (struct.isSetDescription()) {
        optionals.set(17);
      }
      if (struct.isSetAdLocationName()) {
        optionals.set(18);
      }
      if (struct.isSetParamOneType()) {
        optionals.set(19);
      }
      if (struct.isSetParamTwoType()) {
        optionals.set(20);
      }
      if (struct.isSetParamThreeType()) {
        optionals.set(21);
      }
      if (struct.isSetTerminalType()) {
        optionals.set(22);
      }
      if (struct.isSetPositionPage()) {
        optionals.set(23);
      }
      oprot.writeBitSet(optionals, 24);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetAdLocationId()) {
        oprot.writeI64(struct.adLocationId);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetOrderSn()) {
        oprot.writeI32(struct.orderSn);
      }
      if (struct.isSetBeginTime()) {
        oprot.writeI64(struct.beginTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetParamOneValue()) {
        oprot.writeString(struct.paramOneValue);
      }
      if (struct.isSetParamTwoValue()) {
        oprot.writeString(struct.paramTwoValue);
      }
      if (struct.isSetParamThreeValue()) {
        oprot.writeString(struct.paramThreeValue);
      }
      if (struct.isSetContent()) {
        oprot.writeString(struct.content);
      }
      if (struct.isSetLink()) {
        oprot.writeString(struct.link);
      }
      if (struct.isSetPath()) {
        oprot.writeString(struct.path);
      }
      if (struct.isSetIsBlankTarge()) {
        oprot.writeBool(struct.isBlankTarge);
      }
      if (struct.isSetEnableStatus()) {
        oprot.writeString(struct.enableStatus);
      }
      if (struct.isSetClickCount()) {
        oprot.writeI32(struct.clickCount);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetAdLocationName()) {
        oprot.writeString(struct.adLocationName);
      }
      if (struct.isSetParamOneType()) {
        oprot.writeString(struct.paramOneType);
      }
      if (struct.isSetParamTwoType()) {
        oprot.writeString(struct.paramTwoType);
      }
      if (struct.isSetParamThreeType()) {
        oprot.writeString(struct.paramThreeType);
      }
      if (struct.isSetTerminalType()) {
        oprot.writeString(struct.terminalType);
      }
      if (struct.isSetPositionPage()) {
        oprot.writeString(struct.positionPage);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AdvertisingVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(24);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.adLocationId = iprot.readI64();
        struct.setAdLocationIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.orderSn = iprot.readI32();
        struct.setOrderSnIsSet(true);
      }
      if (incoming.get(6)) {
        struct.beginTime = iprot.readI64();
        struct.setBeginTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.paramOneValue = iprot.readString();
        struct.setParamOneValueIsSet(true);
      }
      if (incoming.get(9)) {
        struct.paramTwoValue = iprot.readString();
        struct.setParamTwoValueIsSet(true);
      }
      if (incoming.get(10)) {
        struct.paramThreeValue = iprot.readString();
        struct.setParamThreeValueIsSet(true);
      }
      if (incoming.get(11)) {
        struct.content = iprot.readString();
        struct.setContentIsSet(true);
      }
      if (incoming.get(12)) {
        struct.link = iprot.readString();
        struct.setLinkIsSet(true);
      }
      if (incoming.get(13)) {
        struct.path = iprot.readString();
        struct.setPathIsSet(true);
      }
      if (incoming.get(14)) {
        struct.isBlankTarge = iprot.readBool();
        struct.setIsBlankTargeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.enableStatus = iprot.readString();
        struct.setEnableStatusIsSet(true);
      }
      if (incoming.get(16)) {
        struct.clickCount = iprot.readI32();
        struct.setClickCountIsSet(true);
      }
      if (incoming.get(17)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(18)) {
        struct.adLocationName = iprot.readString();
        struct.setAdLocationNameIsSet(true);
      }
      if (incoming.get(19)) {
        struct.paramOneType = iprot.readString();
        struct.setParamOneTypeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.paramTwoType = iprot.readString();
        struct.setParamTwoTypeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.paramThreeType = iprot.readString();
        struct.setParamThreeTypeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.terminalType = iprot.readString();
        struct.setTerminalTypeIsSet(true);
      }
      if (incoming.get(23)) {
        struct.positionPage = iprot.readString();
        struct.setPositionPageIsSet(true);
      }
    }
  }

}

