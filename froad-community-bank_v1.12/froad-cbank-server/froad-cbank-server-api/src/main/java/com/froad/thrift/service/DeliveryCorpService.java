/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class DeliveryCorpService {

  /**
   * 物流公司 服务
   */
  public interface Iface extends com.froad.thrift.monitor.service.BizMonitorService.Iface {

    /**
     * 增加 DeliveryCorp
     * @param deliveryCorp
     * @return long    主键ID
     * 
     * @param originVo
     * @param deliveryCorpVo
     */
    public com.froad.thrift.vo.AddResultVo addDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException;

    /**
     * 删除 DeliveryCorp
     * @param deliveryCorp
     * @return boolean
     * 
     * @param originVo
     * @param deliveryCorpVo
     */
    public com.froad.thrift.vo.ResultVo deleteDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException;

    /**
     * 修改 DeliveryCorp
     * @param deliveryCorp
     * @return boolean
     * 
     * @param originVo
     * @param deliveryCorpVo
     */
    public com.froad.thrift.vo.ResultVo updateDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException;

    /**
     * 查询 DeliveryCorp
     * @param deliveryCorp
     * @return List<DeliveryCorpVo>
     * 
     * @param deliveryCorpVo
     */
    public List<com.froad.thrift.vo.DeliveryCorpVo> getDeliveryCorp(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException;

    /**
     * 分页查询 DeliveryCorp
     * @param deliveryCorp
     * @return DeliveryCorpPageVoRes
     * 
     * @param page
     * @param deliveryCorpVo
     */
    public com.froad.thrift.vo.DeliveryCorpPageVoRes getDeliveryCorpByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends com.froad.thrift.monitor.service.BizMonitorService .AsyncIface {

    public void addDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void deleteDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void updateDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getDeliveryCorp(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getDeliveryCorpByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends com.froad.thrift.monitor.service.BizMonitorService.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.froad.thrift.vo.AddResultVo addDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      send_addDeliveryCorp(originVo, deliveryCorpVo);
      return recv_addDeliveryCorp();
    }

    public void send_addDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      addDeliveryCorp_args args = new addDeliveryCorp_args();
      args.setOriginVo(originVo);
      args.setDeliveryCorpVo(deliveryCorpVo);
      sendBase("addDeliveryCorp", args);
    }

    public com.froad.thrift.vo.AddResultVo recv_addDeliveryCorp() throws org.apache.thrift.TException
    {
      addDeliveryCorp_result result = new addDeliveryCorp_result();
      receiveBase(result, "addDeliveryCorp");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addDeliveryCorp failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo deleteDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      send_deleteDeliveryCorp(originVo, deliveryCorpVo);
      return recv_deleteDeliveryCorp();
    }

    public void send_deleteDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      deleteDeliveryCorp_args args = new deleteDeliveryCorp_args();
      args.setOriginVo(originVo);
      args.setDeliveryCorpVo(deliveryCorpVo);
      sendBase("deleteDeliveryCorp", args);
    }

    public com.froad.thrift.vo.ResultVo recv_deleteDeliveryCorp() throws org.apache.thrift.TException
    {
      deleteDeliveryCorp_result result = new deleteDeliveryCorp_result();
      receiveBase(result, "deleteDeliveryCorp");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteDeliveryCorp failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo updateDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      send_updateDeliveryCorp(originVo, deliveryCorpVo);
      return recv_updateDeliveryCorp();
    }

    public void send_updateDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      updateDeliveryCorp_args args = new updateDeliveryCorp_args();
      args.setOriginVo(originVo);
      args.setDeliveryCorpVo(deliveryCorpVo);
      sendBase("updateDeliveryCorp", args);
    }

    public com.froad.thrift.vo.ResultVo recv_updateDeliveryCorp() throws org.apache.thrift.TException
    {
      updateDeliveryCorp_result result = new updateDeliveryCorp_result();
      receiveBase(result, "updateDeliveryCorp");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateDeliveryCorp failed: unknown result");
    }

    public List<com.froad.thrift.vo.DeliveryCorpVo> getDeliveryCorp(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      send_getDeliveryCorp(deliveryCorpVo);
      return recv_getDeliveryCorp();
    }

    public void send_getDeliveryCorp(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      getDeliveryCorp_args args = new getDeliveryCorp_args();
      args.setDeliveryCorpVo(deliveryCorpVo);
      sendBase("getDeliveryCorp", args);
    }

    public List<com.froad.thrift.vo.DeliveryCorpVo> recv_getDeliveryCorp() throws org.apache.thrift.TException
    {
      getDeliveryCorp_result result = new getDeliveryCorp_result();
      receiveBase(result, "getDeliveryCorp");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getDeliveryCorp failed: unknown result");
    }

    public com.froad.thrift.vo.DeliveryCorpPageVoRes getDeliveryCorpByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      send_getDeliveryCorpByPage(page, deliveryCorpVo);
      return recv_getDeliveryCorpByPage();
    }

    public void send_getDeliveryCorpByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) throws org.apache.thrift.TException
    {
      getDeliveryCorpByPage_args args = new getDeliveryCorpByPage_args();
      args.setPage(page);
      args.setDeliveryCorpVo(deliveryCorpVo);
      sendBase("getDeliveryCorpByPage", args);
    }

    public com.froad.thrift.vo.DeliveryCorpPageVoRes recv_getDeliveryCorpByPage() throws org.apache.thrift.TException
    {
      getDeliveryCorpByPage_result result = new getDeliveryCorpByPage_result();
      receiveBase(result, "getDeliveryCorpByPage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getDeliveryCorpByPage failed: unknown result");
    }

  }
  public static class AsyncClient extends com.froad.thrift.monitor.service.BizMonitorService.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void addDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addDeliveryCorp_call method_call = new addDeliveryCorp_call(originVo, deliveryCorpVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addDeliveryCorp_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo;
      public addDeliveryCorp_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.deliveryCorpVo = deliveryCorpVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addDeliveryCorp", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addDeliveryCorp_args args = new addDeliveryCorp_args();
        args.setOriginVo(originVo);
        args.setDeliveryCorpVo(deliveryCorpVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.AddResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addDeliveryCorp();
      }
    }

    public void deleteDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteDeliveryCorp_call method_call = new deleteDeliveryCorp_call(originVo, deliveryCorpVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteDeliveryCorp_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo;
      public deleteDeliveryCorp_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.deliveryCorpVo = deliveryCorpVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteDeliveryCorp", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteDeliveryCorp_args args = new deleteDeliveryCorp_args();
        args.setOriginVo(originVo);
        args.setDeliveryCorpVo(deliveryCorpVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deleteDeliveryCorp();
      }
    }

    public void updateDeliveryCorp(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateDeliveryCorp_call method_call = new updateDeliveryCorp_call(originVo, deliveryCorpVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateDeliveryCorp_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo;
      public updateDeliveryCorp_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.deliveryCorpVo = deliveryCorpVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateDeliveryCorp", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateDeliveryCorp_args args = new updateDeliveryCorp_args();
        args.setOriginVo(originVo);
        args.setDeliveryCorpVo(deliveryCorpVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateDeliveryCorp();
      }
    }

    public void getDeliveryCorp(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getDeliveryCorp_call method_call = new getDeliveryCorp_call(deliveryCorpVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getDeliveryCorp_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo;
      public getDeliveryCorp_call(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.deliveryCorpVo = deliveryCorpVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getDeliveryCorp", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getDeliveryCorp_args args = new getDeliveryCorp_args();
        args.setDeliveryCorpVo(deliveryCorpVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<com.froad.thrift.vo.DeliveryCorpVo> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getDeliveryCorp();
      }
    }

    public void getDeliveryCorpByPage(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getDeliveryCorpByPage_call method_call = new getDeliveryCorpByPage_call(page, deliveryCorpVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getDeliveryCorpByPage_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.PageVo page;
      private com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo;
      public getDeliveryCorpByPage_call(com.froad.thrift.vo.PageVo page, com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.page = page;
        this.deliveryCorpVo = deliveryCorpVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getDeliveryCorpByPage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getDeliveryCorpByPage_args args = new getDeliveryCorpByPage_args();
        args.setPage(page);
        args.setDeliveryCorpVo(deliveryCorpVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.DeliveryCorpPageVoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getDeliveryCorpByPage();
      }
    }

  }

  public static class Processor<I extends Iface> extends com.froad.thrift.monitor.service.BizMonitorService.Processor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("addDeliveryCorp", new addDeliveryCorp());
      processMap.put("deleteDeliveryCorp", new deleteDeliveryCorp());
      processMap.put("updateDeliveryCorp", new updateDeliveryCorp());
      processMap.put("getDeliveryCorp", new getDeliveryCorp());
      processMap.put("getDeliveryCorpByPage", new getDeliveryCorpByPage());
      return processMap;
    }

    public static class addDeliveryCorp<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addDeliveryCorp_args> {
      public addDeliveryCorp() {
        super("addDeliveryCorp");
      }

      public addDeliveryCorp_args getEmptyArgsInstance() {
        return new addDeliveryCorp_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addDeliveryCorp_result getResult(I iface, addDeliveryCorp_args args) throws org.apache.thrift.TException {
        addDeliveryCorp_result result = new addDeliveryCorp_result();
        result.success = iface.addDeliveryCorp(args.originVo, args.deliveryCorpVo);
        return result;
      }
    }

    public static class deleteDeliveryCorp<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteDeliveryCorp_args> {
      public deleteDeliveryCorp() {
        super("deleteDeliveryCorp");
      }

      public deleteDeliveryCorp_args getEmptyArgsInstance() {
        return new deleteDeliveryCorp_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteDeliveryCorp_result getResult(I iface, deleteDeliveryCorp_args args) throws org.apache.thrift.TException {
        deleteDeliveryCorp_result result = new deleteDeliveryCorp_result();
        result.success = iface.deleteDeliveryCorp(args.originVo, args.deliveryCorpVo);
        return result;
      }
    }

    public static class updateDeliveryCorp<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateDeliveryCorp_args> {
      public updateDeliveryCorp() {
        super("updateDeliveryCorp");
      }

      public updateDeliveryCorp_args getEmptyArgsInstance() {
        return new updateDeliveryCorp_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateDeliveryCorp_result getResult(I iface, updateDeliveryCorp_args args) throws org.apache.thrift.TException {
        updateDeliveryCorp_result result = new updateDeliveryCorp_result();
        result.success = iface.updateDeliveryCorp(args.originVo, args.deliveryCorpVo);
        return result;
      }
    }

    public static class getDeliveryCorp<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getDeliveryCorp_args> {
      public getDeliveryCorp() {
        super("getDeliveryCorp");
      }

      public getDeliveryCorp_args getEmptyArgsInstance() {
        return new getDeliveryCorp_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getDeliveryCorp_result getResult(I iface, getDeliveryCorp_args args) throws org.apache.thrift.TException {
        getDeliveryCorp_result result = new getDeliveryCorp_result();
        result.success = iface.getDeliveryCorp(args.deliveryCorpVo);
        return result;
      }
    }

    public static class getDeliveryCorpByPage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getDeliveryCorpByPage_args> {
      public getDeliveryCorpByPage() {
        super("getDeliveryCorpByPage");
      }

      public getDeliveryCorpByPage_args getEmptyArgsInstance() {
        return new getDeliveryCorpByPage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getDeliveryCorpByPage_result getResult(I iface, getDeliveryCorpByPage_args args) throws org.apache.thrift.TException {
        getDeliveryCorpByPage_result result = new getDeliveryCorpByPage_result();
        result.success = iface.getDeliveryCorpByPage(args.page, args.deliveryCorpVo);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends com.froad.thrift.monitor.service.BizMonitorService.AsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("addDeliveryCorp", new addDeliveryCorp());
      processMap.put("deleteDeliveryCorp", new deleteDeliveryCorp());
      processMap.put("updateDeliveryCorp", new updateDeliveryCorp());
      processMap.put("getDeliveryCorp", new getDeliveryCorp());
      processMap.put("getDeliveryCorpByPage", new getDeliveryCorpByPage());
      return processMap;
    }

    public static class addDeliveryCorp<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addDeliveryCorp_args, com.froad.thrift.vo.AddResultVo> {
      public addDeliveryCorp() {
        super("addDeliveryCorp");
      }

      public addDeliveryCorp_args getEmptyArgsInstance() {
        return new addDeliveryCorp_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.AddResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.AddResultVo>() { 
          public void onComplete(com.froad.thrift.vo.AddResultVo o) {
            addDeliveryCorp_result result = new addDeliveryCorp_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addDeliveryCorp_result result = new addDeliveryCorp_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addDeliveryCorp_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.AddResultVo> resultHandler) throws TException {
        iface.addDeliveryCorp(args.originVo, args.deliveryCorpVo,resultHandler);
      }
    }

    public static class deleteDeliveryCorp<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteDeliveryCorp_args, com.froad.thrift.vo.ResultVo> {
      public deleteDeliveryCorp() {
        super("deleteDeliveryCorp");
      }

      public deleteDeliveryCorp_args getEmptyArgsInstance() {
        return new deleteDeliveryCorp_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            deleteDeliveryCorp_result result = new deleteDeliveryCorp_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            deleteDeliveryCorp_result result = new deleteDeliveryCorp_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteDeliveryCorp_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.deleteDeliveryCorp(args.originVo, args.deliveryCorpVo,resultHandler);
      }
    }

    public static class updateDeliveryCorp<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateDeliveryCorp_args, com.froad.thrift.vo.ResultVo> {
      public updateDeliveryCorp() {
        super("updateDeliveryCorp");
      }

      public updateDeliveryCorp_args getEmptyArgsInstance() {
        return new updateDeliveryCorp_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            updateDeliveryCorp_result result = new updateDeliveryCorp_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            updateDeliveryCorp_result result = new updateDeliveryCorp_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateDeliveryCorp_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.updateDeliveryCorp(args.originVo, args.deliveryCorpVo,resultHandler);
      }
    }

    public static class getDeliveryCorp<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getDeliveryCorp_args, List<com.froad.thrift.vo.DeliveryCorpVo>> {
      public getDeliveryCorp() {
        super("getDeliveryCorp");
      }

      public getDeliveryCorp_args getEmptyArgsInstance() {
        return new getDeliveryCorp_args();
      }

      public AsyncMethodCallback<List<com.froad.thrift.vo.DeliveryCorpVo>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<com.froad.thrift.vo.DeliveryCorpVo>>() { 
          public void onComplete(List<com.froad.thrift.vo.DeliveryCorpVo> o) {
            getDeliveryCorp_result result = new getDeliveryCorp_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getDeliveryCorp_result result = new getDeliveryCorp_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getDeliveryCorp_args args, org.apache.thrift.async.AsyncMethodCallback<List<com.froad.thrift.vo.DeliveryCorpVo>> resultHandler) throws TException {
        iface.getDeliveryCorp(args.deliveryCorpVo,resultHandler);
      }
    }

    public static class getDeliveryCorpByPage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getDeliveryCorpByPage_args, com.froad.thrift.vo.DeliveryCorpPageVoRes> {
      public getDeliveryCorpByPage() {
        super("getDeliveryCorpByPage");
      }

      public getDeliveryCorpByPage_args getEmptyArgsInstance() {
        return new getDeliveryCorpByPage_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.DeliveryCorpPageVoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.DeliveryCorpPageVoRes>() { 
          public void onComplete(com.froad.thrift.vo.DeliveryCorpPageVoRes o) {
            getDeliveryCorpByPage_result result = new getDeliveryCorpByPage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getDeliveryCorpByPage_result result = new getDeliveryCorpByPage_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getDeliveryCorpByPage_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.DeliveryCorpPageVoRes> resultHandler) throws TException {
        iface.getDeliveryCorpByPage(args.page, args.deliveryCorpVo,resultHandler);
      }
    }

  }

  public static class addDeliveryCorp_args implements org.apache.thrift.TBase<addDeliveryCorp_args, addDeliveryCorp_args._Fields>, java.io.Serializable, Cloneable, Comparable<addDeliveryCorp_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addDeliveryCorp_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField DELIVERY_CORP_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCorpVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addDeliveryCorp_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addDeliveryCorp_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      DELIVERY_CORP_VO((short)2, "deliveryCorpVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // DELIVERY_CORP_VO
            return DELIVERY_CORP_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.DELIVERY_CORP_VO, new org.apache.thrift.meta_data.FieldMetaData("deliveryCorpVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.DeliveryCorpVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addDeliveryCorp_args.class, metaDataMap);
    }

    public addDeliveryCorp_args() {
    }

    public addDeliveryCorp_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo)
    {
      this();
      this.originVo = originVo;
      this.deliveryCorpVo = deliveryCorpVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addDeliveryCorp_args(addDeliveryCorp_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetDeliveryCorpVo()) {
        this.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo(other.deliveryCorpVo);
      }
    }

    public addDeliveryCorp_args deepCopy() {
      return new addDeliveryCorp_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.deliveryCorpVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public addDeliveryCorp_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.DeliveryCorpVo getDeliveryCorpVo() {
      return this.deliveryCorpVo;
    }

    public addDeliveryCorp_args setDeliveryCorpVo(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) {
      this.deliveryCorpVo = deliveryCorpVo;
      return this;
    }

    public void unsetDeliveryCorpVo() {
      this.deliveryCorpVo = null;
    }

    /** Returns true if field deliveryCorpVo is set (has been assigned a value) and false otherwise */
    public boolean isSetDeliveryCorpVo() {
      return this.deliveryCorpVo != null;
    }

    public void setDeliveryCorpVoIsSet(boolean value) {
      if (!value) {
        this.deliveryCorpVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case DELIVERY_CORP_VO:
        if (value == null) {
          unsetDeliveryCorpVo();
        } else {
          setDeliveryCorpVo((com.froad.thrift.vo.DeliveryCorpVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case DELIVERY_CORP_VO:
        return getDeliveryCorpVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case DELIVERY_CORP_VO:
        return isSetDeliveryCorpVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addDeliveryCorp_args)
        return this.equals((addDeliveryCorp_args)that);
      return false;
    }

    public boolean equals(addDeliveryCorp_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_deliveryCorpVo = true && this.isSetDeliveryCorpVo();
      boolean that_present_deliveryCorpVo = true && that.isSetDeliveryCorpVo();
      if (this_present_deliveryCorpVo || that_present_deliveryCorpVo) {
        if (!(this_present_deliveryCorpVo && that_present_deliveryCorpVo))
          return false;
        if (!this.deliveryCorpVo.equals(that.deliveryCorpVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_deliveryCorpVo = true && (isSetDeliveryCorpVo());
      list.add(present_deliveryCorpVo);
      if (present_deliveryCorpVo)
        list.add(deliveryCorpVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(addDeliveryCorp_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetDeliveryCorpVo()).compareTo(other.isSetDeliveryCorpVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDeliveryCorpVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCorpVo, other.deliveryCorpVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addDeliveryCorp_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("deliveryCorpVo:");
      if (this.deliveryCorpVo == null) {
        sb.append("null");
      } else {
        sb.append(this.deliveryCorpVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (deliveryCorpVo != null) {
        deliveryCorpVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addDeliveryCorp_argsStandardSchemeFactory implements SchemeFactory {
      public addDeliveryCorp_argsStandardScheme getScheme() {
        return new addDeliveryCorp_argsStandardScheme();
      }
    }

    private static class addDeliveryCorp_argsStandardScheme extends StandardScheme<addDeliveryCorp_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addDeliveryCorp_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DELIVERY_CORP_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
                struct.deliveryCorpVo.read(iprot);
                struct.setDeliveryCorpVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addDeliveryCorp_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.deliveryCorpVo != null) {
          oprot.writeFieldBegin(DELIVERY_CORP_VO_FIELD_DESC);
          struct.deliveryCorpVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addDeliveryCorp_argsTupleSchemeFactory implements SchemeFactory {
      public addDeliveryCorp_argsTupleScheme getScheme() {
        return new addDeliveryCorp_argsTupleScheme();
      }
    }

    private static class addDeliveryCorp_argsTupleScheme extends TupleScheme<addDeliveryCorp_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addDeliveryCorp_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetDeliveryCorpVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetDeliveryCorpVo()) {
          struct.deliveryCorpVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addDeliveryCorp_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
          struct.deliveryCorpVo.read(iprot);
          struct.setDeliveryCorpVoIsSet(true);
        }
      }
    }

  }

  public static class addDeliveryCorp_result implements org.apache.thrift.TBase<addDeliveryCorp_result, addDeliveryCorp_result._Fields>, java.io.Serializable, Cloneable, Comparable<addDeliveryCorp_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addDeliveryCorp_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addDeliveryCorp_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addDeliveryCorp_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.AddResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.AddResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addDeliveryCorp_result.class, metaDataMap);
    }

    public addDeliveryCorp_result() {
    }

    public addDeliveryCorp_result(
      com.froad.thrift.vo.AddResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addDeliveryCorp_result(addDeliveryCorp_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.AddResultVo(other.success);
      }
    }

    public addDeliveryCorp_result deepCopy() {
      return new addDeliveryCorp_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.AddResultVo getSuccess() {
      return this.success;
    }

    public addDeliveryCorp_result setSuccess(com.froad.thrift.vo.AddResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.AddResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addDeliveryCorp_result)
        return this.equals((addDeliveryCorp_result)that);
      return false;
    }

    public boolean equals(addDeliveryCorp_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(addDeliveryCorp_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addDeliveryCorp_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addDeliveryCorp_resultStandardSchemeFactory implements SchemeFactory {
      public addDeliveryCorp_resultStandardScheme getScheme() {
        return new addDeliveryCorp_resultStandardScheme();
      }
    }

    private static class addDeliveryCorp_resultStandardScheme extends StandardScheme<addDeliveryCorp_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addDeliveryCorp_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.AddResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addDeliveryCorp_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addDeliveryCorp_resultTupleSchemeFactory implements SchemeFactory {
      public addDeliveryCorp_resultTupleScheme getScheme() {
        return new addDeliveryCorp_resultTupleScheme();
      }
    }

    private static class addDeliveryCorp_resultTupleScheme extends TupleScheme<addDeliveryCorp_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addDeliveryCorp_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addDeliveryCorp_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.AddResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class deleteDeliveryCorp_args implements org.apache.thrift.TBase<deleteDeliveryCorp_args, deleteDeliveryCorp_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteDeliveryCorp_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteDeliveryCorp_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField DELIVERY_CORP_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCorpVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteDeliveryCorp_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteDeliveryCorp_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      DELIVERY_CORP_VO((short)2, "deliveryCorpVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // DELIVERY_CORP_VO
            return DELIVERY_CORP_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.DELIVERY_CORP_VO, new org.apache.thrift.meta_data.FieldMetaData("deliveryCorpVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.DeliveryCorpVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteDeliveryCorp_args.class, metaDataMap);
    }

    public deleteDeliveryCorp_args() {
    }

    public deleteDeliveryCorp_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo)
    {
      this();
      this.originVo = originVo;
      this.deliveryCorpVo = deliveryCorpVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteDeliveryCorp_args(deleteDeliveryCorp_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetDeliveryCorpVo()) {
        this.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo(other.deliveryCorpVo);
      }
    }

    public deleteDeliveryCorp_args deepCopy() {
      return new deleteDeliveryCorp_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.deliveryCorpVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public deleteDeliveryCorp_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.DeliveryCorpVo getDeliveryCorpVo() {
      return this.deliveryCorpVo;
    }

    public deleteDeliveryCorp_args setDeliveryCorpVo(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) {
      this.deliveryCorpVo = deliveryCorpVo;
      return this;
    }

    public void unsetDeliveryCorpVo() {
      this.deliveryCorpVo = null;
    }

    /** Returns true if field deliveryCorpVo is set (has been assigned a value) and false otherwise */
    public boolean isSetDeliveryCorpVo() {
      return this.deliveryCorpVo != null;
    }

    public void setDeliveryCorpVoIsSet(boolean value) {
      if (!value) {
        this.deliveryCorpVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case DELIVERY_CORP_VO:
        if (value == null) {
          unsetDeliveryCorpVo();
        } else {
          setDeliveryCorpVo((com.froad.thrift.vo.DeliveryCorpVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case DELIVERY_CORP_VO:
        return getDeliveryCorpVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case DELIVERY_CORP_VO:
        return isSetDeliveryCorpVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteDeliveryCorp_args)
        return this.equals((deleteDeliveryCorp_args)that);
      return false;
    }

    public boolean equals(deleteDeliveryCorp_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_deliveryCorpVo = true && this.isSetDeliveryCorpVo();
      boolean that_present_deliveryCorpVo = true && that.isSetDeliveryCorpVo();
      if (this_present_deliveryCorpVo || that_present_deliveryCorpVo) {
        if (!(this_present_deliveryCorpVo && that_present_deliveryCorpVo))
          return false;
        if (!this.deliveryCorpVo.equals(that.deliveryCorpVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_deliveryCorpVo = true && (isSetDeliveryCorpVo());
      list.add(present_deliveryCorpVo);
      if (present_deliveryCorpVo)
        list.add(deliveryCorpVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteDeliveryCorp_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetDeliveryCorpVo()).compareTo(other.isSetDeliveryCorpVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDeliveryCorpVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCorpVo, other.deliveryCorpVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteDeliveryCorp_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("deliveryCorpVo:");
      if (this.deliveryCorpVo == null) {
        sb.append("null");
      } else {
        sb.append(this.deliveryCorpVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (deliveryCorpVo != null) {
        deliveryCorpVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteDeliveryCorp_argsStandardSchemeFactory implements SchemeFactory {
      public deleteDeliveryCorp_argsStandardScheme getScheme() {
        return new deleteDeliveryCorp_argsStandardScheme();
      }
    }

    private static class deleteDeliveryCorp_argsStandardScheme extends StandardScheme<deleteDeliveryCorp_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteDeliveryCorp_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DELIVERY_CORP_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
                struct.deliveryCorpVo.read(iprot);
                struct.setDeliveryCorpVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteDeliveryCorp_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.deliveryCorpVo != null) {
          oprot.writeFieldBegin(DELIVERY_CORP_VO_FIELD_DESC);
          struct.deliveryCorpVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteDeliveryCorp_argsTupleSchemeFactory implements SchemeFactory {
      public deleteDeliveryCorp_argsTupleScheme getScheme() {
        return new deleteDeliveryCorp_argsTupleScheme();
      }
    }

    private static class deleteDeliveryCorp_argsTupleScheme extends TupleScheme<deleteDeliveryCorp_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteDeliveryCorp_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetDeliveryCorpVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetDeliveryCorpVo()) {
          struct.deliveryCorpVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteDeliveryCorp_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
          struct.deliveryCorpVo.read(iprot);
          struct.setDeliveryCorpVoIsSet(true);
        }
      }
    }

  }

  public static class deleteDeliveryCorp_result implements org.apache.thrift.TBase<deleteDeliveryCorp_result, deleteDeliveryCorp_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteDeliveryCorp_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteDeliveryCorp_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteDeliveryCorp_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteDeliveryCorp_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteDeliveryCorp_result.class, metaDataMap);
    }

    public deleteDeliveryCorp_result() {
    }

    public deleteDeliveryCorp_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteDeliveryCorp_result(deleteDeliveryCorp_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public deleteDeliveryCorp_result deepCopy() {
      return new deleteDeliveryCorp_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public deleteDeliveryCorp_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteDeliveryCorp_result)
        return this.equals((deleteDeliveryCorp_result)that);
      return false;
    }

    public boolean equals(deleteDeliveryCorp_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteDeliveryCorp_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteDeliveryCorp_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteDeliveryCorp_resultStandardSchemeFactory implements SchemeFactory {
      public deleteDeliveryCorp_resultStandardScheme getScheme() {
        return new deleteDeliveryCorp_resultStandardScheme();
      }
    }

    private static class deleteDeliveryCorp_resultStandardScheme extends StandardScheme<deleteDeliveryCorp_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteDeliveryCorp_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteDeliveryCorp_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteDeliveryCorp_resultTupleSchemeFactory implements SchemeFactory {
      public deleteDeliveryCorp_resultTupleScheme getScheme() {
        return new deleteDeliveryCorp_resultTupleScheme();
      }
    }

    private static class deleteDeliveryCorp_resultTupleScheme extends TupleScheme<deleteDeliveryCorp_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteDeliveryCorp_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteDeliveryCorp_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class updateDeliveryCorp_args implements org.apache.thrift.TBase<updateDeliveryCorp_args, updateDeliveryCorp_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateDeliveryCorp_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateDeliveryCorp_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField DELIVERY_CORP_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCorpVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateDeliveryCorp_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateDeliveryCorp_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      DELIVERY_CORP_VO((short)2, "deliveryCorpVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // DELIVERY_CORP_VO
            return DELIVERY_CORP_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.DELIVERY_CORP_VO, new org.apache.thrift.meta_data.FieldMetaData("deliveryCorpVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.DeliveryCorpVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateDeliveryCorp_args.class, metaDataMap);
    }

    public updateDeliveryCorp_args() {
    }

    public updateDeliveryCorp_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo)
    {
      this();
      this.originVo = originVo;
      this.deliveryCorpVo = deliveryCorpVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateDeliveryCorp_args(updateDeliveryCorp_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetDeliveryCorpVo()) {
        this.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo(other.deliveryCorpVo);
      }
    }

    public updateDeliveryCorp_args deepCopy() {
      return new updateDeliveryCorp_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.deliveryCorpVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public updateDeliveryCorp_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.DeliveryCorpVo getDeliveryCorpVo() {
      return this.deliveryCorpVo;
    }

    public updateDeliveryCorp_args setDeliveryCorpVo(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) {
      this.deliveryCorpVo = deliveryCorpVo;
      return this;
    }

    public void unsetDeliveryCorpVo() {
      this.deliveryCorpVo = null;
    }

    /** Returns true if field deliveryCorpVo is set (has been assigned a value) and false otherwise */
    public boolean isSetDeliveryCorpVo() {
      return this.deliveryCorpVo != null;
    }

    public void setDeliveryCorpVoIsSet(boolean value) {
      if (!value) {
        this.deliveryCorpVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case DELIVERY_CORP_VO:
        if (value == null) {
          unsetDeliveryCorpVo();
        } else {
          setDeliveryCorpVo((com.froad.thrift.vo.DeliveryCorpVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case DELIVERY_CORP_VO:
        return getDeliveryCorpVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case DELIVERY_CORP_VO:
        return isSetDeliveryCorpVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateDeliveryCorp_args)
        return this.equals((updateDeliveryCorp_args)that);
      return false;
    }

    public boolean equals(updateDeliveryCorp_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_deliveryCorpVo = true && this.isSetDeliveryCorpVo();
      boolean that_present_deliveryCorpVo = true && that.isSetDeliveryCorpVo();
      if (this_present_deliveryCorpVo || that_present_deliveryCorpVo) {
        if (!(this_present_deliveryCorpVo && that_present_deliveryCorpVo))
          return false;
        if (!this.deliveryCorpVo.equals(that.deliveryCorpVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_deliveryCorpVo = true && (isSetDeliveryCorpVo());
      list.add(present_deliveryCorpVo);
      if (present_deliveryCorpVo)
        list.add(deliveryCorpVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateDeliveryCorp_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetDeliveryCorpVo()).compareTo(other.isSetDeliveryCorpVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDeliveryCorpVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCorpVo, other.deliveryCorpVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateDeliveryCorp_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("deliveryCorpVo:");
      if (this.deliveryCorpVo == null) {
        sb.append("null");
      } else {
        sb.append(this.deliveryCorpVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (deliveryCorpVo != null) {
        deliveryCorpVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateDeliveryCorp_argsStandardSchemeFactory implements SchemeFactory {
      public updateDeliveryCorp_argsStandardScheme getScheme() {
        return new updateDeliveryCorp_argsStandardScheme();
      }
    }

    private static class updateDeliveryCorp_argsStandardScheme extends StandardScheme<updateDeliveryCorp_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateDeliveryCorp_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DELIVERY_CORP_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
                struct.deliveryCorpVo.read(iprot);
                struct.setDeliveryCorpVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateDeliveryCorp_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.deliveryCorpVo != null) {
          oprot.writeFieldBegin(DELIVERY_CORP_VO_FIELD_DESC);
          struct.deliveryCorpVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateDeliveryCorp_argsTupleSchemeFactory implements SchemeFactory {
      public updateDeliveryCorp_argsTupleScheme getScheme() {
        return new updateDeliveryCorp_argsTupleScheme();
      }
    }

    private static class updateDeliveryCorp_argsTupleScheme extends TupleScheme<updateDeliveryCorp_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateDeliveryCorp_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetDeliveryCorpVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetDeliveryCorpVo()) {
          struct.deliveryCorpVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateDeliveryCorp_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
          struct.deliveryCorpVo.read(iprot);
          struct.setDeliveryCorpVoIsSet(true);
        }
      }
    }

  }

  public static class updateDeliveryCorp_result implements org.apache.thrift.TBase<updateDeliveryCorp_result, updateDeliveryCorp_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateDeliveryCorp_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateDeliveryCorp_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateDeliveryCorp_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateDeliveryCorp_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateDeliveryCorp_result.class, metaDataMap);
    }

    public updateDeliveryCorp_result() {
    }

    public updateDeliveryCorp_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateDeliveryCorp_result(updateDeliveryCorp_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public updateDeliveryCorp_result deepCopy() {
      return new updateDeliveryCorp_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public updateDeliveryCorp_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateDeliveryCorp_result)
        return this.equals((updateDeliveryCorp_result)that);
      return false;
    }

    public boolean equals(updateDeliveryCorp_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateDeliveryCorp_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateDeliveryCorp_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateDeliveryCorp_resultStandardSchemeFactory implements SchemeFactory {
      public updateDeliveryCorp_resultStandardScheme getScheme() {
        return new updateDeliveryCorp_resultStandardScheme();
      }
    }

    private static class updateDeliveryCorp_resultStandardScheme extends StandardScheme<updateDeliveryCorp_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateDeliveryCorp_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateDeliveryCorp_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateDeliveryCorp_resultTupleSchemeFactory implements SchemeFactory {
      public updateDeliveryCorp_resultTupleScheme getScheme() {
        return new updateDeliveryCorp_resultTupleScheme();
      }
    }

    private static class updateDeliveryCorp_resultTupleScheme extends TupleScheme<updateDeliveryCorp_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateDeliveryCorp_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateDeliveryCorp_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getDeliveryCorp_args implements org.apache.thrift.TBase<getDeliveryCorp_args, getDeliveryCorp_args._Fields>, java.io.Serializable, Cloneable, Comparable<getDeliveryCorp_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getDeliveryCorp_args");

    private static final org.apache.thrift.protocol.TField DELIVERY_CORP_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCorpVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getDeliveryCorp_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getDeliveryCorp_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      DELIVERY_CORP_VO((short)1, "deliveryCorpVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // DELIVERY_CORP_VO
            return DELIVERY_CORP_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.DELIVERY_CORP_VO, new org.apache.thrift.meta_data.FieldMetaData("deliveryCorpVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.DeliveryCorpVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getDeliveryCorp_args.class, metaDataMap);
    }

    public getDeliveryCorp_args() {
    }

    public getDeliveryCorp_args(
      com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo)
    {
      this();
      this.deliveryCorpVo = deliveryCorpVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getDeliveryCorp_args(getDeliveryCorp_args other) {
      if (other.isSetDeliveryCorpVo()) {
        this.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo(other.deliveryCorpVo);
      }
    }

    public getDeliveryCorp_args deepCopy() {
      return new getDeliveryCorp_args(this);
    }

    @Override
    public void clear() {
      this.deliveryCorpVo = null;
    }

    public com.froad.thrift.vo.DeliveryCorpVo getDeliveryCorpVo() {
      return this.deliveryCorpVo;
    }

    public getDeliveryCorp_args setDeliveryCorpVo(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) {
      this.deliveryCorpVo = deliveryCorpVo;
      return this;
    }

    public void unsetDeliveryCorpVo() {
      this.deliveryCorpVo = null;
    }

    /** Returns true if field deliveryCorpVo is set (has been assigned a value) and false otherwise */
    public boolean isSetDeliveryCorpVo() {
      return this.deliveryCorpVo != null;
    }

    public void setDeliveryCorpVoIsSet(boolean value) {
      if (!value) {
        this.deliveryCorpVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case DELIVERY_CORP_VO:
        if (value == null) {
          unsetDeliveryCorpVo();
        } else {
          setDeliveryCorpVo((com.froad.thrift.vo.DeliveryCorpVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case DELIVERY_CORP_VO:
        return getDeliveryCorpVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case DELIVERY_CORP_VO:
        return isSetDeliveryCorpVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getDeliveryCorp_args)
        return this.equals((getDeliveryCorp_args)that);
      return false;
    }

    public boolean equals(getDeliveryCorp_args that) {
      if (that == null)
        return false;

      boolean this_present_deliveryCorpVo = true && this.isSetDeliveryCorpVo();
      boolean that_present_deliveryCorpVo = true && that.isSetDeliveryCorpVo();
      if (this_present_deliveryCorpVo || that_present_deliveryCorpVo) {
        if (!(this_present_deliveryCorpVo && that_present_deliveryCorpVo))
          return false;
        if (!this.deliveryCorpVo.equals(that.deliveryCorpVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_deliveryCorpVo = true && (isSetDeliveryCorpVo());
      list.add(present_deliveryCorpVo);
      if (present_deliveryCorpVo)
        list.add(deliveryCorpVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getDeliveryCorp_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetDeliveryCorpVo()).compareTo(other.isSetDeliveryCorpVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDeliveryCorpVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCorpVo, other.deliveryCorpVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getDeliveryCorp_args(");
      boolean first = true;

      sb.append("deliveryCorpVo:");
      if (this.deliveryCorpVo == null) {
        sb.append("null");
      } else {
        sb.append(this.deliveryCorpVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (deliveryCorpVo != null) {
        deliveryCorpVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getDeliveryCorp_argsStandardSchemeFactory implements SchemeFactory {
      public getDeliveryCorp_argsStandardScheme getScheme() {
        return new getDeliveryCorp_argsStandardScheme();
      }
    }

    private static class getDeliveryCorp_argsStandardScheme extends StandardScheme<getDeliveryCorp_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getDeliveryCorp_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // DELIVERY_CORP_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
                struct.deliveryCorpVo.read(iprot);
                struct.setDeliveryCorpVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getDeliveryCorp_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.deliveryCorpVo != null) {
          oprot.writeFieldBegin(DELIVERY_CORP_VO_FIELD_DESC);
          struct.deliveryCorpVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getDeliveryCorp_argsTupleSchemeFactory implements SchemeFactory {
      public getDeliveryCorp_argsTupleScheme getScheme() {
        return new getDeliveryCorp_argsTupleScheme();
      }
    }

    private static class getDeliveryCorp_argsTupleScheme extends TupleScheme<getDeliveryCorp_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getDeliveryCorp_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetDeliveryCorpVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetDeliveryCorpVo()) {
          struct.deliveryCorpVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getDeliveryCorp_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
          struct.deliveryCorpVo.read(iprot);
          struct.setDeliveryCorpVoIsSet(true);
        }
      }
    }

  }

  public static class getDeliveryCorp_result implements org.apache.thrift.TBase<getDeliveryCorp_result, getDeliveryCorp_result._Fields>, java.io.Serializable, Cloneable, Comparable<getDeliveryCorp_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getDeliveryCorp_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getDeliveryCorp_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getDeliveryCorp_resultTupleSchemeFactory());
    }

    public List<com.froad.thrift.vo.DeliveryCorpVo> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.DeliveryCorpVo.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getDeliveryCorp_result.class, metaDataMap);
    }

    public getDeliveryCorp_result() {
    }

    public getDeliveryCorp_result(
      List<com.froad.thrift.vo.DeliveryCorpVo> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getDeliveryCorp_result(getDeliveryCorp_result other) {
      if (other.isSetSuccess()) {
        List<com.froad.thrift.vo.DeliveryCorpVo> __this__success = new ArrayList<com.froad.thrift.vo.DeliveryCorpVo>(other.success.size());
        for (com.froad.thrift.vo.DeliveryCorpVo other_element : other.success) {
          __this__success.add(new com.froad.thrift.vo.DeliveryCorpVo(other_element));
        }
        this.success = __this__success;
      }
    }

    public getDeliveryCorp_result deepCopy() {
      return new getDeliveryCorp_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.froad.thrift.vo.DeliveryCorpVo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.froad.thrift.vo.DeliveryCorpVo elem) {
      if (this.success == null) {
        this.success = new ArrayList<com.froad.thrift.vo.DeliveryCorpVo>();
      }
      this.success.add(elem);
    }

    public List<com.froad.thrift.vo.DeliveryCorpVo> getSuccess() {
      return this.success;
    }

    public getDeliveryCorp_result setSuccess(List<com.froad.thrift.vo.DeliveryCorpVo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<com.froad.thrift.vo.DeliveryCorpVo>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getDeliveryCorp_result)
        return this.equals((getDeliveryCorp_result)that);
      return false;
    }

    public boolean equals(getDeliveryCorp_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getDeliveryCorp_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getDeliveryCorp_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getDeliveryCorp_resultStandardSchemeFactory implements SchemeFactory {
      public getDeliveryCorp_resultStandardScheme getScheme() {
        return new getDeliveryCorp_resultStandardScheme();
      }
    }

    private static class getDeliveryCorp_resultStandardScheme extends StandardScheme<getDeliveryCorp_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getDeliveryCorp_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list98 = iprot.readListBegin();
                  struct.success = new ArrayList<com.froad.thrift.vo.DeliveryCorpVo>(_list98.size);
                  com.froad.thrift.vo.DeliveryCorpVo _elem99;
                  for (int _i100 = 0; _i100 < _list98.size; ++_i100)
                  {
                    _elem99 = new com.froad.thrift.vo.DeliveryCorpVo();
                    _elem99.read(iprot);
                    struct.success.add(_elem99);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getDeliveryCorp_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.froad.thrift.vo.DeliveryCorpVo _iter101 : struct.success)
            {
              _iter101.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getDeliveryCorp_resultTupleSchemeFactory implements SchemeFactory {
      public getDeliveryCorp_resultTupleScheme getScheme() {
        return new getDeliveryCorp_resultTupleScheme();
      }
    }

    private static class getDeliveryCorp_resultTupleScheme extends TupleScheme<getDeliveryCorp_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getDeliveryCorp_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.froad.thrift.vo.DeliveryCorpVo _iter102 : struct.success)
            {
              _iter102.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getDeliveryCorp_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list103 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<com.froad.thrift.vo.DeliveryCorpVo>(_list103.size);
            com.froad.thrift.vo.DeliveryCorpVo _elem104;
            for (int _i105 = 0; _i105 < _list103.size; ++_i105)
            {
              _elem104 = new com.froad.thrift.vo.DeliveryCorpVo();
              _elem104.read(iprot);
              struct.success.add(_elem104);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getDeliveryCorpByPage_args implements org.apache.thrift.TBase<getDeliveryCorpByPage_args, getDeliveryCorpByPage_args._Fields>, java.io.Serializable, Cloneable, Comparable<getDeliveryCorpByPage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getDeliveryCorpByPage_args");

    private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField DELIVERY_CORP_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCorpVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getDeliveryCorpByPage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getDeliveryCorpByPage_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.PageVo page; // required
    public com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PAGE((short)1, "page"),
      DELIVERY_CORP_VO((short)2, "deliveryCorpVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PAGE
            return PAGE;
          case 2: // DELIVERY_CORP_VO
            return DELIVERY_CORP_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
      tmpMap.put(_Fields.DELIVERY_CORP_VO, new org.apache.thrift.meta_data.FieldMetaData("deliveryCorpVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.DeliveryCorpVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getDeliveryCorpByPage_args.class, metaDataMap);
    }

    public getDeliveryCorpByPage_args() {
    }

    public getDeliveryCorpByPage_args(
      com.froad.thrift.vo.PageVo page,
      com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo)
    {
      this();
      this.page = page;
      this.deliveryCorpVo = deliveryCorpVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getDeliveryCorpByPage_args(getDeliveryCorpByPage_args other) {
      if (other.isSetPage()) {
        this.page = new com.froad.thrift.vo.PageVo(other.page);
      }
      if (other.isSetDeliveryCorpVo()) {
        this.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo(other.deliveryCorpVo);
      }
    }

    public getDeliveryCorpByPage_args deepCopy() {
      return new getDeliveryCorpByPage_args(this);
    }

    @Override
    public void clear() {
      this.page = null;
      this.deliveryCorpVo = null;
    }

    public com.froad.thrift.vo.PageVo getPage() {
      return this.page;
    }

    public getDeliveryCorpByPage_args setPage(com.froad.thrift.vo.PageVo page) {
      this.page = page;
      return this;
    }

    public void unsetPage() {
      this.page = null;
    }

    /** Returns true if field page is set (has been assigned a value) and false otherwise */
    public boolean isSetPage() {
      return this.page != null;
    }

    public void setPageIsSet(boolean value) {
      if (!value) {
        this.page = null;
      }
    }

    public com.froad.thrift.vo.DeliveryCorpVo getDeliveryCorpVo() {
      return this.deliveryCorpVo;
    }

    public getDeliveryCorpByPage_args setDeliveryCorpVo(com.froad.thrift.vo.DeliveryCorpVo deliveryCorpVo) {
      this.deliveryCorpVo = deliveryCorpVo;
      return this;
    }

    public void unsetDeliveryCorpVo() {
      this.deliveryCorpVo = null;
    }

    /** Returns true if field deliveryCorpVo is set (has been assigned a value) and false otherwise */
    public boolean isSetDeliveryCorpVo() {
      return this.deliveryCorpVo != null;
    }

    public void setDeliveryCorpVoIsSet(boolean value) {
      if (!value) {
        this.deliveryCorpVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PAGE:
        if (value == null) {
          unsetPage();
        } else {
          setPage((com.froad.thrift.vo.PageVo)value);
        }
        break;

      case DELIVERY_CORP_VO:
        if (value == null) {
          unsetDeliveryCorpVo();
        } else {
          setDeliveryCorpVo((com.froad.thrift.vo.DeliveryCorpVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PAGE:
        return getPage();

      case DELIVERY_CORP_VO:
        return getDeliveryCorpVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PAGE:
        return isSetPage();
      case DELIVERY_CORP_VO:
        return isSetDeliveryCorpVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getDeliveryCorpByPage_args)
        return this.equals((getDeliveryCorpByPage_args)that);
      return false;
    }

    public boolean equals(getDeliveryCorpByPage_args that) {
      if (that == null)
        return false;

      boolean this_present_page = true && this.isSetPage();
      boolean that_present_page = true && that.isSetPage();
      if (this_present_page || that_present_page) {
        if (!(this_present_page && that_present_page))
          return false;
        if (!this.page.equals(that.page))
          return false;
      }

      boolean this_present_deliveryCorpVo = true && this.isSetDeliveryCorpVo();
      boolean that_present_deliveryCorpVo = true && that.isSetDeliveryCorpVo();
      if (this_present_deliveryCorpVo || that_present_deliveryCorpVo) {
        if (!(this_present_deliveryCorpVo && that_present_deliveryCorpVo))
          return false;
        if (!this.deliveryCorpVo.equals(that.deliveryCorpVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_page = true && (isSetPage());
      list.add(present_page);
      if (present_page)
        list.add(page);

      boolean present_deliveryCorpVo = true && (isSetDeliveryCorpVo());
      list.add(present_deliveryCorpVo);
      if (present_deliveryCorpVo)
        list.add(deliveryCorpVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getDeliveryCorpByPage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetDeliveryCorpVo()).compareTo(other.isSetDeliveryCorpVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDeliveryCorpVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCorpVo, other.deliveryCorpVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getDeliveryCorpByPage_args(");
      boolean first = true;

      sb.append("page:");
      if (this.page == null) {
        sb.append("null");
      } else {
        sb.append(this.page);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("deliveryCorpVo:");
      if (this.deliveryCorpVo == null) {
        sb.append("null");
      } else {
        sb.append(this.deliveryCorpVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (page != null) {
        page.validate();
      }
      if (deliveryCorpVo != null) {
        deliveryCorpVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getDeliveryCorpByPage_argsStandardSchemeFactory implements SchemeFactory {
      public getDeliveryCorpByPage_argsStandardScheme getScheme() {
        return new getDeliveryCorpByPage_argsStandardScheme();
      }
    }

    private static class getDeliveryCorpByPage_argsStandardScheme extends StandardScheme<getDeliveryCorpByPage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getDeliveryCorpByPage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.page = new com.froad.thrift.vo.PageVo();
                struct.page.read(iprot);
                struct.setPageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DELIVERY_CORP_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
                struct.deliveryCorpVo.read(iprot);
                struct.setDeliveryCorpVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getDeliveryCorpByPage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.page != null) {
          oprot.writeFieldBegin(PAGE_FIELD_DESC);
          struct.page.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.deliveryCorpVo != null) {
          oprot.writeFieldBegin(DELIVERY_CORP_VO_FIELD_DESC);
          struct.deliveryCorpVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getDeliveryCorpByPage_argsTupleSchemeFactory implements SchemeFactory {
      public getDeliveryCorpByPage_argsTupleScheme getScheme() {
        return new getDeliveryCorpByPage_argsTupleScheme();
      }
    }

    private static class getDeliveryCorpByPage_argsTupleScheme extends TupleScheme<getDeliveryCorpByPage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getDeliveryCorpByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPage()) {
          optionals.set(0);
        }
        if (struct.isSetDeliveryCorpVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPage()) {
          struct.page.write(oprot);
        }
        if (struct.isSetDeliveryCorpVo()) {
          struct.deliveryCorpVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getDeliveryCorpByPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.page = new com.froad.thrift.vo.PageVo();
          struct.page.read(iprot);
          struct.setPageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.deliveryCorpVo = new com.froad.thrift.vo.DeliveryCorpVo();
          struct.deliveryCorpVo.read(iprot);
          struct.setDeliveryCorpVoIsSet(true);
        }
      }
    }

  }

  public static class getDeliveryCorpByPage_result implements org.apache.thrift.TBase<getDeliveryCorpByPage_result, getDeliveryCorpByPage_result._Fields>, java.io.Serializable, Cloneable, Comparable<getDeliveryCorpByPage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getDeliveryCorpByPage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getDeliveryCorpByPage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getDeliveryCorpByPage_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.DeliveryCorpPageVoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.DeliveryCorpPageVoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getDeliveryCorpByPage_result.class, metaDataMap);
    }

    public getDeliveryCorpByPage_result() {
    }

    public getDeliveryCorpByPage_result(
      com.froad.thrift.vo.DeliveryCorpPageVoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getDeliveryCorpByPage_result(getDeliveryCorpByPage_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.DeliveryCorpPageVoRes(other.success);
      }
    }

    public getDeliveryCorpByPage_result deepCopy() {
      return new getDeliveryCorpByPage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.DeliveryCorpPageVoRes getSuccess() {
      return this.success;
    }

    public getDeliveryCorpByPage_result setSuccess(com.froad.thrift.vo.DeliveryCorpPageVoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.DeliveryCorpPageVoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getDeliveryCorpByPage_result)
        return this.equals((getDeliveryCorpByPage_result)that);
      return false;
    }

    public boolean equals(getDeliveryCorpByPage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getDeliveryCorpByPage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getDeliveryCorpByPage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getDeliveryCorpByPage_resultStandardSchemeFactory implements SchemeFactory {
      public getDeliveryCorpByPage_resultStandardScheme getScheme() {
        return new getDeliveryCorpByPage_resultStandardScheme();
      }
    }

    private static class getDeliveryCorpByPage_resultStandardScheme extends StandardScheme<getDeliveryCorpByPage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getDeliveryCorpByPage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.DeliveryCorpPageVoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getDeliveryCorpByPage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getDeliveryCorpByPage_resultTupleSchemeFactory implements SchemeFactory {
      public getDeliveryCorpByPage_resultTupleScheme getScheme() {
        return new getDeliveryCorpByPage_resultTupleScheme();
      }
    }

    private static class getDeliveryCorpByPage_resultTupleScheme extends TupleScheme<getDeliveryCorpByPage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getDeliveryCorpByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getDeliveryCorpByPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.DeliveryCorpPageVoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
