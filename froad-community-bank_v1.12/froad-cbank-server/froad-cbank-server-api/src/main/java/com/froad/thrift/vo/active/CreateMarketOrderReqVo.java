/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.active;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 创建营销活动订单 请求
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class CreateMarketOrderReqVo implements org.apache.thrift.TBase<CreateMarketOrderReqVo, CreateMarketOrderReqVo._Fields>, java.io.Serializable, Cloneable, Comparable<CreateMarketOrderReqVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CreateMarketOrderReqVo");

  private static final org.apache.thrift.protocol.TField REQ_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("reqId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MEMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("memberCode", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField MEMBER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("memberName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ORDER_ORI_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("orderOriMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField ORDER_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("orderMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField MARKET_SUB_ORDER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("marketSubOrderList", org.apache.thrift.protocol.TType.LIST, (short)9);
  private static final org.apache.thrift.protocol.TField VOUCHERS_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("vouchersIds", org.apache.thrift.protocol.TType.LIST, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CreateMarketOrderReqVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CreateMarketOrderReqVoTupleSchemeFactory());
  }

  /**
   * 请求id
   */
  public String reqId; // required
  /**
   * 客户端id
   */
  public String clientId; // required
  /**
   * 用户编号
   */
  public long memberCode; // required
  /**
   * 用户名称
   */
  public String memberName; // optional
  /**
   * 电话号码
   */
  public String phone; // required
  /**
   * 订单id
   */
  public String orderId; // required
  /**
   * 订单原始金额
   */
  public double orderOriMoney; // required
  /**
   * 订单成交金额
   */
  public double orderMoney; // required
  /**
   * 子订单 - 列表
   */
  public List<MarketSubOrderVo> marketSubOrderList; // required
  /**
   * 代金券(红包) - 列表
   */
  public List<String> vouchersIds; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 请求id
     */
    REQ_ID((short)1, "reqId"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 用户编号
     */
    MEMBER_CODE((short)3, "memberCode"),
    /**
     * 用户名称
     */
    MEMBER_NAME((short)4, "memberName"),
    /**
     * 电话号码
     */
    PHONE((short)5, "phone"),
    /**
     * 订单id
     */
    ORDER_ID((short)6, "orderId"),
    /**
     * 订单原始金额
     */
    ORDER_ORI_MONEY((short)7, "orderOriMoney"),
    /**
     * 订单成交金额
     */
    ORDER_MONEY((short)8, "orderMoney"),
    /**
     * 子订单 - 列表
     */
    MARKET_SUB_ORDER_LIST((short)9, "marketSubOrderList"),
    /**
     * 代金券(红包) - 列表
     */
    VOUCHERS_IDS((short)10, "vouchersIds");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // REQ_ID
          return REQ_ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // MEMBER_CODE
          return MEMBER_CODE;
        case 4: // MEMBER_NAME
          return MEMBER_NAME;
        case 5: // PHONE
          return PHONE;
        case 6: // ORDER_ID
          return ORDER_ID;
        case 7: // ORDER_ORI_MONEY
          return ORDER_ORI_MONEY;
        case 8: // ORDER_MONEY
          return ORDER_MONEY;
        case 9: // MARKET_SUB_ORDER_LIST
          return MARKET_SUB_ORDER_LIST;
        case 10: // VOUCHERS_IDS
          return VOUCHERS_IDS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MEMBERCODE_ISSET_ID = 0;
  private static final int __ORDERORIMONEY_ISSET_ID = 1;
  private static final int __ORDERMONEY_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.MEMBER_NAME,_Fields.VOUCHERS_IDS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.REQ_ID, new org.apache.thrift.meta_data.FieldMetaData("reqId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("memberCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MEMBER_NAME, new org.apache.thrift.meta_data.FieldMetaData("memberName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_ORI_MONEY, new org.apache.thrift.meta_data.FieldMetaData("orderOriMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ORDER_MONEY, new org.apache.thrift.meta_data.FieldMetaData("orderMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MARKET_SUB_ORDER_LIST, new org.apache.thrift.meta_data.FieldMetaData("marketSubOrderList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "MarketSubOrderVo"))));
    tmpMap.put(_Fields.VOUCHERS_IDS, new org.apache.thrift.meta_data.FieldMetaData("vouchersIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CreateMarketOrderReqVo.class, metaDataMap);
  }

  public CreateMarketOrderReqVo() {
  }

  public CreateMarketOrderReqVo(
    String reqId,
    String clientId,
    long memberCode,
    String phone,
    String orderId,
    double orderOriMoney,
    double orderMoney,
    List<MarketSubOrderVo> marketSubOrderList)
  {
    this();
    this.reqId = reqId;
    this.clientId = clientId;
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    this.phone = phone;
    this.orderId = orderId;
    this.orderOriMoney = orderOriMoney;
    setOrderOriMoneyIsSet(true);
    this.orderMoney = orderMoney;
    setOrderMoneyIsSet(true);
    this.marketSubOrderList = marketSubOrderList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CreateMarketOrderReqVo(CreateMarketOrderReqVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetReqId()) {
      this.reqId = other.reqId;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    this.memberCode = other.memberCode;
    if (other.isSetMemberName()) {
      this.memberName = other.memberName;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    this.orderOriMoney = other.orderOriMoney;
    this.orderMoney = other.orderMoney;
    if (other.isSetMarketSubOrderList()) {
      List<MarketSubOrderVo> __this__marketSubOrderList = new ArrayList<MarketSubOrderVo>(other.marketSubOrderList.size());
      for (MarketSubOrderVo other_element : other.marketSubOrderList) {
        __this__marketSubOrderList.add(other_element);
      }
      this.marketSubOrderList = __this__marketSubOrderList;
    }
    if (other.isSetVouchersIds()) {
      List<String> __this__vouchersIds = new ArrayList<String>(other.vouchersIds);
      this.vouchersIds = __this__vouchersIds;
    }
  }

  public CreateMarketOrderReqVo deepCopy() {
    return new CreateMarketOrderReqVo(this);
  }

  @Override
  public void clear() {
    this.reqId = null;
    this.clientId = null;
    setMemberCodeIsSet(false);
    this.memberCode = 0;
    this.memberName = null;
    this.phone = null;
    this.orderId = null;
    setOrderOriMoneyIsSet(false);
    this.orderOriMoney = 0.0;
    setOrderMoneyIsSet(false);
    this.orderMoney = 0.0;
    this.marketSubOrderList = null;
    this.vouchersIds = null;
  }

  /**
   * 请求id
   */
  public String getReqId() {
    return this.reqId;
  }

  /**
   * 请求id
   */
  public CreateMarketOrderReqVo setReqId(String reqId) {
    this.reqId = reqId;
    return this;
  }

  public void unsetReqId() {
    this.reqId = null;
  }

  /** Returns true if field reqId is set (has been assigned a value) and false otherwise */
  public boolean isSetReqId() {
    return this.reqId != null;
  }

  public void setReqIdIsSet(boolean value) {
    if (!value) {
      this.reqId = null;
    }
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public CreateMarketOrderReqVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 用户编号
   */
  public long getMemberCode() {
    return this.memberCode;
  }

  /**
   * 用户编号
   */
  public CreateMarketOrderReqVo setMemberCode(long memberCode) {
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    return this;
  }

  public void unsetMemberCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  /** Returns true if field memberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberCode() {
    return EncodingUtils.testBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  public void setMemberCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEMBERCODE_ISSET_ID, value);
  }

  /**
   * 用户名称
   */
  public String getMemberName() {
    return this.memberName;
  }

  /**
   * 用户名称
   */
  public CreateMarketOrderReqVo setMemberName(String memberName) {
    this.memberName = memberName;
    return this;
  }

  public void unsetMemberName() {
    this.memberName = null;
  }

  /** Returns true if field memberName is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberName() {
    return this.memberName != null;
  }

  public void setMemberNameIsSet(boolean value) {
    if (!value) {
      this.memberName = null;
    }
  }

  /**
   * 电话号码
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 电话号码
   */
  public CreateMarketOrderReqVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 订单id
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 订单id
   */
  public CreateMarketOrderReqVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 订单原始金额
   */
  public double getOrderOriMoney() {
    return this.orderOriMoney;
  }

  /**
   * 订单原始金额
   */
  public CreateMarketOrderReqVo setOrderOriMoney(double orderOriMoney) {
    this.orderOriMoney = orderOriMoney;
    setOrderOriMoneyIsSet(true);
    return this;
  }

  public void unsetOrderOriMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERORIMONEY_ISSET_ID);
  }

  /** Returns true if field orderOriMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderOriMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERORIMONEY_ISSET_ID);
  }

  public void setOrderOriMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERORIMONEY_ISSET_ID, value);
  }

  /**
   * 订单成交金额
   */
  public double getOrderMoney() {
    return this.orderMoney;
  }

  /**
   * 订单成交金额
   */
  public CreateMarketOrderReqVo setOrderMoney(double orderMoney) {
    this.orderMoney = orderMoney;
    setOrderMoneyIsSet(true);
    return this;
  }

  public void unsetOrderMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERMONEY_ISSET_ID);
  }

  /** Returns true if field orderMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERMONEY_ISSET_ID);
  }

  public void setOrderMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERMONEY_ISSET_ID, value);
  }

  public int getMarketSubOrderListSize() {
    return (this.marketSubOrderList == null) ? 0 : this.marketSubOrderList.size();
  }

  public java.util.Iterator<MarketSubOrderVo> getMarketSubOrderListIterator() {
    return (this.marketSubOrderList == null) ? null : this.marketSubOrderList.iterator();
  }

  public void addToMarketSubOrderList(MarketSubOrderVo elem) {
    if (this.marketSubOrderList == null) {
      this.marketSubOrderList = new ArrayList<MarketSubOrderVo>();
    }
    this.marketSubOrderList.add(elem);
  }

  /**
   * 子订单 - 列表
   */
  public List<MarketSubOrderVo> getMarketSubOrderList() {
    return this.marketSubOrderList;
  }

  /**
   * 子订单 - 列表
   */
  public CreateMarketOrderReqVo setMarketSubOrderList(List<MarketSubOrderVo> marketSubOrderList) {
    this.marketSubOrderList = marketSubOrderList;
    return this;
  }

  public void unsetMarketSubOrderList() {
    this.marketSubOrderList = null;
  }

  /** Returns true if field marketSubOrderList is set (has been assigned a value) and false otherwise */
  public boolean isSetMarketSubOrderList() {
    return this.marketSubOrderList != null;
  }

  public void setMarketSubOrderListIsSet(boolean value) {
    if (!value) {
      this.marketSubOrderList = null;
    }
  }

  public int getVouchersIdsSize() {
    return (this.vouchersIds == null) ? 0 : this.vouchersIds.size();
  }

  public java.util.Iterator<String> getVouchersIdsIterator() {
    return (this.vouchersIds == null) ? null : this.vouchersIds.iterator();
  }

  public void addToVouchersIds(String elem) {
    if (this.vouchersIds == null) {
      this.vouchersIds = new ArrayList<String>();
    }
    this.vouchersIds.add(elem);
  }

  /**
   * 代金券(红包) - 列表
   */
  public List<String> getVouchersIds() {
    return this.vouchersIds;
  }

  /**
   * 代金券(红包) - 列表
   */
  public CreateMarketOrderReqVo setVouchersIds(List<String> vouchersIds) {
    this.vouchersIds = vouchersIds;
    return this;
  }

  public void unsetVouchersIds() {
    this.vouchersIds = null;
  }

  /** Returns true if field vouchersIds is set (has been assigned a value) and false otherwise */
  public boolean isSetVouchersIds() {
    return this.vouchersIds != null;
  }

  public void setVouchersIdsIsSet(boolean value) {
    if (!value) {
      this.vouchersIds = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case REQ_ID:
      if (value == null) {
        unsetReqId();
      } else {
        setReqId((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MEMBER_CODE:
      if (value == null) {
        unsetMemberCode();
      } else {
        setMemberCode((Long)value);
      }
      break;

    case MEMBER_NAME:
      if (value == null) {
        unsetMemberName();
      } else {
        setMemberName((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case ORDER_ORI_MONEY:
      if (value == null) {
        unsetOrderOriMoney();
      } else {
        setOrderOriMoney((Double)value);
      }
      break;

    case ORDER_MONEY:
      if (value == null) {
        unsetOrderMoney();
      } else {
        setOrderMoney((Double)value);
      }
      break;

    case MARKET_SUB_ORDER_LIST:
      if (value == null) {
        unsetMarketSubOrderList();
      } else {
        setMarketSubOrderList((List<MarketSubOrderVo>)value);
      }
      break;

    case VOUCHERS_IDS:
      if (value == null) {
        unsetVouchersIds();
      } else {
        setVouchersIds((List<String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case REQ_ID:
      return getReqId();

    case CLIENT_ID:
      return getClientId();

    case MEMBER_CODE:
      return Long.valueOf(getMemberCode());

    case MEMBER_NAME:
      return getMemberName();

    case PHONE:
      return getPhone();

    case ORDER_ID:
      return getOrderId();

    case ORDER_ORI_MONEY:
      return Double.valueOf(getOrderOriMoney());

    case ORDER_MONEY:
      return Double.valueOf(getOrderMoney());

    case MARKET_SUB_ORDER_LIST:
      return getMarketSubOrderList();

    case VOUCHERS_IDS:
      return getVouchersIds();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case REQ_ID:
      return isSetReqId();
    case CLIENT_ID:
      return isSetClientId();
    case MEMBER_CODE:
      return isSetMemberCode();
    case MEMBER_NAME:
      return isSetMemberName();
    case PHONE:
      return isSetPhone();
    case ORDER_ID:
      return isSetOrderId();
    case ORDER_ORI_MONEY:
      return isSetOrderOriMoney();
    case ORDER_MONEY:
      return isSetOrderMoney();
    case MARKET_SUB_ORDER_LIST:
      return isSetMarketSubOrderList();
    case VOUCHERS_IDS:
      return isSetVouchersIds();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CreateMarketOrderReqVo)
      return this.equals((CreateMarketOrderReqVo)that);
    return false;
  }

  public boolean equals(CreateMarketOrderReqVo that) {
    if (that == null)
      return false;

    boolean this_present_reqId = true && this.isSetReqId();
    boolean that_present_reqId = true && that.isSetReqId();
    if (this_present_reqId || that_present_reqId) {
      if (!(this_present_reqId && that_present_reqId))
        return false;
      if (!this.reqId.equals(that.reqId))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_memberCode = true;
    boolean that_present_memberCode = true;
    if (this_present_memberCode || that_present_memberCode) {
      if (!(this_present_memberCode && that_present_memberCode))
        return false;
      if (this.memberCode != that.memberCode)
        return false;
    }

    boolean this_present_memberName = true && this.isSetMemberName();
    boolean that_present_memberName = true && that.isSetMemberName();
    if (this_present_memberName || that_present_memberName) {
      if (!(this_present_memberName && that_present_memberName))
        return false;
      if (!this.memberName.equals(that.memberName))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_orderOriMoney = true;
    boolean that_present_orderOriMoney = true;
    if (this_present_orderOriMoney || that_present_orderOriMoney) {
      if (!(this_present_orderOriMoney && that_present_orderOriMoney))
        return false;
      if (this.orderOriMoney != that.orderOriMoney)
        return false;
    }

    boolean this_present_orderMoney = true;
    boolean that_present_orderMoney = true;
    if (this_present_orderMoney || that_present_orderMoney) {
      if (!(this_present_orderMoney && that_present_orderMoney))
        return false;
      if (this.orderMoney != that.orderMoney)
        return false;
    }

    boolean this_present_marketSubOrderList = true && this.isSetMarketSubOrderList();
    boolean that_present_marketSubOrderList = true && that.isSetMarketSubOrderList();
    if (this_present_marketSubOrderList || that_present_marketSubOrderList) {
      if (!(this_present_marketSubOrderList && that_present_marketSubOrderList))
        return false;
      if (!this.marketSubOrderList.equals(that.marketSubOrderList))
        return false;
    }

    boolean this_present_vouchersIds = true && this.isSetVouchersIds();
    boolean that_present_vouchersIds = true && that.isSetVouchersIds();
    if (this_present_vouchersIds || that_present_vouchersIds) {
      if (!(this_present_vouchersIds && that_present_vouchersIds))
        return false;
      if (!this.vouchersIds.equals(that.vouchersIds))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_reqId = true && (isSetReqId());
    list.add(present_reqId);
    if (present_reqId)
      list.add(reqId);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_memberCode = true;
    list.add(present_memberCode);
    if (present_memberCode)
      list.add(memberCode);

    boolean present_memberName = true && (isSetMemberName());
    list.add(present_memberName);
    if (present_memberName)
      list.add(memberName);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_orderOriMoney = true;
    list.add(present_orderOriMoney);
    if (present_orderOriMoney)
      list.add(orderOriMoney);

    boolean present_orderMoney = true;
    list.add(present_orderMoney);
    if (present_orderMoney)
      list.add(orderMoney);

    boolean present_marketSubOrderList = true && (isSetMarketSubOrderList());
    list.add(present_marketSubOrderList);
    if (present_marketSubOrderList)
      list.add(marketSubOrderList);

    boolean present_vouchersIds = true && (isSetVouchersIds());
    list.add(present_vouchersIds);
    if (present_vouchersIds)
      list.add(vouchersIds);

    return list.hashCode();
  }

  @Override
  public int compareTo(CreateMarketOrderReqVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetReqId()).compareTo(other.isSetReqId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReqId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqId, other.reqId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberCode()).compareTo(other.isSetMemberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberCode, other.memberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberName()).compareTo(other.isSetMemberName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberName, other.memberName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderOriMoney()).compareTo(other.isSetOrderOriMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderOriMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderOriMoney, other.orderOriMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderMoney()).compareTo(other.isSetOrderMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderMoney, other.orderMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMarketSubOrderList()).compareTo(other.isSetMarketSubOrderList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarketSubOrderList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marketSubOrderList, other.marketSubOrderList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVouchersIds()).compareTo(other.isSetVouchersIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVouchersIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vouchersIds, other.vouchersIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CreateMarketOrderReqVo(");
    boolean first = true;

    sb.append("reqId:");
    if (this.reqId == null) {
      sb.append("null");
    } else {
      sb.append(this.reqId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberCode:");
    sb.append(this.memberCode);
    first = false;
    if (isSetMemberName()) {
      if (!first) sb.append(", ");
      sb.append("memberName:");
      if (this.memberName == null) {
        sb.append("null");
      } else {
        sb.append(this.memberName);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderOriMoney:");
    sb.append(this.orderOriMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderMoney:");
    sb.append(this.orderMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("marketSubOrderList:");
    if (this.marketSubOrderList == null) {
      sb.append("null");
    } else {
      sb.append(this.marketSubOrderList);
    }
    first = false;
    if (isSetVouchersIds()) {
      if (!first) sb.append(", ");
      sb.append("vouchersIds:");
      if (this.vouchersIds == null) {
        sb.append("null");
      } else {
        sb.append(this.vouchersIds);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CreateMarketOrderReqVoStandardSchemeFactory implements SchemeFactory {
    public CreateMarketOrderReqVoStandardScheme getScheme() {
      return new CreateMarketOrderReqVoStandardScheme();
    }
  }

  private static class CreateMarketOrderReqVoStandardScheme extends StandardScheme<CreateMarketOrderReqVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CreateMarketOrderReqVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // REQ_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reqId = iprot.readString();
              struct.setReqIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MEMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.memberCode = iprot.readI64();
              struct.setMemberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MEMBER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberName = iprot.readString();
              struct.setMemberNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORDER_ORI_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.orderOriMoney = iprot.readDouble();
              struct.setOrderOriMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORDER_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.orderMoney = iprot.readDouble();
              struct.setOrderMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MARKET_SUB_ORDER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list96 = iprot.readListBegin();
                struct.marketSubOrderList = new ArrayList<MarketSubOrderVo>(_list96.size);
                MarketSubOrderVo _elem97;
                for (int _i98 = 0; _i98 < _list96.size; ++_i98)
                {
                  _elem97 = new MarketSubOrderVo();
                  _elem97.read(iprot);
                  struct.marketSubOrderList.add(_elem97);
                }
                iprot.readListEnd();
              }
              struct.setMarketSubOrderListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // VOUCHERS_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list99 = iprot.readListBegin();
                struct.vouchersIds = new ArrayList<String>(_list99.size);
                String _elem100;
                for (int _i101 = 0; _i101 < _list99.size; ++_i101)
                {
                  _elem100 = iprot.readString();
                  struct.vouchersIds.add(_elem100);
                }
                iprot.readListEnd();
              }
              struct.setVouchersIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CreateMarketOrderReqVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.reqId != null) {
        oprot.writeFieldBegin(REQ_ID_FIELD_DESC);
        oprot.writeString(struct.reqId);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MEMBER_CODE_FIELD_DESC);
      oprot.writeI64(struct.memberCode);
      oprot.writeFieldEnd();
      if (struct.memberName != null) {
        if (struct.isSetMemberName()) {
          oprot.writeFieldBegin(MEMBER_NAME_FIELD_DESC);
          oprot.writeString(struct.memberName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ORDER_ORI_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.orderOriMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORDER_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.orderMoney);
      oprot.writeFieldEnd();
      if (struct.marketSubOrderList != null) {
        oprot.writeFieldBegin(MARKET_SUB_ORDER_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.marketSubOrderList.size()));
          for (MarketSubOrderVo _iter102 : struct.marketSubOrderList)
          {
            _iter102.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.vouchersIds != null) {
        if (struct.isSetVouchersIds()) {
          oprot.writeFieldBegin(VOUCHERS_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.vouchersIds.size()));
            for (String _iter103 : struct.vouchersIds)
            {
              oprot.writeString(_iter103);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CreateMarketOrderReqVoTupleSchemeFactory implements SchemeFactory {
    public CreateMarketOrderReqVoTupleScheme getScheme() {
      return new CreateMarketOrderReqVoTupleScheme();
    }
  }

  private static class CreateMarketOrderReqVoTupleScheme extends TupleScheme<CreateMarketOrderReqVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CreateMarketOrderReqVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetReqId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetMemberCode()) {
        optionals.set(2);
      }
      if (struct.isSetMemberName()) {
        optionals.set(3);
      }
      if (struct.isSetPhone()) {
        optionals.set(4);
      }
      if (struct.isSetOrderId()) {
        optionals.set(5);
      }
      if (struct.isSetOrderOriMoney()) {
        optionals.set(6);
      }
      if (struct.isSetOrderMoney()) {
        optionals.set(7);
      }
      if (struct.isSetMarketSubOrderList()) {
        optionals.set(8);
      }
      if (struct.isSetVouchersIds()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetReqId()) {
        oprot.writeString(struct.reqId);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMemberCode()) {
        oprot.writeI64(struct.memberCode);
      }
      if (struct.isSetMemberName()) {
        oprot.writeString(struct.memberName);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetOrderOriMoney()) {
        oprot.writeDouble(struct.orderOriMoney);
      }
      if (struct.isSetOrderMoney()) {
        oprot.writeDouble(struct.orderMoney);
      }
      if (struct.isSetMarketSubOrderList()) {
        {
          oprot.writeI32(struct.marketSubOrderList.size());
          for (MarketSubOrderVo _iter104 : struct.marketSubOrderList)
          {
            _iter104.write(oprot);
          }
        }
      }
      if (struct.isSetVouchersIds()) {
        {
          oprot.writeI32(struct.vouchersIds.size());
          for (String _iter105 : struct.vouchersIds)
          {
            oprot.writeString(_iter105);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CreateMarketOrderReqVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.reqId = iprot.readString();
        struct.setReqIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.memberCode = iprot.readI64();
        struct.setMemberCodeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.memberName = iprot.readString();
        struct.setMemberNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(5)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.orderOriMoney = iprot.readDouble();
        struct.setOrderOriMoneyIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orderMoney = iprot.readDouble();
        struct.setOrderMoneyIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TList _list106 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.marketSubOrderList = new ArrayList<MarketSubOrderVo>(_list106.size);
          MarketSubOrderVo _elem107;
          for (int _i108 = 0; _i108 < _list106.size; ++_i108)
          {
            _elem107 = new MarketSubOrderVo();
            _elem107.read(iprot);
            struct.marketSubOrderList.add(_elem107);
          }
        }
        struct.setMarketSubOrderListIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TList _list109 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.vouchersIds = new ArrayList<String>(_list109.size);
          String _elem110;
          for (int _i111 = 0; _i111 < _list109.size; ++_i111)
          {
            _elem110 = iprot.readString();
            struct.vouchersIds.add(_elem110);
          }
        }
        struct.setVouchersIdsIsSet(true);
      }
    }
  }

}

