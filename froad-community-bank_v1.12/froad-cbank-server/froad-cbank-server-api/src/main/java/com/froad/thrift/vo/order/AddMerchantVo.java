/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 添加订单-商户
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class AddMerchantVo implements org.apache.thrift.TBase<AddMerchantVo, AddMerchantVo._Fields>, java.io.Serializable, Cloneable, Comparable<AddMerchantVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AddMerchantVo");

  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ADD_PRODUCT_VO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("addProductVoList", org.apache.thrift.protocol.TType.LIST, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AddMerchantVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AddMerchantVoTupleSchemeFactory());
  }

  /**
   * 商户ID
   */
  public String merchantId; // required
  /**
   * 商品信息
   */
  public List<AddProductVo> addProductVoList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商户ID
     */
    MERCHANT_ID((short)1, "merchantId"),
    /**
     * 商品信息
     */
    ADD_PRODUCT_VO_LIST((short)2, "addProductVoList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MERCHANT_ID
          return MERCHANT_ID;
        case 2: // ADD_PRODUCT_VO_LIST
          return ADD_PRODUCT_VO_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADD_PRODUCT_VO_LIST, new org.apache.thrift.meta_data.FieldMetaData("addProductVoList", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AddProductVo.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AddMerchantVo.class, metaDataMap);
  }

  public AddMerchantVo() {
  }

  public AddMerchantVo(
    String merchantId,
    List<AddProductVo> addProductVoList)
  {
    this();
    this.merchantId = merchantId;
    this.addProductVoList = addProductVoList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AddMerchantVo(AddMerchantVo other) {
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetAddProductVoList()) {
      List<AddProductVo> __this__addProductVoList = new ArrayList<AddProductVo>(other.addProductVoList.size());
      for (AddProductVo other_element : other.addProductVoList) {
        __this__addProductVoList.add(new AddProductVo(other_element));
      }
      this.addProductVoList = __this__addProductVoList;
    }
  }

  public AddMerchantVo deepCopy() {
    return new AddMerchantVo(this);
  }

  @Override
  public void clear() {
    this.merchantId = null;
    this.addProductVoList = null;
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public AddMerchantVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  public int getAddProductVoListSize() {
    return (this.addProductVoList == null) ? 0 : this.addProductVoList.size();
  }

  public java.util.Iterator<AddProductVo> getAddProductVoListIterator() {
    return (this.addProductVoList == null) ? null : this.addProductVoList.iterator();
  }

  public void addToAddProductVoList(AddProductVo elem) {
    if (this.addProductVoList == null) {
      this.addProductVoList = new ArrayList<AddProductVo>();
    }
    this.addProductVoList.add(elem);
  }

  /**
   * 商品信息
   */
  public List<AddProductVo> getAddProductVoList() {
    return this.addProductVoList;
  }

  /**
   * 商品信息
   */
  public AddMerchantVo setAddProductVoList(List<AddProductVo> addProductVoList) {
    this.addProductVoList = addProductVoList;
    return this;
  }

  public void unsetAddProductVoList() {
    this.addProductVoList = null;
  }

  /** Returns true if field addProductVoList is set (has been assigned a value) and false otherwise */
  public boolean isSetAddProductVoList() {
    return this.addProductVoList != null;
  }

  public void setAddProductVoListIsSet(boolean value) {
    if (!value) {
      this.addProductVoList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case ADD_PRODUCT_VO_LIST:
      if (value == null) {
        unsetAddProductVoList();
      } else {
        setAddProductVoList((List<AddProductVo>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MERCHANT_ID:
      return getMerchantId();

    case ADD_PRODUCT_VO_LIST:
      return getAddProductVoList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MERCHANT_ID:
      return isSetMerchantId();
    case ADD_PRODUCT_VO_LIST:
      return isSetAddProductVoList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AddMerchantVo)
      return this.equals((AddMerchantVo)that);
    return false;
  }

  public boolean equals(AddMerchantVo that) {
    if (that == null)
      return false;

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_addProductVoList = true && this.isSetAddProductVoList();
    boolean that_present_addProductVoList = true && that.isSetAddProductVoList();
    if (this_present_addProductVoList || that_present_addProductVoList) {
      if (!(this_present_addProductVoList && that_present_addProductVoList))
        return false;
      if (!this.addProductVoList.equals(that.addProductVoList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_addProductVoList = true && (isSetAddProductVoList());
    list.add(present_addProductVoList);
    if (present_addProductVoList)
      list.add(addProductVoList);

    return list.hashCode();
  }

  @Override
  public int compareTo(AddMerchantVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddProductVoList()).compareTo(other.isSetAddProductVoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddProductVoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.addProductVoList, other.addProductVoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AddMerchantVo(");
    boolean first = true;

    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("addProductVoList:");
    if (this.addProductVoList == null) {
      sb.append("null");
    } else {
      sb.append(this.addProductVoList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (merchantId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'merchantId' was not present! Struct: " + toString());
    }
    if (addProductVoList == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'addProductVoList' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AddMerchantVoStandardSchemeFactory implements SchemeFactory {
    public AddMerchantVoStandardScheme getScheme() {
      return new AddMerchantVoStandardScheme();
    }
  }

  private static class AddMerchantVoStandardScheme extends StandardScheme<AddMerchantVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AddMerchantVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ADD_PRODUCT_VO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.addProductVoList = new ArrayList<AddProductVo>(_list0.size);
                AddProductVo _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new AddProductVo();
                  _elem1.read(iprot);
                  struct.addProductVoList.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setAddProductVoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AddMerchantVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.addProductVoList != null) {
        oprot.writeFieldBegin(ADD_PRODUCT_VO_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.addProductVoList.size()));
          for (AddProductVo _iter3 : struct.addProductVoList)
          {
            _iter3.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AddMerchantVoTupleSchemeFactory implements SchemeFactory {
    public AddMerchantVoTupleScheme getScheme() {
      return new AddMerchantVoTupleScheme();
    }
  }

  private static class AddMerchantVoTupleScheme extends TupleScheme<AddMerchantVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AddMerchantVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.merchantId);
      {
        oprot.writeI32(struct.addProductVoList.size());
        for (AddProductVo _iter4 : struct.addProductVoList)
        {
          _iter4.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AddMerchantVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.merchantId = iprot.readString();
      struct.setMerchantIdIsSet(true);
      {
        org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.addProductVoList = new ArrayList<AddProductVo>(_list5.size);
        AddProductVo _elem6;
        for (int _i7 = 0; _i7 < _list5.size; ++_i7)
        {
          _elem6 = new AddProductVo();
          _elem6.read(iprot);
          struct.addProductVoList.add(_elem6);
        }
      }
      struct.setAddProductVoListIsSet(true);
    }
  }

}

