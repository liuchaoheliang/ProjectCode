/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.member;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * VIP信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MemberVIPInfoVo implements org.apache.thrift.TBase<MemberVIPInfoVo, MemberVIPInfoVo._Fields>, java.io.Serializable, Cloneable, Comparable<MemberVIPInfoVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MemberVIPInfoVo");

  private static final org.apache.thrift.protocol.TField BANK_ORG_FIELD_DESC = new org.apache.thrift.protocol.TField("bankOrg", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField EXPIRATIOIN_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("expiratioinDays", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField VIP_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("vipLevel", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField VIP_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("vipStatus", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField BANK_LABEL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("bankLabelName", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MemberVIPInfoVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MemberVIPInfoVoTupleSchemeFactory());
  }

  public String bankOrg; // required
  public int expiratioinDays; // required
  public String vipLevel; // required
  public String vipStatus; // required
  public String bankLabelName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    BANK_ORG((short)1, "bankOrg"),
    EXPIRATIOIN_DAYS((short)2, "expiratioinDays"),
    VIP_LEVEL((short)3, "vipLevel"),
    VIP_STATUS((short)4, "vipStatus"),
    BANK_LABEL_NAME((short)5, "bankLabelName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BANK_ORG
          return BANK_ORG;
        case 2: // EXPIRATIOIN_DAYS
          return EXPIRATIOIN_DAYS;
        case 3: // VIP_LEVEL
          return VIP_LEVEL;
        case 4: // VIP_STATUS
          return VIP_STATUS;
        case 5: // BANK_LABEL_NAME
          return BANK_LABEL_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __EXPIRATIOINDAYS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BANK_ORG, new org.apache.thrift.meta_data.FieldMetaData("bankOrg", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPIRATIOIN_DAYS, new org.apache.thrift.meta_data.FieldMetaData("expiratioinDays", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VIP_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("vipLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VIP_STATUS, new org.apache.thrift.meta_data.FieldMetaData("vipStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_LABEL_NAME, new org.apache.thrift.meta_data.FieldMetaData("bankLabelName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MemberVIPInfoVo.class, metaDataMap);
  }

  public MemberVIPInfoVo() {
  }

  public MemberVIPInfoVo(
    String bankOrg,
    int expiratioinDays,
    String vipLevel,
    String vipStatus,
    String bankLabelName)
  {
    this();
    this.bankOrg = bankOrg;
    this.expiratioinDays = expiratioinDays;
    setExpiratioinDaysIsSet(true);
    this.vipLevel = vipLevel;
    this.vipStatus = vipStatus;
    this.bankLabelName = bankLabelName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MemberVIPInfoVo(MemberVIPInfoVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetBankOrg()) {
      this.bankOrg = other.bankOrg;
    }
    this.expiratioinDays = other.expiratioinDays;
    if (other.isSetVipLevel()) {
      this.vipLevel = other.vipLevel;
    }
    if (other.isSetVipStatus()) {
      this.vipStatus = other.vipStatus;
    }
    if (other.isSetBankLabelName()) {
      this.bankLabelName = other.bankLabelName;
    }
  }

  public MemberVIPInfoVo deepCopy() {
    return new MemberVIPInfoVo(this);
  }

  @Override
  public void clear() {
    this.bankOrg = null;
    setExpiratioinDaysIsSet(false);
    this.expiratioinDays = 0;
    this.vipLevel = null;
    this.vipStatus = null;
    this.bankLabelName = null;
  }

  public String getBankOrg() {
    return this.bankOrg;
  }

  public MemberVIPInfoVo setBankOrg(String bankOrg) {
    this.bankOrg = bankOrg;
    return this;
  }

  public void unsetBankOrg() {
    this.bankOrg = null;
  }

  /** Returns true if field bankOrg is set (has been assigned a value) and false otherwise */
  public boolean isSetBankOrg() {
    return this.bankOrg != null;
  }

  public void setBankOrgIsSet(boolean value) {
    if (!value) {
      this.bankOrg = null;
    }
  }

  public int getExpiratioinDays() {
    return this.expiratioinDays;
  }

  public MemberVIPInfoVo setExpiratioinDays(int expiratioinDays) {
    this.expiratioinDays = expiratioinDays;
    setExpiratioinDaysIsSet(true);
    return this;
  }

  public void unsetExpiratioinDays() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPIRATIOINDAYS_ISSET_ID);
  }

  /** Returns true if field expiratioinDays is set (has been assigned a value) and false otherwise */
  public boolean isSetExpiratioinDays() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPIRATIOINDAYS_ISSET_ID);
  }

  public void setExpiratioinDaysIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPIRATIOINDAYS_ISSET_ID, value);
  }

  public String getVipLevel() {
    return this.vipLevel;
  }

  public MemberVIPInfoVo setVipLevel(String vipLevel) {
    this.vipLevel = vipLevel;
    return this;
  }

  public void unsetVipLevel() {
    this.vipLevel = null;
  }

  /** Returns true if field vipLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetVipLevel() {
    return this.vipLevel != null;
  }

  public void setVipLevelIsSet(boolean value) {
    if (!value) {
      this.vipLevel = null;
    }
  }

  public String getVipStatus() {
    return this.vipStatus;
  }

  public MemberVIPInfoVo setVipStatus(String vipStatus) {
    this.vipStatus = vipStatus;
    return this;
  }

  public void unsetVipStatus() {
    this.vipStatus = null;
  }

  /** Returns true if field vipStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetVipStatus() {
    return this.vipStatus != null;
  }

  public void setVipStatusIsSet(boolean value) {
    if (!value) {
      this.vipStatus = null;
    }
  }

  public String getBankLabelName() {
    return this.bankLabelName;
  }

  public MemberVIPInfoVo setBankLabelName(String bankLabelName) {
    this.bankLabelName = bankLabelName;
    return this;
  }

  public void unsetBankLabelName() {
    this.bankLabelName = null;
  }

  /** Returns true if field bankLabelName is set (has been assigned a value) and false otherwise */
  public boolean isSetBankLabelName() {
    return this.bankLabelName != null;
  }

  public void setBankLabelNameIsSet(boolean value) {
    if (!value) {
      this.bankLabelName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case BANK_ORG:
      if (value == null) {
        unsetBankOrg();
      } else {
        setBankOrg((String)value);
      }
      break;

    case EXPIRATIOIN_DAYS:
      if (value == null) {
        unsetExpiratioinDays();
      } else {
        setExpiratioinDays((Integer)value);
      }
      break;

    case VIP_LEVEL:
      if (value == null) {
        unsetVipLevel();
      } else {
        setVipLevel((String)value);
      }
      break;

    case VIP_STATUS:
      if (value == null) {
        unsetVipStatus();
      } else {
        setVipStatus((String)value);
      }
      break;

    case BANK_LABEL_NAME:
      if (value == null) {
        unsetBankLabelName();
      } else {
        setBankLabelName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case BANK_ORG:
      return getBankOrg();

    case EXPIRATIOIN_DAYS:
      return Integer.valueOf(getExpiratioinDays());

    case VIP_LEVEL:
      return getVipLevel();

    case VIP_STATUS:
      return getVipStatus();

    case BANK_LABEL_NAME:
      return getBankLabelName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case BANK_ORG:
      return isSetBankOrg();
    case EXPIRATIOIN_DAYS:
      return isSetExpiratioinDays();
    case VIP_LEVEL:
      return isSetVipLevel();
    case VIP_STATUS:
      return isSetVipStatus();
    case BANK_LABEL_NAME:
      return isSetBankLabelName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MemberVIPInfoVo)
      return this.equals((MemberVIPInfoVo)that);
    return false;
  }

  public boolean equals(MemberVIPInfoVo that) {
    if (that == null)
      return false;

    boolean this_present_bankOrg = true && this.isSetBankOrg();
    boolean that_present_bankOrg = true && that.isSetBankOrg();
    if (this_present_bankOrg || that_present_bankOrg) {
      if (!(this_present_bankOrg && that_present_bankOrg))
        return false;
      if (!this.bankOrg.equals(that.bankOrg))
        return false;
    }

    boolean this_present_expiratioinDays = true;
    boolean that_present_expiratioinDays = true;
    if (this_present_expiratioinDays || that_present_expiratioinDays) {
      if (!(this_present_expiratioinDays && that_present_expiratioinDays))
        return false;
      if (this.expiratioinDays != that.expiratioinDays)
        return false;
    }

    boolean this_present_vipLevel = true && this.isSetVipLevel();
    boolean that_present_vipLevel = true && that.isSetVipLevel();
    if (this_present_vipLevel || that_present_vipLevel) {
      if (!(this_present_vipLevel && that_present_vipLevel))
        return false;
      if (!this.vipLevel.equals(that.vipLevel))
        return false;
    }

    boolean this_present_vipStatus = true && this.isSetVipStatus();
    boolean that_present_vipStatus = true && that.isSetVipStatus();
    if (this_present_vipStatus || that_present_vipStatus) {
      if (!(this_present_vipStatus && that_present_vipStatus))
        return false;
      if (!this.vipStatus.equals(that.vipStatus))
        return false;
    }

    boolean this_present_bankLabelName = true && this.isSetBankLabelName();
    boolean that_present_bankLabelName = true && that.isSetBankLabelName();
    if (this_present_bankLabelName || that_present_bankLabelName) {
      if (!(this_present_bankLabelName && that_present_bankLabelName))
        return false;
      if (!this.bankLabelName.equals(that.bankLabelName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_bankOrg = true && (isSetBankOrg());
    list.add(present_bankOrg);
    if (present_bankOrg)
      list.add(bankOrg);

    boolean present_expiratioinDays = true;
    list.add(present_expiratioinDays);
    if (present_expiratioinDays)
      list.add(expiratioinDays);

    boolean present_vipLevel = true && (isSetVipLevel());
    list.add(present_vipLevel);
    if (present_vipLevel)
      list.add(vipLevel);

    boolean present_vipStatus = true && (isSetVipStatus());
    list.add(present_vipStatus);
    if (present_vipStatus)
      list.add(vipStatus);

    boolean present_bankLabelName = true && (isSetBankLabelName());
    list.add(present_bankLabelName);
    if (present_bankLabelName)
      list.add(bankLabelName);

    return list.hashCode();
  }

  @Override
  public int compareTo(MemberVIPInfoVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetBankOrg()).compareTo(other.isSetBankOrg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankOrg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankOrg, other.bankOrg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpiratioinDays()).compareTo(other.isSetExpiratioinDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpiratioinDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expiratioinDays, other.expiratioinDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipLevel()).compareTo(other.isSetVipLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipLevel, other.vipLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipStatus()).compareTo(other.isSetVipStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipStatus, other.vipStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankLabelName()).compareTo(other.isSetBankLabelName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankLabelName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankLabelName, other.bankLabelName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MemberVIPInfoVo(");
    boolean first = true;

    sb.append("bankOrg:");
    if (this.bankOrg == null) {
      sb.append("null");
    } else {
      sb.append(this.bankOrg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("expiratioinDays:");
    sb.append(this.expiratioinDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipLevel:");
    if (this.vipLevel == null) {
      sb.append("null");
    } else {
      sb.append(this.vipLevel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipStatus:");
    if (this.vipStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.vipStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankLabelName:");
    if (this.bankLabelName == null) {
      sb.append("null");
    } else {
      sb.append(this.bankLabelName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MemberVIPInfoVoStandardSchemeFactory implements SchemeFactory {
    public MemberVIPInfoVoStandardScheme getScheme() {
      return new MemberVIPInfoVoStandardScheme();
    }
  }

  private static class MemberVIPInfoVoStandardScheme extends StandardScheme<MemberVIPInfoVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MemberVIPInfoVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BANK_ORG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankOrg = iprot.readString();
              struct.setBankOrgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // EXPIRATIOIN_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.expiratioinDays = iprot.readI32();
              struct.setExpiratioinDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VIP_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.vipLevel = iprot.readString();
              struct.setVipLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VIP_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.vipStatus = iprot.readString();
              struct.setVipStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BANK_LABEL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankLabelName = iprot.readString();
              struct.setBankLabelNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MemberVIPInfoVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.bankOrg != null) {
        oprot.writeFieldBegin(BANK_ORG_FIELD_DESC);
        oprot.writeString(struct.bankOrg);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EXPIRATIOIN_DAYS_FIELD_DESC);
      oprot.writeI32(struct.expiratioinDays);
      oprot.writeFieldEnd();
      if (struct.vipLevel != null) {
        oprot.writeFieldBegin(VIP_LEVEL_FIELD_DESC);
        oprot.writeString(struct.vipLevel);
        oprot.writeFieldEnd();
      }
      if (struct.vipStatus != null) {
        oprot.writeFieldBegin(VIP_STATUS_FIELD_DESC);
        oprot.writeString(struct.vipStatus);
        oprot.writeFieldEnd();
      }
      if (struct.bankLabelName != null) {
        oprot.writeFieldBegin(BANK_LABEL_NAME_FIELD_DESC);
        oprot.writeString(struct.bankLabelName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MemberVIPInfoVoTupleSchemeFactory implements SchemeFactory {
    public MemberVIPInfoVoTupleScheme getScheme() {
      return new MemberVIPInfoVoTupleScheme();
    }
  }

  private static class MemberVIPInfoVoTupleScheme extends TupleScheme<MemberVIPInfoVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MemberVIPInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetBankOrg()) {
        optionals.set(0);
      }
      if (struct.isSetExpiratioinDays()) {
        optionals.set(1);
      }
      if (struct.isSetVipLevel()) {
        optionals.set(2);
      }
      if (struct.isSetVipStatus()) {
        optionals.set(3);
      }
      if (struct.isSetBankLabelName()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetBankOrg()) {
        oprot.writeString(struct.bankOrg);
      }
      if (struct.isSetExpiratioinDays()) {
        oprot.writeI32(struct.expiratioinDays);
      }
      if (struct.isSetVipLevel()) {
        oprot.writeString(struct.vipLevel);
      }
      if (struct.isSetVipStatus()) {
        oprot.writeString(struct.vipStatus);
      }
      if (struct.isSetBankLabelName()) {
        oprot.writeString(struct.bankLabelName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MemberVIPInfoVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.bankOrg = iprot.readString();
        struct.setBankOrgIsSet(true);
      }
      if (incoming.get(1)) {
        struct.expiratioinDays = iprot.readI32();
        struct.setExpiratioinDaysIsSet(true);
      }
      if (incoming.get(2)) {
        struct.vipLevel = iprot.readString();
        struct.setVipLevelIsSet(true);
      }
      if (incoming.get(3)) {
        struct.vipStatus = iprot.readString();
        struct.setVipStatusIsSet(true);
      }
      if (incoming.get(4)) {
        struct.bankLabelName = iprot.readString();
        struct.setBankLabelNameIsSet(true);
      }
    }
  }

}

