/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 订单详情
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class OrderDetailVo implements org.apache.thrift.TBase<OrderDetailVo, OrderDetailVo._Fields>, java.io.Serializable, Cloneable, Comparable<OrderDetailVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrderDetailVo");

  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TOTAL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField ORDER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("orderStatus", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField PAYMENT_METHOD_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentMethod", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PAYMENT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField FFT_POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("fftPoints", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField BANK_POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("bankPoints", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField DELIVER_INFO_DETAIL_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("deliverInfoDetailVo", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField SUB_ORDER_DETAIL_VO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("subOrderDetailVoList", org.apache.thrift.protocol.TType.LIST, (short)10);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_CANCEL_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnableCancel", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_PAY_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnablePay", org.apache.thrift.protocol.TType.BOOL, (short)12);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_REFUND_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnableRefund", org.apache.thrift.protocol.TType.BOOL, (short)13);
  private static final org.apache.thrift.protocol.TField RECV_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recvId", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField IS_SECKILL_FIELD_DESC = new org.apache.thrift.protocol.TField("isSeckill", org.apache.thrift.protocol.TType.BOOL, (short)15);
  private static final org.apache.thrift.protocol.TField DELIVERY_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryFlag", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField IS_VIP_ORDER_FIELD_DESC = new org.apache.thrift.protocol.TField("isVipOrder", org.apache.thrift.protocol.TType.BOOL, (short)17);
  private static final org.apache.thrift.protocol.TField VIP_DISCOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("vipDiscount", org.apache.thrift.protocol.TType.DOUBLE, (short)18);
  private static final org.apache.thrift.protocol.TField GIVE_POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("givePoints", org.apache.thrift.protocol.TType.DOUBLE, (short)19);
  private static final org.apache.thrift.protocol.TField GIVE_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("giveMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)20);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrderDetailVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrderDetailVoTupleSchemeFactory());
  }

  /**
   * 订单ID
   */
  public String orderId; // required
  /**
   * 总金额
   */
  public double totalPrice; // required
  /**
   * 订单状态
   */
  public String orderStatus; // required
  /**
   * 订单创建时间
   */
  public long createTime; // required
  /**
   * 订单支付方式
   */
  public String paymentMethod; // required
  /**
   * 订单支付时间
   */
  public long paymentTime; // required
  /**
   * 分分通积分
   */
  public double fftPoints; // required
  /**
   * 银行通积分
   */
  public double bankPoints; // required
  /**
   * 发货信息
   */
  public DeliverInfoDetailVo deliverInfoDetailVo; // required
  /**
   * 子订单信息
   */
  public List<SubOrderDetailVo> subOrderDetailVoList; // required
  /**
   * 是否可取消
   */
  public boolean isEnableCancel; // required
  /**
   * 是否可支付
   */
  public boolean isEnablePay; // required
  /**
   * 是否可退款
   */
  public boolean isEnableRefund; // required
  /**
   * 收货信息ID
   */
  public String recvId; // required
  /**
   * 是否秒杀
   */
  public boolean isSeckill; // required
  /**
   * 是否补全配送信息:
   * 0：秒杀成功+已填信息
   * 1：秒杀成功+自提
   * 2：秒杀成功+配送
   * 3：秒杀成功+自提、配送
   */
  public String deliveryFlag; // required
  /**
   * 是否VIP订单
   */
  public boolean isVipOrder; // required
  /**
   * VIP优惠金额
   */
  public double vipDiscount; // required
  /**
   * 赠送积分
   */
  public double givePoints; // required
  /**
   * 赠送金额
   */
  public double giveMoney; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 订单ID
     */
    ORDER_ID((short)1, "orderId"),
    /**
     * 总金额
     */
    TOTAL_PRICE((short)2, "totalPrice"),
    /**
     * 订单状态
     */
    ORDER_STATUS((short)3, "orderStatus"),
    /**
     * 订单创建时间
     */
    CREATE_TIME((short)4, "createTime"),
    /**
     * 订单支付方式
     */
    PAYMENT_METHOD((short)5, "paymentMethod"),
    /**
     * 订单支付时间
     */
    PAYMENT_TIME((short)6, "paymentTime"),
    /**
     * 分分通积分
     */
    FFT_POINTS((short)7, "fftPoints"),
    /**
     * 银行通积分
     */
    BANK_POINTS((short)8, "bankPoints"),
    /**
     * 发货信息
     */
    DELIVER_INFO_DETAIL_VO((short)9, "deliverInfoDetailVo"),
    /**
     * 子订单信息
     */
    SUB_ORDER_DETAIL_VO_LIST((short)10, "subOrderDetailVoList"),
    /**
     * 是否可取消
     */
    IS_ENABLE_CANCEL((short)11, "isEnableCancel"),
    /**
     * 是否可支付
     */
    IS_ENABLE_PAY((short)12, "isEnablePay"),
    /**
     * 是否可退款
     */
    IS_ENABLE_REFUND((short)13, "isEnableRefund"),
    /**
     * 收货信息ID
     */
    RECV_ID((short)14, "recvId"),
    /**
     * 是否秒杀
     */
    IS_SECKILL((short)15, "isSeckill"),
    /**
     * 是否补全配送信息:
     * 0：秒杀成功+已填信息
     * 1：秒杀成功+自提
     * 2：秒杀成功+配送
     * 3：秒杀成功+自提、配送
     */
    DELIVERY_FLAG((short)16, "deliveryFlag"),
    /**
     * 是否VIP订单
     */
    IS_VIP_ORDER((short)17, "isVipOrder"),
    /**
     * VIP优惠金额
     */
    VIP_DISCOUNT((short)18, "vipDiscount"),
    /**
     * 赠送积分
     */
    GIVE_POINTS((short)19, "givePoints"),
    /**
     * 赠送金额
     */
    GIVE_MONEY((short)20, "giveMoney");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_ID
          return ORDER_ID;
        case 2: // TOTAL_PRICE
          return TOTAL_PRICE;
        case 3: // ORDER_STATUS
          return ORDER_STATUS;
        case 4: // CREATE_TIME
          return CREATE_TIME;
        case 5: // PAYMENT_METHOD
          return PAYMENT_METHOD;
        case 6: // PAYMENT_TIME
          return PAYMENT_TIME;
        case 7: // FFT_POINTS
          return FFT_POINTS;
        case 8: // BANK_POINTS
          return BANK_POINTS;
        case 9: // DELIVER_INFO_DETAIL_VO
          return DELIVER_INFO_DETAIL_VO;
        case 10: // SUB_ORDER_DETAIL_VO_LIST
          return SUB_ORDER_DETAIL_VO_LIST;
        case 11: // IS_ENABLE_CANCEL
          return IS_ENABLE_CANCEL;
        case 12: // IS_ENABLE_PAY
          return IS_ENABLE_PAY;
        case 13: // IS_ENABLE_REFUND
          return IS_ENABLE_REFUND;
        case 14: // RECV_ID
          return RECV_ID;
        case 15: // IS_SECKILL
          return IS_SECKILL;
        case 16: // DELIVERY_FLAG
          return DELIVERY_FLAG;
        case 17: // IS_VIP_ORDER
          return IS_VIP_ORDER;
        case 18: // VIP_DISCOUNT
          return VIP_DISCOUNT;
        case 19: // GIVE_POINTS
          return GIVE_POINTS;
        case 20: // GIVE_MONEY
          return GIVE_MONEY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TOTALPRICE_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __PAYMENTTIME_ISSET_ID = 2;
  private static final int __FFTPOINTS_ISSET_ID = 3;
  private static final int __BANKPOINTS_ISSET_ID = 4;
  private static final int __ISENABLECANCEL_ISSET_ID = 5;
  private static final int __ISENABLEPAY_ISSET_ID = 6;
  private static final int __ISENABLEREFUND_ISSET_ID = 7;
  private static final int __ISSECKILL_ISSET_ID = 8;
  private static final int __ISVIPORDER_ISSET_ID = 9;
  private static final int __VIPDISCOUNT_ISSET_ID = 10;
  private static final int __GIVEPOINTS_ISSET_ID = 11;
  private static final int __GIVEMONEY_ISSET_ID = 12;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("totalPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ORDER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("orderStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PAYMENT_METHOD, new org.apache.thrift.meta_data.FieldMetaData("paymentMethod", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYMENT_TIME, new org.apache.thrift.meta_data.FieldMetaData("paymentTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FFT_POINTS, new org.apache.thrift.meta_data.FieldMetaData("fftPoints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BANK_POINTS, new org.apache.thrift.meta_data.FieldMetaData("bankPoints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DELIVER_INFO_DETAIL_VO, new org.apache.thrift.meta_data.FieldMetaData("deliverInfoDetailVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DeliverInfoDetailVo.class)));
    tmpMap.put(_Fields.SUB_ORDER_DETAIL_VO_LIST, new org.apache.thrift.meta_data.FieldMetaData("subOrderDetailVoList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SubOrderDetailVo.class))));
    tmpMap.put(_Fields.IS_ENABLE_CANCEL, new org.apache.thrift.meta_data.FieldMetaData("isEnableCancel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_ENABLE_PAY, new org.apache.thrift.meta_data.FieldMetaData("isEnablePay", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_ENABLE_REFUND, new org.apache.thrift.meta_data.FieldMetaData("isEnableRefund", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.RECV_ID, new org.apache.thrift.meta_data.FieldMetaData("recvId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_SECKILL, new org.apache.thrift.meta_data.FieldMetaData("isSeckill", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DELIVERY_FLAG, new org.apache.thrift.meta_data.FieldMetaData("deliveryFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_VIP_ORDER, new org.apache.thrift.meta_data.FieldMetaData("isVipOrder", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.VIP_DISCOUNT, new org.apache.thrift.meta_data.FieldMetaData("vipDiscount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.GIVE_POINTS, new org.apache.thrift.meta_data.FieldMetaData("givePoints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.GIVE_MONEY, new org.apache.thrift.meta_data.FieldMetaData("giveMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrderDetailVo.class, metaDataMap);
  }

  public OrderDetailVo() {
  }

  public OrderDetailVo(
    String orderId,
    double totalPrice,
    String orderStatus,
    long createTime,
    String paymentMethod,
    long paymentTime,
    double fftPoints,
    double bankPoints,
    DeliverInfoDetailVo deliverInfoDetailVo,
    List<SubOrderDetailVo> subOrderDetailVoList,
    boolean isEnableCancel,
    boolean isEnablePay,
    boolean isEnableRefund,
    String recvId,
    boolean isSeckill,
    String deliveryFlag,
    boolean isVipOrder,
    double vipDiscount,
    double givePoints,
    double giveMoney)
  {
    this();
    this.orderId = orderId;
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    this.orderStatus = orderStatus;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.paymentMethod = paymentMethod;
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    this.fftPoints = fftPoints;
    setFftPointsIsSet(true);
    this.bankPoints = bankPoints;
    setBankPointsIsSet(true);
    this.deliverInfoDetailVo = deliverInfoDetailVo;
    this.subOrderDetailVoList = subOrderDetailVoList;
    this.isEnableCancel = isEnableCancel;
    setIsEnableCancelIsSet(true);
    this.isEnablePay = isEnablePay;
    setIsEnablePayIsSet(true);
    this.isEnableRefund = isEnableRefund;
    setIsEnableRefundIsSet(true);
    this.recvId = recvId;
    this.isSeckill = isSeckill;
    setIsSeckillIsSet(true);
    this.deliveryFlag = deliveryFlag;
    this.isVipOrder = isVipOrder;
    setIsVipOrderIsSet(true);
    this.vipDiscount = vipDiscount;
    setVipDiscountIsSet(true);
    this.givePoints = givePoints;
    setGivePointsIsSet(true);
    this.giveMoney = giveMoney;
    setGiveMoneyIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrderDetailVo(OrderDetailVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    this.totalPrice = other.totalPrice;
    if (other.isSetOrderStatus()) {
      this.orderStatus = other.orderStatus;
    }
    this.createTime = other.createTime;
    if (other.isSetPaymentMethod()) {
      this.paymentMethod = other.paymentMethod;
    }
    this.paymentTime = other.paymentTime;
    this.fftPoints = other.fftPoints;
    this.bankPoints = other.bankPoints;
    if (other.isSetDeliverInfoDetailVo()) {
      this.deliverInfoDetailVo = new DeliverInfoDetailVo(other.deliverInfoDetailVo);
    }
    if (other.isSetSubOrderDetailVoList()) {
      List<SubOrderDetailVo> __this__subOrderDetailVoList = new ArrayList<SubOrderDetailVo>(other.subOrderDetailVoList.size());
      for (SubOrderDetailVo other_element : other.subOrderDetailVoList) {
        __this__subOrderDetailVoList.add(new SubOrderDetailVo(other_element));
      }
      this.subOrderDetailVoList = __this__subOrderDetailVoList;
    }
    this.isEnableCancel = other.isEnableCancel;
    this.isEnablePay = other.isEnablePay;
    this.isEnableRefund = other.isEnableRefund;
    if (other.isSetRecvId()) {
      this.recvId = other.recvId;
    }
    this.isSeckill = other.isSeckill;
    if (other.isSetDeliveryFlag()) {
      this.deliveryFlag = other.deliveryFlag;
    }
    this.isVipOrder = other.isVipOrder;
    this.vipDiscount = other.vipDiscount;
    this.givePoints = other.givePoints;
    this.giveMoney = other.giveMoney;
  }

  public OrderDetailVo deepCopy() {
    return new OrderDetailVo(this);
  }

  @Override
  public void clear() {
    this.orderId = null;
    setTotalPriceIsSet(false);
    this.totalPrice = 0.0;
    this.orderStatus = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.paymentMethod = null;
    setPaymentTimeIsSet(false);
    this.paymentTime = 0;
    setFftPointsIsSet(false);
    this.fftPoints = 0.0;
    setBankPointsIsSet(false);
    this.bankPoints = 0.0;
    this.deliverInfoDetailVo = null;
    this.subOrderDetailVoList = null;
    setIsEnableCancelIsSet(false);
    this.isEnableCancel = false;
    setIsEnablePayIsSet(false);
    this.isEnablePay = false;
    setIsEnableRefundIsSet(false);
    this.isEnableRefund = false;
    this.recvId = null;
    setIsSeckillIsSet(false);
    this.isSeckill = false;
    this.deliveryFlag = null;
    setIsVipOrderIsSet(false);
    this.isVipOrder = false;
    setVipDiscountIsSet(false);
    this.vipDiscount = 0.0;
    setGivePointsIsSet(false);
    this.givePoints = 0.0;
    setGiveMoneyIsSet(false);
    this.giveMoney = 0.0;
  }

  /**
   * 订单ID
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 订单ID
   */
  public OrderDetailVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 总金额
   */
  public double getTotalPrice() {
    return this.totalPrice;
  }

  /**
   * 总金额
   */
  public OrderDetailVo setTotalPrice(double totalPrice) {
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    return this;
  }

  public void unsetTotalPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  /** Returns true if field totalPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  public void setTotalPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPRICE_ISSET_ID, value);
  }

  /**
   * 订单状态
   */
  public String getOrderStatus() {
    return this.orderStatus;
  }

  /**
   * 订单状态
   */
  public OrderDetailVo setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

  public void unsetOrderStatus() {
    this.orderStatus = null;
  }

  /** Returns true if field orderStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderStatus() {
    return this.orderStatus != null;
  }

  public void setOrderStatusIsSet(boolean value) {
    if (!value) {
      this.orderStatus = null;
    }
  }

  /**
   * 订单创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 订单创建时间
   */
  public OrderDetailVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 订单支付方式
   */
  public String getPaymentMethod() {
    return this.paymentMethod;
  }

  /**
   * 订单支付方式
   */
  public OrderDetailVo setPaymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

  public void unsetPaymentMethod() {
    this.paymentMethod = null;
  }

  /** Returns true if field paymentMethod is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentMethod() {
    return this.paymentMethod != null;
  }

  public void setPaymentMethodIsSet(boolean value) {
    if (!value) {
      this.paymentMethod = null;
    }
  }

  /**
   * 订单支付时间
   */
  public long getPaymentTime() {
    return this.paymentTime;
  }

  /**
   * 订单支付时间
   */
  public OrderDetailVo setPaymentTime(long paymentTime) {
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    return this;
  }

  public void unsetPaymentTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  /** Returns true if field paymentTime is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentTime() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  public void setPaymentTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID, value);
  }

  /**
   * 分分通积分
   */
  public double getFftPoints() {
    return this.fftPoints;
  }

  /**
   * 分分通积分
   */
  public OrderDetailVo setFftPoints(double fftPoints) {
    this.fftPoints = fftPoints;
    setFftPointsIsSet(true);
    return this;
  }

  public void unsetFftPoints() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FFTPOINTS_ISSET_ID);
  }

  /** Returns true if field fftPoints is set (has been assigned a value) and false otherwise */
  public boolean isSetFftPoints() {
    return EncodingUtils.testBit(__isset_bitfield, __FFTPOINTS_ISSET_ID);
  }

  public void setFftPointsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FFTPOINTS_ISSET_ID, value);
  }

  /**
   * 银行通积分
   */
  public double getBankPoints() {
    return this.bankPoints;
  }

  /**
   * 银行通积分
   */
  public OrderDetailVo setBankPoints(double bankPoints) {
    this.bankPoints = bankPoints;
    setBankPointsIsSet(true);
    return this;
  }

  public void unsetBankPoints() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BANKPOINTS_ISSET_ID);
  }

  /** Returns true if field bankPoints is set (has been assigned a value) and false otherwise */
  public boolean isSetBankPoints() {
    return EncodingUtils.testBit(__isset_bitfield, __BANKPOINTS_ISSET_ID);
  }

  public void setBankPointsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BANKPOINTS_ISSET_ID, value);
  }

  /**
   * 发货信息
   */
  public DeliverInfoDetailVo getDeliverInfoDetailVo() {
    return this.deliverInfoDetailVo;
  }

  /**
   * 发货信息
   */
  public OrderDetailVo setDeliverInfoDetailVo(DeliverInfoDetailVo deliverInfoDetailVo) {
    this.deliverInfoDetailVo = deliverInfoDetailVo;
    return this;
  }

  public void unsetDeliverInfoDetailVo() {
    this.deliverInfoDetailVo = null;
  }

  /** Returns true if field deliverInfoDetailVo is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliverInfoDetailVo() {
    return this.deliverInfoDetailVo != null;
  }

  public void setDeliverInfoDetailVoIsSet(boolean value) {
    if (!value) {
      this.deliverInfoDetailVo = null;
    }
  }

  public int getSubOrderDetailVoListSize() {
    return (this.subOrderDetailVoList == null) ? 0 : this.subOrderDetailVoList.size();
  }

  public java.util.Iterator<SubOrderDetailVo> getSubOrderDetailVoListIterator() {
    return (this.subOrderDetailVoList == null) ? null : this.subOrderDetailVoList.iterator();
  }

  public void addToSubOrderDetailVoList(SubOrderDetailVo elem) {
    if (this.subOrderDetailVoList == null) {
      this.subOrderDetailVoList = new ArrayList<SubOrderDetailVo>();
    }
    this.subOrderDetailVoList.add(elem);
  }

  /**
   * 子订单信息
   */
  public List<SubOrderDetailVo> getSubOrderDetailVoList() {
    return this.subOrderDetailVoList;
  }

  /**
   * 子订单信息
   */
  public OrderDetailVo setSubOrderDetailVoList(List<SubOrderDetailVo> subOrderDetailVoList) {
    this.subOrderDetailVoList = subOrderDetailVoList;
    return this;
  }

  public void unsetSubOrderDetailVoList() {
    this.subOrderDetailVoList = null;
  }

  /** Returns true if field subOrderDetailVoList is set (has been assigned a value) and false otherwise */
  public boolean isSetSubOrderDetailVoList() {
    return this.subOrderDetailVoList != null;
  }

  public void setSubOrderDetailVoListIsSet(boolean value) {
    if (!value) {
      this.subOrderDetailVoList = null;
    }
  }

  /**
   * 是否可取消
   */
  public boolean isIsEnableCancel() {
    return this.isEnableCancel;
  }

  /**
   * 是否可取消
   */
  public OrderDetailVo setIsEnableCancel(boolean isEnableCancel) {
    this.isEnableCancel = isEnableCancel;
    setIsEnableCancelIsSet(true);
    return this;
  }

  public void unsetIsEnableCancel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLECANCEL_ISSET_ID);
  }

  /** Returns true if field isEnableCancel is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnableCancel() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLECANCEL_ISSET_ID);
  }

  public void setIsEnableCancelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLECANCEL_ISSET_ID, value);
  }

  /**
   * 是否可支付
   */
  public boolean isIsEnablePay() {
    return this.isEnablePay;
  }

  /**
   * 是否可支付
   */
  public OrderDetailVo setIsEnablePay(boolean isEnablePay) {
    this.isEnablePay = isEnablePay;
    setIsEnablePayIsSet(true);
    return this;
  }

  public void unsetIsEnablePay() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLEPAY_ISSET_ID);
  }

  /** Returns true if field isEnablePay is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnablePay() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLEPAY_ISSET_ID);
  }

  public void setIsEnablePayIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLEPAY_ISSET_ID, value);
  }

  /**
   * 是否可退款
   */
  public boolean isIsEnableRefund() {
    return this.isEnableRefund;
  }

  /**
   * 是否可退款
   */
  public OrderDetailVo setIsEnableRefund(boolean isEnableRefund) {
    this.isEnableRefund = isEnableRefund;
    setIsEnableRefundIsSet(true);
    return this;
  }

  public void unsetIsEnableRefund() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLEREFUND_ISSET_ID);
  }

  /** Returns true if field isEnableRefund is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnableRefund() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLEREFUND_ISSET_ID);
  }

  public void setIsEnableRefundIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLEREFUND_ISSET_ID, value);
  }

  /**
   * 收货信息ID
   */
  public String getRecvId() {
    return this.recvId;
  }

  /**
   * 收货信息ID
   */
  public OrderDetailVo setRecvId(String recvId) {
    this.recvId = recvId;
    return this;
  }

  public void unsetRecvId() {
    this.recvId = null;
  }

  /** Returns true if field recvId is set (has been assigned a value) and false otherwise */
  public boolean isSetRecvId() {
    return this.recvId != null;
  }

  public void setRecvIdIsSet(boolean value) {
    if (!value) {
      this.recvId = null;
    }
  }

  /**
   * 是否秒杀
   */
  public boolean isIsSeckill() {
    return this.isSeckill;
  }

  /**
   * 是否秒杀
   */
  public OrderDetailVo setIsSeckill(boolean isSeckill) {
    this.isSeckill = isSeckill;
    setIsSeckillIsSet(true);
    return this;
  }

  public void unsetIsSeckill() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISSECKILL_ISSET_ID);
  }

  /** Returns true if field isSeckill is set (has been assigned a value) and false otherwise */
  public boolean isSetIsSeckill() {
    return EncodingUtils.testBit(__isset_bitfield, __ISSECKILL_ISSET_ID);
  }

  public void setIsSeckillIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISSECKILL_ISSET_ID, value);
  }

  /**
   * 是否补全配送信息:
   * 0：秒杀成功+已填信息
   * 1：秒杀成功+自提
   * 2：秒杀成功+配送
   * 3：秒杀成功+自提、配送
   */
  public String getDeliveryFlag() {
    return this.deliveryFlag;
  }

  /**
   * 是否补全配送信息:
   * 0：秒杀成功+已填信息
   * 1：秒杀成功+自提
   * 2：秒杀成功+配送
   * 3：秒杀成功+自提、配送
   */
  public OrderDetailVo setDeliveryFlag(String deliveryFlag) {
    this.deliveryFlag = deliveryFlag;
    return this;
  }

  public void unsetDeliveryFlag() {
    this.deliveryFlag = null;
  }

  /** Returns true if field deliveryFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryFlag() {
    return this.deliveryFlag != null;
  }

  public void setDeliveryFlagIsSet(boolean value) {
    if (!value) {
      this.deliveryFlag = null;
    }
  }

  /**
   * 是否VIP订单
   */
  public boolean isIsVipOrder() {
    return this.isVipOrder;
  }

  /**
   * 是否VIP订单
   */
  public OrderDetailVo setIsVipOrder(boolean isVipOrder) {
    this.isVipOrder = isVipOrder;
    setIsVipOrderIsSet(true);
    return this;
  }

  public void unsetIsVipOrder() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISVIPORDER_ISSET_ID);
  }

  /** Returns true if field isVipOrder is set (has been assigned a value) and false otherwise */
  public boolean isSetIsVipOrder() {
    return EncodingUtils.testBit(__isset_bitfield, __ISVIPORDER_ISSET_ID);
  }

  public void setIsVipOrderIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISVIPORDER_ISSET_ID, value);
  }

  /**
   * VIP优惠金额
   */
  public double getVipDiscount() {
    return this.vipDiscount;
  }

  /**
   * VIP优惠金额
   */
  public OrderDetailVo setVipDiscount(double vipDiscount) {
    this.vipDiscount = vipDiscount;
    setVipDiscountIsSet(true);
    return this;
  }

  public void unsetVipDiscount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIPDISCOUNT_ISSET_ID);
  }

  /** Returns true if field vipDiscount is set (has been assigned a value) and false otherwise */
  public boolean isSetVipDiscount() {
    return EncodingUtils.testBit(__isset_bitfield, __VIPDISCOUNT_ISSET_ID);
  }

  public void setVipDiscountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIPDISCOUNT_ISSET_ID, value);
  }

  /**
   * 赠送积分
   */
  public double getGivePoints() {
    return this.givePoints;
  }

  /**
   * 赠送积分
   */
  public OrderDetailVo setGivePoints(double givePoints) {
    this.givePoints = givePoints;
    setGivePointsIsSet(true);
    return this;
  }

  public void unsetGivePoints() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GIVEPOINTS_ISSET_ID);
  }

  /** Returns true if field givePoints is set (has been assigned a value) and false otherwise */
  public boolean isSetGivePoints() {
    return EncodingUtils.testBit(__isset_bitfield, __GIVEPOINTS_ISSET_ID);
  }

  public void setGivePointsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GIVEPOINTS_ISSET_ID, value);
  }

  /**
   * 赠送金额
   */
  public double getGiveMoney() {
    return this.giveMoney;
  }

  /**
   * 赠送金额
   */
  public OrderDetailVo setGiveMoney(double giveMoney) {
    this.giveMoney = giveMoney;
    setGiveMoneyIsSet(true);
    return this;
  }

  public void unsetGiveMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GIVEMONEY_ISSET_ID);
  }

  /** Returns true if field giveMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetGiveMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __GIVEMONEY_ISSET_ID);
  }

  public void setGiveMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GIVEMONEY_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case TOTAL_PRICE:
      if (value == null) {
        unsetTotalPrice();
      } else {
        setTotalPrice((Double)value);
      }
      break;

    case ORDER_STATUS:
      if (value == null) {
        unsetOrderStatus();
      } else {
        setOrderStatus((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case PAYMENT_METHOD:
      if (value == null) {
        unsetPaymentMethod();
      } else {
        setPaymentMethod((String)value);
      }
      break;

    case PAYMENT_TIME:
      if (value == null) {
        unsetPaymentTime();
      } else {
        setPaymentTime((Long)value);
      }
      break;

    case FFT_POINTS:
      if (value == null) {
        unsetFftPoints();
      } else {
        setFftPoints((Double)value);
      }
      break;

    case BANK_POINTS:
      if (value == null) {
        unsetBankPoints();
      } else {
        setBankPoints((Double)value);
      }
      break;

    case DELIVER_INFO_DETAIL_VO:
      if (value == null) {
        unsetDeliverInfoDetailVo();
      } else {
        setDeliverInfoDetailVo((DeliverInfoDetailVo)value);
      }
      break;

    case SUB_ORDER_DETAIL_VO_LIST:
      if (value == null) {
        unsetSubOrderDetailVoList();
      } else {
        setSubOrderDetailVoList((List<SubOrderDetailVo>)value);
      }
      break;

    case IS_ENABLE_CANCEL:
      if (value == null) {
        unsetIsEnableCancel();
      } else {
        setIsEnableCancel((Boolean)value);
      }
      break;

    case IS_ENABLE_PAY:
      if (value == null) {
        unsetIsEnablePay();
      } else {
        setIsEnablePay((Boolean)value);
      }
      break;

    case IS_ENABLE_REFUND:
      if (value == null) {
        unsetIsEnableRefund();
      } else {
        setIsEnableRefund((Boolean)value);
      }
      break;

    case RECV_ID:
      if (value == null) {
        unsetRecvId();
      } else {
        setRecvId((String)value);
      }
      break;

    case IS_SECKILL:
      if (value == null) {
        unsetIsSeckill();
      } else {
        setIsSeckill((Boolean)value);
      }
      break;

    case DELIVERY_FLAG:
      if (value == null) {
        unsetDeliveryFlag();
      } else {
        setDeliveryFlag((String)value);
      }
      break;

    case IS_VIP_ORDER:
      if (value == null) {
        unsetIsVipOrder();
      } else {
        setIsVipOrder((Boolean)value);
      }
      break;

    case VIP_DISCOUNT:
      if (value == null) {
        unsetVipDiscount();
      } else {
        setVipDiscount((Double)value);
      }
      break;

    case GIVE_POINTS:
      if (value == null) {
        unsetGivePoints();
      } else {
        setGivePoints((Double)value);
      }
      break;

    case GIVE_MONEY:
      if (value == null) {
        unsetGiveMoney();
      } else {
        setGiveMoney((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_ID:
      return getOrderId();

    case TOTAL_PRICE:
      return Double.valueOf(getTotalPrice());

    case ORDER_STATUS:
      return getOrderStatus();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case PAYMENT_METHOD:
      return getPaymentMethod();

    case PAYMENT_TIME:
      return Long.valueOf(getPaymentTime());

    case FFT_POINTS:
      return Double.valueOf(getFftPoints());

    case BANK_POINTS:
      return Double.valueOf(getBankPoints());

    case DELIVER_INFO_DETAIL_VO:
      return getDeliverInfoDetailVo();

    case SUB_ORDER_DETAIL_VO_LIST:
      return getSubOrderDetailVoList();

    case IS_ENABLE_CANCEL:
      return Boolean.valueOf(isIsEnableCancel());

    case IS_ENABLE_PAY:
      return Boolean.valueOf(isIsEnablePay());

    case IS_ENABLE_REFUND:
      return Boolean.valueOf(isIsEnableRefund());

    case RECV_ID:
      return getRecvId();

    case IS_SECKILL:
      return Boolean.valueOf(isIsSeckill());

    case DELIVERY_FLAG:
      return getDeliveryFlag();

    case IS_VIP_ORDER:
      return Boolean.valueOf(isIsVipOrder());

    case VIP_DISCOUNT:
      return Double.valueOf(getVipDiscount());

    case GIVE_POINTS:
      return Double.valueOf(getGivePoints());

    case GIVE_MONEY:
      return Double.valueOf(getGiveMoney());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_ID:
      return isSetOrderId();
    case TOTAL_PRICE:
      return isSetTotalPrice();
    case ORDER_STATUS:
      return isSetOrderStatus();
    case CREATE_TIME:
      return isSetCreateTime();
    case PAYMENT_METHOD:
      return isSetPaymentMethod();
    case PAYMENT_TIME:
      return isSetPaymentTime();
    case FFT_POINTS:
      return isSetFftPoints();
    case BANK_POINTS:
      return isSetBankPoints();
    case DELIVER_INFO_DETAIL_VO:
      return isSetDeliverInfoDetailVo();
    case SUB_ORDER_DETAIL_VO_LIST:
      return isSetSubOrderDetailVoList();
    case IS_ENABLE_CANCEL:
      return isSetIsEnableCancel();
    case IS_ENABLE_PAY:
      return isSetIsEnablePay();
    case IS_ENABLE_REFUND:
      return isSetIsEnableRefund();
    case RECV_ID:
      return isSetRecvId();
    case IS_SECKILL:
      return isSetIsSeckill();
    case DELIVERY_FLAG:
      return isSetDeliveryFlag();
    case IS_VIP_ORDER:
      return isSetIsVipOrder();
    case VIP_DISCOUNT:
      return isSetVipDiscount();
    case GIVE_POINTS:
      return isSetGivePoints();
    case GIVE_MONEY:
      return isSetGiveMoney();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrderDetailVo)
      return this.equals((OrderDetailVo)that);
    return false;
  }

  public boolean equals(OrderDetailVo that) {
    if (that == null)
      return false;

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_totalPrice = true;
    boolean that_present_totalPrice = true;
    if (this_present_totalPrice || that_present_totalPrice) {
      if (!(this_present_totalPrice && that_present_totalPrice))
        return false;
      if (this.totalPrice != that.totalPrice)
        return false;
    }

    boolean this_present_orderStatus = true && this.isSetOrderStatus();
    boolean that_present_orderStatus = true && that.isSetOrderStatus();
    if (this_present_orderStatus || that_present_orderStatus) {
      if (!(this_present_orderStatus && that_present_orderStatus))
        return false;
      if (!this.orderStatus.equals(that.orderStatus))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_paymentMethod = true && this.isSetPaymentMethod();
    boolean that_present_paymentMethod = true && that.isSetPaymentMethod();
    if (this_present_paymentMethod || that_present_paymentMethod) {
      if (!(this_present_paymentMethod && that_present_paymentMethod))
        return false;
      if (!this.paymentMethod.equals(that.paymentMethod))
        return false;
    }

    boolean this_present_paymentTime = true;
    boolean that_present_paymentTime = true;
    if (this_present_paymentTime || that_present_paymentTime) {
      if (!(this_present_paymentTime && that_present_paymentTime))
        return false;
      if (this.paymentTime != that.paymentTime)
        return false;
    }

    boolean this_present_fftPoints = true;
    boolean that_present_fftPoints = true;
    if (this_present_fftPoints || that_present_fftPoints) {
      if (!(this_present_fftPoints && that_present_fftPoints))
        return false;
      if (this.fftPoints != that.fftPoints)
        return false;
    }

    boolean this_present_bankPoints = true;
    boolean that_present_bankPoints = true;
    if (this_present_bankPoints || that_present_bankPoints) {
      if (!(this_present_bankPoints && that_present_bankPoints))
        return false;
      if (this.bankPoints != that.bankPoints)
        return false;
    }

    boolean this_present_deliverInfoDetailVo = true && this.isSetDeliverInfoDetailVo();
    boolean that_present_deliverInfoDetailVo = true && that.isSetDeliverInfoDetailVo();
    if (this_present_deliverInfoDetailVo || that_present_deliverInfoDetailVo) {
      if (!(this_present_deliverInfoDetailVo && that_present_deliverInfoDetailVo))
        return false;
      if (!this.deliverInfoDetailVo.equals(that.deliverInfoDetailVo))
        return false;
    }

    boolean this_present_subOrderDetailVoList = true && this.isSetSubOrderDetailVoList();
    boolean that_present_subOrderDetailVoList = true && that.isSetSubOrderDetailVoList();
    if (this_present_subOrderDetailVoList || that_present_subOrderDetailVoList) {
      if (!(this_present_subOrderDetailVoList && that_present_subOrderDetailVoList))
        return false;
      if (!this.subOrderDetailVoList.equals(that.subOrderDetailVoList))
        return false;
    }

    boolean this_present_isEnableCancel = true;
    boolean that_present_isEnableCancel = true;
    if (this_present_isEnableCancel || that_present_isEnableCancel) {
      if (!(this_present_isEnableCancel && that_present_isEnableCancel))
        return false;
      if (this.isEnableCancel != that.isEnableCancel)
        return false;
    }

    boolean this_present_isEnablePay = true;
    boolean that_present_isEnablePay = true;
    if (this_present_isEnablePay || that_present_isEnablePay) {
      if (!(this_present_isEnablePay && that_present_isEnablePay))
        return false;
      if (this.isEnablePay != that.isEnablePay)
        return false;
    }

    boolean this_present_isEnableRefund = true;
    boolean that_present_isEnableRefund = true;
    if (this_present_isEnableRefund || that_present_isEnableRefund) {
      if (!(this_present_isEnableRefund && that_present_isEnableRefund))
        return false;
      if (this.isEnableRefund != that.isEnableRefund)
        return false;
    }

    boolean this_present_recvId = true && this.isSetRecvId();
    boolean that_present_recvId = true && that.isSetRecvId();
    if (this_present_recvId || that_present_recvId) {
      if (!(this_present_recvId && that_present_recvId))
        return false;
      if (!this.recvId.equals(that.recvId))
        return false;
    }

    boolean this_present_isSeckill = true;
    boolean that_present_isSeckill = true;
    if (this_present_isSeckill || that_present_isSeckill) {
      if (!(this_present_isSeckill && that_present_isSeckill))
        return false;
      if (this.isSeckill != that.isSeckill)
        return false;
    }

    boolean this_present_deliveryFlag = true && this.isSetDeliveryFlag();
    boolean that_present_deliveryFlag = true && that.isSetDeliveryFlag();
    if (this_present_deliveryFlag || that_present_deliveryFlag) {
      if (!(this_present_deliveryFlag && that_present_deliveryFlag))
        return false;
      if (!this.deliveryFlag.equals(that.deliveryFlag))
        return false;
    }

    boolean this_present_isVipOrder = true;
    boolean that_present_isVipOrder = true;
    if (this_present_isVipOrder || that_present_isVipOrder) {
      if (!(this_present_isVipOrder && that_present_isVipOrder))
        return false;
      if (this.isVipOrder != that.isVipOrder)
        return false;
    }

    boolean this_present_vipDiscount = true;
    boolean that_present_vipDiscount = true;
    if (this_present_vipDiscount || that_present_vipDiscount) {
      if (!(this_present_vipDiscount && that_present_vipDiscount))
        return false;
      if (this.vipDiscount != that.vipDiscount)
        return false;
    }

    boolean this_present_givePoints = true;
    boolean that_present_givePoints = true;
    if (this_present_givePoints || that_present_givePoints) {
      if (!(this_present_givePoints && that_present_givePoints))
        return false;
      if (this.givePoints != that.givePoints)
        return false;
    }

    boolean this_present_giveMoney = true;
    boolean that_present_giveMoney = true;
    if (this_present_giveMoney || that_present_giveMoney) {
      if (!(this_present_giveMoney && that_present_giveMoney))
        return false;
      if (this.giveMoney != that.giveMoney)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_totalPrice = true;
    list.add(present_totalPrice);
    if (present_totalPrice)
      list.add(totalPrice);

    boolean present_orderStatus = true && (isSetOrderStatus());
    list.add(present_orderStatus);
    if (present_orderStatus)
      list.add(orderStatus);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_paymentMethod = true && (isSetPaymentMethod());
    list.add(present_paymentMethod);
    if (present_paymentMethod)
      list.add(paymentMethod);

    boolean present_paymentTime = true;
    list.add(present_paymentTime);
    if (present_paymentTime)
      list.add(paymentTime);

    boolean present_fftPoints = true;
    list.add(present_fftPoints);
    if (present_fftPoints)
      list.add(fftPoints);

    boolean present_bankPoints = true;
    list.add(present_bankPoints);
    if (present_bankPoints)
      list.add(bankPoints);

    boolean present_deliverInfoDetailVo = true && (isSetDeliverInfoDetailVo());
    list.add(present_deliverInfoDetailVo);
    if (present_deliverInfoDetailVo)
      list.add(deliverInfoDetailVo);

    boolean present_subOrderDetailVoList = true && (isSetSubOrderDetailVoList());
    list.add(present_subOrderDetailVoList);
    if (present_subOrderDetailVoList)
      list.add(subOrderDetailVoList);

    boolean present_isEnableCancel = true;
    list.add(present_isEnableCancel);
    if (present_isEnableCancel)
      list.add(isEnableCancel);

    boolean present_isEnablePay = true;
    list.add(present_isEnablePay);
    if (present_isEnablePay)
      list.add(isEnablePay);

    boolean present_isEnableRefund = true;
    list.add(present_isEnableRefund);
    if (present_isEnableRefund)
      list.add(isEnableRefund);

    boolean present_recvId = true && (isSetRecvId());
    list.add(present_recvId);
    if (present_recvId)
      list.add(recvId);

    boolean present_isSeckill = true;
    list.add(present_isSeckill);
    if (present_isSeckill)
      list.add(isSeckill);

    boolean present_deliveryFlag = true && (isSetDeliveryFlag());
    list.add(present_deliveryFlag);
    if (present_deliveryFlag)
      list.add(deliveryFlag);

    boolean present_isVipOrder = true;
    list.add(present_isVipOrder);
    if (present_isVipOrder)
      list.add(isVipOrder);

    boolean present_vipDiscount = true;
    list.add(present_vipDiscount);
    if (present_vipDiscount)
      list.add(vipDiscount);

    boolean present_givePoints = true;
    list.add(present_givePoints);
    if (present_givePoints)
      list.add(givePoints);

    boolean present_giveMoney = true;
    list.add(present_giveMoney);
    if (present_giveMoney)
      list.add(giveMoney);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrderDetailVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPrice()).compareTo(other.isSetTotalPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPrice, other.totalPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderStatus()).compareTo(other.isSetOrderStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderStatus, other.orderStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentMethod()).compareTo(other.isSetPaymentMethod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentMethod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentMethod, other.paymentMethod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentTime()).compareTo(other.isSetPaymentTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentTime, other.paymentTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFftPoints()).compareTo(other.isSetFftPoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFftPoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fftPoints, other.fftPoints);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankPoints()).compareTo(other.isSetBankPoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankPoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankPoints, other.bankPoints);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliverInfoDetailVo()).compareTo(other.isSetDeliverInfoDetailVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliverInfoDetailVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliverInfoDetailVo, other.deliverInfoDetailVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubOrderDetailVoList()).compareTo(other.isSetSubOrderDetailVoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubOrderDetailVoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subOrderDetailVoList, other.subOrderDetailVoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnableCancel()).compareTo(other.isSetIsEnableCancel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnableCancel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnableCancel, other.isEnableCancel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnablePay()).compareTo(other.isSetIsEnablePay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnablePay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnablePay, other.isEnablePay);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnableRefund()).compareTo(other.isSetIsEnableRefund());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnableRefund()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnableRefund, other.isEnableRefund);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecvId()).compareTo(other.isSetRecvId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecvId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recvId, other.recvId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsSeckill()).compareTo(other.isSetIsSeckill());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsSeckill()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isSeckill, other.isSeckill);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryFlag()).compareTo(other.isSetDeliveryFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryFlag, other.deliveryFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsVipOrder()).compareTo(other.isSetIsVipOrder());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsVipOrder()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isVipOrder, other.isVipOrder);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipDiscount()).compareTo(other.isSetVipDiscount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipDiscount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipDiscount, other.vipDiscount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGivePoints()).compareTo(other.isSetGivePoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGivePoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.givePoints, other.givePoints);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGiveMoney()).compareTo(other.isSetGiveMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGiveMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.giveMoney, other.giveMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrderDetailVo(");
    boolean first = true;

    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPrice:");
    sb.append(this.totalPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderStatus:");
    if (this.orderStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.orderStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentMethod:");
    if (this.paymentMethod == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentMethod);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentTime:");
    sb.append(this.paymentTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fftPoints:");
    sb.append(this.fftPoints);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankPoints:");
    sb.append(this.bankPoints);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliverInfoDetailVo:");
    if (this.deliverInfoDetailVo == null) {
      sb.append("null");
    } else {
      sb.append(this.deliverInfoDetailVo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("subOrderDetailVoList:");
    if (this.subOrderDetailVoList == null) {
      sb.append("null");
    } else {
      sb.append(this.subOrderDetailVoList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isEnableCancel:");
    sb.append(this.isEnableCancel);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isEnablePay:");
    sb.append(this.isEnablePay);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isEnableRefund:");
    sb.append(this.isEnableRefund);
    first = false;
    if (!first) sb.append(", ");
    sb.append("recvId:");
    if (this.recvId == null) {
      sb.append("null");
    } else {
      sb.append(this.recvId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isSeckill:");
    sb.append(this.isSeckill);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryFlag:");
    if (this.deliveryFlag == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryFlag);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isVipOrder:");
    sb.append(this.isVipOrder);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipDiscount:");
    sb.append(this.vipDiscount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("givePoints:");
    sb.append(this.givePoints);
    first = false;
    if (!first) sb.append(", ");
    sb.append("giveMoney:");
    sb.append(this.giveMoney);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (deliverInfoDetailVo != null) {
      deliverInfoDetailVo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrderDetailVoStandardSchemeFactory implements SchemeFactory {
    public OrderDetailVoStandardScheme getScheme() {
      return new OrderDetailVoStandardScheme();
    }
  }

  private static class OrderDetailVoStandardScheme extends StandardScheme<OrderDetailVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrderDetailVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TOTAL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalPrice = iprot.readDouble();
              struct.setTotalPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORDER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderStatus = iprot.readString();
              struct.setOrderStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PAYMENT_METHOD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paymentMethod = iprot.readString();
              struct.setPaymentMethodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PAYMENT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.paymentTime = iprot.readI64();
              struct.setPaymentTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // FFT_POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.fftPoints = iprot.readDouble();
              struct.setFftPointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BANK_POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.bankPoints = iprot.readDouble();
              struct.setBankPointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DELIVER_INFO_DETAIL_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.deliverInfoDetailVo = new DeliverInfoDetailVo();
              struct.deliverInfoDetailVo.read(iprot);
              struct.setDeliverInfoDetailVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SUB_ORDER_DETAIL_VO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                struct.subOrderDetailVoList = new ArrayList<SubOrderDetailVo>(_list32.size);
                SubOrderDetailVo _elem33;
                for (int _i34 = 0; _i34 < _list32.size; ++_i34)
                {
                  _elem33 = new SubOrderDetailVo();
                  _elem33.read(iprot);
                  struct.subOrderDetailVoList.add(_elem33);
                }
                iprot.readListEnd();
              }
              struct.setSubOrderDetailVoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // IS_ENABLE_CANCEL
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnableCancel = iprot.readBool();
              struct.setIsEnableCancelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_ENABLE_PAY
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnablePay = iprot.readBool();
              struct.setIsEnablePayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // IS_ENABLE_REFUND
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnableRefund = iprot.readBool();
              struct.setIsEnableRefundIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // RECV_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recvId = iprot.readString();
              struct.setRecvIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // IS_SECKILL
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isSeckill = iprot.readBool();
              struct.setIsSeckillIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // DELIVERY_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryFlag = iprot.readString();
              struct.setDeliveryFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // IS_VIP_ORDER
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isVipOrder = iprot.readBool();
              struct.setIsVipOrderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // VIP_DISCOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.vipDiscount = iprot.readDouble();
              struct.setVipDiscountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // GIVE_POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.givePoints = iprot.readDouble();
              struct.setGivePointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // GIVE_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.giveMoney = iprot.readDouble();
              struct.setGiveMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrderDetailVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.totalPrice);
      oprot.writeFieldEnd();
      if (struct.orderStatus != null) {
        oprot.writeFieldBegin(ORDER_STATUS_FIELD_DESC);
        oprot.writeString(struct.orderStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.paymentMethod != null) {
        oprot.writeFieldBegin(PAYMENT_METHOD_FIELD_DESC);
        oprot.writeString(struct.paymentMethod);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAYMENT_TIME_FIELD_DESC);
      oprot.writeI64(struct.paymentTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FFT_POINTS_FIELD_DESC);
      oprot.writeDouble(struct.fftPoints);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BANK_POINTS_FIELD_DESC);
      oprot.writeDouble(struct.bankPoints);
      oprot.writeFieldEnd();
      if (struct.deliverInfoDetailVo != null) {
        oprot.writeFieldBegin(DELIVER_INFO_DETAIL_VO_FIELD_DESC);
        struct.deliverInfoDetailVo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.subOrderDetailVoList != null) {
        oprot.writeFieldBegin(SUB_ORDER_DETAIL_VO_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.subOrderDetailVoList.size()));
          for (SubOrderDetailVo _iter35 : struct.subOrderDetailVoList)
          {
            _iter35.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_ENABLE_CANCEL_FIELD_DESC);
      oprot.writeBool(struct.isEnableCancel);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_ENABLE_PAY_FIELD_DESC);
      oprot.writeBool(struct.isEnablePay);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_ENABLE_REFUND_FIELD_DESC);
      oprot.writeBool(struct.isEnableRefund);
      oprot.writeFieldEnd();
      if (struct.recvId != null) {
        oprot.writeFieldBegin(RECV_ID_FIELD_DESC);
        oprot.writeString(struct.recvId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_SECKILL_FIELD_DESC);
      oprot.writeBool(struct.isSeckill);
      oprot.writeFieldEnd();
      if (struct.deliveryFlag != null) {
        oprot.writeFieldBegin(DELIVERY_FLAG_FIELD_DESC);
        oprot.writeString(struct.deliveryFlag);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_VIP_ORDER_FIELD_DESC);
      oprot.writeBool(struct.isVipOrder);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VIP_DISCOUNT_FIELD_DESC);
      oprot.writeDouble(struct.vipDiscount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GIVE_POINTS_FIELD_DESC);
      oprot.writeDouble(struct.givePoints);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GIVE_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.giveMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrderDetailVoTupleSchemeFactory implements SchemeFactory {
    public OrderDetailVoTupleScheme getScheme() {
      return new OrderDetailVoTupleScheme();
    }
  }

  private static class OrderDetailVoTupleScheme extends TupleScheme<OrderDetailVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrderDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrderId()) {
        optionals.set(0);
      }
      if (struct.isSetTotalPrice()) {
        optionals.set(1);
      }
      if (struct.isSetOrderStatus()) {
        optionals.set(2);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(3);
      }
      if (struct.isSetPaymentMethod()) {
        optionals.set(4);
      }
      if (struct.isSetPaymentTime()) {
        optionals.set(5);
      }
      if (struct.isSetFftPoints()) {
        optionals.set(6);
      }
      if (struct.isSetBankPoints()) {
        optionals.set(7);
      }
      if (struct.isSetDeliverInfoDetailVo()) {
        optionals.set(8);
      }
      if (struct.isSetSubOrderDetailVoList()) {
        optionals.set(9);
      }
      if (struct.isSetIsEnableCancel()) {
        optionals.set(10);
      }
      if (struct.isSetIsEnablePay()) {
        optionals.set(11);
      }
      if (struct.isSetIsEnableRefund()) {
        optionals.set(12);
      }
      if (struct.isSetRecvId()) {
        optionals.set(13);
      }
      if (struct.isSetIsSeckill()) {
        optionals.set(14);
      }
      if (struct.isSetDeliveryFlag()) {
        optionals.set(15);
      }
      if (struct.isSetIsVipOrder()) {
        optionals.set(16);
      }
      if (struct.isSetVipDiscount()) {
        optionals.set(17);
      }
      if (struct.isSetGivePoints()) {
        optionals.set(18);
      }
      if (struct.isSetGiveMoney()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetTotalPrice()) {
        oprot.writeDouble(struct.totalPrice);
      }
      if (struct.isSetOrderStatus()) {
        oprot.writeString(struct.orderStatus);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetPaymentMethod()) {
        oprot.writeString(struct.paymentMethod);
      }
      if (struct.isSetPaymentTime()) {
        oprot.writeI64(struct.paymentTime);
      }
      if (struct.isSetFftPoints()) {
        oprot.writeDouble(struct.fftPoints);
      }
      if (struct.isSetBankPoints()) {
        oprot.writeDouble(struct.bankPoints);
      }
      if (struct.isSetDeliverInfoDetailVo()) {
        struct.deliverInfoDetailVo.write(oprot);
      }
      if (struct.isSetSubOrderDetailVoList()) {
        {
          oprot.writeI32(struct.subOrderDetailVoList.size());
          for (SubOrderDetailVo _iter36 : struct.subOrderDetailVoList)
          {
            _iter36.write(oprot);
          }
        }
      }
      if (struct.isSetIsEnableCancel()) {
        oprot.writeBool(struct.isEnableCancel);
      }
      if (struct.isSetIsEnablePay()) {
        oprot.writeBool(struct.isEnablePay);
      }
      if (struct.isSetIsEnableRefund()) {
        oprot.writeBool(struct.isEnableRefund);
      }
      if (struct.isSetRecvId()) {
        oprot.writeString(struct.recvId);
      }
      if (struct.isSetIsSeckill()) {
        oprot.writeBool(struct.isSeckill);
      }
      if (struct.isSetDeliveryFlag()) {
        oprot.writeString(struct.deliveryFlag);
      }
      if (struct.isSetIsVipOrder()) {
        oprot.writeBool(struct.isVipOrder);
      }
      if (struct.isSetVipDiscount()) {
        oprot.writeDouble(struct.vipDiscount);
      }
      if (struct.isSetGivePoints()) {
        oprot.writeDouble(struct.givePoints);
      }
      if (struct.isSetGiveMoney()) {
        oprot.writeDouble(struct.giveMoney);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrderDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.totalPrice = iprot.readDouble();
        struct.setTotalPriceIsSet(true);
      }
      if (incoming.get(2)) {
        struct.orderStatus = iprot.readString();
        struct.setOrderStatusIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.paymentMethod = iprot.readString();
        struct.setPaymentMethodIsSet(true);
      }
      if (incoming.get(5)) {
        struct.paymentTime = iprot.readI64();
        struct.setPaymentTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.fftPoints = iprot.readDouble();
        struct.setFftPointsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.bankPoints = iprot.readDouble();
        struct.setBankPointsIsSet(true);
      }
      if (incoming.get(8)) {
        struct.deliverInfoDetailVo = new DeliverInfoDetailVo();
        struct.deliverInfoDetailVo.read(iprot);
        struct.setDeliverInfoDetailVoIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.subOrderDetailVoList = new ArrayList<SubOrderDetailVo>(_list37.size);
          SubOrderDetailVo _elem38;
          for (int _i39 = 0; _i39 < _list37.size; ++_i39)
          {
            _elem38 = new SubOrderDetailVo();
            _elem38.read(iprot);
            struct.subOrderDetailVoList.add(_elem38);
          }
        }
        struct.setSubOrderDetailVoListIsSet(true);
      }
      if (incoming.get(10)) {
        struct.isEnableCancel = iprot.readBool();
        struct.setIsEnableCancelIsSet(true);
      }
      if (incoming.get(11)) {
        struct.isEnablePay = iprot.readBool();
        struct.setIsEnablePayIsSet(true);
      }
      if (incoming.get(12)) {
        struct.isEnableRefund = iprot.readBool();
        struct.setIsEnableRefundIsSet(true);
      }
      if (incoming.get(13)) {
        struct.recvId = iprot.readString();
        struct.setRecvIdIsSet(true);
      }
      if (incoming.get(14)) {
        struct.isSeckill = iprot.readBool();
        struct.setIsSeckillIsSet(true);
      }
      if (incoming.get(15)) {
        struct.deliveryFlag = iprot.readString();
        struct.setDeliveryFlagIsSet(true);
      }
      if (incoming.get(16)) {
        struct.isVipOrder = iprot.readBool();
        struct.setIsVipOrderIsSet(true);
      }
      if (incoming.get(17)) {
        struct.vipDiscount = iprot.readDouble();
        struct.setVipDiscountIsSet(true);
      }
      if (incoming.get(18)) {
        struct.givePoints = iprot.readDouble();
        struct.setGivePointsIsSet(true);
      }
      if (incoming.get(19)) {
        struct.giveMoney = iprot.readDouble();
        struct.setGiveMoneyIsSet(true);
      }
    }
  }

}

