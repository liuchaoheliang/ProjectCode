/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.member;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class UserEnginePointsVo implements org.apache.thrift.TBase<UserEnginePointsVo, UserEnginePointsVo._Fields>, java.io.Serializable, Cloneable, Comparable<UserEnginePointsVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserEnginePointsVo");

  private static final org.apache.thrift.protocol.TField FROAD_POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("froadPoints", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField BANK_POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("bankPoints", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField FROAD_POINTS_EXCHAGE_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("froadPointsExchageRate", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField BANK_POINTS_EXCHAGE_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("bankPointsExchageRate", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField FROAD_ORG_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("froadOrgNo", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField RESULT_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("resultMessage", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField RESULT_SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("resultSuccess", org.apache.thrift.protocol.TType.BOOL, (short)7);
  private static final org.apache.thrift.protocol.TField BANK_ORG_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("bankOrgNO", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new UserEnginePointsVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new UserEnginePointsVoTupleSchemeFactory());
  }

  public String froadPoints; // required
  public String bankPoints; // required
  public String froadPointsExchageRate; // required
  public String bankPointsExchageRate; // required
  public String froadOrgNo; // required
  public String resultMessage; // required
  public boolean resultSuccess; // required
  public String bankOrgNO; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    FROAD_POINTS((short)1, "froadPoints"),
    BANK_POINTS((short)2, "bankPoints"),
    FROAD_POINTS_EXCHAGE_RATE((short)3, "froadPointsExchageRate"),
    BANK_POINTS_EXCHAGE_RATE((short)4, "bankPointsExchageRate"),
    FROAD_ORG_NO((short)5, "froadOrgNo"),
    RESULT_MESSAGE((short)6, "resultMessage"),
    RESULT_SUCCESS((short)7, "resultSuccess"),
    BANK_ORG_NO((short)8, "bankOrgNO");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // FROAD_POINTS
          return FROAD_POINTS;
        case 2: // BANK_POINTS
          return BANK_POINTS;
        case 3: // FROAD_POINTS_EXCHAGE_RATE
          return FROAD_POINTS_EXCHAGE_RATE;
        case 4: // BANK_POINTS_EXCHAGE_RATE
          return BANK_POINTS_EXCHAGE_RATE;
        case 5: // FROAD_ORG_NO
          return FROAD_ORG_NO;
        case 6: // RESULT_MESSAGE
          return RESULT_MESSAGE;
        case 7: // RESULT_SUCCESS
          return RESULT_SUCCESS;
        case 8: // BANK_ORG_NO
          return BANK_ORG_NO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RESULTSUCCESS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.FROAD_POINTS, new org.apache.thrift.meta_data.FieldMetaData("froadPoints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_POINTS, new org.apache.thrift.meta_data.FieldMetaData("bankPoints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FROAD_POINTS_EXCHAGE_RATE, new org.apache.thrift.meta_data.FieldMetaData("froadPointsExchageRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_POINTS_EXCHAGE_RATE, new org.apache.thrift.meta_data.FieldMetaData("bankPointsExchageRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FROAD_ORG_NO, new org.apache.thrift.meta_data.FieldMetaData("froadOrgNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("resultMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT_SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("resultSuccess", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.BANK_ORG_NO, new org.apache.thrift.meta_data.FieldMetaData("bankOrgNO", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserEnginePointsVo.class, metaDataMap);
  }

  public UserEnginePointsVo() {
  }

  public UserEnginePointsVo(
    String froadPoints,
    String bankPoints,
    String froadPointsExchageRate,
    String bankPointsExchageRate,
    String froadOrgNo,
    String resultMessage,
    boolean resultSuccess,
    String bankOrgNO)
  {
    this();
    this.froadPoints = froadPoints;
    this.bankPoints = bankPoints;
    this.froadPointsExchageRate = froadPointsExchageRate;
    this.bankPointsExchageRate = bankPointsExchageRate;
    this.froadOrgNo = froadOrgNo;
    this.resultMessage = resultMessage;
    this.resultSuccess = resultSuccess;
    setResultSuccessIsSet(true);
    this.bankOrgNO = bankOrgNO;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserEnginePointsVo(UserEnginePointsVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetFroadPoints()) {
      this.froadPoints = other.froadPoints;
    }
    if (other.isSetBankPoints()) {
      this.bankPoints = other.bankPoints;
    }
    if (other.isSetFroadPointsExchageRate()) {
      this.froadPointsExchageRate = other.froadPointsExchageRate;
    }
    if (other.isSetBankPointsExchageRate()) {
      this.bankPointsExchageRate = other.bankPointsExchageRate;
    }
    if (other.isSetFroadOrgNo()) {
      this.froadOrgNo = other.froadOrgNo;
    }
    if (other.isSetResultMessage()) {
      this.resultMessage = other.resultMessage;
    }
    this.resultSuccess = other.resultSuccess;
    if (other.isSetBankOrgNO()) {
      this.bankOrgNO = other.bankOrgNO;
    }
  }

  public UserEnginePointsVo deepCopy() {
    return new UserEnginePointsVo(this);
  }

  @Override
  public void clear() {
    this.froadPoints = null;
    this.bankPoints = null;
    this.froadPointsExchageRate = null;
    this.bankPointsExchageRate = null;
    this.froadOrgNo = null;
    this.resultMessage = null;
    setResultSuccessIsSet(false);
    this.resultSuccess = false;
    this.bankOrgNO = null;
  }

  public String getFroadPoints() {
    return this.froadPoints;
  }

  public UserEnginePointsVo setFroadPoints(String froadPoints) {
    this.froadPoints = froadPoints;
    return this;
  }

  public void unsetFroadPoints() {
    this.froadPoints = null;
  }

  /** Returns true if field froadPoints is set (has been assigned a value) and false otherwise */
  public boolean isSetFroadPoints() {
    return this.froadPoints != null;
  }

  public void setFroadPointsIsSet(boolean value) {
    if (!value) {
      this.froadPoints = null;
    }
  }

  public String getBankPoints() {
    return this.bankPoints;
  }

  public UserEnginePointsVo setBankPoints(String bankPoints) {
    this.bankPoints = bankPoints;
    return this;
  }

  public void unsetBankPoints() {
    this.bankPoints = null;
  }

  /** Returns true if field bankPoints is set (has been assigned a value) and false otherwise */
  public boolean isSetBankPoints() {
    return this.bankPoints != null;
  }

  public void setBankPointsIsSet(boolean value) {
    if (!value) {
      this.bankPoints = null;
    }
  }

  public String getFroadPointsExchageRate() {
    return this.froadPointsExchageRate;
  }

  public UserEnginePointsVo setFroadPointsExchageRate(String froadPointsExchageRate) {
    this.froadPointsExchageRate = froadPointsExchageRate;
    return this;
  }

  public void unsetFroadPointsExchageRate() {
    this.froadPointsExchageRate = null;
  }

  /** Returns true if field froadPointsExchageRate is set (has been assigned a value) and false otherwise */
  public boolean isSetFroadPointsExchageRate() {
    return this.froadPointsExchageRate != null;
  }

  public void setFroadPointsExchageRateIsSet(boolean value) {
    if (!value) {
      this.froadPointsExchageRate = null;
    }
  }

  public String getBankPointsExchageRate() {
    return this.bankPointsExchageRate;
  }

  public UserEnginePointsVo setBankPointsExchageRate(String bankPointsExchageRate) {
    this.bankPointsExchageRate = bankPointsExchageRate;
    return this;
  }

  public void unsetBankPointsExchageRate() {
    this.bankPointsExchageRate = null;
  }

  /** Returns true if field bankPointsExchageRate is set (has been assigned a value) and false otherwise */
  public boolean isSetBankPointsExchageRate() {
    return this.bankPointsExchageRate != null;
  }

  public void setBankPointsExchageRateIsSet(boolean value) {
    if (!value) {
      this.bankPointsExchageRate = null;
    }
  }

  public String getFroadOrgNo() {
    return this.froadOrgNo;
  }

  public UserEnginePointsVo setFroadOrgNo(String froadOrgNo) {
    this.froadOrgNo = froadOrgNo;
    return this;
  }

  public void unsetFroadOrgNo() {
    this.froadOrgNo = null;
  }

  /** Returns true if field froadOrgNo is set (has been assigned a value) and false otherwise */
  public boolean isSetFroadOrgNo() {
    return this.froadOrgNo != null;
  }

  public void setFroadOrgNoIsSet(boolean value) {
    if (!value) {
      this.froadOrgNo = null;
    }
  }

  public String getResultMessage() {
    return this.resultMessage;
  }

  public UserEnginePointsVo setResultMessage(String resultMessage) {
    this.resultMessage = resultMessage;
    return this;
  }

  public void unsetResultMessage() {
    this.resultMessage = null;
  }

  /** Returns true if field resultMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetResultMessage() {
    return this.resultMessage != null;
  }

  public void setResultMessageIsSet(boolean value) {
    if (!value) {
      this.resultMessage = null;
    }
  }

  public boolean isResultSuccess() {
    return this.resultSuccess;
  }

  public UserEnginePointsVo setResultSuccess(boolean resultSuccess) {
    this.resultSuccess = resultSuccess;
    setResultSuccessIsSet(true);
    return this;
  }

  public void unsetResultSuccess() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RESULTSUCCESS_ISSET_ID);
  }

  /** Returns true if field resultSuccess is set (has been assigned a value) and false otherwise */
  public boolean isSetResultSuccess() {
    return EncodingUtils.testBit(__isset_bitfield, __RESULTSUCCESS_ISSET_ID);
  }

  public void setResultSuccessIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RESULTSUCCESS_ISSET_ID, value);
  }

  public String getBankOrgNO() {
    return this.bankOrgNO;
  }

  public UserEnginePointsVo setBankOrgNO(String bankOrgNO) {
    this.bankOrgNO = bankOrgNO;
    return this;
  }

  public void unsetBankOrgNO() {
    this.bankOrgNO = null;
  }

  /** Returns true if field bankOrgNO is set (has been assigned a value) and false otherwise */
  public boolean isSetBankOrgNO() {
    return this.bankOrgNO != null;
  }

  public void setBankOrgNOIsSet(boolean value) {
    if (!value) {
      this.bankOrgNO = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case FROAD_POINTS:
      if (value == null) {
        unsetFroadPoints();
      } else {
        setFroadPoints((String)value);
      }
      break;

    case BANK_POINTS:
      if (value == null) {
        unsetBankPoints();
      } else {
        setBankPoints((String)value);
      }
      break;

    case FROAD_POINTS_EXCHAGE_RATE:
      if (value == null) {
        unsetFroadPointsExchageRate();
      } else {
        setFroadPointsExchageRate((String)value);
      }
      break;

    case BANK_POINTS_EXCHAGE_RATE:
      if (value == null) {
        unsetBankPointsExchageRate();
      } else {
        setBankPointsExchageRate((String)value);
      }
      break;

    case FROAD_ORG_NO:
      if (value == null) {
        unsetFroadOrgNo();
      } else {
        setFroadOrgNo((String)value);
      }
      break;

    case RESULT_MESSAGE:
      if (value == null) {
        unsetResultMessage();
      } else {
        setResultMessage((String)value);
      }
      break;

    case RESULT_SUCCESS:
      if (value == null) {
        unsetResultSuccess();
      } else {
        setResultSuccess((Boolean)value);
      }
      break;

    case BANK_ORG_NO:
      if (value == null) {
        unsetBankOrgNO();
      } else {
        setBankOrgNO((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case FROAD_POINTS:
      return getFroadPoints();

    case BANK_POINTS:
      return getBankPoints();

    case FROAD_POINTS_EXCHAGE_RATE:
      return getFroadPointsExchageRate();

    case BANK_POINTS_EXCHAGE_RATE:
      return getBankPointsExchageRate();

    case FROAD_ORG_NO:
      return getFroadOrgNo();

    case RESULT_MESSAGE:
      return getResultMessage();

    case RESULT_SUCCESS:
      return Boolean.valueOf(isResultSuccess());

    case BANK_ORG_NO:
      return getBankOrgNO();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case FROAD_POINTS:
      return isSetFroadPoints();
    case BANK_POINTS:
      return isSetBankPoints();
    case FROAD_POINTS_EXCHAGE_RATE:
      return isSetFroadPointsExchageRate();
    case BANK_POINTS_EXCHAGE_RATE:
      return isSetBankPointsExchageRate();
    case FROAD_ORG_NO:
      return isSetFroadOrgNo();
    case RESULT_MESSAGE:
      return isSetResultMessage();
    case RESULT_SUCCESS:
      return isSetResultSuccess();
    case BANK_ORG_NO:
      return isSetBankOrgNO();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof UserEnginePointsVo)
      return this.equals((UserEnginePointsVo)that);
    return false;
  }

  public boolean equals(UserEnginePointsVo that) {
    if (that == null)
      return false;

    boolean this_present_froadPoints = true && this.isSetFroadPoints();
    boolean that_present_froadPoints = true && that.isSetFroadPoints();
    if (this_present_froadPoints || that_present_froadPoints) {
      if (!(this_present_froadPoints && that_present_froadPoints))
        return false;
      if (!this.froadPoints.equals(that.froadPoints))
        return false;
    }

    boolean this_present_bankPoints = true && this.isSetBankPoints();
    boolean that_present_bankPoints = true && that.isSetBankPoints();
    if (this_present_bankPoints || that_present_bankPoints) {
      if (!(this_present_bankPoints && that_present_bankPoints))
        return false;
      if (!this.bankPoints.equals(that.bankPoints))
        return false;
    }

    boolean this_present_froadPointsExchageRate = true && this.isSetFroadPointsExchageRate();
    boolean that_present_froadPointsExchageRate = true && that.isSetFroadPointsExchageRate();
    if (this_present_froadPointsExchageRate || that_present_froadPointsExchageRate) {
      if (!(this_present_froadPointsExchageRate && that_present_froadPointsExchageRate))
        return false;
      if (!this.froadPointsExchageRate.equals(that.froadPointsExchageRate))
        return false;
    }

    boolean this_present_bankPointsExchageRate = true && this.isSetBankPointsExchageRate();
    boolean that_present_bankPointsExchageRate = true && that.isSetBankPointsExchageRate();
    if (this_present_bankPointsExchageRate || that_present_bankPointsExchageRate) {
      if (!(this_present_bankPointsExchageRate && that_present_bankPointsExchageRate))
        return false;
      if (!this.bankPointsExchageRate.equals(that.bankPointsExchageRate))
        return false;
    }

    boolean this_present_froadOrgNo = true && this.isSetFroadOrgNo();
    boolean that_present_froadOrgNo = true && that.isSetFroadOrgNo();
    if (this_present_froadOrgNo || that_present_froadOrgNo) {
      if (!(this_present_froadOrgNo && that_present_froadOrgNo))
        return false;
      if (!this.froadOrgNo.equals(that.froadOrgNo))
        return false;
    }

    boolean this_present_resultMessage = true && this.isSetResultMessage();
    boolean that_present_resultMessage = true && that.isSetResultMessage();
    if (this_present_resultMessage || that_present_resultMessage) {
      if (!(this_present_resultMessage && that_present_resultMessage))
        return false;
      if (!this.resultMessage.equals(that.resultMessage))
        return false;
    }

    boolean this_present_resultSuccess = true;
    boolean that_present_resultSuccess = true;
    if (this_present_resultSuccess || that_present_resultSuccess) {
      if (!(this_present_resultSuccess && that_present_resultSuccess))
        return false;
      if (this.resultSuccess != that.resultSuccess)
        return false;
    }

    boolean this_present_bankOrgNO = true && this.isSetBankOrgNO();
    boolean that_present_bankOrgNO = true && that.isSetBankOrgNO();
    if (this_present_bankOrgNO || that_present_bankOrgNO) {
      if (!(this_present_bankOrgNO && that_present_bankOrgNO))
        return false;
      if (!this.bankOrgNO.equals(that.bankOrgNO))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_froadPoints = true && (isSetFroadPoints());
    list.add(present_froadPoints);
    if (present_froadPoints)
      list.add(froadPoints);

    boolean present_bankPoints = true && (isSetBankPoints());
    list.add(present_bankPoints);
    if (present_bankPoints)
      list.add(bankPoints);

    boolean present_froadPointsExchageRate = true && (isSetFroadPointsExchageRate());
    list.add(present_froadPointsExchageRate);
    if (present_froadPointsExchageRate)
      list.add(froadPointsExchageRate);

    boolean present_bankPointsExchageRate = true && (isSetBankPointsExchageRate());
    list.add(present_bankPointsExchageRate);
    if (present_bankPointsExchageRate)
      list.add(bankPointsExchageRate);

    boolean present_froadOrgNo = true && (isSetFroadOrgNo());
    list.add(present_froadOrgNo);
    if (present_froadOrgNo)
      list.add(froadOrgNo);

    boolean present_resultMessage = true && (isSetResultMessage());
    list.add(present_resultMessage);
    if (present_resultMessage)
      list.add(resultMessage);

    boolean present_resultSuccess = true;
    list.add(present_resultSuccess);
    if (present_resultSuccess)
      list.add(resultSuccess);

    boolean present_bankOrgNO = true && (isSetBankOrgNO());
    list.add(present_bankOrgNO);
    if (present_bankOrgNO)
      list.add(bankOrgNO);

    return list.hashCode();
  }

  @Override
  public int compareTo(UserEnginePointsVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetFroadPoints()).compareTo(other.isSetFroadPoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFroadPoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.froadPoints, other.froadPoints);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankPoints()).compareTo(other.isSetBankPoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankPoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankPoints, other.bankPoints);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFroadPointsExchageRate()).compareTo(other.isSetFroadPointsExchageRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFroadPointsExchageRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.froadPointsExchageRate, other.froadPointsExchageRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankPointsExchageRate()).compareTo(other.isSetBankPointsExchageRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankPointsExchageRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankPointsExchageRate, other.bankPointsExchageRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFroadOrgNo()).compareTo(other.isSetFroadOrgNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFroadOrgNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.froadOrgNo, other.froadOrgNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultMessage()).compareTo(other.isSetResultMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultMessage, other.resultMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultSuccess()).compareTo(other.isSetResultSuccess());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultSuccess()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultSuccess, other.resultSuccess);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankOrgNO()).compareTo(other.isSetBankOrgNO());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankOrgNO()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankOrgNO, other.bankOrgNO);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("UserEnginePointsVo(");
    boolean first = true;

    sb.append("froadPoints:");
    if (this.froadPoints == null) {
      sb.append("null");
    } else {
      sb.append(this.froadPoints);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankPoints:");
    if (this.bankPoints == null) {
      sb.append("null");
    } else {
      sb.append(this.bankPoints);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("froadPointsExchageRate:");
    if (this.froadPointsExchageRate == null) {
      sb.append("null");
    } else {
      sb.append(this.froadPointsExchageRate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankPointsExchageRate:");
    if (this.bankPointsExchageRate == null) {
      sb.append("null");
    } else {
      sb.append(this.bankPointsExchageRate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("froadOrgNo:");
    if (this.froadOrgNo == null) {
      sb.append("null");
    } else {
      sb.append(this.froadOrgNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultMessage:");
    if (this.resultMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.resultMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultSuccess:");
    sb.append(this.resultSuccess);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankOrgNO:");
    if (this.bankOrgNO == null) {
      sb.append("null");
    } else {
      sb.append(this.bankOrgNO);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserEnginePointsVoStandardSchemeFactory implements SchemeFactory {
    public UserEnginePointsVoStandardScheme getScheme() {
      return new UserEnginePointsVoStandardScheme();
    }
  }

  private static class UserEnginePointsVoStandardScheme extends StandardScheme<UserEnginePointsVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserEnginePointsVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // FROAD_POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.froadPoints = iprot.readString();
              struct.setFroadPointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // BANK_POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankPoints = iprot.readString();
              struct.setBankPointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FROAD_POINTS_EXCHAGE_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.froadPointsExchageRate = iprot.readString();
              struct.setFroadPointsExchageRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BANK_POINTS_EXCHAGE_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankPointsExchageRate = iprot.readString();
              struct.setBankPointsExchageRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FROAD_ORG_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.froadOrgNo = iprot.readString();
              struct.setFroadOrgNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RESULT_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resultMessage = iprot.readString();
              struct.setResultMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RESULT_SUCCESS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.resultSuccess = iprot.readBool();
              struct.setResultSuccessIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BANK_ORG_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankOrgNO = iprot.readString();
              struct.setBankOrgNOIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserEnginePointsVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.froadPoints != null) {
        oprot.writeFieldBegin(FROAD_POINTS_FIELD_DESC);
        oprot.writeString(struct.froadPoints);
        oprot.writeFieldEnd();
      }
      if (struct.bankPoints != null) {
        oprot.writeFieldBegin(BANK_POINTS_FIELD_DESC);
        oprot.writeString(struct.bankPoints);
        oprot.writeFieldEnd();
      }
      if (struct.froadPointsExchageRate != null) {
        oprot.writeFieldBegin(FROAD_POINTS_EXCHAGE_RATE_FIELD_DESC);
        oprot.writeString(struct.froadPointsExchageRate);
        oprot.writeFieldEnd();
      }
      if (struct.bankPointsExchageRate != null) {
        oprot.writeFieldBegin(BANK_POINTS_EXCHAGE_RATE_FIELD_DESC);
        oprot.writeString(struct.bankPointsExchageRate);
        oprot.writeFieldEnd();
      }
      if (struct.froadOrgNo != null) {
        oprot.writeFieldBegin(FROAD_ORG_NO_FIELD_DESC);
        oprot.writeString(struct.froadOrgNo);
        oprot.writeFieldEnd();
      }
      if (struct.resultMessage != null) {
        oprot.writeFieldBegin(RESULT_MESSAGE_FIELD_DESC);
        oprot.writeString(struct.resultMessage);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RESULT_SUCCESS_FIELD_DESC);
      oprot.writeBool(struct.resultSuccess);
      oprot.writeFieldEnd();
      if (struct.bankOrgNO != null) {
        oprot.writeFieldBegin(BANK_ORG_NO_FIELD_DESC);
        oprot.writeString(struct.bankOrgNO);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserEnginePointsVoTupleSchemeFactory implements SchemeFactory {
    public UserEnginePointsVoTupleScheme getScheme() {
      return new UserEnginePointsVoTupleScheme();
    }
  }

  private static class UserEnginePointsVoTupleScheme extends TupleScheme<UserEnginePointsVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserEnginePointsVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetFroadPoints()) {
        optionals.set(0);
      }
      if (struct.isSetBankPoints()) {
        optionals.set(1);
      }
      if (struct.isSetFroadPointsExchageRate()) {
        optionals.set(2);
      }
      if (struct.isSetBankPointsExchageRate()) {
        optionals.set(3);
      }
      if (struct.isSetFroadOrgNo()) {
        optionals.set(4);
      }
      if (struct.isSetResultMessage()) {
        optionals.set(5);
      }
      if (struct.isSetResultSuccess()) {
        optionals.set(6);
      }
      if (struct.isSetBankOrgNO()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetFroadPoints()) {
        oprot.writeString(struct.froadPoints);
      }
      if (struct.isSetBankPoints()) {
        oprot.writeString(struct.bankPoints);
      }
      if (struct.isSetFroadPointsExchageRate()) {
        oprot.writeString(struct.froadPointsExchageRate);
      }
      if (struct.isSetBankPointsExchageRate()) {
        oprot.writeString(struct.bankPointsExchageRate);
      }
      if (struct.isSetFroadOrgNo()) {
        oprot.writeString(struct.froadOrgNo);
      }
      if (struct.isSetResultMessage()) {
        oprot.writeString(struct.resultMessage);
      }
      if (struct.isSetResultSuccess()) {
        oprot.writeBool(struct.resultSuccess);
      }
      if (struct.isSetBankOrgNO()) {
        oprot.writeString(struct.bankOrgNO);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserEnginePointsVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.froadPoints = iprot.readString();
        struct.setFroadPointsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.bankPoints = iprot.readString();
        struct.setBankPointsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.froadPointsExchageRate = iprot.readString();
        struct.setFroadPointsExchageRateIsSet(true);
      }
      if (incoming.get(3)) {
        struct.bankPointsExchageRate = iprot.readString();
        struct.setBankPointsExchageRateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.froadOrgNo = iprot.readString();
        struct.setFroadOrgNoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.resultMessage = iprot.readString();
        struct.setResultMessageIsSet(true);
      }
      if (incoming.get(6)) {
        struct.resultSuccess = iprot.readBool();
        struct.setResultSuccessIsSet(true);
      }
      if (incoming.get(7)) {
        struct.bankOrgNO = iprot.readString();
        struct.setBankOrgNOIsSet(true);
      }
    }
  }

}

