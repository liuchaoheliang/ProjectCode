/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.member;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class PeAcctVo implements org.apache.thrift.TBase<PeAcctVo, PeAcctVo._Fields>, java.io.Serializable, Cloneable, Comparable<PeAcctVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PeAcctVo");

  private static final org.apache.thrift.protocol.TField FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("flag", org.apache.thrift.protocol.TType.BOOL, (short)1);
  private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField QUESTIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("questions", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField MEMBER_BANKS_FIELD_DESC = new org.apache.thrift.protocol.TField("memberBanks", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField RESULT_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("resultMessage", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField RESULT_SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("resultSuccess", org.apache.thrift.protocol.TType.BOOL, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PeAcctVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PeAcctVoTupleSchemeFactory());
  }

  public boolean flag; // required
  public String msg; // required
  public List<com.froad.thrift.vo.member.UserEngineQuestionVo> questions; // required
  public List<com.froad.thrift.vo.bankcard.BankCardInfo> memberBanks; // required
  public String resultMessage; // required
  public boolean resultSuccess; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    FLAG((short)1, "flag"),
    MSG((short)2, "msg"),
    QUESTIONS((short)3, "questions"),
    MEMBER_BANKS((short)4, "memberBanks"),
    RESULT_MESSAGE((short)5, "resultMessage"),
    RESULT_SUCCESS((short)6, "resultSuccess");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // FLAG
          return FLAG;
        case 2: // MSG
          return MSG;
        case 3: // QUESTIONS
          return QUESTIONS;
        case 4: // MEMBER_BANKS
          return MEMBER_BANKS;
        case 5: // RESULT_MESSAGE
          return RESULT_MESSAGE;
        case 6: // RESULT_SUCCESS
          return RESULT_SUCCESS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __FLAG_ISSET_ID = 0;
  private static final int __RESULTSUCCESS_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.FLAG, new org.apache.thrift.meta_data.FieldMetaData("flag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MSG, new org.apache.thrift.meta_data.FieldMetaData("msg", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUESTIONS, new org.apache.thrift.meta_data.FieldMetaData("questions", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.member.UserEngineQuestionVo.class))));
    tmpMap.put(_Fields.MEMBER_BANKS, new org.apache.thrift.meta_data.FieldMetaData("memberBanks", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.bankcard.BankCardInfo.class))));
    tmpMap.put(_Fields.RESULT_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("resultMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT_SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("resultSuccess", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PeAcctVo.class, metaDataMap);
  }

  public PeAcctVo() {
  }

  public PeAcctVo(
    boolean flag,
    String msg,
    List<com.froad.thrift.vo.member.UserEngineQuestionVo> questions,
    List<com.froad.thrift.vo.bankcard.BankCardInfo> memberBanks,
    String resultMessage,
    boolean resultSuccess)
  {
    this();
    this.flag = flag;
    setFlagIsSet(true);
    this.msg = msg;
    this.questions = questions;
    this.memberBanks = memberBanks;
    this.resultMessage = resultMessage;
    this.resultSuccess = resultSuccess;
    setResultSuccessIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PeAcctVo(PeAcctVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.flag = other.flag;
    if (other.isSetMsg()) {
      this.msg = other.msg;
    }
    if (other.isSetQuestions()) {
      List<com.froad.thrift.vo.member.UserEngineQuestionVo> __this__questions = new ArrayList<com.froad.thrift.vo.member.UserEngineQuestionVo>(other.questions.size());
      for (com.froad.thrift.vo.member.UserEngineQuestionVo other_element : other.questions) {
        __this__questions.add(new com.froad.thrift.vo.member.UserEngineQuestionVo(other_element));
      }
      this.questions = __this__questions;
    }
    if (other.isSetMemberBanks()) {
      List<com.froad.thrift.vo.bankcard.BankCardInfo> __this__memberBanks = new ArrayList<com.froad.thrift.vo.bankcard.BankCardInfo>(other.memberBanks.size());
      for (com.froad.thrift.vo.bankcard.BankCardInfo other_element : other.memberBanks) {
        __this__memberBanks.add(new com.froad.thrift.vo.bankcard.BankCardInfo(other_element));
      }
      this.memberBanks = __this__memberBanks;
    }
    if (other.isSetResultMessage()) {
      this.resultMessage = other.resultMessage;
    }
    this.resultSuccess = other.resultSuccess;
  }

  public PeAcctVo deepCopy() {
    return new PeAcctVo(this);
  }

  @Override
  public void clear() {
    setFlagIsSet(false);
    this.flag = false;
    this.msg = null;
    this.questions = null;
    this.memberBanks = null;
    this.resultMessage = null;
    setResultSuccessIsSet(false);
    this.resultSuccess = false;
  }

  public boolean isFlag() {
    return this.flag;
  }

  public PeAcctVo setFlag(boolean flag) {
    this.flag = flag;
    setFlagIsSet(true);
    return this;
  }

  public void unsetFlag() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FLAG_ISSET_ID);
  }

  /** Returns true if field flag is set (has been assigned a value) and false otherwise */
  public boolean isSetFlag() {
    return EncodingUtils.testBit(__isset_bitfield, __FLAG_ISSET_ID);
  }

  public void setFlagIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FLAG_ISSET_ID, value);
  }

  public String getMsg() {
    return this.msg;
  }

  public PeAcctVo setMsg(String msg) {
    this.msg = msg;
    return this;
  }

  public void unsetMsg() {
    this.msg = null;
  }

  /** Returns true if field msg is set (has been assigned a value) and false otherwise */
  public boolean isSetMsg() {
    return this.msg != null;
  }

  public void setMsgIsSet(boolean value) {
    if (!value) {
      this.msg = null;
    }
  }

  public int getQuestionsSize() {
    return (this.questions == null) ? 0 : this.questions.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.member.UserEngineQuestionVo> getQuestionsIterator() {
    return (this.questions == null) ? null : this.questions.iterator();
  }

  public void addToQuestions(com.froad.thrift.vo.member.UserEngineQuestionVo elem) {
    if (this.questions == null) {
      this.questions = new ArrayList<com.froad.thrift.vo.member.UserEngineQuestionVo>();
    }
    this.questions.add(elem);
  }

  public List<com.froad.thrift.vo.member.UserEngineQuestionVo> getQuestions() {
    return this.questions;
  }

  public PeAcctVo setQuestions(List<com.froad.thrift.vo.member.UserEngineQuestionVo> questions) {
    this.questions = questions;
    return this;
  }

  public void unsetQuestions() {
    this.questions = null;
  }

  /** Returns true if field questions is set (has been assigned a value) and false otherwise */
  public boolean isSetQuestions() {
    return this.questions != null;
  }

  public void setQuestionsIsSet(boolean value) {
    if (!value) {
      this.questions = null;
    }
  }

  public int getMemberBanksSize() {
    return (this.memberBanks == null) ? 0 : this.memberBanks.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.bankcard.BankCardInfo> getMemberBanksIterator() {
    return (this.memberBanks == null) ? null : this.memberBanks.iterator();
  }

  public void addToMemberBanks(com.froad.thrift.vo.bankcard.BankCardInfo elem) {
    if (this.memberBanks == null) {
      this.memberBanks = new ArrayList<com.froad.thrift.vo.bankcard.BankCardInfo>();
    }
    this.memberBanks.add(elem);
  }

  public List<com.froad.thrift.vo.bankcard.BankCardInfo> getMemberBanks() {
    return this.memberBanks;
  }

  public PeAcctVo setMemberBanks(List<com.froad.thrift.vo.bankcard.BankCardInfo> memberBanks) {
    this.memberBanks = memberBanks;
    return this;
  }

  public void unsetMemberBanks() {
    this.memberBanks = null;
  }

  /** Returns true if field memberBanks is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberBanks() {
    return this.memberBanks != null;
  }

  public void setMemberBanksIsSet(boolean value) {
    if (!value) {
      this.memberBanks = null;
    }
  }

  public String getResultMessage() {
    return this.resultMessage;
  }

  public PeAcctVo setResultMessage(String resultMessage) {
    this.resultMessage = resultMessage;
    return this;
  }

  public void unsetResultMessage() {
    this.resultMessage = null;
  }

  /** Returns true if field resultMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetResultMessage() {
    return this.resultMessage != null;
  }

  public void setResultMessageIsSet(boolean value) {
    if (!value) {
      this.resultMessage = null;
    }
  }

  public boolean isResultSuccess() {
    return this.resultSuccess;
  }

  public PeAcctVo setResultSuccess(boolean resultSuccess) {
    this.resultSuccess = resultSuccess;
    setResultSuccessIsSet(true);
    return this;
  }

  public void unsetResultSuccess() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RESULTSUCCESS_ISSET_ID);
  }

  /** Returns true if field resultSuccess is set (has been assigned a value) and false otherwise */
  public boolean isSetResultSuccess() {
    return EncodingUtils.testBit(__isset_bitfield, __RESULTSUCCESS_ISSET_ID);
  }

  public void setResultSuccessIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RESULTSUCCESS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case FLAG:
      if (value == null) {
        unsetFlag();
      } else {
        setFlag((Boolean)value);
      }
      break;

    case MSG:
      if (value == null) {
        unsetMsg();
      } else {
        setMsg((String)value);
      }
      break;

    case QUESTIONS:
      if (value == null) {
        unsetQuestions();
      } else {
        setQuestions((List<com.froad.thrift.vo.member.UserEngineQuestionVo>)value);
      }
      break;

    case MEMBER_BANKS:
      if (value == null) {
        unsetMemberBanks();
      } else {
        setMemberBanks((List<com.froad.thrift.vo.bankcard.BankCardInfo>)value);
      }
      break;

    case RESULT_MESSAGE:
      if (value == null) {
        unsetResultMessage();
      } else {
        setResultMessage((String)value);
      }
      break;

    case RESULT_SUCCESS:
      if (value == null) {
        unsetResultSuccess();
      } else {
        setResultSuccess((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case FLAG:
      return Boolean.valueOf(isFlag());

    case MSG:
      return getMsg();

    case QUESTIONS:
      return getQuestions();

    case MEMBER_BANKS:
      return getMemberBanks();

    case RESULT_MESSAGE:
      return getResultMessage();

    case RESULT_SUCCESS:
      return Boolean.valueOf(isResultSuccess());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case FLAG:
      return isSetFlag();
    case MSG:
      return isSetMsg();
    case QUESTIONS:
      return isSetQuestions();
    case MEMBER_BANKS:
      return isSetMemberBanks();
    case RESULT_MESSAGE:
      return isSetResultMessage();
    case RESULT_SUCCESS:
      return isSetResultSuccess();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PeAcctVo)
      return this.equals((PeAcctVo)that);
    return false;
  }

  public boolean equals(PeAcctVo that) {
    if (that == null)
      return false;

    boolean this_present_flag = true;
    boolean that_present_flag = true;
    if (this_present_flag || that_present_flag) {
      if (!(this_present_flag && that_present_flag))
        return false;
      if (this.flag != that.flag)
        return false;
    }

    boolean this_present_msg = true && this.isSetMsg();
    boolean that_present_msg = true && that.isSetMsg();
    if (this_present_msg || that_present_msg) {
      if (!(this_present_msg && that_present_msg))
        return false;
      if (!this.msg.equals(that.msg))
        return false;
    }

    boolean this_present_questions = true && this.isSetQuestions();
    boolean that_present_questions = true && that.isSetQuestions();
    if (this_present_questions || that_present_questions) {
      if (!(this_present_questions && that_present_questions))
        return false;
      if (!this.questions.equals(that.questions))
        return false;
    }

    boolean this_present_memberBanks = true && this.isSetMemberBanks();
    boolean that_present_memberBanks = true && that.isSetMemberBanks();
    if (this_present_memberBanks || that_present_memberBanks) {
      if (!(this_present_memberBanks && that_present_memberBanks))
        return false;
      if (!this.memberBanks.equals(that.memberBanks))
        return false;
    }

    boolean this_present_resultMessage = true && this.isSetResultMessage();
    boolean that_present_resultMessage = true && that.isSetResultMessage();
    if (this_present_resultMessage || that_present_resultMessage) {
      if (!(this_present_resultMessage && that_present_resultMessage))
        return false;
      if (!this.resultMessage.equals(that.resultMessage))
        return false;
    }

    boolean this_present_resultSuccess = true;
    boolean that_present_resultSuccess = true;
    if (this_present_resultSuccess || that_present_resultSuccess) {
      if (!(this_present_resultSuccess && that_present_resultSuccess))
        return false;
      if (this.resultSuccess != that.resultSuccess)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_flag = true;
    list.add(present_flag);
    if (present_flag)
      list.add(flag);

    boolean present_msg = true && (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    boolean present_questions = true && (isSetQuestions());
    list.add(present_questions);
    if (present_questions)
      list.add(questions);

    boolean present_memberBanks = true && (isSetMemberBanks());
    list.add(present_memberBanks);
    if (present_memberBanks)
      list.add(memberBanks);

    boolean present_resultMessage = true && (isSetResultMessage());
    list.add(present_resultMessage);
    if (present_resultMessage)
      list.add(resultMessage);

    boolean present_resultSuccess = true;
    list.add(present_resultSuccess);
    if (present_resultSuccess)
      list.add(resultSuccess);

    return list.hashCode();
  }

  @Override
  public int compareTo(PeAcctVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetFlag()).compareTo(other.isSetFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.flag, other.flag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMsg()).compareTo(other.isSetMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.msg, other.msg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuestions()).compareTo(other.isSetQuestions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuestions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.questions, other.questions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberBanks()).compareTo(other.isSetMemberBanks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberBanks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberBanks, other.memberBanks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultMessage()).compareTo(other.isSetResultMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultMessage, other.resultMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultSuccess()).compareTo(other.isSetResultSuccess());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultSuccess()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultSuccess, other.resultSuccess);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PeAcctVo(");
    boolean first = true;

    sb.append("flag:");
    sb.append(this.flag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("msg:");
    if (this.msg == null) {
      sb.append("null");
    } else {
      sb.append(this.msg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("questions:");
    if (this.questions == null) {
      sb.append("null");
    } else {
      sb.append(this.questions);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberBanks:");
    if (this.memberBanks == null) {
      sb.append("null");
    } else {
      sb.append(this.memberBanks);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultMessage:");
    if (this.resultMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.resultMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultSuccess:");
    sb.append(this.resultSuccess);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PeAcctVoStandardSchemeFactory implements SchemeFactory {
    public PeAcctVoStandardScheme getScheme() {
      return new PeAcctVoStandardScheme();
    }
  }

  private static class PeAcctVoStandardScheme extends StandardScheme<PeAcctVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PeAcctVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.flag = iprot.readBool();
              struct.setFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.msg = iprot.readString();
              struct.setMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // QUESTIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.questions = new ArrayList<com.froad.thrift.vo.member.UserEngineQuestionVo>(_list0.size);
                com.froad.thrift.vo.member.UserEngineQuestionVo _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new com.froad.thrift.vo.member.UserEngineQuestionVo();
                  _elem1.read(iprot);
                  struct.questions.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setQuestionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MEMBER_BANKS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.memberBanks = new ArrayList<com.froad.thrift.vo.bankcard.BankCardInfo>(_list3.size);
                com.froad.thrift.vo.bankcard.BankCardInfo _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = new com.froad.thrift.vo.bankcard.BankCardInfo();
                  _elem4.read(iprot);
                  struct.memberBanks.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setMemberBanksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // RESULT_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resultMessage = iprot.readString();
              struct.setResultMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RESULT_SUCCESS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.resultSuccess = iprot.readBool();
              struct.setResultSuccessIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PeAcctVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(FLAG_FIELD_DESC);
      oprot.writeBool(struct.flag);
      oprot.writeFieldEnd();
      if (struct.msg != null) {
        oprot.writeFieldBegin(MSG_FIELD_DESC);
        oprot.writeString(struct.msg);
        oprot.writeFieldEnd();
      }
      if (struct.questions != null) {
        oprot.writeFieldBegin(QUESTIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.questions.size()));
          for (com.froad.thrift.vo.member.UserEngineQuestionVo _iter6 : struct.questions)
          {
            _iter6.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.memberBanks != null) {
        oprot.writeFieldBegin(MEMBER_BANKS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.memberBanks.size()));
          for (com.froad.thrift.vo.bankcard.BankCardInfo _iter7 : struct.memberBanks)
          {
            _iter7.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.resultMessage != null) {
        oprot.writeFieldBegin(RESULT_MESSAGE_FIELD_DESC);
        oprot.writeString(struct.resultMessage);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RESULT_SUCCESS_FIELD_DESC);
      oprot.writeBool(struct.resultSuccess);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PeAcctVoTupleSchemeFactory implements SchemeFactory {
    public PeAcctVoTupleScheme getScheme() {
      return new PeAcctVoTupleScheme();
    }
  }

  private static class PeAcctVoTupleScheme extends TupleScheme<PeAcctVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PeAcctVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetFlag()) {
        optionals.set(0);
      }
      if (struct.isSetMsg()) {
        optionals.set(1);
      }
      if (struct.isSetQuestions()) {
        optionals.set(2);
      }
      if (struct.isSetMemberBanks()) {
        optionals.set(3);
      }
      if (struct.isSetResultMessage()) {
        optionals.set(4);
      }
      if (struct.isSetResultSuccess()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetFlag()) {
        oprot.writeBool(struct.flag);
      }
      if (struct.isSetMsg()) {
        oprot.writeString(struct.msg);
      }
      if (struct.isSetQuestions()) {
        {
          oprot.writeI32(struct.questions.size());
          for (com.froad.thrift.vo.member.UserEngineQuestionVo _iter8 : struct.questions)
          {
            _iter8.write(oprot);
          }
        }
      }
      if (struct.isSetMemberBanks()) {
        {
          oprot.writeI32(struct.memberBanks.size());
          for (com.froad.thrift.vo.bankcard.BankCardInfo _iter9 : struct.memberBanks)
          {
            _iter9.write(oprot);
          }
        }
      }
      if (struct.isSetResultMessage()) {
        oprot.writeString(struct.resultMessage);
      }
      if (struct.isSetResultSuccess()) {
        oprot.writeBool(struct.resultSuccess);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PeAcctVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.flag = iprot.readBool();
        struct.setFlagIsSet(true);
      }
      if (incoming.get(1)) {
        struct.msg = iprot.readString();
        struct.setMsgIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.questions = new ArrayList<com.froad.thrift.vo.member.UserEngineQuestionVo>(_list10.size);
          com.froad.thrift.vo.member.UserEngineQuestionVo _elem11;
          for (int _i12 = 0; _i12 < _list10.size; ++_i12)
          {
            _elem11 = new com.froad.thrift.vo.member.UserEngineQuestionVo();
            _elem11.read(iprot);
            struct.questions.add(_elem11);
          }
        }
        struct.setQuestionsIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.memberBanks = new ArrayList<com.froad.thrift.vo.bankcard.BankCardInfo>(_list13.size);
          com.froad.thrift.vo.bankcard.BankCardInfo _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = new com.froad.thrift.vo.bankcard.BankCardInfo();
            _elem14.read(iprot);
            struct.memberBanks.add(_elem14);
          }
        }
        struct.setMemberBanksIsSet(true);
      }
      if (incoming.get(4)) {
        struct.resultMessage = iprot.readString();
        struct.setResultMessageIsSet(true);
      }
      if (incoming.get(5)) {
        struct.resultSuccess = iprot.readBool();
        struct.setResultSuccessIsSet(true);
      }
    }
  }

}

