/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 门店信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class OutletVo implements org.apache.thrift.TBase<OutletVo, OutletVo._Fields>, java.io.Serializable, Cloneable, Comparable<OutletVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OutletVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField ORDER_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderValue", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField OUTLET_FULLNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletFullname", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField OUTLET_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("outletStatus", org.apache.thrift.protocol.TType.BOOL, (short)10);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField BUSINESS_HOURS_FIELD_DESC = new org.apache.thrift.protocol.TField("businessHours", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField ZIP_FIELD_DESC = new org.apache.thrift.protocol.TField("zip", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField FAX_FIELD_DESC = new org.apache.thrift.protocol.TField("fax", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField CONTACT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("contactName", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField CONTACT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("contactPhone", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField CONTACT_EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("contactEmail", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField SERVICE_PROVIDER_FIELD_DESC = new org.apache.thrift.protocol.TField("serviceProvider", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField LONGITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("longitude", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField LATITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("latitude", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnable", org.apache.thrift.protocol.TType.BOOL, (short)22);
  private static final org.apache.thrift.protocol.TField DISABLE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("disableStatus", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField PREFER_DETAILS_FIELD_DESC = new org.apache.thrift.protocol.TField("preferDetails", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField PREFER_START_PERIOD_FIELD_DESC = new org.apache.thrift.protocol.TField("preferStartPeriod", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField PREFER_END_PERIOD_FIELD_DESC = new org.apache.thrift.protocol.TField("preferEndPeriod", org.apache.thrift.protocol.TType.I64, (short)27);
  private static final org.apache.thrift.protocol.TField DISCOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("discount", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField START_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startCreateTime", org.apache.thrift.protocol.TType.I64, (short)29);
  private static final org.apache.thrift.protocol.TField END_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endCreateTime", org.apache.thrift.protocol.TType.I64, (short)30);
  private static final org.apache.thrift.protocol.TField DISABLE_STATUS_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("disableStatusList", org.apache.thrift.protocol.TType.LIST, (short)31);
  private static final org.apache.thrift.protocol.TField COMPLAINT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("complaintPhone", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField CATEGORY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryInfo", org.apache.thrift.protocol.TType.LIST, (short)33);
  private static final org.apache.thrift.protocol.TField TYPE_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("typeInfo", org.apache.thrift.protocol.TType.LIST, (short)34);
  private static final org.apache.thrift.protocol.TField DISCOUNT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("discountCode", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField DISCOUNT_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("discountRate", org.apache.thrift.protocol.TType.STRING, (short)36);
  private static final org.apache.thrift.protocol.TField AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("auditTime", org.apache.thrift.protocol.TType.I64, (short)37);
  private static final org.apache.thrift.protocol.TField AUDIT_COMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("auditComment", org.apache.thrift.protocol.TType.STRING, (short)38);
  private static final org.apache.thrift.protocol.TField AUDIT_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStaff", org.apache.thrift.protocol.TType.STRING, (short)39);
  private static final org.apache.thrift.protocol.TField AUDIT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditState", org.apache.thrift.protocol.TType.STRING, (short)40);
  private static final org.apache.thrift.protocol.TField EDIT_AUDIT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("editAuditState", org.apache.thrift.protocol.TType.STRING, (short)41);
  private static final org.apache.thrift.protocol.TField IS_DEFAULT_FIELD_DESC = new org.apache.thrift.protocol.TField("isDefault", org.apache.thrift.protocol.TType.BOOL, (short)42);
  private static final org.apache.thrift.protocol.TField PREFER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("preferStatus", org.apache.thrift.protocol.TType.BOOL, (short)43);
  private static final org.apache.thrift.protocol.TField QRCODE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("qrcodeUrl", org.apache.thrift.protocol.TType.STRING, (short)44);
  private static final org.apache.thrift.protocol.TField STAR_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("starLevel", org.apache.thrift.protocol.TType.STRING, (short)45);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OutletVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OutletVoTupleSchemeFactory());
  }

  /**
   * 主键ID
   */
  public long id; // optional
  /**
   * 创建时间
   */
  public long createTime; // optional
  /**
   * 客户端ID
   */
  public String clientId; // optional
  /**
   * 商户ID
   */
  public String merchantId; // optional
  /**
   * 门店ID
   */
  public String outletId; // optional
  /**
   * 地区ID
   */
  public long areaId; // optional
  /**
   * 排序
   */
  public int orderValue; // optional
  /**
   * 门店名称
   */
  public String outletName; // optional
  /**
   * 门店全名
   */
  public String outletFullname; // optional
  /**
   * 是否银?行机构对应?门店
   */
  public boolean outletStatus; // optional
  /**
   * 地址
   */
  public String address; // optional
  /**
   * 营业时间
   */
  public String businessHours; // optional
  /**
   * 邮编
   */
  public String zip; // optional
  /**
   * 传真
   */
  public String fax; // optional
  /**
   * 电话
   */
  public String phone; // optional
  /**
   * 联系人姓名
   */
  public String contactName; // optional
  /**
   * 联系人电话
   */
  public String contactPhone; // optional
  /**
   * 联系人邮箱
   */
  public String contactEmail; // optional
  /**
   * 服务提供商
   */
  public String serviceProvider; // optional
  /**
   * 经度
   */
  public String longitude; // optional
  /**
   * 纬度
   */
  public String latitude; // optional
  /**
   * 是否有效
   */
  public boolean isEnable; // optional
  /**
   * 无效状态,0正常;1禁用;2解约
   */
  public String disableStatus; // optional
  /**
   * 描述
   */
  public String description; // optional
  /**
   * 优惠详情
   */
  public String preferDetails; // optional
  /**
   * 优惠开始时间
   */
  public long preferStartPeriod; // optional
  /**
   * 优惠结束时间
   */
  public long preferEndPeriod; // optional
  /**
   * 折扣
   */
  public String discount; // optional
  /**
   * 开始创建时间(查询条件使用)
   */
  public long startCreateTime; // optional
  /**
   * 结束创建时间(查询条件使用)
   */
  public long endCreateTime; // optional
  /**
   * 无效状态 集合
   */
  public List<String> disableStatusList; // optional
  /**
   * 投诉电话
   */
  public String complaintPhone; // optional
  /**
   * 分类列表
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> categoryInfo; // optional
  /**
   * 类型列表
   */
  public List<com.froad.thrift.vo.TypeInfoVo> typeInfo; // optional
  /**
   * 优惠折扣码
   */
  public String discountCode; // optional
  /**
   * 优惠折扣比
   */
  public String discountRate; // optional
  /**
   * 审核时间
   */
  public long auditTime; // optional
  /**
   * 审核备注
   */
  public String auditComment; // optional
  /**
   * 审核人
   */
  public String auditStaff; // optional
  /**
   * 审核状态   0=待审核 ,1=审核通过 , 2=审核不通过 , 3=未提交 , 4=审核通过待同步
   */
  public String auditState; // optional
  /**
   * 编辑审核状态  0=待审核 ,1=审核通过 ,2=审核不通过 ,3=未提交 ,4=审核通过待同步
   */
  public String editAuditState; // optional
  /**
   * 是否为默认门店
   */
  public boolean isDefault; // optional
  /**
   * 优惠开通状态 0=无效 ,1=有效
   */
  public boolean preferStatus; // optional
  /**
   * 门店二维码URL
   */
  public String qrcodeUrl; // optional
  /**
   * 评论星级
   */
  public String starLevel; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键ID
     */
    ID((short)1, "id"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)2, "createTime"),
    /**
     * 客户端ID
     */
    CLIENT_ID((short)3, "clientId"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)4, "merchantId"),
    /**
     * 门店ID
     */
    OUTLET_ID((short)5, "outletId"),
    /**
     * 地区ID
     */
    AREA_ID((short)6, "areaId"),
    /**
     * 排序
     */
    ORDER_VALUE((short)7, "orderValue"),
    /**
     * 门店名称
     */
    OUTLET_NAME((short)8, "outletName"),
    /**
     * 门店全名
     */
    OUTLET_FULLNAME((short)9, "outletFullname"),
    /**
     * 是否银?行机构对应?门店
     */
    OUTLET_STATUS((short)10, "outletStatus"),
    /**
     * 地址
     */
    ADDRESS((short)11, "address"),
    /**
     * 营业时间
     */
    BUSINESS_HOURS((short)12, "businessHours"),
    /**
     * 邮编
     */
    ZIP((short)13, "zip"),
    /**
     * 传真
     */
    FAX((short)14, "fax"),
    /**
     * 电话
     */
    PHONE((short)15, "phone"),
    /**
     * 联系人姓名
     */
    CONTACT_NAME((short)16, "contactName"),
    /**
     * 联系人电话
     */
    CONTACT_PHONE((short)17, "contactPhone"),
    /**
     * 联系人邮箱
     */
    CONTACT_EMAIL((short)18, "contactEmail"),
    /**
     * 服务提供商
     */
    SERVICE_PROVIDER((short)19, "serviceProvider"),
    /**
     * 经度
     */
    LONGITUDE((short)20, "longitude"),
    /**
     * 纬度
     */
    LATITUDE((short)21, "latitude"),
    /**
     * 是否有效
     */
    IS_ENABLE((short)22, "isEnable"),
    /**
     * 无效状态,0正常;1禁用;2解约
     */
    DISABLE_STATUS((short)23, "disableStatus"),
    /**
     * 描述
     */
    DESCRIPTION((short)24, "description"),
    /**
     * 优惠详情
     */
    PREFER_DETAILS((short)25, "preferDetails"),
    /**
     * 优惠开始时间
     */
    PREFER_START_PERIOD((short)26, "preferStartPeriod"),
    /**
     * 优惠结束时间
     */
    PREFER_END_PERIOD((short)27, "preferEndPeriod"),
    /**
     * 折扣
     */
    DISCOUNT((short)28, "discount"),
    /**
     * 开始创建时间(查询条件使用)
     */
    START_CREATE_TIME((short)29, "startCreateTime"),
    /**
     * 结束创建时间(查询条件使用)
     */
    END_CREATE_TIME((short)30, "endCreateTime"),
    /**
     * 无效状态 集合
     */
    DISABLE_STATUS_LIST((short)31, "disableStatusList"),
    /**
     * 投诉电话
     */
    COMPLAINT_PHONE((short)32, "complaintPhone"),
    /**
     * 分类列表
     */
    CATEGORY_INFO((short)33, "categoryInfo"),
    /**
     * 类型列表
     */
    TYPE_INFO((short)34, "typeInfo"),
    /**
     * 优惠折扣码
     */
    DISCOUNT_CODE((short)35, "discountCode"),
    /**
     * 优惠折扣比
     */
    DISCOUNT_RATE((short)36, "discountRate"),
    /**
     * 审核时间
     */
    AUDIT_TIME((short)37, "auditTime"),
    /**
     * 审核备注
     */
    AUDIT_COMMENT((short)38, "auditComment"),
    /**
     * 审核人
     */
    AUDIT_STAFF((short)39, "auditStaff"),
    /**
     * 审核状态   0=待审核 ,1=审核通过 , 2=审核不通过 , 3=未提交 , 4=审核通过待同步
     */
    AUDIT_STATE((short)40, "auditState"),
    /**
     * 编辑审核状态  0=待审核 ,1=审核通过 ,2=审核不通过 ,3=未提交 ,4=审核通过待同步
     */
    EDIT_AUDIT_STATE((short)41, "editAuditState"),
    /**
     * 是否为默认门店
     */
    IS_DEFAULT((short)42, "isDefault"),
    /**
     * 优惠开通状态 0=无效 ,1=有效
     */
    PREFER_STATUS((short)43, "preferStatus"),
    /**
     * 门店二维码URL
     */
    QRCODE_URL((short)44, "qrcodeUrl"),
    /**
     * 评论星级
     */
    STAR_LEVEL((short)45, "starLevel");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // CLIENT_ID
          return CLIENT_ID;
        case 4: // MERCHANT_ID
          return MERCHANT_ID;
        case 5: // OUTLET_ID
          return OUTLET_ID;
        case 6: // AREA_ID
          return AREA_ID;
        case 7: // ORDER_VALUE
          return ORDER_VALUE;
        case 8: // OUTLET_NAME
          return OUTLET_NAME;
        case 9: // OUTLET_FULLNAME
          return OUTLET_FULLNAME;
        case 10: // OUTLET_STATUS
          return OUTLET_STATUS;
        case 11: // ADDRESS
          return ADDRESS;
        case 12: // BUSINESS_HOURS
          return BUSINESS_HOURS;
        case 13: // ZIP
          return ZIP;
        case 14: // FAX
          return FAX;
        case 15: // PHONE
          return PHONE;
        case 16: // CONTACT_NAME
          return CONTACT_NAME;
        case 17: // CONTACT_PHONE
          return CONTACT_PHONE;
        case 18: // CONTACT_EMAIL
          return CONTACT_EMAIL;
        case 19: // SERVICE_PROVIDER
          return SERVICE_PROVIDER;
        case 20: // LONGITUDE
          return LONGITUDE;
        case 21: // LATITUDE
          return LATITUDE;
        case 22: // IS_ENABLE
          return IS_ENABLE;
        case 23: // DISABLE_STATUS
          return DISABLE_STATUS;
        case 24: // DESCRIPTION
          return DESCRIPTION;
        case 25: // PREFER_DETAILS
          return PREFER_DETAILS;
        case 26: // PREFER_START_PERIOD
          return PREFER_START_PERIOD;
        case 27: // PREFER_END_PERIOD
          return PREFER_END_PERIOD;
        case 28: // DISCOUNT
          return DISCOUNT;
        case 29: // START_CREATE_TIME
          return START_CREATE_TIME;
        case 30: // END_CREATE_TIME
          return END_CREATE_TIME;
        case 31: // DISABLE_STATUS_LIST
          return DISABLE_STATUS_LIST;
        case 32: // COMPLAINT_PHONE
          return COMPLAINT_PHONE;
        case 33: // CATEGORY_INFO
          return CATEGORY_INFO;
        case 34: // TYPE_INFO
          return TYPE_INFO;
        case 35: // DISCOUNT_CODE
          return DISCOUNT_CODE;
        case 36: // DISCOUNT_RATE
          return DISCOUNT_RATE;
        case 37: // AUDIT_TIME
          return AUDIT_TIME;
        case 38: // AUDIT_COMMENT
          return AUDIT_COMMENT;
        case 39: // AUDIT_STAFF
          return AUDIT_STAFF;
        case 40: // AUDIT_STATE
          return AUDIT_STATE;
        case 41: // EDIT_AUDIT_STATE
          return EDIT_AUDIT_STATE;
        case 42: // IS_DEFAULT
          return IS_DEFAULT;
        case 43: // PREFER_STATUS
          return PREFER_STATUS;
        case 44: // QRCODE_URL
          return QRCODE_URL;
        case 45: // STAR_LEVEL
          return STAR_LEVEL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __AREAID_ISSET_ID = 2;
  private static final int __ORDERVALUE_ISSET_ID = 3;
  private static final int __OUTLETSTATUS_ISSET_ID = 4;
  private static final int __ISENABLE_ISSET_ID = 5;
  private static final int __PREFERSTARTPERIOD_ISSET_ID = 6;
  private static final int __PREFERENDPERIOD_ISSET_ID = 7;
  private static final int __STARTCREATETIME_ISSET_ID = 8;
  private static final int __ENDCREATETIME_ISSET_ID = 9;
  private static final int __AUDITTIME_ISSET_ID = 10;
  private static final int __ISDEFAULT_ISSET_ID = 11;
  private static final int __PREFERSTATUS_ISSET_ID = 12;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CREATE_TIME,_Fields.CLIENT_ID,_Fields.MERCHANT_ID,_Fields.OUTLET_ID,_Fields.AREA_ID,_Fields.ORDER_VALUE,_Fields.OUTLET_NAME,_Fields.OUTLET_FULLNAME,_Fields.OUTLET_STATUS,_Fields.ADDRESS,_Fields.BUSINESS_HOURS,_Fields.ZIP,_Fields.FAX,_Fields.PHONE,_Fields.CONTACT_NAME,_Fields.CONTACT_PHONE,_Fields.CONTACT_EMAIL,_Fields.SERVICE_PROVIDER,_Fields.LONGITUDE,_Fields.LATITUDE,_Fields.IS_ENABLE,_Fields.DISABLE_STATUS,_Fields.DESCRIPTION,_Fields.PREFER_DETAILS,_Fields.PREFER_START_PERIOD,_Fields.PREFER_END_PERIOD,_Fields.DISCOUNT,_Fields.START_CREATE_TIME,_Fields.END_CREATE_TIME,_Fields.DISABLE_STATUS_LIST,_Fields.COMPLAINT_PHONE,_Fields.CATEGORY_INFO,_Fields.TYPE_INFO,_Fields.DISCOUNT_CODE,_Fields.DISCOUNT_RATE,_Fields.AUDIT_TIME,_Fields.AUDIT_COMMENT,_Fields.AUDIT_STAFF,_Fields.AUDIT_STATE,_Fields.EDIT_AUDIT_STATE,_Fields.IS_DEFAULT,_Fields.PREFER_STATUS,_Fields.QRCODE_URL,_Fields.STAR_LEVEL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ORDER_VALUE, new org.apache.thrift.meta_data.FieldMetaData("orderValue", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_FULLNAME, new org.apache.thrift.meta_data.FieldMetaData("outletFullname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_STATUS, new org.apache.thrift.meta_data.FieldMetaData("outletStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_HOURS, new org.apache.thrift.meta_data.FieldMetaData("businessHours", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ZIP, new org.apache.thrift.meta_data.FieldMetaData("zip", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FAX, new org.apache.thrift.meta_data.FieldMetaData("fax", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_NAME, new org.apache.thrift.meta_data.FieldMetaData("contactName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("contactPhone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_EMAIL, new org.apache.thrift.meta_data.FieldMetaData("contactEmail", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SERVICE_PROVIDER, new org.apache.thrift.meta_data.FieldMetaData("serviceProvider", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LONGITUDE, new org.apache.thrift.meta_data.FieldMetaData("longitude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LATITUDE, new org.apache.thrift.meta_data.FieldMetaData("latitude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("isEnable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DISABLE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("disableStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PREFER_DETAILS, new org.apache.thrift.meta_data.FieldMetaData("preferDetails", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PREFER_START_PERIOD, new org.apache.thrift.meta_data.FieldMetaData("preferStartPeriod", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PREFER_END_PERIOD, new org.apache.thrift.meta_data.FieldMetaData("preferEndPeriod", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DISCOUNT, new org.apache.thrift.meta_data.FieldMetaData("discount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("startCreateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("endCreateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DISABLE_STATUS_LIST, new org.apache.thrift.meta_data.FieldMetaData("disableStatusList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.COMPLAINT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("complaintPhone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_INFO, new org.apache.thrift.meta_data.FieldMetaData("categoryInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.CategoryInfoVo.class))));
    tmpMap.put(_Fields.TYPE_INFO, new org.apache.thrift.meta_data.FieldMetaData("typeInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.TypeInfoVo.class))));
    tmpMap.put(_Fields.DISCOUNT_CODE, new org.apache.thrift.meta_data.FieldMetaData("discountCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISCOUNT_RATE, new org.apache.thrift.meta_data.FieldMetaData("discountRate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("auditTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AUDIT_COMMENT, new org.apache.thrift.meta_data.FieldMetaData("auditComment", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STAFF, new org.apache.thrift.meta_data.FieldMetaData("auditStaff", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STATE, new org.apache.thrift.meta_data.FieldMetaData("auditState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDIT_AUDIT_STATE, new org.apache.thrift.meta_data.FieldMetaData("editAuditState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_DEFAULT, new org.apache.thrift.meta_data.FieldMetaData("isDefault", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.PREFER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("preferStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.QRCODE_URL, new org.apache.thrift.meta_data.FieldMetaData("qrcodeUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STAR_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("starLevel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OutletVo.class, metaDataMap);
  }

  public OutletVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OutletVo(OutletVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.createTime = other.createTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
    this.areaId = other.areaId;
    this.orderValue = other.orderValue;
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    if (other.isSetOutletFullname()) {
      this.outletFullname = other.outletFullname;
    }
    this.outletStatus = other.outletStatus;
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetBusinessHours()) {
      this.businessHours = other.businessHours;
    }
    if (other.isSetZip()) {
      this.zip = other.zip;
    }
    if (other.isSetFax()) {
      this.fax = other.fax;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetContactName()) {
      this.contactName = other.contactName;
    }
    if (other.isSetContactPhone()) {
      this.contactPhone = other.contactPhone;
    }
    if (other.isSetContactEmail()) {
      this.contactEmail = other.contactEmail;
    }
    if (other.isSetServiceProvider()) {
      this.serviceProvider = other.serviceProvider;
    }
    if (other.isSetLongitude()) {
      this.longitude = other.longitude;
    }
    if (other.isSetLatitude()) {
      this.latitude = other.latitude;
    }
    this.isEnable = other.isEnable;
    if (other.isSetDisableStatus()) {
      this.disableStatus = other.disableStatus;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetPreferDetails()) {
      this.preferDetails = other.preferDetails;
    }
    this.preferStartPeriod = other.preferStartPeriod;
    this.preferEndPeriod = other.preferEndPeriod;
    if (other.isSetDiscount()) {
      this.discount = other.discount;
    }
    this.startCreateTime = other.startCreateTime;
    this.endCreateTime = other.endCreateTime;
    if (other.isSetDisableStatusList()) {
      List<String> __this__disableStatusList = new ArrayList<String>(other.disableStatusList);
      this.disableStatusList = __this__disableStatusList;
    }
    if (other.isSetComplaintPhone()) {
      this.complaintPhone = other.complaintPhone;
    }
    if (other.isSetCategoryInfo()) {
      List<com.froad.thrift.vo.CategoryInfoVo> __this__categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(other.categoryInfo.size());
      for (com.froad.thrift.vo.CategoryInfoVo other_element : other.categoryInfo) {
        __this__categoryInfo.add(new com.froad.thrift.vo.CategoryInfoVo(other_element));
      }
      this.categoryInfo = __this__categoryInfo;
    }
    if (other.isSetTypeInfo()) {
      List<com.froad.thrift.vo.TypeInfoVo> __this__typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(other.typeInfo.size());
      for (com.froad.thrift.vo.TypeInfoVo other_element : other.typeInfo) {
        __this__typeInfo.add(new com.froad.thrift.vo.TypeInfoVo(other_element));
      }
      this.typeInfo = __this__typeInfo;
    }
    if (other.isSetDiscountCode()) {
      this.discountCode = other.discountCode;
    }
    if (other.isSetDiscountRate()) {
      this.discountRate = other.discountRate;
    }
    this.auditTime = other.auditTime;
    if (other.isSetAuditComment()) {
      this.auditComment = other.auditComment;
    }
    if (other.isSetAuditStaff()) {
      this.auditStaff = other.auditStaff;
    }
    if (other.isSetAuditState()) {
      this.auditState = other.auditState;
    }
    if (other.isSetEditAuditState()) {
      this.editAuditState = other.editAuditState;
    }
    this.isDefault = other.isDefault;
    this.preferStatus = other.preferStatus;
    if (other.isSetQrcodeUrl()) {
      this.qrcodeUrl = other.qrcodeUrl;
    }
    if (other.isSetStarLevel()) {
      this.starLevel = other.starLevel;
    }
  }

  public OutletVo deepCopy() {
    return new OutletVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.clientId = null;
    this.merchantId = null;
    this.outletId = null;
    setAreaIdIsSet(false);
    this.areaId = 0;
    setOrderValueIsSet(false);
    this.orderValue = 0;
    this.outletName = null;
    this.outletFullname = null;
    setOutletStatusIsSet(false);
    this.outletStatus = false;
    this.address = null;
    this.businessHours = null;
    this.zip = null;
    this.fax = null;
    this.phone = null;
    this.contactName = null;
    this.contactPhone = null;
    this.contactEmail = null;
    this.serviceProvider = null;
    this.longitude = null;
    this.latitude = null;
    setIsEnableIsSet(false);
    this.isEnable = false;
    this.disableStatus = null;
    this.description = null;
    this.preferDetails = null;
    setPreferStartPeriodIsSet(false);
    this.preferStartPeriod = 0;
    setPreferEndPeriodIsSet(false);
    this.preferEndPeriod = 0;
    this.discount = null;
    setStartCreateTimeIsSet(false);
    this.startCreateTime = 0;
    setEndCreateTimeIsSet(false);
    this.endCreateTime = 0;
    this.disableStatusList = null;
    this.complaintPhone = null;
    this.categoryInfo = null;
    this.typeInfo = null;
    this.discountCode = null;
    this.discountRate = null;
    setAuditTimeIsSet(false);
    this.auditTime = 0;
    this.auditComment = null;
    this.auditStaff = null;
    this.auditState = null;
    this.editAuditState = null;
    setIsDefaultIsSet(false);
    this.isDefault = false;
    setPreferStatusIsSet(false);
    this.preferStatus = false;
    this.qrcodeUrl = null;
    this.starLevel = null;
  }

  /**
   * 主键ID
   */
  public long getId() {
    return this.id;
  }

  /**
   * 主键ID
   */
  public OutletVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public OutletVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public OutletVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public OutletVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 门店ID
   */
  public String getOutletId() {
    return this.outletId;
  }

  /**
   * 门店ID
   */
  public OutletVo setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  /**
   * 地区ID
   */
  public long getAreaId() {
    return this.areaId;
  }

  /**
   * 地区ID
   */
  public OutletVo setAreaId(long areaId) {
    this.areaId = areaId;
    setAreaIdIsSet(true);
    return this;
  }

  public void unsetAreaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return EncodingUtils.testBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  public void setAreaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREAID_ISSET_ID, value);
  }

  /**
   * 排序
   */
  public int getOrderValue() {
    return this.orderValue;
  }

  /**
   * 排序
   */
  public OutletVo setOrderValue(int orderValue) {
    this.orderValue = orderValue;
    setOrderValueIsSet(true);
    return this;
  }

  public void unsetOrderValue() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERVALUE_ISSET_ID);
  }

  /** Returns true if field orderValue is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderValue() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERVALUE_ISSET_ID);
  }

  public void setOrderValueIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERVALUE_ISSET_ID, value);
  }

  /**
   * 门店名称
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 门店名称
   */
  public OutletVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 门店全名
   */
  public String getOutletFullname() {
    return this.outletFullname;
  }

  /**
   * 门店全名
   */
  public OutletVo setOutletFullname(String outletFullname) {
    this.outletFullname = outletFullname;
    return this;
  }

  public void unsetOutletFullname() {
    this.outletFullname = null;
  }

  /** Returns true if field outletFullname is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletFullname() {
    return this.outletFullname != null;
  }

  public void setOutletFullnameIsSet(boolean value) {
    if (!value) {
      this.outletFullname = null;
    }
  }

  /**
   * 是否银?行机构对应?门店
   */
  public boolean isOutletStatus() {
    return this.outletStatus;
  }

  /**
   * 是否银?行机构对应?门店
   */
  public OutletVo setOutletStatus(boolean outletStatus) {
    this.outletStatus = outletStatus;
    setOutletStatusIsSet(true);
    return this;
  }

  public void unsetOutletStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OUTLETSTATUS_ISSET_ID);
  }

  /** Returns true if field outletStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __OUTLETSTATUS_ISSET_ID);
  }

  public void setOutletStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OUTLETSTATUS_ISSET_ID, value);
  }

  /**
   * 地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 地址
   */
  public OutletVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 营业时间
   */
  public String getBusinessHours() {
    return this.businessHours;
  }

  /**
   * 营业时间
   */
  public OutletVo setBusinessHours(String businessHours) {
    this.businessHours = businessHours;
    return this;
  }

  public void unsetBusinessHours() {
    this.businessHours = null;
  }

  /** Returns true if field businessHours is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessHours() {
    return this.businessHours != null;
  }

  public void setBusinessHoursIsSet(boolean value) {
    if (!value) {
      this.businessHours = null;
    }
  }

  /**
   * 邮编
   */
  public String getZip() {
    return this.zip;
  }

  /**
   * 邮编
   */
  public OutletVo setZip(String zip) {
    this.zip = zip;
    return this;
  }

  public void unsetZip() {
    this.zip = null;
  }

  /** Returns true if field zip is set (has been assigned a value) and false otherwise */
  public boolean isSetZip() {
    return this.zip != null;
  }

  public void setZipIsSet(boolean value) {
    if (!value) {
      this.zip = null;
    }
  }

  /**
   * 传真
   */
  public String getFax() {
    return this.fax;
  }

  /**
   * 传真
   */
  public OutletVo setFax(String fax) {
    this.fax = fax;
    return this;
  }

  public void unsetFax() {
    this.fax = null;
  }

  /** Returns true if field fax is set (has been assigned a value) and false otherwise */
  public boolean isSetFax() {
    return this.fax != null;
  }

  public void setFaxIsSet(boolean value) {
    if (!value) {
      this.fax = null;
    }
  }

  /**
   * 电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 电话
   */
  public OutletVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 联系人姓名
   */
  public String getContactName() {
    return this.contactName;
  }

  /**
   * 联系人姓名
   */
  public OutletVo setContactName(String contactName) {
    this.contactName = contactName;
    return this;
  }

  public void unsetContactName() {
    this.contactName = null;
  }

  /** Returns true if field contactName is set (has been assigned a value) and false otherwise */
  public boolean isSetContactName() {
    return this.contactName != null;
  }

  public void setContactNameIsSet(boolean value) {
    if (!value) {
      this.contactName = null;
    }
  }

  /**
   * 联系人电话
   */
  public String getContactPhone() {
    return this.contactPhone;
  }

  /**
   * 联系人电话
   */
  public OutletVo setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
    return this;
  }

  public void unsetContactPhone() {
    this.contactPhone = null;
  }

  /** Returns true if field contactPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetContactPhone() {
    return this.contactPhone != null;
  }

  public void setContactPhoneIsSet(boolean value) {
    if (!value) {
      this.contactPhone = null;
    }
  }

  /**
   * 联系人邮箱
   */
  public String getContactEmail() {
    return this.contactEmail;
  }

  /**
   * 联系人邮箱
   */
  public OutletVo setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
    return this;
  }

  public void unsetContactEmail() {
    this.contactEmail = null;
  }

  /** Returns true if field contactEmail is set (has been assigned a value) and false otherwise */
  public boolean isSetContactEmail() {
    return this.contactEmail != null;
  }

  public void setContactEmailIsSet(boolean value) {
    if (!value) {
      this.contactEmail = null;
    }
  }

  /**
   * 服务提供商
   */
  public String getServiceProvider() {
    return this.serviceProvider;
  }

  /**
   * 服务提供商
   */
  public OutletVo setServiceProvider(String serviceProvider) {
    this.serviceProvider = serviceProvider;
    return this;
  }

  public void unsetServiceProvider() {
    this.serviceProvider = null;
  }

  /** Returns true if field serviceProvider is set (has been assigned a value) and false otherwise */
  public boolean isSetServiceProvider() {
    return this.serviceProvider != null;
  }

  public void setServiceProviderIsSet(boolean value) {
    if (!value) {
      this.serviceProvider = null;
    }
  }

  /**
   * 经度
   */
  public String getLongitude() {
    return this.longitude;
  }

  /**
   * 经度
   */
  public OutletVo setLongitude(String longitude) {
    this.longitude = longitude;
    return this;
  }

  public void unsetLongitude() {
    this.longitude = null;
  }

  /** Returns true if field longitude is set (has been assigned a value) and false otherwise */
  public boolean isSetLongitude() {
    return this.longitude != null;
  }

  public void setLongitudeIsSet(boolean value) {
    if (!value) {
      this.longitude = null;
    }
  }

  /**
   * 纬度
   */
  public String getLatitude() {
    return this.latitude;
  }

  /**
   * 纬度
   */
  public OutletVo setLatitude(String latitude) {
    this.latitude = latitude;
    return this;
  }

  public void unsetLatitude() {
    this.latitude = null;
  }

  /** Returns true if field latitude is set (has been assigned a value) and false otherwise */
  public boolean isSetLatitude() {
    return this.latitude != null;
  }

  public void setLatitudeIsSet(boolean value) {
    if (!value) {
      this.latitude = null;
    }
  }

  /**
   * 是否有效
   */
  public boolean isIsEnable() {
    return this.isEnable;
  }

  /**
   * 是否有效
   */
  public OutletVo setIsEnable(boolean isEnable) {
    this.isEnable = isEnable;
    setIsEnableIsSet(true);
    return this;
  }

  public void unsetIsEnable() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  /** Returns true if field isEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnable() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  public void setIsEnableIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLE_ISSET_ID, value);
  }

  /**
   * 无效状态,0正常;1禁用;2解约
   */
  public String getDisableStatus() {
    return this.disableStatus;
  }

  /**
   * 无效状态,0正常;1禁用;2解约
   */
  public OutletVo setDisableStatus(String disableStatus) {
    this.disableStatus = disableStatus;
    return this;
  }

  public void unsetDisableStatus() {
    this.disableStatus = null;
  }

  /** Returns true if field disableStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetDisableStatus() {
    return this.disableStatus != null;
  }

  public void setDisableStatusIsSet(boolean value) {
    if (!value) {
      this.disableStatus = null;
    }
  }

  /**
   * 描述
   */
  public String getDescription() {
    return this.description;
  }

  /**
   * 描述
   */
  public OutletVo setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  /**
   * 优惠详情
   */
  public String getPreferDetails() {
    return this.preferDetails;
  }

  /**
   * 优惠详情
   */
  public OutletVo setPreferDetails(String preferDetails) {
    this.preferDetails = preferDetails;
    return this;
  }

  public void unsetPreferDetails() {
    this.preferDetails = null;
  }

  /** Returns true if field preferDetails is set (has been assigned a value) and false otherwise */
  public boolean isSetPreferDetails() {
    return this.preferDetails != null;
  }

  public void setPreferDetailsIsSet(boolean value) {
    if (!value) {
      this.preferDetails = null;
    }
  }

  /**
   * 优惠开始时间
   */
  public long getPreferStartPeriod() {
    return this.preferStartPeriod;
  }

  /**
   * 优惠开始时间
   */
  public OutletVo setPreferStartPeriod(long preferStartPeriod) {
    this.preferStartPeriod = preferStartPeriod;
    setPreferStartPeriodIsSet(true);
    return this;
  }

  public void unsetPreferStartPeriod() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREFERSTARTPERIOD_ISSET_ID);
  }

  /** Returns true if field preferStartPeriod is set (has been assigned a value) and false otherwise */
  public boolean isSetPreferStartPeriod() {
    return EncodingUtils.testBit(__isset_bitfield, __PREFERSTARTPERIOD_ISSET_ID);
  }

  public void setPreferStartPeriodIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREFERSTARTPERIOD_ISSET_ID, value);
  }

  /**
   * 优惠结束时间
   */
  public long getPreferEndPeriod() {
    return this.preferEndPeriod;
  }

  /**
   * 优惠结束时间
   */
  public OutletVo setPreferEndPeriod(long preferEndPeriod) {
    this.preferEndPeriod = preferEndPeriod;
    setPreferEndPeriodIsSet(true);
    return this;
  }

  public void unsetPreferEndPeriod() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREFERENDPERIOD_ISSET_ID);
  }

  /** Returns true if field preferEndPeriod is set (has been assigned a value) and false otherwise */
  public boolean isSetPreferEndPeriod() {
    return EncodingUtils.testBit(__isset_bitfield, __PREFERENDPERIOD_ISSET_ID);
  }

  public void setPreferEndPeriodIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREFERENDPERIOD_ISSET_ID, value);
  }

  /**
   * 折扣
   */
  public String getDiscount() {
    return this.discount;
  }

  /**
   * 折扣
   */
  public OutletVo setDiscount(String discount) {
    this.discount = discount;
    return this;
  }

  public void unsetDiscount() {
    this.discount = null;
  }

  /** Returns true if field discount is set (has been assigned a value) and false otherwise */
  public boolean isSetDiscount() {
    return this.discount != null;
  }

  public void setDiscountIsSet(boolean value) {
    if (!value) {
      this.discount = null;
    }
  }

  /**
   * 开始创建时间(查询条件使用)
   */
  public long getStartCreateTime() {
    return this.startCreateTime;
  }

  /**
   * 开始创建时间(查询条件使用)
   */
  public OutletVo setStartCreateTime(long startCreateTime) {
    this.startCreateTime = startCreateTime;
    setStartCreateTimeIsSet(true);
    return this;
  }

  public void unsetStartCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID);
  }

  /** Returns true if field startCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID);
  }

  public void setStartCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID, value);
  }

  /**
   * 结束创建时间(查询条件使用)
   */
  public long getEndCreateTime() {
    return this.endCreateTime;
  }

  /**
   * 结束创建时间(查询条件使用)
   */
  public OutletVo setEndCreateTime(long endCreateTime) {
    this.endCreateTime = endCreateTime;
    setEndCreateTimeIsSet(true);
    return this;
  }

  public void unsetEndCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID);
  }

  /** Returns true if field endCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID);
  }

  public void setEndCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID, value);
  }

  public int getDisableStatusListSize() {
    return (this.disableStatusList == null) ? 0 : this.disableStatusList.size();
  }

  public java.util.Iterator<String> getDisableStatusListIterator() {
    return (this.disableStatusList == null) ? null : this.disableStatusList.iterator();
  }

  public void addToDisableStatusList(String elem) {
    if (this.disableStatusList == null) {
      this.disableStatusList = new ArrayList<String>();
    }
    this.disableStatusList.add(elem);
  }

  /**
   * 无效状态 集合
   */
  public List<String> getDisableStatusList() {
    return this.disableStatusList;
  }

  /**
   * 无效状态 集合
   */
  public OutletVo setDisableStatusList(List<String> disableStatusList) {
    this.disableStatusList = disableStatusList;
    return this;
  }

  public void unsetDisableStatusList() {
    this.disableStatusList = null;
  }

  /** Returns true if field disableStatusList is set (has been assigned a value) and false otherwise */
  public boolean isSetDisableStatusList() {
    return this.disableStatusList != null;
  }

  public void setDisableStatusListIsSet(boolean value) {
    if (!value) {
      this.disableStatusList = null;
    }
  }

  /**
   * 投诉电话
   */
  public String getComplaintPhone() {
    return this.complaintPhone;
  }

  /**
   * 投诉电话
   */
  public OutletVo setComplaintPhone(String complaintPhone) {
    this.complaintPhone = complaintPhone;
    return this;
  }

  public void unsetComplaintPhone() {
    this.complaintPhone = null;
  }

  /** Returns true if field complaintPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetComplaintPhone() {
    return this.complaintPhone != null;
  }

  public void setComplaintPhoneIsSet(boolean value) {
    if (!value) {
      this.complaintPhone = null;
    }
  }

  public int getCategoryInfoSize() {
    return (this.categoryInfo == null) ? 0 : this.categoryInfo.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfoIterator() {
    return (this.categoryInfo == null) ? null : this.categoryInfo.iterator();
  }

  public void addToCategoryInfo(com.froad.thrift.vo.CategoryInfoVo elem) {
    if (this.categoryInfo == null) {
      this.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>();
    }
    this.categoryInfo.add(elem);
  }

  /**
   * 分类列表
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfo() {
    return this.categoryInfo;
  }

  /**
   * 分类列表
   */
  public OutletVo setCategoryInfo(List<com.froad.thrift.vo.CategoryInfoVo> categoryInfo) {
    this.categoryInfo = categoryInfo;
    return this;
  }

  public void unsetCategoryInfo() {
    this.categoryInfo = null;
  }

  /** Returns true if field categoryInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryInfo() {
    return this.categoryInfo != null;
  }

  public void setCategoryInfoIsSet(boolean value) {
    if (!value) {
      this.categoryInfo = null;
    }
  }

  public int getTypeInfoSize() {
    return (this.typeInfo == null) ? 0 : this.typeInfo.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.TypeInfoVo> getTypeInfoIterator() {
    return (this.typeInfo == null) ? null : this.typeInfo.iterator();
  }

  public void addToTypeInfo(com.froad.thrift.vo.TypeInfoVo elem) {
    if (this.typeInfo == null) {
      this.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>();
    }
    this.typeInfo.add(elem);
  }

  /**
   * 类型列表
   */
  public List<com.froad.thrift.vo.TypeInfoVo> getTypeInfo() {
    return this.typeInfo;
  }

  /**
   * 类型列表
   */
  public OutletVo setTypeInfo(List<com.froad.thrift.vo.TypeInfoVo> typeInfo) {
    this.typeInfo = typeInfo;
    return this;
  }

  public void unsetTypeInfo() {
    this.typeInfo = null;
  }

  /** Returns true if field typeInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetTypeInfo() {
    return this.typeInfo != null;
  }

  public void setTypeInfoIsSet(boolean value) {
    if (!value) {
      this.typeInfo = null;
    }
  }

  /**
   * 优惠折扣码
   */
  public String getDiscountCode() {
    return this.discountCode;
  }

  /**
   * 优惠折扣码
   */
  public OutletVo setDiscountCode(String discountCode) {
    this.discountCode = discountCode;
    return this;
  }

  public void unsetDiscountCode() {
    this.discountCode = null;
  }

  /** Returns true if field discountCode is set (has been assigned a value) and false otherwise */
  public boolean isSetDiscountCode() {
    return this.discountCode != null;
  }

  public void setDiscountCodeIsSet(boolean value) {
    if (!value) {
      this.discountCode = null;
    }
  }

  /**
   * 优惠折扣比
   */
  public String getDiscountRate() {
    return this.discountRate;
  }

  /**
   * 优惠折扣比
   */
  public OutletVo setDiscountRate(String discountRate) {
    this.discountRate = discountRate;
    return this;
  }

  public void unsetDiscountRate() {
    this.discountRate = null;
  }

  /** Returns true if field discountRate is set (has been assigned a value) and false otherwise */
  public boolean isSetDiscountRate() {
    return this.discountRate != null;
  }

  public void setDiscountRateIsSet(boolean value) {
    if (!value) {
      this.discountRate = null;
    }
  }

  /**
   * 审核时间
   */
  public long getAuditTime() {
    return this.auditTime;
  }

  /**
   * 审核时间
   */
  public OutletVo setAuditTime(long auditTime) {
    this.auditTime = auditTime;
    setAuditTimeIsSet(true);
    return this;
  }

  public void unsetAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  /** Returns true if field auditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  public void setAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AUDITTIME_ISSET_ID, value);
  }

  /**
   * 审核备注
   */
  public String getAuditComment() {
    return this.auditComment;
  }

  /**
   * 审核备注
   */
  public OutletVo setAuditComment(String auditComment) {
    this.auditComment = auditComment;
    return this;
  }

  public void unsetAuditComment() {
    this.auditComment = null;
  }

  /** Returns true if field auditComment is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditComment() {
    return this.auditComment != null;
  }

  public void setAuditCommentIsSet(boolean value) {
    if (!value) {
      this.auditComment = null;
    }
  }

  /**
   * 审核人
   */
  public String getAuditStaff() {
    return this.auditStaff;
  }

  /**
   * 审核人
   */
  public OutletVo setAuditStaff(String auditStaff) {
    this.auditStaff = auditStaff;
    return this;
  }

  public void unsetAuditStaff() {
    this.auditStaff = null;
  }

  /** Returns true if field auditStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStaff() {
    return this.auditStaff != null;
  }

  public void setAuditStaffIsSet(boolean value) {
    if (!value) {
      this.auditStaff = null;
    }
  }

  /**
   * 审核状态   0=待审核 ,1=审核通过 , 2=审核不通过 , 3=未提交 , 4=审核通过待同步
   */
  public String getAuditState() {
    return this.auditState;
  }

  /**
   * 审核状态   0=待审核 ,1=审核通过 , 2=审核不通过 , 3=未提交 , 4=审核通过待同步
   */
  public OutletVo setAuditState(String auditState) {
    this.auditState = auditState;
    return this;
  }

  public void unsetAuditState() {
    this.auditState = null;
  }

  /** Returns true if field auditState is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditState() {
    return this.auditState != null;
  }

  public void setAuditStateIsSet(boolean value) {
    if (!value) {
      this.auditState = null;
    }
  }

  /**
   * 编辑审核状态  0=待审核 ,1=审核通过 ,2=审核不通过 ,3=未提交 ,4=审核通过待同步
   */
  public String getEditAuditState() {
    return this.editAuditState;
  }

  /**
   * 编辑审核状态  0=待审核 ,1=审核通过 ,2=审核不通过 ,3=未提交 ,4=审核通过待同步
   */
  public OutletVo setEditAuditState(String editAuditState) {
    this.editAuditState = editAuditState;
    return this;
  }

  public void unsetEditAuditState() {
    this.editAuditState = null;
  }

  /** Returns true if field editAuditState is set (has been assigned a value) and false otherwise */
  public boolean isSetEditAuditState() {
    return this.editAuditState != null;
  }

  public void setEditAuditStateIsSet(boolean value) {
    if (!value) {
      this.editAuditState = null;
    }
  }

  /**
   * 是否为默认门店
   */
  public boolean isIsDefault() {
    return this.isDefault;
  }

  /**
   * 是否为默认门店
   */
  public OutletVo setIsDefault(boolean isDefault) {
    this.isDefault = isDefault;
    setIsDefaultIsSet(true);
    return this;
  }

  public void unsetIsDefault() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISDEFAULT_ISSET_ID);
  }

  /** Returns true if field isDefault is set (has been assigned a value) and false otherwise */
  public boolean isSetIsDefault() {
    return EncodingUtils.testBit(__isset_bitfield, __ISDEFAULT_ISSET_ID);
  }

  public void setIsDefaultIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISDEFAULT_ISSET_ID, value);
  }

  /**
   * 优惠开通状态 0=无效 ,1=有效
   */
  public boolean isPreferStatus() {
    return this.preferStatus;
  }

  /**
   * 优惠开通状态 0=无效 ,1=有效
   */
  public OutletVo setPreferStatus(boolean preferStatus) {
    this.preferStatus = preferStatus;
    setPreferStatusIsSet(true);
    return this;
  }

  public void unsetPreferStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREFERSTATUS_ISSET_ID);
  }

  /** Returns true if field preferStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetPreferStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __PREFERSTATUS_ISSET_ID);
  }

  public void setPreferStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREFERSTATUS_ISSET_ID, value);
  }

  /**
   * 门店二维码URL
   */
  public String getQrcodeUrl() {
    return this.qrcodeUrl;
  }

  /**
   * 门店二维码URL
   */
  public OutletVo setQrcodeUrl(String qrcodeUrl) {
    this.qrcodeUrl = qrcodeUrl;
    return this;
  }

  public void unsetQrcodeUrl() {
    this.qrcodeUrl = null;
  }

  /** Returns true if field qrcodeUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetQrcodeUrl() {
    return this.qrcodeUrl != null;
  }

  public void setQrcodeUrlIsSet(boolean value) {
    if (!value) {
      this.qrcodeUrl = null;
    }
  }

  /**
   * 评论星级
   */
  public String getStarLevel() {
    return this.starLevel;
  }

  /**
   * 评论星级
   */
  public OutletVo setStarLevel(String starLevel) {
    this.starLevel = starLevel;
    return this;
  }

  public void unsetStarLevel() {
    this.starLevel = null;
  }

  /** Returns true if field starLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetStarLevel() {
    return this.starLevel != null;
  }

  public void setStarLevelIsSet(boolean value) {
    if (!value) {
      this.starLevel = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((Long)value);
      }
      break;

    case ORDER_VALUE:
      if (value == null) {
        unsetOrderValue();
      } else {
        setOrderValue((Integer)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case OUTLET_FULLNAME:
      if (value == null) {
        unsetOutletFullname();
      } else {
        setOutletFullname((String)value);
      }
      break;

    case OUTLET_STATUS:
      if (value == null) {
        unsetOutletStatus();
      } else {
        setOutletStatus((Boolean)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case BUSINESS_HOURS:
      if (value == null) {
        unsetBusinessHours();
      } else {
        setBusinessHours((String)value);
      }
      break;

    case ZIP:
      if (value == null) {
        unsetZip();
      } else {
        setZip((String)value);
      }
      break;

    case FAX:
      if (value == null) {
        unsetFax();
      } else {
        setFax((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case CONTACT_NAME:
      if (value == null) {
        unsetContactName();
      } else {
        setContactName((String)value);
      }
      break;

    case CONTACT_PHONE:
      if (value == null) {
        unsetContactPhone();
      } else {
        setContactPhone((String)value);
      }
      break;

    case CONTACT_EMAIL:
      if (value == null) {
        unsetContactEmail();
      } else {
        setContactEmail((String)value);
      }
      break;

    case SERVICE_PROVIDER:
      if (value == null) {
        unsetServiceProvider();
      } else {
        setServiceProvider((String)value);
      }
      break;

    case LONGITUDE:
      if (value == null) {
        unsetLongitude();
      } else {
        setLongitude((String)value);
      }
      break;

    case LATITUDE:
      if (value == null) {
        unsetLatitude();
      } else {
        setLatitude((String)value);
      }
      break;

    case IS_ENABLE:
      if (value == null) {
        unsetIsEnable();
      } else {
        setIsEnable((Boolean)value);
      }
      break;

    case DISABLE_STATUS:
      if (value == null) {
        unsetDisableStatus();
      } else {
        setDisableStatus((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case PREFER_DETAILS:
      if (value == null) {
        unsetPreferDetails();
      } else {
        setPreferDetails((String)value);
      }
      break;

    case PREFER_START_PERIOD:
      if (value == null) {
        unsetPreferStartPeriod();
      } else {
        setPreferStartPeriod((Long)value);
      }
      break;

    case PREFER_END_PERIOD:
      if (value == null) {
        unsetPreferEndPeriod();
      } else {
        setPreferEndPeriod((Long)value);
      }
      break;

    case DISCOUNT:
      if (value == null) {
        unsetDiscount();
      } else {
        setDiscount((String)value);
      }
      break;

    case START_CREATE_TIME:
      if (value == null) {
        unsetStartCreateTime();
      } else {
        setStartCreateTime((Long)value);
      }
      break;

    case END_CREATE_TIME:
      if (value == null) {
        unsetEndCreateTime();
      } else {
        setEndCreateTime((Long)value);
      }
      break;

    case DISABLE_STATUS_LIST:
      if (value == null) {
        unsetDisableStatusList();
      } else {
        setDisableStatusList((List<String>)value);
      }
      break;

    case COMPLAINT_PHONE:
      if (value == null) {
        unsetComplaintPhone();
      } else {
        setComplaintPhone((String)value);
      }
      break;

    case CATEGORY_INFO:
      if (value == null) {
        unsetCategoryInfo();
      } else {
        setCategoryInfo((List<com.froad.thrift.vo.CategoryInfoVo>)value);
      }
      break;

    case TYPE_INFO:
      if (value == null) {
        unsetTypeInfo();
      } else {
        setTypeInfo((List<com.froad.thrift.vo.TypeInfoVo>)value);
      }
      break;

    case DISCOUNT_CODE:
      if (value == null) {
        unsetDiscountCode();
      } else {
        setDiscountCode((String)value);
      }
      break;

    case DISCOUNT_RATE:
      if (value == null) {
        unsetDiscountRate();
      } else {
        setDiscountRate((String)value);
      }
      break;

    case AUDIT_TIME:
      if (value == null) {
        unsetAuditTime();
      } else {
        setAuditTime((Long)value);
      }
      break;

    case AUDIT_COMMENT:
      if (value == null) {
        unsetAuditComment();
      } else {
        setAuditComment((String)value);
      }
      break;

    case AUDIT_STAFF:
      if (value == null) {
        unsetAuditStaff();
      } else {
        setAuditStaff((String)value);
      }
      break;

    case AUDIT_STATE:
      if (value == null) {
        unsetAuditState();
      } else {
        setAuditState((String)value);
      }
      break;

    case EDIT_AUDIT_STATE:
      if (value == null) {
        unsetEditAuditState();
      } else {
        setEditAuditState((String)value);
      }
      break;

    case IS_DEFAULT:
      if (value == null) {
        unsetIsDefault();
      } else {
        setIsDefault((Boolean)value);
      }
      break;

    case PREFER_STATUS:
      if (value == null) {
        unsetPreferStatus();
      } else {
        setPreferStatus((Boolean)value);
      }
      break;

    case QRCODE_URL:
      if (value == null) {
        unsetQrcodeUrl();
      } else {
        setQrcodeUrl((String)value);
      }
      break;

    case STAR_LEVEL:
      if (value == null) {
        unsetStarLevel();
      } else {
        setStarLevel((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case CLIENT_ID:
      return getClientId();

    case MERCHANT_ID:
      return getMerchantId();

    case OUTLET_ID:
      return getOutletId();

    case AREA_ID:
      return Long.valueOf(getAreaId());

    case ORDER_VALUE:
      return Integer.valueOf(getOrderValue());

    case OUTLET_NAME:
      return getOutletName();

    case OUTLET_FULLNAME:
      return getOutletFullname();

    case OUTLET_STATUS:
      return Boolean.valueOf(isOutletStatus());

    case ADDRESS:
      return getAddress();

    case BUSINESS_HOURS:
      return getBusinessHours();

    case ZIP:
      return getZip();

    case FAX:
      return getFax();

    case PHONE:
      return getPhone();

    case CONTACT_NAME:
      return getContactName();

    case CONTACT_PHONE:
      return getContactPhone();

    case CONTACT_EMAIL:
      return getContactEmail();

    case SERVICE_PROVIDER:
      return getServiceProvider();

    case LONGITUDE:
      return getLongitude();

    case LATITUDE:
      return getLatitude();

    case IS_ENABLE:
      return Boolean.valueOf(isIsEnable());

    case DISABLE_STATUS:
      return getDisableStatus();

    case DESCRIPTION:
      return getDescription();

    case PREFER_DETAILS:
      return getPreferDetails();

    case PREFER_START_PERIOD:
      return Long.valueOf(getPreferStartPeriod());

    case PREFER_END_PERIOD:
      return Long.valueOf(getPreferEndPeriod());

    case DISCOUNT:
      return getDiscount();

    case START_CREATE_TIME:
      return Long.valueOf(getStartCreateTime());

    case END_CREATE_TIME:
      return Long.valueOf(getEndCreateTime());

    case DISABLE_STATUS_LIST:
      return getDisableStatusList();

    case COMPLAINT_PHONE:
      return getComplaintPhone();

    case CATEGORY_INFO:
      return getCategoryInfo();

    case TYPE_INFO:
      return getTypeInfo();

    case DISCOUNT_CODE:
      return getDiscountCode();

    case DISCOUNT_RATE:
      return getDiscountRate();

    case AUDIT_TIME:
      return Long.valueOf(getAuditTime());

    case AUDIT_COMMENT:
      return getAuditComment();

    case AUDIT_STAFF:
      return getAuditStaff();

    case AUDIT_STATE:
      return getAuditState();

    case EDIT_AUDIT_STATE:
      return getEditAuditState();

    case IS_DEFAULT:
      return Boolean.valueOf(isIsDefault());

    case PREFER_STATUS:
      return Boolean.valueOf(isPreferStatus());

    case QRCODE_URL:
      return getQrcodeUrl();

    case STAR_LEVEL:
      return getStarLevel();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case CLIENT_ID:
      return isSetClientId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case OUTLET_ID:
      return isSetOutletId();
    case AREA_ID:
      return isSetAreaId();
    case ORDER_VALUE:
      return isSetOrderValue();
    case OUTLET_NAME:
      return isSetOutletName();
    case OUTLET_FULLNAME:
      return isSetOutletFullname();
    case OUTLET_STATUS:
      return isSetOutletStatus();
    case ADDRESS:
      return isSetAddress();
    case BUSINESS_HOURS:
      return isSetBusinessHours();
    case ZIP:
      return isSetZip();
    case FAX:
      return isSetFax();
    case PHONE:
      return isSetPhone();
    case CONTACT_NAME:
      return isSetContactName();
    case CONTACT_PHONE:
      return isSetContactPhone();
    case CONTACT_EMAIL:
      return isSetContactEmail();
    case SERVICE_PROVIDER:
      return isSetServiceProvider();
    case LONGITUDE:
      return isSetLongitude();
    case LATITUDE:
      return isSetLatitude();
    case IS_ENABLE:
      return isSetIsEnable();
    case DISABLE_STATUS:
      return isSetDisableStatus();
    case DESCRIPTION:
      return isSetDescription();
    case PREFER_DETAILS:
      return isSetPreferDetails();
    case PREFER_START_PERIOD:
      return isSetPreferStartPeriod();
    case PREFER_END_PERIOD:
      return isSetPreferEndPeriod();
    case DISCOUNT:
      return isSetDiscount();
    case START_CREATE_TIME:
      return isSetStartCreateTime();
    case END_CREATE_TIME:
      return isSetEndCreateTime();
    case DISABLE_STATUS_LIST:
      return isSetDisableStatusList();
    case COMPLAINT_PHONE:
      return isSetComplaintPhone();
    case CATEGORY_INFO:
      return isSetCategoryInfo();
    case TYPE_INFO:
      return isSetTypeInfo();
    case DISCOUNT_CODE:
      return isSetDiscountCode();
    case DISCOUNT_RATE:
      return isSetDiscountRate();
    case AUDIT_TIME:
      return isSetAuditTime();
    case AUDIT_COMMENT:
      return isSetAuditComment();
    case AUDIT_STAFF:
      return isSetAuditStaff();
    case AUDIT_STATE:
      return isSetAuditState();
    case EDIT_AUDIT_STATE:
      return isSetEditAuditState();
    case IS_DEFAULT:
      return isSetIsDefault();
    case PREFER_STATUS:
      return isSetPreferStatus();
    case QRCODE_URL:
      return isSetQrcodeUrl();
    case STAR_LEVEL:
      return isSetStarLevel();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OutletVo)
      return this.equals((OutletVo)that);
    return false;
  }

  public boolean equals(OutletVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    boolean this_present_areaId = true && this.isSetAreaId();
    boolean that_present_areaId = true && that.isSetAreaId();
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (this.areaId != that.areaId)
        return false;
    }

    boolean this_present_orderValue = true && this.isSetOrderValue();
    boolean that_present_orderValue = true && that.isSetOrderValue();
    if (this_present_orderValue || that_present_orderValue) {
      if (!(this_present_orderValue && that_present_orderValue))
        return false;
      if (this.orderValue != that.orderValue)
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_outletFullname = true && this.isSetOutletFullname();
    boolean that_present_outletFullname = true && that.isSetOutletFullname();
    if (this_present_outletFullname || that_present_outletFullname) {
      if (!(this_present_outletFullname && that_present_outletFullname))
        return false;
      if (!this.outletFullname.equals(that.outletFullname))
        return false;
    }

    boolean this_present_outletStatus = true && this.isSetOutletStatus();
    boolean that_present_outletStatus = true && that.isSetOutletStatus();
    if (this_present_outletStatus || that_present_outletStatus) {
      if (!(this_present_outletStatus && that_present_outletStatus))
        return false;
      if (this.outletStatus != that.outletStatus)
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_businessHours = true && this.isSetBusinessHours();
    boolean that_present_businessHours = true && that.isSetBusinessHours();
    if (this_present_businessHours || that_present_businessHours) {
      if (!(this_present_businessHours && that_present_businessHours))
        return false;
      if (!this.businessHours.equals(that.businessHours))
        return false;
    }

    boolean this_present_zip = true && this.isSetZip();
    boolean that_present_zip = true && that.isSetZip();
    if (this_present_zip || that_present_zip) {
      if (!(this_present_zip && that_present_zip))
        return false;
      if (!this.zip.equals(that.zip))
        return false;
    }

    boolean this_present_fax = true && this.isSetFax();
    boolean that_present_fax = true && that.isSetFax();
    if (this_present_fax || that_present_fax) {
      if (!(this_present_fax && that_present_fax))
        return false;
      if (!this.fax.equals(that.fax))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_contactName = true && this.isSetContactName();
    boolean that_present_contactName = true && that.isSetContactName();
    if (this_present_contactName || that_present_contactName) {
      if (!(this_present_contactName && that_present_contactName))
        return false;
      if (!this.contactName.equals(that.contactName))
        return false;
    }

    boolean this_present_contactPhone = true && this.isSetContactPhone();
    boolean that_present_contactPhone = true && that.isSetContactPhone();
    if (this_present_contactPhone || that_present_contactPhone) {
      if (!(this_present_contactPhone && that_present_contactPhone))
        return false;
      if (!this.contactPhone.equals(that.contactPhone))
        return false;
    }

    boolean this_present_contactEmail = true && this.isSetContactEmail();
    boolean that_present_contactEmail = true && that.isSetContactEmail();
    if (this_present_contactEmail || that_present_contactEmail) {
      if (!(this_present_contactEmail && that_present_contactEmail))
        return false;
      if (!this.contactEmail.equals(that.contactEmail))
        return false;
    }

    boolean this_present_serviceProvider = true && this.isSetServiceProvider();
    boolean that_present_serviceProvider = true && that.isSetServiceProvider();
    if (this_present_serviceProvider || that_present_serviceProvider) {
      if (!(this_present_serviceProvider && that_present_serviceProvider))
        return false;
      if (!this.serviceProvider.equals(that.serviceProvider))
        return false;
    }

    boolean this_present_longitude = true && this.isSetLongitude();
    boolean that_present_longitude = true && that.isSetLongitude();
    if (this_present_longitude || that_present_longitude) {
      if (!(this_present_longitude && that_present_longitude))
        return false;
      if (!this.longitude.equals(that.longitude))
        return false;
    }

    boolean this_present_latitude = true && this.isSetLatitude();
    boolean that_present_latitude = true && that.isSetLatitude();
    if (this_present_latitude || that_present_latitude) {
      if (!(this_present_latitude && that_present_latitude))
        return false;
      if (!this.latitude.equals(that.latitude))
        return false;
    }

    boolean this_present_isEnable = true && this.isSetIsEnable();
    boolean that_present_isEnable = true && that.isSetIsEnable();
    if (this_present_isEnable || that_present_isEnable) {
      if (!(this_present_isEnable && that_present_isEnable))
        return false;
      if (this.isEnable != that.isEnable)
        return false;
    }

    boolean this_present_disableStatus = true && this.isSetDisableStatus();
    boolean that_present_disableStatus = true && that.isSetDisableStatus();
    if (this_present_disableStatus || that_present_disableStatus) {
      if (!(this_present_disableStatus && that_present_disableStatus))
        return false;
      if (!this.disableStatus.equals(that.disableStatus))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_preferDetails = true && this.isSetPreferDetails();
    boolean that_present_preferDetails = true && that.isSetPreferDetails();
    if (this_present_preferDetails || that_present_preferDetails) {
      if (!(this_present_preferDetails && that_present_preferDetails))
        return false;
      if (!this.preferDetails.equals(that.preferDetails))
        return false;
    }

    boolean this_present_preferStartPeriod = true && this.isSetPreferStartPeriod();
    boolean that_present_preferStartPeriod = true && that.isSetPreferStartPeriod();
    if (this_present_preferStartPeriod || that_present_preferStartPeriod) {
      if (!(this_present_preferStartPeriod && that_present_preferStartPeriod))
        return false;
      if (this.preferStartPeriod != that.preferStartPeriod)
        return false;
    }

    boolean this_present_preferEndPeriod = true && this.isSetPreferEndPeriod();
    boolean that_present_preferEndPeriod = true && that.isSetPreferEndPeriod();
    if (this_present_preferEndPeriod || that_present_preferEndPeriod) {
      if (!(this_present_preferEndPeriod && that_present_preferEndPeriod))
        return false;
      if (this.preferEndPeriod != that.preferEndPeriod)
        return false;
    }

    boolean this_present_discount = true && this.isSetDiscount();
    boolean that_present_discount = true && that.isSetDiscount();
    if (this_present_discount || that_present_discount) {
      if (!(this_present_discount && that_present_discount))
        return false;
      if (!this.discount.equals(that.discount))
        return false;
    }

    boolean this_present_startCreateTime = true && this.isSetStartCreateTime();
    boolean that_present_startCreateTime = true && that.isSetStartCreateTime();
    if (this_present_startCreateTime || that_present_startCreateTime) {
      if (!(this_present_startCreateTime && that_present_startCreateTime))
        return false;
      if (this.startCreateTime != that.startCreateTime)
        return false;
    }

    boolean this_present_endCreateTime = true && this.isSetEndCreateTime();
    boolean that_present_endCreateTime = true && that.isSetEndCreateTime();
    if (this_present_endCreateTime || that_present_endCreateTime) {
      if (!(this_present_endCreateTime && that_present_endCreateTime))
        return false;
      if (this.endCreateTime != that.endCreateTime)
        return false;
    }

    boolean this_present_disableStatusList = true && this.isSetDisableStatusList();
    boolean that_present_disableStatusList = true && that.isSetDisableStatusList();
    if (this_present_disableStatusList || that_present_disableStatusList) {
      if (!(this_present_disableStatusList && that_present_disableStatusList))
        return false;
      if (!this.disableStatusList.equals(that.disableStatusList))
        return false;
    }

    boolean this_present_complaintPhone = true && this.isSetComplaintPhone();
    boolean that_present_complaintPhone = true && that.isSetComplaintPhone();
    if (this_present_complaintPhone || that_present_complaintPhone) {
      if (!(this_present_complaintPhone && that_present_complaintPhone))
        return false;
      if (!this.complaintPhone.equals(that.complaintPhone))
        return false;
    }

    boolean this_present_categoryInfo = true && this.isSetCategoryInfo();
    boolean that_present_categoryInfo = true && that.isSetCategoryInfo();
    if (this_present_categoryInfo || that_present_categoryInfo) {
      if (!(this_present_categoryInfo && that_present_categoryInfo))
        return false;
      if (!this.categoryInfo.equals(that.categoryInfo))
        return false;
    }

    boolean this_present_typeInfo = true && this.isSetTypeInfo();
    boolean that_present_typeInfo = true && that.isSetTypeInfo();
    if (this_present_typeInfo || that_present_typeInfo) {
      if (!(this_present_typeInfo && that_present_typeInfo))
        return false;
      if (!this.typeInfo.equals(that.typeInfo))
        return false;
    }

    boolean this_present_discountCode = true && this.isSetDiscountCode();
    boolean that_present_discountCode = true && that.isSetDiscountCode();
    if (this_present_discountCode || that_present_discountCode) {
      if (!(this_present_discountCode && that_present_discountCode))
        return false;
      if (!this.discountCode.equals(that.discountCode))
        return false;
    }

    boolean this_present_discountRate = true && this.isSetDiscountRate();
    boolean that_present_discountRate = true && that.isSetDiscountRate();
    if (this_present_discountRate || that_present_discountRate) {
      if (!(this_present_discountRate && that_present_discountRate))
        return false;
      if (!this.discountRate.equals(that.discountRate))
        return false;
    }

    boolean this_present_auditTime = true && this.isSetAuditTime();
    boolean that_present_auditTime = true && that.isSetAuditTime();
    if (this_present_auditTime || that_present_auditTime) {
      if (!(this_present_auditTime && that_present_auditTime))
        return false;
      if (this.auditTime != that.auditTime)
        return false;
    }

    boolean this_present_auditComment = true && this.isSetAuditComment();
    boolean that_present_auditComment = true && that.isSetAuditComment();
    if (this_present_auditComment || that_present_auditComment) {
      if (!(this_present_auditComment && that_present_auditComment))
        return false;
      if (!this.auditComment.equals(that.auditComment))
        return false;
    }

    boolean this_present_auditStaff = true && this.isSetAuditStaff();
    boolean that_present_auditStaff = true && that.isSetAuditStaff();
    if (this_present_auditStaff || that_present_auditStaff) {
      if (!(this_present_auditStaff && that_present_auditStaff))
        return false;
      if (!this.auditStaff.equals(that.auditStaff))
        return false;
    }

    boolean this_present_auditState = true && this.isSetAuditState();
    boolean that_present_auditState = true && that.isSetAuditState();
    if (this_present_auditState || that_present_auditState) {
      if (!(this_present_auditState && that_present_auditState))
        return false;
      if (!this.auditState.equals(that.auditState))
        return false;
    }

    boolean this_present_editAuditState = true && this.isSetEditAuditState();
    boolean that_present_editAuditState = true && that.isSetEditAuditState();
    if (this_present_editAuditState || that_present_editAuditState) {
      if (!(this_present_editAuditState && that_present_editAuditState))
        return false;
      if (!this.editAuditState.equals(that.editAuditState))
        return false;
    }

    boolean this_present_isDefault = true && this.isSetIsDefault();
    boolean that_present_isDefault = true && that.isSetIsDefault();
    if (this_present_isDefault || that_present_isDefault) {
      if (!(this_present_isDefault && that_present_isDefault))
        return false;
      if (this.isDefault != that.isDefault)
        return false;
    }

    boolean this_present_preferStatus = true && this.isSetPreferStatus();
    boolean that_present_preferStatus = true && that.isSetPreferStatus();
    if (this_present_preferStatus || that_present_preferStatus) {
      if (!(this_present_preferStatus && that_present_preferStatus))
        return false;
      if (this.preferStatus != that.preferStatus)
        return false;
    }

    boolean this_present_qrcodeUrl = true && this.isSetQrcodeUrl();
    boolean that_present_qrcodeUrl = true && that.isSetQrcodeUrl();
    if (this_present_qrcodeUrl || that_present_qrcodeUrl) {
      if (!(this_present_qrcodeUrl && that_present_qrcodeUrl))
        return false;
      if (!this.qrcodeUrl.equals(that.qrcodeUrl))
        return false;
    }

    boolean this_present_starLevel = true && this.isSetStarLevel();
    boolean that_present_starLevel = true && that.isSetStarLevel();
    if (this_present_starLevel || that_present_starLevel) {
      if (!(this_present_starLevel && that_present_starLevel))
        return false;
      if (!this.starLevel.equals(that.starLevel))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    boolean present_areaId = true && (isSetAreaId());
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_orderValue = true && (isSetOrderValue());
    list.add(present_orderValue);
    if (present_orderValue)
      list.add(orderValue);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_outletFullname = true && (isSetOutletFullname());
    list.add(present_outletFullname);
    if (present_outletFullname)
      list.add(outletFullname);

    boolean present_outletStatus = true && (isSetOutletStatus());
    list.add(present_outletStatus);
    if (present_outletStatus)
      list.add(outletStatus);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_businessHours = true && (isSetBusinessHours());
    list.add(present_businessHours);
    if (present_businessHours)
      list.add(businessHours);

    boolean present_zip = true && (isSetZip());
    list.add(present_zip);
    if (present_zip)
      list.add(zip);

    boolean present_fax = true && (isSetFax());
    list.add(present_fax);
    if (present_fax)
      list.add(fax);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_contactName = true && (isSetContactName());
    list.add(present_contactName);
    if (present_contactName)
      list.add(contactName);

    boolean present_contactPhone = true && (isSetContactPhone());
    list.add(present_contactPhone);
    if (present_contactPhone)
      list.add(contactPhone);

    boolean present_contactEmail = true && (isSetContactEmail());
    list.add(present_contactEmail);
    if (present_contactEmail)
      list.add(contactEmail);

    boolean present_serviceProvider = true && (isSetServiceProvider());
    list.add(present_serviceProvider);
    if (present_serviceProvider)
      list.add(serviceProvider);

    boolean present_longitude = true && (isSetLongitude());
    list.add(present_longitude);
    if (present_longitude)
      list.add(longitude);

    boolean present_latitude = true && (isSetLatitude());
    list.add(present_latitude);
    if (present_latitude)
      list.add(latitude);

    boolean present_isEnable = true && (isSetIsEnable());
    list.add(present_isEnable);
    if (present_isEnable)
      list.add(isEnable);

    boolean present_disableStatus = true && (isSetDisableStatus());
    list.add(present_disableStatus);
    if (present_disableStatus)
      list.add(disableStatus);

    boolean present_description = true && (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    boolean present_preferDetails = true && (isSetPreferDetails());
    list.add(present_preferDetails);
    if (present_preferDetails)
      list.add(preferDetails);

    boolean present_preferStartPeriod = true && (isSetPreferStartPeriod());
    list.add(present_preferStartPeriod);
    if (present_preferStartPeriod)
      list.add(preferStartPeriod);

    boolean present_preferEndPeriod = true && (isSetPreferEndPeriod());
    list.add(present_preferEndPeriod);
    if (present_preferEndPeriod)
      list.add(preferEndPeriod);

    boolean present_discount = true && (isSetDiscount());
    list.add(present_discount);
    if (present_discount)
      list.add(discount);

    boolean present_startCreateTime = true && (isSetStartCreateTime());
    list.add(present_startCreateTime);
    if (present_startCreateTime)
      list.add(startCreateTime);

    boolean present_endCreateTime = true && (isSetEndCreateTime());
    list.add(present_endCreateTime);
    if (present_endCreateTime)
      list.add(endCreateTime);

    boolean present_disableStatusList = true && (isSetDisableStatusList());
    list.add(present_disableStatusList);
    if (present_disableStatusList)
      list.add(disableStatusList);

    boolean present_complaintPhone = true && (isSetComplaintPhone());
    list.add(present_complaintPhone);
    if (present_complaintPhone)
      list.add(complaintPhone);

    boolean present_categoryInfo = true && (isSetCategoryInfo());
    list.add(present_categoryInfo);
    if (present_categoryInfo)
      list.add(categoryInfo);

    boolean present_typeInfo = true && (isSetTypeInfo());
    list.add(present_typeInfo);
    if (present_typeInfo)
      list.add(typeInfo);

    boolean present_discountCode = true && (isSetDiscountCode());
    list.add(present_discountCode);
    if (present_discountCode)
      list.add(discountCode);

    boolean present_discountRate = true && (isSetDiscountRate());
    list.add(present_discountRate);
    if (present_discountRate)
      list.add(discountRate);

    boolean present_auditTime = true && (isSetAuditTime());
    list.add(present_auditTime);
    if (present_auditTime)
      list.add(auditTime);

    boolean present_auditComment = true && (isSetAuditComment());
    list.add(present_auditComment);
    if (present_auditComment)
      list.add(auditComment);

    boolean present_auditStaff = true && (isSetAuditStaff());
    list.add(present_auditStaff);
    if (present_auditStaff)
      list.add(auditStaff);

    boolean present_auditState = true && (isSetAuditState());
    list.add(present_auditState);
    if (present_auditState)
      list.add(auditState);

    boolean present_editAuditState = true && (isSetEditAuditState());
    list.add(present_editAuditState);
    if (present_editAuditState)
      list.add(editAuditState);

    boolean present_isDefault = true && (isSetIsDefault());
    list.add(present_isDefault);
    if (present_isDefault)
      list.add(isDefault);

    boolean present_preferStatus = true && (isSetPreferStatus());
    list.add(present_preferStatus);
    if (present_preferStatus)
      list.add(preferStatus);

    boolean present_qrcodeUrl = true && (isSetQrcodeUrl());
    list.add(present_qrcodeUrl);
    if (present_qrcodeUrl)
      list.add(qrcodeUrl);

    boolean present_starLevel = true && (isSetStarLevel());
    list.add(present_starLevel);
    if (present_starLevel)
      list.add(starLevel);

    return list.hashCode();
  }

  @Override
  public int compareTo(OutletVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderValue()).compareTo(other.isSetOrderValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderValue, other.orderValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletFullname()).compareTo(other.isSetOutletFullname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletFullname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletFullname, other.outletFullname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletStatus()).compareTo(other.isSetOutletStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletStatus, other.outletStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessHours()).compareTo(other.isSetBusinessHours());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessHours()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessHours, other.businessHours);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetZip()).compareTo(other.isSetZip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetZip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.zip, other.zip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFax()).compareTo(other.isSetFax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fax, other.fax);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactName()).compareTo(other.isSetContactName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactName, other.contactName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactPhone()).compareTo(other.isSetContactPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactPhone, other.contactPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactEmail()).compareTo(other.isSetContactEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactEmail, other.contactEmail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetServiceProvider()).compareTo(other.isSetServiceProvider());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetServiceProvider()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serviceProvider, other.serviceProvider);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLongitude()).compareTo(other.isSetLongitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLongitude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.longitude, other.longitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLatitude()).compareTo(other.isSetLatitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatitude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latitude, other.latitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnable()).compareTo(other.isSetIsEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnable, other.isEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisableStatus()).compareTo(other.isSetDisableStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisableStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disableStatus, other.disableStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreferDetails()).compareTo(other.isSetPreferDetails());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferDetails()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preferDetails, other.preferDetails);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreferStartPeriod()).compareTo(other.isSetPreferStartPeriod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferStartPeriod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preferStartPeriod, other.preferStartPeriod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreferEndPeriod()).compareTo(other.isSetPreferEndPeriod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferEndPeriod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preferEndPeriod, other.preferEndPeriod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiscount()).compareTo(other.isSetDiscount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiscount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.discount, other.discount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartCreateTime()).compareTo(other.isSetStartCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startCreateTime, other.startCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndCreateTime()).compareTo(other.isSetEndCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endCreateTime, other.endCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisableStatusList()).compareTo(other.isSetDisableStatusList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisableStatusList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disableStatusList, other.disableStatusList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComplaintPhone()).compareTo(other.isSetComplaintPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComplaintPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.complaintPhone, other.complaintPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryInfo()).compareTo(other.isSetCategoryInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryInfo, other.categoryInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTypeInfo()).compareTo(other.isSetTypeInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTypeInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.typeInfo, other.typeInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiscountCode()).compareTo(other.isSetDiscountCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiscountCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.discountCode, other.discountCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiscountRate()).compareTo(other.isSetDiscountRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiscountRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.discountRate, other.discountRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditTime()).compareTo(other.isSetAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditTime, other.auditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditComment()).compareTo(other.isSetAuditComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditComment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditComment, other.auditComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStaff()).compareTo(other.isSetAuditStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStaff, other.auditStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditState()).compareTo(other.isSetAuditState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditState, other.auditState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEditAuditState()).compareTo(other.isSetEditAuditState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEditAuditState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.editAuditState, other.editAuditState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsDefault()).compareTo(other.isSetIsDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDefault()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDefault, other.isDefault);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreferStatus()).compareTo(other.isSetPreferStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preferStatus, other.preferStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQrcodeUrl()).compareTo(other.isSetQrcodeUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQrcodeUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.qrcodeUrl, other.qrcodeUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarLevel()).compareTo(other.isSetStarLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starLevel, other.starLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OutletVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetOutletId()) {
      if (!first) sb.append(", ");
      sb.append("outletId:");
      if (this.outletId == null) {
        sb.append("null");
      } else {
        sb.append(this.outletId);
      }
      first = false;
    }
    if (isSetAreaId()) {
      if (!first) sb.append(", ");
      sb.append("areaId:");
      sb.append(this.areaId);
      first = false;
    }
    if (isSetOrderValue()) {
      if (!first) sb.append(", ");
      sb.append("orderValue:");
      sb.append(this.orderValue);
      first = false;
    }
    if (isSetOutletName()) {
      if (!first) sb.append(", ");
      sb.append("outletName:");
      if (this.outletName == null) {
        sb.append("null");
      } else {
        sb.append(this.outletName);
      }
      first = false;
    }
    if (isSetOutletFullname()) {
      if (!first) sb.append(", ");
      sb.append("outletFullname:");
      if (this.outletFullname == null) {
        sb.append("null");
      } else {
        sb.append(this.outletFullname);
      }
      first = false;
    }
    if (isSetOutletStatus()) {
      if (!first) sb.append(", ");
      sb.append("outletStatus:");
      sb.append(this.outletStatus);
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetBusinessHours()) {
      if (!first) sb.append(", ");
      sb.append("businessHours:");
      if (this.businessHours == null) {
        sb.append("null");
      } else {
        sb.append(this.businessHours);
      }
      first = false;
    }
    if (isSetZip()) {
      if (!first) sb.append(", ");
      sb.append("zip:");
      if (this.zip == null) {
        sb.append("null");
      } else {
        sb.append(this.zip);
      }
      first = false;
    }
    if (isSetFax()) {
      if (!first) sb.append(", ");
      sb.append("fax:");
      if (this.fax == null) {
        sb.append("null");
      } else {
        sb.append(this.fax);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetContactName()) {
      if (!first) sb.append(", ");
      sb.append("contactName:");
      if (this.contactName == null) {
        sb.append("null");
      } else {
        sb.append(this.contactName);
      }
      first = false;
    }
    if (isSetContactPhone()) {
      if (!first) sb.append(", ");
      sb.append("contactPhone:");
      if (this.contactPhone == null) {
        sb.append("null");
      } else {
        sb.append(this.contactPhone);
      }
      first = false;
    }
    if (isSetContactEmail()) {
      if (!first) sb.append(", ");
      sb.append("contactEmail:");
      if (this.contactEmail == null) {
        sb.append("null");
      } else {
        sb.append(this.contactEmail);
      }
      first = false;
    }
    if (isSetServiceProvider()) {
      if (!first) sb.append(", ");
      sb.append("serviceProvider:");
      if (this.serviceProvider == null) {
        sb.append("null");
      } else {
        sb.append(this.serviceProvider);
      }
      first = false;
    }
    if (isSetLongitude()) {
      if (!first) sb.append(", ");
      sb.append("longitude:");
      if (this.longitude == null) {
        sb.append("null");
      } else {
        sb.append(this.longitude);
      }
      first = false;
    }
    if (isSetLatitude()) {
      if (!first) sb.append(", ");
      sb.append("latitude:");
      if (this.latitude == null) {
        sb.append("null");
      } else {
        sb.append(this.latitude);
      }
      first = false;
    }
    if (isSetIsEnable()) {
      if (!first) sb.append(", ");
      sb.append("isEnable:");
      sb.append(this.isEnable);
      first = false;
    }
    if (isSetDisableStatus()) {
      if (!first) sb.append(", ");
      sb.append("disableStatus:");
      if (this.disableStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.disableStatus);
      }
      first = false;
    }
    if (isSetDescription()) {
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
    }
    if (isSetPreferDetails()) {
      if (!first) sb.append(", ");
      sb.append("preferDetails:");
      if (this.preferDetails == null) {
        sb.append("null");
      } else {
        sb.append(this.preferDetails);
      }
      first = false;
    }
    if (isSetPreferStartPeriod()) {
      if (!first) sb.append(", ");
      sb.append("preferStartPeriod:");
      sb.append(this.preferStartPeriod);
      first = false;
    }
    if (isSetPreferEndPeriod()) {
      if (!first) sb.append(", ");
      sb.append("preferEndPeriod:");
      sb.append(this.preferEndPeriod);
      first = false;
    }
    if (isSetDiscount()) {
      if (!first) sb.append(", ");
      sb.append("discount:");
      if (this.discount == null) {
        sb.append("null");
      } else {
        sb.append(this.discount);
      }
      first = false;
    }
    if (isSetStartCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("startCreateTime:");
      sb.append(this.startCreateTime);
      first = false;
    }
    if (isSetEndCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("endCreateTime:");
      sb.append(this.endCreateTime);
      first = false;
    }
    if (isSetDisableStatusList()) {
      if (!first) sb.append(", ");
      sb.append("disableStatusList:");
      if (this.disableStatusList == null) {
        sb.append("null");
      } else {
        sb.append(this.disableStatusList);
      }
      first = false;
    }
    if (isSetComplaintPhone()) {
      if (!first) sb.append(", ");
      sb.append("complaintPhone:");
      if (this.complaintPhone == null) {
        sb.append("null");
      } else {
        sb.append(this.complaintPhone);
      }
      first = false;
    }
    if (isSetCategoryInfo()) {
      if (!first) sb.append(", ");
      sb.append("categoryInfo:");
      if (this.categoryInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.categoryInfo);
      }
      first = false;
    }
    if (isSetTypeInfo()) {
      if (!first) sb.append(", ");
      sb.append("typeInfo:");
      if (this.typeInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.typeInfo);
      }
      first = false;
    }
    if (isSetDiscountCode()) {
      if (!first) sb.append(", ");
      sb.append("discountCode:");
      if (this.discountCode == null) {
        sb.append("null");
      } else {
        sb.append(this.discountCode);
      }
      first = false;
    }
    if (isSetDiscountRate()) {
      if (!first) sb.append(", ");
      sb.append("discountRate:");
      if (this.discountRate == null) {
        sb.append("null");
      } else {
        sb.append(this.discountRate);
      }
      first = false;
    }
    if (isSetAuditTime()) {
      if (!first) sb.append(", ");
      sb.append("auditTime:");
      sb.append(this.auditTime);
      first = false;
    }
    if (isSetAuditComment()) {
      if (!first) sb.append(", ");
      sb.append("auditComment:");
      if (this.auditComment == null) {
        sb.append("null");
      } else {
        sb.append(this.auditComment);
      }
      first = false;
    }
    if (isSetAuditStaff()) {
      if (!first) sb.append(", ");
      sb.append("auditStaff:");
      if (this.auditStaff == null) {
        sb.append("null");
      } else {
        sb.append(this.auditStaff);
      }
      first = false;
    }
    if (isSetAuditState()) {
      if (!first) sb.append(", ");
      sb.append("auditState:");
      if (this.auditState == null) {
        sb.append("null");
      } else {
        sb.append(this.auditState);
      }
      first = false;
    }
    if (isSetEditAuditState()) {
      if (!first) sb.append(", ");
      sb.append("editAuditState:");
      if (this.editAuditState == null) {
        sb.append("null");
      } else {
        sb.append(this.editAuditState);
      }
      first = false;
    }
    if (isSetIsDefault()) {
      if (!first) sb.append(", ");
      sb.append("isDefault:");
      sb.append(this.isDefault);
      first = false;
    }
    if (isSetPreferStatus()) {
      if (!first) sb.append(", ");
      sb.append("preferStatus:");
      sb.append(this.preferStatus);
      first = false;
    }
    if (isSetQrcodeUrl()) {
      if (!first) sb.append(", ");
      sb.append("qrcodeUrl:");
      if (this.qrcodeUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.qrcodeUrl);
      }
      first = false;
    }
    if (isSetStarLevel()) {
      if (!first) sb.append(", ");
      sb.append("starLevel:");
      if (this.starLevel == null) {
        sb.append("null");
      } else {
        sb.append(this.starLevel);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OutletVoStandardSchemeFactory implements SchemeFactory {
    public OutletVoStandardScheme getScheme() {
      return new OutletVoStandardScheme();
    }
  }

  private static class OutletVoStandardScheme extends StandardScheme<OutletVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OutletVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.areaId = iprot.readI64();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORDER_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderValue = iprot.readI32();
              struct.setOrderValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // OUTLET_FULLNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletFullname = iprot.readString();
              struct.setOutletFullnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // OUTLET_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.outletStatus = iprot.readBool();
              struct.setOutletStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // BUSINESS_HOURS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessHours = iprot.readString();
              struct.setBusinessHoursIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ZIP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.zip = iprot.readString();
              struct.setZipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // FAX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fax = iprot.readString();
              struct.setFaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CONTACT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactName = iprot.readString();
              struct.setContactNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CONTACT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactPhone = iprot.readString();
              struct.setContactPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CONTACT_EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactEmail = iprot.readString();
              struct.setContactEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // SERVICE_PROVIDER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.serviceProvider = iprot.readString();
              struct.setServiceProviderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // LONGITUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.longitude = iprot.readString();
              struct.setLongitudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // LATITUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.latitude = iprot.readString();
              struct.setLatitudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // IS_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnable = iprot.readBool();
              struct.setIsEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // DISABLE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.disableStatus = iprot.readString();
              struct.setDisableStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // PREFER_DETAILS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.preferDetails = iprot.readString();
              struct.setPreferDetailsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // PREFER_START_PERIOD
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.preferStartPeriod = iprot.readI64();
              struct.setPreferStartPeriodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // PREFER_END_PERIOD
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.preferEndPeriod = iprot.readI64();
              struct.setPreferEndPeriodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // DISCOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.discount = iprot.readString();
              struct.setDiscountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // START_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startCreateTime = iprot.readI64();
              struct.setStartCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // END_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endCreateTime = iprot.readI64();
              struct.setEndCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // DISABLE_STATUS_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.disableStatusList = new ArrayList<String>(_list0.size);
                String _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readString();
                  struct.disableStatusList.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setDisableStatusListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // COMPLAINT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.complaintPhone = iprot.readString();
              struct.setComplaintPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // CATEGORY_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list3.size);
                com.froad.thrift.vo.CategoryInfoVo _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = new com.froad.thrift.vo.CategoryInfoVo();
                  _elem4.read(iprot);
                  struct.categoryInfo.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setCategoryInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // TYPE_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
                struct.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list6.size);
                com.froad.thrift.vo.TypeInfoVo _elem7;
                for (int _i8 = 0; _i8 < _list6.size; ++_i8)
                {
                  _elem7 = new com.froad.thrift.vo.TypeInfoVo();
                  _elem7.read(iprot);
                  struct.typeInfo.add(_elem7);
                }
                iprot.readListEnd();
              }
              struct.setTypeInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // DISCOUNT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.discountCode = iprot.readString();
              struct.setDiscountCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // DISCOUNT_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.discountRate = iprot.readString();
              struct.setDiscountRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.auditTime = iprot.readI64();
              struct.setAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // AUDIT_COMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditComment = iprot.readString();
              struct.setAuditCommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // AUDIT_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStaff = iprot.readString();
              struct.setAuditStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // AUDIT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditState = iprot.readString();
              struct.setAuditStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // EDIT_AUDIT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.editAuditState = iprot.readString();
              struct.setEditAuditStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // IS_DEFAULT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isDefault = iprot.readBool();
              struct.setIsDefaultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // PREFER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.preferStatus = iprot.readBool();
              struct.setPreferStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // QRCODE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.qrcodeUrl = iprot.readString();
              struct.setQrcodeUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 45: // STAR_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.starLevel = iprot.readString();
              struct.setStarLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OutletVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletId != null) {
        if (struct.isSetOutletId()) {
          oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
          oprot.writeString(struct.outletId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAreaId()) {
        oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
        oprot.writeI64(struct.areaId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOrderValue()) {
        oprot.writeFieldBegin(ORDER_VALUE_FIELD_DESC);
        oprot.writeI32(struct.orderValue);
        oprot.writeFieldEnd();
      }
      if (struct.outletName != null) {
        if (struct.isSetOutletName()) {
          oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
          oprot.writeString(struct.outletName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletFullname != null) {
        if (struct.isSetOutletFullname()) {
          oprot.writeFieldBegin(OUTLET_FULLNAME_FIELD_DESC);
          oprot.writeString(struct.outletFullname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOutletStatus()) {
        oprot.writeFieldBegin(OUTLET_STATUS_FIELD_DESC);
        oprot.writeBool(struct.outletStatus);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.businessHours != null) {
        if (struct.isSetBusinessHours()) {
          oprot.writeFieldBegin(BUSINESS_HOURS_FIELD_DESC);
          oprot.writeString(struct.businessHours);
          oprot.writeFieldEnd();
        }
      }
      if (struct.zip != null) {
        if (struct.isSetZip()) {
          oprot.writeFieldBegin(ZIP_FIELD_DESC);
          oprot.writeString(struct.zip);
          oprot.writeFieldEnd();
        }
      }
      if (struct.fax != null) {
        if (struct.isSetFax()) {
          oprot.writeFieldBegin(FAX_FIELD_DESC);
          oprot.writeString(struct.fax);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactName != null) {
        if (struct.isSetContactName()) {
          oprot.writeFieldBegin(CONTACT_NAME_FIELD_DESC);
          oprot.writeString(struct.contactName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactPhone != null) {
        if (struct.isSetContactPhone()) {
          oprot.writeFieldBegin(CONTACT_PHONE_FIELD_DESC);
          oprot.writeString(struct.contactPhone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactEmail != null) {
        if (struct.isSetContactEmail()) {
          oprot.writeFieldBegin(CONTACT_EMAIL_FIELD_DESC);
          oprot.writeString(struct.contactEmail);
          oprot.writeFieldEnd();
        }
      }
      if (struct.serviceProvider != null) {
        if (struct.isSetServiceProvider()) {
          oprot.writeFieldBegin(SERVICE_PROVIDER_FIELD_DESC);
          oprot.writeString(struct.serviceProvider);
          oprot.writeFieldEnd();
        }
      }
      if (struct.longitude != null) {
        if (struct.isSetLongitude()) {
          oprot.writeFieldBegin(LONGITUDE_FIELD_DESC);
          oprot.writeString(struct.longitude);
          oprot.writeFieldEnd();
        }
      }
      if (struct.latitude != null) {
        if (struct.isSetLatitude()) {
          oprot.writeFieldBegin(LATITUDE_FIELD_DESC);
          oprot.writeString(struct.latitude);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsEnable()) {
        oprot.writeFieldBegin(IS_ENABLE_FIELD_DESC);
        oprot.writeBool(struct.isEnable);
        oprot.writeFieldEnd();
      }
      if (struct.disableStatus != null) {
        if (struct.isSetDisableStatus()) {
          oprot.writeFieldBegin(DISABLE_STATUS_FIELD_DESC);
          oprot.writeString(struct.disableStatus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.description != null) {
        if (struct.isSetDescription()) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
      }
      if (struct.preferDetails != null) {
        if (struct.isSetPreferDetails()) {
          oprot.writeFieldBegin(PREFER_DETAILS_FIELD_DESC);
          oprot.writeString(struct.preferDetails);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPreferStartPeriod()) {
        oprot.writeFieldBegin(PREFER_START_PERIOD_FIELD_DESC);
        oprot.writeI64(struct.preferStartPeriod);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPreferEndPeriod()) {
        oprot.writeFieldBegin(PREFER_END_PERIOD_FIELD_DESC);
        oprot.writeI64(struct.preferEndPeriod);
        oprot.writeFieldEnd();
      }
      if (struct.discount != null) {
        if (struct.isSetDiscount()) {
          oprot.writeFieldBegin(DISCOUNT_FIELD_DESC);
          oprot.writeString(struct.discount);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStartCreateTime()) {
        oprot.writeFieldBegin(START_CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.startCreateTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndCreateTime()) {
        oprot.writeFieldBegin(END_CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.endCreateTime);
        oprot.writeFieldEnd();
      }
      if (struct.disableStatusList != null) {
        if (struct.isSetDisableStatusList()) {
          oprot.writeFieldBegin(DISABLE_STATUS_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.disableStatusList.size()));
            for (String _iter9 : struct.disableStatusList)
            {
              oprot.writeString(_iter9);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.complaintPhone != null) {
        if (struct.isSetComplaintPhone()) {
          oprot.writeFieldBegin(COMPLAINT_PHONE_FIELD_DESC);
          oprot.writeString(struct.complaintPhone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.categoryInfo != null) {
        if (struct.isSetCategoryInfo()) {
          oprot.writeFieldBegin(CATEGORY_INFO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.categoryInfo.size()));
            for (com.froad.thrift.vo.CategoryInfoVo _iter10 : struct.categoryInfo)
            {
              _iter10.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.typeInfo != null) {
        if (struct.isSetTypeInfo()) {
          oprot.writeFieldBegin(TYPE_INFO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.typeInfo.size()));
            for (com.froad.thrift.vo.TypeInfoVo _iter11 : struct.typeInfo)
            {
              _iter11.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.discountCode != null) {
        if (struct.isSetDiscountCode()) {
          oprot.writeFieldBegin(DISCOUNT_CODE_FIELD_DESC);
          oprot.writeString(struct.discountCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.discountRate != null) {
        if (struct.isSetDiscountRate()) {
          oprot.writeFieldBegin(DISCOUNT_RATE_FIELD_DESC);
          oprot.writeString(struct.discountRate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAuditTime()) {
        oprot.writeFieldBegin(AUDIT_TIME_FIELD_DESC);
        oprot.writeI64(struct.auditTime);
        oprot.writeFieldEnd();
      }
      if (struct.auditComment != null) {
        if (struct.isSetAuditComment()) {
          oprot.writeFieldBegin(AUDIT_COMMENT_FIELD_DESC);
          oprot.writeString(struct.auditComment);
          oprot.writeFieldEnd();
        }
      }
      if (struct.auditStaff != null) {
        if (struct.isSetAuditStaff()) {
          oprot.writeFieldBegin(AUDIT_STAFF_FIELD_DESC);
          oprot.writeString(struct.auditStaff);
          oprot.writeFieldEnd();
        }
      }
      if (struct.auditState != null) {
        if (struct.isSetAuditState()) {
          oprot.writeFieldBegin(AUDIT_STATE_FIELD_DESC);
          oprot.writeString(struct.auditState);
          oprot.writeFieldEnd();
        }
      }
      if (struct.editAuditState != null) {
        if (struct.isSetEditAuditState()) {
          oprot.writeFieldBegin(EDIT_AUDIT_STATE_FIELD_DESC);
          oprot.writeString(struct.editAuditState);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsDefault()) {
        oprot.writeFieldBegin(IS_DEFAULT_FIELD_DESC);
        oprot.writeBool(struct.isDefault);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPreferStatus()) {
        oprot.writeFieldBegin(PREFER_STATUS_FIELD_DESC);
        oprot.writeBool(struct.preferStatus);
        oprot.writeFieldEnd();
      }
      if (struct.qrcodeUrl != null) {
        if (struct.isSetQrcodeUrl()) {
          oprot.writeFieldBegin(QRCODE_URL_FIELD_DESC);
          oprot.writeString(struct.qrcodeUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.starLevel != null) {
        if (struct.isSetStarLevel()) {
          oprot.writeFieldBegin(STAR_LEVEL_FIELD_DESC);
          oprot.writeString(struct.starLevel);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OutletVoTupleSchemeFactory implements SchemeFactory {
    public OutletVoTupleScheme getScheme() {
      return new OutletVoTupleScheme();
    }
  }

  private static class OutletVoTupleScheme extends TupleScheme<OutletVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OutletVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetClientId()) {
        optionals.set(2);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(3);
      }
      if (struct.isSetOutletId()) {
        optionals.set(4);
      }
      if (struct.isSetAreaId()) {
        optionals.set(5);
      }
      if (struct.isSetOrderValue()) {
        optionals.set(6);
      }
      if (struct.isSetOutletName()) {
        optionals.set(7);
      }
      if (struct.isSetOutletFullname()) {
        optionals.set(8);
      }
      if (struct.isSetOutletStatus()) {
        optionals.set(9);
      }
      if (struct.isSetAddress()) {
        optionals.set(10);
      }
      if (struct.isSetBusinessHours()) {
        optionals.set(11);
      }
      if (struct.isSetZip()) {
        optionals.set(12);
      }
      if (struct.isSetFax()) {
        optionals.set(13);
      }
      if (struct.isSetPhone()) {
        optionals.set(14);
      }
      if (struct.isSetContactName()) {
        optionals.set(15);
      }
      if (struct.isSetContactPhone()) {
        optionals.set(16);
      }
      if (struct.isSetContactEmail()) {
        optionals.set(17);
      }
      if (struct.isSetServiceProvider()) {
        optionals.set(18);
      }
      if (struct.isSetLongitude()) {
        optionals.set(19);
      }
      if (struct.isSetLatitude()) {
        optionals.set(20);
      }
      if (struct.isSetIsEnable()) {
        optionals.set(21);
      }
      if (struct.isSetDisableStatus()) {
        optionals.set(22);
      }
      if (struct.isSetDescription()) {
        optionals.set(23);
      }
      if (struct.isSetPreferDetails()) {
        optionals.set(24);
      }
      if (struct.isSetPreferStartPeriod()) {
        optionals.set(25);
      }
      if (struct.isSetPreferEndPeriod()) {
        optionals.set(26);
      }
      if (struct.isSetDiscount()) {
        optionals.set(27);
      }
      if (struct.isSetStartCreateTime()) {
        optionals.set(28);
      }
      if (struct.isSetEndCreateTime()) {
        optionals.set(29);
      }
      if (struct.isSetDisableStatusList()) {
        optionals.set(30);
      }
      if (struct.isSetComplaintPhone()) {
        optionals.set(31);
      }
      if (struct.isSetCategoryInfo()) {
        optionals.set(32);
      }
      if (struct.isSetTypeInfo()) {
        optionals.set(33);
      }
      if (struct.isSetDiscountCode()) {
        optionals.set(34);
      }
      if (struct.isSetDiscountRate()) {
        optionals.set(35);
      }
      if (struct.isSetAuditTime()) {
        optionals.set(36);
      }
      if (struct.isSetAuditComment()) {
        optionals.set(37);
      }
      if (struct.isSetAuditStaff()) {
        optionals.set(38);
      }
      if (struct.isSetAuditState()) {
        optionals.set(39);
      }
      if (struct.isSetEditAuditState()) {
        optionals.set(40);
      }
      if (struct.isSetIsDefault()) {
        optionals.set(41);
      }
      if (struct.isSetPreferStatus()) {
        optionals.set(42);
      }
      if (struct.isSetQrcodeUrl()) {
        optionals.set(43);
      }
      if (struct.isSetStarLevel()) {
        optionals.set(44);
      }
      oprot.writeBitSet(optionals, 45);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
      if (struct.isSetAreaId()) {
        oprot.writeI64(struct.areaId);
      }
      if (struct.isSetOrderValue()) {
        oprot.writeI32(struct.orderValue);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetOutletFullname()) {
        oprot.writeString(struct.outletFullname);
      }
      if (struct.isSetOutletStatus()) {
        oprot.writeBool(struct.outletStatus);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetBusinessHours()) {
        oprot.writeString(struct.businessHours);
      }
      if (struct.isSetZip()) {
        oprot.writeString(struct.zip);
      }
      if (struct.isSetFax()) {
        oprot.writeString(struct.fax);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetContactName()) {
        oprot.writeString(struct.contactName);
      }
      if (struct.isSetContactPhone()) {
        oprot.writeString(struct.contactPhone);
      }
      if (struct.isSetContactEmail()) {
        oprot.writeString(struct.contactEmail);
      }
      if (struct.isSetServiceProvider()) {
        oprot.writeString(struct.serviceProvider);
      }
      if (struct.isSetLongitude()) {
        oprot.writeString(struct.longitude);
      }
      if (struct.isSetLatitude()) {
        oprot.writeString(struct.latitude);
      }
      if (struct.isSetIsEnable()) {
        oprot.writeBool(struct.isEnable);
      }
      if (struct.isSetDisableStatus()) {
        oprot.writeString(struct.disableStatus);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetPreferDetails()) {
        oprot.writeString(struct.preferDetails);
      }
      if (struct.isSetPreferStartPeriod()) {
        oprot.writeI64(struct.preferStartPeriod);
      }
      if (struct.isSetPreferEndPeriod()) {
        oprot.writeI64(struct.preferEndPeriod);
      }
      if (struct.isSetDiscount()) {
        oprot.writeString(struct.discount);
      }
      if (struct.isSetStartCreateTime()) {
        oprot.writeI64(struct.startCreateTime);
      }
      if (struct.isSetEndCreateTime()) {
        oprot.writeI64(struct.endCreateTime);
      }
      if (struct.isSetDisableStatusList()) {
        {
          oprot.writeI32(struct.disableStatusList.size());
          for (String _iter12 : struct.disableStatusList)
          {
            oprot.writeString(_iter12);
          }
        }
      }
      if (struct.isSetComplaintPhone()) {
        oprot.writeString(struct.complaintPhone);
      }
      if (struct.isSetCategoryInfo()) {
        {
          oprot.writeI32(struct.categoryInfo.size());
          for (com.froad.thrift.vo.CategoryInfoVo _iter13 : struct.categoryInfo)
          {
            _iter13.write(oprot);
          }
        }
      }
      if (struct.isSetTypeInfo()) {
        {
          oprot.writeI32(struct.typeInfo.size());
          for (com.froad.thrift.vo.TypeInfoVo _iter14 : struct.typeInfo)
          {
            _iter14.write(oprot);
          }
        }
      }
      if (struct.isSetDiscountCode()) {
        oprot.writeString(struct.discountCode);
      }
      if (struct.isSetDiscountRate()) {
        oprot.writeString(struct.discountRate);
      }
      if (struct.isSetAuditTime()) {
        oprot.writeI64(struct.auditTime);
      }
      if (struct.isSetAuditComment()) {
        oprot.writeString(struct.auditComment);
      }
      if (struct.isSetAuditStaff()) {
        oprot.writeString(struct.auditStaff);
      }
      if (struct.isSetAuditState()) {
        oprot.writeString(struct.auditState);
      }
      if (struct.isSetEditAuditState()) {
        oprot.writeString(struct.editAuditState);
      }
      if (struct.isSetIsDefault()) {
        oprot.writeBool(struct.isDefault);
      }
      if (struct.isSetPreferStatus()) {
        oprot.writeBool(struct.preferStatus);
      }
      if (struct.isSetQrcodeUrl()) {
        oprot.writeString(struct.qrcodeUrl);
      }
      if (struct.isSetStarLevel()) {
        oprot.writeString(struct.starLevel);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OutletVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(45);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.areaId = iprot.readI64();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.orderValue = iprot.readI32();
        struct.setOrderValueIsSet(true);
      }
      if (incoming.get(7)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.outletFullname = iprot.readString();
        struct.setOutletFullnameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.outletStatus = iprot.readBool();
        struct.setOutletStatusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(11)) {
        struct.businessHours = iprot.readString();
        struct.setBusinessHoursIsSet(true);
      }
      if (incoming.get(12)) {
        struct.zip = iprot.readString();
        struct.setZipIsSet(true);
      }
      if (incoming.get(13)) {
        struct.fax = iprot.readString();
        struct.setFaxIsSet(true);
      }
      if (incoming.get(14)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(15)) {
        struct.contactName = iprot.readString();
        struct.setContactNameIsSet(true);
      }
      if (incoming.get(16)) {
        struct.contactPhone = iprot.readString();
        struct.setContactPhoneIsSet(true);
      }
      if (incoming.get(17)) {
        struct.contactEmail = iprot.readString();
        struct.setContactEmailIsSet(true);
      }
      if (incoming.get(18)) {
        struct.serviceProvider = iprot.readString();
        struct.setServiceProviderIsSet(true);
      }
      if (incoming.get(19)) {
        struct.longitude = iprot.readString();
        struct.setLongitudeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.latitude = iprot.readString();
        struct.setLatitudeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.isEnable = iprot.readBool();
        struct.setIsEnableIsSet(true);
      }
      if (incoming.get(22)) {
        struct.disableStatus = iprot.readString();
        struct.setDisableStatusIsSet(true);
      }
      if (incoming.get(23)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(24)) {
        struct.preferDetails = iprot.readString();
        struct.setPreferDetailsIsSet(true);
      }
      if (incoming.get(25)) {
        struct.preferStartPeriod = iprot.readI64();
        struct.setPreferStartPeriodIsSet(true);
      }
      if (incoming.get(26)) {
        struct.preferEndPeriod = iprot.readI64();
        struct.setPreferEndPeriodIsSet(true);
      }
      if (incoming.get(27)) {
        struct.discount = iprot.readString();
        struct.setDiscountIsSet(true);
      }
      if (incoming.get(28)) {
        struct.startCreateTime = iprot.readI64();
        struct.setStartCreateTimeIsSet(true);
      }
      if (incoming.get(29)) {
        struct.endCreateTime = iprot.readI64();
        struct.setEndCreateTimeIsSet(true);
      }
      if (incoming.get(30)) {
        {
          org.apache.thrift.protocol.TList _list15 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.disableStatusList = new ArrayList<String>(_list15.size);
          String _elem16;
          for (int _i17 = 0; _i17 < _list15.size; ++_i17)
          {
            _elem16 = iprot.readString();
            struct.disableStatusList.add(_elem16);
          }
        }
        struct.setDisableStatusListIsSet(true);
      }
      if (incoming.get(31)) {
        struct.complaintPhone = iprot.readString();
        struct.setComplaintPhoneIsSet(true);
      }
      if (incoming.get(32)) {
        {
          org.apache.thrift.protocol.TList _list18 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list18.size);
          com.froad.thrift.vo.CategoryInfoVo _elem19;
          for (int _i20 = 0; _i20 < _list18.size; ++_i20)
          {
            _elem19 = new com.froad.thrift.vo.CategoryInfoVo();
            _elem19.read(iprot);
            struct.categoryInfo.add(_elem19);
          }
        }
        struct.setCategoryInfoIsSet(true);
      }
      if (incoming.get(33)) {
        {
          org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list21.size);
          com.froad.thrift.vo.TypeInfoVo _elem22;
          for (int _i23 = 0; _i23 < _list21.size; ++_i23)
          {
            _elem22 = new com.froad.thrift.vo.TypeInfoVo();
            _elem22.read(iprot);
            struct.typeInfo.add(_elem22);
          }
        }
        struct.setTypeInfoIsSet(true);
      }
      if (incoming.get(34)) {
        struct.discountCode = iprot.readString();
        struct.setDiscountCodeIsSet(true);
      }
      if (incoming.get(35)) {
        struct.discountRate = iprot.readString();
        struct.setDiscountRateIsSet(true);
      }
      if (incoming.get(36)) {
        struct.auditTime = iprot.readI64();
        struct.setAuditTimeIsSet(true);
      }
      if (incoming.get(37)) {
        struct.auditComment = iprot.readString();
        struct.setAuditCommentIsSet(true);
      }
      if (incoming.get(38)) {
        struct.auditStaff = iprot.readString();
        struct.setAuditStaffIsSet(true);
      }
      if (incoming.get(39)) {
        struct.auditState = iprot.readString();
        struct.setAuditStateIsSet(true);
      }
      if (incoming.get(40)) {
        struct.editAuditState = iprot.readString();
        struct.setEditAuditStateIsSet(true);
      }
      if (incoming.get(41)) {
        struct.isDefault = iprot.readBool();
        struct.setIsDefaultIsSet(true);
      }
      if (incoming.get(42)) {
        struct.preferStatus = iprot.readBool();
        struct.setPreferStatusIsSet(true);
      }
      if (incoming.get(43)) {
        struct.qrcodeUrl = iprot.readString();
        struct.setQrcodeUrlIsSet(true);
      }
      if (incoming.get(44)) {
        struct.starLevel = iprot.readString();
        struct.setStarLevelIsSet(true);
      }
    }
  }

}

