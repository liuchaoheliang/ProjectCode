/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 17.创建VIP订单请求
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class AddVIPOrderVoReq implements org.apache.thrift.TBase<AddVIPOrderVoReq, AddVIPOrderVoReq._Fields>, java.io.Serializable, Cloneable, Comparable<AddVIPOrderVoReq> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AddVIPOrderVoReq");

  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MEMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("memberCode", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField MEMBER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("memberName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField IS_VIP_FIELD_DESC = new org.apache.thrift.protocol.TField("isVip", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField MEMBER_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("memberLevel", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField CREATE_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("createSource", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField AREA_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("areaName", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField BANK_LABEL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bankLabelID", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CLIENT_CHANNEL_FIELD_DESC = new org.apache.thrift.protocol.TField("clientChannel", org.apache.thrift.protocol.TType.STRING, (short)13);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AddVIPOrderVoReqStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AddVIPOrderVoReqTupleSchemeFactory());
  }

  /**
   * 客户端ID
   */
  public String clientId; // required
  /**
   * 会员号
   */
  public long memberCode; // required
  /**
   * 会员名称
   */
  public String memberName; // required
  /**
   * 是否为会员
   */
  public boolean isVip; // optional
  /**
   * 会员等级
   */
  public int memberLevel; // optional
  /**
   * 订单来源
   */
  public String createSource; // required
  /**
   * 接短信的手机号
   */
  public String phone; // required
  /**
   * 备注
   */
  public String remark; // optional
  /**
   * VIP商品ID
   */
  public String productId; // required
  /**
   * VIP所属行政区域ID
   */
  public String areaId; // optional
  /**
   * VIP所属行政区域名称
   */
  public String areaName; // optional
  /**
   * VIP所属开户行机构号
   */
  public String bankLabelID; // required
  /**
   * 开通方式
   */
  public String clientChannel; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 客户端ID
     */
    CLIENT_ID((short)1, "clientId"),
    /**
     * 会员号
     */
    MEMBER_CODE((short)2, "memberCode"),
    /**
     * 会员名称
     */
    MEMBER_NAME((short)3, "memberName"),
    /**
     * 是否为会员
     */
    IS_VIP((short)4, "isVip"),
    /**
     * 会员等级
     */
    MEMBER_LEVEL((short)5, "memberLevel"),
    /**
     * 订单来源
     */
    CREATE_SOURCE((short)6, "createSource"),
    /**
     * 接短信的手机号
     */
    PHONE((short)7, "phone"),
    /**
     * 备注
     */
    REMARK((short)8, "remark"),
    /**
     * VIP商品ID
     */
    PRODUCT_ID((short)9, "productId"),
    /**
     * VIP所属行政区域ID
     */
    AREA_ID((short)10, "areaId"),
    /**
     * VIP所属行政区域名称
     */
    AREA_NAME((short)11, "areaName"),
    /**
     * VIP所属开户行机构号
     */
    BANK_LABEL_ID((short)12, "bankLabelID"),
    /**
     * 开通方式
     */
    CLIENT_CHANNEL((short)13, "clientChannel");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CLIENT_ID
          return CLIENT_ID;
        case 2: // MEMBER_CODE
          return MEMBER_CODE;
        case 3: // MEMBER_NAME
          return MEMBER_NAME;
        case 4: // IS_VIP
          return IS_VIP;
        case 5: // MEMBER_LEVEL
          return MEMBER_LEVEL;
        case 6: // CREATE_SOURCE
          return CREATE_SOURCE;
        case 7: // PHONE
          return PHONE;
        case 8: // REMARK
          return REMARK;
        case 9: // PRODUCT_ID
          return PRODUCT_ID;
        case 10: // AREA_ID
          return AREA_ID;
        case 11: // AREA_NAME
          return AREA_NAME;
        case 12: // BANK_LABEL_ID
          return BANK_LABEL_ID;
        case 13: // CLIENT_CHANNEL
          return CLIENT_CHANNEL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MEMBERCODE_ISSET_ID = 0;
  private static final int __ISVIP_ISSET_ID = 1;
  private static final int __MEMBERLEVEL_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.IS_VIP,_Fields.MEMBER_LEVEL,_Fields.REMARK,_Fields.AREA_ID,_Fields.AREA_NAME};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("memberCode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MEMBER_NAME, new org.apache.thrift.meta_data.FieldMetaData("memberName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_VIP, new org.apache.thrift.meta_data.FieldMetaData("isVip", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MEMBER_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("memberLevel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("createSource", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_NAME, new org.apache.thrift.meta_data.FieldMetaData("areaName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_LABEL_ID, new org.apache.thrift.meta_data.FieldMetaData("bankLabelID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_CHANNEL, new org.apache.thrift.meta_data.FieldMetaData("clientChannel", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AddVIPOrderVoReq.class, metaDataMap);
  }

  public AddVIPOrderVoReq() {
  }

  public AddVIPOrderVoReq(
    String clientId,
    long memberCode,
    String memberName,
    String createSource,
    String phone,
    String productId,
    String bankLabelID,
    String clientChannel)
  {
    this();
    this.clientId = clientId;
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    this.memberName = memberName;
    this.createSource = createSource;
    this.phone = phone;
    this.productId = productId;
    this.bankLabelID = bankLabelID;
    this.clientChannel = clientChannel;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AddVIPOrderVoReq(AddVIPOrderVoReq other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    this.memberCode = other.memberCode;
    if (other.isSetMemberName()) {
      this.memberName = other.memberName;
    }
    this.isVip = other.isVip;
    this.memberLevel = other.memberLevel;
    if (other.isSetCreateSource()) {
      this.createSource = other.createSource;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetAreaId()) {
      this.areaId = other.areaId;
    }
    if (other.isSetAreaName()) {
      this.areaName = other.areaName;
    }
    if (other.isSetBankLabelID()) {
      this.bankLabelID = other.bankLabelID;
    }
    if (other.isSetClientChannel()) {
      this.clientChannel = other.clientChannel;
    }
  }

  public AddVIPOrderVoReq deepCopy() {
    return new AddVIPOrderVoReq(this);
  }

  @Override
  public void clear() {
    this.clientId = null;
    setMemberCodeIsSet(false);
    this.memberCode = 0;
    this.memberName = null;
    setIsVipIsSet(false);
    this.isVip = false;
    setMemberLevelIsSet(false);
    this.memberLevel = 0;
    this.createSource = null;
    this.phone = null;
    this.remark = null;
    this.productId = null;
    this.areaId = null;
    this.areaName = null;
    this.bankLabelID = null;
    this.clientChannel = null;
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public AddVIPOrderVoReq setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 会员号
   */
  public long getMemberCode() {
    return this.memberCode;
  }

  /**
   * 会员号
   */
  public AddVIPOrderVoReq setMemberCode(long memberCode) {
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    return this;
  }

  public void unsetMemberCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  /** Returns true if field memberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberCode() {
    return EncodingUtils.testBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  public void setMemberCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEMBERCODE_ISSET_ID, value);
  }

  /**
   * 会员名称
   */
  public String getMemberName() {
    return this.memberName;
  }

  /**
   * 会员名称
   */
  public AddVIPOrderVoReq setMemberName(String memberName) {
    this.memberName = memberName;
    return this;
  }

  public void unsetMemberName() {
    this.memberName = null;
  }

  /** Returns true if field memberName is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberName() {
    return this.memberName != null;
  }

  public void setMemberNameIsSet(boolean value) {
    if (!value) {
      this.memberName = null;
    }
  }

  /**
   * 是否为会员
   */
  public boolean isIsVip() {
    return this.isVip;
  }

  /**
   * 是否为会员
   */
  public AddVIPOrderVoReq setIsVip(boolean isVip) {
    this.isVip = isVip;
    setIsVipIsSet(true);
    return this;
  }

  public void unsetIsVip() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISVIP_ISSET_ID);
  }

  /** Returns true if field isVip is set (has been assigned a value) and false otherwise */
  public boolean isSetIsVip() {
    return EncodingUtils.testBit(__isset_bitfield, __ISVIP_ISSET_ID);
  }

  public void setIsVipIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISVIP_ISSET_ID, value);
  }

  /**
   * 会员等级
   */
  public int getMemberLevel() {
    return this.memberLevel;
  }

  /**
   * 会员等级
   */
  public AddVIPOrderVoReq setMemberLevel(int memberLevel) {
    this.memberLevel = memberLevel;
    setMemberLevelIsSet(true);
    return this;
  }

  public void unsetMemberLevel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEMBERLEVEL_ISSET_ID);
  }

  /** Returns true if field memberLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberLevel() {
    return EncodingUtils.testBit(__isset_bitfield, __MEMBERLEVEL_ISSET_ID);
  }

  public void setMemberLevelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEMBERLEVEL_ISSET_ID, value);
  }

  /**
   * 订单来源
   */
  public String getCreateSource() {
    return this.createSource;
  }

  /**
   * 订单来源
   */
  public AddVIPOrderVoReq setCreateSource(String createSource) {
    this.createSource = createSource;
    return this;
  }

  public void unsetCreateSource() {
    this.createSource = null;
  }

  /** Returns true if field createSource is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateSource() {
    return this.createSource != null;
  }

  public void setCreateSourceIsSet(boolean value) {
    if (!value) {
      this.createSource = null;
    }
  }

  /**
   * 接短信的手机号
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 接短信的手机号
   */
  public AddVIPOrderVoReq setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 备注
   */
  public String getRemark() {
    return this.remark;
  }

  /**
   * 备注
   */
  public AddVIPOrderVoReq setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  /**
   * VIP商品ID
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * VIP商品ID
   */
  public AddVIPOrderVoReq setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * VIP所属行政区域ID
   */
  public String getAreaId() {
    return this.areaId;
  }

  /**
   * VIP所属行政区域ID
   */
  public AddVIPOrderVoReq setAreaId(String areaId) {
    this.areaId = areaId;
    return this;
  }

  public void unsetAreaId() {
    this.areaId = null;
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return this.areaId != null;
  }

  public void setAreaIdIsSet(boolean value) {
    if (!value) {
      this.areaId = null;
    }
  }

  /**
   * VIP所属行政区域名称
   */
  public String getAreaName() {
    return this.areaName;
  }

  /**
   * VIP所属行政区域名称
   */
  public AddVIPOrderVoReq setAreaName(String areaName) {
    this.areaName = areaName;
    return this;
  }

  public void unsetAreaName() {
    this.areaName = null;
  }

  /** Returns true if field areaName is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaName() {
    return this.areaName != null;
  }

  public void setAreaNameIsSet(boolean value) {
    if (!value) {
      this.areaName = null;
    }
  }

  /**
   * VIP所属开户行机构号
   */
  public String getBankLabelID() {
    return this.bankLabelID;
  }

  /**
   * VIP所属开户行机构号
   */
  public AddVIPOrderVoReq setBankLabelID(String bankLabelID) {
    this.bankLabelID = bankLabelID;
    return this;
  }

  public void unsetBankLabelID() {
    this.bankLabelID = null;
  }

  /** Returns true if field bankLabelID is set (has been assigned a value) and false otherwise */
  public boolean isSetBankLabelID() {
    return this.bankLabelID != null;
  }

  public void setBankLabelIDIsSet(boolean value) {
    if (!value) {
      this.bankLabelID = null;
    }
  }

  /**
   * 开通方式
   */
  public String getClientChannel() {
    return this.clientChannel;
  }

  /**
   * 开通方式
   */
  public AddVIPOrderVoReq setClientChannel(String clientChannel) {
    this.clientChannel = clientChannel;
    return this;
  }

  public void unsetClientChannel() {
    this.clientChannel = null;
  }

  /** Returns true if field clientChannel is set (has been assigned a value) and false otherwise */
  public boolean isSetClientChannel() {
    return this.clientChannel != null;
  }

  public void setClientChannelIsSet(boolean value) {
    if (!value) {
      this.clientChannel = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MEMBER_CODE:
      if (value == null) {
        unsetMemberCode();
      } else {
        setMemberCode((Long)value);
      }
      break;

    case MEMBER_NAME:
      if (value == null) {
        unsetMemberName();
      } else {
        setMemberName((String)value);
      }
      break;

    case IS_VIP:
      if (value == null) {
        unsetIsVip();
      } else {
        setIsVip((Boolean)value);
      }
      break;

    case MEMBER_LEVEL:
      if (value == null) {
        unsetMemberLevel();
      } else {
        setMemberLevel((Integer)value);
      }
      break;

    case CREATE_SOURCE:
      if (value == null) {
        unsetCreateSource();
      } else {
        setCreateSource((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((String)value);
      }
      break;

    case AREA_NAME:
      if (value == null) {
        unsetAreaName();
      } else {
        setAreaName((String)value);
      }
      break;

    case BANK_LABEL_ID:
      if (value == null) {
        unsetBankLabelID();
      } else {
        setBankLabelID((String)value);
      }
      break;

    case CLIENT_CHANNEL:
      if (value == null) {
        unsetClientChannel();
      } else {
        setClientChannel((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CLIENT_ID:
      return getClientId();

    case MEMBER_CODE:
      return Long.valueOf(getMemberCode());

    case MEMBER_NAME:
      return getMemberName();

    case IS_VIP:
      return Boolean.valueOf(isIsVip());

    case MEMBER_LEVEL:
      return Integer.valueOf(getMemberLevel());

    case CREATE_SOURCE:
      return getCreateSource();

    case PHONE:
      return getPhone();

    case REMARK:
      return getRemark();

    case PRODUCT_ID:
      return getProductId();

    case AREA_ID:
      return getAreaId();

    case AREA_NAME:
      return getAreaName();

    case BANK_LABEL_ID:
      return getBankLabelID();

    case CLIENT_CHANNEL:
      return getClientChannel();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CLIENT_ID:
      return isSetClientId();
    case MEMBER_CODE:
      return isSetMemberCode();
    case MEMBER_NAME:
      return isSetMemberName();
    case IS_VIP:
      return isSetIsVip();
    case MEMBER_LEVEL:
      return isSetMemberLevel();
    case CREATE_SOURCE:
      return isSetCreateSource();
    case PHONE:
      return isSetPhone();
    case REMARK:
      return isSetRemark();
    case PRODUCT_ID:
      return isSetProductId();
    case AREA_ID:
      return isSetAreaId();
    case AREA_NAME:
      return isSetAreaName();
    case BANK_LABEL_ID:
      return isSetBankLabelID();
    case CLIENT_CHANNEL:
      return isSetClientChannel();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AddVIPOrderVoReq)
      return this.equals((AddVIPOrderVoReq)that);
    return false;
  }

  public boolean equals(AddVIPOrderVoReq that) {
    if (that == null)
      return false;

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_memberCode = true;
    boolean that_present_memberCode = true;
    if (this_present_memberCode || that_present_memberCode) {
      if (!(this_present_memberCode && that_present_memberCode))
        return false;
      if (this.memberCode != that.memberCode)
        return false;
    }

    boolean this_present_memberName = true && this.isSetMemberName();
    boolean that_present_memberName = true && that.isSetMemberName();
    if (this_present_memberName || that_present_memberName) {
      if (!(this_present_memberName && that_present_memberName))
        return false;
      if (!this.memberName.equals(that.memberName))
        return false;
    }

    boolean this_present_isVip = true && this.isSetIsVip();
    boolean that_present_isVip = true && that.isSetIsVip();
    if (this_present_isVip || that_present_isVip) {
      if (!(this_present_isVip && that_present_isVip))
        return false;
      if (this.isVip != that.isVip)
        return false;
    }

    boolean this_present_memberLevel = true && this.isSetMemberLevel();
    boolean that_present_memberLevel = true && that.isSetMemberLevel();
    if (this_present_memberLevel || that_present_memberLevel) {
      if (!(this_present_memberLevel && that_present_memberLevel))
        return false;
      if (this.memberLevel != that.memberLevel)
        return false;
    }

    boolean this_present_createSource = true && this.isSetCreateSource();
    boolean that_present_createSource = true && that.isSetCreateSource();
    if (this_present_createSource || that_present_createSource) {
      if (!(this_present_createSource && that_present_createSource))
        return false;
      if (!this.createSource.equals(that.createSource))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_areaId = true && this.isSetAreaId();
    boolean that_present_areaId = true && that.isSetAreaId();
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (!this.areaId.equals(that.areaId))
        return false;
    }

    boolean this_present_areaName = true && this.isSetAreaName();
    boolean that_present_areaName = true && that.isSetAreaName();
    if (this_present_areaName || that_present_areaName) {
      if (!(this_present_areaName && that_present_areaName))
        return false;
      if (!this.areaName.equals(that.areaName))
        return false;
    }

    boolean this_present_bankLabelID = true && this.isSetBankLabelID();
    boolean that_present_bankLabelID = true && that.isSetBankLabelID();
    if (this_present_bankLabelID || that_present_bankLabelID) {
      if (!(this_present_bankLabelID && that_present_bankLabelID))
        return false;
      if (!this.bankLabelID.equals(that.bankLabelID))
        return false;
    }

    boolean this_present_clientChannel = true && this.isSetClientChannel();
    boolean that_present_clientChannel = true && that.isSetClientChannel();
    if (this_present_clientChannel || that_present_clientChannel) {
      if (!(this_present_clientChannel && that_present_clientChannel))
        return false;
      if (!this.clientChannel.equals(that.clientChannel))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_memberCode = true;
    list.add(present_memberCode);
    if (present_memberCode)
      list.add(memberCode);

    boolean present_memberName = true && (isSetMemberName());
    list.add(present_memberName);
    if (present_memberName)
      list.add(memberName);

    boolean present_isVip = true && (isSetIsVip());
    list.add(present_isVip);
    if (present_isVip)
      list.add(isVip);

    boolean present_memberLevel = true && (isSetMemberLevel());
    list.add(present_memberLevel);
    if (present_memberLevel)
      list.add(memberLevel);

    boolean present_createSource = true && (isSetCreateSource());
    list.add(present_createSource);
    if (present_createSource)
      list.add(createSource);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_remark = true && (isSetRemark());
    list.add(present_remark);
    if (present_remark)
      list.add(remark);

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_areaId = true && (isSetAreaId());
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_areaName = true && (isSetAreaName());
    list.add(present_areaName);
    if (present_areaName)
      list.add(areaName);

    boolean present_bankLabelID = true && (isSetBankLabelID());
    list.add(present_bankLabelID);
    if (present_bankLabelID)
      list.add(bankLabelID);

    boolean present_clientChannel = true && (isSetClientChannel());
    list.add(present_clientChannel);
    if (present_clientChannel)
      list.add(clientChannel);

    return list.hashCode();
  }

  @Override
  public int compareTo(AddVIPOrderVoReq other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberCode()).compareTo(other.isSetMemberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberCode, other.memberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberName()).compareTo(other.isSetMemberName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberName, other.memberName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsVip()).compareTo(other.isSetIsVip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsVip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isVip, other.isVip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberLevel()).compareTo(other.isSetMemberLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberLevel, other.memberLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateSource()).compareTo(other.isSetCreateSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createSource, other.createSource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaName()).compareTo(other.isSetAreaName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaName, other.areaName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankLabelID()).compareTo(other.isSetBankLabelID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankLabelID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankLabelID, other.bankLabelID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientChannel()).compareTo(other.isSetClientChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientChannel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientChannel, other.clientChannel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AddVIPOrderVoReq(");
    boolean first = true;

    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberCode:");
    sb.append(this.memberCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberName:");
    if (this.memberName == null) {
      sb.append("null");
    } else {
      sb.append(this.memberName);
    }
    first = false;
    if (isSetIsVip()) {
      if (!first) sb.append(", ");
      sb.append("isVip:");
      sb.append(this.isVip);
      first = false;
    }
    if (isSetMemberLevel()) {
      if (!first) sb.append(", ");
      sb.append("memberLevel:");
      sb.append(this.memberLevel);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("createSource:");
    if (this.createSource == null) {
      sb.append("null");
    } else {
      sb.append(this.createSource);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (isSetRemark()) {
      if (!first) sb.append(", ");
      sb.append("remark:");
      if (this.remark == null) {
        sb.append("null");
      } else {
        sb.append(this.remark);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (isSetAreaId()) {
      if (!first) sb.append(", ");
      sb.append("areaId:");
      if (this.areaId == null) {
        sb.append("null");
      } else {
        sb.append(this.areaId);
      }
      first = false;
    }
    if (isSetAreaName()) {
      if (!first) sb.append(", ");
      sb.append("areaName:");
      if (this.areaName == null) {
        sb.append("null");
      } else {
        sb.append(this.areaName);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("bankLabelID:");
    if (this.bankLabelID == null) {
      sb.append("null");
    } else {
      sb.append(this.bankLabelID);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientChannel:");
    if (this.clientChannel == null) {
      sb.append("null");
    } else {
      sb.append(this.clientChannel);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (clientId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'clientId' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'memberCode' because it's a primitive and you chose the non-beans generator.
    if (memberName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'memberName' was not present! Struct: " + toString());
    }
    if (createSource == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'createSource' was not present! Struct: " + toString());
    }
    if (phone == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'phone' was not present! Struct: " + toString());
    }
    if (productId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'productId' was not present! Struct: " + toString());
    }
    if (bankLabelID == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'bankLabelID' was not present! Struct: " + toString());
    }
    if (clientChannel == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'clientChannel' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AddVIPOrderVoReqStandardSchemeFactory implements SchemeFactory {
    public AddVIPOrderVoReqStandardScheme getScheme() {
      return new AddVIPOrderVoReqStandardScheme();
    }
  }

  private static class AddVIPOrderVoReqStandardScheme extends StandardScheme<AddVIPOrderVoReq> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AddVIPOrderVoReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MEMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.memberCode = iprot.readI64();
              struct.setMemberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MEMBER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberName = iprot.readString();
              struct.setMemberNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IS_VIP
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isVip = iprot.readBool();
              struct.setIsVipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MEMBER_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.memberLevel = iprot.readI32();
              struct.setMemberLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATE_SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createSource = iprot.readString();
              struct.setCreateSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaId = iprot.readString();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // AREA_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaName = iprot.readString();
              struct.setAreaNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // BANK_LABEL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankLabelID = iprot.readString();
              struct.setBankLabelIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CLIENT_CHANNEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientChannel = iprot.readString();
              struct.setClientChannelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetMemberCode()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'memberCode' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AddVIPOrderVoReq struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MEMBER_CODE_FIELD_DESC);
      oprot.writeI64(struct.memberCode);
      oprot.writeFieldEnd();
      if (struct.memberName != null) {
        oprot.writeFieldBegin(MEMBER_NAME_FIELD_DESC);
        oprot.writeString(struct.memberName);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsVip()) {
        oprot.writeFieldBegin(IS_VIP_FIELD_DESC);
        oprot.writeBool(struct.isVip);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMemberLevel()) {
        oprot.writeFieldBegin(MEMBER_LEVEL_FIELD_DESC);
        oprot.writeI32(struct.memberLevel);
        oprot.writeFieldEnd();
      }
      if (struct.createSource != null) {
        oprot.writeFieldBegin(CREATE_SOURCE_FIELD_DESC);
        oprot.writeString(struct.createSource);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        if (struct.isSetRemark()) {
          oprot.writeFieldBegin(REMARK_FIELD_DESC);
          oprot.writeString(struct.remark);
          oprot.writeFieldEnd();
        }
      }
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.areaId != null) {
        if (struct.isSetAreaId()) {
          oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
          oprot.writeString(struct.areaId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.areaName != null) {
        if (struct.isSetAreaName()) {
          oprot.writeFieldBegin(AREA_NAME_FIELD_DESC);
          oprot.writeString(struct.areaName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.bankLabelID != null) {
        oprot.writeFieldBegin(BANK_LABEL_ID_FIELD_DESC);
        oprot.writeString(struct.bankLabelID);
        oprot.writeFieldEnd();
      }
      if (struct.clientChannel != null) {
        oprot.writeFieldBegin(CLIENT_CHANNEL_FIELD_DESC);
        oprot.writeString(struct.clientChannel);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AddVIPOrderVoReqTupleSchemeFactory implements SchemeFactory {
    public AddVIPOrderVoReqTupleScheme getScheme() {
      return new AddVIPOrderVoReqTupleScheme();
    }
  }

  private static class AddVIPOrderVoReqTupleScheme extends TupleScheme<AddVIPOrderVoReq> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AddVIPOrderVoReq struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.clientId);
      oprot.writeI64(struct.memberCode);
      oprot.writeString(struct.memberName);
      oprot.writeString(struct.createSource);
      oprot.writeString(struct.phone);
      oprot.writeString(struct.productId);
      oprot.writeString(struct.bankLabelID);
      oprot.writeString(struct.clientChannel);
      BitSet optionals = new BitSet();
      if (struct.isSetIsVip()) {
        optionals.set(0);
      }
      if (struct.isSetMemberLevel()) {
        optionals.set(1);
      }
      if (struct.isSetRemark()) {
        optionals.set(2);
      }
      if (struct.isSetAreaId()) {
        optionals.set(3);
      }
      if (struct.isSetAreaName()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetIsVip()) {
        oprot.writeBool(struct.isVip);
      }
      if (struct.isSetMemberLevel()) {
        oprot.writeI32(struct.memberLevel);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetAreaId()) {
        oprot.writeString(struct.areaId);
      }
      if (struct.isSetAreaName()) {
        oprot.writeString(struct.areaName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AddVIPOrderVoReq struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.clientId = iprot.readString();
      struct.setClientIdIsSet(true);
      struct.memberCode = iprot.readI64();
      struct.setMemberCodeIsSet(true);
      struct.memberName = iprot.readString();
      struct.setMemberNameIsSet(true);
      struct.createSource = iprot.readString();
      struct.setCreateSourceIsSet(true);
      struct.phone = iprot.readString();
      struct.setPhoneIsSet(true);
      struct.productId = iprot.readString();
      struct.setProductIdIsSet(true);
      struct.bankLabelID = iprot.readString();
      struct.setBankLabelIDIsSet(true);
      struct.clientChannel = iprot.readString();
      struct.setClientChannelIsSet(true);
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.isVip = iprot.readBool();
        struct.setIsVipIsSet(true);
      }
      if (incoming.get(1)) {
        struct.memberLevel = iprot.readI32();
        struct.setMemberLevelIsSet(true);
      }
      if (incoming.get(2)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(3)) {
        struct.areaId = iprot.readString();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.areaName = iprot.readString();
        struct.setAreaNameIsSet(true);
      }
    }
  }

}

