/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 门店详情概要信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class OutletDetailSimpleVo implements org.apache.thrift.TBase<OutletDetailSimpleVo, OutletDetailSimpleVo._Fields>, java.io.Serializable, Cloneable, Comparable<OutletDetailSimpleVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OutletDetailSimpleVo");

  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField DEFAULT_IMAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("defaultImage", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CATEGORY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryInfo", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField TYPE_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("typeInfo", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField DIS_FIELD_DESC = new org.apache.thrift.protocol.TField("dis", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField STAR_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("starLevel", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OutletDetailSimpleVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OutletDetailSimpleVoTupleSchemeFactory());
  }

  /**
   * 商户id
   */
  public String merchantId; // optional
  /**
   * 商户名称
   */
  public String merchantName; // optional
  /**
   * 门店Id
   */
  public String outletId; // optional
  /**
   * 门店名称
   */
  public String outletName; // optional
  /**
   * 门店默认图片(小图)
   */
  public String defaultImage; // optional
  /**
   * 分类列表
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> categoryInfo; // optional
  /**
   * 类型列表
   */
  public List<com.froad.thrift.vo.TypeInfoVo> typeInfo; // optional
  /**
   * 地址
   */
  public String address; // optional
  /**
   * 计算出的距离
   */
  public double dis; // optional
  /**
   * 星评
   */
  public String starLevel; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商户id
     */
    MERCHANT_ID((short)1, "merchantId"),
    /**
     * 商户名称
     */
    MERCHANT_NAME((short)2, "merchantName"),
    /**
     * 门店Id
     */
    OUTLET_ID((short)3, "outletId"),
    /**
     * 门店名称
     */
    OUTLET_NAME((short)4, "outletName"),
    /**
     * 门店默认图片(小图)
     */
    DEFAULT_IMAGE((short)5, "defaultImage"),
    /**
     * 分类列表
     */
    CATEGORY_INFO((short)6, "categoryInfo"),
    /**
     * 类型列表
     */
    TYPE_INFO((short)7, "typeInfo"),
    /**
     * 地址
     */
    ADDRESS((short)8, "address"),
    /**
     * 计算出的距离
     */
    DIS((short)9, "dis"),
    /**
     * 星评
     */
    STAR_LEVEL((short)10, "starLevel");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MERCHANT_ID
          return MERCHANT_ID;
        case 2: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 3: // OUTLET_ID
          return OUTLET_ID;
        case 4: // OUTLET_NAME
          return OUTLET_NAME;
        case 5: // DEFAULT_IMAGE
          return DEFAULT_IMAGE;
        case 6: // CATEGORY_INFO
          return CATEGORY_INFO;
        case 7: // TYPE_INFO
          return TYPE_INFO;
        case 8: // ADDRESS
          return ADDRESS;
        case 9: // DIS
          return DIS;
        case 10: // STAR_LEVEL
          return STAR_LEVEL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DIS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.MERCHANT_ID,_Fields.MERCHANT_NAME,_Fields.OUTLET_ID,_Fields.OUTLET_NAME,_Fields.DEFAULT_IMAGE,_Fields.CATEGORY_INFO,_Fields.TYPE_INFO,_Fields.ADDRESS,_Fields.DIS,_Fields.STAR_LEVEL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEFAULT_IMAGE, new org.apache.thrift.meta_data.FieldMetaData("defaultImage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_INFO, new org.apache.thrift.meta_data.FieldMetaData("categoryInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.CategoryInfoVo.class))));
    tmpMap.put(_Fields.TYPE_INFO, new org.apache.thrift.meta_data.FieldMetaData("typeInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.TypeInfoVo.class))));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DIS, new org.apache.thrift.meta_data.FieldMetaData("dis", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.STAR_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("starLevel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OutletDetailSimpleVo.class, metaDataMap);
  }

  public OutletDetailSimpleVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OutletDetailSimpleVo(OutletDetailSimpleVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    if (other.isSetDefaultImage()) {
      this.defaultImage = other.defaultImage;
    }
    if (other.isSetCategoryInfo()) {
      List<com.froad.thrift.vo.CategoryInfoVo> __this__categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(other.categoryInfo.size());
      for (com.froad.thrift.vo.CategoryInfoVo other_element : other.categoryInfo) {
        __this__categoryInfo.add(new com.froad.thrift.vo.CategoryInfoVo(other_element));
      }
      this.categoryInfo = __this__categoryInfo;
    }
    if (other.isSetTypeInfo()) {
      List<com.froad.thrift.vo.TypeInfoVo> __this__typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(other.typeInfo.size());
      for (com.froad.thrift.vo.TypeInfoVo other_element : other.typeInfo) {
        __this__typeInfo.add(new com.froad.thrift.vo.TypeInfoVo(other_element));
      }
      this.typeInfo = __this__typeInfo;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    this.dis = other.dis;
    if (other.isSetStarLevel()) {
      this.starLevel = other.starLevel;
    }
  }

  public OutletDetailSimpleVo deepCopy() {
    return new OutletDetailSimpleVo(this);
  }

  @Override
  public void clear() {
    this.merchantId = null;
    this.merchantName = null;
    this.outletId = null;
    this.outletName = null;
    this.defaultImage = null;
    this.categoryInfo = null;
    this.typeInfo = null;
    this.address = null;
    setDisIsSet(false);
    this.dis = 0.0;
    this.starLevel = null;
  }

  /**
   * 商户id
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户id
   */
  public OutletDetailSimpleVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 商户名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称
   */
  public OutletDetailSimpleVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 门店Id
   */
  public String getOutletId() {
    return this.outletId;
  }

  /**
   * 门店Id
   */
  public OutletDetailSimpleVo setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  /**
   * 门店名称
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 门店名称
   */
  public OutletDetailSimpleVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 门店默认图片(小图)
   */
  public String getDefaultImage() {
    return this.defaultImage;
  }

  /**
   * 门店默认图片(小图)
   */
  public OutletDetailSimpleVo setDefaultImage(String defaultImage) {
    this.defaultImage = defaultImage;
    return this;
  }

  public void unsetDefaultImage() {
    this.defaultImage = null;
  }

  /** Returns true if field defaultImage is set (has been assigned a value) and false otherwise */
  public boolean isSetDefaultImage() {
    return this.defaultImage != null;
  }

  public void setDefaultImageIsSet(boolean value) {
    if (!value) {
      this.defaultImage = null;
    }
  }

  public int getCategoryInfoSize() {
    return (this.categoryInfo == null) ? 0 : this.categoryInfo.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfoIterator() {
    return (this.categoryInfo == null) ? null : this.categoryInfo.iterator();
  }

  public void addToCategoryInfo(com.froad.thrift.vo.CategoryInfoVo elem) {
    if (this.categoryInfo == null) {
      this.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>();
    }
    this.categoryInfo.add(elem);
  }

  /**
   * 分类列表
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfo() {
    return this.categoryInfo;
  }

  /**
   * 分类列表
   */
  public OutletDetailSimpleVo setCategoryInfo(List<com.froad.thrift.vo.CategoryInfoVo> categoryInfo) {
    this.categoryInfo = categoryInfo;
    return this;
  }

  public void unsetCategoryInfo() {
    this.categoryInfo = null;
  }

  /** Returns true if field categoryInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryInfo() {
    return this.categoryInfo != null;
  }

  public void setCategoryInfoIsSet(boolean value) {
    if (!value) {
      this.categoryInfo = null;
    }
  }

  public int getTypeInfoSize() {
    return (this.typeInfo == null) ? 0 : this.typeInfo.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.TypeInfoVo> getTypeInfoIterator() {
    return (this.typeInfo == null) ? null : this.typeInfo.iterator();
  }

  public void addToTypeInfo(com.froad.thrift.vo.TypeInfoVo elem) {
    if (this.typeInfo == null) {
      this.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>();
    }
    this.typeInfo.add(elem);
  }

  /**
   * 类型列表
   */
  public List<com.froad.thrift.vo.TypeInfoVo> getTypeInfo() {
    return this.typeInfo;
  }

  /**
   * 类型列表
   */
  public OutletDetailSimpleVo setTypeInfo(List<com.froad.thrift.vo.TypeInfoVo> typeInfo) {
    this.typeInfo = typeInfo;
    return this;
  }

  public void unsetTypeInfo() {
    this.typeInfo = null;
  }

  /** Returns true if field typeInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetTypeInfo() {
    return this.typeInfo != null;
  }

  public void setTypeInfoIsSet(boolean value) {
    if (!value) {
      this.typeInfo = null;
    }
  }

  /**
   * 地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 地址
   */
  public OutletDetailSimpleVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 计算出的距离
   */
  public double getDis() {
    return this.dis;
  }

  /**
   * 计算出的距离
   */
  public OutletDetailSimpleVo setDis(double dis) {
    this.dis = dis;
    setDisIsSet(true);
    return this;
  }

  public void unsetDis() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DIS_ISSET_ID);
  }

  /** Returns true if field dis is set (has been assigned a value) and false otherwise */
  public boolean isSetDis() {
    return EncodingUtils.testBit(__isset_bitfield, __DIS_ISSET_ID);
  }

  public void setDisIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DIS_ISSET_ID, value);
  }

  /**
   * 星评
   */
  public String getStarLevel() {
    return this.starLevel;
  }

  /**
   * 星评
   */
  public OutletDetailSimpleVo setStarLevel(String starLevel) {
    this.starLevel = starLevel;
    return this;
  }

  public void unsetStarLevel() {
    this.starLevel = null;
  }

  /** Returns true if field starLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetStarLevel() {
    return this.starLevel != null;
  }

  public void setStarLevelIsSet(boolean value) {
    if (!value) {
      this.starLevel = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case DEFAULT_IMAGE:
      if (value == null) {
        unsetDefaultImage();
      } else {
        setDefaultImage((String)value);
      }
      break;

    case CATEGORY_INFO:
      if (value == null) {
        unsetCategoryInfo();
      } else {
        setCategoryInfo((List<com.froad.thrift.vo.CategoryInfoVo>)value);
      }
      break;

    case TYPE_INFO:
      if (value == null) {
        unsetTypeInfo();
      } else {
        setTypeInfo((List<com.froad.thrift.vo.TypeInfoVo>)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case DIS:
      if (value == null) {
        unsetDis();
      } else {
        setDis((Double)value);
      }
      break;

    case STAR_LEVEL:
      if (value == null) {
        unsetStarLevel();
      } else {
        setStarLevel((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MERCHANT_ID:
      return getMerchantId();

    case MERCHANT_NAME:
      return getMerchantName();

    case OUTLET_ID:
      return getOutletId();

    case OUTLET_NAME:
      return getOutletName();

    case DEFAULT_IMAGE:
      return getDefaultImage();

    case CATEGORY_INFO:
      return getCategoryInfo();

    case TYPE_INFO:
      return getTypeInfo();

    case ADDRESS:
      return getAddress();

    case DIS:
      return Double.valueOf(getDis());

    case STAR_LEVEL:
      return getStarLevel();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MERCHANT_ID:
      return isSetMerchantId();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case OUTLET_ID:
      return isSetOutletId();
    case OUTLET_NAME:
      return isSetOutletName();
    case DEFAULT_IMAGE:
      return isSetDefaultImage();
    case CATEGORY_INFO:
      return isSetCategoryInfo();
    case TYPE_INFO:
      return isSetTypeInfo();
    case ADDRESS:
      return isSetAddress();
    case DIS:
      return isSetDis();
    case STAR_LEVEL:
      return isSetStarLevel();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OutletDetailSimpleVo)
      return this.equals((OutletDetailSimpleVo)that);
    return false;
  }

  public boolean equals(OutletDetailSimpleVo that) {
    if (that == null)
      return false;

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_defaultImage = true && this.isSetDefaultImage();
    boolean that_present_defaultImage = true && that.isSetDefaultImage();
    if (this_present_defaultImage || that_present_defaultImage) {
      if (!(this_present_defaultImage && that_present_defaultImage))
        return false;
      if (!this.defaultImage.equals(that.defaultImage))
        return false;
    }

    boolean this_present_categoryInfo = true && this.isSetCategoryInfo();
    boolean that_present_categoryInfo = true && that.isSetCategoryInfo();
    if (this_present_categoryInfo || that_present_categoryInfo) {
      if (!(this_present_categoryInfo && that_present_categoryInfo))
        return false;
      if (!this.categoryInfo.equals(that.categoryInfo))
        return false;
    }

    boolean this_present_typeInfo = true && this.isSetTypeInfo();
    boolean that_present_typeInfo = true && that.isSetTypeInfo();
    if (this_present_typeInfo || that_present_typeInfo) {
      if (!(this_present_typeInfo && that_present_typeInfo))
        return false;
      if (!this.typeInfo.equals(that.typeInfo))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_dis = true && this.isSetDis();
    boolean that_present_dis = true && that.isSetDis();
    if (this_present_dis || that_present_dis) {
      if (!(this_present_dis && that_present_dis))
        return false;
      if (this.dis != that.dis)
        return false;
    }

    boolean this_present_starLevel = true && this.isSetStarLevel();
    boolean that_present_starLevel = true && that.isSetStarLevel();
    if (this_present_starLevel || that_present_starLevel) {
      if (!(this_present_starLevel && that_present_starLevel))
        return false;
      if (!this.starLevel.equals(that.starLevel))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_defaultImage = true && (isSetDefaultImage());
    list.add(present_defaultImage);
    if (present_defaultImage)
      list.add(defaultImage);

    boolean present_categoryInfo = true && (isSetCategoryInfo());
    list.add(present_categoryInfo);
    if (present_categoryInfo)
      list.add(categoryInfo);

    boolean present_typeInfo = true && (isSetTypeInfo());
    list.add(present_typeInfo);
    if (present_typeInfo)
      list.add(typeInfo);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_dis = true && (isSetDis());
    list.add(present_dis);
    if (present_dis)
      list.add(dis);

    boolean present_starLevel = true && (isSetStarLevel());
    list.add(present_starLevel);
    if (present_starLevel)
      list.add(starLevel);

    return list.hashCode();
  }

  @Override
  public int compareTo(OutletDetailSimpleVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDefaultImage()).compareTo(other.isSetDefaultImage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultImage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.defaultImage, other.defaultImage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryInfo()).compareTo(other.isSetCategoryInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryInfo, other.categoryInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTypeInfo()).compareTo(other.isSetTypeInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTypeInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.typeInfo, other.typeInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDis()).compareTo(other.isSetDis());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDis()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dis, other.dis);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarLevel()).compareTo(other.isSetStarLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starLevel, other.starLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OutletDetailSimpleVo(");
    boolean first = true;

    if (isSetMerchantId()) {
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetMerchantName()) {
      if (!first) sb.append(", ");
      sb.append("merchantName:");
      if (this.merchantName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantName);
      }
      first = false;
    }
    if (isSetOutletId()) {
      if (!first) sb.append(", ");
      sb.append("outletId:");
      if (this.outletId == null) {
        sb.append("null");
      } else {
        sb.append(this.outletId);
      }
      first = false;
    }
    if (isSetOutletName()) {
      if (!first) sb.append(", ");
      sb.append("outletName:");
      if (this.outletName == null) {
        sb.append("null");
      } else {
        sb.append(this.outletName);
      }
      first = false;
    }
    if (isSetDefaultImage()) {
      if (!first) sb.append(", ");
      sb.append("defaultImage:");
      if (this.defaultImage == null) {
        sb.append("null");
      } else {
        sb.append(this.defaultImage);
      }
      first = false;
    }
    if (isSetCategoryInfo()) {
      if (!first) sb.append(", ");
      sb.append("categoryInfo:");
      if (this.categoryInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.categoryInfo);
      }
      first = false;
    }
    if (isSetTypeInfo()) {
      if (!first) sb.append(", ");
      sb.append("typeInfo:");
      if (this.typeInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.typeInfo);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetDis()) {
      if (!first) sb.append(", ");
      sb.append("dis:");
      sb.append(this.dis);
      first = false;
    }
    if (isSetStarLevel()) {
      if (!first) sb.append(", ");
      sb.append("starLevel:");
      if (this.starLevel == null) {
        sb.append("null");
      } else {
        sb.append(this.starLevel);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OutletDetailSimpleVoStandardSchemeFactory implements SchemeFactory {
    public OutletDetailSimpleVoStandardScheme getScheme() {
      return new OutletDetailSimpleVoStandardScheme();
    }
  }

  private static class OutletDetailSimpleVoStandardScheme extends StandardScheme<OutletDetailSimpleVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OutletDetailSimpleVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DEFAULT_IMAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.defaultImage = iprot.readString();
              struct.setDefaultImageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CATEGORY_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list0.size);
                com.froad.thrift.vo.CategoryInfoVo _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new com.froad.thrift.vo.CategoryInfoVo();
                  _elem1.read(iprot);
                  struct.categoryInfo.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setCategoryInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TYPE_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list3.size);
                com.froad.thrift.vo.TypeInfoVo _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = new com.froad.thrift.vo.TypeInfoVo();
                  _elem4.read(iprot);
                  struct.typeInfo.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setTypeInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DIS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.dis = iprot.readDouble();
              struct.setDisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STAR_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.starLevel = iprot.readString();
              struct.setStarLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OutletDetailSimpleVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantName != null) {
        if (struct.isSetMerchantName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletId != null) {
        if (struct.isSetOutletId()) {
          oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
          oprot.writeString(struct.outletId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletName != null) {
        if (struct.isSetOutletName()) {
          oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
          oprot.writeString(struct.outletName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.defaultImage != null) {
        if (struct.isSetDefaultImage()) {
          oprot.writeFieldBegin(DEFAULT_IMAGE_FIELD_DESC);
          oprot.writeString(struct.defaultImage);
          oprot.writeFieldEnd();
        }
      }
      if (struct.categoryInfo != null) {
        if (struct.isSetCategoryInfo()) {
          oprot.writeFieldBegin(CATEGORY_INFO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.categoryInfo.size()));
            for (com.froad.thrift.vo.CategoryInfoVo _iter6 : struct.categoryInfo)
            {
              _iter6.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.typeInfo != null) {
        if (struct.isSetTypeInfo()) {
          oprot.writeFieldBegin(TYPE_INFO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.typeInfo.size()));
            for (com.froad.thrift.vo.TypeInfoVo _iter7 : struct.typeInfo)
            {
              _iter7.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDis()) {
        oprot.writeFieldBegin(DIS_FIELD_DESC);
        oprot.writeDouble(struct.dis);
        oprot.writeFieldEnd();
      }
      if (struct.starLevel != null) {
        if (struct.isSetStarLevel()) {
          oprot.writeFieldBegin(STAR_LEVEL_FIELD_DESC);
          oprot.writeString(struct.starLevel);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OutletDetailSimpleVoTupleSchemeFactory implements SchemeFactory {
    public OutletDetailSimpleVoTupleScheme getScheme() {
      return new OutletDetailSimpleVoTupleScheme();
    }
  }

  private static class OutletDetailSimpleVoTupleScheme extends TupleScheme<OutletDetailSimpleVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OutletDetailSimpleVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMerchantId()) {
        optionals.set(0);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(1);
      }
      if (struct.isSetOutletId()) {
        optionals.set(2);
      }
      if (struct.isSetOutletName()) {
        optionals.set(3);
      }
      if (struct.isSetDefaultImage()) {
        optionals.set(4);
      }
      if (struct.isSetCategoryInfo()) {
        optionals.set(5);
      }
      if (struct.isSetTypeInfo()) {
        optionals.set(6);
      }
      if (struct.isSetAddress()) {
        optionals.set(7);
      }
      if (struct.isSetDis()) {
        optionals.set(8);
      }
      if (struct.isSetStarLevel()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetDefaultImage()) {
        oprot.writeString(struct.defaultImage);
      }
      if (struct.isSetCategoryInfo()) {
        {
          oprot.writeI32(struct.categoryInfo.size());
          for (com.froad.thrift.vo.CategoryInfoVo _iter8 : struct.categoryInfo)
          {
            _iter8.write(oprot);
          }
        }
      }
      if (struct.isSetTypeInfo()) {
        {
          oprot.writeI32(struct.typeInfo.size());
          for (com.froad.thrift.vo.TypeInfoVo _iter9 : struct.typeInfo)
          {
            _iter9.write(oprot);
          }
        }
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetDis()) {
        oprot.writeDouble(struct.dis);
      }
      if (struct.isSetStarLevel()) {
        oprot.writeString(struct.starLevel);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OutletDetailSimpleVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.defaultImage = iprot.readString();
        struct.setDefaultImageIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list10.size);
          com.froad.thrift.vo.CategoryInfoVo _elem11;
          for (int _i12 = 0; _i12 < _list10.size; ++_i12)
          {
            _elem11 = new com.froad.thrift.vo.CategoryInfoVo();
            _elem11.read(iprot);
            struct.categoryInfo.add(_elem11);
          }
        }
        struct.setCategoryInfoIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list13.size);
          com.froad.thrift.vo.TypeInfoVo _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = new com.froad.thrift.vo.TypeInfoVo();
            _elem14.read(iprot);
            struct.typeInfo.add(_elem14);
          }
        }
        struct.setTypeInfoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(8)) {
        struct.dis = iprot.readDouble();
        struct.setDisIsSet(true);
      }
      if (incoming.get(9)) {
        struct.starLevel = iprot.readString();
        struct.setStarLevelIsSet(true);
      }
    }
  }

}

