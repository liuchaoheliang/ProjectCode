/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 账户账户信息Vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MerchantBankWhiteVo implements org.apache.thrift.TBase<MerchantBankWhiteVo, MerchantBankWhiteVo._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantBankWhiteVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantBankWhiteVo");

  private static final org.apache.thrift.protocol.TField MERCHANT_ID_OR_OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantIdOrOutletId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_OR_OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantNameOrOutletName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("accountNo", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("accountName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField OPTION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("optionType", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField MAC_FIELD_DESC = new org.apache.thrift.protocol.TField("mac", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantBankWhiteVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantBankWhiteVoTupleSchemeFactory());
  }

  /**
   * 商户ID、门店ID
   */
  public String merchantIdOrOutletId; // optional
  /**
   * 商户Name、门店Name
   */
  public String merchantNameOrOutletName; // optional
  /**
   * 商户账号
   */
  public String accountNo; // optional
  /**
   * 客户端ID
   */
  public String clientId; // optional
  /**
   * 账户名
   */
  public String accountName; // optional
  /**
   * 操作类型
   */
  public String optionType; // optional
  /**
   * mac值
   */
  public String mac; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商户ID、门店ID
     */
    MERCHANT_ID_OR_OUTLET_ID((short)1, "merchantIdOrOutletId"),
    /**
     * 商户Name、门店Name
     */
    MERCHANT_NAME_OR_OUTLET_NAME((short)2, "merchantNameOrOutletName"),
    /**
     * 商户账号
     */
    ACCOUNT_NO((short)3, "accountNo"),
    /**
     * 客户端ID
     */
    CLIENT_ID((short)4, "clientId"),
    /**
     * 账户名
     */
    ACCOUNT_NAME((short)5, "accountName"),
    /**
     * 操作类型
     */
    OPTION_TYPE((short)6, "optionType"),
    /**
     * mac值
     */
    MAC((short)7, "mac");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MERCHANT_ID_OR_OUTLET_ID
          return MERCHANT_ID_OR_OUTLET_ID;
        case 2: // MERCHANT_NAME_OR_OUTLET_NAME
          return MERCHANT_NAME_OR_OUTLET_NAME;
        case 3: // ACCOUNT_NO
          return ACCOUNT_NO;
        case 4: // CLIENT_ID
          return CLIENT_ID;
        case 5: // ACCOUNT_NAME
          return ACCOUNT_NAME;
        case 6: // OPTION_TYPE
          return OPTION_TYPE;
        case 7: // MAC
          return MAC;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.MERCHANT_ID_OR_OUTLET_ID,_Fields.MERCHANT_NAME_OR_OUTLET_NAME,_Fields.ACCOUNT_NO,_Fields.CLIENT_ID,_Fields.ACCOUNT_NAME,_Fields.OPTION_TYPE,_Fields.MAC};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MERCHANT_ID_OR_OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantIdOrOutletId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME_OR_OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantNameOrOutletName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_NO, new org.apache.thrift.meta_data.FieldMetaData("accountNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_NAME, new org.apache.thrift.meta_data.FieldMetaData("accountName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPTION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("optionType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAC, new org.apache.thrift.meta_data.FieldMetaData("mac", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantBankWhiteVo.class, metaDataMap);
  }

  public MerchantBankWhiteVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantBankWhiteVo(MerchantBankWhiteVo other) {
    if (other.isSetMerchantIdOrOutletId()) {
      this.merchantIdOrOutletId = other.merchantIdOrOutletId;
    }
    if (other.isSetMerchantNameOrOutletName()) {
      this.merchantNameOrOutletName = other.merchantNameOrOutletName;
    }
    if (other.isSetAccountNo()) {
      this.accountNo = other.accountNo;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetAccountName()) {
      this.accountName = other.accountName;
    }
    if (other.isSetOptionType()) {
      this.optionType = other.optionType;
    }
    if (other.isSetMac()) {
      this.mac = other.mac;
    }
  }

  public MerchantBankWhiteVo deepCopy() {
    return new MerchantBankWhiteVo(this);
  }

  @Override
  public void clear() {
    this.merchantIdOrOutletId = null;
    this.merchantNameOrOutletName = null;
    this.accountNo = null;
    this.clientId = null;
    this.accountName = null;
    this.optionType = null;
    this.mac = null;
  }

  /**
   * 商户ID、门店ID
   */
  public String getMerchantIdOrOutletId() {
    return this.merchantIdOrOutletId;
  }

  /**
   * 商户ID、门店ID
   */
  public MerchantBankWhiteVo setMerchantIdOrOutletId(String merchantIdOrOutletId) {
    this.merchantIdOrOutletId = merchantIdOrOutletId;
    return this;
  }

  public void unsetMerchantIdOrOutletId() {
    this.merchantIdOrOutletId = null;
  }

  /** Returns true if field merchantIdOrOutletId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantIdOrOutletId() {
    return this.merchantIdOrOutletId != null;
  }

  public void setMerchantIdOrOutletIdIsSet(boolean value) {
    if (!value) {
      this.merchantIdOrOutletId = null;
    }
  }

  /**
   * 商户Name、门店Name
   */
  public String getMerchantNameOrOutletName() {
    return this.merchantNameOrOutletName;
  }

  /**
   * 商户Name、门店Name
   */
  public MerchantBankWhiteVo setMerchantNameOrOutletName(String merchantNameOrOutletName) {
    this.merchantNameOrOutletName = merchantNameOrOutletName;
    return this;
  }

  public void unsetMerchantNameOrOutletName() {
    this.merchantNameOrOutletName = null;
  }

  /** Returns true if field merchantNameOrOutletName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantNameOrOutletName() {
    return this.merchantNameOrOutletName != null;
  }

  public void setMerchantNameOrOutletNameIsSet(boolean value) {
    if (!value) {
      this.merchantNameOrOutletName = null;
    }
  }

  /**
   * 商户账号
   */
  public String getAccountNo() {
    return this.accountNo;
  }

  /**
   * 商户账号
   */
  public MerchantBankWhiteVo setAccountNo(String accountNo) {
    this.accountNo = accountNo;
    return this;
  }

  public void unsetAccountNo() {
    this.accountNo = null;
  }

  /** Returns true if field accountNo is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountNo() {
    return this.accountNo != null;
  }

  public void setAccountNoIsSet(boolean value) {
    if (!value) {
      this.accountNo = null;
    }
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public MerchantBankWhiteVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 账户名
   */
  public String getAccountName() {
    return this.accountName;
  }

  /**
   * 账户名
   */
  public MerchantBankWhiteVo setAccountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

  public void unsetAccountName() {
    this.accountName = null;
  }

  /** Returns true if field accountName is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountName() {
    return this.accountName != null;
  }

  public void setAccountNameIsSet(boolean value) {
    if (!value) {
      this.accountName = null;
    }
  }

  /**
   * 操作类型
   */
  public String getOptionType() {
    return this.optionType;
  }

  /**
   * 操作类型
   */
  public MerchantBankWhiteVo setOptionType(String optionType) {
    this.optionType = optionType;
    return this;
  }

  public void unsetOptionType() {
    this.optionType = null;
  }

  /** Returns true if field optionType is set (has been assigned a value) and false otherwise */
  public boolean isSetOptionType() {
    return this.optionType != null;
  }

  public void setOptionTypeIsSet(boolean value) {
    if (!value) {
      this.optionType = null;
    }
  }

  /**
   * mac值
   */
  public String getMac() {
    return this.mac;
  }

  /**
   * mac值
   */
  public MerchantBankWhiteVo setMac(String mac) {
    this.mac = mac;
    return this;
  }

  public void unsetMac() {
    this.mac = null;
  }

  /** Returns true if field mac is set (has been assigned a value) and false otherwise */
  public boolean isSetMac() {
    return this.mac != null;
  }

  public void setMacIsSet(boolean value) {
    if (!value) {
      this.mac = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MERCHANT_ID_OR_OUTLET_ID:
      if (value == null) {
        unsetMerchantIdOrOutletId();
      } else {
        setMerchantIdOrOutletId((String)value);
      }
      break;

    case MERCHANT_NAME_OR_OUTLET_NAME:
      if (value == null) {
        unsetMerchantNameOrOutletName();
      } else {
        setMerchantNameOrOutletName((String)value);
      }
      break;

    case ACCOUNT_NO:
      if (value == null) {
        unsetAccountNo();
      } else {
        setAccountNo((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case ACCOUNT_NAME:
      if (value == null) {
        unsetAccountName();
      } else {
        setAccountName((String)value);
      }
      break;

    case OPTION_TYPE:
      if (value == null) {
        unsetOptionType();
      } else {
        setOptionType((String)value);
      }
      break;

    case MAC:
      if (value == null) {
        unsetMac();
      } else {
        setMac((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MERCHANT_ID_OR_OUTLET_ID:
      return getMerchantIdOrOutletId();

    case MERCHANT_NAME_OR_OUTLET_NAME:
      return getMerchantNameOrOutletName();

    case ACCOUNT_NO:
      return getAccountNo();

    case CLIENT_ID:
      return getClientId();

    case ACCOUNT_NAME:
      return getAccountName();

    case OPTION_TYPE:
      return getOptionType();

    case MAC:
      return getMac();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MERCHANT_ID_OR_OUTLET_ID:
      return isSetMerchantIdOrOutletId();
    case MERCHANT_NAME_OR_OUTLET_NAME:
      return isSetMerchantNameOrOutletName();
    case ACCOUNT_NO:
      return isSetAccountNo();
    case CLIENT_ID:
      return isSetClientId();
    case ACCOUNT_NAME:
      return isSetAccountName();
    case OPTION_TYPE:
      return isSetOptionType();
    case MAC:
      return isSetMac();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantBankWhiteVo)
      return this.equals((MerchantBankWhiteVo)that);
    return false;
  }

  public boolean equals(MerchantBankWhiteVo that) {
    if (that == null)
      return false;

    boolean this_present_merchantIdOrOutletId = true && this.isSetMerchantIdOrOutletId();
    boolean that_present_merchantIdOrOutletId = true && that.isSetMerchantIdOrOutletId();
    if (this_present_merchantIdOrOutletId || that_present_merchantIdOrOutletId) {
      if (!(this_present_merchantIdOrOutletId && that_present_merchantIdOrOutletId))
        return false;
      if (!this.merchantIdOrOutletId.equals(that.merchantIdOrOutletId))
        return false;
    }

    boolean this_present_merchantNameOrOutletName = true && this.isSetMerchantNameOrOutletName();
    boolean that_present_merchantNameOrOutletName = true && that.isSetMerchantNameOrOutletName();
    if (this_present_merchantNameOrOutletName || that_present_merchantNameOrOutletName) {
      if (!(this_present_merchantNameOrOutletName && that_present_merchantNameOrOutletName))
        return false;
      if (!this.merchantNameOrOutletName.equals(that.merchantNameOrOutletName))
        return false;
    }

    boolean this_present_accountNo = true && this.isSetAccountNo();
    boolean that_present_accountNo = true && that.isSetAccountNo();
    if (this_present_accountNo || that_present_accountNo) {
      if (!(this_present_accountNo && that_present_accountNo))
        return false;
      if (!this.accountNo.equals(that.accountNo))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_accountName = true && this.isSetAccountName();
    boolean that_present_accountName = true && that.isSetAccountName();
    if (this_present_accountName || that_present_accountName) {
      if (!(this_present_accountName && that_present_accountName))
        return false;
      if (!this.accountName.equals(that.accountName))
        return false;
    }

    boolean this_present_optionType = true && this.isSetOptionType();
    boolean that_present_optionType = true && that.isSetOptionType();
    if (this_present_optionType || that_present_optionType) {
      if (!(this_present_optionType && that_present_optionType))
        return false;
      if (!this.optionType.equals(that.optionType))
        return false;
    }

    boolean this_present_mac = true && this.isSetMac();
    boolean that_present_mac = true && that.isSetMac();
    if (this_present_mac || that_present_mac) {
      if (!(this_present_mac && that_present_mac))
        return false;
      if (!this.mac.equals(that.mac))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_merchantIdOrOutletId = true && (isSetMerchantIdOrOutletId());
    list.add(present_merchantIdOrOutletId);
    if (present_merchantIdOrOutletId)
      list.add(merchantIdOrOutletId);

    boolean present_merchantNameOrOutletName = true && (isSetMerchantNameOrOutletName());
    list.add(present_merchantNameOrOutletName);
    if (present_merchantNameOrOutletName)
      list.add(merchantNameOrOutletName);

    boolean present_accountNo = true && (isSetAccountNo());
    list.add(present_accountNo);
    if (present_accountNo)
      list.add(accountNo);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_accountName = true && (isSetAccountName());
    list.add(present_accountName);
    if (present_accountName)
      list.add(accountName);

    boolean present_optionType = true && (isSetOptionType());
    list.add(present_optionType);
    if (present_optionType)
      list.add(optionType);

    boolean present_mac = true && (isSetMac());
    list.add(present_mac);
    if (present_mac)
      list.add(mac);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantBankWhiteVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMerchantIdOrOutletId()).compareTo(other.isSetMerchantIdOrOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantIdOrOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantIdOrOutletId, other.merchantIdOrOutletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantNameOrOutletName()).compareTo(other.isSetMerchantNameOrOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantNameOrOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantNameOrOutletName, other.merchantNameOrOutletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountNo()).compareTo(other.isSetAccountNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountNo, other.accountNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountName()).compareTo(other.isSetAccountName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountName, other.accountName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOptionType()).compareTo(other.isSetOptionType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOptionType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.optionType, other.optionType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMac()).compareTo(other.isSetMac());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMac()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mac, other.mac);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantBankWhiteVo(");
    boolean first = true;

    if (isSetMerchantIdOrOutletId()) {
      sb.append("merchantIdOrOutletId:");
      if (this.merchantIdOrOutletId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantIdOrOutletId);
      }
      first = false;
    }
    if (isSetMerchantNameOrOutletName()) {
      if (!first) sb.append(", ");
      sb.append("merchantNameOrOutletName:");
      if (this.merchantNameOrOutletName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantNameOrOutletName);
      }
      first = false;
    }
    if (isSetAccountNo()) {
      if (!first) sb.append(", ");
      sb.append("accountNo:");
      if (this.accountNo == null) {
        sb.append("null");
      } else {
        sb.append(this.accountNo);
      }
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetAccountName()) {
      if (!first) sb.append(", ");
      sb.append("accountName:");
      if (this.accountName == null) {
        sb.append("null");
      } else {
        sb.append(this.accountName);
      }
      first = false;
    }
    if (isSetOptionType()) {
      if (!first) sb.append(", ");
      sb.append("optionType:");
      if (this.optionType == null) {
        sb.append("null");
      } else {
        sb.append(this.optionType);
      }
      first = false;
    }
    if (isSetMac()) {
      if (!first) sb.append(", ");
      sb.append("mac:");
      if (this.mac == null) {
        sb.append("null");
      } else {
        sb.append(this.mac);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantBankWhiteVoStandardSchemeFactory implements SchemeFactory {
    public MerchantBankWhiteVoStandardScheme getScheme() {
      return new MerchantBankWhiteVoStandardScheme();
    }
  }

  private static class MerchantBankWhiteVoStandardScheme extends StandardScheme<MerchantBankWhiteVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantBankWhiteVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MERCHANT_ID_OR_OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantIdOrOutletId = iprot.readString();
              struct.setMerchantIdOrOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MERCHANT_NAME_OR_OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantNameOrOutletName = iprot.readString();
              struct.setMerchantNameOrOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACCOUNT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountNo = iprot.readString();
              struct.setAccountNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ACCOUNT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountName = iprot.readString();
              struct.setAccountNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OPTION_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.optionType = iprot.readString();
              struct.setOptionTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MAC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mac = iprot.readString();
              struct.setMacIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantBankWhiteVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.merchantIdOrOutletId != null) {
        if (struct.isSetMerchantIdOrOutletId()) {
          oprot.writeFieldBegin(MERCHANT_ID_OR_OUTLET_ID_FIELD_DESC);
          oprot.writeString(struct.merchantIdOrOutletId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantNameOrOutletName != null) {
        if (struct.isSetMerchantNameOrOutletName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_OR_OUTLET_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantNameOrOutletName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountNo != null) {
        if (struct.isSetAccountNo()) {
          oprot.writeFieldBegin(ACCOUNT_NO_FIELD_DESC);
          oprot.writeString(struct.accountNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountName != null) {
        if (struct.isSetAccountName()) {
          oprot.writeFieldBegin(ACCOUNT_NAME_FIELD_DESC);
          oprot.writeString(struct.accountName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.optionType != null) {
        if (struct.isSetOptionType()) {
          oprot.writeFieldBegin(OPTION_TYPE_FIELD_DESC);
          oprot.writeString(struct.optionType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mac != null) {
        if (struct.isSetMac()) {
          oprot.writeFieldBegin(MAC_FIELD_DESC);
          oprot.writeString(struct.mac);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantBankWhiteVoTupleSchemeFactory implements SchemeFactory {
    public MerchantBankWhiteVoTupleScheme getScheme() {
      return new MerchantBankWhiteVoTupleScheme();
    }
  }

  private static class MerchantBankWhiteVoTupleScheme extends TupleScheme<MerchantBankWhiteVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantBankWhiteVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMerchantIdOrOutletId()) {
        optionals.set(0);
      }
      if (struct.isSetMerchantNameOrOutletName()) {
        optionals.set(1);
      }
      if (struct.isSetAccountNo()) {
        optionals.set(2);
      }
      if (struct.isSetClientId()) {
        optionals.set(3);
      }
      if (struct.isSetAccountName()) {
        optionals.set(4);
      }
      if (struct.isSetOptionType()) {
        optionals.set(5);
      }
      if (struct.isSetMac()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetMerchantIdOrOutletId()) {
        oprot.writeString(struct.merchantIdOrOutletId);
      }
      if (struct.isSetMerchantNameOrOutletName()) {
        oprot.writeString(struct.merchantNameOrOutletName);
      }
      if (struct.isSetAccountNo()) {
        oprot.writeString(struct.accountNo);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetAccountName()) {
        oprot.writeString(struct.accountName);
      }
      if (struct.isSetOptionType()) {
        oprot.writeString(struct.optionType);
      }
      if (struct.isSetMac()) {
        oprot.writeString(struct.mac);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantBankWhiteVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.merchantIdOrOutletId = iprot.readString();
        struct.setMerchantIdOrOutletIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.merchantNameOrOutletName = iprot.readString();
        struct.setMerchantNameOrOutletNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.accountNo = iprot.readString();
        struct.setAccountNoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.accountName = iprot.readString();
        struct.setAccountNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.optionType = iprot.readString();
        struct.setOptionTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.mac = iprot.readString();
        struct.setMacIsSet(true);
      }
    }
  }

}

