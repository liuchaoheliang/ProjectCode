/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.coremodule;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 报表基础返回信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ReportBaseRespVo implements org.apache.thrift.TBase<ReportBaseRespVo, ReportBaseRespVo._Fields>, java.io.Serializable, Cloneable, Comparable<ReportBaseRespVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReportBaseRespVo");

  private static final org.apache.thrift.protocol.TField DAY_FIELD_DESC = new org.apache.thrift.protocol.TField("day", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField WEEK_FIELD_DESC = new org.apache.thrift.protocol.TField("week", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MONTH_FIELD_DESC = new org.apache.thrift.protocol.TField("month", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField YEAR_FIELD_DESC = new org.apache.thrift.protocol.TField("year", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PLATFORM_FIELD_DESC = new org.apache.thrift.protocol.TField("platform", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField PROVINCE_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("provinceOrgCode", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CITY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("cityOrgCode", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField COUNTY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("countyOrgCode", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField VILLAGE_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("villageOrgCode", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField MERCHANT_CATEGORY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantCategoryId", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField MERCHANT_CATEGORY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantCategoryName", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField ORDER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderType", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField ORDER_TYPE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orderTypeName", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField PAY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("payType", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField PAY_TYPE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("payTypeName", org.apache.thrift.protocol.TType.STRING, (short)20);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ReportBaseRespVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ReportBaseRespVoTupleSchemeFactory());
  }

  /**
   * 维度天*
   */
  public String day; // optional
  /**
   * 维度周*
   */
  public String week; // optional
  /**
   * 维度月*
   */
  public String month; // optional
  /**
   * 维度年*
   */
  public String year; // optional
  /**
   * 银行*
   */
  public String clientId; // optional
  /**
   * 业务平台*
   */
  public String platform; // optional
  /**
   * 所属机构*
   */
  public String orgCode; // optional
  /**
   * 所属机构名称*
   */
  public String orgName; // optional
  /**
   * 1级机构*
   */
  public String provinceOrgCode; // optional
  /**
   * 2级机构*
   */
  public String cityOrgCode; // optional
  /**
   * 3级机构*
   */
  public String countyOrgCode; // optional
  /**
   * 4级机构*
   */
  public String villageOrgCode; // optional
  /**
   * 商户ID*
   */
  public String merchantId; // optional
  /**
   * 商户名称*
   */
  public String merchantName; // optional
  /**
   * 商户类目*
   */
  public String merchantCategoryId; // optional
  /**
   * 商户类目名称*
   */
  public String merchantCategoryName; // optional
  /**
   * 业务类型*
   */
  public String orderType; // optional
  /**
   * 业务类型名称*
   */
  public String orderTypeName; // optional
  /**
   * 支付方式*
   */
  public String payType; // optional
  /**
   * 支付方式名称*
   */
  public String payTypeName; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 维度天*
     */
    DAY((short)1, "day"),
    /**
     * 维度周*
     */
    WEEK((short)2, "week"),
    /**
     * 维度月*
     */
    MONTH((short)3, "month"),
    /**
     * 维度年*
     */
    YEAR((short)4, "year"),
    /**
     * 银行*
     */
    CLIENT_ID((short)5, "clientId"),
    /**
     * 业务平台*
     */
    PLATFORM((short)6, "platform"),
    /**
     * 所属机构*
     */
    ORG_CODE((short)7, "orgCode"),
    /**
     * 所属机构名称*
     */
    ORG_NAME((short)8, "orgName"),
    /**
     * 1级机构*
     */
    PROVINCE_ORG_CODE((short)9, "provinceOrgCode"),
    /**
     * 2级机构*
     */
    CITY_ORG_CODE((short)10, "cityOrgCode"),
    /**
     * 3级机构*
     */
    COUNTY_ORG_CODE((short)11, "countyOrgCode"),
    /**
     * 4级机构*
     */
    VILLAGE_ORG_CODE((short)12, "villageOrgCode"),
    /**
     * 商户ID*
     */
    MERCHANT_ID((short)13, "merchantId"),
    /**
     * 商户名称*
     */
    MERCHANT_NAME((short)14, "merchantName"),
    /**
     * 商户类目*
     */
    MERCHANT_CATEGORY_ID((short)15, "merchantCategoryId"),
    /**
     * 商户类目名称*
     */
    MERCHANT_CATEGORY_NAME((short)16, "merchantCategoryName"),
    /**
     * 业务类型*
     */
    ORDER_TYPE((short)17, "orderType"),
    /**
     * 业务类型名称*
     */
    ORDER_TYPE_NAME((short)18, "orderTypeName"),
    /**
     * 支付方式*
     */
    PAY_TYPE((short)19, "payType"),
    /**
     * 支付方式名称*
     */
    PAY_TYPE_NAME((short)20, "payTypeName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DAY
          return DAY;
        case 2: // WEEK
          return WEEK;
        case 3: // MONTH
          return MONTH;
        case 4: // YEAR
          return YEAR;
        case 5: // CLIENT_ID
          return CLIENT_ID;
        case 6: // PLATFORM
          return PLATFORM;
        case 7: // ORG_CODE
          return ORG_CODE;
        case 8: // ORG_NAME
          return ORG_NAME;
        case 9: // PROVINCE_ORG_CODE
          return PROVINCE_ORG_CODE;
        case 10: // CITY_ORG_CODE
          return CITY_ORG_CODE;
        case 11: // COUNTY_ORG_CODE
          return COUNTY_ORG_CODE;
        case 12: // VILLAGE_ORG_CODE
          return VILLAGE_ORG_CODE;
        case 13: // MERCHANT_ID
          return MERCHANT_ID;
        case 14: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 15: // MERCHANT_CATEGORY_ID
          return MERCHANT_CATEGORY_ID;
        case 16: // MERCHANT_CATEGORY_NAME
          return MERCHANT_CATEGORY_NAME;
        case 17: // ORDER_TYPE
          return ORDER_TYPE;
        case 18: // ORDER_TYPE_NAME
          return ORDER_TYPE_NAME;
        case 19: // PAY_TYPE
          return PAY_TYPE;
        case 20: // PAY_TYPE_NAME
          return PAY_TYPE_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.DAY,_Fields.WEEK,_Fields.MONTH,_Fields.YEAR,_Fields.CLIENT_ID,_Fields.PLATFORM,_Fields.ORG_CODE,_Fields.ORG_NAME,_Fields.PROVINCE_ORG_CODE,_Fields.CITY_ORG_CODE,_Fields.COUNTY_ORG_CODE,_Fields.VILLAGE_ORG_CODE,_Fields.MERCHANT_ID,_Fields.MERCHANT_NAME,_Fields.MERCHANT_CATEGORY_ID,_Fields.MERCHANT_CATEGORY_NAME,_Fields.ORDER_TYPE,_Fields.ORDER_TYPE_NAME,_Fields.PAY_TYPE,_Fields.PAY_TYPE_NAME};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DAY, new org.apache.thrift.meta_data.FieldMetaData("day", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEEK, new org.apache.thrift.meta_data.FieldMetaData("week", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MONTH, new org.apache.thrift.meta_data.FieldMetaData("month", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.YEAR, new org.apache.thrift.meta_data.FieldMetaData("year", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLATFORM, new org.apache.thrift.meta_data.FieldMetaData("platform", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROVINCE_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("provinceOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("cityOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNTY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("countyOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VILLAGE_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("villageOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_CATEGORY_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantCategoryId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_CATEGORY_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantCategoryName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("orderType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_TYPE_NAME, new org.apache.thrift.meta_data.FieldMetaData("orderTypeName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("payType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAY_TYPE_NAME, new org.apache.thrift.meta_data.FieldMetaData("payTypeName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReportBaseRespVo.class, metaDataMap);
  }

  public ReportBaseRespVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReportBaseRespVo(ReportBaseRespVo other) {
    if (other.isSetDay()) {
      this.day = other.day;
    }
    if (other.isSetWeek()) {
      this.week = other.week;
    }
    if (other.isSetMonth()) {
      this.month = other.month;
    }
    if (other.isSetYear()) {
      this.year = other.year;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetPlatform()) {
      this.platform = other.platform;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetProvinceOrgCode()) {
      this.provinceOrgCode = other.provinceOrgCode;
    }
    if (other.isSetCityOrgCode()) {
      this.cityOrgCode = other.cityOrgCode;
    }
    if (other.isSetCountyOrgCode()) {
      this.countyOrgCode = other.countyOrgCode;
    }
    if (other.isSetVillageOrgCode()) {
      this.villageOrgCode = other.villageOrgCode;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetMerchantCategoryId()) {
      this.merchantCategoryId = other.merchantCategoryId;
    }
    if (other.isSetMerchantCategoryName()) {
      this.merchantCategoryName = other.merchantCategoryName;
    }
    if (other.isSetOrderType()) {
      this.orderType = other.orderType;
    }
    if (other.isSetOrderTypeName()) {
      this.orderTypeName = other.orderTypeName;
    }
    if (other.isSetPayType()) {
      this.payType = other.payType;
    }
    if (other.isSetPayTypeName()) {
      this.payTypeName = other.payTypeName;
    }
  }

  public ReportBaseRespVo deepCopy() {
    return new ReportBaseRespVo(this);
  }

  @Override
  public void clear() {
    this.day = null;
    this.week = null;
    this.month = null;
    this.year = null;
    this.clientId = null;
    this.platform = null;
    this.orgCode = null;
    this.orgName = null;
    this.provinceOrgCode = null;
    this.cityOrgCode = null;
    this.countyOrgCode = null;
    this.villageOrgCode = null;
    this.merchantId = null;
    this.merchantName = null;
    this.merchantCategoryId = null;
    this.merchantCategoryName = null;
    this.orderType = null;
    this.orderTypeName = null;
    this.payType = null;
    this.payTypeName = null;
  }

  /**
   * 维度天*
   */
  public String getDay() {
    return this.day;
  }

  /**
   * 维度天*
   */
  public ReportBaseRespVo setDay(String day) {
    this.day = day;
    return this;
  }

  public void unsetDay() {
    this.day = null;
  }

  /** Returns true if field day is set (has been assigned a value) and false otherwise */
  public boolean isSetDay() {
    return this.day != null;
  }

  public void setDayIsSet(boolean value) {
    if (!value) {
      this.day = null;
    }
  }

  /**
   * 维度周*
   */
  public String getWeek() {
    return this.week;
  }

  /**
   * 维度周*
   */
  public ReportBaseRespVo setWeek(String week) {
    this.week = week;
    return this;
  }

  public void unsetWeek() {
    this.week = null;
  }

  /** Returns true if field week is set (has been assigned a value) and false otherwise */
  public boolean isSetWeek() {
    return this.week != null;
  }

  public void setWeekIsSet(boolean value) {
    if (!value) {
      this.week = null;
    }
  }

  /**
   * 维度月*
   */
  public String getMonth() {
    return this.month;
  }

  /**
   * 维度月*
   */
  public ReportBaseRespVo setMonth(String month) {
    this.month = month;
    return this;
  }

  public void unsetMonth() {
    this.month = null;
  }

  /** Returns true if field month is set (has been assigned a value) and false otherwise */
  public boolean isSetMonth() {
    return this.month != null;
  }

  public void setMonthIsSet(boolean value) {
    if (!value) {
      this.month = null;
    }
  }

  /**
   * 维度年*
   */
  public String getYear() {
    return this.year;
  }

  /**
   * 维度年*
   */
  public ReportBaseRespVo setYear(String year) {
    this.year = year;
    return this;
  }

  public void unsetYear() {
    this.year = null;
  }

  /** Returns true if field year is set (has been assigned a value) and false otherwise */
  public boolean isSetYear() {
    return this.year != null;
  }

  public void setYearIsSet(boolean value) {
    if (!value) {
      this.year = null;
    }
  }

  /**
   * 银行*
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 银行*
   */
  public ReportBaseRespVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 业务平台*
   */
  public String getPlatform() {
    return this.platform;
  }

  /**
   * 业务平台*
   */
  public ReportBaseRespVo setPlatform(String platform) {
    this.platform = platform;
    return this;
  }

  public void unsetPlatform() {
    this.platform = null;
  }

  /** Returns true if field platform is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatform() {
    return this.platform != null;
  }

  public void setPlatformIsSet(boolean value) {
    if (!value) {
      this.platform = null;
    }
  }

  /**
   * 所属机构*
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 所属机构*
   */
  public ReportBaseRespVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 所属机构名称*
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 所属机构名称*
   */
  public ReportBaseRespVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 1级机构*
   */
  public String getProvinceOrgCode() {
    return this.provinceOrgCode;
  }

  /**
   * 1级机构*
   */
  public ReportBaseRespVo setProvinceOrgCode(String provinceOrgCode) {
    this.provinceOrgCode = provinceOrgCode;
    return this;
  }

  public void unsetProvinceOrgCode() {
    this.provinceOrgCode = null;
  }

  /** Returns true if field provinceOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetProvinceOrgCode() {
    return this.provinceOrgCode != null;
  }

  public void setProvinceOrgCodeIsSet(boolean value) {
    if (!value) {
      this.provinceOrgCode = null;
    }
  }

  /**
   * 2级机构*
   */
  public String getCityOrgCode() {
    return this.cityOrgCode;
  }

  /**
   * 2级机构*
   */
  public ReportBaseRespVo setCityOrgCode(String cityOrgCode) {
    this.cityOrgCode = cityOrgCode;
    return this;
  }

  public void unsetCityOrgCode() {
    this.cityOrgCode = null;
  }

  /** Returns true if field cityOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCityOrgCode() {
    return this.cityOrgCode != null;
  }

  public void setCityOrgCodeIsSet(boolean value) {
    if (!value) {
      this.cityOrgCode = null;
    }
  }

  /**
   * 3级机构*
   */
  public String getCountyOrgCode() {
    return this.countyOrgCode;
  }

  /**
   * 3级机构*
   */
  public ReportBaseRespVo setCountyOrgCode(String countyOrgCode) {
    this.countyOrgCode = countyOrgCode;
    return this;
  }

  public void unsetCountyOrgCode() {
    this.countyOrgCode = null;
  }

  /** Returns true if field countyOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCountyOrgCode() {
    return this.countyOrgCode != null;
  }

  public void setCountyOrgCodeIsSet(boolean value) {
    if (!value) {
      this.countyOrgCode = null;
    }
  }

  /**
   * 4级机构*
   */
  public String getVillageOrgCode() {
    return this.villageOrgCode;
  }

  /**
   * 4级机构*
   */
  public ReportBaseRespVo setVillageOrgCode(String villageOrgCode) {
    this.villageOrgCode = villageOrgCode;
    return this;
  }

  public void unsetVillageOrgCode() {
    this.villageOrgCode = null;
  }

  /** Returns true if field villageOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetVillageOrgCode() {
    return this.villageOrgCode != null;
  }

  public void setVillageOrgCodeIsSet(boolean value) {
    if (!value) {
      this.villageOrgCode = null;
    }
  }

  /**
   * 商户ID*
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID*
   */
  public ReportBaseRespVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 商户名称*
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称*
   */
  public ReportBaseRespVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 商户类目*
   */
  public String getMerchantCategoryId() {
    return this.merchantCategoryId;
  }

  /**
   * 商户类目*
   */
  public ReportBaseRespVo setMerchantCategoryId(String merchantCategoryId) {
    this.merchantCategoryId = merchantCategoryId;
    return this;
  }

  public void unsetMerchantCategoryId() {
    this.merchantCategoryId = null;
  }

  /** Returns true if field merchantCategoryId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantCategoryId() {
    return this.merchantCategoryId != null;
  }

  public void setMerchantCategoryIdIsSet(boolean value) {
    if (!value) {
      this.merchantCategoryId = null;
    }
  }

  /**
   * 商户类目名称*
   */
  public String getMerchantCategoryName() {
    return this.merchantCategoryName;
  }

  /**
   * 商户类目名称*
   */
  public ReportBaseRespVo setMerchantCategoryName(String merchantCategoryName) {
    this.merchantCategoryName = merchantCategoryName;
    return this;
  }

  public void unsetMerchantCategoryName() {
    this.merchantCategoryName = null;
  }

  /** Returns true if field merchantCategoryName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantCategoryName() {
    return this.merchantCategoryName != null;
  }

  public void setMerchantCategoryNameIsSet(boolean value) {
    if (!value) {
      this.merchantCategoryName = null;
    }
  }

  /**
   * 业务类型*
   */
  public String getOrderType() {
    return this.orderType;
  }

  /**
   * 业务类型*
   */
  public ReportBaseRespVo setOrderType(String orderType) {
    this.orderType = orderType;
    return this;
  }

  public void unsetOrderType() {
    this.orderType = null;
  }

  /** Returns true if field orderType is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderType() {
    return this.orderType != null;
  }

  public void setOrderTypeIsSet(boolean value) {
    if (!value) {
      this.orderType = null;
    }
  }

  /**
   * 业务类型名称*
   */
  public String getOrderTypeName() {
    return this.orderTypeName;
  }

  /**
   * 业务类型名称*
   */
  public ReportBaseRespVo setOrderTypeName(String orderTypeName) {
    this.orderTypeName = orderTypeName;
    return this;
  }

  public void unsetOrderTypeName() {
    this.orderTypeName = null;
  }

  /** Returns true if field orderTypeName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderTypeName() {
    return this.orderTypeName != null;
  }

  public void setOrderTypeNameIsSet(boolean value) {
    if (!value) {
      this.orderTypeName = null;
    }
  }

  /**
   * 支付方式*
   */
  public String getPayType() {
    return this.payType;
  }

  /**
   * 支付方式*
   */
  public ReportBaseRespVo setPayType(String payType) {
    this.payType = payType;
    return this;
  }

  public void unsetPayType() {
    this.payType = null;
  }

  /** Returns true if field payType is set (has been assigned a value) and false otherwise */
  public boolean isSetPayType() {
    return this.payType != null;
  }

  public void setPayTypeIsSet(boolean value) {
    if (!value) {
      this.payType = null;
    }
  }

  /**
   * 支付方式名称*
   */
  public String getPayTypeName() {
    return this.payTypeName;
  }

  /**
   * 支付方式名称*
   */
  public ReportBaseRespVo setPayTypeName(String payTypeName) {
    this.payTypeName = payTypeName;
    return this;
  }

  public void unsetPayTypeName() {
    this.payTypeName = null;
  }

  /** Returns true if field payTypeName is set (has been assigned a value) and false otherwise */
  public boolean isSetPayTypeName() {
    return this.payTypeName != null;
  }

  public void setPayTypeNameIsSet(boolean value) {
    if (!value) {
      this.payTypeName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case DAY:
      if (value == null) {
        unsetDay();
      } else {
        setDay((String)value);
      }
      break;

    case WEEK:
      if (value == null) {
        unsetWeek();
      } else {
        setWeek((String)value);
      }
      break;

    case MONTH:
      if (value == null) {
        unsetMonth();
      } else {
        setMonth((String)value);
      }
      break;

    case YEAR:
      if (value == null) {
        unsetYear();
      } else {
        setYear((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case PLATFORM:
      if (value == null) {
        unsetPlatform();
      } else {
        setPlatform((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case PROVINCE_ORG_CODE:
      if (value == null) {
        unsetProvinceOrgCode();
      } else {
        setProvinceOrgCode((String)value);
      }
      break;

    case CITY_ORG_CODE:
      if (value == null) {
        unsetCityOrgCode();
      } else {
        setCityOrgCode((String)value);
      }
      break;

    case COUNTY_ORG_CODE:
      if (value == null) {
        unsetCountyOrgCode();
      } else {
        setCountyOrgCode((String)value);
      }
      break;

    case VILLAGE_ORG_CODE:
      if (value == null) {
        unsetVillageOrgCode();
      } else {
        setVillageOrgCode((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case MERCHANT_CATEGORY_ID:
      if (value == null) {
        unsetMerchantCategoryId();
      } else {
        setMerchantCategoryId((String)value);
      }
      break;

    case MERCHANT_CATEGORY_NAME:
      if (value == null) {
        unsetMerchantCategoryName();
      } else {
        setMerchantCategoryName((String)value);
      }
      break;

    case ORDER_TYPE:
      if (value == null) {
        unsetOrderType();
      } else {
        setOrderType((String)value);
      }
      break;

    case ORDER_TYPE_NAME:
      if (value == null) {
        unsetOrderTypeName();
      } else {
        setOrderTypeName((String)value);
      }
      break;

    case PAY_TYPE:
      if (value == null) {
        unsetPayType();
      } else {
        setPayType((String)value);
      }
      break;

    case PAY_TYPE_NAME:
      if (value == null) {
        unsetPayTypeName();
      } else {
        setPayTypeName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case DAY:
      return getDay();

    case WEEK:
      return getWeek();

    case MONTH:
      return getMonth();

    case YEAR:
      return getYear();

    case CLIENT_ID:
      return getClientId();

    case PLATFORM:
      return getPlatform();

    case ORG_CODE:
      return getOrgCode();

    case ORG_NAME:
      return getOrgName();

    case PROVINCE_ORG_CODE:
      return getProvinceOrgCode();

    case CITY_ORG_CODE:
      return getCityOrgCode();

    case COUNTY_ORG_CODE:
      return getCountyOrgCode();

    case VILLAGE_ORG_CODE:
      return getVillageOrgCode();

    case MERCHANT_ID:
      return getMerchantId();

    case MERCHANT_NAME:
      return getMerchantName();

    case MERCHANT_CATEGORY_ID:
      return getMerchantCategoryId();

    case MERCHANT_CATEGORY_NAME:
      return getMerchantCategoryName();

    case ORDER_TYPE:
      return getOrderType();

    case ORDER_TYPE_NAME:
      return getOrderTypeName();

    case PAY_TYPE:
      return getPayType();

    case PAY_TYPE_NAME:
      return getPayTypeName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case DAY:
      return isSetDay();
    case WEEK:
      return isSetWeek();
    case MONTH:
      return isSetMonth();
    case YEAR:
      return isSetYear();
    case CLIENT_ID:
      return isSetClientId();
    case PLATFORM:
      return isSetPlatform();
    case ORG_CODE:
      return isSetOrgCode();
    case ORG_NAME:
      return isSetOrgName();
    case PROVINCE_ORG_CODE:
      return isSetProvinceOrgCode();
    case CITY_ORG_CODE:
      return isSetCityOrgCode();
    case COUNTY_ORG_CODE:
      return isSetCountyOrgCode();
    case VILLAGE_ORG_CODE:
      return isSetVillageOrgCode();
    case MERCHANT_ID:
      return isSetMerchantId();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case MERCHANT_CATEGORY_ID:
      return isSetMerchantCategoryId();
    case MERCHANT_CATEGORY_NAME:
      return isSetMerchantCategoryName();
    case ORDER_TYPE:
      return isSetOrderType();
    case ORDER_TYPE_NAME:
      return isSetOrderTypeName();
    case PAY_TYPE:
      return isSetPayType();
    case PAY_TYPE_NAME:
      return isSetPayTypeName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ReportBaseRespVo)
      return this.equals((ReportBaseRespVo)that);
    return false;
  }

  public boolean equals(ReportBaseRespVo that) {
    if (that == null)
      return false;

    boolean this_present_day = true && this.isSetDay();
    boolean that_present_day = true && that.isSetDay();
    if (this_present_day || that_present_day) {
      if (!(this_present_day && that_present_day))
        return false;
      if (!this.day.equals(that.day))
        return false;
    }

    boolean this_present_week = true && this.isSetWeek();
    boolean that_present_week = true && that.isSetWeek();
    if (this_present_week || that_present_week) {
      if (!(this_present_week && that_present_week))
        return false;
      if (!this.week.equals(that.week))
        return false;
    }

    boolean this_present_month = true && this.isSetMonth();
    boolean that_present_month = true && that.isSetMonth();
    if (this_present_month || that_present_month) {
      if (!(this_present_month && that_present_month))
        return false;
      if (!this.month.equals(that.month))
        return false;
    }

    boolean this_present_year = true && this.isSetYear();
    boolean that_present_year = true && that.isSetYear();
    if (this_present_year || that_present_year) {
      if (!(this_present_year && that_present_year))
        return false;
      if (!this.year.equals(that.year))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_platform = true && this.isSetPlatform();
    boolean that_present_platform = true && that.isSetPlatform();
    if (this_present_platform || that_present_platform) {
      if (!(this_present_platform && that_present_platform))
        return false;
      if (!this.platform.equals(that.platform))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_provinceOrgCode = true && this.isSetProvinceOrgCode();
    boolean that_present_provinceOrgCode = true && that.isSetProvinceOrgCode();
    if (this_present_provinceOrgCode || that_present_provinceOrgCode) {
      if (!(this_present_provinceOrgCode && that_present_provinceOrgCode))
        return false;
      if (!this.provinceOrgCode.equals(that.provinceOrgCode))
        return false;
    }

    boolean this_present_cityOrgCode = true && this.isSetCityOrgCode();
    boolean that_present_cityOrgCode = true && that.isSetCityOrgCode();
    if (this_present_cityOrgCode || that_present_cityOrgCode) {
      if (!(this_present_cityOrgCode && that_present_cityOrgCode))
        return false;
      if (!this.cityOrgCode.equals(that.cityOrgCode))
        return false;
    }

    boolean this_present_countyOrgCode = true && this.isSetCountyOrgCode();
    boolean that_present_countyOrgCode = true && that.isSetCountyOrgCode();
    if (this_present_countyOrgCode || that_present_countyOrgCode) {
      if (!(this_present_countyOrgCode && that_present_countyOrgCode))
        return false;
      if (!this.countyOrgCode.equals(that.countyOrgCode))
        return false;
    }

    boolean this_present_villageOrgCode = true && this.isSetVillageOrgCode();
    boolean that_present_villageOrgCode = true && that.isSetVillageOrgCode();
    if (this_present_villageOrgCode || that_present_villageOrgCode) {
      if (!(this_present_villageOrgCode && that_present_villageOrgCode))
        return false;
      if (!this.villageOrgCode.equals(that.villageOrgCode))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_merchantCategoryId = true && this.isSetMerchantCategoryId();
    boolean that_present_merchantCategoryId = true && that.isSetMerchantCategoryId();
    if (this_present_merchantCategoryId || that_present_merchantCategoryId) {
      if (!(this_present_merchantCategoryId && that_present_merchantCategoryId))
        return false;
      if (!this.merchantCategoryId.equals(that.merchantCategoryId))
        return false;
    }

    boolean this_present_merchantCategoryName = true && this.isSetMerchantCategoryName();
    boolean that_present_merchantCategoryName = true && that.isSetMerchantCategoryName();
    if (this_present_merchantCategoryName || that_present_merchantCategoryName) {
      if (!(this_present_merchantCategoryName && that_present_merchantCategoryName))
        return false;
      if (!this.merchantCategoryName.equals(that.merchantCategoryName))
        return false;
    }

    boolean this_present_orderType = true && this.isSetOrderType();
    boolean that_present_orderType = true && that.isSetOrderType();
    if (this_present_orderType || that_present_orderType) {
      if (!(this_present_orderType && that_present_orderType))
        return false;
      if (!this.orderType.equals(that.orderType))
        return false;
    }

    boolean this_present_orderTypeName = true && this.isSetOrderTypeName();
    boolean that_present_orderTypeName = true && that.isSetOrderTypeName();
    if (this_present_orderTypeName || that_present_orderTypeName) {
      if (!(this_present_orderTypeName && that_present_orderTypeName))
        return false;
      if (!this.orderTypeName.equals(that.orderTypeName))
        return false;
    }

    boolean this_present_payType = true && this.isSetPayType();
    boolean that_present_payType = true && that.isSetPayType();
    if (this_present_payType || that_present_payType) {
      if (!(this_present_payType && that_present_payType))
        return false;
      if (!this.payType.equals(that.payType))
        return false;
    }

    boolean this_present_payTypeName = true && this.isSetPayTypeName();
    boolean that_present_payTypeName = true && that.isSetPayTypeName();
    if (this_present_payTypeName || that_present_payTypeName) {
      if (!(this_present_payTypeName && that_present_payTypeName))
        return false;
      if (!this.payTypeName.equals(that.payTypeName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_day = true && (isSetDay());
    list.add(present_day);
    if (present_day)
      list.add(day);

    boolean present_week = true && (isSetWeek());
    list.add(present_week);
    if (present_week)
      list.add(week);

    boolean present_month = true && (isSetMonth());
    list.add(present_month);
    if (present_month)
      list.add(month);

    boolean present_year = true && (isSetYear());
    list.add(present_year);
    if (present_year)
      list.add(year);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_platform = true && (isSetPlatform());
    list.add(present_platform);
    if (present_platform)
      list.add(platform);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_provinceOrgCode = true && (isSetProvinceOrgCode());
    list.add(present_provinceOrgCode);
    if (present_provinceOrgCode)
      list.add(provinceOrgCode);

    boolean present_cityOrgCode = true && (isSetCityOrgCode());
    list.add(present_cityOrgCode);
    if (present_cityOrgCode)
      list.add(cityOrgCode);

    boolean present_countyOrgCode = true && (isSetCountyOrgCode());
    list.add(present_countyOrgCode);
    if (present_countyOrgCode)
      list.add(countyOrgCode);

    boolean present_villageOrgCode = true && (isSetVillageOrgCode());
    list.add(present_villageOrgCode);
    if (present_villageOrgCode)
      list.add(villageOrgCode);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_merchantCategoryId = true && (isSetMerchantCategoryId());
    list.add(present_merchantCategoryId);
    if (present_merchantCategoryId)
      list.add(merchantCategoryId);

    boolean present_merchantCategoryName = true && (isSetMerchantCategoryName());
    list.add(present_merchantCategoryName);
    if (present_merchantCategoryName)
      list.add(merchantCategoryName);

    boolean present_orderType = true && (isSetOrderType());
    list.add(present_orderType);
    if (present_orderType)
      list.add(orderType);

    boolean present_orderTypeName = true && (isSetOrderTypeName());
    list.add(present_orderTypeName);
    if (present_orderTypeName)
      list.add(orderTypeName);

    boolean present_payType = true && (isSetPayType());
    list.add(present_payType);
    if (present_payType)
      list.add(payType);

    boolean present_payTypeName = true && (isSetPayTypeName());
    list.add(present_payTypeName);
    if (present_payTypeName)
      list.add(payTypeName);

    return list.hashCode();
  }

  @Override
  public int compareTo(ReportBaseRespVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetDay()).compareTo(other.isSetDay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.day, other.day);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWeek()).compareTo(other.isSetWeek());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeek()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.week, other.week);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMonth()).compareTo(other.isSetMonth());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMonth()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.month, other.month);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetYear()).compareTo(other.isSetYear());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYear()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.year, other.year);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatform()).compareTo(other.isSetPlatform());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatform()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platform, other.platform);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceOrgCode()).compareTo(other.isSetProvinceOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.provinceOrgCode, other.provinceOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityOrgCode()).compareTo(other.isSetCityOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cityOrgCode, other.cityOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyOrgCode()).compareTo(other.isSetCountyOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.countyOrgCode, other.countyOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVillageOrgCode()).compareTo(other.isSetVillageOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVillageOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.villageOrgCode, other.villageOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantCategoryId()).compareTo(other.isSetMerchantCategoryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantCategoryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantCategoryId, other.merchantCategoryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantCategoryName()).compareTo(other.isSetMerchantCategoryName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantCategoryName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantCategoryName, other.merchantCategoryName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderType()).compareTo(other.isSetOrderType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderType, other.orderType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderTypeName()).compareTo(other.isSetOrderTypeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderTypeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderTypeName, other.orderTypeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayType()).compareTo(other.isSetPayType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payType, other.payType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayTypeName()).compareTo(other.isSetPayTypeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayTypeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payTypeName, other.payTypeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ReportBaseRespVo(");
    boolean first = true;

    if (isSetDay()) {
      sb.append("day:");
      if (this.day == null) {
        sb.append("null");
      } else {
        sb.append(this.day);
      }
      first = false;
    }
    if (isSetWeek()) {
      if (!first) sb.append(", ");
      sb.append("week:");
      if (this.week == null) {
        sb.append("null");
      } else {
        sb.append(this.week);
      }
      first = false;
    }
    if (isSetMonth()) {
      if (!first) sb.append(", ");
      sb.append("month:");
      if (this.month == null) {
        sb.append("null");
      } else {
        sb.append(this.month);
      }
      first = false;
    }
    if (isSetYear()) {
      if (!first) sb.append(", ");
      sb.append("year:");
      if (this.year == null) {
        sb.append("null");
      } else {
        sb.append(this.year);
      }
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetPlatform()) {
      if (!first) sb.append(", ");
      sb.append("platform:");
      if (this.platform == null) {
        sb.append("null");
      } else {
        sb.append(this.platform);
      }
      first = false;
    }
    if (isSetOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
    }
    if (isSetOrgName()) {
      if (!first) sb.append(", ");
      sb.append("orgName:");
      if (this.orgName == null) {
        sb.append("null");
      } else {
        sb.append(this.orgName);
      }
      first = false;
    }
    if (isSetProvinceOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("provinceOrgCode:");
      if (this.provinceOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.provinceOrgCode);
      }
      first = false;
    }
    if (isSetCityOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("cityOrgCode:");
      if (this.cityOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.cityOrgCode);
      }
      first = false;
    }
    if (isSetCountyOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("countyOrgCode:");
      if (this.countyOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.countyOrgCode);
      }
      first = false;
    }
    if (isSetVillageOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("villageOrgCode:");
      if (this.villageOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.villageOrgCode);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetMerchantName()) {
      if (!first) sb.append(", ");
      sb.append("merchantName:");
      if (this.merchantName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantName);
      }
      first = false;
    }
    if (isSetMerchantCategoryId()) {
      if (!first) sb.append(", ");
      sb.append("merchantCategoryId:");
      if (this.merchantCategoryId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantCategoryId);
      }
      first = false;
    }
    if (isSetMerchantCategoryName()) {
      if (!first) sb.append(", ");
      sb.append("merchantCategoryName:");
      if (this.merchantCategoryName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantCategoryName);
      }
      first = false;
    }
    if (isSetOrderType()) {
      if (!first) sb.append(", ");
      sb.append("orderType:");
      if (this.orderType == null) {
        sb.append("null");
      } else {
        sb.append(this.orderType);
      }
      first = false;
    }
    if (isSetOrderTypeName()) {
      if (!first) sb.append(", ");
      sb.append("orderTypeName:");
      if (this.orderTypeName == null) {
        sb.append("null");
      } else {
        sb.append(this.orderTypeName);
      }
      first = false;
    }
    if (isSetPayType()) {
      if (!first) sb.append(", ");
      sb.append("payType:");
      if (this.payType == null) {
        sb.append("null");
      } else {
        sb.append(this.payType);
      }
      first = false;
    }
    if (isSetPayTypeName()) {
      if (!first) sb.append(", ");
      sb.append("payTypeName:");
      if (this.payTypeName == null) {
        sb.append("null");
      } else {
        sb.append(this.payTypeName);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReportBaseRespVoStandardSchemeFactory implements SchemeFactory {
    public ReportBaseRespVoStandardScheme getScheme() {
      return new ReportBaseRespVoStandardScheme();
    }
  }

  private static class ReportBaseRespVoStandardScheme extends StandardScheme<ReportBaseRespVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReportBaseRespVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DAY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.day = iprot.readString();
              struct.setDayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WEEK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.week = iprot.readString();
              struct.setWeekIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MONTH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.month = iprot.readString();
              struct.setMonthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // YEAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.year = iprot.readString();
              struct.setYearIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PLATFORM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.platform = iprot.readString();
              struct.setPlatformIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PROVINCE_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.provinceOrgCode = iprot.readString();
              struct.setProvinceOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CITY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cityOrgCode = iprot.readString();
              struct.setCityOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // COUNTY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.countyOrgCode = iprot.readString();
              struct.setCountyOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // VILLAGE_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.villageOrgCode = iprot.readString();
              struct.setVillageOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // MERCHANT_CATEGORY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantCategoryId = iprot.readString();
              struct.setMerchantCategoryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // MERCHANT_CATEGORY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantCategoryName = iprot.readString();
              struct.setMerchantCategoryNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ORDER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderType = iprot.readString();
              struct.setOrderTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ORDER_TYPE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderTypeName = iprot.readString();
              struct.setOrderTypeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PAY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.payType = iprot.readString();
              struct.setPayTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PAY_TYPE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.payTypeName = iprot.readString();
              struct.setPayTypeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReportBaseRespVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.day != null) {
        if (struct.isSetDay()) {
          oprot.writeFieldBegin(DAY_FIELD_DESC);
          oprot.writeString(struct.day);
          oprot.writeFieldEnd();
        }
      }
      if (struct.week != null) {
        if (struct.isSetWeek()) {
          oprot.writeFieldBegin(WEEK_FIELD_DESC);
          oprot.writeString(struct.week);
          oprot.writeFieldEnd();
        }
      }
      if (struct.month != null) {
        if (struct.isSetMonth()) {
          oprot.writeFieldBegin(MONTH_FIELD_DESC);
          oprot.writeString(struct.month);
          oprot.writeFieldEnd();
        }
      }
      if (struct.year != null) {
        if (struct.isSetYear()) {
          oprot.writeFieldBegin(YEAR_FIELD_DESC);
          oprot.writeString(struct.year);
          oprot.writeFieldEnd();
        }
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.platform != null) {
        if (struct.isSetPlatform()) {
          oprot.writeFieldBegin(PLATFORM_FIELD_DESC);
          oprot.writeString(struct.platform);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgCode != null) {
        if (struct.isSetOrgCode()) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgName != null) {
        if (struct.isSetOrgName()) {
          oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
          oprot.writeString(struct.orgName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.provinceOrgCode != null) {
        if (struct.isSetProvinceOrgCode()) {
          oprot.writeFieldBegin(PROVINCE_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.provinceOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cityOrgCode != null) {
        if (struct.isSetCityOrgCode()) {
          oprot.writeFieldBegin(CITY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.cityOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.countyOrgCode != null) {
        if (struct.isSetCountyOrgCode()) {
          oprot.writeFieldBegin(COUNTY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.countyOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.villageOrgCode != null) {
        if (struct.isSetVillageOrgCode()) {
          oprot.writeFieldBegin(VILLAGE_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.villageOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantName != null) {
        if (struct.isSetMerchantName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantCategoryId != null) {
        if (struct.isSetMerchantCategoryId()) {
          oprot.writeFieldBegin(MERCHANT_CATEGORY_ID_FIELD_DESC);
          oprot.writeString(struct.merchantCategoryId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantCategoryName != null) {
        if (struct.isSetMerchantCategoryName()) {
          oprot.writeFieldBegin(MERCHANT_CATEGORY_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantCategoryName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orderType != null) {
        if (struct.isSetOrderType()) {
          oprot.writeFieldBegin(ORDER_TYPE_FIELD_DESC);
          oprot.writeString(struct.orderType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orderTypeName != null) {
        if (struct.isSetOrderTypeName()) {
          oprot.writeFieldBegin(ORDER_TYPE_NAME_FIELD_DESC);
          oprot.writeString(struct.orderTypeName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.payType != null) {
        if (struct.isSetPayType()) {
          oprot.writeFieldBegin(PAY_TYPE_FIELD_DESC);
          oprot.writeString(struct.payType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.payTypeName != null) {
        if (struct.isSetPayTypeName()) {
          oprot.writeFieldBegin(PAY_TYPE_NAME_FIELD_DESC);
          oprot.writeString(struct.payTypeName);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReportBaseRespVoTupleSchemeFactory implements SchemeFactory {
    public ReportBaseRespVoTupleScheme getScheme() {
      return new ReportBaseRespVoTupleScheme();
    }
  }

  private static class ReportBaseRespVoTupleScheme extends TupleScheme<ReportBaseRespVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReportBaseRespVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetDay()) {
        optionals.set(0);
      }
      if (struct.isSetWeek()) {
        optionals.set(1);
      }
      if (struct.isSetMonth()) {
        optionals.set(2);
      }
      if (struct.isSetYear()) {
        optionals.set(3);
      }
      if (struct.isSetClientId()) {
        optionals.set(4);
      }
      if (struct.isSetPlatform()) {
        optionals.set(5);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(6);
      }
      if (struct.isSetOrgName()) {
        optionals.set(7);
      }
      if (struct.isSetProvinceOrgCode()) {
        optionals.set(8);
      }
      if (struct.isSetCityOrgCode()) {
        optionals.set(9);
      }
      if (struct.isSetCountyOrgCode()) {
        optionals.set(10);
      }
      if (struct.isSetVillageOrgCode()) {
        optionals.set(11);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(12);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(13);
      }
      if (struct.isSetMerchantCategoryId()) {
        optionals.set(14);
      }
      if (struct.isSetMerchantCategoryName()) {
        optionals.set(15);
      }
      if (struct.isSetOrderType()) {
        optionals.set(16);
      }
      if (struct.isSetOrderTypeName()) {
        optionals.set(17);
      }
      if (struct.isSetPayType()) {
        optionals.set(18);
      }
      if (struct.isSetPayTypeName()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetDay()) {
        oprot.writeString(struct.day);
      }
      if (struct.isSetWeek()) {
        oprot.writeString(struct.week);
      }
      if (struct.isSetMonth()) {
        oprot.writeString(struct.month);
      }
      if (struct.isSetYear()) {
        oprot.writeString(struct.year);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetPlatform()) {
        oprot.writeString(struct.platform);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetProvinceOrgCode()) {
        oprot.writeString(struct.provinceOrgCode);
      }
      if (struct.isSetCityOrgCode()) {
        oprot.writeString(struct.cityOrgCode);
      }
      if (struct.isSetCountyOrgCode()) {
        oprot.writeString(struct.countyOrgCode);
      }
      if (struct.isSetVillageOrgCode()) {
        oprot.writeString(struct.villageOrgCode);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetMerchantCategoryId()) {
        oprot.writeString(struct.merchantCategoryId);
      }
      if (struct.isSetMerchantCategoryName()) {
        oprot.writeString(struct.merchantCategoryName);
      }
      if (struct.isSetOrderType()) {
        oprot.writeString(struct.orderType);
      }
      if (struct.isSetOrderTypeName()) {
        oprot.writeString(struct.orderTypeName);
      }
      if (struct.isSetPayType()) {
        oprot.writeString(struct.payType);
      }
      if (struct.isSetPayTypeName()) {
        oprot.writeString(struct.payTypeName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReportBaseRespVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.day = iprot.readString();
        struct.setDayIsSet(true);
      }
      if (incoming.get(1)) {
        struct.week = iprot.readString();
        struct.setWeekIsSet(true);
      }
      if (incoming.get(2)) {
        struct.month = iprot.readString();
        struct.setMonthIsSet(true);
      }
      if (incoming.get(3)) {
        struct.year = iprot.readString();
        struct.setYearIsSet(true);
      }
      if (incoming.get(4)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.platform = iprot.readString();
        struct.setPlatformIsSet(true);
      }
      if (incoming.get(6)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.provinceOrgCode = iprot.readString();
        struct.setProvinceOrgCodeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.cityOrgCode = iprot.readString();
        struct.setCityOrgCodeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.countyOrgCode = iprot.readString();
        struct.setCountyOrgCodeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.villageOrgCode = iprot.readString();
        struct.setVillageOrgCodeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(13)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.merchantCategoryId = iprot.readString();
        struct.setMerchantCategoryIdIsSet(true);
      }
      if (incoming.get(15)) {
        struct.merchantCategoryName = iprot.readString();
        struct.setMerchantCategoryNameIsSet(true);
      }
      if (incoming.get(16)) {
        struct.orderType = iprot.readString();
        struct.setOrderTypeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.orderTypeName = iprot.readString();
        struct.setOrderTypeNameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.payType = iprot.readString();
        struct.setPayTypeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.payTypeName = iprot.readString();
        struct.setPayTypeNameIsSet(true);
      }
    }
  }

}

