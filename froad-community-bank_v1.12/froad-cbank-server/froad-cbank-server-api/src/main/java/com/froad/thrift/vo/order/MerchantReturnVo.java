/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商户返回信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MerchantReturnVo implements org.apache.thrift.TBase<MerchantReturnVo, MerchantReturnVo._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantReturnVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantReturnVo");

  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MERCHANT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantStatus", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PRODUCT_RETURN_VO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("productReturnVoList", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField ERR_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("errCode", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ERR_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("errMsg", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantReturnVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantReturnVoTupleSchemeFactory());
  }

  /**
   * 子订单类型
   */
  public String type; // required
  /**
   * 商户ID|机构号
   */
  public String merchantId; // required
  /**
   * 商户名称|机构名称
   */
  public String merchantName; // required
  /**
   * 商户状态
   */
  public String merchantStatus; // required
  /**
   * 商品信息
   */
  public List<ProductReturnVo> productReturnVoList; // required
  /**
   * 0000：ok，其他异常
   */
  public String errCode; // required
  /**
   * 提示信息
   */
  public String errMsg; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 子订单类型
     */
    TYPE((short)1, "type"),
    /**
     * 商户ID|机构号
     */
    MERCHANT_ID((short)2, "merchantId"),
    /**
     * 商户名称|机构名称
     */
    MERCHANT_NAME((short)3, "merchantName"),
    /**
     * 商户状态
     */
    MERCHANT_STATUS((short)4, "merchantStatus"),
    /**
     * 商品信息
     */
    PRODUCT_RETURN_VO_LIST((short)5, "productReturnVoList"),
    /**
     * 0000：ok，其他异常
     */
    ERR_CODE((short)6, "errCode"),
    /**
     * 提示信息
     */
    ERR_MSG((short)7, "errMsg");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TYPE
          return TYPE;
        case 2: // MERCHANT_ID
          return MERCHANT_ID;
        case 3: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 4: // MERCHANT_STATUS
          return MERCHANT_STATUS;
        case 5: // PRODUCT_RETURN_VO_LIST
          return PRODUCT_RETURN_VO_LIST;
        case 6: // ERR_CODE
          return ERR_CODE;
        case 7: // ERR_MSG
          return ERR_MSG;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("merchantStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_RETURN_VO_LIST, new org.apache.thrift.meta_data.FieldMetaData("productReturnVoList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProductReturnVo.class))));
    tmpMap.put(_Fields.ERR_CODE, new org.apache.thrift.meta_data.FieldMetaData("errCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ERR_MSG, new org.apache.thrift.meta_data.FieldMetaData("errMsg", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantReturnVo.class, metaDataMap);
  }

  public MerchantReturnVo() {
  }

  public MerchantReturnVo(
    String type,
    String merchantId,
    String merchantName,
    String merchantStatus,
    List<ProductReturnVo> productReturnVoList,
    String errCode,
    String errMsg)
  {
    this();
    this.type = type;
    this.merchantId = merchantId;
    this.merchantName = merchantName;
    this.merchantStatus = merchantStatus;
    this.productReturnVoList = productReturnVoList;
    this.errCode = errCode;
    this.errMsg = errMsg;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantReturnVo(MerchantReturnVo other) {
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetMerchantStatus()) {
      this.merchantStatus = other.merchantStatus;
    }
    if (other.isSetProductReturnVoList()) {
      List<ProductReturnVo> __this__productReturnVoList = new ArrayList<ProductReturnVo>(other.productReturnVoList.size());
      for (ProductReturnVo other_element : other.productReturnVoList) {
        __this__productReturnVoList.add(new ProductReturnVo(other_element));
      }
      this.productReturnVoList = __this__productReturnVoList;
    }
    if (other.isSetErrCode()) {
      this.errCode = other.errCode;
    }
    if (other.isSetErrMsg()) {
      this.errMsg = other.errMsg;
    }
  }

  public MerchantReturnVo deepCopy() {
    return new MerchantReturnVo(this);
  }

  @Override
  public void clear() {
    this.type = null;
    this.merchantId = null;
    this.merchantName = null;
    this.merchantStatus = null;
    this.productReturnVoList = null;
    this.errCode = null;
    this.errMsg = null;
  }

  /**
   * 子订单类型
   */
  public String getType() {
    return this.type;
  }

  /**
   * 子订单类型
   */
  public MerchantReturnVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 商户ID|机构号
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID|机构号
   */
  public MerchantReturnVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 商户名称|机构名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称|机构名称
   */
  public MerchantReturnVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 商户状态
   */
  public String getMerchantStatus() {
    return this.merchantStatus;
  }

  /**
   * 商户状态
   */
  public MerchantReturnVo setMerchantStatus(String merchantStatus) {
    this.merchantStatus = merchantStatus;
    return this;
  }

  public void unsetMerchantStatus() {
    this.merchantStatus = null;
  }

  /** Returns true if field merchantStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantStatus() {
    return this.merchantStatus != null;
  }

  public void setMerchantStatusIsSet(boolean value) {
    if (!value) {
      this.merchantStatus = null;
    }
  }

  public int getProductReturnVoListSize() {
    return (this.productReturnVoList == null) ? 0 : this.productReturnVoList.size();
  }

  public java.util.Iterator<ProductReturnVo> getProductReturnVoListIterator() {
    return (this.productReturnVoList == null) ? null : this.productReturnVoList.iterator();
  }

  public void addToProductReturnVoList(ProductReturnVo elem) {
    if (this.productReturnVoList == null) {
      this.productReturnVoList = new ArrayList<ProductReturnVo>();
    }
    this.productReturnVoList.add(elem);
  }

  /**
   * 商品信息
   */
  public List<ProductReturnVo> getProductReturnVoList() {
    return this.productReturnVoList;
  }

  /**
   * 商品信息
   */
  public MerchantReturnVo setProductReturnVoList(List<ProductReturnVo> productReturnVoList) {
    this.productReturnVoList = productReturnVoList;
    return this;
  }

  public void unsetProductReturnVoList() {
    this.productReturnVoList = null;
  }

  /** Returns true if field productReturnVoList is set (has been assigned a value) and false otherwise */
  public boolean isSetProductReturnVoList() {
    return this.productReturnVoList != null;
  }

  public void setProductReturnVoListIsSet(boolean value) {
    if (!value) {
      this.productReturnVoList = null;
    }
  }

  /**
   * 0000：ok，其他异常
   */
  public String getErrCode() {
    return this.errCode;
  }

  /**
   * 0000：ok，其他异常
   */
  public MerchantReturnVo setErrCode(String errCode) {
    this.errCode = errCode;
    return this;
  }

  public void unsetErrCode() {
    this.errCode = null;
  }

  /** Returns true if field errCode is set (has been assigned a value) and false otherwise */
  public boolean isSetErrCode() {
    return this.errCode != null;
  }

  public void setErrCodeIsSet(boolean value) {
    if (!value) {
      this.errCode = null;
    }
  }

  /**
   * 提示信息
   */
  public String getErrMsg() {
    return this.errMsg;
  }

  /**
   * 提示信息
   */
  public MerchantReturnVo setErrMsg(String errMsg) {
    this.errMsg = errMsg;
    return this;
  }

  public void unsetErrMsg() {
    this.errMsg = null;
  }

  /** Returns true if field errMsg is set (has been assigned a value) and false otherwise */
  public boolean isSetErrMsg() {
    return this.errMsg != null;
  }

  public void setErrMsgIsSet(boolean value) {
    if (!value) {
      this.errMsg = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case MERCHANT_STATUS:
      if (value == null) {
        unsetMerchantStatus();
      } else {
        setMerchantStatus((String)value);
      }
      break;

    case PRODUCT_RETURN_VO_LIST:
      if (value == null) {
        unsetProductReturnVoList();
      } else {
        setProductReturnVoList((List<ProductReturnVo>)value);
      }
      break;

    case ERR_CODE:
      if (value == null) {
        unsetErrCode();
      } else {
        setErrCode((String)value);
      }
      break;

    case ERR_MSG:
      if (value == null) {
        unsetErrMsg();
      } else {
        setErrMsg((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TYPE:
      return getType();

    case MERCHANT_ID:
      return getMerchantId();

    case MERCHANT_NAME:
      return getMerchantName();

    case MERCHANT_STATUS:
      return getMerchantStatus();

    case PRODUCT_RETURN_VO_LIST:
      return getProductReturnVoList();

    case ERR_CODE:
      return getErrCode();

    case ERR_MSG:
      return getErrMsg();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TYPE:
      return isSetType();
    case MERCHANT_ID:
      return isSetMerchantId();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case MERCHANT_STATUS:
      return isSetMerchantStatus();
    case PRODUCT_RETURN_VO_LIST:
      return isSetProductReturnVoList();
    case ERR_CODE:
      return isSetErrCode();
    case ERR_MSG:
      return isSetErrMsg();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantReturnVo)
      return this.equals((MerchantReturnVo)that);
    return false;
  }

  public boolean equals(MerchantReturnVo that) {
    if (that == null)
      return false;

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_merchantStatus = true && this.isSetMerchantStatus();
    boolean that_present_merchantStatus = true && that.isSetMerchantStatus();
    if (this_present_merchantStatus || that_present_merchantStatus) {
      if (!(this_present_merchantStatus && that_present_merchantStatus))
        return false;
      if (!this.merchantStatus.equals(that.merchantStatus))
        return false;
    }

    boolean this_present_productReturnVoList = true && this.isSetProductReturnVoList();
    boolean that_present_productReturnVoList = true && that.isSetProductReturnVoList();
    if (this_present_productReturnVoList || that_present_productReturnVoList) {
      if (!(this_present_productReturnVoList && that_present_productReturnVoList))
        return false;
      if (!this.productReturnVoList.equals(that.productReturnVoList))
        return false;
    }

    boolean this_present_errCode = true && this.isSetErrCode();
    boolean that_present_errCode = true && that.isSetErrCode();
    if (this_present_errCode || that_present_errCode) {
      if (!(this_present_errCode && that_present_errCode))
        return false;
      if (!this.errCode.equals(that.errCode))
        return false;
    }

    boolean this_present_errMsg = true && this.isSetErrMsg();
    boolean that_present_errMsg = true && that.isSetErrMsg();
    if (this_present_errMsg || that_present_errMsg) {
      if (!(this_present_errMsg && that_present_errMsg))
        return false;
      if (!this.errMsg.equals(that.errMsg))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_merchantStatus = true && (isSetMerchantStatus());
    list.add(present_merchantStatus);
    if (present_merchantStatus)
      list.add(merchantStatus);

    boolean present_productReturnVoList = true && (isSetProductReturnVoList());
    list.add(present_productReturnVoList);
    if (present_productReturnVoList)
      list.add(productReturnVoList);

    boolean present_errCode = true && (isSetErrCode());
    list.add(present_errCode);
    if (present_errCode)
      list.add(errCode);

    boolean present_errMsg = true && (isSetErrMsg());
    list.add(present_errMsg);
    if (present_errMsg)
      list.add(errMsg);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantReturnVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantStatus()).compareTo(other.isSetMerchantStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantStatus, other.merchantStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductReturnVoList()).compareTo(other.isSetProductReturnVoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductReturnVoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productReturnVoList, other.productReturnVoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetErrCode()).compareTo(other.isSetErrCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errCode, other.errCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetErrMsg()).compareTo(other.isSetErrMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errMsg, other.errMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantReturnVo(");
    boolean first = true;

    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantStatus:");
    if (this.merchantStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productReturnVoList:");
    if (this.productReturnVoList == null) {
      sb.append("null");
    } else {
      sb.append(this.productReturnVoList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("errCode:");
    if (this.errCode == null) {
      sb.append("null");
    } else {
      sb.append(this.errCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("errMsg:");
    if (this.errMsg == null) {
      sb.append("null");
    } else {
      sb.append(this.errMsg);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantReturnVoStandardSchemeFactory implements SchemeFactory {
    public MerchantReturnVoStandardScheme getScheme() {
      return new MerchantReturnVoStandardScheme();
    }
  }

  private static class MerchantReturnVoStandardScheme extends StandardScheme<MerchantReturnVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantReturnVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MERCHANT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantStatus = iprot.readString();
              struct.setMerchantStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PRODUCT_RETURN_VO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                struct.productReturnVoList = new ArrayList<ProductReturnVo>(_list24.size);
                ProductReturnVo _elem25;
                for (int _i26 = 0; _i26 < _list24.size; ++_i26)
                {
                  _elem25 = new ProductReturnVo();
                  _elem25.read(iprot);
                  struct.productReturnVoList.add(_elem25);
                }
                iprot.readListEnd();
              }
              struct.setProductReturnVoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ERR_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.errCode = iprot.readString();
              struct.setErrCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ERR_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.errMsg = iprot.readString();
              struct.setErrMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantReturnVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      if (struct.merchantStatus != null) {
        oprot.writeFieldBegin(MERCHANT_STATUS_FIELD_DESC);
        oprot.writeString(struct.merchantStatus);
        oprot.writeFieldEnd();
      }
      if (struct.productReturnVoList != null) {
        oprot.writeFieldBegin(PRODUCT_RETURN_VO_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.productReturnVoList.size()));
          for (ProductReturnVo _iter27 : struct.productReturnVoList)
          {
            _iter27.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.errCode != null) {
        oprot.writeFieldBegin(ERR_CODE_FIELD_DESC);
        oprot.writeString(struct.errCode);
        oprot.writeFieldEnd();
      }
      if (struct.errMsg != null) {
        oprot.writeFieldBegin(ERR_MSG_FIELD_DESC);
        oprot.writeString(struct.errMsg);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantReturnVoTupleSchemeFactory implements SchemeFactory {
    public MerchantReturnVoTupleScheme getScheme() {
      return new MerchantReturnVoTupleScheme();
    }
  }

  private static class MerchantReturnVoTupleScheme extends TupleScheme<MerchantReturnVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantReturnVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetType()) {
        optionals.set(0);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(1);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(2);
      }
      if (struct.isSetMerchantStatus()) {
        optionals.set(3);
      }
      if (struct.isSetProductReturnVoList()) {
        optionals.set(4);
      }
      if (struct.isSetErrCode()) {
        optionals.set(5);
      }
      if (struct.isSetErrMsg()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetMerchantStatus()) {
        oprot.writeString(struct.merchantStatus);
      }
      if (struct.isSetProductReturnVoList()) {
        {
          oprot.writeI32(struct.productReturnVoList.size());
          for (ProductReturnVo _iter28 : struct.productReturnVoList)
          {
            _iter28.write(oprot);
          }
        }
      }
      if (struct.isSetErrCode()) {
        oprot.writeString(struct.errCode);
      }
      if (struct.isSetErrMsg()) {
        oprot.writeString(struct.errMsg);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantReturnVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.merchantStatus = iprot.readString();
        struct.setMerchantStatusIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.productReturnVoList = new ArrayList<ProductReturnVo>(_list29.size);
          ProductReturnVo _elem30;
          for (int _i31 = 0; _i31 < _list29.size; ++_i31)
          {
            _elem30 = new ProductReturnVo();
            _elem30.read(iprot);
            struct.productReturnVoList.add(_elem30);
          }
        }
        struct.setProductReturnVoListIsSet(true);
      }
      if (incoming.get(5)) {
        struct.errCode = iprot.readString();
        struct.setErrCodeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.errMsg = iprot.readString();
        struct.setErrMsgIsSet(true);
      }
    }
  }

}

