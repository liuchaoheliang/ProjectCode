/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 待审核数量对象Vo
 * PreAuditNumVo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class PreAuditNumVo implements org.apache.thrift.TBase<PreAuditNumVo, PreAuditNumVo._Fields>, java.io.Serializable, Cloneable, Comparable<PreAuditNumVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PreAuditNumVo");

  private static final org.apache.thrift.protocol.TField PREAUDIT_DUIHUAN_FIELD_DESC = new org.apache.thrift.protocol.TField("preauditDuihuan", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PREAUDIT_MING_YOU_FIELD_DESC = new org.apache.thrift.protocol.TField("preauditMingYou", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PREAUDIT_MERCHANT_FIELD_DESC = new org.apache.thrift.protocol.TField("preauditMerchant", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField PREAUDIT_PRESELL_FIELD_DESC = new org.apache.thrift.protocol.TField("preauditPresell", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField PREAUDIT_GROUP_FIELD_DESC = new org.apache.thrift.protocol.TField("preauditGroup", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PREAUDIT_SECKILL_FIELD_DESC = new org.apache.thrift.protocol.TField("preauditSeckill", org.apache.thrift.protocol.TType.I32, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PreAuditNumVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PreAuditNumVoTupleSchemeFactory());
  }

  /**
   * 待审核积分兑换商品数量
   */
  public int preauditDuihuan; // optional
  /**
   * 待审核名优特惠数量
   */
  public int preauditMingYou; // optional
  /**
   * 待审核商户数量
   */
  public int preauditMerchant; // optional
  /**
   * 待审核预售商品数量
   */
  public int preauditPresell; // optional
  /**
   * 待审核团购商品数量
   */
  public int preauditGroup; // optional
  /**
   * 待审核秒杀商品数量
   */
  public int preauditSeckill; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 待审核积分兑换商品数量
     */
    PREAUDIT_DUIHUAN((short)1, "preauditDuihuan"),
    /**
     * 待审核名优特惠数量
     */
    PREAUDIT_MING_YOU((short)2, "preauditMingYou"),
    /**
     * 待审核商户数量
     */
    PREAUDIT_MERCHANT((short)3, "preauditMerchant"),
    /**
     * 待审核预售商品数量
     */
    PREAUDIT_PRESELL((short)4, "preauditPresell"),
    /**
     * 待审核团购商品数量
     */
    PREAUDIT_GROUP((short)5, "preauditGroup"),
    /**
     * 待审核秒杀商品数量
     */
    PREAUDIT_SECKILL((short)6, "preauditSeckill");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PREAUDIT_DUIHUAN
          return PREAUDIT_DUIHUAN;
        case 2: // PREAUDIT_MING_YOU
          return PREAUDIT_MING_YOU;
        case 3: // PREAUDIT_MERCHANT
          return PREAUDIT_MERCHANT;
        case 4: // PREAUDIT_PRESELL
          return PREAUDIT_PRESELL;
        case 5: // PREAUDIT_GROUP
          return PREAUDIT_GROUP;
        case 6: // PREAUDIT_SECKILL
          return PREAUDIT_SECKILL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PREAUDITDUIHUAN_ISSET_ID = 0;
  private static final int __PREAUDITMINGYOU_ISSET_ID = 1;
  private static final int __PREAUDITMERCHANT_ISSET_ID = 2;
  private static final int __PREAUDITPRESELL_ISSET_ID = 3;
  private static final int __PREAUDITGROUP_ISSET_ID = 4;
  private static final int __PREAUDITSECKILL_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.PREAUDIT_DUIHUAN,_Fields.PREAUDIT_MING_YOU,_Fields.PREAUDIT_MERCHANT,_Fields.PREAUDIT_PRESELL,_Fields.PREAUDIT_GROUP,_Fields.PREAUDIT_SECKILL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PREAUDIT_DUIHUAN, new org.apache.thrift.meta_data.FieldMetaData("preauditDuihuan", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PREAUDIT_MING_YOU, new org.apache.thrift.meta_data.FieldMetaData("preauditMingYou", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PREAUDIT_MERCHANT, new org.apache.thrift.meta_data.FieldMetaData("preauditMerchant", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PREAUDIT_PRESELL, new org.apache.thrift.meta_data.FieldMetaData("preauditPresell", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PREAUDIT_GROUP, new org.apache.thrift.meta_data.FieldMetaData("preauditGroup", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PREAUDIT_SECKILL, new org.apache.thrift.meta_data.FieldMetaData("preauditSeckill", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PreAuditNumVo.class, metaDataMap);
  }

  public PreAuditNumVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PreAuditNumVo(PreAuditNumVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.preauditDuihuan = other.preauditDuihuan;
    this.preauditMingYou = other.preauditMingYou;
    this.preauditMerchant = other.preauditMerchant;
    this.preauditPresell = other.preauditPresell;
    this.preauditGroup = other.preauditGroup;
    this.preauditSeckill = other.preauditSeckill;
  }

  public PreAuditNumVo deepCopy() {
    return new PreAuditNumVo(this);
  }

  @Override
  public void clear() {
    setPreauditDuihuanIsSet(false);
    this.preauditDuihuan = 0;
    setPreauditMingYouIsSet(false);
    this.preauditMingYou = 0;
    setPreauditMerchantIsSet(false);
    this.preauditMerchant = 0;
    setPreauditPresellIsSet(false);
    this.preauditPresell = 0;
    setPreauditGroupIsSet(false);
    this.preauditGroup = 0;
    setPreauditSeckillIsSet(false);
    this.preauditSeckill = 0;
  }

  /**
   * 待审核积分兑换商品数量
   */
  public int getPreauditDuihuan() {
    return this.preauditDuihuan;
  }

  /**
   * 待审核积分兑换商品数量
   */
  public PreAuditNumVo setPreauditDuihuan(int preauditDuihuan) {
    this.preauditDuihuan = preauditDuihuan;
    setPreauditDuihuanIsSet(true);
    return this;
  }

  public void unsetPreauditDuihuan() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREAUDITDUIHUAN_ISSET_ID);
  }

  /** Returns true if field preauditDuihuan is set (has been assigned a value) and false otherwise */
  public boolean isSetPreauditDuihuan() {
    return EncodingUtils.testBit(__isset_bitfield, __PREAUDITDUIHUAN_ISSET_ID);
  }

  public void setPreauditDuihuanIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREAUDITDUIHUAN_ISSET_ID, value);
  }

  /**
   * 待审核名优特惠数量
   */
  public int getPreauditMingYou() {
    return this.preauditMingYou;
  }

  /**
   * 待审核名优特惠数量
   */
  public PreAuditNumVo setPreauditMingYou(int preauditMingYou) {
    this.preauditMingYou = preauditMingYou;
    setPreauditMingYouIsSet(true);
    return this;
  }

  public void unsetPreauditMingYou() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREAUDITMINGYOU_ISSET_ID);
  }

  /** Returns true if field preauditMingYou is set (has been assigned a value) and false otherwise */
  public boolean isSetPreauditMingYou() {
    return EncodingUtils.testBit(__isset_bitfield, __PREAUDITMINGYOU_ISSET_ID);
  }

  public void setPreauditMingYouIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREAUDITMINGYOU_ISSET_ID, value);
  }

  /**
   * 待审核商户数量
   */
  public int getPreauditMerchant() {
    return this.preauditMerchant;
  }

  /**
   * 待审核商户数量
   */
  public PreAuditNumVo setPreauditMerchant(int preauditMerchant) {
    this.preauditMerchant = preauditMerchant;
    setPreauditMerchantIsSet(true);
    return this;
  }

  public void unsetPreauditMerchant() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREAUDITMERCHANT_ISSET_ID);
  }

  /** Returns true if field preauditMerchant is set (has been assigned a value) and false otherwise */
  public boolean isSetPreauditMerchant() {
    return EncodingUtils.testBit(__isset_bitfield, __PREAUDITMERCHANT_ISSET_ID);
  }

  public void setPreauditMerchantIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREAUDITMERCHANT_ISSET_ID, value);
  }

  /**
   * 待审核预售商品数量
   */
  public int getPreauditPresell() {
    return this.preauditPresell;
  }

  /**
   * 待审核预售商品数量
   */
  public PreAuditNumVo setPreauditPresell(int preauditPresell) {
    this.preauditPresell = preauditPresell;
    setPreauditPresellIsSet(true);
    return this;
  }

  public void unsetPreauditPresell() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREAUDITPRESELL_ISSET_ID);
  }

  /** Returns true if field preauditPresell is set (has been assigned a value) and false otherwise */
  public boolean isSetPreauditPresell() {
    return EncodingUtils.testBit(__isset_bitfield, __PREAUDITPRESELL_ISSET_ID);
  }

  public void setPreauditPresellIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREAUDITPRESELL_ISSET_ID, value);
  }

  /**
   * 待审核团购商品数量
   */
  public int getPreauditGroup() {
    return this.preauditGroup;
  }

  /**
   * 待审核团购商品数量
   */
  public PreAuditNumVo setPreauditGroup(int preauditGroup) {
    this.preauditGroup = preauditGroup;
    setPreauditGroupIsSet(true);
    return this;
  }

  public void unsetPreauditGroup() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREAUDITGROUP_ISSET_ID);
  }

  /** Returns true if field preauditGroup is set (has been assigned a value) and false otherwise */
  public boolean isSetPreauditGroup() {
    return EncodingUtils.testBit(__isset_bitfield, __PREAUDITGROUP_ISSET_ID);
  }

  public void setPreauditGroupIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREAUDITGROUP_ISSET_ID, value);
  }

  /**
   * 待审核秒杀商品数量
   */
  public int getPreauditSeckill() {
    return this.preauditSeckill;
  }

  /**
   * 待审核秒杀商品数量
   */
  public PreAuditNumVo setPreauditSeckill(int preauditSeckill) {
    this.preauditSeckill = preauditSeckill;
    setPreauditSeckillIsSet(true);
    return this;
  }

  public void unsetPreauditSeckill() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREAUDITSECKILL_ISSET_ID);
  }

  /** Returns true if field preauditSeckill is set (has been assigned a value) and false otherwise */
  public boolean isSetPreauditSeckill() {
    return EncodingUtils.testBit(__isset_bitfield, __PREAUDITSECKILL_ISSET_ID);
  }

  public void setPreauditSeckillIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREAUDITSECKILL_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PREAUDIT_DUIHUAN:
      if (value == null) {
        unsetPreauditDuihuan();
      } else {
        setPreauditDuihuan((Integer)value);
      }
      break;

    case PREAUDIT_MING_YOU:
      if (value == null) {
        unsetPreauditMingYou();
      } else {
        setPreauditMingYou((Integer)value);
      }
      break;

    case PREAUDIT_MERCHANT:
      if (value == null) {
        unsetPreauditMerchant();
      } else {
        setPreauditMerchant((Integer)value);
      }
      break;

    case PREAUDIT_PRESELL:
      if (value == null) {
        unsetPreauditPresell();
      } else {
        setPreauditPresell((Integer)value);
      }
      break;

    case PREAUDIT_GROUP:
      if (value == null) {
        unsetPreauditGroup();
      } else {
        setPreauditGroup((Integer)value);
      }
      break;

    case PREAUDIT_SECKILL:
      if (value == null) {
        unsetPreauditSeckill();
      } else {
        setPreauditSeckill((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PREAUDIT_DUIHUAN:
      return Integer.valueOf(getPreauditDuihuan());

    case PREAUDIT_MING_YOU:
      return Integer.valueOf(getPreauditMingYou());

    case PREAUDIT_MERCHANT:
      return Integer.valueOf(getPreauditMerchant());

    case PREAUDIT_PRESELL:
      return Integer.valueOf(getPreauditPresell());

    case PREAUDIT_GROUP:
      return Integer.valueOf(getPreauditGroup());

    case PREAUDIT_SECKILL:
      return Integer.valueOf(getPreauditSeckill());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PREAUDIT_DUIHUAN:
      return isSetPreauditDuihuan();
    case PREAUDIT_MING_YOU:
      return isSetPreauditMingYou();
    case PREAUDIT_MERCHANT:
      return isSetPreauditMerchant();
    case PREAUDIT_PRESELL:
      return isSetPreauditPresell();
    case PREAUDIT_GROUP:
      return isSetPreauditGroup();
    case PREAUDIT_SECKILL:
      return isSetPreauditSeckill();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PreAuditNumVo)
      return this.equals((PreAuditNumVo)that);
    return false;
  }

  public boolean equals(PreAuditNumVo that) {
    if (that == null)
      return false;

    boolean this_present_preauditDuihuan = true && this.isSetPreauditDuihuan();
    boolean that_present_preauditDuihuan = true && that.isSetPreauditDuihuan();
    if (this_present_preauditDuihuan || that_present_preauditDuihuan) {
      if (!(this_present_preauditDuihuan && that_present_preauditDuihuan))
        return false;
      if (this.preauditDuihuan != that.preauditDuihuan)
        return false;
    }

    boolean this_present_preauditMingYou = true && this.isSetPreauditMingYou();
    boolean that_present_preauditMingYou = true && that.isSetPreauditMingYou();
    if (this_present_preauditMingYou || that_present_preauditMingYou) {
      if (!(this_present_preauditMingYou && that_present_preauditMingYou))
        return false;
      if (this.preauditMingYou != that.preauditMingYou)
        return false;
    }

    boolean this_present_preauditMerchant = true && this.isSetPreauditMerchant();
    boolean that_present_preauditMerchant = true && that.isSetPreauditMerchant();
    if (this_present_preauditMerchant || that_present_preauditMerchant) {
      if (!(this_present_preauditMerchant && that_present_preauditMerchant))
        return false;
      if (this.preauditMerchant != that.preauditMerchant)
        return false;
    }

    boolean this_present_preauditPresell = true && this.isSetPreauditPresell();
    boolean that_present_preauditPresell = true && that.isSetPreauditPresell();
    if (this_present_preauditPresell || that_present_preauditPresell) {
      if (!(this_present_preauditPresell && that_present_preauditPresell))
        return false;
      if (this.preauditPresell != that.preauditPresell)
        return false;
    }

    boolean this_present_preauditGroup = true && this.isSetPreauditGroup();
    boolean that_present_preauditGroup = true && that.isSetPreauditGroup();
    if (this_present_preauditGroup || that_present_preauditGroup) {
      if (!(this_present_preauditGroup && that_present_preauditGroup))
        return false;
      if (this.preauditGroup != that.preauditGroup)
        return false;
    }

    boolean this_present_preauditSeckill = true && this.isSetPreauditSeckill();
    boolean that_present_preauditSeckill = true && that.isSetPreauditSeckill();
    if (this_present_preauditSeckill || that_present_preauditSeckill) {
      if (!(this_present_preauditSeckill && that_present_preauditSeckill))
        return false;
      if (this.preauditSeckill != that.preauditSeckill)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_preauditDuihuan = true && (isSetPreauditDuihuan());
    list.add(present_preauditDuihuan);
    if (present_preauditDuihuan)
      list.add(preauditDuihuan);

    boolean present_preauditMingYou = true && (isSetPreauditMingYou());
    list.add(present_preauditMingYou);
    if (present_preauditMingYou)
      list.add(preauditMingYou);

    boolean present_preauditMerchant = true && (isSetPreauditMerchant());
    list.add(present_preauditMerchant);
    if (present_preauditMerchant)
      list.add(preauditMerchant);

    boolean present_preauditPresell = true && (isSetPreauditPresell());
    list.add(present_preauditPresell);
    if (present_preauditPresell)
      list.add(preauditPresell);

    boolean present_preauditGroup = true && (isSetPreauditGroup());
    list.add(present_preauditGroup);
    if (present_preauditGroup)
      list.add(preauditGroup);

    boolean present_preauditSeckill = true && (isSetPreauditSeckill());
    list.add(present_preauditSeckill);
    if (present_preauditSeckill)
      list.add(preauditSeckill);

    return list.hashCode();
  }

  @Override
  public int compareTo(PreAuditNumVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPreauditDuihuan()).compareTo(other.isSetPreauditDuihuan());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreauditDuihuan()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preauditDuihuan, other.preauditDuihuan);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreauditMingYou()).compareTo(other.isSetPreauditMingYou());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreauditMingYou()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preauditMingYou, other.preauditMingYou);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreauditMerchant()).compareTo(other.isSetPreauditMerchant());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreauditMerchant()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preauditMerchant, other.preauditMerchant);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreauditPresell()).compareTo(other.isSetPreauditPresell());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreauditPresell()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preauditPresell, other.preauditPresell);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreauditGroup()).compareTo(other.isSetPreauditGroup());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreauditGroup()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preauditGroup, other.preauditGroup);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreauditSeckill()).compareTo(other.isSetPreauditSeckill());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreauditSeckill()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preauditSeckill, other.preauditSeckill);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PreAuditNumVo(");
    boolean first = true;

    if (isSetPreauditDuihuan()) {
      sb.append("preauditDuihuan:");
      sb.append(this.preauditDuihuan);
      first = false;
    }
    if (isSetPreauditMingYou()) {
      if (!first) sb.append(", ");
      sb.append("preauditMingYou:");
      sb.append(this.preauditMingYou);
      first = false;
    }
    if (isSetPreauditMerchant()) {
      if (!first) sb.append(", ");
      sb.append("preauditMerchant:");
      sb.append(this.preauditMerchant);
      first = false;
    }
    if (isSetPreauditPresell()) {
      if (!first) sb.append(", ");
      sb.append("preauditPresell:");
      sb.append(this.preauditPresell);
      first = false;
    }
    if (isSetPreauditGroup()) {
      if (!first) sb.append(", ");
      sb.append("preauditGroup:");
      sb.append(this.preauditGroup);
      first = false;
    }
    if (isSetPreauditSeckill()) {
      if (!first) sb.append(", ");
      sb.append("preauditSeckill:");
      sb.append(this.preauditSeckill);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PreAuditNumVoStandardSchemeFactory implements SchemeFactory {
    public PreAuditNumVoStandardScheme getScheme() {
      return new PreAuditNumVoStandardScheme();
    }
  }

  private static class PreAuditNumVoStandardScheme extends StandardScheme<PreAuditNumVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PreAuditNumVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PREAUDIT_DUIHUAN
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.preauditDuihuan = iprot.readI32();
              struct.setPreauditDuihuanIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PREAUDIT_MING_YOU
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.preauditMingYou = iprot.readI32();
              struct.setPreauditMingYouIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PREAUDIT_MERCHANT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.preauditMerchant = iprot.readI32();
              struct.setPreauditMerchantIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PREAUDIT_PRESELL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.preauditPresell = iprot.readI32();
              struct.setPreauditPresellIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PREAUDIT_GROUP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.preauditGroup = iprot.readI32();
              struct.setPreauditGroupIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PREAUDIT_SECKILL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.preauditSeckill = iprot.readI32();
              struct.setPreauditSeckillIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PreAuditNumVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetPreauditDuihuan()) {
        oprot.writeFieldBegin(PREAUDIT_DUIHUAN_FIELD_DESC);
        oprot.writeI32(struct.preauditDuihuan);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPreauditMingYou()) {
        oprot.writeFieldBegin(PREAUDIT_MING_YOU_FIELD_DESC);
        oprot.writeI32(struct.preauditMingYou);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPreauditMerchant()) {
        oprot.writeFieldBegin(PREAUDIT_MERCHANT_FIELD_DESC);
        oprot.writeI32(struct.preauditMerchant);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPreauditPresell()) {
        oprot.writeFieldBegin(PREAUDIT_PRESELL_FIELD_DESC);
        oprot.writeI32(struct.preauditPresell);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPreauditGroup()) {
        oprot.writeFieldBegin(PREAUDIT_GROUP_FIELD_DESC);
        oprot.writeI32(struct.preauditGroup);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPreauditSeckill()) {
        oprot.writeFieldBegin(PREAUDIT_SECKILL_FIELD_DESC);
        oprot.writeI32(struct.preauditSeckill);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PreAuditNumVoTupleSchemeFactory implements SchemeFactory {
    public PreAuditNumVoTupleScheme getScheme() {
      return new PreAuditNumVoTupleScheme();
    }
  }

  private static class PreAuditNumVoTupleScheme extends TupleScheme<PreAuditNumVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PreAuditNumVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPreauditDuihuan()) {
        optionals.set(0);
      }
      if (struct.isSetPreauditMingYou()) {
        optionals.set(1);
      }
      if (struct.isSetPreauditMerchant()) {
        optionals.set(2);
      }
      if (struct.isSetPreauditPresell()) {
        optionals.set(3);
      }
      if (struct.isSetPreauditGroup()) {
        optionals.set(4);
      }
      if (struct.isSetPreauditSeckill()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetPreauditDuihuan()) {
        oprot.writeI32(struct.preauditDuihuan);
      }
      if (struct.isSetPreauditMingYou()) {
        oprot.writeI32(struct.preauditMingYou);
      }
      if (struct.isSetPreauditMerchant()) {
        oprot.writeI32(struct.preauditMerchant);
      }
      if (struct.isSetPreauditPresell()) {
        oprot.writeI32(struct.preauditPresell);
      }
      if (struct.isSetPreauditGroup()) {
        oprot.writeI32(struct.preauditGroup);
      }
      if (struct.isSetPreauditSeckill()) {
        oprot.writeI32(struct.preauditSeckill);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PreAuditNumVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.preauditDuihuan = iprot.readI32();
        struct.setPreauditDuihuanIsSet(true);
      }
      if (incoming.get(1)) {
        struct.preauditMingYou = iprot.readI32();
        struct.setPreauditMingYouIsSet(true);
      }
      if (incoming.get(2)) {
        struct.preauditMerchant = iprot.readI32();
        struct.setPreauditMerchantIsSet(true);
      }
      if (incoming.get(3)) {
        struct.preauditPresell = iprot.readI32();
        struct.setPreauditPresellIsSet(true);
      }
      if (incoming.get(4)) {
        struct.preauditGroup = iprot.readI32();
        struct.setPreauditGroupIsSet(true);
      }
      if (incoming.get(5)) {
        struct.preauditSeckill = iprot.readI32();
        struct.setPreauditSeckillIsSet(true);
      }
    }
  }

}

