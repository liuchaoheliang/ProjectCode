/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * ProductBuyLimitVo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ProductBuyLimitVo implements org.apache.thrift.TBase<ProductBuyLimitVo, ProductBuyLimitVo._Fields>, java.io.Serializable, Cloneable, Comparable<ProductBuyLimitVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProductBuyLimitVo");

  private static final org.apache.thrift.protocol.TField MAX_FIELD_DESC = new org.apache.thrift.protocol.TField("max", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField MAX_VIP_FIELD_DESC = new org.apache.thrift.protocol.TField("maxVip", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField MAX_CARD_FIELD_DESC = new org.apache.thrift.protocol.TField("maxCard", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProductBuyLimitVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProductBuyLimitVoTupleSchemeFactory());
  }

  /**
   * 最大购买数量
   */
  public int max; // required
  /**
   * vip最大购买数量
   */
  public int maxVip; // required
  /**
   * 贴膜卡最大购买数量
   */
  public int maxCard; // required
  /**
   * 限制开始时间
   */
  public long startTime; // required
  /**
   * 限制结束时间
   */
  public long endTime; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 最大购买数量
     */
    MAX((short)1, "max"),
    /**
     * vip最大购买数量
     */
    MAX_VIP((short)2, "maxVip"),
    /**
     * 贴膜卡最大购买数量
     */
    MAX_CARD((short)3, "maxCard"),
    /**
     * 限制开始时间
     */
    START_TIME((short)4, "startTime"),
    /**
     * 限制结束时间
     */
    END_TIME((short)5, "endTime");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MAX
          return MAX;
        case 2: // MAX_VIP
          return MAX_VIP;
        case 3: // MAX_CARD
          return MAX_CARD;
        case 4: // START_TIME
          return START_TIME;
        case 5: // END_TIME
          return END_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MAX_ISSET_ID = 0;
  private static final int __MAXVIP_ISSET_ID = 1;
  private static final int __MAXCARD_ISSET_ID = 2;
  private static final int __STARTTIME_ISSET_ID = 3;
  private static final int __ENDTIME_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MAX, new org.apache.thrift.meta_data.FieldMetaData("max", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_VIP, new org.apache.thrift.meta_data.FieldMetaData("maxVip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_CARD, new org.apache.thrift.meta_data.FieldMetaData("maxCard", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProductBuyLimitVo.class, metaDataMap);
  }

  public ProductBuyLimitVo() {
  }

  public ProductBuyLimitVo(
    int max,
    int maxVip,
    int maxCard,
    long startTime,
    long endTime)
  {
    this();
    this.max = max;
    setMaxIsSet(true);
    this.maxVip = maxVip;
    setMaxVipIsSet(true);
    this.maxCard = maxCard;
    setMaxCardIsSet(true);
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProductBuyLimitVo(ProductBuyLimitVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.max = other.max;
    this.maxVip = other.maxVip;
    this.maxCard = other.maxCard;
    this.startTime = other.startTime;
    this.endTime = other.endTime;
  }

  public ProductBuyLimitVo deepCopy() {
    return new ProductBuyLimitVo(this);
  }

  @Override
  public void clear() {
    setMaxIsSet(false);
    this.max = 0;
    setMaxVipIsSet(false);
    this.maxVip = 0;
    setMaxCardIsSet(false);
    this.maxCard = 0;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
  }

  /**
   * 最大购买数量
   */
  public int getMax() {
    return this.max;
  }

  /**
   * 最大购买数量
   */
  public ProductBuyLimitVo setMax(int max) {
    this.max = max;
    setMaxIsSet(true);
    return this;
  }

  public void unsetMax() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAX_ISSET_ID);
  }

  /** Returns true if field max is set (has been assigned a value) and false otherwise */
  public boolean isSetMax() {
    return EncodingUtils.testBit(__isset_bitfield, __MAX_ISSET_ID);
  }

  public void setMaxIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAX_ISSET_ID, value);
  }

  /**
   * vip最大购买数量
   */
  public int getMaxVip() {
    return this.maxVip;
  }

  /**
   * vip最大购买数量
   */
  public ProductBuyLimitVo setMaxVip(int maxVip) {
    this.maxVip = maxVip;
    setMaxVipIsSet(true);
    return this;
  }

  public void unsetMaxVip() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXVIP_ISSET_ID);
  }

  /** Returns true if field maxVip is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxVip() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXVIP_ISSET_ID);
  }

  public void setMaxVipIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXVIP_ISSET_ID, value);
  }

  /**
   * 贴膜卡最大购买数量
   */
  public int getMaxCard() {
    return this.maxCard;
  }

  /**
   * 贴膜卡最大购买数量
   */
  public ProductBuyLimitVo setMaxCard(int maxCard) {
    this.maxCard = maxCard;
    setMaxCardIsSet(true);
    return this;
  }

  public void unsetMaxCard() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXCARD_ISSET_ID);
  }

  /** Returns true if field maxCard is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxCard() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXCARD_ISSET_ID);
  }

  public void setMaxCardIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXCARD_ISSET_ID, value);
  }

  /**
   * 限制开始时间
   */
  public long getStartTime() {
    return this.startTime;
  }

  /**
   * 限制开始时间
   */
  public ProductBuyLimitVo setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  /**
   * 限制结束时间
   */
  public long getEndTime() {
    return this.endTime;
  }

  /**
   * 限制结束时间
   */
  public ProductBuyLimitVo setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MAX:
      if (value == null) {
        unsetMax();
      } else {
        setMax((Integer)value);
      }
      break;

    case MAX_VIP:
      if (value == null) {
        unsetMaxVip();
      } else {
        setMaxVip((Integer)value);
      }
      break;

    case MAX_CARD:
      if (value == null) {
        unsetMaxCard();
      } else {
        setMaxCard((Integer)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MAX:
      return Integer.valueOf(getMax());

    case MAX_VIP:
      return Integer.valueOf(getMaxVip());

    case MAX_CARD:
      return Integer.valueOf(getMaxCard());

    case START_TIME:
      return Long.valueOf(getStartTime());

    case END_TIME:
      return Long.valueOf(getEndTime());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MAX:
      return isSetMax();
    case MAX_VIP:
      return isSetMaxVip();
    case MAX_CARD:
      return isSetMaxCard();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProductBuyLimitVo)
      return this.equals((ProductBuyLimitVo)that);
    return false;
  }

  public boolean equals(ProductBuyLimitVo that) {
    if (that == null)
      return false;

    boolean this_present_max = true;
    boolean that_present_max = true;
    if (this_present_max || that_present_max) {
      if (!(this_present_max && that_present_max))
        return false;
      if (this.max != that.max)
        return false;
    }

    boolean this_present_maxVip = true;
    boolean that_present_maxVip = true;
    if (this_present_maxVip || that_present_maxVip) {
      if (!(this_present_maxVip && that_present_maxVip))
        return false;
      if (this.maxVip != that.maxVip)
        return false;
    }

    boolean this_present_maxCard = true;
    boolean that_present_maxCard = true;
    if (this_present_maxCard || that_present_maxCard) {
      if (!(this_present_maxCard && that_present_maxCard))
        return false;
      if (this.maxCard != that.maxCard)
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_max = true;
    list.add(present_max);
    if (present_max)
      list.add(max);

    boolean present_maxVip = true;
    list.add(present_maxVip);
    if (present_maxVip)
      list.add(maxVip);

    boolean present_maxCard = true;
    list.add(present_maxCard);
    if (present_maxCard)
      list.add(maxCard);

    boolean present_startTime = true;
    list.add(present_startTime);
    if (present_startTime)
      list.add(startTime);

    boolean present_endTime = true;
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    return list.hashCode();
  }

  @Override
  public int compareTo(ProductBuyLimitVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMax()).compareTo(other.isSetMax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.max, other.max);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxVip()).compareTo(other.isSetMaxVip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxVip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxVip, other.maxVip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxCard()).compareTo(other.isSetMaxCard());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxCard()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxCard, other.maxCard);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProductBuyLimitVo(");
    boolean first = true;

    sb.append("max:");
    sb.append(this.max);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxVip:");
    sb.append(this.maxVip);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxCard:");
    sb.append(this.maxCard);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductBuyLimitVoStandardSchemeFactory implements SchemeFactory {
    public ProductBuyLimitVoStandardScheme getScheme() {
      return new ProductBuyLimitVoStandardScheme();
    }
  }

  private static class ProductBuyLimitVoStandardScheme extends StandardScheme<ProductBuyLimitVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProductBuyLimitVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MAX
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.max = iprot.readI32();
              struct.setMaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MAX_VIP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxVip = iprot.readI32();
              struct.setMaxVipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MAX_CARD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxCard = iprot.readI32();
              struct.setMaxCardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProductBuyLimitVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(MAX_FIELD_DESC);
      oprot.writeI32(struct.max);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_VIP_FIELD_DESC);
      oprot.writeI32(struct.maxVip);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_CARD_FIELD_DESC);
      oprot.writeI32(struct.maxCard);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductBuyLimitVoTupleSchemeFactory implements SchemeFactory {
    public ProductBuyLimitVoTupleScheme getScheme() {
      return new ProductBuyLimitVoTupleScheme();
    }
  }

  private static class ProductBuyLimitVoTupleScheme extends TupleScheme<ProductBuyLimitVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProductBuyLimitVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMax()) {
        optionals.set(0);
      }
      if (struct.isSetMaxVip()) {
        optionals.set(1);
      }
      if (struct.isSetMaxCard()) {
        optionals.set(2);
      }
      if (struct.isSetStartTime()) {
        optionals.set(3);
      }
      if (struct.isSetEndTime()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetMax()) {
        oprot.writeI32(struct.max);
      }
      if (struct.isSetMaxVip()) {
        oprot.writeI32(struct.maxVip);
      }
      if (struct.isSetMaxCard()) {
        oprot.writeI32(struct.maxCard);
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProductBuyLimitVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.max = iprot.readI32();
        struct.setMaxIsSet(true);
      }
      if (incoming.get(1)) {
        struct.maxVip = iprot.readI32();
        struct.setMaxVipIsSet(true);
      }
      if (incoming.get(2)) {
        struct.maxCard = iprot.readI32();
        struct.setMaxCardIsSet(true);
      }
      if (incoming.get(3)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
    }
  }

}

