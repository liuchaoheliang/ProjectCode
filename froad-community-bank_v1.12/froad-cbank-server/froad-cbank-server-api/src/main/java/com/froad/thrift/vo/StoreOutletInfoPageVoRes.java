/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 门店收藏分页的响应结果
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class StoreOutletInfoPageVoRes implements org.apache.thrift.TBase<StoreOutletInfoPageVoRes, StoreOutletInfoPageVoRes._Fields>, java.io.Serializable, Cloneable, Comparable<StoreOutletInfoPageVoRes> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("StoreOutletInfoPageVoRes");

  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField STORE_OUTLET_INFO_VO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("storeOutletInfoVoList", org.apache.thrift.protocol.TType.LIST, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new StoreOutletInfoPageVoResStandardSchemeFactory());
    schemes.put(TupleScheme.class, new StoreOutletInfoPageVoResTupleSchemeFactory());
  }

  /**
   * 分页基础信息
   */
  public com.froad.thrift.vo.PageVo page; // required
  /**
   * 门店收藏信息列表
   */
  public List<StoreOutletInfoVo> storeOutletInfoVoList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 分页基础信息
     */
    PAGE((short)1, "page"),
    /**
     * 门店收藏信息列表
     */
    STORE_OUTLET_INFO_VO_LIST((short)2, "storeOutletInfoVoList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PAGE
          return PAGE;
        case 2: // STORE_OUTLET_INFO_VO_LIST
          return STORE_OUTLET_INFO_VO_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
    tmpMap.put(_Fields.STORE_OUTLET_INFO_VO_LIST, new org.apache.thrift.meta_data.FieldMetaData("storeOutletInfoVoList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StoreOutletInfoVo.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(StoreOutletInfoPageVoRes.class, metaDataMap);
  }

  public StoreOutletInfoPageVoRes() {
  }

  public StoreOutletInfoPageVoRes(
    com.froad.thrift.vo.PageVo page,
    List<StoreOutletInfoVo> storeOutletInfoVoList)
  {
    this();
    this.page = page;
    this.storeOutletInfoVoList = storeOutletInfoVoList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public StoreOutletInfoPageVoRes(StoreOutletInfoPageVoRes other) {
    if (other.isSetPage()) {
      this.page = new com.froad.thrift.vo.PageVo(other.page);
    }
    if (other.isSetStoreOutletInfoVoList()) {
      List<StoreOutletInfoVo> __this__storeOutletInfoVoList = new ArrayList<StoreOutletInfoVo>(other.storeOutletInfoVoList.size());
      for (StoreOutletInfoVo other_element : other.storeOutletInfoVoList) {
        __this__storeOutletInfoVoList.add(new StoreOutletInfoVo(other_element));
      }
      this.storeOutletInfoVoList = __this__storeOutletInfoVoList;
    }
  }

  public StoreOutletInfoPageVoRes deepCopy() {
    return new StoreOutletInfoPageVoRes(this);
  }

  @Override
  public void clear() {
    this.page = null;
    this.storeOutletInfoVoList = null;
  }

  /**
   * 分页基础信息
   */
  public com.froad.thrift.vo.PageVo getPage() {
    return this.page;
  }

  /**
   * 分页基础信息
   */
  public StoreOutletInfoPageVoRes setPage(com.froad.thrift.vo.PageVo page) {
    this.page = page;
    return this;
  }

  public void unsetPage() {
    this.page = null;
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return this.page != null;
  }

  public void setPageIsSet(boolean value) {
    if (!value) {
      this.page = null;
    }
  }

  public int getStoreOutletInfoVoListSize() {
    return (this.storeOutletInfoVoList == null) ? 0 : this.storeOutletInfoVoList.size();
  }

  public java.util.Iterator<StoreOutletInfoVo> getStoreOutletInfoVoListIterator() {
    return (this.storeOutletInfoVoList == null) ? null : this.storeOutletInfoVoList.iterator();
  }

  public void addToStoreOutletInfoVoList(StoreOutletInfoVo elem) {
    if (this.storeOutletInfoVoList == null) {
      this.storeOutletInfoVoList = new ArrayList<StoreOutletInfoVo>();
    }
    this.storeOutletInfoVoList.add(elem);
  }

  /**
   * 门店收藏信息列表
   */
  public List<StoreOutletInfoVo> getStoreOutletInfoVoList() {
    return this.storeOutletInfoVoList;
  }

  /**
   * 门店收藏信息列表
   */
  public StoreOutletInfoPageVoRes setStoreOutletInfoVoList(List<StoreOutletInfoVo> storeOutletInfoVoList) {
    this.storeOutletInfoVoList = storeOutletInfoVoList;
    return this;
  }

  public void unsetStoreOutletInfoVoList() {
    this.storeOutletInfoVoList = null;
  }

  /** Returns true if field storeOutletInfoVoList is set (has been assigned a value) and false otherwise */
  public boolean isSetStoreOutletInfoVoList() {
    return this.storeOutletInfoVoList != null;
  }

  public void setStoreOutletInfoVoListIsSet(boolean value) {
    if (!value) {
      this.storeOutletInfoVoList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((com.froad.thrift.vo.PageVo)value);
      }
      break;

    case STORE_OUTLET_INFO_VO_LIST:
      if (value == null) {
        unsetStoreOutletInfoVoList();
      } else {
        setStoreOutletInfoVoList((List<StoreOutletInfoVo>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PAGE:
      return getPage();

    case STORE_OUTLET_INFO_VO_LIST:
      return getStoreOutletInfoVoList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PAGE:
      return isSetPage();
    case STORE_OUTLET_INFO_VO_LIST:
      return isSetStoreOutletInfoVoList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof StoreOutletInfoPageVoRes)
      return this.equals((StoreOutletInfoPageVoRes)that);
    return false;
  }

  public boolean equals(StoreOutletInfoPageVoRes that) {
    if (that == null)
      return false;

    boolean this_present_page = true && this.isSetPage();
    boolean that_present_page = true && that.isSetPage();
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (!this.page.equals(that.page))
        return false;
    }

    boolean this_present_storeOutletInfoVoList = true && this.isSetStoreOutletInfoVoList();
    boolean that_present_storeOutletInfoVoList = true && that.isSetStoreOutletInfoVoList();
    if (this_present_storeOutletInfoVoList || that_present_storeOutletInfoVoList) {
      if (!(this_present_storeOutletInfoVoList && that_present_storeOutletInfoVoList))
        return false;
      if (!this.storeOutletInfoVoList.equals(that.storeOutletInfoVoList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_page = true && (isSetPage());
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_storeOutletInfoVoList = true && (isSetStoreOutletInfoVoList());
    list.add(present_storeOutletInfoVoList);
    if (present_storeOutletInfoVoList)
      list.add(storeOutletInfoVoList);

    return list.hashCode();
  }

  @Override
  public int compareTo(StoreOutletInfoPageVoRes other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStoreOutletInfoVoList()).compareTo(other.isSetStoreOutletInfoVoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStoreOutletInfoVoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storeOutletInfoVoList, other.storeOutletInfoVoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("StoreOutletInfoPageVoRes(");
    boolean first = true;

    sb.append("page:");
    if (this.page == null) {
      sb.append("null");
    } else {
      sb.append(this.page);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("storeOutletInfoVoList:");
    if (this.storeOutletInfoVoList == null) {
      sb.append("null");
    } else {
      sb.append(this.storeOutletInfoVoList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (page != null) {
      page.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class StoreOutletInfoPageVoResStandardSchemeFactory implements SchemeFactory {
    public StoreOutletInfoPageVoResStandardScheme getScheme() {
      return new StoreOutletInfoPageVoResStandardScheme();
    }
  }

  private static class StoreOutletInfoPageVoResStandardScheme extends StandardScheme<StoreOutletInfoPageVoRes> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, StoreOutletInfoPageVoRes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.page = new com.froad.thrift.vo.PageVo();
              struct.page.read(iprot);
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STORE_OUTLET_INFO_VO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.storeOutletInfoVoList = new ArrayList<StoreOutletInfoVo>(_list16.size);
                StoreOutletInfoVo _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = new StoreOutletInfoVo();
                  _elem17.read(iprot);
                  struct.storeOutletInfoVoList.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setStoreOutletInfoVoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, StoreOutletInfoPageVoRes struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.page != null) {
        oprot.writeFieldBegin(PAGE_FIELD_DESC);
        struct.page.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.storeOutletInfoVoList != null) {
        oprot.writeFieldBegin(STORE_OUTLET_INFO_VO_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.storeOutletInfoVoList.size()));
          for (StoreOutletInfoVo _iter19 : struct.storeOutletInfoVoList)
          {
            _iter19.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class StoreOutletInfoPageVoResTupleSchemeFactory implements SchemeFactory {
    public StoreOutletInfoPageVoResTupleScheme getScheme() {
      return new StoreOutletInfoPageVoResTupleScheme();
    }
  }

  private static class StoreOutletInfoPageVoResTupleScheme extends TupleScheme<StoreOutletInfoPageVoRes> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, StoreOutletInfoPageVoRes struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPage()) {
        optionals.set(0);
      }
      if (struct.isSetStoreOutletInfoVoList()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetPage()) {
        struct.page.write(oprot);
      }
      if (struct.isSetStoreOutletInfoVoList()) {
        {
          oprot.writeI32(struct.storeOutletInfoVoList.size());
          for (StoreOutletInfoVo _iter20 : struct.storeOutletInfoVoList)
          {
            _iter20.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, StoreOutletInfoPageVoRes struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.page = new com.froad.thrift.vo.PageVo();
        struct.page.read(iprot);
        struct.setPageIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.storeOutletInfoVoList = new ArrayList<StoreOutletInfoVo>(_list21.size);
          StoreOutletInfoVo _elem22;
          for (int _i23 = 0; _i23 < _list21.size; ++_i23)
          {
            _elem22 = new StoreOutletInfoVo();
            _elem22.read(iprot);
            struct.storeOutletInfoVoList.add(_elem22);
          }
        }
        struct.setStoreOutletInfoVoListIsSet(true);
      }
    }
  }

}

