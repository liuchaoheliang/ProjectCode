/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 门店临时信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class OutletTempVo implements org.apache.thrift.TBase<OutletTempVo, OutletTempVo._Fields>, java.io.Serializable, Cloneable, Comparable<OutletTempVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OutletTempVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AUDIT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("auditId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField OUTLET_FULL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletFullName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField BUSINESS_HOURS_FIELD_DESC = new org.apache.thrift.protocol.TField("businessHours", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField ZIP_FIELD_DESC = new org.apache.thrift.protocol.TField("zip", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField FAX_FIELD_DESC = new org.apache.thrift.protocol.TField("fax", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField CONTACT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("contactName", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField CONTACT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("contactPhone", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField CONTACT_EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("contactEmail", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField LONGITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("longitude", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField LATITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("latitude", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField PREFER_DETAILS_FIELD_DESC = new org.apache.thrift.protocol.TField("preferDetails", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField DISCOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("discount", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField DISCOUNT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("discountCode", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField DISCOUNT_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("discountRate", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField ACCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("acctName", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField ACCT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("acctNumber", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField PHOTO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("photoList", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField PRIMEVAL_FIELD_DESC = new org.apache.thrift.protocol.TField("primeval", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField OUTLET_CATEGORY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletCategoryId", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField OUTLET_CATEGORY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletCategoryName", org.apache.thrift.protocol.TType.STRING, (short)30);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OutletTempVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OutletTempVoTupleSchemeFactory());
  }

  /**
   * 主键ID
   */
  public long id; // optional
  /**
   * 创建时间
   */
  public long createTime; // optional
  /**
   * 客户端ID
   */
  public String clientId; // optional
  /**
   * 审核流水号
   */
  public String auditId; // optional
  /**
   * 商户ID
   */
  public String merchantId; // optional
  /**
   * 门店Id
   */
  public String outletId; // optional
  /**
   * 地区Id
   */
  public String areaId; // optional
  /**
   * 门店名称
   */
  public String outletName; // optional
  /**
   * 门店全称
   */
  public String outletFullName; // optional
  /**
   * 地址
   */
  public String address; // optional
  /**
   * 营业时间
   */
  public String businessHours; // optional
  /**
   * 邮政编码
   */
  public String zip; // optional
  /**
   * 传真
   */
  public String fax; // optional
  /**
   * 电话
   */
  public String phone; // optional
  /**
   * 联系人姓名
   */
  public String contactName; // optional
  /**
   * 联系人电话
   */
  public String contactPhone; // optional
  /**
   * 联系人邮箱
   */
  public String contactEmail; // optional
  /**
   * 经度
   */
  public String longitude; // optional
  /**
   * 纬度
   */
  public String latitude; // optional
  /**
   * 描述
   */
  public String description; // optional
  /**
   * 优惠详情
   */
  public String preferDetails; // optional
  /**
   * 折扣
   */
  public String discount; // optional
  /**
   * 优惠折扣码
   */
  public String discountCode; // optional
  /**
   * 优惠折扣比
   */
  public String discountRate; // optional
  /**
   * 账户名
   */
  public String acctName; // optional
  /**
   * 账户号
   */
  public String acctNumber; // optional
  /**
   * 相册列表
   */
  public String photoList; // optional
  /**
   * 原始门店信息
   */
  public String primeval; // optional
  /**
   * 门店分类id
   */
  public String outletCategoryId; // optional
  /**
   * 门店分类名称
   */
  public String outletCategoryName; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键ID
     */
    ID((short)1, "id"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)2, "createTime"),
    /**
     * 客户端ID
     */
    CLIENT_ID((short)3, "clientId"),
    /**
     * 审核流水号
     */
    AUDIT_ID((short)4, "auditId"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)5, "merchantId"),
    /**
     * 门店Id
     */
    OUTLET_ID((short)6, "outletId"),
    /**
     * 地区Id
     */
    AREA_ID((short)7, "areaId"),
    /**
     * 门店名称
     */
    OUTLET_NAME((short)8, "outletName"),
    /**
     * 门店全称
     */
    OUTLET_FULL_NAME((short)9, "outletFullName"),
    /**
     * 地址
     */
    ADDRESS((short)10, "address"),
    /**
     * 营业时间
     */
    BUSINESS_HOURS((short)11, "businessHours"),
    /**
     * 邮政编码
     */
    ZIP((short)12, "zip"),
    /**
     * 传真
     */
    FAX((short)13, "fax"),
    /**
     * 电话
     */
    PHONE((short)14, "phone"),
    /**
     * 联系人姓名
     */
    CONTACT_NAME((short)15, "contactName"),
    /**
     * 联系人电话
     */
    CONTACT_PHONE((short)16, "contactPhone"),
    /**
     * 联系人邮箱
     */
    CONTACT_EMAIL((short)17, "contactEmail"),
    /**
     * 经度
     */
    LONGITUDE((short)18, "longitude"),
    /**
     * 纬度
     */
    LATITUDE((short)19, "latitude"),
    /**
     * 描述
     */
    DESCRIPTION((short)20, "description"),
    /**
     * 优惠详情
     */
    PREFER_DETAILS((short)21, "preferDetails"),
    /**
     * 折扣
     */
    DISCOUNT((short)22, "discount"),
    /**
     * 优惠折扣码
     */
    DISCOUNT_CODE((short)23, "discountCode"),
    /**
     * 优惠折扣比
     */
    DISCOUNT_RATE((short)24, "discountRate"),
    /**
     * 账户名
     */
    ACCT_NAME((short)25, "acctName"),
    /**
     * 账户号
     */
    ACCT_NUMBER((short)26, "acctNumber"),
    /**
     * 相册列表
     */
    PHOTO_LIST((short)27, "photoList"),
    /**
     * 原始门店信息
     */
    PRIMEVAL((short)28, "primeval"),
    /**
     * 门店分类id
     */
    OUTLET_CATEGORY_ID((short)29, "outletCategoryId"),
    /**
     * 门店分类名称
     */
    OUTLET_CATEGORY_NAME((short)30, "outletCategoryName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // CLIENT_ID
          return CLIENT_ID;
        case 4: // AUDIT_ID
          return AUDIT_ID;
        case 5: // MERCHANT_ID
          return MERCHANT_ID;
        case 6: // OUTLET_ID
          return OUTLET_ID;
        case 7: // AREA_ID
          return AREA_ID;
        case 8: // OUTLET_NAME
          return OUTLET_NAME;
        case 9: // OUTLET_FULL_NAME
          return OUTLET_FULL_NAME;
        case 10: // ADDRESS
          return ADDRESS;
        case 11: // BUSINESS_HOURS
          return BUSINESS_HOURS;
        case 12: // ZIP
          return ZIP;
        case 13: // FAX
          return FAX;
        case 14: // PHONE
          return PHONE;
        case 15: // CONTACT_NAME
          return CONTACT_NAME;
        case 16: // CONTACT_PHONE
          return CONTACT_PHONE;
        case 17: // CONTACT_EMAIL
          return CONTACT_EMAIL;
        case 18: // LONGITUDE
          return LONGITUDE;
        case 19: // LATITUDE
          return LATITUDE;
        case 20: // DESCRIPTION
          return DESCRIPTION;
        case 21: // PREFER_DETAILS
          return PREFER_DETAILS;
        case 22: // DISCOUNT
          return DISCOUNT;
        case 23: // DISCOUNT_CODE
          return DISCOUNT_CODE;
        case 24: // DISCOUNT_RATE
          return DISCOUNT_RATE;
        case 25: // ACCT_NAME
          return ACCT_NAME;
        case 26: // ACCT_NUMBER
          return ACCT_NUMBER;
        case 27: // PHOTO_LIST
          return PHOTO_LIST;
        case 28: // PRIMEVAL
          return PRIMEVAL;
        case 29: // OUTLET_CATEGORY_ID
          return OUTLET_CATEGORY_ID;
        case 30: // OUTLET_CATEGORY_NAME
          return OUTLET_CATEGORY_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CREATE_TIME,_Fields.CLIENT_ID,_Fields.AUDIT_ID,_Fields.MERCHANT_ID,_Fields.OUTLET_ID,_Fields.AREA_ID,_Fields.OUTLET_NAME,_Fields.OUTLET_FULL_NAME,_Fields.ADDRESS,_Fields.BUSINESS_HOURS,_Fields.ZIP,_Fields.FAX,_Fields.PHONE,_Fields.CONTACT_NAME,_Fields.CONTACT_PHONE,_Fields.CONTACT_EMAIL,_Fields.LONGITUDE,_Fields.LATITUDE,_Fields.DESCRIPTION,_Fields.PREFER_DETAILS,_Fields.DISCOUNT,_Fields.DISCOUNT_CODE,_Fields.DISCOUNT_RATE,_Fields.ACCT_NAME,_Fields.ACCT_NUMBER,_Fields.PHOTO_LIST,_Fields.PRIMEVAL,_Fields.OUTLET_CATEGORY_ID,_Fields.OUTLET_CATEGORY_NAME};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_ID, new org.apache.thrift.meta_data.FieldMetaData("auditId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_FULL_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletFullName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_HOURS, new org.apache.thrift.meta_data.FieldMetaData("businessHours", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ZIP, new org.apache.thrift.meta_data.FieldMetaData("zip", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FAX, new org.apache.thrift.meta_data.FieldMetaData("fax", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_NAME, new org.apache.thrift.meta_data.FieldMetaData("contactName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("contactPhone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_EMAIL, new org.apache.thrift.meta_data.FieldMetaData("contactEmail", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LONGITUDE, new org.apache.thrift.meta_data.FieldMetaData("longitude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LATITUDE, new org.apache.thrift.meta_data.FieldMetaData("latitude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PREFER_DETAILS, new org.apache.thrift.meta_data.FieldMetaData("preferDetails", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISCOUNT, new org.apache.thrift.meta_data.FieldMetaData("discount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISCOUNT_CODE, new org.apache.thrift.meta_data.FieldMetaData("discountCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISCOUNT_RATE, new org.apache.thrift.meta_data.FieldMetaData("discountRate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("acctName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("acctNumber", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHOTO_LIST, new org.apache.thrift.meta_data.FieldMetaData("photoList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRIMEVAL, new org.apache.thrift.meta_data.FieldMetaData("primeval", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_CATEGORY_ID, new org.apache.thrift.meta_data.FieldMetaData("outletCategoryId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_CATEGORY_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletCategoryName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OutletTempVo.class, metaDataMap);
  }

  public OutletTempVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OutletTempVo(OutletTempVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.createTime = other.createTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetAuditId()) {
      this.auditId = other.auditId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
    if (other.isSetAreaId()) {
      this.areaId = other.areaId;
    }
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    if (other.isSetOutletFullName()) {
      this.outletFullName = other.outletFullName;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetBusinessHours()) {
      this.businessHours = other.businessHours;
    }
    if (other.isSetZip()) {
      this.zip = other.zip;
    }
    if (other.isSetFax()) {
      this.fax = other.fax;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetContactName()) {
      this.contactName = other.contactName;
    }
    if (other.isSetContactPhone()) {
      this.contactPhone = other.contactPhone;
    }
    if (other.isSetContactEmail()) {
      this.contactEmail = other.contactEmail;
    }
    if (other.isSetLongitude()) {
      this.longitude = other.longitude;
    }
    if (other.isSetLatitude()) {
      this.latitude = other.latitude;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetPreferDetails()) {
      this.preferDetails = other.preferDetails;
    }
    if (other.isSetDiscount()) {
      this.discount = other.discount;
    }
    if (other.isSetDiscountCode()) {
      this.discountCode = other.discountCode;
    }
    if (other.isSetDiscountRate()) {
      this.discountRate = other.discountRate;
    }
    if (other.isSetAcctName()) {
      this.acctName = other.acctName;
    }
    if (other.isSetAcctNumber()) {
      this.acctNumber = other.acctNumber;
    }
    if (other.isSetPhotoList()) {
      this.photoList = other.photoList;
    }
    if (other.isSetPrimeval()) {
      this.primeval = other.primeval;
    }
    if (other.isSetOutletCategoryId()) {
      this.outletCategoryId = other.outletCategoryId;
    }
    if (other.isSetOutletCategoryName()) {
      this.outletCategoryName = other.outletCategoryName;
    }
  }

  public OutletTempVo deepCopy() {
    return new OutletTempVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.clientId = null;
    this.auditId = null;
    this.merchantId = null;
    this.outletId = null;
    this.areaId = null;
    this.outletName = null;
    this.outletFullName = null;
    this.address = null;
    this.businessHours = null;
    this.zip = null;
    this.fax = null;
    this.phone = null;
    this.contactName = null;
    this.contactPhone = null;
    this.contactEmail = null;
    this.longitude = null;
    this.latitude = null;
    this.description = null;
    this.preferDetails = null;
    this.discount = null;
    this.discountCode = null;
    this.discountRate = null;
    this.acctName = null;
    this.acctNumber = null;
    this.photoList = null;
    this.primeval = null;
    this.outletCategoryId = null;
    this.outletCategoryName = null;
  }

  /**
   * 主键ID
   */
  public long getId() {
    return this.id;
  }

  /**
   * 主键ID
   */
  public OutletTempVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public OutletTempVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public OutletTempVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 审核流水号
   */
  public String getAuditId() {
    return this.auditId;
  }

  /**
   * 审核流水号
   */
  public OutletTempVo setAuditId(String auditId) {
    this.auditId = auditId;
    return this;
  }

  public void unsetAuditId() {
    this.auditId = null;
  }

  /** Returns true if field auditId is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditId() {
    return this.auditId != null;
  }

  public void setAuditIdIsSet(boolean value) {
    if (!value) {
      this.auditId = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public OutletTempVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 门店Id
   */
  public String getOutletId() {
    return this.outletId;
  }

  /**
   * 门店Id
   */
  public OutletTempVo setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  /**
   * 地区Id
   */
  public String getAreaId() {
    return this.areaId;
  }

  /**
   * 地区Id
   */
  public OutletTempVo setAreaId(String areaId) {
    this.areaId = areaId;
    return this;
  }

  public void unsetAreaId() {
    this.areaId = null;
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return this.areaId != null;
  }

  public void setAreaIdIsSet(boolean value) {
    if (!value) {
      this.areaId = null;
    }
  }

  /**
   * 门店名称
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 门店名称
   */
  public OutletTempVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 门店全称
   */
  public String getOutletFullName() {
    return this.outletFullName;
  }

  /**
   * 门店全称
   */
  public OutletTempVo setOutletFullName(String outletFullName) {
    this.outletFullName = outletFullName;
    return this;
  }

  public void unsetOutletFullName() {
    this.outletFullName = null;
  }

  /** Returns true if field outletFullName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletFullName() {
    return this.outletFullName != null;
  }

  public void setOutletFullNameIsSet(boolean value) {
    if (!value) {
      this.outletFullName = null;
    }
  }

  /**
   * 地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 地址
   */
  public OutletTempVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 营业时间
   */
  public String getBusinessHours() {
    return this.businessHours;
  }

  /**
   * 营业时间
   */
  public OutletTempVo setBusinessHours(String businessHours) {
    this.businessHours = businessHours;
    return this;
  }

  public void unsetBusinessHours() {
    this.businessHours = null;
  }

  /** Returns true if field businessHours is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessHours() {
    return this.businessHours != null;
  }

  public void setBusinessHoursIsSet(boolean value) {
    if (!value) {
      this.businessHours = null;
    }
  }

  /**
   * 邮政编码
   */
  public String getZip() {
    return this.zip;
  }

  /**
   * 邮政编码
   */
  public OutletTempVo setZip(String zip) {
    this.zip = zip;
    return this;
  }

  public void unsetZip() {
    this.zip = null;
  }

  /** Returns true if field zip is set (has been assigned a value) and false otherwise */
  public boolean isSetZip() {
    return this.zip != null;
  }

  public void setZipIsSet(boolean value) {
    if (!value) {
      this.zip = null;
    }
  }

  /**
   * 传真
   */
  public String getFax() {
    return this.fax;
  }

  /**
   * 传真
   */
  public OutletTempVo setFax(String fax) {
    this.fax = fax;
    return this;
  }

  public void unsetFax() {
    this.fax = null;
  }

  /** Returns true if field fax is set (has been assigned a value) and false otherwise */
  public boolean isSetFax() {
    return this.fax != null;
  }

  public void setFaxIsSet(boolean value) {
    if (!value) {
      this.fax = null;
    }
  }

  /**
   * 电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 电话
   */
  public OutletTempVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 联系人姓名
   */
  public String getContactName() {
    return this.contactName;
  }

  /**
   * 联系人姓名
   */
  public OutletTempVo setContactName(String contactName) {
    this.contactName = contactName;
    return this;
  }

  public void unsetContactName() {
    this.contactName = null;
  }

  /** Returns true if field contactName is set (has been assigned a value) and false otherwise */
  public boolean isSetContactName() {
    return this.contactName != null;
  }

  public void setContactNameIsSet(boolean value) {
    if (!value) {
      this.contactName = null;
    }
  }

  /**
   * 联系人电话
   */
  public String getContactPhone() {
    return this.contactPhone;
  }

  /**
   * 联系人电话
   */
  public OutletTempVo setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
    return this;
  }

  public void unsetContactPhone() {
    this.contactPhone = null;
  }

  /** Returns true if field contactPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetContactPhone() {
    return this.contactPhone != null;
  }

  public void setContactPhoneIsSet(boolean value) {
    if (!value) {
      this.contactPhone = null;
    }
  }

  /**
   * 联系人邮箱
   */
  public String getContactEmail() {
    return this.contactEmail;
  }

  /**
   * 联系人邮箱
   */
  public OutletTempVo setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
    return this;
  }

  public void unsetContactEmail() {
    this.contactEmail = null;
  }

  /** Returns true if field contactEmail is set (has been assigned a value) and false otherwise */
  public boolean isSetContactEmail() {
    return this.contactEmail != null;
  }

  public void setContactEmailIsSet(boolean value) {
    if (!value) {
      this.contactEmail = null;
    }
  }

  /**
   * 经度
   */
  public String getLongitude() {
    return this.longitude;
  }

  /**
   * 经度
   */
  public OutletTempVo setLongitude(String longitude) {
    this.longitude = longitude;
    return this;
  }

  public void unsetLongitude() {
    this.longitude = null;
  }

  /** Returns true if field longitude is set (has been assigned a value) and false otherwise */
  public boolean isSetLongitude() {
    return this.longitude != null;
  }

  public void setLongitudeIsSet(boolean value) {
    if (!value) {
      this.longitude = null;
    }
  }

  /**
   * 纬度
   */
  public String getLatitude() {
    return this.latitude;
  }

  /**
   * 纬度
   */
  public OutletTempVo setLatitude(String latitude) {
    this.latitude = latitude;
    return this;
  }

  public void unsetLatitude() {
    this.latitude = null;
  }

  /** Returns true if field latitude is set (has been assigned a value) and false otherwise */
  public boolean isSetLatitude() {
    return this.latitude != null;
  }

  public void setLatitudeIsSet(boolean value) {
    if (!value) {
      this.latitude = null;
    }
  }

  /**
   * 描述
   */
  public String getDescription() {
    return this.description;
  }

  /**
   * 描述
   */
  public OutletTempVo setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  /**
   * 优惠详情
   */
  public String getPreferDetails() {
    return this.preferDetails;
  }

  /**
   * 优惠详情
   */
  public OutletTempVo setPreferDetails(String preferDetails) {
    this.preferDetails = preferDetails;
    return this;
  }

  public void unsetPreferDetails() {
    this.preferDetails = null;
  }

  /** Returns true if field preferDetails is set (has been assigned a value) and false otherwise */
  public boolean isSetPreferDetails() {
    return this.preferDetails != null;
  }

  public void setPreferDetailsIsSet(boolean value) {
    if (!value) {
      this.preferDetails = null;
    }
  }

  /**
   * 折扣
   */
  public String getDiscount() {
    return this.discount;
  }

  /**
   * 折扣
   */
  public OutletTempVo setDiscount(String discount) {
    this.discount = discount;
    return this;
  }

  public void unsetDiscount() {
    this.discount = null;
  }

  /** Returns true if field discount is set (has been assigned a value) and false otherwise */
  public boolean isSetDiscount() {
    return this.discount != null;
  }

  public void setDiscountIsSet(boolean value) {
    if (!value) {
      this.discount = null;
    }
  }

  /**
   * 优惠折扣码
   */
  public String getDiscountCode() {
    return this.discountCode;
  }

  /**
   * 优惠折扣码
   */
  public OutletTempVo setDiscountCode(String discountCode) {
    this.discountCode = discountCode;
    return this;
  }

  public void unsetDiscountCode() {
    this.discountCode = null;
  }

  /** Returns true if field discountCode is set (has been assigned a value) and false otherwise */
  public boolean isSetDiscountCode() {
    return this.discountCode != null;
  }

  public void setDiscountCodeIsSet(boolean value) {
    if (!value) {
      this.discountCode = null;
    }
  }

  /**
   * 优惠折扣比
   */
  public String getDiscountRate() {
    return this.discountRate;
  }

  /**
   * 优惠折扣比
   */
  public OutletTempVo setDiscountRate(String discountRate) {
    this.discountRate = discountRate;
    return this;
  }

  public void unsetDiscountRate() {
    this.discountRate = null;
  }

  /** Returns true if field discountRate is set (has been assigned a value) and false otherwise */
  public boolean isSetDiscountRate() {
    return this.discountRate != null;
  }

  public void setDiscountRateIsSet(boolean value) {
    if (!value) {
      this.discountRate = null;
    }
  }

  /**
   * 账户名
   */
  public String getAcctName() {
    return this.acctName;
  }

  /**
   * 账户名
   */
  public OutletTempVo setAcctName(String acctName) {
    this.acctName = acctName;
    return this;
  }

  public void unsetAcctName() {
    this.acctName = null;
  }

  /** Returns true if field acctName is set (has been assigned a value) and false otherwise */
  public boolean isSetAcctName() {
    return this.acctName != null;
  }

  public void setAcctNameIsSet(boolean value) {
    if (!value) {
      this.acctName = null;
    }
  }

  /**
   * 账户号
   */
  public String getAcctNumber() {
    return this.acctNumber;
  }

  /**
   * 账户号
   */
  public OutletTempVo setAcctNumber(String acctNumber) {
    this.acctNumber = acctNumber;
    return this;
  }

  public void unsetAcctNumber() {
    this.acctNumber = null;
  }

  /** Returns true if field acctNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetAcctNumber() {
    return this.acctNumber != null;
  }

  public void setAcctNumberIsSet(boolean value) {
    if (!value) {
      this.acctNumber = null;
    }
  }

  /**
   * 相册列表
   */
  public String getPhotoList() {
    return this.photoList;
  }

  /**
   * 相册列表
   */
  public OutletTempVo setPhotoList(String photoList) {
    this.photoList = photoList;
    return this;
  }

  public void unsetPhotoList() {
    this.photoList = null;
  }

  /** Returns true if field photoList is set (has been assigned a value) and false otherwise */
  public boolean isSetPhotoList() {
    return this.photoList != null;
  }

  public void setPhotoListIsSet(boolean value) {
    if (!value) {
      this.photoList = null;
    }
  }

  /**
   * 原始门店信息
   */
  public String getPrimeval() {
    return this.primeval;
  }

  /**
   * 原始门店信息
   */
  public OutletTempVo setPrimeval(String primeval) {
    this.primeval = primeval;
    return this;
  }

  public void unsetPrimeval() {
    this.primeval = null;
  }

  /** Returns true if field primeval is set (has been assigned a value) and false otherwise */
  public boolean isSetPrimeval() {
    return this.primeval != null;
  }

  public void setPrimevalIsSet(boolean value) {
    if (!value) {
      this.primeval = null;
    }
  }

  /**
   * 门店分类id
   */
  public String getOutletCategoryId() {
    return this.outletCategoryId;
  }

  /**
   * 门店分类id
   */
  public OutletTempVo setOutletCategoryId(String outletCategoryId) {
    this.outletCategoryId = outletCategoryId;
    return this;
  }

  public void unsetOutletCategoryId() {
    this.outletCategoryId = null;
  }

  /** Returns true if field outletCategoryId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletCategoryId() {
    return this.outletCategoryId != null;
  }

  public void setOutletCategoryIdIsSet(boolean value) {
    if (!value) {
      this.outletCategoryId = null;
    }
  }

  /**
   * 门店分类名称
   */
  public String getOutletCategoryName() {
    return this.outletCategoryName;
  }

  /**
   * 门店分类名称
   */
  public OutletTempVo setOutletCategoryName(String outletCategoryName) {
    this.outletCategoryName = outletCategoryName;
    return this;
  }

  public void unsetOutletCategoryName() {
    this.outletCategoryName = null;
  }

  /** Returns true if field outletCategoryName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletCategoryName() {
    return this.outletCategoryName != null;
  }

  public void setOutletCategoryNameIsSet(boolean value) {
    if (!value) {
      this.outletCategoryName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case AUDIT_ID:
      if (value == null) {
        unsetAuditId();
      } else {
        setAuditId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((String)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case OUTLET_FULL_NAME:
      if (value == null) {
        unsetOutletFullName();
      } else {
        setOutletFullName((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case BUSINESS_HOURS:
      if (value == null) {
        unsetBusinessHours();
      } else {
        setBusinessHours((String)value);
      }
      break;

    case ZIP:
      if (value == null) {
        unsetZip();
      } else {
        setZip((String)value);
      }
      break;

    case FAX:
      if (value == null) {
        unsetFax();
      } else {
        setFax((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case CONTACT_NAME:
      if (value == null) {
        unsetContactName();
      } else {
        setContactName((String)value);
      }
      break;

    case CONTACT_PHONE:
      if (value == null) {
        unsetContactPhone();
      } else {
        setContactPhone((String)value);
      }
      break;

    case CONTACT_EMAIL:
      if (value == null) {
        unsetContactEmail();
      } else {
        setContactEmail((String)value);
      }
      break;

    case LONGITUDE:
      if (value == null) {
        unsetLongitude();
      } else {
        setLongitude((String)value);
      }
      break;

    case LATITUDE:
      if (value == null) {
        unsetLatitude();
      } else {
        setLatitude((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case PREFER_DETAILS:
      if (value == null) {
        unsetPreferDetails();
      } else {
        setPreferDetails((String)value);
      }
      break;

    case DISCOUNT:
      if (value == null) {
        unsetDiscount();
      } else {
        setDiscount((String)value);
      }
      break;

    case DISCOUNT_CODE:
      if (value == null) {
        unsetDiscountCode();
      } else {
        setDiscountCode((String)value);
      }
      break;

    case DISCOUNT_RATE:
      if (value == null) {
        unsetDiscountRate();
      } else {
        setDiscountRate((String)value);
      }
      break;

    case ACCT_NAME:
      if (value == null) {
        unsetAcctName();
      } else {
        setAcctName((String)value);
      }
      break;

    case ACCT_NUMBER:
      if (value == null) {
        unsetAcctNumber();
      } else {
        setAcctNumber((String)value);
      }
      break;

    case PHOTO_LIST:
      if (value == null) {
        unsetPhotoList();
      } else {
        setPhotoList((String)value);
      }
      break;

    case PRIMEVAL:
      if (value == null) {
        unsetPrimeval();
      } else {
        setPrimeval((String)value);
      }
      break;

    case OUTLET_CATEGORY_ID:
      if (value == null) {
        unsetOutletCategoryId();
      } else {
        setOutletCategoryId((String)value);
      }
      break;

    case OUTLET_CATEGORY_NAME:
      if (value == null) {
        unsetOutletCategoryName();
      } else {
        setOutletCategoryName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case CLIENT_ID:
      return getClientId();

    case AUDIT_ID:
      return getAuditId();

    case MERCHANT_ID:
      return getMerchantId();

    case OUTLET_ID:
      return getOutletId();

    case AREA_ID:
      return getAreaId();

    case OUTLET_NAME:
      return getOutletName();

    case OUTLET_FULL_NAME:
      return getOutletFullName();

    case ADDRESS:
      return getAddress();

    case BUSINESS_HOURS:
      return getBusinessHours();

    case ZIP:
      return getZip();

    case FAX:
      return getFax();

    case PHONE:
      return getPhone();

    case CONTACT_NAME:
      return getContactName();

    case CONTACT_PHONE:
      return getContactPhone();

    case CONTACT_EMAIL:
      return getContactEmail();

    case LONGITUDE:
      return getLongitude();

    case LATITUDE:
      return getLatitude();

    case DESCRIPTION:
      return getDescription();

    case PREFER_DETAILS:
      return getPreferDetails();

    case DISCOUNT:
      return getDiscount();

    case DISCOUNT_CODE:
      return getDiscountCode();

    case DISCOUNT_RATE:
      return getDiscountRate();

    case ACCT_NAME:
      return getAcctName();

    case ACCT_NUMBER:
      return getAcctNumber();

    case PHOTO_LIST:
      return getPhotoList();

    case PRIMEVAL:
      return getPrimeval();

    case OUTLET_CATEGORY_ID:
      return getOutletCategoryId();

    case OUTLET_CATEGORY_NAME:
      return getOutletCategoryName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case CLIENT_ID:
      return isSetClientId();
    case AUDIT_ID:
      return isSetAuditId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case OUTLET_ID:
      return isSetOutletId();
    case AREA_ID:
      return isSetAreaId();
    case OUTLET_NAME:
      return isSetOutletName();
    case OUTLET_FULL_NAME:
      return isSetOutletFullName();
    case ADDRESS:
      return isSetAddress();
    case BUSINESS_HOURS:
      return isSetBusinessHours();
    case ZIP:
      return isSetZip();
    case FAX:
      return isSetFax();
    case PHONE:
      return isSetPhone();
    case CONTACT_NAME:
      return isSetContactName();
    case CONTACT_PHONE:
      return isSetContactPhone();
    case CONTACT_EMAIL:
      return isSetContactEmail();
    case LONGITUDE:
      return isSetLongitude();
    case LATITUDE:
      return isSetLatitude();
    case DESCRIPTION:
      return isSetDescription();
    case PREFER_DETAILS:
      return isSetPreferDetails();
    case DISCOUNT:
      return isSetDiscount();
    case DISCOUNT_CODE:
      return isSetDiscountCode();
    case DISCOUNT_RATE:
      return isSetDiscountRate();
    case ACCT_NAME:
      return isSetAcctName();
    case ACCT_NUMBER:
      return isSetAcctNumber();
    case PHOTO_LIST:
      return isSetPhotoList();
    case PRIMEVAL:
      return isSetPrimeval();
    case OUTLET_CATEGORY_ID:
      return isSetOutletCategoryId();
    case OUTLET_CATEGORY_NAME:
      return isSetOutletCategoryName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OutletTempVo)
      return this.equals((OutletTempVo)that);
    return false;
  }

  public boolean equals(OutletTempVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_auditId = true && this.isSetAuditId();
    boolean that_present_auditId = true && that.isSetAuditId();
    if (this_present_auditId || that_present_auditId) {
      if (!(this_present_auditId && that_present_auditId))
        return false;
      if (!this.auditId.equals(that.auditId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    boolean this_present_areaId = true && this.isSetAreaId();
    boolean that_present_areaId = true && that.isSetAreaId();
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (!this.areaId.equals(that.areaId))
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_outletFullName = true && this.isSetOutletFullName();
    boolean that_present_outletFullName = true && that.isSetOutletFullName();
    if (this_present_outletFullName || that_present_outletFullName) {
      if (!(this_present_outletFullName && that_present_outletFullName))
        return false;
      if (!this.outletFullName.equals(that.outletFullName))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_businessHours = true && this.isSetBusinessHours();
    boolean that_present_businessHours = true && that.isSetBusinessHours();
    if (this_present_businessHours || that_present_businessHours) {
      if (!(this_present_businessHours && that_present_businessHours))
        return false;
      if (!this.businessHours.equals(that.businessHours))
        return false;
    }

    boolean this_present_zip = true && this.isSetZip();
    boolean that_present_zip = true && that.isSetZip();
    if (this_present_zip || that_present_zip) {
      if (!(this_present_zip && that_present_zip))
        return false;
      if (!this.zip.equals(that.zip))
        return false;
    }

    boolean this_present_fax = true && this.isSetFax();
    boolean that_present_fax = true && that.isSetFax();
    if (this_present_fax || that_present_fax) {
      if (!(this_present_fax && that_present_fax))
        return false;
      if (!this.fax.equals(that.fax))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_contactName = true && this.isSetContactName();
    boolean that_present_contactName = true && that.isSetContactName();
    if (this_present_contactName || that_present_contactName) {
      if (!(this_present_contactName && that_present_contactName))
        return false;
      if (!this.contactName.equals(that.contactName))
        return false;
    }

    boolean this_present_contactPhone = true && this.isSetContactPhone();
    boolean that_present_contactPhone = true && that.isSetContactPhone();
    if (this_present_contactPhone || that_present_contactPhone) {
      if (!(this_present_contactPhone && that_present_contactPhone))
        return false;
      if (!this.contactPhone.equals(that.contactPhone))
        return false;
    }

    boolean this_present_contactEmail = true && this.isSetContactEmail();
    boolean that_present_contactEmail = true && that.isSetContactEmail();
    if (this_present_contactEmail || that_present_contactEmail) {
      if (!(this_present_contactEmail && that_present_contactEmail))
        return false;
      if (!this.contactEmail.equals(that.contactEmail))
        return false;
    }

    boolean this_present_longitude = true && this.isSetLongitude();
    boolean that_present_longitude = true && that.isSetLongitude();
    if (this_present_longitude || that_present_longitude) {
      if (!(this_present_longitude && that_present_longitude))
        return false;
      if (!this.longitude.equals(that.longitude))
        return false;
    }

    boolean this_present_latitude = true && this.isSetLatitude();
    boolean that_present_latitude = true && that.isSetLatitude();
    if (this_present_latitude || that_present_latitude) {
      if (!(this_present_latitude && that_present_latitude))
        return false;
      if (!this.latitude.equals(that.latitude))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_preferDetails = true && this.isSetPreferDetails();
    boolean that_present_preferDetails = true && that.isSetPreferDetails();
    if (this_present_preferDetails || that_present_preferDetails) {
      if (!(this_present_preferDetails && that_present_preferDetails))
        return false;
      if (!this.preferDetails.equals(that.preferDetails))
        return false;
    }

    boolean this_present_discount = true && this.isSetDiscount();
    boolean that_present_discount = true && that.isSetDiscount();
    if (this_present_discount || that_present_discount) {
      if (!(this_present_discount && that_present_discount))
        return false;
      if (!this.discount.equals(that.discount))
        return false;
    }

    boolean this_present_discountCode = true && this.isSetDiscountCode();
    boolean that_present_discountCode = true && that.isSetDiscountCode();
    if (this_present_discountCode || that_present_discountCode) {
      if (!(this_present_discountCode && that_present_discountCode))
        return false;
      if (!this.discountCode.equals(that.discountCode))
        return false;
    }

    boolean this_present_discountRate = true && this.isSetDiscountRate();
    boolean that_present_discountRate = true && that.isSetDiscountRate();
    if (this_present_discountRate || that_present_discountRate) {
      if (!(this_present_discountRate && that_present_discountRate))
        return false;
      if (!this.discountRate.equals(that.discountRate))
        return false;
    }

    boolean this_present_acctName = true && this.isSetAcctName();
    boolean that_present_acctName = true && that.isSetAcctName();
    if (this_present_acctName || that_present_acctName) {
      if (!(this_present_acctName && that_present_acctName))
        return false;
      if (!this.acctName.equals(that.acctName))
        return false;
    }

    boolean this_present_acctNumber = true && this.isSetAcctNumber();
    boolean that_present_acctNumber = true && that.isSetAcctNumber();
    if (this_present_acctNumber || that_present_acctNumber) {
      if (!(this_present_acctNumber && that_present_acctNumber))
        return false;
      if (!this.acctNumber.equals(that.acctNumber))
        return false;
    }

    boolean this_present_photoList = true && this.isSetPhotoList();
    boolean that_present_photoList = true && that.isSetPhotoList();
    if (this_present_photoList || that_present_photoList) {
      if (!(this_present_photoList && that_present_photoList))
        return false;
      if (!this.photoList.equals(that.photoList))
        return false;
    }

    boolean this_present_primeval = true && this.isSetPrimeval();
    boolean that_present_primeval = true && that.isSetPrimeval();
    if (this_present_primeval || that_present_primeval) {
      if (!(this_present_primeval && that_present_primeval))
        return false;
      if (!this.primeval.equals(that.primeval))
        return false;
    }

    boolean this_present_outletCategoryId = true && this.isSetOutletCategoryId();
    boolean that_present_outletCategoryId = true && that.isSetOutletCategoryId();
    if (this_present_outletCategoryId || that_present_outletCategoryId) {
      if (!(this_present_outletCategoryId && that_present_outletCategoryId))
        return false;
      if (!this.outletCategoryId.equals(that.outletCategoryId))
        return false;
    }

    boolean this_present_outletCategoryName = true && this.isSetOutletCategoryName();
    boolean that_present_outletCategoryName = true && that.isSetOutletCategoryName();
    if (this_present_outletCategoryName || that_present_outletCategoryName) {
      if (!(this_present_outletCategoryName && that_present_outletCategoryName))
        return false;
      if (!this.outletCategoryName.equals(that.outletCategoryName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_auditId = true && (isSetAuditId());
    list.add(present_auditId);
    if (present_auditId)
      list.add(auditId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    boolean present_areaId = true && (isSetAreaId());
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_outletFullName = true && (isSetOutletFullName());
    list.add(present_outletFullName);
    if (present_outletFullName)
      list.add(outletFullName);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_businessHours = true && (isSetBusinessHours());
    list.add(present_businessHours);
    if (present_businessHours)
      list.add(businessHours);

    boolean present_zip = true && (isSetZip());
    list.add(present_zip);
    if (present_zip)
      list.add(zip);

    boolean present_fax = true && (isSetFax());
    list.add(present_fax);
    if (present_fax)
      list.add(fax);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_contactName = true && (isSetContactName());
    list.add(present_contactName);
    if (present_contactName)
      list.add(contactName);

    boolean present_contactPhone = true && (isSetContactPhone());
    list.add(present_contactPhone);
    if (present_contactPhone)
      list.add(contactPhone);

    boolean present_contactEmail = true && (isSetContactEmail());
    list.add(present_contactEmail);
    if (present_contactEmail)
      list.add(contactEmail);

    boolean present_longitude = true && (isSetLongitude());
    list.add(present_longitude);
    if (present_longitude)
      list.add(longitude);

    boolean present_latitude = true && (isSetLatitude());
    list.add(present_latitude);
    if (present_latitude)
      list.add(latitude);

    boolean present_description = true && (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    boolean present_preferDetails = true && (isSetPreferDetails());
    list.add(present_preferDetails);
    if (present_preferDetails)
      list.add(preferDetails);

    boolean present_discount = true && (isSetDiscount());
    list.add(present_discount);
    if (present_discount)
      list.add(discount);

    boolean present_discountCode = true && (isSetDiscountCode());
    list.add(present_discountCode);
    if (present_discountCode)
      list.add(discountCode);

    boolean present_discountRate = true && (isSetDiscountRate());
    list.add(present_discountRate);
    if (present_discountRate)
      list.add(discountRate);

    boolean present_acctName = true && (isSetAcctName());
    list.add(present_acctName);
    if (present_acctName)
      list.add(acctName);

    boolean present_acctNumber = true && (isSetAcctNumber());
    list.add(present_acctNumber);
    if (present_acctNumber)
      list.add(acctNumber);

    boolean present_photoList = true && (isSetPhotoList());
    list.add(present_photoList);
    if (present_photoList)
      list.add(photoList);

    boolean present_primeval = true && (isSetPrimeval());
    list.add(present_primeval);
    if (present_primeval)
      list.add(primeval);

    boolean present_outletCategoryId = true && (isSetOutletCategoryId());
    list.add(present_outletCategoryId);
    if (present_outletCategoryId)
      list.add(outletCategoryId);

    boolean present_outletCategoryName = true && (isSetOutletCategoryName());
    list.add(present_outletCategoryName);
    if (present_outletCategoryName)
      list.add(outletCategoryName);

    return list.hashCode();
  }

  @Override
  public int compareTo(OutletTempVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditId()).compareTo(other.isSetAuditId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditId, other.auditId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletFullName()).compareTo(other.isSetOutletFullName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletFullName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletFullName, other.outletFullName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessHours()).compareTo(other.isSetBusinessHours());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessHours()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessHours, other.businessHours);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetZip()).compareTo(other.isSetZip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetZip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.zip, other.zip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFax()).compareTo(other.isSetFax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fax, other.fax);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactName()).compareTo(other.isSetContactName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactName, other.contactName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactPhone()).compareTo(other.isSetContactPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactPhone, other.contactPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactEmail()).compareTo(other.isSetContactEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactEmail, other.contactEmail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLongitude()).compareTo(other.isSetLongitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLongitude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.longitude, other.longitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLatitude()).compareTo(other.isSetLatitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatitude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latitude, other.latitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreferDetails()).compareTo(other.isSetPreferDetails());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferDetails()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preferDetails, other.preferDetails);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiscount()).compareTo(other.isSetDiscount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiscount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.discount, other.discount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiscountCode()).compareTo(other.isSetDiscountCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiscountCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.discountCode, other.discountCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiscountRate()).compareTo(other.isSetDiscountRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiscountRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.discountRate, other.discountRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAcctName()).compareTo(other.isSetAcctName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcctName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acctName, other.acctName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAcctNumber()).compareTo(other.isSetAcctNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcctNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acctNumber, other.acctNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhotoList()).compareTo(other.isSetPhotoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhotoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.photoList, other.photoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrimeval()).compareTo(other.isSetPrimeval());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrimeval()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.primeval, other.primeval);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletCategoryId()).compareTo(other.isSetOutletCategoryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletCategoryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletCategoryId, other.outletCategoryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletCategoryName()).compareTo(other.isSetOutletCategoryName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletCategoryName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletCategoryName, other.outletCategoryName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OutletTempVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetAuditId()) {
      if (!first) sb.append(", ");
      sb.append("auditId:");
      if (this.auditId == null) {
        sb.append("null");
      } else {
        sb.append(this.auditId);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetOutletId()) {
      if (!first) sb.append(", ");
      sb.append("outletId:");
      if (this.outletId == null) {
        sb.append("null");
      } else {
        sb.append(this.outletId);
      }
      first = false;
    }
    if (isSetAreaId()) {
      if (!first) sb.append(", ");
      sb.append("areaId:");
      if (this.areaId == null) {
        sb.append("null");
      } else {
        sb.append(this.areaId);
      }
      first = false;
    }
    if (isSetOutletName()) {
      if (!first) sb.append(", ");
      sb.append("outletName:");
      if (this.outletName == null) {
        sb.append("null");
      } else {
        sb.append(this.outletName);
      }
      first = false;
    }
    if (isSetOutletFullName()) {
      if (!first) sb.append(", ");
      sb.append("outletFullName:");
      if (this.outletFullName == null) {
        sb.append("null");
      } else {
        sb.append(this.outletFullName);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetBusinessHours()) {
      if (!first) sb.append(", ");
      sb.append("businessHours:");
      if (this.businessHours == null) {
        sb.append("null");
      } else {
        sb.append(this.businessHours);
      }
      first = false;
    }
    if (isSetZip()) {
      if (!first) sb.append(", ");
      sb.append("zip:");
      if (this.zip == null) {
        sb.append("null");
      } else {
        sb.append(this.zip);
      }
      first = false;
    }
    if (isSetFax()) {
      if (!first) sb.append(", ");
      sb.append("fax:");
      if (this.fax == null) {
        sb.append("null");
      } else {
        sb.append(this.fax);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetContactName()) {
      if (!first) sb.append(", ");
      sb.append("contactName:");
      if (this.contactName == null) {
        sb.append("null");
      } else {
        sb.append(this.contactName);
      }
      first = false;
    }
    if (isSetContactPhone()) {
      if (!first) sb.append(", ");
      sb.append("contactPhone:");
      if (this.contactPhone == null) {
        sb.append("null");
      } else {
        sb.append(this.contactPhone);
      }
      first = false;
    }
    if (isSetContactEmail()) {
      if (!first) sb.append(", ");
      sb.append("contactEmail:");
      if (this.contactEmail == null) {
        sb.append("null");
      } else {
        sb.append(this.contactEmail);
      }
      first = false;
    }
    if (isSetLongitude()) {
      if (!first) sb.append(", ");
      sb.append("longitude:");
      if (this.longitude == null) {
        sb.append("null");
      } else {
        sb.append(this.longitude);
      }
      first = false;
    }
    if (isSetLatitude()) {
      if (!first) sb.append(", ");
      sb.append("latitude:");
      if (this.latitude == null) {
        sb.append("null");
      } else {
        sb.append(this.latitude);
      }
      first = false;
    }
    if (isSetDescription()) {
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
    }
    if (isSetPreferDetails()) {
      if (!first) sb.append(", ");
      sb.append("preferDetails:");
      if (this.preferDetails == null) {
        sb.append("null");
      } else {
        sb.append(this.preferDetails);
      }
      first = false;
    }
    if (isSetDiscount()) {
      if (!first) sb.append(", ");
      sb.append("discount:");
      if (this.discount == null) {
        sb.append("null");
      } else {
        sb.append(this.discount);
      }
      first = false;
    }
    if (isSetDiscountCode()) {
      if (!first) sb.append(", ");
      sb.append("discountCode:");
      if (this.discountCode == null) {
        sb.append("null");
      } else {
        sb.append(this.discountCode);
      }
      first = false;
    }
    if (isSetDiscountRate()) {
      if (!first) sb.append(", ");
      sb.append("discountRate:");
      if (this.discountRate == null) {
        sb.append("null");
      } else {
        sb.append(this.discountRate);
      }
      first = false;
    }
    if (isSetAcctName()) {
      if (!first) sb.append(", ");
      sb.append("acctName:");
      if (this.acctName == null) {
        sb.append("null");
      } else {
        sb.append(this.acctName);
      }
      first = false;
    }
    if (isSetAcctNumber()) {
      if (!first) sb.append(", ");
      sb.append("acctNumber:");
      if (this.acctNumber == null) {
        sb.append("null");
      } else {
        sb.append(this.acctNumber);
      }
      first = false;
    }
    if (isSetPhotoList()) {
      if (!first) sb.append(", ");
      sb.append("photoList:");
      if (this.photoList == null) {
        sb.append("null");
      } else {
        sb.append(this.photoList);
      }
      first = false;
    }
    if (isSetPrimeval()) {
      if (!first) sb.append(", ");
      sb.append("primeval:");
      if (this.primeval == null) {
        sb.append("null");
      } else {
        sb.append(this.primeval);
      }
      first = false;
    }
    if (isSetOutletCategoryId()) {
      if (!first) sb.append(", ");
      sb.append("outletCategoryId:");
      if (this.outletCategoryId == null) {
        sb.append("null");
      } else {
        sb.append(this.outletCategoryId);
      }
      first = false;
    }
    if (isSetOutletCategoryName()) {
      if (!first) sb.append(", ");
      sb.append("outletCategoryName:");
      if (this.outletCategoryName == null) {
        sb.append("null");
      } else {
        sb.append(this.outletCategoryName);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OutletTempVoStandardSchemeFactory implements SchemeFactory {
    public OutletTempVoStandardScheme getScheme() {
      return new OutletTempVoStandardScheme();
    }
  }

  private static class OutletTempVoStandardScheme extends StandardScheme<OutletTempVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OutletTempVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AUDIT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditId = iprot.readString();
              struct.setAuditIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaId = iprot.readString();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // OUTLET_FULL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletFullName = iprot.readString();
              struct.setOutletFullNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // BUSINESS_HOURS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessHours = iprot.readString();
              struct.setBusinessHoursIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ZIP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.zip = iprot.readString();
              struct.setZipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // FAX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fax = iprot.readString();
              struct.setFaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CONTACT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactName = iprot.readString();
              struct.setContactNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CONTACT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactPhone = iprot.readString();
              struct.setContactPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CONTACT_EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactEmail = iprot.readString();
              struct.setContactEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // LONGITUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.longitude = iprot.readString();
              struct.setLongitudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // LATITUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.latitude = iprot.readString();
              struct.setLatitudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PREFER_DETAILS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.preferDetails = iprot.readString();
              struct.setPreferDetailsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // DISCOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.discount = iprot.readString();
              struct.setDiscountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // DISCOUNT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.discountCode = iprot.readString();
              struct.setDiscountCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // DISCOUNT_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.discountRate = iprot.readString();
              struct.setDiscountRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // ACCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.acctName = iprot.readString();
              struct.setAcctNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // ACCT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.acctNumber = iprot.readString();
              struct.setAcctNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // PHOTO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.photoList = iprot.readString();
              struct.setPhotoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // PRIMEVAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.primeval = iprot.readString();
              struct.setPrimevalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // OUTLET_CATEGORY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletCategoryId = iprot.readString();
              struct.setOutletCategoryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // OUTLET_CATEGORY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletCategoryName = iprot.readString();
              struct.setOutletCategoryNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OutletTempVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.auditId != null) {
        if (struct.isSetAuditId()) {
          oprot.writeFieldBegin(AUDIT_ID_FIELD_DESC);
          oprot.writeString(struct.auditId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletId != null) {
        if (struct.isSetOutletId()) {
          oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
          oprot.writeString(struct.outletId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.areaId != null) {
        if (struct.isSetAreaId()) {
          oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
          oprot.writeString(struct.areaId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletName != null) {
        if (struct.isSetOutletName()) {
          oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
          oprot.writeString(struct.outletName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletFullName != null) {
        if (struct.isSetOutletFullName()) {
          oprot.writeFieldBegin(OUTLET_FULL_NAME_FIELD_DESC);
          oprot.writeString(struct.outletFullName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.businessHours != null) {
        if (struct.isSetBusinessHours()) {
          oprot.writeFieldBegin(BUSINESS_HOURS_FIELD_DESC);
          oprot.writeString(struct.businessHours);
          oprot.writeFieldEnd();
        }
      }
      if (struct.zip != null) {
        if (struct.isSetZip()) {
          oprot.writeFieldBegin(ZIP_FIELD_DESC);
          oprot.writeString(struct.zip);
          oprot.writeFieldEnd();
        }
      }
      if (struct.fax != null) {
        if (struct.isSetFax()) {
          oprot.writeFieldBegin(FAX_FIELD_DESC);
          oprot.writeString(struct.fax);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactName != null) {
        if (struct.isSetContactName()) {
          oprot.writeFieldBegin(CONTACT_NAME_FIELD_DESC);
          oprot.writeString(struct.contactName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactPhone != null) {
        if (struct.isSetContactPhone()) {
          oprot.writeFieldBegin(CONTACT_PHONE_FIELD_DESC);
          oprot.writeString(struct.contactPhone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contactEmail != null) {
        if (struct.isSetContactEmail()) {
          oprot.writeFieldBegin(CONTACT_EMAIL_FIELD_DESC);
          oprot.writeString(struct.contactEmail);
          oprot.writeFieldEnd();
        }
      }
      if (struct.longitude != null) {
        if (struct.isSetLongitude()) {
          oprot.writeFieldBegin(LONGITUDE_FIELD_DESC);
          oprot.writeString(struct.longitude);
          oprot.writeFieldEnd();
        }
      }
      if (struct.latitude != null) {
        if (struct.isSetLatitude()) {
          oprot.writeFieldBegin(LATITUDE_FIELD_DESC);
          oprot.writeString(struct.latitude);
          oprot.writeFieldEnd();
        }
      }
      if (struct.description != null) {
        if (struct.isSetDescription()) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
      }
      if (struct.preferDetails != null) {
        if (struct.isSetPreferDetails()) {
          oprot.writeFieldBegin(PREFER_DETAILS_FIELD_DESC);
          oprot.writeString(struct.preferDetails);
          oprot.writeFieldEnd();
        }
      }
      if (struct.discount != null) {
        if (struct.isSetDiscount()) {
          oprot.writeFieldBegin(DISCOUNT_FIELD_DESC);
          oprot.writeString(struct.discount);
          oprot.writeFieldEnd();
        }
      }
      if (struct.discountCode != null) {
        if (struct.isSetDiscountCode()) {
          oprot.writeFieldBegin(DISCOUNT_CODE_FIELD_DESC);
          oprot.writeString(struct.discountCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.discountRate != null) {
        if (struct.isSetDiscountRate()) {
          oprot.writeFieldBegin(DISCOUNT_RATE_FIELD_DESC);
          oprot.writeString(struct.discountRate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.acctName != null) {
        if (struct.isSetAcctName()) {
          oprot.writeFieldBegin(ACCT_NAME_FIELD_DESC);
          oprot.writeString(struct.acctName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.acctNumber != null) {
        if (struct.isSetAcctNumber()) {
          oprot.writeFieldBegin(ACCT_NUMBER_FIELD_DESC);
          oprot.writeString(struct.acctNumber);
          oprot.writeFieldEnd();
        }
      }
      if (struct.photoList != null) {
        if (struct.isSetPhotoList()) {
          oprot.writeFieldBegin(PHOTO_LIST_FIELD_DESC);
          oprot.writeString(struct.photoList);
          oprot.writeFieldEnd();
        }
      }
      if (struct.primeval != null) {
        if (struct.isSetPrimeval()) {
          oprot.writeFieldBegin(PRIMEVAL_FIELD_DESC);
          oprot.writeString(struct.primeval);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletCategoryId != null) {
        if (struct.isSetOutletCategoryId()) {
          oprot.writeFieldBegin(OUTLET_CATEGORY_ID_FIELD_DESC);
          oprot.writeString(struct.outletCategoryId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletCategoryName != null) {
        if (struct.isSetOutletCategoryName()) {
          oprot.writeFieldBegin(OUTLET_CATEGORY_NAME_FIELD_DESC);
          oprot.writeString(struct.outletCategoryName);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OutletTempVoTupleSchemeFactory implements SchemeFactory {
    public OutletTempVoTupleScheme getScheme() {
      return new OutletTempVoTupleScheme();
    }
  }

  private static class OutletTempVoTupleScheme extends TupleScheme<OutletTempVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OutletTempVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetClientId()) {
        optionals.set(2);
      }
      if (struct.isSetAuditId()) {
        optionals.set(3);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(4);
      }
      if (struct.isSetOutletId()) {
        optionals.set(5);
      }
      if (struct.isSetAreaId()) {
        optionals.set(6);
      }
      if (struct.isSetOutletName()) {
        optionals.set(7);
      }
      if (struct.isSetOutletFullName()) {
        optionals.set(8);
      }
      if (struct.isSetAddress()) {
        optionals.set(9);
      }
      if (struct.isSetBusinessHours()) {
        optionals.set(10);
      }
      if (struct.isSetZip()) {
        optionals.set(11);
      }
      if (struct.isSetFax()) {
        optionals.set(12);
      }
      if (struct.isSetPhone()) {
        optionals.set(13);
      }
      if (struct.isSetContactName()) {
        optionals.set(14);
      }
      if (struct.isSetContactPhone()) {
        optionals.set(15);
      }
      if (struct.isSetContactEmail()) {
        optionals.set(16);
      }
      if (struct.isSetLongitude()) {
        optionals.set(17);
      }
      if (struct.isSetLatitude()) {
        optionals.set(18);
      }
      if (struct.isSetDescription()) {
        optionals.set(19);
      }
      if (struct.isSetPreferDetails()) {
        optionals.set(20);
      }
      if (struct.isSetDiscount()) {
        optionals.set(21);
      }
      if (struct.isSetDiscountCode()) {
        optionals.set(22);
      }
      if (struct.isSetDiscountRate()) {
        optionals.set(23);
      }
      if (struct.isSetAcctName()) {
        optionals.set(24);
      }
      if (struct.isSetAcctNumber()) {
        optionals.set(25);
      }
      if (struct.isSetPhotoList()) {
        optionals.set(26);
      }
      if (struct.isSetPrimeval()) {
        optionals.set(27);
      }
      if (struct.isSetOutletCategoryId()) {
        optionals.set(28);
      }
      if (struct.isSetOutletCategoryName()) {
        optionals.set(29);
      }
      oprot.writeBitSet(optionals, 30);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetAuditId()) {
        oprot.writeString(struct.auditId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
      if (struct.isSetAreaId()) {
        oprot.writeString(struct.areaId);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetOutletFullName()) {
        oprot.writeString(struct.outletFullName);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetBusinessHours()) {
        oprot.writeString(struct.businessHours);
      }
      if (struct.isSetZip()) {
        oprot.writeString(struct.zip);
      }
      if (struct.isSetFax()) {
        oprot.writeString(struct.fax);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetContactName()) {
        oprot.writeString(struct.contactName);
      }
      if (struct.isSetContactPhone()) {
        oprot.writeString(struct.contactPhone);
      }
      if (struct.isSetContactEmail()) {
        oprot.writeString(struct.contactEmail);
      }
      if (struct.isSetLongitude()) {
        oprot.writeString(struct.longitude);
      }
      if (struct.isSetLatitude()) {
        oprot.writeString(struct.latitude);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetPreferDetails()) {
        oprot.writeString(struct.preferDetails);
      }
      if (struct.isSetDiscount()) {
        oprot.writeString(struct.discount);
      }
      if (struct.isSetDiscountCode()) {
        oprot.writeString(struct.discountCode);
      }
      if (struct.isSetDiscountRate()) {
        oprot.writeString(struct.discountRate);
      }
      if (struct.isSetAcctName()) {
        oprot.writeString(struct.acctName);
      }
      if (struct.isSetAcctNumber()) {
        oprot.writeString(struct.acctNumber);
      }
      if (struct.isSetPhotoList()) {
        oprot.writeString(struct.photoList);
      }
      if (struct.isSetPrimeval()) {
        oprot.writeString(struct.primeval);
      }
      if (struct.isSetOutletCategoryId()) {
        oprot.writeString(struct.outletCategoryId);
      }
      if (struct.isSetOutletCategoryName()) {
        oprot.writeString(struct.outletCategoryName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OutletTempVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(30);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.auditId = iprot.readString();
        struct.setAuditIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.areaId = iprot.readString();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.outletFullName = iprot.readString();
        struct.setOutletFullNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(10)) {
        struct.businessHours = iprot.readString();
        struct.setBusinessHoursIsSet(true);
      }
      if (incoming.get(11)) {
        struct.zip = iprot.readString();
        struct.setZipIsSet(true);
      }
      if (incoming.get(12)) {
        struct.fax = iprot.readString();
        struct.setFaxIsSet(true);
      }
      if (incoming.get(13)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(14)) {
        struct.contactName = iprot.readString();
        struct.setContactNameIsSet(true);
      }
      if (incoming.get(15)) {
        struct.contactPhone = iprot.readString();
        struct.setContactPhoneIsSet(true);
      }
      if (incoming.get(16)) {
        struct.contactEmail = iprot.readString();
        struct.setContactEmailIsSet(true);
      }
      if (incoming.get(17)) {
        struct.longitude = iprot.readString();
        struct.setLongitudeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.latitude = iprot.readString();
        struct.setLatitudeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(20)) {
        struct.preferDetails = iprot.readString();
        struct.setPreferDetailsIsSet(true);
      }
      if (incoming.get(21)) {
        struct.discount = iprot.readString();
        struct.setDiscountIsSet(true);
      }
      if (incoming.get(22)) {
        struct.discountCode = iprot.readString();
        struct.setDiscountCodeIsSet(true);
      }
      if (incoming.get(23)) {
        struct.discountRate = iprot.readString();
        struct.setDiscountRateIsSet(true);
      }
      if (incoming.get(24)) {
        struct.acctName = iprot.readString();
        struct.setAcctNameIsSet(true);
      }
      if (incoming.get(25)) {
        struct.acctNumber = iprot.readString();
        struct.setAcctNumberIsSet(true);
      }
      if (incoming.get(26)) {
        struct.photoList = iprot.readString();
        struct.setPhotoListIsSet(true);
      }
      if (incoming.get(27)) {
        struct.primeval = iprot.readString();
        struct.setPrimevalIsSet(true);
      }
      if (incoming.get(28)) {
        struct.outletCategoryId = iprot.readString();
        struct.setOutletCategoryIdIsSet(true);
      }
      if (incoming.get(29)) {
        struct.outletCategoryName = iprot.readString();
        struct.setOutletCategoryNameIsSet(true);
      }
    }
  }

}

