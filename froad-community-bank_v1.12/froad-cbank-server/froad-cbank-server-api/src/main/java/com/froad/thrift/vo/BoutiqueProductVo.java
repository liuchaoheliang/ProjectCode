/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 精品商品商品列表信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class BoutiqueProductVo implements org.apache.thrift.TBase<BoutiqueProductVo, BoutiqueProductVo._Fields>, java.io.Serializable, Cloneable, Comparable<BoutiqueProductVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BoutiqueProductVo");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField FULL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("fullName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField VIP_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("vipPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField SELL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("sellCount", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField BRIEF_INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("briefIntroduction", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField IMAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("image", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField SERVER_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("serverTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField IS_RECOMMEND_FIELD_DESC = new org.apache.thrift.protocol.TField("isRecommend", org.apache.thrift.protocol.TType.BOOL, (short)10);
  private static final org.apache.thrift.protocol.TField IS_NEW_FIELD_DESC = new org.apache.thrift.protocol.TField("isNew", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField IS_HOT_FIELD_DESC = new org.apache.thrift.protocol.TField("isHot", org.apache.thrift.protocol.TType.BOOL, (short)12);
  private static final org.apache.thrift.protocol.TField IS_SECKILL_FIELD_DESC = new org.apache.thrift.protocol.TField("isSeckill", org.apache.thrift.protocol.TType.STRING, (short)13);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BoutiqueProductVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BoutiqueProductVoTupleSchemeFactory());
  }

  /**
   * 商品id
   */
  public String productId; // required
  /**
   * 商品名
   */
  public String name; // required
  /**
   * 商品全名
   */
  public String fullName; // required
  /**
   * 销售价
   */
  public double price; // required
  /**
   * VIP价
   */
  public double vipPrice; // required
  /**
   * 销售数量
   */
  public int sellCount; // required
  /**
   * 简介
   */
  public String briefIntroduction; // required
  /**
   * 图片地址
   */
  public ProductImageVo image; // required
  /**
   * 服务器时间
   */
  public long serverTime; // required
  /**
   * 是否推荐
   */
  public boolean isRecommend; // required
  /**
   * 是否新品
   */
  public boolean isNew; // required
  /**
   * 是否热销
   */
  public boolean isHot; // required
  /**
   * 是否秒杀 0非秒杀,1秒杀
   */
  public String isSeckill; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商品id
     */
    PRODUCT_ID((short)1, "productId"),
    /**
     * 商品名
     */
    NAME((short)2, "name"),
    /**
     * 商品全名
     */
    FULL_NAME((short)3, "fullName"),
    /**
     * 销售价
     */
    PRICE((short)4, "price"),
    /**
     * VIP价
     */
    VIP_PRICE((short)5, "vipPrice"),
    /**
     * 销售数量
     */
    SELL_COUNT((short)6, "sellCount"),
    /**
     * 简介
     */
    BRIEF_INTRODUCTION((short)7, "briefIntroduction"),
    /**
     * 图片地址
     */
    IMAGE((short)8, "image"),
    /**
     * 服务器时间
     */
    SERVER_TIME((short)9, "serverTime"),
    /**
     * 是否推荐
     */
    IS_RECOMMEND((short)10, "isRecommend"),
    /**
     * 是否新品
     */
    IS_NEW((short)11, "isNew"),
    /**
     * 是否热销
     */
    IS_HOT((short)12, "isHot"),
    /**
     * 是否秒杀 0非秒杀,1秒杀
     */
    IS_SECKILL((short)13, "isSeckill");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // NAME
          return NAME;
        case 3: // FULL_NAME
          return FULL_NAME;
        case 4: // PRICE
          return PRICE;
        case 5: // VIP_PRICE
          return VIP_PRICE;
        case 6: // SELL_COUNT
          return SELL_COUNT;
        case 7: // BRIEF_INTRODUCTION
          return BRIEF_INTRODUCTION;
        case 8: // IMAGE
          return IMAGE;
        case 9: // SERVER_TIME
          return SERVER_TIME;
        case 10: // IS_RECOMMEND
          return IS_RECOMMEND;
        case 11: // IS_NEW
          return IS_NEW;
        case 12: // IS_HOT
          return IS_HOT;
        case 13: // IS_SECKILL
          return IS_SECKILL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PRICE_ISSET_ID = 0;
  private static final int __VIPPRICE_ISSET_ID = 1;
  private static final int __SELLCOUNT_ISSET_ID = 2;
  private static final int __SERVERTIME_ISSET_ID = 3;
  private static final int __ISRECOMMEND_ISSET_ID = 4;
  private static final int __ISNEW_ISSET_ID = 5;
  private static final int __ISHOT_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FULL_NAME, new org.apache.thrift.meta_data.FieldMetaData("fullName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.VIP_PRICE, new org.apache.thrift.meta_data.FieldMetaData("vipPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SELL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("sellCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BRIEF_INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("briefIntroduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IMAGE, new org.apache.thrift.meta_data.FieldMetaData("image", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProductImageVo.class)));
    tmpMap.put(_Fields.SERVER_TIME, new org.apache.thrift.meta_data.FieldMetaData("serverTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.IS_RECOMMEND, new org.apache.thrift.meta_data.FieldMetaData("isRecommend", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_NEW, new org.apache.thrift.meta_data.FieldMetaData("isNew", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_HOT, new org.apache.thrift.meta_data.FieldMetaData("isHot", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_SECKILL, new org.apache.thrift.meta_data.FieldMetaData("isSeckill", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BoutiqueProductVo.class, metaDataMap);
  }

  public BoutiqueProductVo() {
  }

  public BoutiqueProductVo(
    String productId,
    String name,
    String fullName,
    double price,
    double vipPrice,
    int sellCount,
    String briefIntroduction,
    ProductImageVo image,
    long serverTime,
    boolean isRecommend,
    boolean isNew,
    boolean isHot,
    String isSeckill)
  {
    this();
    this.productId = productId;
    this.name = name;
    this.fullName = fullName;
    this.price = price;
    setPriceIsSet(true);
    this.vipPrice = vipPrice;
    setVipPriceIsSet(true);
    this.sellCount = sellCount;
    setSellCountIsSet(true);
    this.briefIntroduction = briefIntroduction;
    this.image = image;
    this.serverTime = serverTime;
    setServerTimeIsSet(true);
    this.isRecommend = isRecommend;
    setIsRecommendIsSet(true);
    this.isNew = isNew;
    setIsNewIsSet(true);
    this.isHot = isHot;
    setIsHotIsSet(true);
    this.isSeckill = isSeckill;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BoutiqueProductVo(BoutiqueProductVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetFullName()) {
      this.fullName = other.fullName;
    }
    this.price = other.price;
    this.vipPrice = other.vipPrice;
    this.sellCount = other.sellCount;
    if (other.isSetBriefIntroduction()) {
      this.briefIntroduction = other.briefIntroduction;
    }
    if (other.isSetImage()) {
      this.image = new ProductImageVo(other.image);
    }
    this.serverTime = other.serverTime;
    this.isRecommend = other.isRecommend;
    this.isNew = other.isNew;
    this.isHot = other.isHot;
    if (other.isSetIsSeckill()) {
      this.isSeckill = other.isSeckill;
    }
  }

  public BoutiqueProductVo deepCopy() {
    return new BoutiqueProductVo(this);
  }

  @Override
  public void clear() {
    this.productId = null;
    this.name = null;
    this.fullName = null;
    setPriceIsSet(false);
    this.price = 0.0;
    setVipPriceIsSet(false);
    this.vipPrice = 0.0;
    setSellCountIsSet(false);
    this.sellCount = 0;
    this.briefIntroduction = null;
    this.image = null;
    setServerTimeIsSet(false);
    this.serverTime = 0;
    setIsRecommendIsSet(false);
    this.isRecommend = false;
    setIsNewIsSet(false);
    this.isNew = false;
    setIsHotIsSet(false);
    this.isHot = false;
    this.isSeckill = null;
  }

  /**
   * 商品id
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品id
   */
  public BoutiqueProductVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 商品名
   */
  public String getName() {
    return this.name;
  }

  /**
   * 商品名
   */
  public BoutiqueProductVo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  /**
   * 商品全名
   */
  public String getFullName() {
    return this.fullName;
  }

  /**
   * 商品全名
   */
  public BoutiqueProductVo setFullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  public void unsetFullName() {
    this.fullName = null;
  }

  /** Returns true if field fullName is set (has been assigned a value) and false otherwise */
  public boolean isSetFullName() {
    return this.fullName != null;
  }

  public void setFullNameIsSet(boolean value) {
    if (!value) {
      this.fullName = null;
    }
  }

  /**
   * 销售价
   */
  public double getPrice() {
    return this.price;
  }

  /**
   * 销售价
   */
  public BoutiqueProductVo setPrice(double price) {
    this.price = price;
    setPriceIsSet(true);
    return this;
  }

  public void unsetPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  public void setPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRICE_ISSET_ID, value);
  }

  /**
   * VIP价
   */
  public double getVipPrice() {
    return this.vipPrice;
  }

  /**
   * VIP价
   */
  public BoutiqueProductVo setVipPrice(double vipPrice) {
    this.vipPrice = vipPrice;
    setVipPriceIsSet(true);
    return this;
  }

  public void unsetVipPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIPPRICE_ISSET_ID);
  }

  /** Returns true if field vipPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetVipPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __VIPPRICE_ISSET_ID);
  }

  public void setVipPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIPPRICE_ISSET_ID, value);
  }

  /**
   * 销售数量
   */
  public int getSellCount() {
    return this.sellCount;
  }

  /**
   * 销售数量
   */
  public BoutiqueProductVo setSellCount(int sellCount) {
    this.sellCount = sellCount;
    setSellCountIsSet(true);
    return this;
  }

  public void unsetSellCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SELLCOUNT_ISSET_ID);
  }

  /** Returns true if field sellCount is set (has been assigned a value) and false otherwise */
  public boolean isSetSellCount() {
    return EncodingUtils.testBit(__isset_bitfield, __SELLCOUNT_ISSET_ID);
  }

  public void setSellCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SELLCOUNT_ISSET_ID, value);
  }

  /**
   * 简介
   */
  public String getBriefIntroduction() {
    return this.briefIntroduction;
  }

  /**
   * 简介
   */
  public BoutiqueProductVo setBriefIntroduction(String briefIntroduction) {
    this.briefIntroduction = briefIntroduction;
    return this;
  }

  public void unsetBriefIntroduction() {
    this.briefIntroduction = null;
  }

  /** Returns true if field briefIntroduction is set (has been assigned a value) and false otherwise */
  public boolean isSetBriefIntroduction() {
    return this.briefIntroduction != null;
  }

  public void setBriefIntroductionIsSet(boolean value) {
    if (!value) {
      this.briefIntroduction = null;
    }
  }

  /**
   * 图片地址
   */
  public ProductImageVo getImage() {
    return this.image;
  }

  /**
   * 图片地址
   */
  public BoutiqueProductVo setImage(ProductImageVo image) {
    this.image = image;
    return this;
  }

  public void unsetImage() {
    this.image = null;
  }

  /** Returns true if field image is set (has been assigned a value) and false otherwise */
  public boolean isSetImage() {
    return this.image != null;
  }

  public void setImageIsSet(boolean value) {
    if (!value) {
      this.image = null;
    }
  }

  /**
   * 服务器时间
   */
  public long getServerTime() {
    return this.serverTime;
  }

  /**
   * 服务器时间
   */
  public BoutiqueProductVo setServerTime(long serverTime) {
    this.serverTime = serverTime;
    setServerTimeIsSet(true);
    return this;
  }

  public void unsetServerTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SERVERTIME_ISSET_ID);
  }

  /** Returns true if field serverTime is set (has been assigned a value) and false otherwise */
  public boolean isSetServerTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SERVERTIME_ISSET_ID);
  }

  public void setServerTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SERVERTIME_ISSET_ID, value);
  }

  /**
   * 是否推荐
   */
  public boolean isIsRecommend() {
    return this.isRecommend;
  }

  /**
   * 是否推荐
   */
  public BoutiqueProductVo setIsRecommend(boolean isRecommend) {
    this.isRecommend = isRecommend;
    setIsRecommendIsSet(true);
    return this;
  }

  public void unsetIsRecommend() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID);
  }

  /** Returns true if field isRecommend is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRecommend() {
    return EncodingUtils.testBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID);
  }

  public void setIsRecommendIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID, value);
  }

  /**
   * 是否新品
   */
  public boolean isIsNew() {
    return this.isNew;
  }

  /**
   * 是否新品
   */
  public BoutiqueProductVo setIsNew(boolean isNew) {
    this.isNew = isNew;
    setIsNewIsSet(true);
    return this;
  }

  public void unsetIsNew() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISNEW_ISSET_ID);
  }

  /** Returns true if field isNew is set (has been assigned a value) and false otherwise */
  public boolean isSetIsNew() {
    return EncodingUtils.testBit(__isset_bitfield, __ISNEW_ISSET_ID);
  }

  public void setIsNewIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISNEW_ISSET_ID, value);
  }

  /**
   * 是否热销
   */
  public boolean isIsHot() {
    return this.isHot;
  }

  /**
   * 是否热销
   */
  public BoutiqueProductVo setIsHot(boolean isHot) {
    this.isHot = isHot;
    setIsHotIsSet(true);
    return this;
  }

  public void unsetIsHot() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISHOT_ISSET_ID);
  }

  /** Returns true if field isHot is set (has been assigned a value) and false otherwise */
  public boolean isSetIsHot() {
    return EncodingUtils.testBit(__isset_bitfield, __ISHOT_ISSET_ID);
  }

  public void setIsHotIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISHOT_ISSET_ID, value);
  }

  /**
   * 是否秒杀 0非秒杀,1秒杀
   */
  public String getIsSeckill() {
    return this.isSeckill;
  }

  /**
   * 是否秒杀 0非秒杀,1秒杀
   */
  public BoutiqueProductVo setIsSeckill(String isSeckill) {
    this.isSeckill = isSeckill;
    return this;
  }

  public void unsetIsSeckill() {
    this.isSeckill = null;
  }

  /** Returns true if field isSeckill is set (has been assigned a value) and false otherwise */
  public boolean isSetIsSeckill() {
    return this.isSeckill != null;
  }

  public void setIsSeckillIsSet(boolean value) {
    if (!value) {
      this.isSeckill = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case FULL_NAME:
      if (value == null) {
        unsetFullName();
      } else {
        setFullName((String)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((Double)value);
      }
      break;

    case VIP_PRICE:
      if (value == null) {
        unsetVipPrice();
      } else {
        setVipPrice((Double)value);
      }
      break;

    case SELL_COUNT:
      if (value == null) {
        unsetSellCount();
      } else {
        setSellCount((Integer)value);
      }
      break;

    case BRIEF_INTRODUCTION:
      if (value == null) {
        unsetBriefIntroduction();
      } else {
        setBriefIntroduction((String)value);
      }
      break;

    case IMAGE:
      if (value == null) {
        unsetImage();
      } else {
        setImage((ProductImageVo)value);
      }
      break;

    case SERVER_TIME:
      if (value == null) {
        unsetServerTime();
      } else {
        setServerTime((Long)value);
      }
      break;

    case IS_RECOMMEND:
      if (value == null) {
        unsetIsRecommend();
      } else {
        setIsRecommend((Boolean)value);
      }
      break;

    case IS_NEW:
      if (value == null) {
        unsetIsNew();
      } else {
        setIsNew((Boolean)value);
      }
      break;

    case IS_HOT:
      if (value == null) {
        unsetIsHot();
      } else {
        setIsHot((Boolean)value);
      }
      break;

    case IS_SECKILL:
      if (value == null) {
        unsetIsSeckill();
      } else {
        setIsSeckill((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return getProductId();

    case NAME:
      return getName();

    case FULL_NAME:
      return getFullName();

    case PRICE:
      return Double.valueOf(getPrice());

    case VIP_PRICE:
      return Double.valueOf(getVipPrice());

    case SELL_COUNT:
      return Integer.valueOf(getSellCount());

    case BRIEF_INTRODUCTION:
      return getBriefIntroduction();

    case IMAGE:
      return getImage();

    case SERVER_TIME:
      return Long.valueOf(getServerTime());

    case IS_RECOMMEND:
      return Boolean.valueOf(isIsRecommend());

    case IS_NEW:
      return Boolean.valueOf(isIsNew());

    case IS_HOT:
      return Boolean.valueOf(isIsHot());

    case IS_SECKILL:
      return getIsSeckill();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case NAME:
      return isSetName();
    case FULL_NAME:
      return isSetFullName();
    case PRICE:
      return isSetPrice();
    case VIP_PRICE:
      return isSetVipPrice();
    case SELL_COUNT:
      return isSetSellCount();
    case BRIEF_INTRODUCTION:
      return isSetBriefIntroduction();
    case IMAGE:
      return isSetImage();
    case SERVER_TIME:
      return isSetServerTime();
    case IS_RECOMMEND:
      return isSetIsRecommend();
    case IS_NEW:
      return isSetIsNew();
    case IS_HOT:
      return isSetIsHot();
    case IS_SECKILL:
      return isSetIsSeckill();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BoutiqueProductVo)
      return this.equals((BoutiqueProductVo)that);
    return false;
  }

  public boolean equals(BoutiqueProductVo that) {
    if (that == null)
      return false;

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_fullName = true && this.isSetFullName();
    boolean that_present_fullName = true && that.isSetFullName();
    if (this_present_fullName || that_present_fullName) {
      if (!(this_present_fullName && that_present_fullName))
        return false;
      if (!this.fullName.equals(that.fullName))
        return false;
    }

    boolean this_present_price = true;
    boolean that_present_price = true;
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (this.price != that.price)
        return false;
    }

    boolean this_present_vipPrice = true;
    boolean that_present_vipPrice = true;
    if (this_present_vipPrice || that_present_vipPrice) {
      if (!(this_present_vipPrice && that_present_vipPrice))
        return false;
      if (this.vipPrice != that.vipPrice)
        return false;
    }

    boolean this_present_sellCount = true;
    boolean that_present_sellCount = true;
    if (this_present_sellCount || that_present_sellCount) {
      if (!(this_present_sellCount && that_present_sellCount))
        return false;
      if (this.sellCount != that.sellCount)
        return false;
    }

    boolean this_present_briefIntroduction = true && this.isSetBriefIntroduction();
    boolean that_present_briefIntroduction = true && that.isSetBriefIntroduction();
    if (this_present_briefIntroduction || that_present_briefIntroduction) {
      if (!(this_present_briefIntroduction && that_present_briefIntroduction))
        return false;
      if (!this.briefIntroduction.equals(that.briefIntroduction))
        return false;
    }

    boolean this_present_image = true && this.isSetImage();
    boolean that_present_image = true && that.isSetImage();
    if (this_present_image || that_present_image) {
      if (!(this_present_image && that_present_image))
        return false;
      if (!this.image.equals(that.image))
        return false;
    }

    boolean this_present_serverTime = true;
    boolean that_present_serverTime = true;
    if (this_present_serverTime || that_present_serverTime) {
      if (!(this_present_serverTime && that_present_serverTime))
        return false;
      if (this.serverTime != that.serverTime)
        return false;
    }

    boolean this_present_isRecommend = true;
    boolean that_present_isRecommend = true;
    if (this_present_isRecommend || that_present_isRecommend) {
      if (!(this_present_isRecommend && that_present_isRecommend))
        return false;
      if (this.isRecommend != that.isRecommend)
        return false;
    }

    boolean this_present_isNew = true;
    boolean that_present_isNew = true;
    if (this_present_isNew || that_present_isNew) {
      if (!(this_present_isNew && that_present_isNew))
        return false;
      if (this.isNew != that.isNew)
        return false;
    }

    boolean this_present_isHot = true;
    boolean that_present_isHot = true;
    if (this_present_isHot || that_present_isHot) {
      if (!(this_present_isHot && that_present_isHot))
        return false;
      if (this.isHot != that.isHot)
        return false;
    }

    boolean this_present_isSeckill = true && this.isSetIsSeckill();
    boolean that_present_isSeckill = true && that.isSetIsSeckill();
    if (this_present_isSeckill || that_present_isSeckill) {
      if (!(this_present_isSeckill && that_present_isSeckill))
        return false;
      if (!this.isSeckill.equals(that.isSeckill))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_fullName = true && (isSetFullName());
    list.add(present_fullName);
    if (present_fullName)
      list.add(fullName);

    boolean present_price = true;
    list.add(present_price);
    if (present_price)
      list.add(price);

    boolean present_vipPrice = true;
    list.add(present_vipPrice);
    if (present_vipPrice)
      list.add(vipPrice);

    boolean present_sellCount = true;
    list.add(present_sellCount);
    if (present_sellCount)
      list.add(sellCount);

    boolean present_briefIntroduction = true && (isSetBriefIntroduction());
    list.add(present_briefIntroduction);
    if (present_briefIntroduction)
      list.add(briefIntroduction);

    boolean present_image = true && (isSetImage());
    list.add(present_image);
    if (present_image)
      list.add(image);

    boolean present_serverTime = true;
    list.add(present_serverTime);
    if (present_serverTime)
      list.add(serverTime);

    boolean present_isRecommend = true;
    list.add(present_isRecommend);
    if (present_isRecommend)
      list.add(isRecommend);

    boolean present_isNew = true;
    list.add(present_isNew);
    if (present_isNew)
      list.add(isNew);

    boolean present_isHot = true;
    list.add(present_isHot);
    if (present_isHot)
      list.add(isHot);

    boolean present_isSeckill = true && (isSetIsSeckill());
    list.add(present_isSeckill);
    if (present_isSeckill)
      list.add(isSeckill);

    return list.hashCode();
  }

  @Override
  public int compareTo(BoutiqueProductVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFullName()).compareTo(other.isSetFullName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFullName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fullName, other.fullName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipPrice()).compareTo(other.isSetVipPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipPrice, other.vipPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellCount()).compareTo(other.isSetSellCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellCount, other.sellCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBriefIntroduction()).compareTo(other.isSetBriefIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBriefIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.briefIntroduction, other.briefIntroduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImage()).compareTo(other.isSetImage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.image, other.image);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetServerTime()).compareTo(other.isSetServerTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetServerTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serverTime, other.serverTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsRecommend()).compareTo(other.isSetIsRecommend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRecommend()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRecommend, other.isRecommend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsNew()).compareTo(other.isSetIsNew());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsNew()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isNew, other.isNew);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsHot()).compareTo(other.isSetIsHot());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsHot()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isHot, other.isHot);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsSeckill()).compareTo(other.isSetIsSeckill());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsSeckill()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isSeckill, other.isSeckill);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BoutiqueProductVo(");
    boolean first = true;

    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fullName:");
    if (this.fullName == null) {
      sb.append("null");
    } else {
      sb.append(this.fullName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    sb.append(this.price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipPrice:");
    sb.append(this.vipPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellCount:");
    sb.append(this.sellCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("briefIntroduction:");
    if (this.briefIntroduction == null) {
      sb.append("null");
    } else {
      sb.append(this.briefIntroduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("image:");
    if (this.image == null) {
      sb.append("null");
    } else {
      sb.append(this.image);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("serverTime:");
    sb.append(this.serverTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isRecommend:");
    sb.append(this.isRecommend);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isNew:");
    sb.append(this.isNew);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isHot:");
    sb.append(this.isHot);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isSeckill:");
    if (this.isSeckill == null) {
      sb.append("null");
    } else {
      sb.append(this.isSeckill);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (image != null) {
      image.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BoutiqueProductVoStandardSchemeFactory implements SchemeFactory {
    public BoutiqueProductVoStandardScheme getScheme() {
      return new BoutiqueProductVoStandardScheme();
    }
  }

  private static class BoutiqueProductVoStandardScheme extends StandardScheme<BoutiqueProductVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BoutiqueProductVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FULL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fullName = iprot.readString();
              struct.setFullNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.price = iprot.readDouble();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // VIP_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.vipPrice = iprot.readDouble();
              struct.setVipPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SELL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sellCount = iprot.readI32();
              struct.setSellCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BRIEF_INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.briefIntroduction = iprot.readString();
              struct.setBriefIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // IMAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.image = new ProductImageVo();
              struct.image.read(iprot);
              struct.setImageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SERVER_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.serverTime = iprot.readI64();
              struct.setServerTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // IS_RECOMMEND
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isRecommend = iprot.readBool();
              struct.setIsRecommendIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // IS_NEW
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isNew = iprot.readBool();
              struct.setIsNewIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_HOT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isHot = iprot.readBool();
              struct.setIsHotIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // IS_SECKILL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isSeckill = iprot.readString();
              struct.setIsSeckillIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BoutiqueProductVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.fullName != null) {
        oprot.writeFieldBegin(FULL_NAME_FIELD_DESC);
        oprot.writeString(struct.fullName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeDouble(struct.price);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VIP_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.vipPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SELL_COUNT_FIELD_DESC);
      oprot.writeI32(struct.sellCount);
      oprot.writeFieldEnd();
      if (struct.briefIntroduction != null) {
        oprot.writeFieldBegin(BRIEF_INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.briefIntroduction);
        oprot.writeFieldEnd();
      }
      if (struct.image != null) {
        oprot.writeFieldBegin(IMAGE_FIELD_DESC);
        struct.image.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SERVER_TIME_FIELD_DESC);
      oprot.writeI64(struct.serverTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_RECOMMEND_FIELD_DESC);
      oprot.writeBool(struct.isRecommend);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_NEW_FIELD_DESC);
      oprot.writeBool(struct.isNew);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_HOT_FIELD_DESC);
      oprot.writeBool(struct.isHot);
      oprot.writeFieldEnd();
      if (struct.isSeckill != null) {
        oprot.writeFieldBegin(IS_SECKILL_FIELD_DESC);
        oprot.writeString(struct.isSeckill);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BoutiqueProductVoTupleSchemeFactory implements SchemeFactory {
    public BoutiqueProductVoTupleScheme getScheme() {
      return new BoutiqueProductVoTupleScheme();
    }
  }

  private static class BoutiqueProductVoTupleScheme extends TupleScheme<BoutiqueProductVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BoutiqueProductVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProductId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetFullName()) {
        optionals.set(2);
      }
      if (struct.isSetPrice()) {
        optionals.set(3);
      }
      if (struct.isSetVipPrice()) {
        optionals.set(4);
      }
      if (struct.isSetSellCount()) {
        optionals.set(5);
      }
      if (struct.isSetBriefIntroduction()) {
        optionals.set(6);
      }
      if (struct.isSetImage()) {
        optionals.set(7);
      }
      if (struct.isSetServerTime()) {
        optionals.set(8);
      }
      if (struct.isSetIsRecommend()) {
        optionals.set(9);
      }
      if (struct.isSetIsNew()) {
        optionals.set(10);
      }
      if (struct.isSetIsHot()) {
        optionals.set(11);
      }
      if (struct.isSetIsSeckill()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetFullName()) {
        oprot.writeString(struct.fullName);
      }
      if (struct.isSetPrice()) {
        oprot.writeDouble(struct.price);
      }
      if (struct.isSetVipPrice()) {
        oprot.writeDouble(struct.vipPrice);
      }
      if (struct.isSetSellCount()) {
        oprot.writeI32(struct.sellCount);
      }
      if (struct.isSetBriefIntroduction()) {
        oprot.writeString(struct.briefIntroduction);
      }
      if (struct.isSetImage()) {
        struct.image.write(oprot);
      }
      if (struct.isSetServerTime()) {
        oprot.writeI64(struct.serverTime);
      }
      if (struct.isSetIsRecommend()) {
        oprot.writeBool(struct.isRecommend);
      }
      if (struct.isSetIsNew()) {
        oprot.writeBool(struct.isNew);
      }
      if (struct.isSetIsHot()) {
        oprot.writeBool(struct.isHot);
      }
      if (struct.isSetIsSeckill()) {
        oprot.writeString(struct.isSeckill);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BoutiqueProductVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.fullName = iprot.readString();
        struct.setFullNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.price = iprot.readDouble();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(4)) {
        struct.vipPrice = iprot.readDouble();
        struct.setVipPriceIsSet(true);
      }
      if (incoming.get(5)) {
        struct.sellCount = iprot.readI32();
        struct.setSellCountIsSet(true);
      }
      if (incoming.get(6)) {
        struct.briefIntroduction = iprot.readString();
        struct.setBriefIntroductionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.image = new ProductImageVo();
        struct.image.read(iprot);
        struct.setImageIsSet(true);
      }
      if (incoming.get(8)) {
        struct.serverTime = iprot.readI64();
        struct.setServerTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.isRecommend = iprot.readBool();
        struct.setIsRecommendIsSet(true);
      }
      if (incoming.get(10)) {
        struct.isNew = iprot.readBool();
        struct.setIsNewIsSet(true);
      }
      if (incoming.get(11)) {
        struct.isHot = iprot.readBool();
        struct.setIsHotIsSet(true);
      }
      if (incoming.get(12)) {
        struct.isSeckill = iprot.readString();
        struct.setIsSeckillIsSet(true);
      }
    }
  }

}

