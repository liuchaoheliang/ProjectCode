/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商品详细
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ProductDetailVo implements org.apache.thrift.TBase<ProductDetailVo, ProductDetailVo._Fields>, java.io.Serializable, Cloneable, Comparable<ProductDetailVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProductDetailVo");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PRODUCT_IMAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("productImage", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("money", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("quantity", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField VIP_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("vipMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField VIP_QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("vipQuantity", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField DELIVERY_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField TOTAL_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("totalMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField DELIVERY_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryState", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_COMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnableComment", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField IS_COMMENTED_FIELD_DESC = new org.apache.thrift.protocol.TField("isCommented", org.apache.thrift.protocol.TType.BOOL, (short)12);
  private static final org.apache.thrift.protocol.TField CAN_REFUND_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("canRefundCount", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)15);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField REFUND_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("refundCount", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField CAN_RECEIVE_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("canReceiveCount", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField PRODUCT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("productType", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField ACTIVE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("activeId", org.apache.thrift.protocol.TType.STRING, (short)21);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProductDetailVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProductDetailVoTupleSchemeFactory());
  }

  /**
   * 商品ID
   */
  public String productId; // required
  /**
   * 商品名称
   */
  public String productName; // required
  /**
   * 商品图片
   */
  public String productImage; // required
  /**
   * 单价
   */
  public double money; // required
  /**
   * 数量
   */
  public int quantity; // required
  /**
   * VIP单价
   */
  public double vipMoney; // required
  /**
   * VIP数量
   */
  public int vipQuantity; // required
  /**
   * 运费
   */
  public double deliveryMoney; // required
  /**
   * 商品总价
   */
  public double totalMoney; // required
  /**
   * 发货|提货状态
   */
  public String deliveryState; // required
  /**
   * 是否可评价
   */
  public boolean isEnableComment; // required
  /**
   * 是否已评价
   */
  public boolean isCommented; // required
  /**
   * 可退款数量
   */
  public int canRefundCount; // required
  /**
   * 开始时间
   */
  public long startTime; // required
  /**
   * 截止时间
   */
  public long endTime; // required
  /**
   * 机构号
   */
  public String orgCode; // required
  /**
   * 机构名
   */
  public String orgName; // required
  /**
   * 退货数量
   */
  public int refundCount; // required
  /**
   * 可收货数量
   */
  public int canReceiveCount; // required
  /**
   * 商品类型
   */
  public String productType; // required
  /**
   * 活动ID
   */
  public String activeId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商品ID
     */
    PRODUCT_ID((short)1, "productId"),
    /**
     * 商品名称
     */
    PRODUCT_NAME((short)2, "productName"),
    /**
     * 商品图片
     */
    PRODUCT_IMAGE((short)3, "productImage"),
    /**
     * 单价
     */
    MONEY((short)4, "money"),
    /**
     * 数量
     */
    QUANTITY((short)5, "quantity"),
    /**
     * VIP单价
     */
    VIP_MONEY((short)6, "vipMoney"),
    /**
     * VIP数量
     */
    VIP_QUANTITY((short)7, "vipQuantity"),
    /**
     * 运费
     */
    DELIVERY_MONEY((short)8, "deliveryMoney"),
    /**
     * 商品总价
     */
    TOTAL_MONEY((short)9, "totalMoney"),
    /**
     * 发货|提货状态
     */
    DELIVERY_STATE((short)10, "deliveryState"),
    /**
     * 是否可评价
     */
    IS_ENABLE_COMMENT((short)11, "isEnableComment"),
    /**
     * 是否已评价
     */
    IS_COMMENTED((short)12, "isCommented"),
    /**
     * 可退款数量
     */
    CAN_REFUND_COUNT((short)13, "canRefundCount"),
    /**
     * 开始时间
     */
    START_TIME((short)14, "startTime"),
    /**
     * 截止时间
     */
    END_TIME((short)15, "endTime"),
    /**
     * 机构号
     */
    ORG_CODE((short)16, "orgCode"),
    /**
     * 机构名
     */
    ORG_NAME((short)17, "orgName"),
    /**
     * 退货数量
     */
    REFUND_COUNT((short)18, "refundCount"),
    /**
     * 可收货数量
     */
    CAN_RECEIVE_COUNT((short)19, "canReceiveCount"),
    /**
     * 商品类型
     */
    PRODUCT_TYPE((short)20, "productType"),
    /**
     * 活动ID
     */
    ACTIVE_ID((short)21, "activeId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 3: // PRODUCT_IMAGE
          return PRODUCT_IMAGE;
        case 4: // MONEY
          return MONEY;
        case 5: // QUANTITY
          return QUANTITY;
        case 6: // VIP_MONEY
          return VIP_MONEY;
        case 7: // VIP_QUANTITY
          return VIP_QUANTITY;
        case 8: // DELIVERY_MONEY
          return DELIVERY_MONEY;
        case 9: // TOTAL_MONEY
          return TOTAL_MONEY;
        case 10: // DELIVERY_STATE
          return DELIVERY_STATE;
        case 11: // IS_ENABLE_COMMENT
          return IS_ENABLE_COMMENT;
        case 12: // IS_COMMENTED
          return IS_COMMENTED;
        case 13: // CAN_REFUND_COUNT
          return CAN_REFUND_COUNT;
        case 14: // START_TIME
          return START_TIME;
        case 15: // END_TIME
          return END_TIME;
        case 16: // ORG_CODE
          return ORG_CODE;
        case 17: // ORG_NAME
          return ORG_NAME;
        case 18: // REFUND_COUNT
          return REFUND_COUNT;
        case 19: // CAN_RECEIVE_COUNT
          return CAN_RECEIVE_COUNT;
        case 20: // PRODUCT_TYPE
          return PRODUCT_TYPE;
        case 21: // ACTIVE_ID
          return ACTIVE_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MONEY_ISSET_ID = 0;
  private static final int __QUANTITY_ISSET_ID = 1;
  private static final int __VIPMONEY_ISSET_ID = 2;
  private static final int __VIPQUANTITY_ISSET_ID = 3;
  private static final int __DELIVERYMONEY_ISSET_ID = 4;
  private static final int __TOTALMONEY_ISSET_ID = 5;
  private static final int __ISENABLECOMMENT_ISSET_ID = 6;
  private static final int __ISCOMMENTED_ISSET_ID = 7;
  private static final int __CANREFUNDCOUNT_ISSET_ID = 8;
  private static final int __STARTTIME_ISSET_ID = 9;
  private static final int __ENDTIME_ISSET_ID = 10;
  private static final int __REFUNDCOUNT_ISSET_ID = 11;
  private static final int __CANRECEIVECOUNT_ISSET_ID = 12;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_IMAGE, new org.apache.thrift.meta_data.FieldMetaData("productImage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MONEY, new org.apache.thrift.meta_data.FieldMetaData("money", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("quantity", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VIP_MONEY, new org.apache.thrift.meta_data.FieldMetaData("vipMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.VIP_QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("vipQuantity", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DELIVERY_MONEY, new org.apache.thrift.meta_data.FieldMetaData("deliveryMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TOTAL_MONEY, new org.apache.thrift.meta_data.FieldMetaData("totalMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DELIVERY_STATE, new org.apache.thrift.meta_data.FieldMetaData("deliveryState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_ENABLE_COMMENT, new org.apache.thrift.meta_data.FieldMetaData("isEnableComment", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_COMMENTED, new org.apache.thrift.meta_data.FieldMetaData("isCommented", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CAN_REFUND_COUNT, new org.apache.thrift.meta_data.FieldMetaData("canRefundCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFUND_COUNT, new org.apache.thrift.meta_data.FieldMetaData("refundCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CAN_RECEIVE_COUNT, new org.apache.thrift.meta_data.FieldMetaData("canReceiveCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("productType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACTIVE_ID, new org.apache.thrift.meta_data.FieldMetaData("activeId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProductDetailVo.class, metaDataMap);
  }

  public ProductDetailVo() {
  }

  public ProductDetailVo(
    String productId,
    String productName,
    String productImage,
    double money,
    int quantity,
    double vipMoney,
    int vipQuantity,
    double deliveryMoney,
    double totalMoney,
    String deliveryState,
    boolean isEnableComment,
    boolean isCommented,
    int canRefundCount,
    long startTime,
    long endTime,
    String orgCode,
    String orgName,
    int refundCount,
    int canReceiveCount,
    String productType,
    String activeId)
  {
    this();
    this.productId = productId;
    this.productName = productName;
    this.productImage = productImage;
    this.money = money;
    setMoneyIsSet(true);
    this.quantity = quantity;
    setQuantityIsSet(true);
    this.vipMoney = vipMoney;
    setVipMoneyIsSet(true);
    this.vipQuantity = vipQuantity;
    setVipQuantityIsSet(true);
    this.deliveryMoney = deliveryMoney;
    setDeliveryMoneyIsSet(true);
    this.totalMoney = totalMoney;
    setTotalMoneyIsSet(true);
    this.deliveryState = deliveryState;
    this.isEnableComment = isEnableComment;
    setIsEnableCommentIsSet(true);
    this.isCommented = isCommented;
    setIsCommentedIsSet(true);
    this.canRefundCount = canRefundCount;
    setCanRefundCountIsSet(true);
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
    this.orgCode = orgCode;
    this.orgName = orgName;
    this.refundCount = refundCount;
    setRefundCountIsSet(true);
    this.canReceiveCount = canReceiveCount;
    setCanReceiveCountIsSet(true);
    this.productType = productType;
    this.activeId = activeId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProductDetailVo(ProductDetailVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetProductImage()) {
      this.productImage = other.productImage;
    }
    this.money = other.money;
    this.quantity = other.quantity;
    this.vipMoney = other.vipMoney;
    this.vipQuantity = other.vipQuantity;
    this.deliveryMoney = other.deliveryMoney;
    this.totalMoney = other.totalMoney;
    if (other.isSetDeliveryState()) {
      this.deliveryState = other.deliveryState;
    }
    this.isEnableComment = other.isEnableComment;
    this.isCommented = other.isCommented;
    this.canRefundCount = other.canRefundCount;
    this.startTime = other.startTime;
    this.endTime = other.endTime;
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    this.refundCount = other.refundCount;
    this.canReceiveCount = other.canReceiveCount;
    if (other.isSetProductType()) {
      this.productType = other.productType;
    }
    if (other.isSetActiveId()) {
      this.activeId = other.activeId;
    }
  }

  public ProductDetailVo deepCopy() {
    return new ProductDetailVo(this);
  }

  @Override
  public void clear() {
    this.productId = null;
    this.productName = null;
    this.productImage = null;
    setMoneyIsSet(false);
    this.money = 0.0;
    setQuantityIsSet(false);
    this.quantity = 0;
    setVipMoneyIsSet(false);
    this.vipMoney = 0.0;
    setVipQuantityIsSet(false);
    this.vipQuantity = 0;
    setDeliveryMoneyIsSet(false);
    this.deliveryMoney = 0.0;
    setTotalMoneyIsSet(false);
    this.totalMoney = 0.0;
    this.deliveryState = null;
    setIsEnableCommentIsSet(false);
    this.isEnableComment = false;
    setIsCommentedIsSet(false);
    this.isCommented = false;
    setCanRefundCountIsSet(false);
    this.canRefundCount = 0;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    this.orgCode = null;
    this.orgName = null;
    setRefundCountIsSet(false);
    this.refundCount = 0;
    setCanReceiveCountIsSet(false);
    this.canReceiveCount = 0;
    this.productType = null;
    this.activeId = null;
  }

  /**
   * 商品ID
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品ID
   */
  public ProductDetailVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 商品名称
   */
  public String getProductName() {
    return this.productName;
  }

  /**
   * 商品名称
   */
  public ProductDetailVo setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  /**
   * 商品图片
   */
  public String getProductImage() {
    return this.productImage;
  }

  /**
   * 商品图片
   */
  public ProductDetailVo setProductImage(String productImage) {
    this.productImage = productImage;
    return this;
  }

  public void unsetProductImage() {
    this.productImage = null;
  }

  /** Returns true if field productImage is set (has been assigned a value) and false otherwise */
  public boolean isSetProductImage() {
    return this.productImage != null;
  }

  public void setProductImageIsSet(boolean value) {
    if (!value) {
      this.productImage = null;
    }
  }

  /**
   * 单价
   */
  public double getMoney() {
    return this.money;
  }

  /**
   * 单价
   */
  public ProductDetailVo setMoney(double money) {
    this.money = money;
    setMoneyIsSet(true);
    return this;
  }

  public void unsetMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MONEY_ISSET_ID);
  }

  /** Returns true if field money is set (has been assigned a value) and false otherwise */
  public boolean isSetMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __MONEY_ISSET_ID);
  }

  public void setMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MONEY_ISSET_ID, value);
  }

  /**
   * 数量
   */
  public int getQuantity() {
    return this.quantity;
  }

  /**
   * 数量
   */
  public ProductDetailVo setQuantity(int quantity) {
    this.quantity = quantity;
    setQuantityIsSet(true);
    return this;
  }

  public void unsetQuantity() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __QUANTITY_ISSET_ID);
  }

  /** Returns true if field quantity is set (has been assigned a value) and false otherwise */
  public boolean isSetQuantity() {
    return EncodingUtils.testBit(__isset_bitfield, __QUANTITY_ISSET_ID);
  }

  public void setQuantityIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __QUANTITY_ISSET_ID, value);
  }

  /**
   * VIP单价
   */
  public double getVipMoney() {
    return this.vipMoney;
  }

  /**
   * VIP单价
   */
  public ProductDetailVo setVipMoney(double vipMoney) {
    this.vipMoney = vipMoney;
    setVipMoneyIsSet(true);
    return this;
  }

  public void unsetVipMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIPMONEY_ISSET_ID);
  }

  /** Returns true if field vipMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetVipMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __VIPMONEY_ISSET_ID);
  }

  public void setVipMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIPMONEY_ISSET_ID, value);
  }

  /**
   * VIP数量
   */
  public int getVipQuantity() {
    return this.vipQuantity;
  }

  /**
   * VIP数量
   */
  public ProductDetailVo setVipQuantity(int vipQuantity) {
    this.vipQuantity = vipQuantity;
    setVipQuantityIsSet(true);
    return this;
  }

  public void unsetVipQuantity() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIPQUANTITY_ISSET_ID);
  }

  /** Returns true if field vipQuantity is set (has been assigned a value) and false otherwise */
  public boolean isSetVipQuantity() {
    return EncodingUtils.testBit(__isset_bitfield, __VIPQUANTITY_ISSET_ID);
  }

  public void setVipQuantityIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIPQUANTITY_ISSET_ID, value);
  }

  /**
   * 运费
   */
  public double getDeliveryMoney() {
    return this.deliveryMoney;
  }

  /**
   * 运费
   */
  public ProductDetailVo setDeliveryMoney(double deliveryMoney) {
    this.deliveryMoney = deliveryMoney;
    setDeliveryMoneyIsSet(true);
    return this;
  }

  public void unsetDeliveryMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID);
  }

  /** Returns true if field deliveryMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID);
  }

  public void setDeliveryMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID, value);
  }

  /**
   * 商品总价
   */
  public double getTotalMoney() {
    return this.totalMoney;
  }

  /**
   * 商品总价
   */
  public ProductDetailVo setTotalMoney(double totalMoney) {
    this.totalMoney = totalMoney;
    setTotalMoneyIsSet(true);
    return this;
  }

  public void unsetTotalMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALMONEY_ISSET_ID);
  }

  /** Returns true if field totalMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALMONEY_ISSET_ID);
  }

  public void setTotalMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALMONEY_ISSET_ID, value);
  }

  /**
   * 发货|提货状态
   */
  public String getDeliveryState() {
    return this.deliveryState;
  }

  /**
   * 发货|提货状态
   */
  public ProductDetailVo setDeliveryState(String deliveryState) {
    this.deliveryState = deliveryState;
    return this;
  }

  public void unsetDeliveryState() {
    this.deliveryState = null;
  }

  /** Returns true if field deliveryState is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryState() {
    return this.deliveryState != null;
  }

  public void setDeliveryStateIsSet(boolean value) {
    if (!value) {
      this.deliveryState = null;
    }
  }

  /**
   * 是否可评价
   */
  public boolean isIsEnableComment() {
    return this.isEnableComment;
  }

  /**
   * 是否可评价
   */
  public ProductDetailVo setIsEnableComment(boolean isEnableComment) {
    this.isEnableComment = isEnableComment;
    setIsEnableCommentIsSet(true);
    return this;
  }

  public void unsetIsEnableComment() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLECOMMENT_ISSET_ID);
  }

  /** Returns true if field isEnableComment is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnableComment() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLECOMMENT_ISSET_ID);
  }

  public void setIsEnableCommentIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLECOMMENT_ISSET_ID, value);
  }

  /**
   * 是否已评价
   */
  public boolean isIsCommented() {
    return this.isCommented;
  }

  /**
   * 是否已评价
   */
  public ProductDetailVo setIsCommented(boolean isCommented) {
    this.isCommented = isCommented;
    setIsCommentedIsSet(true);
    return this;
  }

  public void unsetIsCommented() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISCOMMENTED_ISSET_ID);
  }

  /** Returns true if field isCommented is set (has been assigned a value) and false otherwise */
  public boolean isSetIsCommented() {
    return EncodingUtils.testBit(__isset_bitfield, __ISCOMMENTED_ISSET_ID);
  }

  public void setIsCommentedIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISCOMMENTED_ISSET_ID, value);
  }

  /**
   * 可退款数量
   */
  public int getCanRefundCount() {
    return this.canRefundCount;
  }

  /**
   * 可退款数量
   */
  public ProductDetailVo setCanRefundCount(int canRefundCount) {
    this.canRefundCount = canRefundCount;
    setCanRefundCountIsSet(true);
    return this;
  }

  public void unsetCanRefundCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CANREFUNDCOUNT_ISSET_ID);
  }

  /** Returns true if field canRefundCount is set (has been assigned a value) and false otherwise */
  public boolean isSetCanRefundCount() {
    return EncodingUtils.testBit(__isset_bitfield, __CANREFUNDCOUNT_ISSET_ID);
  }

  public void setCanRefundCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CANREFUNDCOUNT_ISSET_ID, value);
  }

  /**
   * 开始时间
   */
  public long getStartTime() {
    return this.startTime;
  }

  /**
   * 开始时间
   */
  public ProductDetailVo setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  /**
   * 截止时间
   */
  public long getEndTime() {
    return this.endTime;
  }

  /**
   * 截止时间
   */
  public ProductDetailVo setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  /**
   * 机构号
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 机构号
   */
  public ProductDetailVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 机构名
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 机构名
   */
  public ProductDetailVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 退货数量
   */
  public int getRefundCount() {
    return this.refundCount;
  }

  /**
   * 退货数量
   */
  public ProductDetailVo setRefundCount(int refundCount) {
    this.refundCount = refundCount;
    setRefundCountIsSet(true);
    return this;
  }

  public void unsetRefundCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REFUNDCOUNT_ISSET_ID);
  }

  /** Returns true if field refundCount is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundCount() {
    return EncodingUtils.testBit(__isset_bitfield, __REFUNDCOUNT_ISSET_ID);
  }

  public void setRefundCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REFUNDCOUNT_ISSET_ID, value);
  }

  /**
   * 可收货数量
   */
  public int getCanReceiveCount() {
    return this.canReceiveCount;
  }

  /**
   * 可收货数量
   */
  public ProductDetailVo setCanReceiveCount(int canReceiveCount) {
    this.canReceiveCount = canReceiveCount;
    setCanReceiveCountIsSet(true);
    return this;
  }

  public void unsetCanReceiveCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CANRECEIVECOUNT_ISSET_ID);
  }

  /** Returns true if field canReceiveCount is set (has been assigned a value) and false otherwise */
  public boolean isSetCanReceiveCount() {
    return EncodingUtils.testBit(__isset_bitfield, __CANRECEIVECOUNT_ISSET_ID);
  }

  public void setCanReceiveCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CANRECEIVECOUNT_ISSET_ID, value);
  }

  /**
   * 商品类型
   */
  public String getProductType() {
    return this.productType;
  }

  /**
   * 商品类型
   */
  public ProductDetailVo setProductType(String productType) {
    this.productType = productType;
    return this;
  }

  public void unsetProductType() {
    this.productType = null;
  }

  /** Returns true if field productType is set (has been assigned a value) and false otherwise */
  public boolean isSetProductType() {
    return this.productType != null;
  }

  public void setProductTypeIsSet(boolean value) {
    if (!value) {
      this.productType = null;
    }
  }

  /**
   * 活动ID
   */
  public String getActiveId() {
    return this.activeId;
  }

  /**
   * 活动ID
   */
  public ProductDetailVo setActiveId(String activeId) {
    this.activeId = activeId;
    return this;
  }

  public void unsetActiveId() {
    this.activeId = null;
  }

  /** Returns true if field activeId is set (has been assigned a value) and false otherwise */
  public boolean isSetActiveId() {
    return this.activeId != null;
  }

  public void setActiveIdIsSet(boolean value) {
    if (!value) {
      this.activeId = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case PRODUCT_IMAGE:
      if (value == null) {
        unsetProductImage();
      } else {
        setProductImage((String)value);
      }
      break;

    case MONEY:
      if (value == null) {
        unsetMoney();
      } else {
        setMoney((Double)value);
      }
      break;

    case QUANTITY:
      if (value == null) {
        unsetQuantity();
      } else {
        setQuantity((Integer)value);
      }
      break;

    case VIP_MONEY:
      if (value == null) {
        unsetVipMoney();
      } else {
        setVipMoney((Double)value);
      }
      break;

    case VIP_QUANTITY:
      if (value == null) {
        unsetVipQuantity();
      } else {
        setVipQuantity((Integer)value);
      }
      break;

    case DELIVERY_MONEY:
      if (value == null) {
        unsetDeliveryMoney();
      } else {
        setDeliveryMoney((Double)value);
      }
      break;

    case TOTAL_MONEY:
      if (value == null) {
        unsetTotalMoney();
      } else {
        setTotalMoney((Double)value);
      }
      break;

    case DELIVERY_STATE:
      if (value == null) {
        unsetDeliveryState();
      } else {
        setDeliveryState((String)value);
      }
      break;

    case IS_ENABLE_COMMENT:
      if (value == null) {
        unsetIsEnableComment();
      } else {
        setIsEnableComment((Boolean)value);
      }
      break;

    case IS_COMMENTED:
      if (value == null) {
        unsetIsCommented();
      } else {
        setIsCommented((Boolean)value);
      }
      break;

    case CAN_REFUND_COUNT:
      if (value == null) {
        unsetCanRefundCount();
      } else {
        setCanRefundCount((Integer)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((Long)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case REFUND_COUNT:
      if (value == null) {
        unsetRefundCount();
      } else {
        setRefundCount((Integer)value);
      }
      break;

    case CAN_RECEIVE_COUNT:
      if (value == null) {
        unsetCanReceiveCount();
      } else {
        setCanReceiveCount((Integer)value);
      }
      break;

    case PRODUCT_TYPE:
      if (value == null) {
        unsetProductType();
      } else {
        setProductType((String)value);
      }
      break;

    case ACTIVE_ID:
      if (value == null) {
        unsetActiveId();
      } else {
        setActiveId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return getProductId();

    case PRODUCT_NAME:
      return getProductName();

    case PRODUCT_IMAGE:
      return getProductImage();

    case MONEY:
      return Double.valueOf(getMoney());

    case QUANTITY:
      return Integer.valueOf(getQuantity());

    case VIP_MONEY:
      return Double.valueOf(getVipMoney());

    case VIP_QUANTITY:
      return Integer.valueOf(getVipQuantity());

    case DELIVERY_MONEY:
      return Double.valueOf(getDeliveryMoney());

    case TOTAL_MONEY:
      return Double.valueOf(getTotalMoney());

    case DELIVERY_STATE:
      return getDeliveryState();

    case IS_ENABLE_COMMENT:
      return Boolean.valueOf(isIsEnableComment());

    case IS_COMMENTED:
      return Boolean.valueOf(isIsCommented());

    case CAN_REFUND_COUNT:
      return Integer.valueOf(getCanRefundCount());

    case START_TIME:
      return Long.valueOf(getStartTime());

    case END_TIME:
      return Long.valueOf(getEndTime());

    case ORG_CODE:
      return getOrgCode();

    case ORG_NAME:
      return getOrgName();

    case REFUND_COUNT:
      return Integer.valueOf(getRefundCount());

    case CAN_RECEIVE_COUNT:
      return Integer.valueOf(getCanReceiveCount());

    case PRODUCT_TYPE:
      return getProductType();

    case ACTIVE_ID:
      return getActiveId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case PRODUCT_NAME:
      return isSetProductName();
    case PRODUCT_IMAGE:
      return isSetProductImage();
    case MONEY:
      return isSetMoney();
    case QUANTITY:
      return isSetQuantity();
    case VIP_MONEY:
      return isSetVipMoney();
    case VIP_QUANTITY:
      return isSetVipQuantity();
    case DELIVERY_MONEY:
      return isSetDeliveryMoney();
    case TOTAL_MONEY:
      return isSetTotalMoney();
    case DELIVERY_STATE:
      return isSetDeliveryState();
    case IS_ENABLE_COMMENT:
      return isSetIsEnableComment();
    case IS_COMMENTED:
      return isSetIsCommented();
    case CAN_REFUND_COUNT:
      return isSetCanRefundCount();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case ORG_CODE:
      return isSetOrgCode();
    case ORG_NAME:
      return isSetOrgName();
    case REFUND_COUNT:
      return isSetRefundCount();
    case CAN_RECEIVE_COUNT:
      return isSetCanReceiveCount();
    case PRODUCT_TYPE:
      return isSetProductType();
    case ACTIVE_ID:
      return isSetActiveId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProductDetailVo)
      return this.equals((ProductDetailVo)that);
    return false;
  }

  public boolean equals(ProductDetailVo that) {
    if (that == null)
      return false;

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_productImage = true && this.isSetProductImage();
    boolean that_present_productImage = true && that.isSetProductImage();
    if (this_present_productImage || that_present_productImage) {
      if (!(this_present_productImage && that_present_productImage))
        return false;
      if (!this.productImage.equals(that.productImage))
        return false;
    }

    boolean this_present_money = true;
    boolean that_present_money = true;
    if (this_present_money || that_present_money) {
      if (!(this_present_money && that_present_money))
        return false;
      if (this.money != that.money)
        return false;
    }

    boolean this_present_quantity = true;
    boolean that_present_quantity = true;
    if (this_present_quantity || that_present_quantity) {
      if (!(this_present_quantity && that_present_quantity))
        return false;
      if (this.quantity != that.quantity)
        return false;
    }

    boolean this_present_vipMoney = true;
    boolean that_present_vipMoney = true;
    if (this_present_vipMoney || that_present_vipMoney) {
      if (!(this_present_vipMoney && that_present_vipMoney))
        return false;
      if (this.vipMoney != that.vipMoney)
        return false;
    }

    boolean this_present_vipQuantity = true;
    boolean that_present_vipQuantity = true;
    if (this_present_vipQuantity || that_present_vipQuantity) {
      if (!(this_present_vipQuantity && that_present_vipQuantity))
        return false;
      if (this.vipQuantity != that.vipQuantity)
        return false;
    }

    boolean this_present_deliveryMoney = true;
    boolean that_present_deliveryMoney = true;
    if (this_present_deliveryMoney || that_present_deliveryMoney) {
      if (!(this_present_deliveryMoney && that_present_deliveryMoney))
        return false;
      if (this.deliveryMoney != that.deliveryMoney)
        return false;
    }

    boolean this_present_totalMoney = true;
    boolean that_present_totalMoney = true;
    if (this_present_totalMoney || that_present_totalMoney) {
      if (!(this_present_totalMoney && that_present_totalMoney))
        return false;
      if (this.totalMoney != that.totalMoney)
        return false;
    }

    boolean this_present_deliveryState = true && this.isSetDeliveryState();
    boolean that_present_deliveryState = true && that.isSetDeliveryState();
    if (this_present_deliveryState || that_present_deliveryState) {
      if (!(this_present_deliveryState && that_present_deliveryState))
        return false;
      if (!this.deliveryState.equals(that.deliveryState))
        return false;
    }

    boolean this_present_isEnableComment = true;
    boolean that_present_isEnableComment = true;
    if (this_present_isEnableComment || that_present_isEnableComment) {
      if (!(this_present_isEnableComment && that_present_isEnableComment))
        return false;
      if (this.isEnableComment != that.isEnableComment)
        return false;
    }

    boolean this_present_isCommented = true;
    boolean that_present_isCommented = true;
    if (this_present_isCommented || that_present_isCommented) {
      if (!(this_present_isCommented && that_present_isCommented))
        return false;
      if (this.isCommented != that.isCommented)
        return false;
    }

    boolean this_present_canRefundCount = true;
    boolean that_present_canRefundCount = true;
    if (this_present_canRefundCount || that_present_canRefundCount) {
      if (!(this_present_canRefundCount && that_present_canRefundCount))
        return false;
      if (this.canRefundCount != that.canRefundCount)
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_refundCount = true;
    boolean that_present_refundCount = true;
    if (this_present_refundCount || that_present_refundCount) {
      if (!(this_present_refundCount && that_present_refundCount))
        return false;
      if (this.refundCount != that.refundCount)
        return false;
    }

    boolean this_present_canReceiveCount = true;
    boolean that_present_canReceiveCount = true;
    if (this_present_canReceiveCount || that_present_canReceiveCount) {
      if (!(this_present_canReceiveCount && that_present_canReceiveCount))
        return false;
      if (this.canReceiveCount != that.canReceiveCount)
        return false;
    }

    boolean this_present_productType = true && this.isSetProductType();
    boolean that_present_productType = true && that.isSetProductType();
    if (this_present_productType || that_present_productType) {
      if (!(this_present_productType && that_present_productType))
        return false;
      if (!this.productType.equals(that.productType))
        return false;
    }

    boolean this_present_activeId = true && this.isSetActiveId();
    boolean that_present_activeId = true && that.isSetActiveId();
    if (this_present_activeId || that_present_activeId) {
      if (!(this_present_activeId && that_present_activeId))
        return false;
      if (!this.activeId.equals(that.activeId))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_productImage = true && (isSetProductImage());
    list.add(present_productImage);
    if (present_productImage)
      list.add(productImage);

    boolean present_money = true;
    list.add(present_money);
    if (present_money)
      list.add(money);

    boolean present_quantity = true;
    list.add(present_quantity);
    if (present_quantity)
      list.add(quantity);

    boolean present_vipMoney = true;
    list.add(present_vipMoney);
    if (present_vipMoney)
      list.add(vipMoney);

    boolean present_vipQuantity = true;
    list.add(present_vipQuantity);
    if (present_vipQuantity)
      list.add(vipQuantity);

    boolean present_deliveryMoney = true;
    list.add(present_deliveryMoney);
    if (present_deliveryMoney)
      list.add(deliveryMoney);

    boolean present_totalMoney = true;
    list.add(present_totalMoney);
    if (present_totalMoney)
      list.add(totalMoney);

    boolean present_deliveryState = true && (isSetDeliveryState());
    list.add(present_deliveryState);
    if (present_deliveryState)
      list.add(deliveryState);

    boolean present_isEnableComment = true;
    list.add(present_isEnableComment);
    if (present_isEnableComment)
      list.add(isEnableComment);

    boolean present_isCommented = true;
    list.add(present_isCommented);
    if (present_isCommented)
      list.add(isCommented);

    boolean present_canRefundCount = true;
    list.add(present_canRefundCount);
    if (present_canRefundCount)
      list.add(canRefundCount);

    boolean present_startTime = true;
    list.add(present_startTime);
    if (present_startTime)
      list.add(startTime);

    boolean present_endTime = true;
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_refundCount = true;
    list.add(present_refundCount);
    if (present_refundCount)
      list.add(refundCount);

    boolean present_canReceiveCount = true;
    list.add(present_canReceiveCount);
    if (present_canReceiveCount)
      list.add(canReceiveCount);

    boolean present_productType = true && (isSetProductType());
    list.add(present_productType);
    if (present_productType)
      list.add(productType);

    boolean present_activeId = true && (isSetActiveId());
    list.add(present_activeId);
    if (present_activeId)
      list.add(activeId);

    return list.hashCode();
  }

  @Override
  public int compareTo(ProductDetailVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductImage()).compareTo(other.isSetProductImage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductImage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productImage, other.productImage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMoney()).compareTo(other.isSetMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.money, other.money);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuantity()).compareTo(other.isSetQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quantity, other.quantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipMoney()).compareTo(other.isSetVipMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipMoney, other.vipMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipQuantity()).compareTo(other.isSetVipQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipQuantity, other.vipQuantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryMoney()).compareTo(other.isSetDeliveryMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryMoney, other.deliveryMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalMoney()).compareTo(other.isSetTotalMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalMoney, other.totalMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryState()).compareTo(other.isSetDeliveryState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryState, other.deliveryState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnableComment()).compareTo(other.isSetIsEnableComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnableComment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnableComment, other.isEnableComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsCommented()).compareTo(other.isSetIsCommented());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsCommented()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isCommented, other.isCommented);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCanRefundCount()).compareTo(other.isSetCanRefundCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCanRefundCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.canRefundCount, other.canRefundCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundCount()).compareTo(other.isSetRefundCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundCount, other.refundCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCanReceiveCount()).compareTo(other.isSetCanReceiveCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCanReceiveCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.canReceiveCount, other.canReceiveCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductType()).compareTo(other.isSetProductType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productType, other.productType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActiveId()).compareTo(other.isSetActiveId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActiveId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activeId, other.activeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProductDetailVo(");
    boolean first = true;

    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productImage:");
    if (this.productImage == null) {
      sb.append("null");
    } else {
      sb.append(this.productImage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("money:");
    sb.append(this.money);
    first = false;
    if (!first) sb.append(", ");
    sb.append("quantity:");
    sb.append(this.quantity);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipMoney:");
    sb.append(this.vipMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipQuantity:");
    sb.append(this.vipQuantity);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryMoney:");
    sb.append(this.deliveryMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalMoney:");
    sb.append(this.totalMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryState:");
    if (this.deliveryState == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isEnableComment:");
    sb.append(this.isEnableComment);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isCommented:");
    sb.append(this.isCommented);
    first = false;
    if (!first) sb.append(", ");
    sb.append("canRefundCount:");
    sb.append(this.canRefundCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundCount:");
    sb.append(this.refundCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("canReceiveCount:");
    sb.append(this.canReceiveCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productType:");
    if (this.productType == null) {
      sb.append("null");
    } else {
      sb.append(this.productType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("activeId:");
    if (this.activeId == null) {
      sb.append("null");
    } else {
      sb.append(this.activeId);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductDetailVoStandardSchemeFactory implements SchemeFactory {
    public ProductDetailVoStandardScheme getScheme() {
      return new ProductDetailVoStandardScheme();
    }
  }

  private static class ProductDetailVoStandardScheme extends StandardScheme<ProductDetailVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProductDetailVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PRODUCT_IMAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productImage = iprot.readString();
              struct.setProductImageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.money = iprot.readDouble();
              struct.setMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.quantity = iprot.readI32();
              struct.setQuantityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // VIP_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.vipMoney = iprot.readDouble();
              struct.setVipMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // VIP_QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.vipQuantity = iprot.readI32();
              struct.setVipQuantityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DELIVERY_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.deliveryMoney = iprot.readDouble();
              struct.setDeliveryMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TOTAL_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalMoney = iprot.readDouble();
              struct.setTotalMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DELIVERY_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryState = iprot.readString();
              struct.setDeliveryStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // IS_ENABLE_COMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnableComment = iprot.readBool();
              struct.setIsEnableCommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_COMMENTED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isCommented = iprot.readBool();
              struct.setIsCommentedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CAN_REFUND_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.canRefundCount = iprot.readI32();
              struct.setCanRefundCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // REFUND_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.refundCount = iprot.readI32();
              struct.setRefundCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // CAN_RECEIVE_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.canReceiveCount = iprot.readI32();
              struct.setCanReceiveCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PRODUCT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productType = iprot.readString();
              struct.setProductTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // ACTIVE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.activeId = iprot.readString();
              struct.setActiveIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProductDetailVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      if (struct.productImage != null) {
        oprot.writeFieldBegin(PRODUCT_IMAGE_FIELD_DESC);
        oprot.writeString(struct.productImage);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MONEY_FIELD_DESC);
      oprot.writeDouble(struct.money);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(QUANTITY_FIELD_DESC);
      oprot.writeI32(struct.quantity);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VIP_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.vipMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VIP_QUANTITY_FIELD_DESC);
      oprot.writeI32(struct.vipQuantity);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.deliveryMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.totalMoney);
      oprot.writeFieldEnd();
      if (struct.deliveryState != null) {
        oprot.writeFieldBegin(DELIVERY_STATE_FIELD_DESC);
        oprot.writeString(struct.deliveryState);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_ENABLE_COMMENT_FIELD_DESC);
      oprot.writeBool(struct.isEnableComment);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_COMMENTED_FIELD_DESC);
      oprot.writeBool(struct.isCommented);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAN_REFUND_COUNT_FIELD_DESC);
      oprot.writeI32(struct.canRefundCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REFUND_COUNT_FIELD_DESC);
      oprot.writeI32(struct.refundCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAN_RECEIVE_COUNT_FIELD_DESC);
      oprot.writeI32(struct.canReceiveCount);
      oprot.writeFieldEnd();
      if (struct.productType != null) {
        oprot.writeFieldBegin(PRODUCT_TYPE_FIELD_DESC);
        oprot.writeString(struct.productType);
        oprot.writeFieldEnd();
      }
      if (struct.activeId != null) {
        oprot.writeFieldBegin(ACTIVE_ID_FIELD_DESC);
        oprot.writeString(struct.activeId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductDetailVoTupleSchemeFactory implements SchemeFactory {
    public ProductDetailVoTupleScheme getScheme() {
      return new ProductDetailVoTupleScheme();
    }
  }

  private static class ProductDetailVoTupleScheme extends TupleScheme<ProductDetailVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProductDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProductId()) {
        optionals.set(0);
      }
      if (struct.isSetProductName()) {
        optionals.set(1);
      }
      if (struct.isSetProductImage()) {
        optionals.set(2);
      }
      if (struct.isSetMoney()) {
        optionals.set(3);
      }
      if (struct.isSetQuantity()) {
        optionals.set(4);
      }
      if (struct.isSetVipMoney()) {
        optionals.set(5);
      }
      if (struct.isSetVipQuantity()) {
        optionals.set(6);
      }
      if (struct.isSetDeliveryMoney()) {
        optionals.set(7);
      }
      if (struct.isSetTotalMoney()) {
        optionals.set(8);
      }
      if (struct.isSetDeliveryState()) {
        optionals.set(9);
      }
      if (struct.isSetIsEnableComment()) {
        optionals.set(10);
      }
      if (struct.isSetIsCommented()) {
        optionals.set(11);
      }
      if (struct.isSetCanRefundCount()) {
        optionals.set(12);
      }
      if (struct.isSetStartTime()) {
        optionals.set(13);
      }
      if (struct.isSetEndTime()) {
        optionals.set(14);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(15);
      }
      if (struct.isSetOrgName()) {
        optionals.set(16);
      }
      if (struct.isSetRefundCount()) {
        optionals.set(17);
      }
      if (struct.isSetCanReceiveCount()) {
        optionals.set(18);
      }
      if (struct.isSetProductType()) {
        optionals.set(19);
      }
      if (struct.isSetActiveId()) {
        optionals.set(20);
      }
      oprot.writeBitSet(optionals, 21);
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetProductImage()) {
        oprot.writeString(struct.productImage);
      }
      if (struct.isSetMoney()) {
        oprot.writeDouble(struct.money);
      }
      if (struct.isSetQuantity()) {
        oprot.writeI32(struct.quantity);
      }
      if (struct.isSetVipMoney()) {
        oprot.writeDouble(struct.vipMoney);
      }
      if (struct.isSetVipQuantity()) {
        oprot.writeI32(struct.vipQuantity);
      }
      if (struct.isSetDeliveryMoney()) {
        oprot.writeDouble(struct.deliveryMoney);
      }
      if (struct.isSetTotalMoney()) {
        oprot.writeDouble(struct.totalMoney);
      }
      if (struct.isSetDeliveryState()) {
        oprot.writeString(struct.deliveryState);
      }
      if (struct.isSetIsEnableComment()) {
        oprot.writeBool(struct.isEnableComment);
      }
      if (struct.isSetIsCommented()) {
        oprot.writeBool(struct.isCommented);
      }
      if (struct.isSetCanRefundCount()) {
        oprot.writeI32(struct.canRefundCount);
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetRefundCount()) {
        oprot.writeI32(struct.refundCount);
      }
      if (struct.isSetCanReceiveCount()) {
        oprot.writeI32(struct.canReceiveCount);
      }
      if (struct.isSetProductType()) {
        oprot.writeString(struct.productType);
      }
      if (struct.isSetActiveId()) {
        oprot.writeString(struct.activeId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProductDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(21);
      if (incoming.get(0)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.productImage = iprot.readString();
        struct.setProductImageIsSet(true);
      }
      if (incoming.get(3)) {
        struct.money = iprot.readDouble();
        struct.setMoneyIsSet(true);
      }
      if (incoming.get(4)) {
        struct.quantity = iprot.readI32();
        struct.setQuantityIsSet(true);
      }
      if (incoming.get(5)) {
        struct.vipMoney = iprot.readDouble();
        struct.setVipMoneyIsSet(true);
      }
      if (incoming.get(6)) {
        struct.vipQuantity = iprot.readI32();
        struct.setVipQuantityIsSet(true);
      }
      if (incoming.get(7)) {
        struct.deliveryMoney = iprot.readDouble();
        struct.setDeliveryMoneyIsSet(true);
      }
      if (incoming.get(8)) {
        struct.totalMoney = iprot.readDouble();
        struct.setTotalMoneyIsSet(true);
      }
      if (incoming.get(9)) {
        struct.deliveryState = iprot.readString();
        struct.setDeliveryStateIsSet(true);
      }
      if (incoming.get(10)) {
        struct.isEnableComment = iprot.readBool();
        struct.setIsEnableCommentIsSet(true);
      }
      if (incoming.get(11)) {
        struct.isCommented = iprot.readBool();
        struct.setIsCommentedIsSet(true);
      }
      if (incoming.get(12)) {
        struct.canRefundCount = iprot.readI32();
        struct.setCanRefundCountIsSet(true);
      }
      if (incoming.get(13)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(17)) {
        struct.refundCount = iprot.readI32();
        struct.setRefundCountIsSet(true);
      }
      if (incoming.get(18)) {
        struct.canReceiveCount = iprot.readI32();
        struct.setCanReceiveCountIsSet(true);
      }
      if (incoming.get(19)) {
        struct.productType = iprot.readString();
        struct.setProductTypeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.activeId = iprot.readString();
        struct.setActiveIdIsSet(true);
      }
    }
  }

}

