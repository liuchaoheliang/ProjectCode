/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 审核任务订单查询过滤对象vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class AuditTaskFilterVo implements org.apache.thrift.TBase<AuditTaskFilterVo, AuditTaskFilterVo._Fields>, java.io.Serializable, Cloneable, Comparable<AuditTaskFilterVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AuditTaskFilterVo");

  private static final org.apache.thrift.protocol.TField AUDIT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("auditId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField START_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startCreateTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField END_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endCreateTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField BUS_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("busCode", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("state", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField START_AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startAuditTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField END_AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endAuditTime", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)11);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AuditTaskFilterVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AuditTaskFilterVoTupleSchemeFactory());
  }

  /**
   * 审核流水号
   */
  public String auditId; // optional
  /**
   * 业务类型    1-商户审核
   */
  public String type; // optional
  /**
   * 所属机构：若没选择，则传当前登录人所属orgCode
   */
  public String orgCode; // optional
  /**
   * 创建开始时间
   */
  public long startCreateTime; // optional
  /**
   * 创建结束时间
   */
  public long endCreateTime; // optional
  /**
   * 商户名称
   */
  public String name; // optional
  /**
   * 业务号码
   */
  public String busCode; // optional
  /**
   * 查在途/查归档   0-在途 1-归档
   */
  public String state; // optional
  /**
   * 归档开始时间
   */
  public long startAuditTime; // optional
  /**
   * 归档结束时间
   */
  public long endAuditTime; // optional
  /**
   * 客户端id
   */
  public String clientId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 审核流水号
     */
    AUDIT_ID((short)1, "auditId"),
    /**
     * 业务类型    1-商户审核
     */
    TYPE((short)2, "type"),
    /**
     * 所属机构：若没选择，则传当前登录人所属orgCode
     */
    ORG_CODE((short)3, "orgCode"),
    /**
     * 创建开始时间
     */
    START_CREATE_TIME((short)4, "startCreateTime"),
    /**
     * 创建结束时间
     */
    END_CREATE_TIME((short)5, "endCreateTime"),
    /**
     * 商户名称
     */
    NAME((short)6, "name"),
    /**
     * 业务号码
     */
    BUS_CODE((short)7, "busCode"),
    /**
     * 查在途/查归档   0-在途 1-归档
     */
    STATE((short)8, "state"),
    /**
     * 归档开始时间
     */
    START_AUDIT_TIME((short)9, "startAuditTime"),
    /**
     * 归档结束时间
     */
    END_AUDIT_TIME((short)10, "endAuditTime"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)11, "clientId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AUDIT_ID
          return AUDIT_ID;
        case 2: // TYPE
          return TYPE;
        case 3: // ORG_CODE
          return ORG_CODE;
        case 4: // START_CREATE_TIME
          return START_CREATE_TIME;
        case 5: // END_CREATE_TIME
          return END_CREATE_TIME;
        case 6: // NAME
          return NAME;
        case 7: // BUS_CODE
          return BUS_CODE;
        case 8: // STATE
          return STATE;
        case 9: // START_AUDIT_TIME
          return START_AUDIT_TIME;
        case 10: // END_AUDIT_TIME
          return END_AUDIT_TIME;
        case 11: // CLIENT_ID
          return CLIENT_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STARTCREATETIME_ISSET_ID = 0;
  private static final int __ENDCREATETIME_ISSET_ID = 1;
  private static final int __STARTAUDITTIME_ISSET_ID = 2;
  private static final int __ENDAUDITTIME_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.AUDIT_ID,_Fields.TYPE,_Fields.ORG_CODE,_Fields.START_CREATE_TIME,_Fields.END_CREATE_TIME,_Fields.NAME,_Fields.BUS_CODE,_Fields.STATE,_Fields.START_AUDIT_TIME,_Fields.END_AUDIT_TIME,_Fields.CLIENT_ID};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AUDIT_ID, new org.apache.thrift.meta_data.FieldMetaData("auditId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("startCreateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("endCreateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUS_CODE, new org.apache.thrift.meta_data.FieldMetaData("busCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATE, new org.apache.thrift.meta_data.FieldMetaData("state", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("startAuditTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("endAuditTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AuditTaskFilterVo.class, metaDataMap);
  }

  public AuditTaskFilterVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AuditTaskFilterVo(AuditTaskFilterVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAuditId()) {
      this.auditId = other.auditId;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    this.startCreateTime = other.startCreateTime;
    this.endCreateTime = other.endCreateTime;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetBusCode()) {
      this.busCode = other.busCode;
    }
    if (other.isSetState()) {
      this.state = other.state;
    }
    this.startAuditTime = other.startAuditTime;
    this.endAuditTime = other.endAuditTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
  }

  public AuditTaskFilterVo deepCopy() {
    return new AuditTaskFilterVo(this);
  }

  @Override
  public void clear() {
    this.auditId = null;
    this.type = null;
    this.orgCode = null;
    setStartCreateTimeIsSet(false);
    this.startCreateTime = 0;
    setEndCreateTimeIsSet(false);
    this.endCreateTime = 0;
    this.name = null;
    this.busCode = null;
    this.state = null;
    setStartAuditTimeIsSet(false);
    this.startAuditTime = 0;
    setEndAuditTimeIsSet(false);
    this.endAuditTime = 0;
    this.clientId = null;
  }

  /**
   * 审核流水号
   */
  public String getAuditId() {
    return this.auditId;
  }

  /**
   * 审核流水号
   */
  public AuditTaskFilterVo setAuditId(String auditId) {
    this.auditId = auditId;
    return this;
  }

  public void unsetAuditId() {
    this.auditId = null;
  }

  /** Returns true if field auditId is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditId() {
    return this.auditId != null;
  }

  public void setAuditIdIsSet(boolean value) {
    if (!value) {
      this.auditId = null;
    }
  }

  /**
   * 业务类型    1-商户审核
   */
  public String getType() {
    return this.type;
  }

  /**
   * 业务类型    1-商户审核
   */
  public AuditTaskFilterVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 所属机构：若没选择，则传当前登录人所属orgCode
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 所属机构：若没选择，则传当前登录人所属orgCode
   */
  public AuditTaskFilterVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 创建开始时间
   */
  public long getStartCreateTime() {
    return this.startCreateTime;
  }

  /**
   * 创建开始时间
   */
  public AuditTaskFilterVo setStartCreateTime(long startCreateTime) {
    this.startCreateTime = startCreateTime;
    setStartCreateTimeIsSet(true);
    return this;
  }

  public void unsetStartCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID);
  }

  /** Returns true if field startCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID);
  }

  public void setStartCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID, value);
  }

  /**
   * 创建结束时间
   */
  public long getEndCreateTime() {
    return this.endCreateTime;
  }

  /**
   * 创建结束时间
   */
  public AuditTaskFilterVo setEndCreateTime(long endCreateTime) {
    this.endCreateTime = endCreateTime;
    setEndCreateTimeIsSet(true);
    return this;
  }

  public void unsetEndCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID);
  }

  /** Returns true if field endCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID);
  }

  public void setEndCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID, value);
  }

  /**
   * 商户名称
   */
  public String getName() {
    return this.name;
  }

  /**
   * 商户名称
   */
  public AuditTaskFilterVo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  /**
   * 业务号码
   */
  public String getBusCode() {
    return this.busCode;
  }

  /**
   * 业务号码
   */
  public AuditTaskFilterVo setBusCode(String busCode) {
    this.busCode = busCode;
    return this;
  }

  public void unsetBusCode() {
    this.busCode = null;
  }

  /** Returns true if field busCode is set (has been assigned a value) and false otherwise */
  public boolean isSetBusCode() {
    return this.busCode != null;
  }

  public void setBusCodeIsSet(boolean value) {
    if (!value) {
      this.busCode = null;
    }
  }

  /**
   * 查在途/查归档   0-在途 1-归档
   */
  public String getState() {
    return this.state;
  }

  /**
   * 查在途/查归档   0-在途 1-归档
   */
  public AuditTaskFilterVo setState(String state) {
    this.state = state;
    return this;
  }

  public void unsetState() {
    this.state = null;
  }

  /** Returns true if field state is set (has been assigned a value) and false otherwise */
  public boolean isSetState() {
    return this.state != null;
  }

  public void setStateIsSet(boolean value) {
    if (!value) {
      this.state = null;
    }
  }

  /**
   * 归档开始时间
   */
  public long getStartAuditTime() {
    return this.startAuditTime;
  }

  /**
   * 归档开始时间
   */
  public AuditTaskFilterVo setStartAuditTime(long startAuditTime) {
    this.startAuditTime = startAuditTime;
    setStartAuditTimeIsSet(true);
    return this;
  }

  public void unsetStartAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTAUDITTIME_ISSET_ID);
  }

  /** Returns true if field startAuditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTAUDITTIME_ISSET_ID);
  }

  public void setStartAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTAUDITTIME_ISSET_ID, value);
  }

  /**
   * 归档结束时间
   */
  public long getEndAuditTime() {
    return this.endAuditTime;
  }

  /**
   * 归档结束时间
   */
  public AuditTaskFilterVo setEndAuditTime(long endAuditTime) {
    this.endAuditTime = endAuditTime;
    setEndAuditTimeIsSet(true);
    return this;
  }

  public void unsetEndAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDAUDITTIME_ISSET_ID);
  }

  /** Returns true if field endAuditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDAUDITTIME_ISSET_ID);
  }

  public void setEndAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDAUDITTIME_ISSET_ID, value);
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public AuditTaskFilterVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AUDIT_ID:
      if (value == null) {
        unsetAuditId();
      } else {
        setAuditId((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case START_CREATE_TIME:
      if (value == null) {
        unsetStartCreateTime();
      } else {
        setStartCreateTime((Long)value);
      }
      break;

    case END_CREATE_TIME:
      if (value == null) {
        unsetEndCreateTime();
      } else {
        setEndCreateTime((Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case BUS_CODE:
      if (value == null) {
        unsetBusCode();
      } else {
        setBusCode((String)value);
      }
      break;

    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((String)value);
      }
      break;

    case START_AUDIT_TIME:
      if (value == null) {
        unsetStartAuditTime();
      } else {
        setStartAuditTime((Long)value);
      }
      break;

    case END_AUDIT_TIME:
      if (value == null) {
        unsetEndAuditTime();
      } else {
        setEndAuditTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AUDIT_ID:
      return getAuditId();

    case TYPE:
      return getType();

    case ORG_CODE:
      return getOrgCode();

    case START_CREATE_TIME:
      return Long.valueOf(getStartCreateTime());

    case END_CREATE_TIME:
      return Long.valueOf(getEndCreateTime());

    case NAME:
      return getName();

    case BUS_CODE:
      return getBusCode();

    case STATE:
      return getState();

    case START_AUDIT_TIME:
      return Long.valueOf(getStartAuditTime());

    case END_AUDIT_TIME:
      return Long.valueOf(getEndAuditTime());

    case CLIENT_ID:
      return getClientId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AUDIT_ID:
      return isSetAuditId();
    case TYPE:
      return isSetType();
    case ORG_CODE:
      return isSetOrgCode();
    case START_CREATE_TIME:
      return isSetStartCreateTime();
    case END_CREATE_TIME:
      return isSetEndCreateTime();
    case NAME:
      return isSetName();
    case BUS_CODE:
      return isSetBusCode();
    case STATE:
      return isSetState();
    case START_AUDIT_TIME:
      return isSetStartAuditTime();
    case END_AUDIT_TIME:
      return isSetEndAuditTime();
    case CLIENT_ID:
      return isSetClientId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AuditTaskFilterVo)
      return this.equals((AuditTaskFilterVo)that);
    return false;
  }

  public boolean equals(AuditTaskFilterVo that) {
    if (that == null)
      return false;

    boolean this_present_auditId = true && this.isSetAuditId();
    boolean that_present_auditId = true && that.isSetAuditId();
    if (this_present_auditId || that_present_auditId) {
      if (!(this_present_auditId && that_present_auditId))
        return false;
      if (!this.auditId.equals(that.auditId))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_startCreateTime = true && this.isSetStartCreateTime();
    boolean that_present_startCreateTime = true && that.isSetStartCreateTime();
    if (this_present_startCreateTime || that_present_startCreateTime) {
      if (!(this_present_startCreateTime && that_present_startCreateTime))
        return false;
      if (this.startCreateTime != that.startCreateTime)
        return false;
    }

    boolean this_present_endCreateTime = true && this.isSetEndCreateTime();
    boolean that_present_endCreateTime = true && that.isSetEndCreateTime();
    if (this_present_endCreateTime || that_present_endCreateTime) {
      if (!(this_present_endCreateTime && that_present_endCreateTime))
        return false;
      if (this.endCreateTime != that.endCreateTime)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_busCode = true && this.isSetBusCode();
    boolean that_present_busCode = true && that.isSetBusCode();
    if (this_present_busCode || that_present_busCode) {
      if (!(this_present_busCode && that_present_busCode))
        return false;
      if (!this.busCode.equals(that.busCode))
        return false;
    }

    boolean this_present_state = true && this.isSetState();
    boolean that_present_state = true && that.isSetState();
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (!this.state.equals(that.state))
        return false;
    }

    boolean this_present_startAuditTime = true && this.isSetStartAuditTime();
    boolean that_present_startAuditTime = true && that.isSetStartAuditTime();
    if (this_present_startAuditTime || that_present_startAuditTime) {
      if (!(this_present_startAuditTime && that_present_startAuditTime))
        return false;
      if (this.startAuditTime != that.startAuditTime)
        return false;
    }

    boolean this_present_endAuditTime = true && this.isSetEndAuditTime();
    boolean that_present_endAuditTime = true && that.isSetEndAuditTime();
    if (this_present_endAuditTime || that_present_endAuditTime) {
      if (!(this_present_endAuditTime && that_present_endAuditTime))
        return false;
      if (this.endAuditTime != that.endAuditTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_auditId = true && (isSetAuditId());
    list.add(present_auditId);
    if (present_auditId)
      list.add(auditId);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_startCreateTime = true && (isSetStartCreateTime());
    list.add(present_startCreateTime);
    if (present_startCreateTime)
      list.add(startCreateTime);

    boolean present_endCreateTime = true && (isSetEndCreateTime());
    list.add(present_endCreateTime);
    if (present_endCreateTime)
      list.add(endCreateTime);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_busCode = true && (isSetBusCode());
    list.add(present_busCode);
    if (present_busCode)
      list.add(busCode);

    boolean present_state = true && (isSetState());
    list.add(present_state);
    if (present_state)
      list.add(state);

    boolean present_startAuditTime = true && (isSetStartAuditTime());
    list.add(present_startAuditTime);
    if (present_startAuditTime)
      list.add(startAuditTime);

    boolean present_endAuditTime = true && (isSetEndAuditTime());
    list.add(present_endAuditTime);
    if (present_endAuditTime)
      list.add(endAuditTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    return list.hashCode();
  }

  @Override
  public int compareTo(AuditTaskFilterVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAuditId()).compareTo(other.isSetAuditId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditId, other.auditId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartCreateTime()).compareTo(other.isSetStartCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startCreateTime, other.startCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndCreateTime()).compareTo(other.isSetEndCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endCreateTime, other.endCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusCode()).compareTo(other.isSetBusCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.busCode, other.busCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetState()).compareTo(other.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.state, other.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartAuditTime()).compareTo(other.isSetStartAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startAuditTime, other.startAuditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndAuditTime()).compareTo(other.isSetEndAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endAuditTime, other.endAuditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AuditTaskFilterVo(");
    boolean first = true;

    if (isSetAuditId()) {
      sb.append("auditId:");
      if (this.auditId == null) {
        sb.append("null");
      } else {
        sb.append(this.auditId);
      }
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      if (this.type == null) {
        sb.append("null");
      } else {
        sb.append(this.type);
      }
      first = false;
    }
    if (isSetOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
    }
    if (isSetStartCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("startCreateTime:");
      sb.append(this.startCreateTime);
      first = false;
    }
    if (isSetEndCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("endCreateTime:");
      sb.append(this.endCreateTime);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetBusCode()) {
      if (!first) sb.append(", ");
      sb.append("busCode:");
      if (this.busCode == null) {
        sb.append("null");
      } else {
        sb.append(this.busCode);
      }
      first = false;
    }
    if (isSetState()) {
      if (!first) sb.append(", ");
      sb.append("state:");
      if (this.state == null) {
        sb.append("null");
      } else {
        sb.append(this.state);
      }
      first = false;
    }
    if (isSetStartAuditTime()) {
      if (!first) sb.append(", ");
      sb.append("startAuditTime:");
      sb.append(this.startAuditTime);
      first = false;
    }
    if (isSetEndAuditTime()) {
      if (!first) sb.append(", ");
      sb.append("endAuditTime:");
      sb.append(this.endAuditTime);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AuditTaskFilterVoStandardSchemeFactory implements SchemeFactory {
    public AuditTaskFilterVoStandardScheme getScheme() {
      return new AuditTaskFilterVoStandardScheme();
    }
  }

  private static class AuditTaskFilterVoStandardScheme extends StandardScheme<AuditTaskFilterVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AuditTaskFilterVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AUDIT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditId = iprot.readString();
              struct.setAuditIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // START_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startCreateTime = iprot.readI64();
              struct.setStartCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // END_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endCreateTime = iprot.readI64();
              struct.setEndCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BUS_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.busCode = iprot.readString();
              struct.setBusCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.state = iprot.readString();
              struct.setStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // START_AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startAuditTime = iprot.readI64();
              struct.setStartAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // END_AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endAuditTime = iprot.readI64();
              struct.setEndAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AuditTaskFilterVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.auditId != null) {
        if (struct.isSetAuditId()) {
          oprot.writeFieldBegin(AUDIT_ID_FIELD_DESC);
          oprot.writeString(struct.auditId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.type != null) {
        if (struct.isSetType()) {
          oprot.writeFieldBegin(TYPE_FIELD_DESC);
          oprot.writeString(struct.type);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgCode != null) {
        if (struct.isSetOrgCode()) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStartCreateTime()) {
        oprot.writeFieldBegin(START_CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.startCreateTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndCreateTime()) {
        oprot.writeFieldBegin(END_CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.endCreateTime);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.busCode != null) {
        if (struct.isSetBusCode()) {
          oprot.writeFieldBegin(BUS_CODE_FIELD_DESC);
          oprot.writeString(struct.busCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.state != null) {
        if (struct.isSetState()) {
          oprot.writeFieldBegin(STATE_FIELD_DESC);
          oprot.writeString(struct.state);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStartAuditTime()) {
        oprot.writeFieldBegin(START_AUDIT_TIME_FIELD_DESC);
        oprot.writeI64(struct.startAuditTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndAuditTime()) {
        oprot.writeFieldBegin(END_AUDIT_TIME_FIELD_DESC);
        oprot.writeI64(struct.endAuditTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AuditTaskFilterVoTupleSchemeFactory implements SchemeFactory {
    public AuditTaskFilterVoTupleScheme getScheme() {
      return new AuditTaskFilterVoTupleScheme();
    }
  }

  private static class AuditTaskFilterVoTupleScheme extends TupleScheme<AuditTaskFilterVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AuditTaskFilterVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAuditId()) {
        optionals.set(0);
      }
      if (struct.isSetType()) {
        optionals.set(1);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(2);
      }
      if (struct.isSetStartCreateTime()) {
        optionals.set(3);
      }
      if (struct.isSetEndCreateTime()) {
        optionals.set(4);
      }
      if (struct.isSetName()) {
        optionals.set(5);
      }
      if (struct.isSetBusCode()) {
        optionals.set(6);
      }
      if (struct.isSetState()) {
        optionals.set(7);
      }
      if (struct.isSetStartAuditTime()) {
        optionals.set(8);
      }
      if (struct.isSetEndAuditTime()) {
        optionals.set(9);
      }
      if (struct.isSetClientId()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetAuditId()) {
        oprot.writeString(struct.auditId);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetStartCreateTime()) {
        oprot.writeI64(struct.startCreateTime);
      }
      if (struct.isSetEndCreateTime()) {
        oprot.writeI64(struct.endCreateTime);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetBusCode()) {
        oprot.writeString(struct.busCode);
      }
      if (struct.isSetState()) {
        oprot.writeString(struct.state);
      }
      if (struct.isSetStartAuditTime()) {
        oprot.writeI64(struct.startAuditTime);
      }
      if (struct.isSetEndAuditTime()) {
        oprot.writeI64(struct.endAuditTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AuditTaskFilterVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.auditId = iprot.readString();
        struct.setAuditIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.startCreateTime = iprot.readI64();
        struct.setStartCreateTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.endCreateTime = iprot.readI64();
        struct.setEndCreateTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.busCode = iprot.readString();
        struct.setBusCodeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.state = iprot.readString();
        struct.setStateIsSet(true);
      }
      if (incoming.get(8)) {
        struct.startAuditTime = iprot.readI64();
        struct.setStartAuditTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.endAuditTime = iprot.readI64();
        struct.setEndAuditTimeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
    }
  }

}

