/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.active;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 红包券码明细 *
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class VouchersCouponCodeVO implements org.apache.thrift.TBase<VouchersCouponCodeVO, VouchersCouponCodeVO._Fields>, java.io.Serializable, Cloneable, Comparable<VouchersCouponCodeVO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("VouchersCouponCodeVO");

  private static final org.apache.thrift.protocol.TField NUMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("numberCode", org.apache.thrift.protocol.TType.I16, (short)1);
  private static final org.apache.thrift.protocol.TField VOUCHERS_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("vouchersIds", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField VOUCHERS_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("vouchersMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField VOUCHERS_RES_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("vouchersResMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new VouchersCouponCodeVOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new VouchersCouponCodeVOTupleSchemeFactory());
  }

  /**
   * 序号*
   */
  public short numberCode; // required
  /**
   * 红包券码*
   */
  public String vouchersIds; // required
  /**
   * 金额*
   */
  public double vouchersMoney; // required
  /**
   * 余额*
   */
  public double vouchersResMoney; // required
  /**
   * 上传时间*
   */
  public long createTime; // required
  /**
   * 状态 *
   */
  public String status; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 序号*
     */
    NUMBER_CODE((short)1, "numberCode"),
    /**
     * 红包券码*
     */
    VOUCHERS_IDS((short)2, "vouchersIds"),
    /**
     * 金额*
     */
    VOUCHERS_MONEY((short)3, "vouchersMoney"),
    /**
     * 余额*
     */
    VOUCHERS_RES_MONEY((short)4, "vouchersResMoney"),
    /**
     * 上传时间*
     */
    CREATE_TIME((short)5, "createTime"),
    /**
     * 状态 *
     */
    STATUS((short)6, "status");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NUMBER_CODE
          return NUMBER_CODE;
        case 2: // VOUCHERS_IDS
          return VOUCHERS_IDS;
        case 3: // VOUCHERS_MONEY
          return VOUCHERS_MONEY;
        case 4: // VOUCHERS_RES_MONEY
          return VOUCHERS_RES_MONEY;
        case 5: // CREATE_TIME
          return CREATE_TIME;
        case 6: // STATUS
          return STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __NUMBERCODE_ISSET_ID = 0;
  private static final int __VOUCHERSMONEY_ISSET_ID = 1;
  private static final int __VOUCHERSRESMONEY_ISSET_ID = 2;
  private static final int __CREATETIME_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NUMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("numberCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.VOUCHERS_IDS, new org.apache.thrift.meta_data.FieldMetaData("vouchersIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VOUCHERS_MONEY, new org.apache.thrift.meta_data.FieldMetaData("vouchersMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.VOUCHERS_RES_MONEY, new org.apache.thrift.meta_data.FieldMetaData("vouchersResMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(VouchersCouponCodeVO.class, metaDataMap);
  }

  public VouchersCouponCodeVO() {
  }

  public VouchersCouponCodeVO(
    short numberCode,
    String vouchersIds,
    double vouchersMoney,
    double vouchersResMoney,
    long createTime,
    String status)
  {
    this();
    this.numberCode = numberCode;
    setNumberCodeIsSet(true);
    this.vouchersIds = vouchersIds;
    this.vouchersMoney = vouchersMoney;
    setVouchersMoneyIsSet(true);
    this.vouchersResMoney = vouchersResMoney;
    setVouchersResMoneyIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.status = status;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public VouchersCouponCodeVO(VouchersCouponCodeVO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.numberCode = other.numberCode;
    if (other.isSetVouchersIds()) {
      this.vouchersIds = other.vouchersIds;
    }
    this.vouchersMoney = other.vouchersMoney;
    this.vouchersResMoney = other.vouchersResMoney;
    this.createTime = other.createTime;
    if (other.isSetStatus()) {
      this.status = other.status;
    }
  }

  public VouchersCouponCodeVO deepCopy() {
    return new VouchersCouponCodeVO(this);
  }

  @Override
  public void clear() {
    setNumberCodeIsSet(false);
    this.numberCode = 0;
    this.vouchersIds = null;
    setVouchersMoneyIsSet(false);
    this.vouchersMoney = 0.0;
    setVouchersResMoneyIsSet(false);
    this.vouchersResMoney = 0.0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.status = null;
  }

  /**
   * 序号*
   */
  public short getNumberCode() {
    return this.numberCode;
  }

  /**
   * 序号*
   */
  public VouchersCouponCodeVO setNumberCode(short numberCode) {
    this.numberCode = numberCode;
    setNumberCodeIsSet(true);
    return this;
  }

  public void unsetNumberCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMBERCODE_ISSET_ID);
  }

  /** Returns true if field numberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetNumberCode() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMBERCODE_ISSET_ID);
  }

  public void setNumberCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMBERCODE_ISSET_ID, value);
  }

  /**
   * 红包券码*
   */
  public String getVouchersIds() {
    return this.vouchersIds;
  }

  /**
   * 红包券码*
   */
  public VouchersCouponCodeVO setVouchersIds(String vouchersIds) {
    this.vouchersIds = vouchersIds;
    return this;
  }

  public void unsetVouchersIds() {
    this.vouchersIds = null;
  }

  /** Returns true if field vouchersIds is set (has been assigned a value) and false otherwise */
  public boolean isSetVouchersIds() {
    return this.vouchersIds != null;
  }

  public void setVouchersIdsIsSet(boolean value) {
    if (!value) {
      this.vouchersIds = null;
    }
  }

  /**
   * 金额*
   */
  public double getVouchersMoney() {
    return this.vouchersMoney;
  }

  /**
   * 金额*
   */
  public VouchersCouponCodeVO setVouchersMoney(double vouchersMoney) {
    this.vouchersMoney = vouchersMoney;
    setVouchersMoneyIsSet(true);
    return this;
  }

  public void unsetVouchersMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VOUCHERSMONEY_ISSET_ID);
  }

  /** Returns true if field vouchersMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetVouchersMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __VOUCHERSMONEY_ISSET_ID);
  }

  public void setVouchersMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VOUCHERSMONEY_ISSET_ID, value);
  }

  /**
   * 余额*
   */
  public double getVouchersResMoney() {
    return this.vouchersResMoney;
  }

  /**
   * 余额*
   */
  public VouchersCouponCodeVO setVouchersResMoney(double vouchersResMoney) {
    this.vouchersResMoney = vouchersResMoney;
    setVouchersResMoneyIsSet(true);
    return this;
  }

  public void unsetVouchersResMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VOUCHERSRESMONEY_ISSET_ID);
  }

  /** Returns true if field vouchersResMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetVouchersResMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __VOUCHERSRESMONEY_ISSET_ID);
  }

  public void setVouchersResMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VOUCHERSRESMONEY_ISSET_ID, value);
  }

  /**
   * 上传时间*
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 上传时间*
   */
  public VouchersCouponCodeVO setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 状态 *
   */
  public String getStatus() {
    return this.status;
  }

  /**
   * 状态 *
   */
  public VouchersCouponCodeVO setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case NUMBER_CODE:
      if (value == null) {
        unsetNumberCode();
      } else {
        setNumberCode((Short)value);
      }
      break;

    case VOUCHERS_IDS:
      if (value == null) {
        unsetVouchersIds();
      } else {
        setVouchersIds((String)value);
      }
      break;

    case VOUCHERS_MONEY:
      if (value == null) {
        unsetVouchersMoney();
      } else {
        setVouchersMoney((Double)value);
      }
      break;

    case VOUCHERS_RES_MONEY:
      if (value == null) {
        unsetVouchersResMoney();
      } else {
        setVouchersResMoney((Double)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case NUMBER_CODE:
      return Short.valueOf(getNumberCode());

    case VOUCHERS_IDS:
      return getVouchersIds();

    case VOUCHERS_MONEY:
      return Double.valueOf(getVouchersMoney());

    case VOUCHERS_RES_MONEY:
      return Double.valueOf(getVouchersResMoney());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case STATUS:
      return getStatus();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case NUMBER_CODE:
      return isSetNumberCode();
    case VOUCHERS_IDS:
      return isSetVouchersIds();
    case VOUCHERS_MONEY:
      return isSetVouchersMoney();
    case VOUCHERS_RES_MONEY:
      return isSetVouchersResMoney();
    case CREATE_TIME:
      return isSetCreateTime();
    case STATUS:
      return isSetStatus();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof VouchersCouponCodeVO)
      return this.equals((VouchersCouponCodeVO)that);
    return false;
  }

  public boolean equals(VouchersCouponCodeVO that) {
    if (that == null)
      return false;

    boolean this_present_numberCode = true;
    boolean that_present_numberCode = true;
    if (this_present_numberCode || that_present_numberCode) {
      if (!(this_present_numberCode && that_present_numberCode))
        return false;
      if (this.numberCode != that.numberCode)
        return false;
    }

    boolean this_present_vouchersIds = true && this.isSetVouchersIds();
    boolean that_present_vouchersIds = true && that.isSetVouchersIds();
    if (this_present_vouchersIds || that_present_vouchersIds) {
      if (!(this_present_vouchersIds && that_present_vouchersIds))
        return false;
      if (!this.vouchersIds.equals(that.vouchersIds))
        return false;
    }

    boolean this_present_vouchersMoney = true;
    boolean that_present_vouchersMoney = true;
    if (this_present_vouchersMoney || that_present_vouchersMoney) {
      if (!(this_present_vouchersMoney && that_present_vouchersMoney))
        return false;
      if (this.vouchersMoney != that.vouchersMoney)
        return false;
    }

    boolean this_present_vouchersResMoney = true;
    boolean that_present_vouchersResMoney = true;
    if (this_present_vouchersResMoney || that_present_vouchersResMoney) {
      if (!(this_present_vouchersResMoney && that_present_vouchersResMoney))
        return false;
      if (this.vouchersResMoney != that.vouchersResMoney)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_numberCode = true;
    list.add(present_numberCode);
    if (present_numberCode)
      list.add(numberCode);

    boolean present_vouchersIds = true && (isSetVouchersIds());
    list.add(present_vouchersIds);
    if (present_vouchersIds)
      list.add(vouchersIds);

    boolean present_vouchersMoney = true;
    list.add(present_vouchersMoney);
    if (present_vouchersMoney)
      list.add(vouchersMoney);

    boolean present_vouchersResMoney = true;
    list.add(present_vouchersResMoney);
    if (present_vouchersResMoney)
      list.add(vouchersResMoney);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_status = true && (isSetStatus());
    list.add(present_status);
    if (present_status)
      list.add(status);

    return list.hashCode();
  }

  @Override
  public int compareTo(VouchersCouponCodeVO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetNumberCode()).compareTo(other.isSetNumberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numberCode, other.numberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVouchersIds()).compareTo(other.isSetVouchersIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVouchersIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vouchersIds, other.vouchersIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVouchersMoney()).compareTo(other.isSetVouchersMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVouchersMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vouchersMoney, other.vouchersMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVouchersResMoney()).compareTo(other.isSetVouchersResMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVouchersResMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vouchersResMoney, other.vouchersResMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("VouchersCouponCodeVO(");
    boolean first = true;

    sb.append("numberCode:");
    sb.append(this.numberCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vouchersIds:");
    if (this.vouchersIds == null) {
      sb.append("null");
    } else {
      sb.append(this.vouchersIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("vouchersMoney:");
    sb.append(this.vouchersMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vouchersResMoney:");
    sb.append(this.vouchersResMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class VouchersCouponCodeVOStandardSchemeFactory implements SchemeFactory {
    public VouchersCouponCodeVOStandardScheme getScheme() {
      return new VouchersCouponCodeVOStandardScheme();
    }
  }

  private static class VouchersCouponCodeVOStandardScheme extends StandardScheme<VouchersCouponCodeVO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, VouchersCouponCodeVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NUMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.numberCode = iprot.readI16();
              struct.setNumberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // VOUCHERS_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.vouchersIds = iprot.readString();
              struct.setVouchersIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VOUCHERS_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.vouchersMoney = iprot.readDouble();
              struct.setVouchersMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VOUCHERS_RES_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.vouchersResMoney = iprot.readDouble();
              struct.setVouchersResMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.status = iprot.readString();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, VouchersCouponCodeVO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(NUMBER_CODE_FIELD_DESC);
      oprot.writeI16(struct.numberCode);
      oprot.writeFieldEnd();
      if (struct.vouchersIds != null) {
        oprot.writeFieldBegin(VOUCHERS_IDS_FIELD_DESC);
        oprot.writeString(struct.vouchersIds);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VOUCHERS_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.vouchersMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VOUCHERS_RES_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.vouchersResMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeString(struct.status);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class VouchersCouponCodeVOTupleSchemeFactory implements SchemeFactory {
    public VouchersCouponCodeVOTupleScheme getScheme() {
      return new VouchersCouponCodeVOTupleScheme();
    }
  }

  private static class VouchersCouponCodeVOTupleScheme extends TupleScheme<VouchersCouponCodeVO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, VouchersCouponCodeVO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetNumberCode()) {
        optionals.set(0);
      }
      if (struct.isSetVouchersIds()) {
        optionals.set(1);
      }
      if (struct.isSetVouchersMoney()) {
        optionals.set(2);
      }
      if (struct.isSetVouchersResMoney()) {
        optionals.set(3);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(4);
      }
      if (struct.isSetStatus()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetNumberCode()) {
        oprot.writeI16(struct.numberCode);
      }
      if (struct.isSetVouchersIds()) {
        oprot.writeString(struct.vouchersIds);
      }
      if (struct.isSetVouchersMoney()) {
        oprot.writeDouble(struct.vouchersMoney);
      }
      if (struct.isSetVouchersResMoney()) {
        oprot.writeDouble(struct.vouchersResMoney);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetStatus()) {
        oprot.writeString(struct.status);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, VouchersCouponCodeVO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.numberCode = iprot.readI16();
        struct.setNumberCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.vouchersIds = iprot.readString();
        struct.setVouchersIdsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.vouchersMoney = iprot.readDouble();
        struct.setVouchersMoneyIsSet(true);
      }
      if (incoming.get(3)) {
        struct.vouchersResMoney = iprot.readDouble();
        struct.setVouchersResMoneyIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.status = iprot.readString();
        struct.setStatusIsSet(true);
      }
    }
  }

}

