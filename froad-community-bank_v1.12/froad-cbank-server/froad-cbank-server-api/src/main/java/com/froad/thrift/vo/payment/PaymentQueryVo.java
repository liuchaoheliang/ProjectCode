/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.payment;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class PaymentQueryVo implements org.apache.thrift.TBase<PaymentQueryVo, PaymentQueryVo._Fields>, java.io.Serializable, Cloneable, Comparable<PaymentQueryVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PaymentQueryVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField PAYMENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField BILL_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("billNo", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PAYMENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentType", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PAYMENT_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentValue", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField PAYMENT_TYPE_DETAILS_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentTypeDetails", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField STEP_FIELD_DESC = new org.apache.thrift.protocol.TField("step", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnable", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField PAYMENT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentStatus", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField PAYMENT_ORG_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentOrgNo", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField FROM_ACCOUNT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("fromAccountName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField FROM_ACCOUNT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("fromAccountNo", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField TO_ACCOUNT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("toAccountName", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField TO_ACCOUNT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("toAccountNo", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField FROM_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("fromPhone", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField TO_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("toPhone", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField FROM_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("fromUserName", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField TO_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("toUserName", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField RESULT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("resultCode", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField RESULT_DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("resultDesc", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField AUTO_REFUND_FIELD_DESC = new org.apache.thrift.protocol.TField("autoRefund", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField POINT_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("pointRate", org.apache.thrift.protocol.TType.I32, (short)26);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)27);
  private static final org.apache.thrift.protocol.TField IS_DISPOSE_EXCEPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("isDisposeException", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField REFUND_POINTS_BILL_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("refundPointsBillNo", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField PAYMENT_REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentReason", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField PAGE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("pageVo", org.apache.thrift.protocol.TType.STRUCT, (short)31);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PaymentQueryVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PaymentQueryVoTupleSchemeFactory());
  }

  public long id; // required
  public long createTime; // required
  public String paymentId; // required
  public String clientId; // required
  public String orderId; // required
  public String billNo; // required
  public int paymentType; // required
  public double paymentValue; // required
  public int paymentTypeDetails; // required
  public int step; // required
  public boolean isEnable; // required
  public String paymentStatus; // required
  public String paymentOrgNo; // required
  public String fromAccountName; // required
  public String fromAccountNo; // required
  public String toAccountName; // required
  public String toAccountNo; // required
  public String fromPhone; // required
  public String toPhone; // required
  public String fromUserName; // required
  public String toUserName; // required
  public String resultCode; // required
  public String resultDesc; // required
  public String remark; // required
  public String autoRefund; // required
  public int pointRate; // required
  public PaymentType type; // required
  public String isDisposeException; // required
  public String refundPointsBillNo; // required
  public String paymentReason; // required
  public com.froad.thrift.vo.PageVo pageVo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    CREATE_TIME((short)2, "createTime"),
    PAYMENT_ID((short)3, "paymentId"),
    CLIENT_ID((short)4, "clientId"),
    ORDER_ID((short)5, "orderId"),
    BILL_NO((short)6, "billNo"),
    PAYMENT_TYPE((short)7, "paymentType"),
    PAYMENT_VALUE((short)8, "paymentValue"),
    PAYMENT_TYPE_DETAILS((short)9, "paymentTypeDetails"),
    STEP((short)10, "step"),
    IS_ENABLE((short)11, "isEnable"),
    PAYMENT_STATUS((short)12, "paymentStatus"),
    PAYMENT_ORG_NO((short)13, "paymentOrgNo"),
    FROM_ACCOUNT_NAME((short)14, "fromAccountName"),
    FROM_ACCOUNT_NO((short)15, "fromAccountNo"),
    TO_ACCOUNT_NAME((short)16, "toAccountName"),
    TO_ACCOUNT_NO((short)17, "toAccountNo"),
    FROM_PHONE((short)18, "fromPhone"),
    TO_PHONE((short)19, "toPhone"),
    FROM_USER_NAME((short)20, "fromUserName"),
    TO_USER_NAME((short)21, "toUserName"),
    RESULT_CODE((short)22, "resultCode"),
    RESULT_DESC((short)23, "resultDesc"),
    REMARK((short)24, "remark"),
    AUTO_REFUND((short)25, "autoRefund"),
    POINT_RATE((short)26, "pointRate"),
    TYPE((short)27, "type"),
    IS_DISPOSE_EXCEPTION((short)28, "isDisposeException"),
    REFUND_POINTS_BILL_NO((short)29, "refundPointsBillNo"),
    PAYMENT_REASON((short)30, "paymentReason"),
    PAGE_VO((short)31, "pageVo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // PAYMENT_ID
          return PAYMENT_ID;
        case 4: // CLIENT_ID
          return CLIENT_ID;
        case 5: // ORDER_ID
          return ORDER_ID;
        case 6: // BILL_NO
          return BILL_NO;
        case 7: // PAYMENT_TYPE
          return PAYMENT_TYPE;
        case 8: // PAYMENT_VALUE
          return PAYMENT_VALUE;
        case 9: // PAYMENT_TYPE_DETAILS
          return PAYMENT_TYPE_DETAILS;
        case 10: // STEP
          return STEP;
        case 11: // IS_ENABLE
          return IS_ENABLE;
        case 12: // PAYMENT_STATUS
          return PAYMENT_STATUS;
        case 13: // PAYMENT_ORG_NO
          return PAYMENT_ORG_NO;
        case 14: // FROM_ACCOUNT_NAME
          return FROM_ACCOUNT_NAME;
        case 15: // FROM_ACCOUNT_NO
          return FROM_ACCOUNT_NO;
        case 16: // TO_ACCOUNT_NAME
          return TO_ACCOUNT_NAME;
        case 17: // TO_ACCOUNT_NO
          return TO_ACCOUNT_NO;
        case 18: // FROM_PHONE
          return FROM_PHONE;
        case 19: // TO_PHONE
          return TO_PHONE;
        case 20: // FROM_USER_NAME
          return FROM_USER_NAME;
        case 21: // TO_USER_NAME
          return TO_USER_NAME;
        case 22: // RESULT_CODE
          return RESULT_CODE;
        case 23: // RESULT_DESC
          return RESULT_DESC;
        case 24: // REMARK
          return REMARK;
        case 25: // AUTO_REFUND
          return AUTO_REFUND;
        case 26: // POINT_RATE
          return POINT_RATE;
        case 27: // TYPE
          return TYPE;
        case 28: // IS_DISPOSE_EXCEPTION
          return IS_DISPOSE_EXCEPTION;
        case 29: // REFUND_POINTS_BILL_NO
          return REFUND_POINTS_BILL_NO;
        case 30: // PAYMENT_REASON
          return PAYMENT_REASON;
        case 31: // PAGE_VO
          return PAGE_VO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __PAYMENTTYPE_ISSET_ID = 2;
  private static final int __PAYMENTVALUE_ISSET_ID = 3;
  private static final int __PAYMENTTYPEDETAILS_ISSET_ID = 4;
  private static final int __STEP_ISSET_ID = 5;
  private static final int __ISENABLE_ISSET_ID = 6;
  private static final int __POINTRATE_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PAYMENT_ID, new org.apache.thrift.meta_data.FieldMetaData("paymentId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BILL_NO, new org.apache.thrift.meta_data.FieldMetaData("billNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYMENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("paymentType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAYMENT_VALUE, new org.apache.thrift.meta_data.FieldMetaData("paymentValue", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PAYMENT_TYPE_DETAILS, new org.apache.thrift.meta_data.FieldMetaData("paymentTypeDetails", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STEP, new org.apache.thrift.meta_data.FieldMetaData("step", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("isEnable", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.PAYMENT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("paymentStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYMENT_ORG_NO, new org.apache.thrift.meta_data.FieldMetaData("paymentOrgNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FROM_ACCOUNT_NAME, new org.apache.thrift.meta_data.FieldMetaData("fromAccountName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FROM_ACCOUNT_NO, new org.apache.thrift.meta_data.FieldMetaData("fromAccountNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_ACCOUNT_NAME, new org.apache.thrift.meta_data.FieldMetaData("toAccountName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_ACCOUNT_NO, new org.apache.thrift.meta_data.FieldMetaData("toAccountNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FROM_PHONE, new org.apache.thrift.meta_data.FieldMetaData("fromPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_PHONE, new org.apache.thrift.meta_data.FieldMetaData("toPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FROM_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("fromUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("toUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT_CODE, new org.apache.thrift.meta_data.FieldMetaData("resultCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT_DESC, new org.apache.thrift.meta_data.FieldMetaData("resultDesc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTO_REFUND, new org.apache.thrift.meta_data.FieldMetaData("autoRefund", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POINT_RATE, new org.apache.thrift.meta_data.FieldMetaData("pointRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.ENUM        , "PaymentType")));
    tmpMap.put(_Fields.IS_DISPOSE_EXCEPTION, new org.apache.thrift.meta_data.FieldMetaData("isDisposeException", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFUND_POINTS_BILL_NO, new org.apache.thrift.meta_data.FieldMetaData("refundPointsBillNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYMENT_REASON, new org.apache.thrift.meta_data.FieldMetaData("paymentReason", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE_VO, new org.apache.thrift.meta_data.FieldMetaData("pageVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.PageVo.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PaymentQueryVo.class, metaDataMap);
  }

  public PaymentQueryVo() {
  }

  public PaymentQueryVo(
    long id,
    long createTime,
    String paymentId,
    String clientId,
    String orderId,
    String billNo,
    int paymentType,
    double paymentValue,
    int paymentTypeDetails,
    int step,
    boolean isEnable,
    String paymentStatus,
    String paymentOrgNo,
    String fromAccountName,
    String fromAccountNo,
    String toAccountName,
    String toAccountNo,
    String fromPhone,
    String toPhone,
    String fromUserName,
    String toUserName,
    String resultCode,
    String resultDesc,
    String remark,
    String autoRefund,
    int pointRate,
    PaymentType type,
    String isDisposeException,
    String refundPointsBillNo,
    String paymentReason,
    com.froad.thrift.vo.PageVo pageVo)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.paymentId = paymentId;
    this.clientId = clientId;
    this.orderId = orderId;
    this.billNo = billNo;
    this.paymentType = paymentType;
    setPaymentTypeIsSet(true);
    this.paymentValue = paymentValue;
    setPaymentValueIsSet(true);
    this.paymentTypeDetails = paymentTypeDetails;
    setPaymentTypeDetailsIsSet(true);
    this.step = step;
    setStepIsSet(true);
    this.isEnable = isEnable;
    setIsEnableIsSet(true);
    this.paymentStatus = paymentStatus;
    this.paymentOrgNo = paymentOrgNo;
    this.fromAccountName = fromAccountName;
    this.fromAccountNo = fromAccountNo;
    this.toAccountName = toAccountName;
    this.toAccountNo = toAccountNo;
    this.fromPhone = fromPhone;
    this.toPhone = toPhone;
    this.fromUserName = fromUserName;
    this.toUserName = toUserName;
    this.resultCode = resultCode;
    this.resultDesc = resultDesc;
    this.remark = remark;
    this.autoRefund = autoRefund;
    this.pointRate = pointRate;
    setPointRateIsSet(true);
    this.type = type;
    this.isDisposeException = isDisposeException;
    this.refundPointsBillNo = refundPointsBillNo;
    this.paymentReason = paymentReason;
    this.pageVo = pageVo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PaymentQueryVo(PaymentQueryVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.createTime = other.createTime;
    if (other.isSetPaymentId()) {
      this.paymentId = other.paymentId;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    if (other.isSetBillNo()) {
      this.billNo = other.billNo;
    }
    this.paymentType = other.paymentType;
    this.paymentValue = other.paymentValue;
    this.paymentTypeDetails = other.paymentTypeDetails;
    this.step = other.step;
    this.isEnable = other.isEnable;
    if (other.isSetPaymentStatus()) {
      this.paymentStatus = other.paymentStatus;
    }
    if (other.isSetPaymentOrgNo()) {
      this.paymentOrgNo = other.paymentOrgNo;
    }
    if (other.isSetFromAccountName()) {
      this.fromAccountName = other.fromAccountName;
    }
    if (other.isSetFromAccountNo()) {
      this.fromAccountNo = other.fromAccountNo;
    }
    if (other.isSetToAccountName()) {
      this.toAccountName = other.toAccountName;
    }
    if (other.isSetToAccountNo()) {
      this.toAccountNo = other.toAccountNo;
    }
    if (other.isSetFromPhone()) {
      this.fromPhone = other.fromPhone;
    }
    if (other.isSetToPhone()) {
      this.toPhone = other.toPhone;
    }
    if (other.isSetFromUserName()) {
      this.fromUserName = other.fromUserName;
    }
    if (other.isSetToUserName()) {
      this.toUserName = other.toUserName;
    }
    if (other.isSetResultCode()) {
      this.resultCode = other.resultCode;
    }
    if (other.isSetResultDesc()) {
      this.resultDesc = other.resultDesc;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    if (other.isSetAutoRefund()) {
      this.autoRefund = other.autoRefund;
    }
    this.pointRate = other.pointRate;
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetIsDisposeException()) {
      this.isDisposeException = other.isDisposeException;
    }
    if (other.isSetRefundPointsBillNo()) {
      this.refundPointsBillNo = other.refundPointsBillNo;
    }
    if (other.isSetPaymentReason()) {
      this.paymentReason = other.paymentReason;
    }
    if (other.isSetPageVo()) {
      this.pageVo = new com.froad.thrift.vo.PageVo(other.pageVo);
    }
  }

  public PaymentQueryVo deepCopy() {
    return new PaymentQueryVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.paymentId = null;
    this.clientId = null;
    this.orderId = null;
    this.billNo = null;
    setPaymentTypeIsSet(false);
    this.paymentType = 0;
    setPaymentValueIsSet(false);
    this.paymentValue = 0.0;
    setPaymentTypeDetailsIsSet(false);
    this.paymentTypeDetails = 0;
    setStepIsSet(false);
    this.step = 0;
    setIsEnableIsSet(false);
    this.isEnable = false;
    this.paymentStatus = null;
    this.paymentOrgNo = null;
    this.fromAccountName = null;
    this.fromAccountNo = null;
    this.toAccountName = null;
    this.toAccountNo = null;
    this.fromPhone = null;
    this.toPhone = null;
    this.fromUserName = null;
    this.toUserName = null;
    this.resultCode = null;
    this.resultDesc = null;
    this.remark = null;
    this.autoRefund = null;
    setPointRateIsSet(false);
    this.pointRate = 0;
    this.type = null;
    this.isDisposeException = null;
    this.refundPointsBillNo = null;
    this.paymentReason = null;
    this.pageVo = null;
  }

  public long getId() {
    return this.id;
  }

  public PaymentQueryVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public PaymentQueryVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public String getPaymentId() {
    return this.paymentId;
  }

  public PaymentQueryVo setPaymentId(String paymentId) {
    this.paymentId = paymentId;
    return this;
  }

  public void unsetPaymentId() {
    this.paymentId = null;
  }

  /** Returns true if field paymentId is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentId() {
    return this.paymentId != null;
  }

  public void setPaymentIdIsSet(boolean value) {
    if (!value) {
      this.paymentId = null;
    }
  }

  public String getClientId() {
    return this.clientId;
  }

  public PaymentQueryVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  public String getOrderId() {
    return this.orderId;
  }

  public PaymentQueryVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  public String getBillNo() {
    return this.billNo;
  }

  public PaymentQueryVo setBillNo(String billNo) {
    this.billNo = billNo;
    return this;
  }

  public void unsetBillNo() {
    this.billNo = null;
  }

  /** Returns true if field billNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBillNo() {
    return this.billNo != null;
  }

  public void setBillNoIsSet(boolean value) {
    if (!value) {
      this.billNo = null;
    }
  }

  public int getPaymentType() {
    return this.paymentType;
  }

  public PaymentQueryVo setPaymentType(int paymentType) {
    this.paymentType = paymentType;
    setPaymentTypeIsSet(true);
    return this;
  }

  public void unsetPaymentType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTTYPE_ISSET_ID);
  }

  /** Returns true if field paymentType is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentType() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTTYPE_ISSET_ID);
  }

  public void setPaymentTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTTYPE_ISSET_ID, value);
  }

  public double getPaymentValue() {
    return this.paymentValue;
  }

  public PaymentQueryVo setPaymentValue(double paymentValue) {
    this.paymentValue = paymentValue;
    setPaymentValueIsSet(true);
    return this;
  }

  public void unsetPaymentValue() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTVALUE_ISSET_ID);
  }

  /** Returns true if field paymentValue is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentValue() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTVALUE_ISSET_ID);
  }

  public void setPaymentValueIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTVALUE_ISSET_ID, value);
  }

  public int getPaymentTypeDetails() {
    return this.paymentTypeDetails;
  }

  public PaymentQueryVo setPaymentTypeDetails(int paymentTypeDetails) {
    this.paymentTypeDetails = paymentTypeDetails;
    setPaymentTypeDetailsIsSet(true);
    return this;
  }

  public void unsetPaymentTypeDetails() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTTYPEDETAILS_ISSET_ID);
  }

  /** Returns true if field paymentTypeDetails is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentTypeDetails() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTTYPEDETAILS_ISSET_ID);
  }

  public void setPaymentTypeDetailsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTTYPEDETAILS_ISSET_ID, value);
  }

  public int getStep() {
    return this.step;
  }

  public PaymentQueryVo setStep(int step) {
    this.step = step;
    setStepIsSet(true);
    return this;
  }

  public void unsetStep() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STEP_ISSET_ID);
  }

  /** Returns true if field step is set (has been assigned a value) and false otherwise */
  public boolean isSetStep() {
    return EncodingUtils.testBit(__isset_bitfield, __STEP_ISSET_ID);
  }

  public void setStepIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STEP_ISSET_ID, value);
  }

  public boolean isIsEnable() {
    return this.isEnable;
  }

  public PaymentQueryVo setIsEnable(boolean isEnable) {
    this.isEnable = isEnable;
    setIsEnableIsSet(true);
    return this;
  }

  public void unsetIsEnable() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  /** Returns true if field isEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnable() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  public void setIsEnableIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLE_ISSET_ID, value);
  }

  public String getPaymentStatus() {
    return this.paymentStatus;
  }

  public PaymentQueryVo setPaymentStatus(String paymentStatus) {
    this.paymentStatus = paymentStatus;
    return this;
  }

  public void unsetPaymentStatus() {
    this.paymentStatus = null;
  }

  /** Returns true if field paymentStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentStatus() {
    return this.paymentStatus != null;
  }

  public void setPaymentStatusIsSet(boolean value) {
    if (!value) {
      this.paymentStatus = null;
    }
  }

  public String getPaymentOrgNo() {
    return this.paymentOrgNo;
  }

  public PaymentQueryVo setPaymentOrgNo(String paymentOrgNo) {
    this.paymentOrgNo = paymentOrgNo;
    return this;
  }

  public void unsetPaymentOrgNo() {
    this.paymentOrgNo = null;
  }

  /** Returns true if field paymentOrgNo is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentOrgNo() {
    return this.paymentOrgNo != null;
  }

  public void setPaymentOrgNoIsSet(boolean value) {
    if (!value) {
      this.paymentOrgNo = null;
    }
  }

  public String getFromAccountName() {
    return this.fromAccountName;
  }

  public PaymentQueryVo setFromAccountName(String fromAccountName) {
    this.fromAccountName = fromAccountName;
    return this;
  }

  public void unsetFromAccountName() {
    this.fromAccountName = null;
  }

  /** Returns true if field fromAccountName is set (has been assigned a value) and false otherwise */
  public boolean isSetFromAccountName() {
    return this.fromAccountName != null;
  }

  public void setFromAccountNameIsSet(boolean value) {
    if (!value) {
      this.fromAccountName = null;
    }
  }

  public String getFromAccountNo() {
    return this.fromAccountNo;
  }

  public PaymentQueryVo setFromAccountNo(String fromAccountNo) {
    this.fromAccountNo = fromAccountNo;
    return this;
  }

  public void unsetFromAccountNo() {
    this.fromAccountNo = null;
  }

  /** Returns true if field fromAccountNo is set (has been assigned a value) and false otherwise */
  public boolean isSetFromAccountNo() {
    return this.fromAccountNo != null;
  }

  public void setFromAccountNoIsSet(boolean value) {
    if (!value) {
      this.fromAccountNo = null;
    }
  }

  public String getToAccountName() {
    return this.toAccountName;
  }

  public PaymentQueryVo setToAccountName(String toAccountName) {
    this.toAccountName = toAccountName;
    return this;
  }

  public void unsetToAccountName() {
    this.toAccountName = null;
  }

  /** Returns true if field toAccountName is set (has been assigned a value) and false otherwise */
  public boolean isSetToAccountName() {
    return this.toAccountName != null;
  }

  public void setToAccountNameIsSet(boolean value) {
    if (!value) {
      this.toAccountName = null;
    }
  }

  public String getToAccountNo() {
    return this.toAccountNo;
  }

  public PaymentQueryVo setToAccountNo(String toAccountNo) {
    this.toAccountNo = toAccountNo;
    return this;
  }

  public void unsetToAccountNo() {
    this.toAccountNo = null;
  }

  /** Returns true if field toAccountNo is set (has been assigned a value) and false otherwise */
  public boolean isSetToAccountNo() {
    return this.toAccountNo != null;
  }

  public void setToAccountNoIsSet(boolean value) {
    if (!value) {
      this.toAccountNo = null;
    }
  }

  public String getFromPhone() {
    return this.fromPhone;
  }

  public PaymentQueryVo setFromPhone(String fromPhone) {
    this.fromPhone = fromPhone;
    return this;
  }

  public void unsetFromPhone() {
    this.fromPhone = null;
  }

  /** Returns true if field fromPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetFromPhone() {
    return this.fromPhone != null;
  }

  public void setFromPhoneIsSet(boolean value) {
    if (!value) {
      this.fromPhone = null;
    }
  }

  public String getToPhone() {
    return this.toPhone;
  }

  public PaymentQueryVo setToPhone(String toPhone) {
    this.toPhone = toPhone;
    return this;
  }

  public void unsetToPhone() {
    this.toPhone = null;
  }

  /** Returns true if field toPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetToPhone() {
    return this.toPhone != null;
  }

  public void setToPhoneIsSet(boolean value) {
    if (!value) {
      this.toPhone = null;
    }
  }

  public String getFromUserName() {
    return this.fromUserName;
  }

  public PaymentQueryVo setFromUserName(String fromUserName) {
    this.fromUserName = fromUserName;
    return this;
  }

  public void unsetFromUserName() {
    this.fromUserName = null;
  }

  /** Returns true if field fromUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetFromUserName() {
    return this.fromUserName != null;
  }

  public void setFromUserNameIsSet(boolean value) {
    if (!value) {
      this.fromUserName = null;
    }
  }

  public String getToUserName() {
    return this.toUserName;
  }

  public PaymentQueryVo setToUserName(String toUserName) {
    this.toUserName = toUserName;
    return this;
  }

  public void unsetToUserName() {
    this.toUserName = null;
  }

  /** Returns true if field toUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetToUserName() {
    return this.toUserName != null;
  }

  public void setToUserNameIsSet(boolean value) {
    if (!value) {
      this.toUserName = null;
    }
  }

  public String getResultCode() {
    return this.resultCode;
  }

  public PaymentQueryVo setResultCode(String resultCode) {
    this.resultCode = resultCode;
    return this;
  }

  public void unsetResultCode() {
    this.resultCode = null;
  }

  /** Returns true if field resultCode is set (has been assigned a value) and false otherwise */
  public boolean isSetResultCode() {
    return this.resultCode != null;
  }

  public void setResultCodeIsSet(boolean value) {
    if (!value) {
      this.resultCode = null;
    }
  }

  public String getResultDesc() {
    return this.resultDesc;
  }

  public PaymentQueryVo setResultDesc(String resultDesc) {
    this.resultDesc = resultDesc;
    return this;
  }

  public void unsetResultDesc() {
    this.resultDesc = null;
  }

  /** Returns true if field resultDesc is set (has been assigned a value) and false otherwise */
  public boolean isSetResultDesc() {
    return this.resultDesc != null;
  }

  public void setResultDescIsSet(boolean value) {
    if (!value) {
      this.resultDesc = null;
    }
  }

  public String getRemark() {
    return this.remark;
  }

  public PaymentQueryVo setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public String getAutoRefund() {
    return this.autoRefund;
  }

  public PaymentQueryVo setAutoRefund(String autoRefund) {
    this.autoRefund = autoRefund;
    return this;
  }

  public void unsetAutoRefund() {
    this.autoRefund = null;
  }

  /** Returns true if field autoRefund is set (has been assigned a value) and false otherwise */
  public boolean isSetAutoRefund() {
    return this.autoRefund != null;
  }

  public void setAutoRefundIsSet(boolean value) {
    if (!value) {
      this.autoRefund = null;
    }
  }

  public int getPointRate() {
    return this.pointRate;
  }

  public PaymentQueryVo setPointRate(int pointRate) {
    this.pointRate = pointRate;
    setPointRateIsSet(true);
    return this;
  }

  public void unsetPointRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __POINTRATE_ISSET_ID);
  }

  /** Returns true if field pointRate is set (has been assigned a value) and false otherwise */
  public boolean isSetPointRate() {
    return EncodingUtils.testBit(__isset_bitfield, __POINTRATE_ISSET_ID);
  }

  public void setPointRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __POINTRATE_ISSET_ID, value);
  }

  public PaymentType getType() {
    return this.type;
  }

  public PaymentQueryVo setType(PaymentType type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  public String getIsDisposeException() {
    return this.isDisposeException;
  }

  public PaymentQueryVo setIsDisposeException(String isDisposeException) {
    this.isDisposeException = isDisposeException;
    return this;
  }

  public void unsetIsDisposeException() {
    this.isDisposeException = null;
  }

  /** Returns true if field isDisposeException is set (has been assigned a value) and false otherwise */
  public boolean isSetIsDisposeException() {
    return this.isDisposeException != null;
  }

  public void setIsDisposeExceptionIsSet(boolean value) {
    if (!value) {
      this.isDisposeException = null;
    }
  }

  public String getRefundPointsBillNo() {
    return this.refundPointsBillNo;
  }

  public PaymentQueryVo setRefundPointsBillNo(String refundPointsBillNo) {
    this.refundPointsBillNo = refundPointsBillNo;
    return this;
  }

  public void unsetRefundPointsBillNo() {
    this.refundPointsBillNo = null;
  }

  /** Returns true if field refundPointsBillNo is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundPointsBillNo() {
    return this.refundPointsBillNo != null;
  }

  public void setRefundPointsBillNoIsSet(boolean value) {
    if (!value) {
      this.refundPointsBillNo = null;
    }
  }

  public String getPaymentReason() {
    return this.paymentReason;
  }

  public PaymentQueryVo setPaymentReason(String paymentReason) {
    this.paymentReason = paymentReason;
    return this;
  }

  public void unsetPaymentReason() {
    this.paymentReason = null;
  }

  /** Returns true if field paymentReason is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentReason() {
    return this.paymentReason != null;
  }

  public void setPaymentReasonIsSet(boolean value) {
    if (!value) {
      this.paymentReason = null;
    }
  }

  public com.froad.thrift.vo.PageVo getPageVo() {
    return this.pageVo;
  }

  public PaymentQueryVo setPageVo(com.froad.thrift.vo.PageVo pageVo) {
    this.pageVo = pageVo;
    return this;
  }

  public void unsetPageVo() {
    this.pageVo = null;
  }

  /** Returns true if field pageVo is set (has been assigned a value) and false otherwise */
  public boolean isSetPageVo() {
    return this.pageVo != null;
  }

  public void setPageVoIsSet(boolean value) {
    if (!value) {
      this.pageVo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case PAYMENT_ID:
      if (value == null) {
        unsetPaymentId();
      } else {
        setPaymentId((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case BILL_NO:
      if (value == null) {
        unsetBillNo();
      } else {
        setBillNo((String)value);
      }
      break;

    case PAYMENT_TYPE:
      if (value == null) {
        unsetPaymentType();
      } else {
        setPaymentType((Integer)value);
      }
      break;

    case PAYMENT_VALUE:
      if (value == null) {
        unsetPaymentValue();
      } else {
        setPaymentValue((Double)value);
      }
      break;

    case PAYMENT_TYPE_DETAILS:
      if (value == null) {
        unsetPaymentTypeDetails();
      } else {
        setPaymentTypeDetails((Integer)value);
      }
      break;

    case STEP:
      if (value == null) {
        unsetStep();
      } else {
        setStep((Integer)value);
      }
      break;

    case IS_ENABLE:
      if (value == null) {
        unsetIsEnable();
      } else {
        setIsEnable((Boolean)value);
      }
      break;

    case PAYMENT_STATUS:
      if (value == null) {
        unsetPaymentStatus();
      } else {
        setPaymentStatus((String)value);
      }
      break;

    case PAYMENT_ORG_NO:
      if (value == null) {
        unsetPaymentOrgNo();
      } else {
        setPaymentOrgNo((String)value);
      }
      break;

    case FROM_ACCOUNT_NAME:
      if (value == null) {
        unsetFromAccountName();
      } else {
        setFromAccountName((String)value);
      }
      break;

    case FROM_ACCOUNT_NO:
      if (value == null) {
        unsetFromAccountNo();
      } else {
        setFromAccountNo((String)value);
      }
      break;

    case TO_ACCOUNT_NAME:
      if (value == null) {
        unsetToAccountName();
      } else {
        setToAccountName((String)value);
      }
      break;

    case TO_ACCOUNT_NO:
      if (value == null) {
        unsetToAccountNo();
      } else {
        setToAccountNo((String)value);
      }
      break;

    case FROM_PHONE:
      if (value == null) {
        unsetFromPhone();
      } else {
        setFromPhone((String)value);
      }
      break;

    case TO_PHONE:
      if (value == null) {
        unsetToPhone();
      } else {
        setToPhone((String)value);
      }
      break;

    case FROM_USER_NAME:
      if (value == null) {
        unsetFromUserName();
      } else {
        setFromUserName((String)value);
      }
      break;

    case TO_USER_NAME:
      if (value == null) {
        unsetToUserName();
      } else {
        setToUserName((String)value);
      }
      break;

    case RESULT_CODE:
      if (value == null) {
        unsetResultCode();
      } else {
        setResultCode((String)value);
      }
      break;

    case RESULT_DESC:
      if (value == null) {
        unsetResultDesc();
      } else {
        setResultDesc((String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    case AUTO_REFUND:
      if (value == null) {
        unsetAutoRefund();
      } else {
        setAutoRefund((String)value);
      }
      break;

    case POINT_RATE:
      if (value == null) {
        unsetPointRate();
      } else {
        setPointRate((Integer)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((PaymentType)value);
      }
      break;

    case IS_DISPOSE_EXCEPTION:
      if (value == null) {
        unsetIsDisposeException();
      } else {
        setIsDisposeException((String)value);
      }
      break;

    case REFUND_POINTS_BILL_NO:
      if (value == null) {
        unsetRefundPointsBillNo();
      } else {
        setRefundPointsBillNo((String)value);
      }
      break;

    case PAYMENT_REASON:
      if (value == null) {
        unsetPaymentReason();
      } else {
        setPaymentReason((String)value);
      }
      break;

    case PAGE_VO:
      if (value == null) {
        unsetPageVo();
      } else {
        setPageVo((com.froad.thrift.vo.PageVo)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case PAYMENT_ID:
      return getPaymentId();

    case CLIENT_ID:
      return getClientId();

    case ORDER_ID:
      return getOrderId();

    case BILL_NO:
      return getBillNo();

    case PAYMENT_TYPE:
      return Integer.valueOf(getPaymentType());

    case PAYMENT_VALUE:
      return Double.valueOf(getPaymentValue());

    case PAYMENT_TYPE_DETAILS:
      return Integer.valueOf(getPaymentTypeDetails());

    case STEP:
      return Integer.valueOf(getStep());

    case IS_ENABLE:
      return Boolean.valueOf(isIsEnable());

    case PAYMENT_STATUS:
      return getPaymentStatus();

    case PAYMENT_ORG_NO:
      return getPaymentOrgNo();

    case FROM_ACCOUNT_NAME:
      return getFromAccountName();

    case FROM_ACCOUNT_NO:
      return getFromAccountNo();

    case TO_ACCOUNT_NAME:
      return getToAccountName();

    case TO_ACCOUNT_NO:
      return getToAccountNo();

    case FROM_PHONE:
      return getFromPhone();

    case TO_PHONE:
      return getToPhone();

    case FROM_USER_NAME:
      return getFromUserName();

    case TO_USER_NAME:
      return getToUserName();

    case RESULT_CODE:
      return getResultCode();

    case RESULT_DESC:
      return getResultDesc();

    case REMARK:
      return getRemark();

    case AUTO_REFUND:
      return getAutoRefund();

    case POINT_RATE:
      return Integer.valueOf(getPointRate());

    case TYPE:
      return getType();

    case IS_DISPOSE_EXCEPTION:
      return getIsDisposeException();

    case REFUND_POINTS_BILL_NO:
      return getRefundPointsBillNo();

    case PAYMENT_REASON:
      return getPaymentReason();

    case PAGE_VO:
      return getPageVo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case PAYMENT_ID:
      return isSetPaymentId();
    case CLIENT_ID:
      return isSetClientId();
    case ORDER_ID:
      return isSetOrderId();
    case BILL_NO:
      return isSetBillNo();
    case PAYMENT_TYPE:
      return isSetPaymentType();
    case PAYMENT_VALUE:
      return isSetPaymentValue();
    case PAYMENT_TYPE_DETAILS:
      return isSetPaymentTypeDetails();
    case STEP:
      return isSetStep();
    case IS_ENABLE:
      return isSetIsEnable();
    case PAYMENT_STATUS:
      return isSetPaymentStatus();
    case PAYMENT_ORG_NO:
      return isSetPaymentOrgNo();
    case FROM_ACCOUNT_NAME:
      return isSetFromAccountName();
    case FROM_ACCOUNT_NO:
      return isSetFromAccountNo();
    case TO_ACCOUNT_NAME:
      return isSetToAccountName();
    case TO_ACCOUNT_NO:
      return isSetToAccountNo();
    case FROM_PHONE:
      return isSetFromPhone();
    case TO_PHONE:
      return isSetToPhone();
    case FROM_USER_NAME:
      return isSetFromUserName();
    case TO_USER_NAME:
      return isSetToUserName();
    case RESULT_CODE:
      return isSetResultCode();
    case RESULT_DESC:
      return isSetResultDesc();
    case REMARK:
      return isSetRemark();
    case AUTO_REFUND:
      return isSetAutoRefund();
    case POINT_RATE:
      return isSetPointRate();
    case TYPE:
      return isSetType();
    case IS_DISPOSE_EXCEPTION:
      return isSetIsDisposeException();
    case REFUND_POINTS_BILL_NO:
      return isSetRefundPointsBillNo();
    case PAYMENT_REASON:
      return isSetPaymentReason();
    case PAGE_VO:
      return isSetPageVo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PaymentQueryVo)
      return this.equals((PaymentQueryVo)that);
    return false;
  }

  public boolean equals(PaymentQueryVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_paymentId = true && this.isSetPaymentId();
    boolean that_present_paymentId = true && that.isSetPaymentId();
    if (this_present_paymentId || that_present_paymentId) {
      if (!(this_present_paymentId && that_present_paymentId))
        return false;
      if (!this.paymentId.equals(that.paymentId))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_billNo = true && this.isSetBillNo();
    boolean that_present_billNo = true && that.isSetBillNo();
    if (this_present_billNo || that_present_billNo) {
      if (!(this_present_billNo && that_present_billNo))
        return false;
      if (!this.billNo.equals(that.billNo))
        return false;
    }

    boolean this_present_paymentType = true;
    boolean that_present_paymentType = true;
    if (this_present_paymentType || that_present_paymentType) {
      if (!(this_present_paymentType && that_present_paymentType))
        return false;
      if (this.paymentType != that.paymentType)
        return false;
    }

    boolean this_present_paymentValue = true;
    boolean that_present_paymentValue = true;
    if (this_present_paymentValue || that_present_paymentValue) {
      if (!(this_present_paymentValue && that_present_paymentValue))
        return false;
      if (this.paymentValue != that.paymentValue)
        return false;
    }

    boolean this_present_paymentTypeDetails = true;
    boolean that_present_paymentTypeDetails = true;
    if (this_present_paymentTypeDetails || that_present_paymentTypeDetails) {
      if (!(this_present_paymentTypeDetails && that_present_paymentTypeDetails))
        return false;
      if (this.paymentTypeDetails != that.paymentTypeDetails)
        return false;
    }

    boolean this_present_step = true;
    boolean that_present_step = true;
    if (this_present_step || that_present_step) {
      if (!(this_present_step && that_present_step))
        return false;
      if (this.step != that.step)
        return false;
    }

    boolean this_present_isEnable = true;
    boolean that_present_isEnable = true;
    if (this_present_isEnable || that_present_isEnable) {
      if (!(this_present_isEnable && that_present_isEnable))
        return false;
      if (this.isEnable != that.isEnable)
        return false;
    }

    boolean this_present_paymentStatus = true && this.isSetPaymentStatus();
    boolean that_present_paymentStatus = true && that.isSetPaymentStatus();
    if (this_present_paymentStatus || that_present_paymentStatus) {
      if (!(this_present_paymentStatus && that_present_paymentStatus))
        return false;
      if (!this.paymentStatus.equals(that.paymentStatus))
        return false;
    }

    boolean this_present_paymentOrgNo = true && this.isSetPaymentOrgNo();
    boolean that_present_paymentOrgNo = true && that.isSetPaymentOrgNo();
    if (this_present_paymentOrgNo || that_present_paymentOrgNo) {
      if (!(this_present_paymentOrgNo && that_present_paymentOrgNo))
        return false;
      if (!this.paymentOrgNo.equals(that.paymentOrgNo))
        return false;
    }

    boolean this_present_fromAccountName = true && this.isSetFromAccountName();
    boolean that_present_fromAccountName = true && that.isSetFromAccountName();
    if (this_present_fromAccountName || that_present_fromAccountName) {
      if (!(this_present_fromAccountName && that_present_fromAccountName))
        return false;
      if (!this.fromAccountName.equals(that.fromAccountName))
        return false;
    }

    boolean this_present_fromAccountNo = true && this.isSetFromAccountNo();
    boolean that_present_fromAccountNo = true && that.isSetFromAccountNo();
    if (this_present_fromAccountNo || that_present_fromAccountNo) {
      if (!(this_present_fromAccountNo && that_present_fromAccountNo))
        return false;
      if (!this.fromAccountNo.equals(that.fromAccountNo))
        return false;
    }

    boolean this_present_toAccountName = true && this.isSetToAccountName();
    boolean that_present_toAccountName = true && that.isSetToAccountName();
    if (this_present_toAccountName || that_present_toAccountName) {
      if (!(this_present_toAccountName && that_present_toAccountName))
        return false;
      if (!this.toAccountName.equals(that.toAccountName))
        return false;
    }

    boolean this_present_toAccountNo = true && this.isSetToAccountNo();
    boolean that_present_toAccountNo = true && that.isSetToAccountNo();
    if (this_present_toAccountNo || that_present_toAccountNo) {
      if (!(this_present_toAccountNo && that_present_toAccountNo))
        return false;
      if (!this.toAccountNo.equals(that.toAccountNo))
        return false;
    }

    boolean this_present_fromPhone = true && this.isSetFromPhone();
    boolean that_present_fromPhone = true && that.isSetFromPhone();
    if (this_present_fromPhone || that_present_fromPhone) {
      if (!(this_present_fromPhone && that_present_fromPhone))
        return false;
      if (!this.fromPhone.equals(that.fromPhone))
        return false;
    }

    boolean this_present_toPhone = true && this.isSetToPhone();
    boolean that_present_toPhone = true && that.isSetToPhone();
    if (this_present_toPhone || that_present_toPhone) {
      if (!(this_present_toPhone && that_present_toPhone))
        return false;
      if (!this.toPhone.equals(that.toPhone))
        return false;
    }

    boolean this_present_fromUserName = true && this.isSetFromUserName();
    boolean that_present_fromUserName = true && that.isSetFromUserName();
    if (this_present_fromUserName || that_present_fromUserName) {
      if (!(this_present_fromUserName && that_present_fromUserName))
        return false;
      if (!this.fromUserName.equals(that.fromUserName))
        return false;
    }

    boolean this_present_toUserName = true && this.isSetToUserName();
    boolean that_present_toUserName = true && that.isSetToUserName();
    if (this_present_toUserName || that_present_toUserName) {
      if (!(this_present_toUserName && that_present_toUserName))
        return false;
      if (!this.toUserName.equals(that.toUserName))
        return false;
    }

    boolean this_present_resultCode = true && this.isSetResultCode();
    boolean that_present_resultCode = true && that.isSetResultCode();
    if (this_present_resultCode || that_present_resultCode) {
      if (!(this_present_resultCode && that_present_resultCode))
        return false;
      if (!this.resultCode.equals(that.resultCode))
        return false;
    }

    boolean this_present_resultDesc = true && this.isSetResultDesc();
    boolean that_present_resultDesc = true && that.isSetResultDesc();
    if (this_present_resultDesc || that_present_resultDesc) {
      if (!(this_present_resultDesc && that_present_resultDesc))
        return false;
      if (!this.resultDesc.equals(that.resultDesc))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_autoRefund = true && this.isSetAutoRefund();
    boolean that_present_autoRefund = true && that.isSetAutoRefund();
    if (this_present_autoRefund || that_present_autoRefund) {
      if (!(this_present_autoRefund && that_present_autoRefund))
        return false;
      if (!this.autoRefund.equals(that.autoRefund))
        return false;
    }

    boolean this_present_pointRate = true;
    boolean that_present_pointRate = true;
    if (this_present_pointRate || that_present_pointRate) {
      if (!(this_present_pointRate && that_present_pointRate))
        return false;
      if (this.pointRate != that.pointRate)
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_isDisposeException = true && this.isSetIsDisposeException();
    boolean that_present_isDisposeException = true && that.isSetIsDisposeException();
    if (this_present_isDisposeException || that_present_isDisposeException) {
      if (!(this_present_isDisposeException && that_present_isDisposeException))
        return false;
      if (!this.isDisposeException.equals(that.isDisposeException))
        return false;
    }

    boolean this_present_refundPointsBillNo = true && this.isSetRefundPointsBillNo();
    boolean that_present_refundPointsBillNo = true && that.isSetRefundPointsBillNo();
    if (this_present_refundPointsBillNo || that_present_refundPointsBillNo) {
      if (!(this_present_refundPointsBillNo && that_present_refundPointsBillNo))
        return false;
      if (!this.refundPointsBillNo.equals(that.refundPointsBillNo))
        return false;
    }

    boolean this_present_paymentReason = true && this.isSetPaymentReason();
    boolean that_present_paymentReason = true && that.isSetPaymentReason();
    if (this_present_paymentReason || that_present_paymentReason) {
      if (!(this_present_paymentReason && that_present_paymentReason))
        return false;
      if (!this.paymentReason.equals(that.paymentReason))
        return false;
    }

    boolean this_present_pageVo = true && this.isSetPageVo();
    boolean that_present_pageVo = true && that.isSetPageVo();
    if (this_present_pageVo || that_present_pageVo) {
      if (!(this_present_pageVo && that_present_pageVo))
        return false;
      if (!this.pageVo.equals(that.pageVo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_paymentId = true && (isSetPaymentId());
    list.add(present_paymentId);
    if (present_paymentId)
      list.add(paymentId);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_billNo = true && (isSetBillNo());
    list.add(present_billNo);
    if (present_billNo)
      list.add(billNo);

    boolean present_paymentType = true;
    list.add(present_paymentType);
    if (present_paymentType)
      list.add(paymentType);

    boolean present_paymentValue = true;
    list.add(present_paymentValue);
    if (present_paymentValue)
      list.add(paymentValue);

    boolean present_paymentTypeDetails = true;
    list.add(present_paymentTypeDetails);
    if (present_paymentTypeDetails)
      list.add(paymentTypeDetails);

    boolean present_step = true;
    list.add(present_step);
    if (present_step)
      list.add(step);

    boolean present_isEnable = true;
    list.add(present_isEnable);
    if (present_isEnable)
      list.add(isEnable);

    boolean present_paymentStatus = true && (isSetPaymentStatus());
    list.add(present_paymentStatus);
    if (present_paymentStatus)
      list.add(paymentStatus);

    boolean present_paymentOrgNo = true && (isSetPaymentOrgNo());
    list.add(present_paymentOrgNo);
    if (present_paymentOrgNo)
      list.add(paymentOrgNo);

    boolean present_fromAccountName = true && (isSetFromAccountName());
    list.add(present_fromAccountName);
    if (present_fromAccountName)
      list.add(fromAccountName);

    boolean present_fromAccountNo = true && (isSetFromAccountNo());
    list.add(present_fromAccountNo);
    if (present_fromAccountNo)
      list.add(fromAccountNo);

    boolean present_toAccountName = true && (isSetToAccountName());
    list.add(present_toAccountName);
    if (present_toAccountName)
      list.add(toAccountName);

    boolean present_toAccountNo = true && (isSetToAccountNo());
    list.add(present_toAccountNo);
    if (present_toAccountNo)
      list.add(toAccountNo);

    boolean present_fromPhone = true && (isSetFromPhone());
    list.add(present_fromPhone);
    if (present_fromPhone)
      list.add(fromPhone);

    boolean present_toPhone = true && (isSetToPhone());
    list.add(present_toPhone);
    if (present_toPhone)
      list.add(toPhone);

    boolean present_fromUserName = true && (isSetFromUserName());
    list.add(present_fromUserName);
    if (present_fromUserName)
      list.add(fromUserName);

    boolean present_toUserName = true && (isSetToUserName());
    list.add(present_toUserName);
    if (present_toUserName)
      list.add(toUserName);

    boolean present_resultCode = true && (isSetResultCode());
    list.add(present_resultCode);
    if (present_resultCode)
      list.add(resultCode);

    boolean present_resultDesc = true && (isSetResultDesc());
    list.add(present_resultDesc);
    if (present_resultDesc)
      list.add(resultDesc);

    boolean present_remark = true && (isSetRemark());
    list.add(present_remark);
    if (present_remark)
      list.add(remark);

    boolean present_autoRefund = true && (isSetAutoRefund());
    list.add(present_autoRefund);
    if (present_autoRefund)
      list.add(autoRefund);

    boolean present_pointRate = true;
    list.add(present_pointRate);
    if (present_pointRate)
      list.add(pointRate);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type.getValue());

    boolean present_isDisposeException = true && (isSetIsDisposeException());
    list.add(present_isDisposeException);
    if (present_isDisposeException)
      list.add(isDisposeException);

    boolean present_refundPointsBillNo = true && (isSetRefundPointsBillNo());
    list.add(present_refundPointsBillNo);
    if (present_refundPointsBillNo)
      list.add(refundPointsBillNo);

    boolean present_paymentReason = true && (isSetPaymentReason());
    list.add(present_paymentReason);
    if (present_paymentReason)
      list.add(paymentReason);

    boolean present_pageVo = true && (isSetPageVo());
    list.add(present_pageVo);
    if (present_pageVo)
      list.add(pageVo);

    return list.hashCode();
  }

  @Override
  public int compareTo(PaymentQueryVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentId()).compareTo(other.isSetPaymentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentId, other.paymentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBillNo()).compareTo(other.isSetBillNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBillNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.billNo, other.billNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentType()).compareTo(other.isSetPaymentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentType, other.paymentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentValue()).compareTo(other.isSetPaymentValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentValue, other.paymentValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentTypeDetails()).compareTo(other.isSetPaymentTypeDetails());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentTypeDetails()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentTypeDetails, other.paymentTypeDetails);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStep()).compareTo(other.isSetStep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.step, other.step);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnable()).compareTo(other.isSetIsEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnable, other.isEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentStatus()).compareTo(other.isSetPaymentStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentStatus, other.paymentStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentOrgNo()).compareTo(other.isSetPaymentOrgNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentOrgNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentOrgNo, other.paymentOrgNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFromAccountName()).compareTo(other.isSetFromAccountName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFromAccountName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromAccountName, other.fromAccountName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFromAccountNo()).compareTo(other.isSetFromAccountNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFromAccountNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromAccountNo, other.fromAccountNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetToAccountName()).compareTo(other.isSetToAccountName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToAccountName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.toAccountName, other.toAccountName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetToAccountNo()).compareTo(other.isSetToAccountNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToAccountNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.toAccountNo, other.toAccountNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFromPhone()).compareTo(other.isSetFromPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFromPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromPhone, other.fromPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetToPhone()).compareTo(other.isSetToPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.toPhone, other.toPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFromUserName()).compareTo(other.isSetFromUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFromUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromUserName, other.fromUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetToUserName()).compareTo(other.isSetToUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.toUserName, other.toUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultCode()).compareTo(other.isSetResultCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultCode, other.resultCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultDesc()).compareTo(other.isSetResultDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultDesc, other.resultDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAutoRefund()).compareTo(other.isSetAutoRefund());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAutoRefund()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.autoRefund, other.autoRefund);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPointRate()).compareTo(other.isSetPointRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPointRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pointRate, other.pointRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsDisposeException()).compareTo(other.isSetIsDisposeException());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDisposeException()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDisposeException, other.isDisposeException);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundPointsBillNo()).compareTo(other.isSetRefundPointsBillNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundPointsBillNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundPointsBillNo, other.refundPointsBillNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentReason()).compareTo(other.isSetPaymentReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentReason, other.paymentReason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPageVo()).compareTo(other.isSetPageVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageVo, other.pageVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PaymentQueryVo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentId:");
    if (this.paymentId == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("billNo:");
    if (this.billNo == null) {
      sb.append("null");
    } else {
      sb.append(this.billNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentType:");
    sb.append(this.paymentType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentValue:");
    sb.append(this.paymentValue);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentTypeDetails:");
    sb.append(this.paymentTypeDetails);
    first = false;
    if (!first) sb.append(", ");
    sb.append("step:");
    sb.append(this.step);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isEnable:");
    sb.append(this.isEnable);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentStatus:");
    if (this.paymentStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentOrgNo:");
    if (this.paymentOrgNo == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentOrgNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fromAccountName:");
    if (this.fromAccountName == null) {
      sb.append("null");
    } else {
      sb.append(this.fromAccountName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fromAccountNo:");
    if (this.fromAccountNo == null) {
      sb.append("null");
    } else {
      sb.append(this.fromAccountNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("toAccountName:");
    if (this.toAccountName == null) {
      sb.append("null");
    } else {
      sb.append(this.toAccountName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("toAccountNo:");
    if (this.toAccountNo == null) {
      sb.append("null");
    } else {
      sb.append(this.toAccountNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fromPhone:");
    if (this.fromPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.fromPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("toPhone:");
    if (this.toPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.toPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fromUserName:");
    if (this.fromUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.fromUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("toUserName:");
    if (this.toUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.toUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultCode:");
    if (this.resultCode == null) {
      sb.append("null");
    } else {
      sb.append(this.resultCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultDesc:");
    if (this.resultDesc == null) {
      sb.append("null");
    } else {
      sb.append(this.resultDesc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("remark:");
    if (this.remark == null) {
      sb.append("null");
    } else {
      sb.append(this.remark);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("autoRefund:");
    if (this.autoRefund == null) {
      sb.append("null");
    } else {
      sb.append(this.autoRefund);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pointRate:");
    sb.append(this.pointRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isDisposeException:");
    if (this.isDisposeException == null) {
      sb.append("null");
    } else {
      sb.append(this.isDisposeException);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundPointsBillNo:");
    if (this.refundPointsBillNo == null) {
      sb.append("null");
    } else {
      sb.append(this.refundPointsBillNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentReason:");
    if (this.paymentReason == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentReason);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pageVo:");
    if (this.pageVo == null) {
      sb.append("null");
    } else {
      sb.append(this.pageVo);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (pageVo != null) {
      pageVo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PaymentQueryVoStandardSchemeFactory implements SchemeFactory {
    public PaymentQueryVoStandardScheme getScheme() {
      return new PaymentQueryVoStandardScheme();
    }
  }

  private static class PaymentQueryVoStandardScheme extends StandardScheme<PaymentQueryVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PaymentQueryVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PAYMENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paymentId = iprot.readString();
              struct.setPaymentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // BILL_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.billNo = iprot.readString();
              struct.setBillNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PAYMENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.paymentType = iprot.readI32();
              struct.setPaymentTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PAYMENT_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.paymentValue = iprot.readDouble();
              struct.setPaymentValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PAYMENT_TYPE_DETAILS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.paymentTypeDetails = iprot.readI32();
              struct.setPaymentTypeDetailsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STEP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.step = iprot.readI32();
              struct.setStepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // IS_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnable = iprot.readBool();
              struct.setIsEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PAYMENT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paymentStatus = iprot.readString();
              struct.setPaymentStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PAYMENT_ORG_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paymentOrgNo = iprot.readString();
              struct.setPaymentOrgNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // FROM_ACCOUNT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fromAccountName = iprot.readString();
              struct.setFromAccountNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // FROM_ACCOUNT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fromAccountNo = iprot.readString();
              struct.setFromAccountNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // TO_ACCOUNT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.toAccountName = iprot.readString();
              struct.setToAccountNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // TO_ACCOUNT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.toAccountNo = iprot.readString();
              struct.setToAccountNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // FROM_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fromPhone = iprot.readString();
              struct.setFromPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // TO_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.toPhone = iprot.readString();
              struct.setToPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // FROM_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fromUserName = iprot.readString();
              struct.setFromUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // TO_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.toUserName = iprot.readString();
              struct.setToUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // RESULT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resultCode = iprot.readString();
              struct.setResultCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // RESULT_DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resultDesc = iprot.readString();
              struct.setResultDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // AUTO_REFUND
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.autoRefund = iprot.readString();
              struct.setAutoRefundIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // POINT_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pointRate = iprot.readI32();
              struct.setPointRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = com.froad.thrift.vo.payment.PaymentType.findByValue(iprot.readI32());
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // IS_DISPOSE_EXCEPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isDisposeException = iprot.readString();
              struct.setIsDisposeExceptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // REFUND_POINTS_BILL_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundPointsBillNo = iprot.readString();
              struct.setRefundPointsBillNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // PAYMENT_REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paymentReason = iprot.readString();
              struct.setPaymentReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // PAGE_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.pageVo = new com.froad.thrift.vo.PageVo();
              struct.pageVo.read(iprot);
              struct.setPageVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PaymentQueryVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.paymentId != null) {
        oprot.writeFieldBegin(PAYMENT_ID_FIELD_DESC);
        oprot.writeString(struct.paymentId);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      if (struct.billNo != null) {
        oprot.writeFieldBegin(BILL_NO_FIELD_DESC);
        oprot.writeString(struct.billNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAYMENT_TYPE_FIELD_DESC);
      oprot.writeI32(struct.paymentType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAYMENT_VALUE_FIELD_DESC);
      oprot.writeDouble(struct.paymentValue);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAYMENT_TYPE_DETAILS_FIELD_DESC);
      oprot.writeI32(struct.paymentTypeDetails);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STEP_FIELD_DESC);
      oprot.writeI32(struct.step);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_ENABLE_FIELD_DESC);
      oprot.writeBool(struct.isEnable);
      oprot.writeFieldEnd();
      if (struct.paymentStatus != null) {
        oprot.writeFieldBegin(PAYMENT_STATUS_FIELD_DESC);
        oprot.writeString(struct.paymentStatus);
        oprot.writeFieldEnd();
      }
      if (struct.paymentOrgNo != null) {
        oprot.writeFieldBegin(PAYMENT_ORG_NO_FIELD_DESC);
        oprot.writeString(struct.paymentOrgNo);
        oprot.writeFieldEnd();
      }
      if (struct.fromAccountName != null) {
        oprot.writeFieldBegin(FROM_ACCOUNT_NAME_FIELD_DESC);
        oprot.writeString(struct.fromAccountName);
        oprot.writeFieldEnd();
      }
      if (struct.fromAccountNo != null) {
        oprot.writeFieldBegin(FROM_ACCOUNT_NO_FIELD_DESC);
        oprot.writeString(struct.fromAccountNo);
        oprot.writeFieldEnd();
      }
      if (struct.toAccountName != null) {
        oprot.writeFieldBegin(TO_ACCOUNT_NAME_FIELD_DESC);
        oprot.writeString(struct.toAccountName);
        oprot.writeFieldEnd();
      }
      if (struct.toAccountNo != null) {
        oprot.writeFieldBegin(TO_ACCOUNT_NO_FIELD_DESC);
        oprot.writeString(struct.toAccountNo);
        oprot.writeFieldEnd();
      }
      if (struct.fromPhone != null) {
        oprot.writeFieldBegin(FROM_PHONE_FIELD_DESC);
        oprot.writeString(struct.fromPhone);
        oprot.writeFieldEnd();
      }
      if (struct.toPhone != null) {
        oprot.writeFieldBegin(TO_PHONE_FIELD_DESC);
        oprot.writeString(struct.toPhone);
        oprot.writeFieldEnd();
      }
      if (struct.fromUserName != null) {
        oprot.writeFieldBegin(FROM_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.fromUserName);
        oprot.writeFieldEnd();
      }
      if (struct.toUserName != null) {
        oprot.writeFieldBegin(TO_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.toUserName);
        oprot.writeFieldEnd();
      }
      if (struct.resultCode != null) {
        oprot.writeFieldBegin(RESULT_CODE_FIELD_DESC);
        oprot.writeString(struct.resultCode);
        oprot.writeFieldEnd();
      }
      if (struct.resultDesc != null) {
        oprot.writeFieldBegin(RESULT_DESC_FIELD_DESC);
        oprot.writeString(struct.resultDesc);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        oprot.writeFieldBegin(REMARK_FIELD_DESC);
        oprot.writeString(struct.remark);
        oprot.writeFieldEnd();
      }
      if (struct.autoRefund != null) {
        oprot.writeFieldBegin(AUTO_REFUND_FIELD_DESC);
        oprot.writeString(struct.autoRefund);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(POINT_RATE_FIELD_DESC);
      oprot.writeI32(struct.pointRate);
      oprot.writeFieldEnd();
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeI32(struct.type.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.isDisposeException != null) {
        oprot.writeFieldBegin(IS_DISPOSE_EXCEPTION_FIELD_DESC);
        oprot.writeString(struct.isDisposeException);
        oprot.writeFieldEnd();
      }
      if (struct.refundPointsBillNo != null) {
        oprot.writeFieldBegin(REFUND_POINTS_BILL_NO_FIELD_DESC);
        oprot.writeString(struct.refundPointsBillNo);
        oprot.writeFieldEnd();
      }
      if (struct.paymentReason != null) {
        oprot.writeFieldBegin(PAYMENT_REASON_FIELD_DESC);
        oprot.writeString(struct.paymentReason);
        oprot.writeFieldEnd();
      }
      if (struct.pageVo != null) {
        oprot.writeFieldBegin(PAGE_VO_FIELD_DESC);
        struct.pageVo.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PaymentQueryVoTupleSchemeFactory implements SchemeFactory {
    public PaymentQueryVoTupleScheme getScheme() {
      return new PaymentQueryVoTupleScheme();
    }
  }

  private static class PaymentQueryVoTupleScheme extends TupleScheme<PaymentQueryVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PaymentQueryVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetPaymentId()) {
        optionals.set(2);
      }
      if (struct.isSetClientId()) {
        optionals.set(3);
      }
      if (struct.isSetOrderId()) {
        optionals.set(4);
      }
      if (struct.isSetBillNo()) {
        optionals.set(5);
      }
      if (struct.isSetPaymentType()) {
        optionals.set(6);
      }
      if (struct.isSetPaymentValue()) {
        optionals.set(7);
      }
      if (struct.isSetPaymentTypeDetails()) {
        optionals.set(8);
      }
      if (struct.isSetStep()) {
        optionals.set(9);
      }
      if (struct.isSetIsEnable()) {
        optionals.set(10);
      }
      if (struct.isSetPaymentStatus()) {
        optionals.set(11);
      }
      if (struct.isSetPaymentOrgNo()) {
        optionals.set(12);
      }
      if (struct.isSetFromAccountName()) {
        optionals.set(13);
      }
      if (struct.isSetFromAccountNo()) {
        optionals.set(14);
      }
      if (struct.isSetToAccountName()) {
        optionals.set(15);
      }
      if (struct.isSetToAccountNo()) {
        optionals.set(16);
      }
      if (struct.isSetFromPhone()) {
        optionals.set(17);
      }
      if (struct.isSetToPhone()) {
        optionals.set(18);
      }
      if (struct.isSetFromUserName()) {
        optionals.set(19);
      }
      if (struct.isSetToUserName()) {
        optionals.set(20);
      }
      if (struct.isSetResultCode()) {
        optionals.set(21);
      }
      if (struct.isSetResultDesc()) {
        optionals.set(22);
      }
      if (struct.isSetRemark()) {
        optionals.set(23);
      }
      if (struct.isSetAutoRefund()) {
        optionals.set(24);
      }
      if (struct.isSetPointRate()) {
        optionals.set(25);
      }
      if (struct.isSetType()) {
        optionals.set(26);
      }
      if (struct.isSetIsDisposeException()) {
        optionals.set(27);
      }
      if (struct.isSetRefundPointsBillNo()) {
        optionals.set(28);
      }
      if (struct.isSetPaymentReason()) {
        optionals.set(29);
      }
      if (struct.isSetPageVo()) {
        optionals.set(30);
      }
      oprot.writeBitSet(optionals, 31);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetPaymentId()) {
        oprot.writeString(struct.paymentId);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetBillNo()) {
        oprot.writeString(struct.billNo);
      }
      if (struct.isSetPaymentType()) {
        oprot.writeI32(struct.paymentType);
      }
      if (struct.isSetPaymentValue()) {
        oprot.writeDouble(struct.paymentValue);
      }
      if (struct.isSetPaymentTypeDetails()) {
        oprot.writeI32(struct.paymentTypeDetails);
      }
      if (struct.isSetStep()) {
        oprot.writeI32(struct.step);
      }
      if (struct.isSetIsEnable()) {
        oprot.writeBool(struct.isEnable);
      }
      if (struct.isSetPaymentStatus()) {
        oprot.writeString(struct.paymentStatus);
      }
      if (struct.isSetPaymentOrgNo()) {
        oprot.writeString(struct.paymentOrgNo);
      }
      if (struct.isSetFromAccountName()) {
        oprot.writeString(struct.fromAccountName);
      }
      if (struct.isSetFromAccountNo()) {
        oprot.writeString(struct.fromAccountNo);
      }
      if (struct.isSetToAccountName()) {
        oprot.writeString(struct.toAccountName);
      }
      if (struct.isSetToAccountNo()) {
        oprot.writeString(struct.toAccountNo);
      }
      if (struct.isSetFromPhone()) {
        oprot.writeString(struct.fromPhone);
      }
      if (struct.isSetToPhone()) {
        oprot.writeString(struct.toPhone);
      }
      if (struct.isSetFromUserName()) {
        oprot.writeString(struct.fromUserName);
      }
      if (struct.isSetToUserName()) {
        oprot.writeString(struct.toUserName);
      }
      if (struct.isSetResultCode()) {
        oprot.writeString(struct.resultCode);
      }
      if (struct.isSetResultDesc()) {
        oprot.writeString(struct.resultDesc);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetAutoRefund()) {
        oprot.writeString(struct.autoRefund);
      }
      if (struct.isSetPointRate()) {
        oprot.writeI32(struct.pointRate);
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type.getValue());
      }
      if (struct.isSetIsDisposeException()) {
        oprot.writeString(struct.isDisposeException);
      }
      if (struct.isSetRefundPointsBillNo()) {
        oprot.writeString(struct.refundPointsBillNo);
      }
      if (struct.isSetPaymentReason()) {
        oprot.writeString(struct.paymentReason);
      }
      if (struct.isSetPageVo()) {
        struct.pageVo.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PaymentQueryVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(31);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.paymentId = iprot.readString();
        struct.setPaymentIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.billNo = iprot.readString();
        struct.setBillNoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.paymentType = iprot.readI32();
        struct.setPaymentTypeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.paymentValue = iprot.readDouble();
        struct.setPaymentValueIsSet(true);
      }
      if (incoming.get(8)) {
        struct.paymentTypeDetails = iprot.readI32();
        struct.setPaymentTypeDetailsIsSet(true);
      }
      if (incoming.get(9)) {
        struct.step = iprot.readI32();
        struct.setStepIsSet(true);
      }
      if (incoming.get(10)) {
        struct.isEnable = iprot.readBool();
        struct.setIsEnableIsSet(true);
      }
      if (incoming.get(11)) {
        struct.paymentStatus = iprot.readString();
        struct.setPaymentStatusIsSet(true);
      }
      if (incoming.get(12)) {
        struct.paymentOrgNo = iprot.readString();
        struct.setPaymentOrgNoIsSet(true);
      }
      if (incoming.get(13)) {
        struct.fromAccountName = iprot.readString();
        struct.setFromAccountNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.fromAccountNo = iprot.readString();
        struct.setFromAccountNoIsSet(true);
      }
      if (incoming.get(15)) {
        struct.toAccountName = iprot.readString();
        struct.setToAccountNameIsSet(true);
      }
      if (incoming.get(16)) {
        struct.toAccountNo = iprot.readString();
        struct.setToAccountNoIsSet(true);
      }
      if (incoming.get(17)) {
        struct.fromPhone = iprot.readString();
        struct.setFromPhoneIsSet(true);
      }
      if (incoming.get(18)) {
        struct.toPhone = iprot.readString();
        struct.setToPhoneIsSet(true);
      }
      if (incoming.get(19)) {
        struct.fromUserName = iprot.readString();
        struct.setFromUserNameIsSet(true);
      }
      if (incoming.get(20)) {
        struct.toUserName = iprot.readString();
        struct.setToUserNameIsSet(true);
      }
      if (incoming.get(21)) {
        struct.resultCode = iprot.readString();
        struct.setResultCodeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.resultDesc = iprot.readString();
        struct.setResultDescIsSet(true);
      }
      if (incoming.get(23)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(24)) {
        struct.autoRefund = iprot.readString();
        struct.setAutoRefundIsSet(true);
      }
      if (incoming.get(25)) {
        struct.pointRate = iprot.readI32();
        struct.setPointRateIsSet(true);
      }
      if (incoming.get(26)) {
        struct.type = com.froad.thrift.vo.payment.PaymentType.findByValue(iprot.readI32());
        struct.setTypeIsSet(true);
      }
      if (incoming.get(27)) {
        struct.isDisposeException = iprot.readString();
        struct.setIsDisposeExceptionIsSet(true);
      }
      if (incoming.get(28)) {
        struct.refundPointsBillNo = iprot.readString();
        struct.setRefundPointsBillNoIsSet(true);
      }
      if (incoming.get(29)) {
        struct.paymentReason = iprot.readString();
        struct.setPaymentReasonIsSet(true);
      }
      if (incoming.get(30)) {
        struct.pageVo = new com.froad.thrift.vo.PageVo();
        struct.pageVo.read(iprot);
        struct.setPageVoIsSet(true);
      }
    }
  }

}

