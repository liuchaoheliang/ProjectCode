/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 14.通过二维码获取订单
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class GetOrderByQrcodeVoRes implements org.apache.thrift.TBase<GetOrderByQrcodeVoRes, GetOrderByQrcodeVoRes._Fields>, java.io.Serializable, Cloneable, Comparable<GetOrderByQrcodeVoRes> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetOrderByQrcodeVoRes");

  private static final org.apache.thrift.protocol.TField RESULT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("resultVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ORDER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("orderStatus", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PAYMENT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField TOTAL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField MEMBER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("memberName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SETTLEMENT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("settlementStatus", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField MEMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("memberCode", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new GetOrderByQrcodeVoResStandardSchemeFactory());
    schemes.put(TupleScheme.class, new GetOrderByQrcodeVoResTupleSchemeFactory());
  }

  /**
   * 结果信息
   */
  public com.froad.thrift.vo.ResultVo resultVo; // required
  /**
   * 订单号
   */
  public String orderId; // required
  /**
   * 订单状态
   */
  public String orderStatus; // required
  /**
   * 支付时间
   */
  public long paymentTime; // required
  /**
   * 支付金额
   */
  public double totalPrice; // required
  /**
   * 会员名称
   */
  public String memberName; // required
  /**
   * 结算状态
   */
  public String settlementStatus; // required
  /**
   * 会员号
   */
  public long memberCode; // required
  /**
   * 门店ID
   */
  public String outletId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 结果信息
     */
    RESULT_VO((short)1, "resultVo"),
    /**
     * 订单号
     */
    ORDER_ID((short)2, "orderId"),
    /**
     * 订单状态
     */
    ORDER_STATUS((short)3, "orderStatus"),
    /**
     * 支付时间
     */
    PAYMENT_TIME((short)4, "paymentTime"),
    /**
     * 支付金额
     */
    TOTAL_PRICE((short)5, "totalPrice"),
    /**
     * 会员名称
     */
    MEMBER_NAME((short)6, "memberName"),
    /**
     * 结算状态
     */
    SETTLEMENT_STATUS((short)7, "settlementStatus"),
    /**
     * 会员号
     */
    MEMBER_CODE((short)8, "memberCode"),
    /**
     * 门店ID
     */
    OUTLET_ID((short)9, "outletId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESULT_VO
          return RESULT_VO;
        case 2: // ORDER_ID
          return ORDER_ID;
        case 3: // ORDER_STATUS
          return ORDER_STATUS;
        case 4: // PAYMENT_TIME
          return PAYMENT_TIME;
        case 5: // TOTAL_PRICE
          return TOTAL_PRICE;
        case 6: // MEMBER_NAME
          return MEMBER_NAME;
        case 7: // SETTLEMENT_STATUS
          return SETTLEMENT_STATUS;
        case 8: // MEMBER_CODE
          return MEMBER_CODE;
        case 9: // OUTLET_ID
          return OUTLET_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PAYMENTTIME_ISSET_ID = 0;
  private static final int __TOTALPRICE_ISSET_ID = 1;
  private static final int __MEMBERCODE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESULT_VO, new org.apache.thrift.meta_data.FieldMetaData("resultVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("orderStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYMENT_TIME, new org.apache.thrift.meta_data.FieldMetaData("paymentTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TOTAL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("totalPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MEMBER_NAME, new org.apache.thrift.meta_data.FieldMetaData("memberName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLEMENT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("settlementStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("memberCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetOrderByQrcodeVoRes.class, metaDataMap);
  }

  public GetOrderByQrcodeVoRes() {
  }

  public GetOrderByQrcodeVoRes(
    com.froad.thrift.vo.ResultVo resultVo,
    String orderId,
    String orderStatus,
    long paymentTime,
    double totalPrice,
    String memberName,
    String settlementStatus,
    long memberCode,
    String outletId)
  {
    this();
    this.resultVo = resultVo;
    this.orderId = orderId;
    this.orderStatus = orderStatus;
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    this.memberName = memberName;
    this.settlementStatus = settlementStatus;
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    this.outletId = outletId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GetOrderByQrcodeVoRes(GetOrderByQrcodeVoRes other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetResultVo()) {
      this.resultVo = new com.froad.thrift.vo.ResultVo(other.resultVo);
    }
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    if (other.isSetOrderStatus()) {
      this.orderStatus = other.orderStatus;
    }
    this.paymentTime = other.paymentTime;
    this.totalPrice = other.totalPrice;
    if (other.isSetMemberName()) {
      this.memberName = other.memberName;
    }
    if (other.isSetSettlementStatus()) {
      this.settlementStatus = other.settlementStatus;
    }
    this.memberCode = other.memberCode;
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
  }

  public GetOrderByQrcodeVoRes deepCopy() {
    return new GetOrderByQrcodeVoRes(this);
  }

  @Override
  public void clear() {
    this.resultVo = null;
    this.orderId = null;
    this.orderStatus = null;
    setPaymentTimeIsSet(false);
    this.paymentTime = 0;
    setTotalPriceIsSet(false);
    this.totalPrice = 0.0;
    this.memberName = null;
    this.settlementStatus = null;
    setMemberCodeIsSet(false);
    this.memberCode = 0;
    this.outletId = null;
  }

  /**
   * 结果信息
   */
  public com.froad.thrift.vo.ResultVo getResultVo() {
    return this.resultVo;
  }

  /**
   * 结果信息
   */
  public GetOrderByQrcodeVoRes setResultVo(com.froad.thrift.vo.ResultVo resultVo) {
    this.resultVo = resultVo;
    return this;
  }

  public void unsetResultVo() {
    this.resultVo = null;
  }

  /** Returns true if field resultVo is set (has been assigned a value) and false otherwise */
  public boolean isSetResultVo() {
    return this.resultVo != null;
  }

  public void setResultVoIsSet(boolean value) {
    if (!value) {
      this.resultVo = null;
    }
  }

  /**
   * 订单号
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 订单号
   */
  public GetOrderByQrcodeVoRes setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 订单状态
   */
  public String getOrderStatus() {
    return this.orderStatus;
  }

  /**
   * 订单状态
   */
  public GetOrderByQrcodeVoRes setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

  public void unsetOrderStatus() {
    this.orderStatus = null;
  }

  /** Returns true if field orderStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderStatus() {
    return this.orderStatus != null;
  }

  public void setOrderStatusIsSet(boolean value) {
    if (!value) {
      this.orderStatus = null;
    }
  }

  /**
   * 支付时间
   */
  public long getPaymentTime() {
    return this.paymentTime;
  }

  /**
   * 支付时间
   */
  public GetOrderByQrcodeVoRes setPaymentTime(long paymentTime) {
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    return this;
  }

  public void unsetPaymentTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  /** Returns true if field paymentTime is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentTime() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  public void setPaymentTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID, value);
  }

  /**
   * 支付金额
   */
  public double getTotalPrice() {
    return this.totalPrice;
  }

  /**
   * 支付金额
   */
  public GetOrderByQrcodeVoRes setTotalPrice(double totalPrice) {
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    return this;
  }

  public void unsetTotalPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  /** Returns true if field totalPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  public void setTotalPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPRICE_ISSET_ID, value);
  }

  /**
   * 会员名称
   */
  public String getMemberName() {
    return this.memberName;
  }

  /**
   * 会员名称
   */
  public GetOrderByQrcodeVoRes setMemberName(String memberName) {
    this.memberName = memberName;
    return this;
  }

  public void unsetMemberName() {
    this.memberName = null;
  }

  /** Returns true if field memberName is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberName() {
    return this.memberName != null;
  }

  public void setMemberNameIsSet(boolean value) {
    if (!value) {
      this.memberName = null;
    }
  }

  /**
   * 结算状态
   */
  public String getSettlementStatus() {
    return this.settlementStatus;
  }

  /**
   * 结算状态
   */
  public GetOrderByQrcodeVoRes setSettlementStatus(String settlementStatus) {
    this.settlementStatus = settlementStatus;
    return this;
  }

  public void unsetSettlementStatus() {
    this.settlementStatus = null;
  }

  /** Returns true if field settlementStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetSettlementStatus() {
    return this.settlementStatus != null;
  }

  public void setSettlementStatusIsSet(boolean value) {
    if (!value) {
      this.settlementStatus = null;
    }
  }

  /**
   * 会员号
   */
  public long getMemberCode() {
    return this.memberCode;
  }

  /**
   * 会员号
   */
  public GetOrderByQrcodeVoRes setMemberCode(long memberCode) {
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    return this;
  }

  public void unsetMemberCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  /** Returns true if field memberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberCode() {
    return EncodingUtils.testBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  public void setMemberCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEMBERCODE_ISSET_ID, value);
  }

  /**
   * 门店ID
   */
  public String getOutletId() {
    return this.outletId;
  }

  /**
   * 门店ID
   */
  public GetOrderByQrcodeVoRes setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RESULT_VO:
      if (value == null) {
        unsetResultVo();
      } else {
        setResultVo((com.froad.thrift.vo.ResultVo)value);
      }
      break;

    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case ORDER_STATUS:
      if (value == null) {
        unsetOrderStatus();
      } else {
        setOrderStatus((String)value);
      }
      break;

    case PAYMENT_TIME:
      if (value == null) {
        unsetPaymentTime();
      } else {
        setPaymentTime((Long)value);
      }
      break;

    case TOTAL_PRICE:
      if (value == null) {
        unsetTotalPrice();
      } else {
        setTotalPrice((Double)value);
      }
      break;

    case MEMBER_NAME:
      if (value == null) {
        unsetMemberName();
      } else {
        setMemberName((String)value);
      }
      break;

    case SETTLEMENT_STATUS:
      if (value == null) {
        unsetSettlementStatus();
      } else {
        setSettlementStatus((String)value);
      }
      break;

    case MEMBER_CODE:
      if (value == null) {
        unsetMemberCode();
      } else {
        setMemberCode((Long)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RESULT_VO:
      return getResultVo();

    case ORDER_ID:
      return getOrderId();

    case ORDER_STATUS:
      return getOrderStatus();

    case PAYMENT_TIME:
      return Long.valueOf(getPaymentTime());

    case TOTAL_PRICE:
      return Double.valueOf(getTotalPrice());

    case MEMBER_NAME:
      return getMemberName();

    case SETTLEMENT_STATUS:
      return getSettlementStatus();

    case MEMBER_CODE:
      return Long.valueOf(getMemberCode());

    case OUTLET_ID:
      return getOutletId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RESULT_VO:
      return isSetResultVo();
    case ORDER_ID:
      return isSetOrderId();
    case ORDER_STATUS:
      return isSetOrderStatus();
    case PAYMENT_TIME:
      return isSetPaymentTime();
    case TOTAL_PRICE:
      return isSetTotalPrice();
    case MEMBER_NAME:
      return isSetMemberName();
    case SETTLEMENT_STATUS:
      return isSetSettlementStatus();
    case MEMBER_CODE:
      return isSetMemberCode();
    case OUTLET_ID:
      return isSetOutletId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof GetOrderByQrcodeVoRes)
      return this.equals((GetOrderByQrcodeVoRes)that);
    return false;
  }

  public boolean equals(GetOrderByQrcodeVoRes that) {
    if (that == null)
      return false;

    boolean this_present_resultVo = true && this.isSetResultVo();
    boolean that_present_resultVo = true && that.isSetResultVo();
    if (this_present_resultVo || that_present_resultVo) {
      if (!(this_present_resultVo && that_present_resultVo))
        return false;
      if (!this.resultVo.equals(that.resultVo))
        return false;
    }

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_orderStatus = true && this.isSetOrderStatus();
    boolean that_present_orderStatus = true && that.isSetOrderStatus();
    if (this_present_orderStatus || that_present_orderStatus) {
      if (!(this_present_orderStatus && that_present_orderStatus))
        return false;
      if (!this.orderStatus.equals(that.orderStatus))
        return false;
    }

    boolean this_present_paymentTime = true;
    boolean that_present_paymentTime = true;
    if (this_present_paymentTime || that_present_paymentTime) {
      if (!(this_present_paymentTime && that_present_paymentTime))
        return false;
      if (this.paymentTime != that.paymentTime)
        return false;
    }

    boolean this_present_totalPrice = true;
    boolean that_present_totalPrice = true;
    if (this_present_totalPrice || that_present_totalPrice) {
      if (!(this_present_totalPrice && that_present_totalPrice))
        return false;
      if (this.totalPrice != that.totalPrice)
        return false;
    }

    boolean this_present_memberName = true && this.isSetMemberName();
    boolean that_present_memberName = true && that.isSetMemberName();
    if (this_present_memberName || that_present_memberName) {
      if (!(this_present_memberName && that_present_memberName))
        return false;
      if (!this.memberName.equals(that.memberName))
        return false;
    }

    boolean this_present_settlementStatus = true && this.isSetSettlementStatus();
    boolean that_present_settlementStatus = true && that.isSetSettlementStatus();
    if (this_present_settlementStatus || that_present_settlementStatus) {
      if (!(this_present_settlementStatus && that_present_settlementStatus))
        return false;
      if (!this.settlementStatus.equals(that.settlementStatus))
        return false;
    }

    boolean this_present_memberCode = true;
    boolean that_present_memberCode = true;
    if (this_present_memberCode || that_present_memberCode) {
      if (!(this_present_memberCode && that_present_memberCode))
        return false;
      if (this.memberCode != that.memberCode)
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_resultVo = true && (isSetResultVo());
    list.add(present_resultVo);
    if (present_resultVo)
      list.add(resultVo);

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_orderStatus = true && (isSetOrderStatus());
    list.add(present_orderStatus);
    if (present_orderStatus)
      list.add(orderStatus);

    boolean present_paymentTime = true;
    list.add(present_paymentTime);
    if (present_paymentTime)
      list.add(paymentTime);

    boolean present_totalPrice = true;
    list.add(present_totalPrice);
    if (present_totalPrice)
      list.add(totalPrice);

    boolean present_memberName = true && (isSetMemberName());
    list.add(present_memberName);
    if (present_memberName)
      list.add(memberName);

    boolean present_settlementStatus = true && (isSetSettlementStatus());
    list.add(present_settlementStatus);
    if (present_settlementStatus)
      list.add(settlementStatus);

    boolean present_memberCode = true;
    list.add(present_memberCode);
    if (present_memberCode)
      list.add(memberCode);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    return list.hashCode();
  }

  @Override
  public int compareTo(GetOrderByQrcodeVoRes other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetResultVo()).compareTo(other.isSetResultVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultVo, other.resultVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderStatus()).compareTo(other.isSetOrderStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderStatus, other.orderStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentTime()).compareTo(other.isSetPaymentTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentTime, other.paymentTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPrice()).compareTo(other.isSetTotalPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPrice, other.totalPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberName()).compareTo(other.isSetMemberName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberName, other.memberName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettlementStatus()).compareTo(other.isSetSettlementStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettlementStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settlementStatus, other.settlementStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberCode()).compareTo(other.isSetMemberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberCode, other.memberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("GetOrderByQrcodeVoRes(");
    boolean first = true;

    sb.append("resultVo:");
    if (this.resultVo == null) {
      sb.append("null");
    } else {
      sb.append(this.resultVo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderStatus:");
    if (this.orderStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.orderStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentTime:");
    sb.append(this.paymentTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPrice:");
    sb.append(this.totalPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberName:");
    if (this.memberName == null) {
      sb.append("null");
    } else {
      sb.append(this.memberName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settlementStatus:");
    if (this.settlementStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.settlementStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberCode:");
    sb.append(this.memberCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletId:");
    if (this.outletId == null) {
      sb.append("null");
    } else {
      sb.append(this.outletId);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (resultVo != null) {
      resultVo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GetOrderByQrcodeVoResStandardSchemeFactory implements SchemeFactory {
    public GetOrderByQrcodeVoResStandardScheme getScheme() {
      return new GetOrderByQrcodeVoResStandardScheme();
    }
  }

  private static class GetOrderByQrcodeVoResStandardScheme extends StandardScheme<GetOrderByQrcodeVoRes> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GetOrderByQrcodeVoRes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RESULT_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.resultVo = new com.froad.thrift.vo.ResultVo();
              struct.resultVo.read(iprot);
              struct.setResultVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORDER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderStatus = iprot.readString();
              struct.setOrderStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PAYMENT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.paymentTime = iprot.readI64();
              struct.setPaymentTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TOTAL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalPrice = iprot.readDouble();
              struct.setTotalPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MEMBER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberName = iprot.readString();
              struct.setMemberNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SETTLEMENT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settlementStatus = iprot.readString();
              struct.setSettlementStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MEMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.memberCode = iprot.readI64();
              struct.setMemberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GetOrderByQrcodeVoRes struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.resultVo != null) {
        oprot.writeFieldBegin(RESULT_VO_FIELD_DESC);
        struct.resultVo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      if (struct.orderStatus != null) {
        oprot.writeFieldBegin(ORDER_STATUS_FIELD_DESC);
        oprot.writeString(struct.orderStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAYMENT_TIME_FIELD_DESC);
      oprot.writeI64(struct.paymentTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.totalPrice);
      oprot.writeFieldEnd();
      if (struct.memberName != null) {
        oprot.writeFieldBegin(MEMBER_NAME_FIELD_DESC);
        oprot.writeString(struct.memberName);
        oprot.writeFieldEnd();
      }
      if (struct.settlementStatus != null) {
        oprot.writeFieldBegin(SETTLEMENT_STATUS_FIELD_DESC);
        oprot.writeString(struct.settlementStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MEMBER_CODE_FIELD_DESC);
      oprot.writeI64(struct.memberCode);
      oprot.writeFieldEnd();
      if (struct.outletId != null) {
        oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
        oprot.writeString(struct.outletId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GetOrderByQrcodeVoResTupleSchemeFactory implements SchemeFactory {
    public GetOrderByQrcodeVoResTupleScheme getScheme() {
      return new GetOrderByQrcodeVoResTupleScheme();
    }
  }

  private static class GetOrderByQrcodeVoResTupleScheme extends TupleScheme<GetOrderByQrcodeVoRes> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GetOrderByQrcodeVoRes struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetResultVo()) {
        optionals.set(0);
      }
      if (struct.isSetOrderId()) {
        optionals.set(1);
      }
      if (struct.isSetOrderStatus()) {
        optionals.set(2);
      }
      if (struct.isSetPaymentTime()) {
        optionals.set(3);
      }
      if (struct.isSetTotalPrice()) {
        optionals.set(4);
      }
      if (struct.isSetMemberName()) {
        optionals.set(5);
      }
      if (struct.isSetSettlementStatus()) {
        optionals.set(6);
      }
      if (struct.isSetMemberCode()) {
        optionals.set(7);
      }
      if (struct.isSetOutletId()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetResultVo()) {
        struct.resultVo.write(oprot);
      }
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetOrderStatus()) {
        oprot.writeString(struct.orderStatus);
      }
      if (struct.isSetPaymentTime()) {
        oprot.writeI64(struct.paymentTime);
      }
      if (struct.isSetTotalPrice()) {
        oprot.writeDouble(struct.totalPrice);
      }
      if (struct.isSetMemberName()) {
        oprot.writeString(struct.memberName);
      }
      if (struct.isSetSettlementStatus()) {
        oprot.writeString(struct.settlementStatus);
      }
      if (struct.isSetMemberCode()) {
        oprot.writeI64(struct.memberCode);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GetOrderByQrcodeVoRes struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.resultVo = new com.froad.thrift.vo.ResultVo();
        struct.resultVo.read(iprot);
        struct.setResultVoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.orderStatus = iprot.readString();
        struct.setOrderStatusIsSet(true);
      }
      if (incoming.get(3)) {
        struct.paymentTime = iprot.readI64();
        struct.setPaymentTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.totalPrice = iprot.readDouble();
        struct.setTotalPriceIsSet(true);
      }
      if (incoming.get(5)) {
        struct.memberName = iprot.readString();
        struct.setMemberNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.settlementStatus = iprot.readString();
        struct.setSettlementStatusIsSet(true);
      }
      if (incoming.get(7)) {
        struct.memberCode = iprot.readI64();
        struct.setMemberCodeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
    }
  }

}

