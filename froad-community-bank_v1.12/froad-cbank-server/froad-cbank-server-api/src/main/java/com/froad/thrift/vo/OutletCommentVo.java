/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 门店评论
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class OutletCommentVo implements org.apache.thrift.TBase<OutletCommentVo, OutletCommentVo._Fields>, java.io.Serializable, Cloneable, Comparable<OutletCommentVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OutletCommentVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ORDER_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderValue", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField MEMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("memberCode", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField MEMBER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("memberName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField STAR_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("starLevel", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField COMMENT_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("commentDescription", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField RECOMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("recomment", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField COMMENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("commentType", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField FORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("forgCode", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField SORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("sorgCode", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField TORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("torgCode", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField LORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("lorgCode", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField RECOMMENT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("recommentTime", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField MERCHANT_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantUserName", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField RECOMMENT_NOT_EMPTY_FIELD_DESC = new org.apache.thrift.protocol.TField("recommentNotEmpty", org.apache.thrift.protocol.TType.STRUCT, (short)22);
  private static final org.apache.thrift.protocol.TField STAR_LEVEL_FILTER_FIELD_DESC = new org.apache.thrift.protocol.TField("starLevelFilter", org.apache.thrift.protocol.TType.STRUCT, (short)23);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FILTER_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeFilter", org.apache.thrift.protocol.TType.STRUCT, (short)24);
  private static final org.apache.thrift.protocol.TField OUTLET_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("outletPhone", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField OUTLET_IMAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("outletImage", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField MEMBER_HEAD_FIELD_DESC = new org.apache.thrift.protocol.TField("memberHead", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField RECOMMENT_HEAD_FIELD_DESC = new org.apache.thrift.protocol.TField("recommentHead", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)29);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OutletCommentVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OutletCommentVoTupleSchemeFactory());
  }

  /**
   * 主键id
   */
  public String id; // required
  /**
   * 商户id
   */
  public String merchantId; // required
  /**
   * 门店id
   */
  public String outletId; // required
  /**
   * 创建id
   */
  public long createTime; // required
  /**
   * 门店名称
   */
  public String outletName; // required
  /**
   * 排序
   */
  public int orderValue; // required
  /**
   * 会员编号
   */
  public String memberCode; // required
  /**
   * 会员名称
   */
  public String memberName; // required
  /**
   * 星级
   */
  public int starLevel; // required
  /**
   * 评论描述
   */
  public String commentDescription; // required
  /**
   * 回复
   */
  public String recomment; // required
  /**
   * 客户端id
   */
  public String clientId; // required
  /**
   * 评论来源类型:0-商户评论  默认为普通评论,1-面对面评论,2-其它*
   */
  public int commentType; // required
  /**
   * 1 机构码
   */
  public String forgCode; // required
  /**
   * 2 机构码
   */
  public String sorgCode; // required
  /**
   * 3 机构码
   */
  public String torgCode; // required
  /**
   * 4 机构码
   */
  public String lorgCode; // required
  /**
   * 机构码
   */
  public String orgCode; // required
  /**
   * 门店名称
   */
  public String merchantName; // required
  /**
   * 回复时间
   */
  public long recommentTime; // required
  /**
   * 商户用户名称-回复人
   */
  public String merchantUserName; // required
  /**
   * 回复是否为空 - 查询使用
   */
  public RecommentNotEmptyVo recommentNotEmpty; // required
  /**
   * 星级过滤 - 查询使用
   */
  public StarLevelFilterVo starLevelFilter; // required
  /**
   * 创建时间过滤 - 查询使用
   */
  public CreateTimeFilterVo createTimeFilter; // required
  /**
   * 门店电话
   */
  public String outletPhone; // required
  /**
   * 门店图片
   */
  public String outletImage; // required
  /**
   * 评论人头像
   */
  public String memberHead; // required
  /**
   * 回复人头像
   */
  public String recommentHead; // required
  /**
   * 订单ID
   */
  public String orderId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键id
     */
    ID((short)1, "id"),
    /**
     * 商户id
     */
    MERCHANT_ID((short)2, "merchantId"),
    /**
     * 门店id
     */
    OUTLET_ID((short)3, "outletId"),
    /**
     * 创建id
     */
    CREATE_TIME((short)4, "createTime"),
    /**
     * 门店名称
     */
    OUTLET_NAME((short)5, "outletName"),
    /**
     * 排序
     */
    ORDER_VALUE((short)6, "orderValue"),
    /**
     * 会员编号
     */
    MEMBER_CODE((short)7, "memberCode"),
    /**
     * 会员名称
     */
    MEMBER_NAME((short)8, "memberName"),
    /**
     * 星级
     */
    STAR_LEVEL((short)9, "starLevel"),
    /**
     * 评论描述
     */
    COMMENT_DESCRIPTION((short)10, "commentDescription"),
    /**
     * 回复
     */
    RECOMMENT((short)11, "recomment"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)12, "clientId"),
    /**
     * 评论来源类型:0-商户评论  默认为普通评论,1-面对面评论,2-其它*
     */
    COMMENT_TYPE((short)13, "commentType"),
    /**
     * 1 机构码
     */
    FORG_CODE((short)14, "forgCode"),
    /**
     * 2 机构码
     */
    SORG_CODE((short)15, "sorgCode"),
    /**
     * 3 机构码
     */
    TORG_CODE((short)16, "torgCode"),
    /**
     * 4 机构码
     */
    LORG_CODE((short)17, "lorgCode"),
    /**
     * 机构码
     */
    ORG_CODE((short)18, "orgCode"),
    /**
     * 门店名称
     */
    MERCHANT_NAME((short)19, "merchantName"),
    /**
     * 回复时间
     */
    RECOMMENT_TIME((short)20, "recommentTime"),
    /**
     * 商户用户名称-回复人
     */
    MERCHANT_USER_NAME((short)21, "merchantUserName"),
    /**
     * 回复是否为空 - 查询使用
     */
    RECOMMENT_NOT_EMPTY((short)22, "recommentNotEmpty"),
    /**
     * 星级过滤 - 查询使用
     */
    STAR_LEVEL_FILTER((short)23, "starLevelFilter"),
    /**
     * 创建时间过滤 - 查询使用
     */
    CREATE_TIME_FILTER((short)24, "createTimeFilter"),
    /**
     * 门店电话
     */
    OUTLET_PHONE((short)25, "outletPhone"),
    /**
     * 门店图片
     */
    OUTLET_IMAGE((short)26, "outletImage"),
    /**
     * 评论人头像
     */
    MEMBER_HEAD((short)27, "memberHead"),
    /**
     * 回复人头像
     */
    RECOMMENT_HEAD((short)28, "recommentHead"),
    /**
     * 订单ID
     */
    ORDER_ID((short)29, "orderId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // MERCHANT_ID
          return MERCHANT_ID;
        case 3: // OUTLET_ID
          return OUTLET_ID;
        case 4: // CREATE_TIME
          return CREATE_TIME;
        case 5: // OUTLET_NAME
          return OUTLET_NAME;
        case 6: // ORDER_VALUE
          return ORDER_VALUE;
        case 7: // MEMBER_CODE
          return MEMBER_CODE;
        case 8: // MEMBER_NAME
          return MEMBER_NAME;
        case 9: // STAR_LEVEL
          return STAR_LEVEL;
        case 10: // COMMENT_DESCRIPTION
          return COMMENT_DESCRIPTION;
        case 11: // RECOMMENT
          return RECOMMENT;
        case 12: // CLIENT_ID
          return CLIENT_ID;
        case 13: // COMMENT_TYPE
          return COMMENT_TYPE;
        case 14: // FORG_CODE
          return FORG_CODE;
        case 15: // SORG_CODE
          return SORG_CODE;
        case 16: // TORG_CODE
          return TORG_CODE;
        case 17: // LORG_CODE
          return LORG_CODE;
        case 18: // ORG_CODE
          return ORG_CODE;
        case 19: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 20: // RECOMMENT_TIME
          return RECOMMENT_TIME;
        case 21: // MERCHANT_USER_NAME
          return MERCHANT_USER_NAME;
        case 22: // RECOMMENT_NOT_EMPTY
          return RECOMMENT_NOT_EMPTY;
        case 23: // STAR_LEVEL_FILTER
          return STAR_LEVEL_FILTER;
        case 24: // CREATE_TIME_FILTER
          return CREATE_TIME_FILTER;
        case 25: // OUTLET_PHONE
          return OUTLET_PHONE;
        case 26: // OUTLET_IMAGE
          return OUTLET_IMAGE;
        case 27: // MEMBER_HEAD
          return MEMBER_HEAD;
        case 28: // RECOMMENT_HEAD
          return RECOMMENT_HEAD;
        case 29: // ORDER_ID
          return ORDER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIME_ISSET_ID = 0;
  private static final int __ORDERVALUE_ISSET_ID = 1;
  private static final int __STARLEVEL_ISSET_ID = 2;
  private static final int __COMMENTTYPE_ISSET_ID = 3;
  private static final int __RECOMMENTTIME_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_VALUE, new org.apache.thrift.meta_data.FieldMetaData("orderValue", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MEMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("memberCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_NAME, new org.apache.thrift.meta_data.FieldMetaData("memberName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STAR_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("starLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMMENT_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("commentDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMENT, new org.apache.thrift.meta_data.FieldMetaData("recomment", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMMENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("commentType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("forgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("sorgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("torgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("lorgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMENT_TIME, new org.apache.thrift.meta_data.FieldMetaData("recommentTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MERCHANT_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMENT_NOT_EMPTY, new org.apache.thrift.meta_data.FieldMetaData("recommentNotEmpty", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "RecommentNotEmptyVo")));
    tmpMap.put(_Fields.STAR_LEVEL_FILTER, new org.apache.thrift.meta_data.FieldMetaData("starLevelFilter", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "StarLevelFilterVo")));
    tmpMap.put(_Fields.CREATE_TIME_FILTER, new org.apache.thrift.meta_data.FieldMetaData("createTimeFilter", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "CreateTimeFilterVo")));
    tmpMap.put(_Fields.OUTLET_PHONE, new org.apache.thrift.meta_data.FieldMetaData("outletPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_IMAGE, new org.apache.thrift.meta_data.FieldMetaData("outletImage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_HEAD, new org.apache.thrift.meta_data.FieldMetaData("memberHead", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMENT_HEAD, new org.apache.thrift.meta_data.FieldMetaData("recommentHead", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OutletCommentVo.class, metaDataMap);
  }

  public OutletCommentVo() {
  }

  public OutletCommentVo(
    String id,
    String merchantId,
    String outletId,
    long createTime,
    String outletName,
    int orderValue,
    String memberCode,
    String memberName,
    int starLevel,
    String commentDescription,
    String recomment,
    String clientId,
    int commentType,
    String forgCode,
    String sorgCode,
    String torgCode,
    String lorgCode,
    String orgCode,
    String merchantName,
    long recommentTime,
    String merchantUserName,
    RecommentNotEmptyVo recommentNotEmpty,
    StarLevelFilterVo starLevelFilter,
    CreateTimeFilterVo createTimeFilter,
    String outletPhone,
    String outletImage,
    String memberHead,
    String recommentHead,
    String orderId)
  {
    this();
    this.id = id;
    this.merchantId = merchantId;
    this.outletId = outletId;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.outletName = outletName;
    this.orderValue = orderValue;
    setOrderValueIsSet(true);
    this.memberCode = memberCode;
    this.memberName = memberName;
    this.starLevel = starLevel;
    setStarLevelIsSet(true);
    this.commentDescription = commentDescription;
    this.recomment = recomment;
    this.clientId = clientId;
    this.commentType = commentType;
    setCommentTypeIsSet(true);
    this.forgCode = forgCode;
    this.sorgCode = sorgCode;
    this.torgCode = torgCode;
    this.lorgCode = lorgCode;
    this.orgCode = orgCode;
    this.merchantName = merchantName;
    this.recommentTime = recommentTime;
    setRecommentTimeIsSet(true);
    this.merchantUserName = merchantUserName;
    this.recommentNotEmpty = recommentNotEmpty;
    this.starLevelFilter = starLevelFilter;
    this.createTimeFilter = createTimeFilter;
    this.outletPhone = outletPhone;
    this.outletImage = outletImage;
    this.memberHead = memberHead;
    this.recommentHead = recommentHead;
    this.orderId = orderId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OutletCommentVo(OutletCommentVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
    this.createTime = other.createTime;
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    this.orderValue = other.orderValue;
    if (other.isSetMemberCode()) {
      this.memberCode = other.memberCode;
    }
    if (other.isSetMemberName()) {
      this.memberName = other.memberName;
    }
    this.starLevel = other.starLevel;
    if (other.isSetCommentDescription()) {
      this.commentDescription = other.commentDescription;
    }
    if (other.isSetRecomment()) {
      this.recomment = other.recomment;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    this.commentType = other.commentType;
    if (other.isSetForgCode()) {
      this.forgCode = other.forgCode;
    }
    if (other.isSetSorgCode()) {
      this.sorgCode = other.sorgCode;
    }
    if (other.isSetTorgCode()) {
      this.torgCode = other.torgCode;
    }
    if (other.isSetLorgCode()) {
      this.lorgCode = other.lorgCode;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    this.recommentTime = other.recommentTime;
    if (other.isSetMerchantUserName()) {
      this.merchantUserName = other.merchantUserName;
    }
    if (other.isSetRecommentNotEmpty()) {
      this.recommentNotEmpty = other.recommentNotEmpty;
    }
    if (other.isSetStarLevelFilter()) {
      this.starLevelFilter = other.starLevelFilter;
    }
    if (other.isSetCreateTimeFilter()) {
      this.createTimeFilter = other.createTimeFilter;
    }
    if (other.isSetOutletPhone()) {
      this.outletPhone = other.outletPhone;
    }
    if (other.isSetOutletImage()) {
      this.outletImage = other.outletImage;
    }
    if (other.isSetMemberHead()) {
      this.memberHead = other.memberHead;
    }
    if (other.isSetRecommentHead()) {
      this.recommentHead = other.recommentHead;
    }
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
  }

  public OutletCommentVo deepCopy() {
    return new OutletCommentVo(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.merchantId = null;
    this.outletId = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.outletName = null;
    setOrderValueIsSet(false);
    this.orderValue = 0;
    this.memberCode = null;
    this.memberName = null;
    setStarLevelIsSet(false);
    this.starLevel = 0;
    this.commentDescription = null;
    this.recomment = null;
    this.clientId = null;
    setCommentTypeIsSet(false);
    this.commentType = 0;
    this.forgCode = null;
    this.sorgCode = null;
    this.torgCode = null;
    this.lorgCode = null;
    this.orgCode = null;
    this.merchantName = null;
    setRecommentTimeIsSet(false);
    this.recommentTime = 0;
    this.merchantUserName = null;
    this.recommentNotEmpty = null;
    this.starLevelFilter = null;
    this.createTimeFilter = null;
    this.outletPhone = null;
    this.outletImage = null;
    this.memberHead = null;
    this.recommentHead = null;
    this.orderId = null;
  }

  /**
   * 主键id
   */
  public String getId() {
    return this.id;
  }

  /**
   * 主键id
   */
  public OutletCommentVo setId(String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  /**
   * 商户id
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户id
   */
  public OutletCommentVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 门店id
   */
  public String getOutletId() {
    return this.outletId;
  }

  /**
   * 门店id
   */
  public OutletCommentVo setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  /**
   * 创建id
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建id
   */
  public OutletCommentVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 门店名称
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 门店名称
   */
  public OutletCommentVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 排序
   */
  public int getOrderValue() {
    return this.orderValue;
  }

  /**
   * 排序
   */
  public OutletCommentVo setOrderValue(int orderValue) {
    this.orderValue = orderValue;
    setOrderValueIsSet(true);
    return this;
  }

  public void unsetOrderValue() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERVALUE_ISSET_ID);
  }

  /** Returns true if field orderValue is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderValue() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERVALUE_ISSET_ID);
  }

  public void setOrderValueIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERVALUE_ISSET_ID, value);
  }

  /**
   * 会员编号
   */
  public String getMemberCode() {
    return this.memberCode;
  }

  /**
   * 会员编号
   */
  public OutletCommentVo setMemberCode(String memberCode) {
    this.memberCode = memberCode;
    return this;
  }

  public void unsetMemberCode() {
    this.memberCode = null;
  }

  /** Returns true if field memberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberCode() {
    return this.memberCode != null;
  }

  public void setMemberCodeIsSet(boolean value) {
    if (!value) {
      this.memberCode = null;
    }
  }

  /**
   * 会员名称
   */
  public String getMemberName() {
    return this.memberName;
  }

  /**
   * 会员名称
   */
  public OutletCommentVo setMemberName(String memberName) {
    this.memberName = memberName;
    return this;
  }

  public void unsetMemberName() {
    this.memberName = null;
  }

  /** Returns true if field memberName is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberName() {
    return this.memberName != null;
  }

  public void setMemberNameIsSet(boolean value) {
    if (!value) {
      this.memberName = null;
    }
  }

  /**
   * 星级
   */
  public int getStarLevel() {
    return this.starLevel;
  }

  /**
   * 星级
   */
  public OutletCommentVo setStarLevel(int starLevel) {
    this.starLevel = starLevel;
    setStarLevelIsSet(true);
    return this;
  }

  public void unsetStarLevel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  /** Returns true if field starLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetStarLevel() {
    return EncodingUtils.testBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  public void setStarLevelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARLEVEL_ISSET_ID, value);
  }

  /**
   * 评论描述
   */
  public String getCommentDescription() {
    return this.commentDescription;
  }

  /**
   * 评论描述
   */
  public OutletCommentVo setCommentDescription(String commentDescription) {
    this.commentDescription = commentDescription;
    return this;
  }

  public void unsetCommentDescription() {
    this.commentDescription = null;
  }

  /** Returns true if field commentDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetCommentDescription() {
    return this.commentDescription != null;
  }

  public void setCommentDescriptionIsSet(boolean value) {
    if (!value) {
      this.commentDescription = null;
    }
  }

  /**
   * 回复
   */
  public String getRecomment() {
    return this.recomment;
  }

  /**
   * 回复
   */
  public OutletCommentVo setRecomment(String recomment) {
    this.recomment = recomment;
    return this;
  }

  public void unsetRecomment() {
    this.recomment = null;
  }

  /** Returns true if field recomment is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomment() {
    return this.recomment != null;
  }

  public void setRecommentIsSet(boolean value) {
    if (!value) {
      this.recomment = null;
    }
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public OutletCommentVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 评论来源类型:0-商户评论  默认为普通评论,1-面对面评论,2-其它*
   */
  public int getCommentType() {
    return this.commentType;
  }

  /**
   * 评论来源类型:0-商户评论  默认为普通评论,1-面对面评论,2-其它*
   */
  public OutletCommentVo setCommentType(int commentType) {
    this.commentType = commentType;
    setCommentTypeIsSet(true);
    return this;
  }

  public void unsetCommentType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMMENTTYPE_ISSET_ID);
  }

  /** Returns true if field commentType is set (has been assigned a value) and false otherwise */
  public boolean isSetCommentType() {
    return EncodingUtils.testBit(__isset_bitfield, __COMMENTTYPE_ISSET_ID);
  }

  public void setCommentTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMMENTTYPE_ISSET_ID, value);
  }

  /**
   * 1 机构码
   */
  public String getForgCode() {
    return this.forgCode;
  }

  /**
   * 1 机构码
   */
  public OutletCommentVo setForgCode(String forgCode) {
    this.forgCode = forgCode;
    return this;
  }

  public void unsetForgCode() {
    this.forgCode = null;
  }

  /** Returns true if field forgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetForgCode() {
    return this.forgCode != null;
  }

  public void setForgCodeIsSet(boolean value) {
    if (!value) {
      this.forgCode = null;
    }
  }

  /**
   * 2 机构码
   */
  public String getSorgCode() {
    return this.sorgCode;
  }

  /**
   * 2 机构码
   */
  public OutletCommentVo setSorgCode(String sorgCode) {
    this.sorgCode = sorgCode;
    return this;
  }

  public void unsetSorgCode() {
    this.sorgCode = null;
  }

  /** Returns true if field sorgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetSorgCode() {
    return this.sorgCode != null;
  }

  public void setSorgCodeIsSet(boolean value) {
    if (!value) {
      this.sorgCode = null;
    }
  }

  /**
   * 3 机构码
   */
  public String getTorgCode() {
    return this.torgCode;
  }

  /**
   * 3 机构码
   */
  public OutletCommentVo setTorgCode(String torgCode) {
    this.torgCode = torgCode;
    return this;
  }

  public void unsetTorgCode() {
    this.torgCode = null;
  }

  /** Returns true if field torgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetTorgCode() {
    return this.torgCode != null;
  }

  public void setTorgCodeIsSet(boolean value) {
    if (!value) {
      this.torgCode = null;
    }
  }

  /**
   * 4 机构码
   */
  public String getLorgCode() {
    return this.lorgCode;
  }

  /**
   * 4 机构码
   */
  public OutletCommentVo setLorgCode(String lorgCode) {
    this.lorgCode = lorgCode;
    return this;
  }

  public void unsetLorgCode() {
    this.lorgCode = null;
  }

  /** Returns true if field lorgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetLorgCode() {
    return this.lorgCode != null;
  }

  public void setLorgCodeIsSet(boolean value) {
    if (!value) {
      this.lorgCode = null;
    }
  }

  /**
   * 机构码
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 机构码
   */
  public OutletCommentVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 门店名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 门店名称
   */
  public OutletCommentVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 回复时间
   */
  public long getRecommentTime() {
    return this.recommentTime;
  }

  /**
   * 回复时间
   */
  public OutletCommentVo setRecommentTime(long recommentTime) {
    this.recommentTime = recommentTime;
    setRecommentTimeIsSet(true);
    return this;
  }

  public void unsetRecommentTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RECOMMENTTIME_ISSET_ID);
  }

  /** Returns true if field recommentTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommentTime() {
    return EncodingUtils.testBit(__isset_bitfield, __RECOMMENTTIME_ISSET_ID);
  }

  public void setRecommentTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RECOMMENTTIME_ISSET_ID, value);
  }

  /**
   * 商户用户名称-回复人
   */
  public String getMerchantUserName() {
    return this.merchantUserName;
  }

  /**
   * 商户用户名称-回复人
   */
  public OutletCommentVo setMerchantUserName(String merchantUserName) {
    this.merchantUserName = merchantUserName;
    return this;
  }

  public void unsetMerchantUserName() {
    this.merchantUserName = null;
  }

  /** Returns true if field merchantUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantUserName() {
    return this.merchantUserName != null;
  }

  public void setMerchantUserNameIsSet(boolean value) {
    if (!value) {
      this.merchantUserName = null;
    }
  }

  /**
   * 回复是否为空 - 查询使用
   */
  public RecommentNotEmptyVo getRecommentNotEmpty() {
    return this.recommentNotEmpty;
  }

  /**
   * 回复是否为空 - 查询使用
   */
  public OutletCommentVo setRecommentNotEmpty(RecommentNotEmptyVo recommentNotEmpty) {
    this.recommentNotEmpty = recommentNotEmpty;
    return this;
  }

  public void unsetRecommentNotEmpty() {
    this.recommentNotEmpty = null;
  }

  /** Returns true if field recommentNotEmpty is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommentNotEmpty() {
    return this.recommentNotEmpty != null;
  }

  public void setRecommentNotEmptyIsSet(boolean value) {
    if (!value) {
      this.recommentNotEmpty = null;
    }
  }

  /**
   * 星级过滤 - 查询使用
   */
  public StarLevelFilterVo getStarLevelFilter() {
    return this.starLevelFilter;
  }

  /**
   * 星级过滤 - 查询使用
   */
  public OutletCommentVo setStarLevelFilter(StarLevelFilterVo starLevelFilter) {
    this.starLevelFilter = starLevelFilter;
    return this;
  }

  public void unsetStarLevelFilter() {
    this.starLevelFilter = null;
  }

  /** Returns true if field starLevelFilter is set (has been assigned a value) and false otherwise */
  public boolean isSetStarLevelFilter() {
    return this.starLevelFilter != null;
  }

  public void setStarLevelFilterIsSet(boolean value) {
    if (!value) {
      this.starLevelFilter = null;
    }
  }

  /**
   * 创建时间过滤 - 查询使用
   */
  public CreateTimeFilterVo getCreateTimeFilter() {
    return this.createTimeFilter;
  }

  /**
   * 创建时间过滤 - 查询使用
   */
  public OutletCommentVo setCreateTimeFilter(CreateTimeFilterVo createTimeFilter) {
    this.createTimeFilter = createTimeFilter;
    return this;
  }

  public void unsetCreateTimeFilter() {
    this.createTimeFilter = null;
  }

  /** Returns true if field createTimeFilter is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeFilter() {
    return this.createTimeFilter != null;
  }

  public void setCreateTimeFilterIsSet(boolean value) {
    if (!value) {
      this.createTimeFilter = null;
    }
  }

  /**
   * 门店电话
   */
  public String getOutletPhone() {
    return this.outletPhone;
  }

  /**
   * 门店电话
   */
  public OutletCommentVo setOutletPhone(String outletPhone) {
    this.outletPhone = outletPhone;
    return this;
  }

  public void unsetOutletPhone() {
    this.outletPhone = null;
  }

  /** Returns true if field outletPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletPhone() {
    return this.outletPhone != null;
  }

  public void setOutletPhoneIsSet(boolean value) {
    if (!value) {
      this.outletPhone = null;
    }
  }

  /**
   * 门店图片
   */
  public String getOutletImage() {
    return this.outletImage;
  }

  /**
   * 门店图片
   */
  public OutletCommentVo setOutletImage(String outletImage) {
    this.outletImage = outletImage;
    return this;
  }

  public void unsetOutletImage() {
    this.outletImage = null;
  }

  /** Returns true if field outletImage is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletImage() {
    return this.outletImage != null;
  }

  public void setOutletImageIsSet(boolean value) {
    if (!value) {
      this.outletImage = null;
    }
  }

  /**
   * 评论人头像
   */
  public String getMemberHead() {
    return this.memberHead;
  }

  /**
   * 评论人头像
   */
  public OutletCommentVo setMemberHead(String memberHead) {
    this.memberHead = memberHead;
    return this;
  }

  public void unsetMemberHead() {
    this.memberHead = null;
  }

  /** Returns true if field memberHead is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberHead() {
    return this.memberHead != null;
  }

  public void setMemberHeadIsSet(boolean value) {
    if (!value) {
      this.memberHead = null;
    }
  }

  /**
   * 回复人头像
   */
  public String getRecommentHead() {
    return this.recommentHead;
  }

  /**
   * 回复人头像
   */
  public OutletCommentVo setRecommentHead(String recommentHead) {
    this.recommentHead = recommentHead;
    return this;
  }

  public void unsetRecommentHead() {
    this.recommentHead = null;
  }

  /** Returns true if field recommentHead is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommentHead() {
    return this.recommentHead != null;
  }

  public void setRecommentHeadIsSet(boolean value) {
    if (!value) {
      this.recommentHead = null;
    }
  }

  /**
   * 订单ID
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 订单ID
   */
  public OutletCommentVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case ORDER_VALUE:
      if (value == null) {
        unsetOrderValue();
      } else {
        setOrderValue((Integer)value);
      }
      break;

    case MEMBER_CODE:
      if (value == null) {
        unsetMemberCode();
      } else {
        setMemberCode((String)value);
      }
      break;

    case MEMBER_NAME:
      if (value == null) {
        unsetMemberName();
      } else {
        setMemberName((String)value);
      }
      break;

    case STAR_LEVEL:
      if (value == null) {
        unsetStarLevel();
      } else {
        setStarLevel((Integer)value);
      }
      break;

    case COMMENT_DESCRIPTION:
      if (value == null) {
        unsetCommentDescription();
      } else {
        setCommentDescription((String)value);
      }
      break;

    case RECOMMENT:
      if (value == null) {
        unsetRecomment();
      } else {
        setRecomment((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case COMMENT_TYPE:
      if (value == null) {
        unsetCommentType();
      } else {
        setCommentType((Integer)value);
      }
      break;

    case FORG_CODE:
      if (value == null) {
        unsetForgCode();
      } else {
        setForgCode((String)value);
      }
      break;

    case SORG_CODE:
      if (value == null) {
        unsetSorgCode();
      } else {
        setSorgCode((String)value);
      }
      break;

    case TORG_CODE:
      if (value == null) {
        unsetTorgCode();
      } else {
        setTorgCode((String)value);
      }
      break;

    case LORG_CODE:
      if (value == null) {
        unsetLorgCode();
      } else {
        setLorgCode((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case RECOMMENT_TIME:
      if (value == null) {
        unsetRecommentTime();
      } else {
        setRecommentTime((Long)value);
      }
      break;

    case MERCHANT_USER_NAME:
      if (value == null) {
        unsetMerchantUserName();
      } else {
        setMerchantUserName((String)value);
      }
      break;

    case RECOMMENT_NOT_EMPTY:
      if (value == null) {
        unsetRecommentNotEmpty();
      } else {
        setRecommentNotEmpty((RecommentNotEmptyVo)value);
      }
      break;

    case STAR_LEVEL_FILTER:
      if (value == null) {
        unsetStarLevelFilter();
      } else {
        setStarLevelFilter((StarLevelFilterVo)value);
      }
      break;

    case CREATE_TIME_FILTER:
      if (value == null) {
        unsetCreateTimeFilter();
      } else {
        setCreateTimeFilter((CreateTimeFilterVo)value);
      }
      break;

    case OUTLET_PHONE:
      if (value == null) {
        unsetOutletPhone();
      } else {
        setOutletPhone((String)value);
      }
      break;

    case OUTLET_IMAGE:
      if (value == null) {
        unsetOutletImage();
      } else {
        setOutletImage((String)value);
      }
      break;

    case MEMBER_HEAD:
      if (value == null) {
        unsetMemberHead();
      } else {
        setMemberHead((String)value);
      }
      break;

    case RECOMMENT_HEAD:
      if (value == null) {
        unsetRecommentHead();
      } else {
        setRecommentHead((String)value);
      }
      break;

    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case MERCHANT_ID:
      return getMerchantId();

    case OUTLET_ID:
      return getOutletId();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case OUTLET_NAME:
      return getOutletName();

    case ORDER_VALUE:
      return Integer.valueOf(getOrderValue());

    case MEMBER_CODE:
      return getMemberCode();

    case MEMBER_NAME:
      return getMemberName();

    case STAR_LEVEL:
      return Integer.valueOf(getStarLevel());

    case COMMENT_DESCRIPTION:
      return getCommentDescription();

    case RECOMMENT:
      return getRecomment();

    case CLIENT_ID:
      return getClientId();

    case COMMENT_TYPE:
      return Integer.valueOf(getCommentType());

    case FORG_CODE:
      return getForgCode();

    case SORG_CODE:
      return getSorgCode();

    case TORG_CODE:
      return getTorgCode();

    case LORG_CODE:
      return getLorgCode();

    case ORG_CODE:
      return getOrgCode();

    case MERCHANT_NAME:
      return getMerchantName();

    case RECOMMENT_TIME:
      return Long.valueOf(getRecommentTime());

    case MERCHANT_USER_NAME:
      return getMerchantUserName();

    case RECOMMENT_NOT_EMPTY:
      return getRecommentNotEmpty();

    case STAR_LEVEL_FILTER:
      return getStarLevelFilter();

    case CREATE_TIME_FILTER:
      return getCreateTimeFilter();

    case OUTLET_PHONE:
      return getOutletPhone();

    case OUTLET_IMAGE:
      return getOutletImage();

    case MEMBER_HEAD:
      return getMemberHead();

    case RECOMMENT_HEAD:
      return getRecommentHead();

    case ORDER_ID:
      return getOrderId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case OUTLET_ID:
      return isSetOutletId();
    case CREATE_TIME:
      return isSetCreateTime();
    case OUTLET_NAME:
      return isSetOutletName();
    case ORDER_VALUE:
      return isSetOrderValue();
    case MEMBER_CODE:
      return isSetMemberCode();
    case MEMBER_NAME:
      return isSetMemberName();
    case STAR_LEVEL:
      return isSetStarLevel();
    case COMMENT_DESCRIPTION:
      return isSetCommentDescription();
    case RECOMMENT:
      return isSetRecomment();
    case CLIENT_ID:
      return isSetClientId();
    case COMMENT_TYPE:
      return isSetCommentType();
    case FORG_CODE:
      return isSetForgCode();
    case SORG_CODE:
      return isSetSorgCode();
    case TORG_CODE:
      return isSetTorgCode();
    case LORG_CODE:
      return isSetLorgCode();
    case ORG_CODE:
      return isSetOrgCode();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case RECOMMENT_TIME:
      return isSetRecommentTime();
    case MERCHANT_USER_NAME:
      return isSetMerchantUserName();
    case RECOMMENT_NOT_EMPTY:
      return isSetRecommentNotEmpty();
    case STAR_LEVEL_FILTER:
      return isSetStarLevelFilter();
    case CREATE_TIME_FILTER:
      return isSetCreateTimeFilter();
    case OUTLET_PHONE:
      return isSetOutletPhone();
    case OUTLET_IMAGE:
      return isSetOutletImage();
    case MEMBER_HEAD:
      return isSetMemberHead();
    case RECOMMENT_HEAD:
      return isSetRecommentHead();
    case ORDER_ID:
      return isSetOrderId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OutletCommentVo)
      return this.equals((OutletCommentVo)that);
    return false;
  }

  public boolean equals(OutletCommentVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_orderValue = true;
    boolean that_present_orderValue = true;
    if (this_present_orderValue || that_present_orderValue) {
      if (!(this_present_orderValue && that_present_orderValue))
        return false;
      if (this.orderValue != that.orderValue)
        return false;
    }

    boolean this_present_memberCode = true && this.isSetMemberCode();
    boolean that_present_memberCode = true && that.isSetMemberCode();
    if (this_present_memberCode || that_present_memberCode) {
      if (!(this_present_memberCode && that_present_memberCode))
        return false;
      if (!this.memberCode.equals(that.memberCode))
        return false;
    }

    boolean this_present_memberName = true && this.isSetMemberName();
    boolean that_present_memberName = true && that.isSetMemberName();
    if (this_present_memberName || that_present_memberName) {
      if (!(this_present_memberName && that_present_memberName))
        return false;
      if (!this.memberName.equals(that.memberName))
        return false;
    }

    boolean this_present_starLevel = true;
    boolean that_present_starLevel = true;
    if (this_present_starLevel || that_present_starLevel) {
      if (!(this_present_starLevel && that_present_starLevel))
        return false;
      if (this.starLevel != that.starLevel)
        return false;
    }

    boolean this_present_commentDescription = true && this.isSetCommentDescription();
    boolean that_present_commentDescription = true && that.isSetCommentDescription();
    if (this_present_commentDescription || that_present_commentDescription) {
      if (!(this_present_commentDescription && that_present_commentDescription))
        return false;
      if (!this.commentDescription.equals(that.commentDescription))
        return false;
    }

    boolean this_present_recomment = true && this.isSetRecomment();
    boolean that_present_recomment = true && that.isSetRecomment();
    if (this_present_recomment || that_present_recomment) {
      if (!(this_present_recomment && that_present_recomment))
        return false;
      if (!this.recomment.equals(that.recomment))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_commentType = true;
    boolean that_present_commentType = true;
    if (this_present_commentType || that_present_commentType) {
      if (!(this_present_commentType && that_present_commentType))
        return false;
      if (this.commentType != that.commentType)
        return false;
    }

    boolean this_present_forgCode = true && this.isSetForgCode();
    boolean that_present_forgCode = true && that.isSetForgCode();
    if (this_present_forgCode || that_present_forgCode) {
      if (!(this_present_forgCode && that_present_forgCode))
        return false;
      if (!this.forgCode.equals(that.forgCode))
        return false;
    }

    boolean this_present_sorgCode = true && this.isSetSorgCode();
    boolean that_present_sorgCode = true && that.isSetSorgCode();
    if (this_present_sorgCode || that_present_sorgCode) {
      if (!(this_present_sorgCode && that_present_sorgCode))
        return false;
      if (!this.sorgCode.equals(that.sorgCode))
        return false;
    }

    boolean this_present_torgCode = true && this.isSetTorgCode();
    boolean that_present_torgCode = true && that.isSetTorgCode();
    if (this_present_torgCode || that_present_torgCode) {
      if (!(this_present_torgCode && that_present_torgCode))
        return false;
      if (!this.torgCode.equals(that.torgCode))
        return false;
    }

    boolean this_present_lorgCode = true && this.isSetLorgCode();
    boolean that_present_lorgCode = true && that.isSetLorgCode();
    if (this_present_lorgCode || that_present_lorgCode) {
      if (!(this_present_lorgCode && that_present_lorgCode))
        return false;
      if (!this.lorgCode.equals(that.lorgCode))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_recommentTime = true;
    boolean that_present_recommentTime = true;
    if (this_present_recommentTime || that_present_recommentTime) {
      if (!(this_present_recommentTime && that_present_recommentTime))
        return false;
      if (this.recommentTime != that.recommentTime)
        return false;
    }

    boolean this_present_merchantUserName = true && this.isSetMerchantUserName();
    boolean that_present_merchantUserName = true && that.isSetMerchantUserName();
    if (this_present_merchantUserName || that_present_merchantUserName) {
      if (!(this_present_merchantUserName && that_present_merchantUserName))
        return false;
      if (!this.merchantUserName.equals(that.merchantUserName))
        return false;
    }

    boolean this_present_recommentNotEmpty = true && this.isSetRecommentNotEmpty();
    boolean that_present_recommentNotEmpty = true && that.isSetRecommentNotEmpty();
    if (this_present_recommentNotEmpty || that_present_recommentNotEmpty) {
      if (!(this_present_recommentNotEmpty && that_present_recommentNotEmpty))
        return false;
      if (!this.recommentNotEmpty.equals(that.recommentNotEmpty))
        return false;
    }

    boolean this_present_starLevelFilter = true && this.isSetStarLevelFilter();
    boolean that_present_starLevelFilter = true && that.isSetStarLevelFilter();
    if (this_present_starLevelFilter || that_present_starLevelFilter) {
      if (!(this_present_starLevelFilter && that_present_starLevelFilter))
        return false;
      if (!this.starLevelFilter.equals(that.starLevelFilter))
        return false;
    }

    boolean this_present_createTimeFilter = true && this.isSetCreateTimeFilter();
    boolean that_present_createTimeFilter = true && that.isSetCreateTimeFilter();
    if (this_present_createTimeFilter || that_present_createTimeFilter) {
      if (!(this_present_createTimeFilter && that_present_createTimeFilter))
        return false;
      if (!this.createTimeFilter.equals(that.createTimeFilter))
        return false;
    }

    boolean this_present_outletPhone = true && this.isSetOutletPhone();
    boolean that_present_outletPhone = true && that.isSetOutletPhone();
    if (this_present_outletPhone || that_present_outletPhone) {
      if (!(this_present_outletPhone && that_present_outletPhone))
        return false;
      if (!this.outletPhone.equals(that.outletPhone))
        return false;
    }

    boolean this_present_outletImage = true && this.isSetOutletImage();
    boolean that_present_outletImage = true && that.isSetOutletImage();
    if (this_present_outletImage || that_present_outletImage) {
      if (!(this_present_outletImage && that_present_outletImage))
        return false;
      if (!this.outletImage.equals(that.outletImage))
        return false;
    }

    boolean this_present_memberHead = true && this.isSetMemberHead();
    boolean that_present_memberHead = true && that.isSetMemberHead();
    if (this_present_memberHead || that_present_memberHead) {
      if (!(this_present_memberHead && that_present_memberHead))
        return false;
      if (!this.memberHead.equals(that.memberHead))
        return false;
    }

    boolean this_present_recommentHead = true && this.isSetRecommentHead();
    boolean that_present_recommentHead = true && that.isSetRecommentHead();
    if (this_present_recommentHead || that_present_recommentHead) {
      if (!(this_present_recommentHead && that_present_recommentHead))
        return false;
      if (!this.recommentHead.equals(that.recommentHead))
        return false;
    }

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_orderValue = true;
    list.add(present_orderValue);
    if (present_orderValue)
      list.add(orderValue);

    boolean present_memberCode = true && (isSetMemberCode());
    list.add(present_memberCode);
    if (present_memberCode)
      list.add(memberCode);

    boolean present_memberName = true && (isSetMemberName());
    list.add(present_memberName);
    if (present_memberName)
      list.add(memberName);

    boolean present_starLevel = true;
    list.add(present_starLevel);
    if (present_starLevel)
      list.add(starLevel);

    boolean present_commentDescription = true && (isSetCommentDescription());
    list.add(present_commentDescription);
    if (present_commentDescription)
      list.add(commentDescription);

    boolean present_recomment = true && (isSetRecomment());
    list.add(present_recomment);
    if (present_recomment)
      list.add(recomment);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_commentType = true;
    list.add(present_commentType);
    if (present_commentType)
      list.add(commentType);

    boolean present_forgCode = true && (isSetForgCode());
    list.add(present_forgCode);
    if (present_forgCode)
      list.add(forgCode);

    boolean present_sorgCode = true && (isSetSorgCode());
    list.add(present_sorgCode);
    if (present_sorgCode)
      list.add(sorgCode);

    boolean present_torgCode = true && (isSetTorgCode());
    list.add(present_torgCode);
    if (present_torgCode)
      list.add(torgCode);

    boolean present_lorgCode = true && (isSetLorgCode());
    list.add(present_lorgCode);
    if (present_lorgCode)
      list.add(lorgCode);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_recommentTime = true;
    list.add(present_recommentTime);
    if (present_recommentTime)
      list.add(recommentTime);

    boolean present_merchantUserName = true && (isSetMerchantUserName());
    list.add(present_merchantUserName);
    if (present_merchantUserName)
      list.add(merchantUserName);

    boolean present_recommentNotEmpty = true && (isSetRecommentNotEmpty());
    list.add(present_recommentNotEmpty);
    if (present_recommentNotEmpty)
      list.add(recommentNotEmpty);

    boolean present_starLevelFilter = true && (isSetStarLevelFilter());
    list.add(present_starLevelFilter);
    if (present_starLevelFilter)
      list.add(starLevelFilter);

    boolean present_createTimeFilter = true && (isSetCreateTimeFilter());
    list.add(present_createTimeFilter);
    if (present_createTimeFilter)
      list.add(createTimeFilter);

    boolean present_outletPhone = true && (isSetOutletPhone());
    list.add(present_outletPhone);
    if (present_outletPhone)
      list.add(outletPhone);

    boolean present_outletImage = true && (isSetOutletImage());
    list.add(present_outletImage);
    if (present_outletImage)
      list.add(outletImage);

    boolean present_memberHead = true && (isSetMemberHead());
    list.add(present_memberHead);
    if (present_memberHead)
      list.add(memberHead);

    boolean present_recommentHead = true && (isSetRecommentHead());
    list.add(present_recommentHead);
    if (present_recommentHead)
      list.add(recommentHead);

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    return list.hashCode();
  }

  @Override
  public int compareTo(OutletCommentVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderValue()).compareTo(other.isSetOrderValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderValue, other.orderValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberCode()).compareTo(other.isSetMemberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberCode, other.memberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberName()).compareTo(other.isSetMemberName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberName, other.memberName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarLevel()).compareTo(other.isSetStarLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starLevel, other.starLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommentDescription()).compareTo(other.isSetCommentDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommentDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commentDescription, other.commentDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecomment()).compareTo(other.isSetRecomment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomment, other.recomment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommentType()).compareTo(other.isSetCommentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommentType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commentType, other.commentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetForgCode()).compareTo(other.isSetForgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetForgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.forgCode, other.forgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSorgCode()).compareTo(other.isSetSorgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSorgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sorgCode, other.sorgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTorgCode()).compareTo(other.isSetTorgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTorgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.torgCode, other.torgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLorgCode()).compareTo(other.isSetLorgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLorgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lorgCode, other.lorgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommentTime()).compareTo(other.isSetRecommentTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommentTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommentTime, other.recommentTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantUserName()).compareTo(other.isSetMerchantUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantUserName, other.merchantUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommentNotEmpty()).compareTo(other.isSetRecommentNotEmpty());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommentNotEmpty()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommentNotEmpty, other.recommentNotEmpty);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarLevelFilter()).compareTo(other.isSetStarLevelFilter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarLevelFilter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starLevelFilter, other.starLevelFilter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeFilter()).compareTo(other.isSetCreateTimeFilter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeFilter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeFilter, other.createTimeFilter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletPhone()).compareTo(other.isSetOutletPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletPhone, other.outletPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletImage()).compareTo(other.isSetOutletImage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletImage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletImage, other.outletImage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberHead()).compareTo(other.isSetMemberHead());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberHead()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberHead, other.memberHead);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommentHead()).compareTo(other.isSetRecommentHead());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommentHead()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommentHead, other.recommentHead);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OutletCommentVo(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletId:");
    if (this.outletId == null) {
      sb.append("null");
    } else {
      sb.append(this.outletId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletName:");
    if (this.outletName == null) {
      sb.append("null");
    } else {
      sb.append(this.outletName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderValue:");
    sb.append(this.orderValue);
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberCode:");
    if (this.memberCode == null) {
      sb.append("null");
    } else {
      sb.append(this.memberCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberName:");
    if (this.memberName == null) {
      sb.append("null");
    } else {
      sb.append(this.memberName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("starLevel:");
    sb.append(this.starLevel);
    first = false;
    if (!first) sb.append(", ");
    sb.append("commentDescription:");
    if (this.commentDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.commentDescription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recomment:");
    if (this.recomment == null) {
      sb.append("null");
    } else {
      sb.append(this.recomment);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("commentType:");
    sb.append(this.commentType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("forgCode:");
    if (this.forgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.forgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sorgCode:");
    if (this.sorgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.sorgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("torgCode:");
    if (this.torgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.torgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lorgCode:");
    if (this.lorgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.lorgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommentTime:");
    sb.append(this.recommentTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantUserName:");
    if (this.merchantUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommentNotEmpty:");
    if (this.recommentNotEmpty == null) {
      sb.append("null");
    } else {
      sb.append(this.recommentNotEmpty);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("starLevelFilter:");
    if (this.starLevelFilter == null) {
      sb.append("null");
    } else {
      sb.append(this.starLevelFilter);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeFilter:");
    if (this.createTimeFilter == null) {
      sb.append("null");
    } else {
      sb.append(this.createTimeFilter);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletPhone:");
    if (this.outletPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.outletPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletImage:");
    if (this.outletImage == null) {
      sb.append("null");
    } else {
      sb.append(this.outletImage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberHead:");
    if (this.memberHead == null) {
      sb.append("null");
    } else {
      sb.append(this.memberHead);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommentHead:");
    if (this.recommentHead == null) {
      sb.append("null");
    } else {
      sb.append(this.recommentHead);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OutletCommentVoStandardSchemeFactory implements SchemeFactory {
    public OutletCommentVoStandardScheme getScheme() {
      return new OutletCommentVoStandardScheme();
    }
  }

  private static class OutletCommentVoStandardScheme extends StandardScheme<OutletCommentVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OutletCommentVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ORDER_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderValue = iprot.readI32();
              struct.setOrderValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MEMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberCode = iprot.readString();
              struct.setMemberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MEMBER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberName = iprot.readString();
              struct.setMemberNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // STAR_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.starLevel = iprot.readI32();
              struct.setStarLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // COMMENT_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.commentDescription = iprot.readString();
              struct.setCommentDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // RECOMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recomment = iprot.readString();
              struct.setRecommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // COMMENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.commentType = iprot.readI32();
              struct.setCommentTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // FORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.forgCode = iprot.readString();
              struct.setForgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sorgCode = iprot.readString();
              struct.setSorgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // TORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.torgCode = iprot.readString();
              struct.setTorgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // LORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lorgCode = iprot.readString();
              struct.setLorgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // RECOMMENT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.recommentTime = iprot.readI64();
              struct.setRecommentTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // MERCHANT_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantUserName = iprot.readString();
              struct.setMerchantUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // RECOMMENT_NOT_EMPTY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.recommentNotEmpty = new RecommentNotEmptyVo();
              struct.recommentNotEmpty.read(iprot);
              struct.setRecommentNotEmptyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // STAR_LEVEL_FILTER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.starLevelFilter = new StarLevelFilterVo();
              struct.starLevelFilter.read(iprot);
              struct.setStarLevelFilterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // CREATE_TIME_FILTER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.createTimeFilter = new CreateTimeFilterVo();
              struct.createTimeFilter.read(iprot);
              struct.setCreateTimeFilterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // OUTLET_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletPhone = iprot.readString();
              struct.setOutletPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // OUTLET_IMAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletImage = iprot.readString();
              struct.setOutletImageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // MEMBER_HEAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberHead = iprot.readString();
              struct.setMemberHeadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // RECOMMENT_HEAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recommentHead = iprot.readString();
              struct.setRecommentHeadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OutletCommentVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.outletId != null) {
        oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
        oprot.writeString(struct.outletId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.outletName != null) {
        oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
        oprot.writeString(struct.outletName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ORDER_VALUE_FIELD_DESC);
      oprot.writeI32(struct.orderValue);
      oprot.writeFieldEnd();
      if (struct.memberCode != null) {
        oprot.writeFieldBegin(MEMBER_CODE_FIELD_DESC);
        oprot.writeString(struct.memberCode);
        oprot.writeFieldEnd();
      }
      if (struct.memberName != null) {
        oprot.writeFieldBegin(MEMBER_NAME_FIELD_DESC);
        oprot.writeString(struct.memberName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STAR_LEVEL_FIELD_DESC);
      oprot.writeI32(struct.starLevel);
      oprot.writeFieldEnd();
      if (struct.commentDescription != null) {
        oprot.writeFieldBegin(COMMENT_DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.commentDescription);
        oprot.writeFieldEnd();
      }
      if (struct.recomment != null) {
        oprot.writeFieldBegin(RECOMMENT_FIELD_DESC);
        oprot.writeString(struct.recomment);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COMMENT_TYPE_FIELD_DESC);
      oprot.writeI32(struct.commentType);
      oprot.writeFieldEnd();
      if (struct.forgCode != null) {
        oprot.writeFieldBegin(FORG_CODE_FIELD_DESC);
        oprot.writeString(struct.forgCode);
        oprot.writeFieldEnd();
      }
      if (struct.sorgCode != null) {
        oprot.writeFieldBegin(SORG_CODE_FIELD_DESC);
        oprot.writeString(struct.sorgCode);
        oprot.writeFieldEnd();
      }
      if (struct.torgCode != null) {
        oprot.writeFieldBegin(TORG_CODE_FIELD_DESC);
        oprot.writeString(struct.torgCode);
        oprot.writeFieldEnd();
      }
      if (struct.lorgCode != null) {
        oprot.writeFieldBegin(LORG_CODE_FIELD_DESC);
        oprot.writeString(struct.lorgCode);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RECOMMENT_TIME_FIELD_DESC);
      oprot.writeI64(struct.recommentTime);
      oprot.writeFieldEnd();
      if (struct.merchantUserName != null) {
        oprot.writeFieldBegin(MERCHANT_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantUserName);
        oprot.writeFieldEnd();
      }
      if (struct.recommentNotEmpty != null) {
        oprot.writeFieldBegin(RECOMMENT_NOT_EMPTY_FIELD_DESC);
        struct.recommentNotEmpty.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.starLevelFilter != null) {
        oprot.writeFieldBegin(STAR_LEVEL_FILTER_FIELD_DESC);
        struct.starLevelFilter.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.createTimeFilter != null) {
        oprot.writeFieldBegin(CREATE_TIME_FILTER_FIELD_DESC);
        struct.createTimeFilter.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.outletPhone != null) {
        oprot.writeFieldBegin(OUTLET_PHONE_FIELD_DESC);
        oprot.writeString(struct.outletPhone);
        oprot.writeFieldEnd();
      }
      if (struct.outletImage != null) {
        oprot.writeFieldBegin(OUTLET_IMAGE_FIELD_DESC);
        oprot.writeString(struct.outletImage);
        oprot.writeFieldEnd();
      }
      if (struct.memberHead != null) {
        oprot.writeFieldBegin(MEMBER_HEAD_FIELD_DESC);
        oprot.writeString(struct.memberHead);
        oprot.writeFieldEnd();
      }
      if (struct.recommentHead != null) {
        oprot.writeFieldBegin(RECOMMENT_HEAD_FIELD_DESC);
        oprot.writeString(struct.recommentHead);
        oprot.writeFieldEnd();
      }
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OutletCommentVoTupleSchemeFactory implements SchemeFactory {
    public OutletCommentVoTupleScheme getScheme() {
      return new OutletCommentVoTupleScheme();
    }
  }

  private static class OutletCommentVoTupleScheme extends TupleScheme<OutletCommentVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OutletCommentVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(1);
      }
      if (struct.isSetOutletId()) {
        optionals.set(2);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(3);
      }
      if (struct.isSetOutletName()) {
        optionals.set(4);
      }
      if (struct.isSetOrderValue()) {
        optionals.set(5);
      }
      if (struct.isSetMemberCode()) {
        optionals.set(6);
      }
      if (struct.isSetMemberName()) {
        optionals.set(7);
      }
      if (struct.isSetStarLevel()) {
        optionals.set(8);
      }
      if (struct.isSetCommentDescription()) {
        optionals.set(9);
      }
      if (struct.isSetRecomment()) {
        optionals.set(10);
      }
      if (struct.isSetClientId()) {
        optionals.set(11);
      }
      if (struct.isSetCommentType()) {
        optionals.set(12);
      }
      if (struct.isSetForgCode()) {
        optionals.set(13);
      }
      if (struct.isSetSorgCode()) {
        optionals.set(14);
      }
      if (struct.isSetTorgCode()) {
        optionals.set(15);
      }
      if (struct.isSetLorgCode()) {
        optionals.set(16);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(17);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(18);
      }
      if (struct.isSetRecommentTime()) {
        optionals.set(19);
      }
      if (struct.isSetMerchantUserName()) {
        optionals.set(20);
      }
      if (struct.isSetRecommentNotEmpty()) {
        optionals.set(21);
      }
      if (struct.isSetStarLevelFilter()) {
        optionals.set(22);
      }
      if (struct.isSetCreateTimeFilter()) {
        optionals.set(23);
      }
      if (struct.isSetOutletPhone()) {
        optionals.set(24);
      }
      if (struct.isSetOutletImage()) {
        optionals.set(25);
      }
      if (struct.isSetMemberHead()) {
        optionals.set(26);
      }
      if (struct.isSetRecommentHead()) {
        optionals.set(27);
      }
      if (struct.isSetOrderId()) {
        optionals.set(28);
      }
      oprot.writeBitSet(optionals, 29);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetOrderValue()) {
        oprot.writeI32(struct.orderValue);
      }
      if (struct.isSetMemberCode()) {
        oprot.writeString(struct.memberCode);
      }
      if (struct.isSetMemberName()) {
        oprot.writeString(struct.memberName);
      }
      if (struct.isSetStarLevel()) {
        oprot.writeI32(struct.starLevel);
      }
      if (struct.isSetCommentDescription()) {
        oprot.writeString(struct.commentDescription);
      }
      if (struct.isSetRecomment()) {
        oprot.writeString(struct.recomment);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetCommentType()) {
        oprot.writeI32(struct.commentType);
      }
      if (struct.isSetForgCode()) {
        oprot.writeString(struct.forgCode);
      }
      if (struct.isSetSorgCode()) {
        oprot.writeString(struct.sorgCode);
      }
      if (struct.isSetTorgCode()) {
        oprot.writeString(struct.torgCode);
      }
      if (struct.isSetLorgCode()) {
        oprot.writeString(struct.lorgCode);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetRecommentTime()) {
        oprot.writeI64(struct.recommentTime);
      }
      if (struct.isSetMerchantUserName()) {
        oprot.writeString(struct.merchantUserName);
      }
      if (struct.isSetRecommentNotEmpty()) {
        struct.recommentNotEmpty.write(oprot);
      }
      if (struct.isSetStarLevelFilter()) {
        struct.starLevelFilter.write(oprot);
      }
      if (struct.isSetCreateTimeFilter()) {
        struct.createTimeFilter.write(oprot);
      }
      if (struct.isSetOutletPhone()) {
        oprot.writeString(struct.outletPhone);
      }
      if (struct.isSetOutletImage()) {
        oprot.writeString(struct.outletImage);
      }
      if (struct.isSetMemberHead()) {
        oprot.writeString(struct.memberHead);
      }
      if (struct.isSetRecommentHead()) {
        oprot.writeString(struct.recommentHead);
      }
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OutletCommentVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(29);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.orderValue = iprot.readI32();
        struct.setOrderValueIsSet(true);
      }
      if (incoming.get(6)) {
        struct.memberCode = iprot.readString();
        struct.setMemberCodeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.memberName = iprot.readString();
        struct.setMemberNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.starLevel = iprot.readI32();
        struct.setStarLevelIsSet(true);
      }
      if (incoming.get(9)) {
        struct.commentDescription = iprot.readString();
        struct.setCommentDescriptionIsSet(true);
      }
      if (incoming.get(10)) {
        struct.recomment = iprot.readString();
        struct.setRecommentIsSet(true);
      }
      if (incoming.get(11)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.commentType = iprot.readI32();
        struct.setCommentTypeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.forgCode = iprot.readString();
        struct.setForgCodeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.sorgCode = iprot.readString();
        struct.setSorgCodeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.torgCode = iprot.readString();
        struct.setTorgCodeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.lorgCode = iprot.readString();
        struct.setLorgCodeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(19)) {
        struct.recommentTime = iprot.readI64();
        struct.setRecommentTimeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.merchantUserName = iprot.readString();
        struct.setMerchantUserNameIsSet(true);
      }
      if (incoming.get(21)) {
        struct.recommentNotEmpty = new RecommentNotEmptyVo();
        struct.recommentNotEmpty.read(iprot);
        struct.setRecommentNotEmptyIsSet(true);
      }
      if (incoming.get(22)) {
        struct.starLevelFilter = new StarLevelFilterVo();
        struct.starLevelFilter.read(iprot);
        struct.setStarLevelFilterIsSet(true);
      }
      if (incoming.get(23)) {
        struct.createTimeFilter = new CreateTimeFilterVo();
        struct.createTimeFilter.read(iprot);
        struct.setCreateTimeFilterIsSet(true);
      }
      if (incoming.get(24)) {
        struct.outletPhone = iprot.readString();
        struct.setOutletPhoneIsSet(true);
      }
      if (incoming.get(25)) {
        struct.outletImage = iprot.readString();
        struct.setOutletImageIsSet(true);
      }
      if (incoming.get(26)) {
        struct.memberHead = iprot.readString();
        struct.setMemberHeadIsSet(true);
      }
      if (incoming.get(27)) {
        struct.recommentHead = iprot.readString();
        struct.setRecommentHeadIsSet(true);
      }
      if (incoming.get(28)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
    }
  }

}

