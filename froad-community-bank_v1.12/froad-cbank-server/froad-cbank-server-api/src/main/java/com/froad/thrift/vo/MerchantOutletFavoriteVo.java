/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商户门店收藏
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MerchantOutletFavoriteVo implements org.apache.thrift.TBase<MerchantOutletFavoriteVo, MerchantOutletFavoriteVo._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantOutletFavoriteVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantOutletFavoriteVo");

  private static final org.apache.thrift.protocol.TField _ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField STORE_OUTLET_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("storeOutletInfo", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField DELIVER_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("deliverInfo", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField RECV_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("recvInfo", org.apache.thrift.protocol.TType.LIST, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantOutletFavoriteVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantOutletFavoriteVoTupleSchemeFactory());
  }

  /**
   * 主键id
   */
  public long _id; // required
  /**
   * 门店收藏列表
   */
  public List<StoreOutletInfoVo> storeOutletInfo; // required
  /**
   * 提货信息
   */
  public DeliverInfoVo deliverInfo; // required
  /**
   * 收货信息列表
   */
  public List<RecvInfoVo> recvInfo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键id
     */
    _ID((short)1, "_id"),
    /**
     * 门店收藏列表
     */
    STORE_OUTLET_INFO((short)2, "storeOutletInfo"),
    /**
     * 提货信息
     */
    DELIVER_INFO((short)3, "deliverInfo"),
    /**
     * 收货信息列表
     */
    RECV_INFO((short)4, "recvInfo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _ID
          return _ID;
        case 2: // STORE_OUTLET_INFO
          return STORE_OUTLET_INFO;
        case 3: // DELIVER_INFO
          return DELIVER_INFO;
        case 4: // RECV_INFO
          return RECV_INFO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___ID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._ID, new org.apache.thrift.meta_data.FieldMetaData("_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STORE_OUTLET_INFO, new org.apache.thrift.meta_data.FieldMetaData("storeOutletInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StoreOutletInfoVo.class))));
    tmpMap.put(_Fields.DELIVER_INFO, new org.apache.thrift.meta_data.FieldMetaData("deliverInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DeliverInfoVo.class)));
    tmpMap.put(_Fields.RECV_INFO, new org.apache.thrift.meta_data.FieldMetaData("recvInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, RecvInfoVo.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantOutletFavoriteVo.class, metaDataMap);
  }

  public MerchantOutletFavoriteVo() {
  }

  public MerchantOutletFavoriteVo(
    long _id,
    List<StoreOutletInfoVo> storeOutletInfo,
    DeliverInfoVo deliverInfo,
    List<RecvInfoVo> recvInfo)
  {
    this();
    this._id = _id;
    set_idIsSet(true);
    this.storeOutletInfo = storeOutletInfo;
    this.deliverInfo = deliverInfo;
    this.recvInfo = recvInfo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantOutletFavoriteVo(MerchantOutletFavoriteVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this._id = other._id;
    if (other.isSetStoreOutletInfo()) {
      List<StoreOutletInfoVo> __this__storeOutletInfo = new ArrayList<StoreOutletInfoVo>(other.storeOutletInfo.size());
      for (StoreOutletInfoVo other_element : other.storeOutletInfo) {
        __this__storeOutletInfo.add(new StoreOutletInfoVo(other_element));
      }
      this.storeOutletInfo = __this__storeOutletInfo;
    }
    if (other.isSetDeliverInfo()) {
      this.deliverInfo = new DeliverInfoVo(other.deliverInfo);
    }
    if (other.isSetRecvInfo()) {
      List<RecvInfoVo> __this__recvInfo = new ArrayList<RecvInfoVo>(other.recvInfo.size());
      for (RecvInfoVo other_element : other.recvInfo) {
        __this__recvInfo.add(new RecvInfoVo(other_element));
      }
      this.recvInfo = __this__recvInfo;
    }
  }

  public MerchantOutletFavoriteVo deepCopy() {
    return new MerchantOutletFavoriteVo(this);
  }

  @Override
  public void clear() {
    set_idIsSet(false);
    this._id = 0;
    this.storeOutletInfo = null;
    this.deliverInfo = null;
    this.recvInfo = null;
  }

  /**
   * 主键id
   */
  public long get_id() {
    return this._id;
  }

  /**
   * 主键id
   */
  public MerchantOutletFavoriteVo set_id(long _id) {
    this._id = _id;
    set_idIsSet(true);
    return this;
  }

  public void unset_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___ID_ISSET_ID);
  }

  /** Returns true if field _id is set (has been assigned a value) and false otherwise */
  public boolean isSet_id() {
    return EncodingUtils.testBit(__isset_bitfield, ___ID_ISSET_ID);
  }

  public void set_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___ID_ISSET_ID, value);
  }

  public int getStoreOutletInfoSize() {
    return (this.storeOutletInfo == null) ? 0 : this.storeOutletInfo.size();
  }

  public java.util.Iterator<StoreOutletInfoVo> getStoreOutletInfoIterator() {
    return (this.storeOutletInfo == null) ? null : this.storeOutletInfo.iterator();
  }

  public void addToStoreOutletInfo(StoreOutletInfoVo elem) {
    if (this.storeOutletInfo == null) {
      this.storeOutletInfo = new ArrayList<StoreOutletInfoVo>();
    }
    this.storeOutletInfo.add(elem);
  }

  /**
   * 门店收藏列表
   */
  public List<StoreOutletInfoVo> getStoreOutletInfo() {
    return this.storeOutletInfo;
  }

  /**
   * 门店收藏列表
   */
  public MerchantOutletFavoriteVo setStoreOutletInfo(List<StoreOutletInfoVo> storeOutletInfo) {
    this.storeOutletInfo = storeOutletInfo;
    return this;
  }

  public void unsetStoreOutletInfo() {
    this.storeOutletInfo = null;
  }

  /** Returns true if field storeOutletInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetStoreOutletInfo() {
    return this.storeOutletInfo != null;
  }

  public void setStoreOutletInfoIsSet(boolean value) {
    if (!value) {
      this.storeOutletInfo = null;
    }
  }

  /**
   * 提货信息
   */
  public DeliverInfoVo getDeliverInfo() {
    return this.deliverInfo;
  }

  /**
   * 提货信息
   */
  public MerchantOutletFavoriteVo setDeliverInfo(DeliverInfoVo deliverInfo) {
    this.deliverInfo = deliverInfo;
    return this;
  }

  public void unsetDeliverInfo() {
    this.deliverInfo = null;
  }

  /** Returns true if field deliverInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliverInfo() {
    return this.deliverInfo != null;
  }

  public void setDeliverInfoIsSet(boolean value) {
    if (!value) {
      this.deliverInfo = null;
    }
  }

  public int getRecvInfoSize() {
    return (this.recvInfo == null) ? 0 : this.recvInfo.size();
  }

  public java.util.Iterator<RecvInfoVo> getRecvInfoIterator() {
    return (this.recvInfo == null) ? null : this.recvInfo.iterator();
  }

  public void addToRecvInfo(RecvInfoVo elem) {
    if (this.recvInfo == null) {
      this.recvInfo = new ArrayList<RecvInfoVo>();
    }
    this.recvInfo.add(elem);
  }

  /**
   * 收货信息列表
   */
  public List<RecvInfoVo> getRecvInfo() {
    return this.recvInfo;
  }

  /**
   * 收货信息列表
   */
  public MerchantOutletFavoriteVo setRecvInfo(List<RecvInfoVo> recvInfo) {
    this.recvInfo = recvInfo;
    return this;
  }

  public void unsetRecvInfo() {
    this.recvInfo = null;
  }

  /** Returns true if field recvInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetRecvInfo() {
    return this.recvInfo != null;
  }

  public void setRecvInfoIsSet(boolean value) {
    if (!value) {
      this.recvInfo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case _ID:
      if (value == null) {
        unset_id();
      } else {
        set_id((Long)value);
      }
      break;

    case STORE_OUTLET_INFO:
      if (value == null) {
        unsetStoreOutletInfo();
      } else {
        setStoreOutletInfo((List<StoreOutletInfoVo>)value);
      }
      break;

    case DELIVER_INFO:
      if (value == null) {
        unsetDeliverInfo();
      } else {
        setDeliverInfo((DeliverInfoVo)value);
      }
      break;

    case RECV_INFO:
      if (value == null) {
        unsetRecvInfo();
      } else {
        setRecvInfo((List<RecvInfoVo>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case _ID:
      return Long.valueOf(get_id());

    case STORE_OUTLET_INFO:
      return getStoreOutletInfo();

    case DELIVER_INFO:
      return getDeliverInfo();

    case RECV_INFO:
      return getRecvInfo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case _ID:
      return isSet_id();
    case STORE_OUTLET_INFO:
      return isSetStoreOutletInfo();
    case DELIVER_INFO:
      return isSetDeliverInfo();
    case RECV_INFO:
      return isSetRecvInfo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantOutletFavoriteVo)
      return this.equals((MerchantOutletFavoriteVo)that);
    return false;
  }

  public boolean equals(MerchantOutletFavoriteVo that) {
    if (that == null)
      return false;

    boolean this_present__id = true;
    boolean that_present__id = true;
    if (this_present__id || that_present__id) {
      if (!(this_present__id && that_present__id))
        return false;
      if (this._id != that._id)
        return false;
    }

    boolean this_present_storeOutletInfo = true && this.isSetStoreOutletInfo();
    boolean that_present_storeOutletInfo = true && that.isSetStoreOutletInfo();
    if (this_present_storeOutletInfo || that_present_storeOutletInfo) {
      if (!(this_present_storeOutletInfo && that_present_storeOutletInfo))
        return false;
      if (!this.storeOutletInfo.equals(that.storeOutletInfo))
        return false;
    }

    boolean this_present_deliverInfo = true && this.isSetDeliverInfo();
    boolean that_present_deliverInfo = true && that.isSetDeliverInfo();
    if (this_present_deliverInfo || that_present_deliverInfo) {
      if (!(this_present_deliverInfo && that_present_deliverInfo))
        return false;
      if (!this.deliverInfo.equals(that.deliverInfo))
        return false;
    }

    boolean this_present_recvInfo = true && this.isSetRecvInfo();
    boolean that_present_recvInfo = true && that.isSetRecvInfo();
    if (this_present_recvInfo || that_present_recvInfo) {
      if (!(this_present_recvInfo && that_present_recvInfo))
        return false;
      if (!this.recvInfo.equals(that.recvInfo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present__id = true;
    list.add(present__id);
    if (present__id)
      list.add(_id);

    boolean present_storeOutletInfo = true && (isSetStoreOutletInfo());
    list.add(present_storeOutletInfo);
    if (present_storeOutletInfo)
      list.add(storeOutletInfo);

    boolean present_deliverInfo = true && (isSetDeliverInfo());
    list.add(present_deliverInfo);
    if (present_deliverInfo)
      list.add(deliverInfo);

    boolean present_recvInfo = true && (isSetRecvInfo());
    list.add(present_recvInfo);
    if (present_recvInfo)
      list.add(recvInfo);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantOutletFavoriteVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSet_id()).compareTo(other.isSet_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._id, other._id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStoreOutletInfo()).compareTo(other.isSetStoreOutletInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStoreOutletInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storeOutletInfo, other.storeOutletInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliverInfo()).compareTo(other.isSetDeliverInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliverInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliverInfo, other.deliverInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecvInfo()).compareTo(other.isSetRecvInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecvInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recvInfo, other.recvInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantOutletFavoriteVo(");
    boolean first = true;

    sb.append("_id:");
    sb.append(this._id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("storeOutletInfo:");
    if (this.storeOutletInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.storeOutletInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliverInfo:");
    if (this.deliverInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.deliverInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recvInfo:");
    if (this.recvInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.recvInfo);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (deliverInfo != null) {
      deliverInfo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantOutletFavoriteVoStandardSchemeFactory implements SchemeFactory {
    public MerchantOutletFavoriteVoStandardScheme getScheme() {
      return new MerchantOutletFavoriteVoStandardScheme();
    }
  }

  private static class MerchantOutletFavoriteVoStandardScheme extends StandardScheme<MerchantOutletFavoriteVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantOutletFavoriteVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._id = iprot.readI64();
              struct.set_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STORE_OUTLET_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.storeOutletInfo = new ArrayList<StoreOutletInfoVo>(_list0.size);
                StoreOutletInfoVo _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new StoreOutletInfoVo();
                  _elem1.read(iprot);
                  struct.storeOutletInfo.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setStoreOutletInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DELIVER_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.deliverInfo = new DeliverInfoVo();
              struct.deliverInfo.read(iprot);
              struct.setDeliverInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RECV_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.recvInfo = new ArrayList<RecvInfoVo>(_list3.size);
                RecvInfoVo _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = new RecvInfoVo();
                  _elem4.read(iprot);
                  struct.recvInfo.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setRecvInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantOutletFavoriteVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(_ID_FIELD_DESC);
      oprot.writeI64(struct._id);
      oprot.writeFieldEnd();
      if (struct.storeOutletInfo != null) {
        oprot.writeFieldBegin(STORE_OUTLET_INFO_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.storeOutletInfo.size()));
          for (StoreOutletInfoVo _iter6 : struct.storeOutletInfo)
          {
            _iter6.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.deliverInfo != null) {
        oprot.writeFieldBegin(DELIVER_INFO_FIELD_DESC);
        struct.deliverInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.recvInfo != null) {
        oprot.writeFieldBegin(RECV_INFO_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.recvInfo.size()));
          for (RecvInfoVo _iter7 : struct.recvInfo)
          {
            _iter7.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantOutletFavoriteVoTupleSchemeFactory implements SchemeFactory {
    public MerchantOutletFavoriteVoTupleScheme getScheme() {
      return new MerchantOutletFavoriteVoTupleScheme();
    }
  }

  private static class MerchantOutletFavoriteVoTupleScheme extends TupleScheme<MerchantOutletFavoriteVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantOutletFavoriteVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSet_id()) {
        optionals.set(0);
      }
      if (struct.isSetStoreOutletInfo()) {
        optionals.set(1);
      }
      if (struct.isSetDeliverInfo()) {
        optionals.set(2);
      }
      if (struct.isSetRecvInfo()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSet_id()) {
        oprot.writeI64(struct._id);
      }
      if (struct.isSetStoreOutletInfo()) {
        {
          oprot.writeI32(struct.storeOutletInfo.size());
          for (StoreOutletInfoVo _iter8 : struct.storeOutletInfo)
          {
            _iter8.write(oprot);
          }
        }
      }
      if (struct.isSetDeliverInfo()) {
        struct.deliverInfo.write(oprot);
      }
      if (struct.isSetRecvInfo()) {
        {
          oprot.writeI32(struct.recvInfo.size());
          for (RecvInfoVo _iter9 : struct.recvInfo)
          {
            _iter9.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantOutletFavoriteVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct._id = iprot.readI64();
        struct.set_idIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.storeOutletInfo = new ArrayList<StoreOutletInfoVo>(_list10.size);
          StoreOutletInfoVo _elem11;
          for (int _i12 = 0; _i12 < _list10.size; ++_i12)
          {
            _elem11 = new StoreOutletInfoVo();
            _elem11.read(iprot);
            struct.storeOutletInfo.add(_elem11);
          }
        }
        struct.setStoreOutletInfoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.deliverInfo = new DeliverInfoVo();
        struct.deliverInfo.read(iprot);
        struct.setDeliverInfoIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.recvInfo = new ArrayList<RecvInfoVo>(_list13.size);
          RecvInfoVo _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = new RecvInfoVo();
            _elem14.read(iprot);
            struct.recvInfo.add(_elem14);
          }
        }
        struct.setRecvInfoIsSet(true);
      }
    }
  }

}

