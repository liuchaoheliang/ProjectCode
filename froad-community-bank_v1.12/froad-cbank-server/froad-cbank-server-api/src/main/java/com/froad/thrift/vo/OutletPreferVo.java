/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 门店惠付信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class OutletPreferVo implements org.apache.thrift.TBase<OutletPreferVo, OutletPreferVo._Fields>, java.io.Serializable, Cloneable, Comparable<OutletPreferVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OutletPreferVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PRO_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("proOrgCode", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CITY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("cityOrgCode", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField COUNTY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("countyOrgCode", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField LICENSE_FIELD_DESC = new org.apache.thrift.protocol.TField("license", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("auditTime", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField AUDIT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditState", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField EDIT_AUDIT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("editAuditState", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField QRCODE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("qrcodeUrl", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField START_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startCreateTime", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField END_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endCreateTime", org.apache.thrift.protocol.TType.I64, (short)18);
  private static final org.apache.thrift.protocol.TField START_AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startAuditTime", org.apache.thrift.protocol.TType.I64, (short)19);
  private static final org.apache.thrift.protocol.TField END_AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endAuditTime", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField AREA_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("areaName", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField DISABLE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("disableStatus", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnable", org.apache.thrift.protocol.TType.BOOL, (short)25);
  private static final org.apache.thrift.protocol.TField IS_DEFAULT_FIELD_DESC = new org.apache.thrift.protocol.TField("isDefault", org.apache.thrift.protocol.TType.BOOL, (short)26);
  private static final org.apache.thrift.protocol.TField TREE_PATH_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("treePathName", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField PREFER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("preferStatus", org.apache.thrift.protocol.TType.BOOL, (short)28);
  private static final org.apache.thrift.protocol.TField DISCOUNT_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("discountRate", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField DISABLE_STATUS_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("disableStatusList", org.apache.thrift.protocol.TType.LIST, (short)30);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OutletPreferVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OutletPreferVoTupleSchemeFactory());
  }

  /**
   * 主键ID
   */
  public long id; // optional
  /**
   * 创建时间
   */
  public long createTime; // optional
  /**
   * 客户端ID
   */
  public String clientId; // optional
  /**
   * 商户ID
   */
  public String merchantId; // optional
  /**
   * 被发展组织机构代码的省级机构
   */
  public String proOrgCode; // optional
  /**
   * 被发展组织机构代码的市级机构
   */
  public String cityOrgCode; // optional
  /**
   * 被发展组织机构代码的区级机构
   */
  public String countyOrgCode; // optional
  /**
   * 被发展组织机构代码
   */
  public String orgCode; // optional
  /**
   * 商户名
   */
  public String merchantName; // optional
  /**
   * 营业执照号码
   */
  public String license; // optional
  /**
   * 门店名称
   */
  public String outletName; // optional
  /**
   * 门店id
   */
  public String outletId; // optional
  /**
   * 审核时间
   */
  public long auditTime; // optional
  /**
   * 审核状态   0=待审核 ,1=审核通过 , 2=审核不通过 , 3=未提交 , 4=审核通过待同步
   */
  public String auditState; // optional
  /**
   * 0-更新审核中1-正常(编辑审核通过)2-审核未通过
   */
  public String editAuditState; // optional
  /**
   * 门店二维码
   */
  public String qrcodeUrl; // optional
  /**
   * 开始创建时间(查询条件使用)
   */
  public long startCreateTime; // optional
  /**
   * 结束创建时间(查询条件使用)
   */
  public long endCreateTime; // optional
  /**
   * 开始审核时间(查询条件使用)
   */
  public long startAuditTime; // optional
  /**
   * 结束审核时间(查询条件使用)
   */
  public long endAuditTime; // optional
  /**
   * 门店地址
   */
  public String address; // optional
  /**
   * 门店地区
   */
  public String areaName; // optional
  /**
   * 所属机构名称
   */
  public String orgName; // optional
  /**
   * 无效状态,0正常;1禁用;2解约
   */
  public String disableStatus; // optional
  /**
   * 是否有效
   */
  public boolean isEnable; // optional
  /**
   * 是否为默认门店
   */
  public boolean isDefault; // optional
  /**
   * 区域树路径
   */
  public String treePathName; // optional
  /**
   * 优惠开通状态 0=无效 ,1=有效
   */
  public boolean preferStatus; // optional
  /**
   * 优惠折扣比
   */
  public String discountRate; // optional
  /**
   * 无效状态 集合
   */
  public List<String> disableStatusList; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键ID
     */
    ID((short)1, "id"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)2, "createTime"),
    /**
     * 客户端ID
     */
    CLIENT_ID((short)3, "clientId"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)4, "merchantId"),
    /**
     * 被发展组织机构代码的省级机构
     */
    PRO_ORG_CODE((short)5, "proOrgCode"),
    /**
     * 被发展组织机构代码的市级机构
     */
    CITY_ORG_CODE((short)6, "cityOrgCode"),
    /**
     * 被发展组织机构代码的区级机构
     */
    COUNTY_ORG_CODE((short)7, "countyOrgCode"),
    /**
     * 被发展组织机构代码
     */
    ORG_CODE((short)8, "orgCode"),
    /**
     * 商户名
     */
    MERCHANT_NAME((short)9, "merchantName"),
    /**
     * 营业执照号码
     */
    LICENSE((short)10, "license"),
    /**
     * 门店名称
     */
    OUTLET_NAME((short)11, "outletName"),
    /**
     * 门店id
     */
    OUTLET_ID((short)12, "outletId"),
    /**
     * 审核时间
     */
    AUDIT_TIME((short)13, "auditTime"),
    /**
     * 审核状态   0=待审核 ,1=审核通过 , 2=审核不通过 , 3=未提交 , 4=审核通过待同步
     */
    AUDIT_STATE((short)14, "auditState"),
    /**
     * 0-更新审核中1-正常(编辑审核通过)2-审核未通过
     */
    EDIT_AUDIT_STATE((short)15, "editAuditState"),
    /**
     * 门店二维码
     */
    QRCODE_URL((short)16, "qrcodeUrl"),
    /**
     * 开始创建时间(查询条件使用)
     */
    START_CREATE_TIME((short)17, "startCreateTime"),
    /**
     * 结束创建时间(查询条件使用)
     */
    END_CREATE_TIME((short)18, "endCreateTime"),
    /**
     * 开始审核时间(查询条件使用)
     */
    START_AUDIT_TIME((short)19, "startAuditTime"),
    /**
     * 结束审核时间(查询条件使用)
     */
    END_AUDIT_TIME((short)20, "endAuditTime"),
    /**
     * 门店地址
     */
    ADDRESS((short)21, "address"),
    /**
     * 门店地区
     */
    AREA_NAME((short)22, "areaName"),
    /**
     * 所属机构名称
     */
    ORG_NAME((short)23, "orgName"),
    /**
     * 无效状态,0正常;1禁用;2解约
     */
    DISABLE_STATUS((short)24, "disableStatus"),
    /**
     * 是否有效
     */
    IS_ENABLE((short)25, "isEnable"),
    /**
     * 是否为默认门店
     */
    IS_DEFAULT((short)26, "isDefault"),
    /**
     * 区域树路径
     */
    TREE_PATH_NAME((short)27, "treePathName"),
    /**
     * 优惠开通状态 0=无效 ,1=有效
     */
    PREFER_STATUS((short)28, "preferStatus"),
    /**
     * 优惠折扣比
     */
    DISCOUNT_RATE((short)29, "discountRate"),
    /**
     * 无效状态 集合
     */
    DISABLE_STATUS_LIST((short)30, "disableStatusList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // CLIENT_ID
          return CLIENT_ID;
        case 4: // MERCHANT_ID
          return MERCHANT_ID;
        case 5: // PRO_ORG_CODE
          return PRO_ORG_CODE;
        case 6: // CITY_ORG_CODE
          return CITY_ORG_CODE;
        case 7: // COUNTY_ORG_CODE
          return COUNTY_ORG_CODE;
        case 8: // ORG_CODE
          return ORG_CODE;
        case 9: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 10: // LICENSE
          return LICENSE;
        case 11: // OUTLET_NAME
          return OUTLET_NAME;
        case 12: // OUTLET_ID
          return OUTLET_ID;
        case 13: // AUDIT_TIME
          return AUDIT_TIME;
        case 14: // AUDIT_STATE
          return AUDIT_STATE;
        case 15: // EDIT_AUDIT_STATE
          return EDIT_AUDIT_STATE;
        case 16: // QRCODE_URL
          return QRCODE_URL;
        case 17: // START_CREATE_TIME
          return START_CREATE_TIME;
        case 18: // END_CREATE_TIME
          return END_CREATE_TIME;
        case 19: // START_AUDIT_TIME
          return START_AUDIT_TIME;
        case 20: // END_AUDIT_TIME
          return END_AUDIT_TIME;
        case 21: // ADDRESS
          return ADDRESS;
        case 22: // AREA_NAME
          return AREA_NAME;
        case 23: // ORG_NAME
          return ORG_NAME;
        case 24: // DISABLE_STATUS
          return DISABLE_STATUS;
        case 25: // IS_ENABLE
          return IS_ENABLE;
        case 26: // IS_DEFAULT
          return IS_DEFAULT;
        case 27: // TREE_PATH_NAME
          return TREE_PATH_NAME;
        case 28: // PREFER_STATUS
          return PREFER_STATUS;
        case 29: // DISCOUNT_RATE
          return DISCOUNT_RATE;
        case 30: // DISABLE_STATUS_LIST
          return DISABLE_STATUS_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __AUDITTIME_ISSET_ID = 2;
  private static final int __STARTCREATETIME_ISSET_ID = 3;
  private static final int __ENDCREATETIME_ISSET_ID = 4;
  private static final int __STARTAUDITTIME_ISSET_ID = 5;
  private static final int __ENDAUDITTIME_ISSET_ID = 6;
  private static final int __ISENABLE_ISSET_ID = 7;
  private static final int __ISDEFAULT_ISSET_ID = 8;
  private static final int __PREFERSTATUS_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CREATE_TIME,_Fields.CLIENT_ID,_Fields.MERCHANT_ID,_Fields.PRO_ORG_CODE,_Fields.CITY_ORG_CODE,_Fields.COUNTY_ORG_CODE,_Fields.ORG_CODE,_Fields.MERCHANT_NAME,_Fields.LICENSE,_Fields.OUTLET_NAME,_Fields.OUTLET_ID,_Fields.AUDIT_TIME,_Fields.AUDIT_STATE,_Fields.EDIT_AUDIT_STATE,_Fields.QRCODE_URL,_Fields.START_CREATE_TIME,_Fields.END_CREATE_TIME,_Fields.START_AUDIT_TIME,_Fields.END_AUDIT_TIME,_Fields.ADDRESS,_Fields.AREA_NAME,_Fields.ORG_NAME,_Fields.DISABLE_STATUS,_Fields.IS_ENABLE,_Fields.IS_DEFAULT,_Fields.TREE_PATH_NAME,_Fields.PREFER_STATUS,_Fields.DISCOUNT_RATE,_Fields.DISABLE_STATUS_LIST};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRO_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("proOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("cityOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNTY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("countyOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LICENSE, new org.apache.thrift.meta_data.FieldMetaData("license", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("auditTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AUDIT_STATE, new org.apache.thrift.meta_data.FieldMetaData("auditState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDIT_AUDIT_STATE, new org.apache.thrift.meta_data.FieldMetaData("editAuditState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QRCODE_URL, new org.apache.thrift.meta_data.FieldMetaData("qrcodeUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("startCreateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("endCreateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.START_AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("startAuditTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("endAuditTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_NAME, new org.apache.thrift.meta_data.FieldMetaData("areaName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISABLE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("disableStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("isEnable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_DEFAULT, new org.apache.thrift.meta_data.FieldMetaData("isDefault", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.TREE_PATH_NAME, new org.apache.thrift.meta_data.FieldMetaData("treePathName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PREFER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("preferStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DISCOUNT_RATE, new org.apache.thrift.meta_data.FieldMetaData("discountRate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISABLE_STATUS_LIST, new org.apache.thrift.meta_data.FieldMetaData("disableStatusList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OutletPreferVo.class, metaDataMap);
  }

  public OutletPreferVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OutletPreferVo(OutletPreferVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.createTime = other.createTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetProOrgCode()) {
      this.proOrgCode = other.proOrgCode;
    }
    if (other.isSetCityOrgCode()) {
      this.cityOrgCode = other.cityOrgCode;
    }
    if (other.isSetCountyOrgCode()) {
      this.countyOrgCode = other.countyOrgCode;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetLicense()) {
      this.license = other.license;
    }
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
    this.auditTime = other.auditTime;
    if (other.isSetAuditState()) {
      this.auditState = other.auditState;
    }
    if (other.isSetEditAuditState()) {
      this.editAuditState = other.editAuditState;
    }
    if (other.isSetQrcodeUrl()) {
      this.qrcodeUrl = other.qrcodeUrl;
    }
    this.startCreateTime = other.startCreateTime;
    this.endCreateTime = other.endCreateTime;
    this.startAuditTime = other.startAuditTime;
    this.endAuditTime = other.endAuditTime;
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetAreaName()) {
      this.areaName = other.areaName;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetDisableStatus()) {
      this.disableStatus = other.disableStatus;
    }
    this.isEnable = other.isEnable;
    this.isDefault = other.isDefault;
    if (other.isSetTreePathName()) {
      this.treePathName = other.treePathName;
    }
    this.preferStatus = other.preferStatus;
    if (other.isSetDiscountRate()) {
      this.discountRate = other.discountRate;
    }
    if (other.isSetDisableStatusList()) {
      List<String> __this__disableStatusList = new ArrayList<String>(other.disableStatusList);
      this.disableStatusList = __this__disableStatusList;
    }
  }

  public OutletPreferVo deepCopy() {
    return new OutletPreferVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.clientId = null;
    this.merchantId = null;
    this.proOrgCode = null;
    this.cityOrgCode = null;
    this.countyOrgCode = null;
    this.orgCode = null;
    this.merchantName = null;
    this.license = null;
    this.outletName = null;
    this.outletId = null;
    setAuditTimeIsSet(false);
    this.auditTime = 0;
    this.auditState = null;
    this.editAuditState = null;
    this.qrcodeUrl = null;
    setStartCreateTimeIsSet(false);
    this.startCreateTime = 0;
    setEndCreateTimeIsSet(false);
    this.endCreateTime = 0;
    setStartAuditTimeIsSet(false);
    this.startAuditTime = 0;
    setEndAuditTimeIsSet(false);
    this.endAuditTime = 0;
    this.address = null;
    this.areaName = null;
    this.orgName = null;
    this.disableStatus = null;
    setIsEnableIsSet(false);
    this.isEnable = false;
    setIsDefaultIsSet(false);
    this.isDefault = false;
    this.treePathName = null;
    setPreferStatusIsSet(false);
    this.preferStatus = false;
    this.discountRate = null;
    this.disableStatusList = null;
  }

  /**
   * 主键ID
   */
  public long getId() {
    return this.id;
  }

  /**
   * 主键ID
   */
  public OutletPreferVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public OutletPreferVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public OutletPreferVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public OutletPreferVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 被发展组织机构代码的省级机构
   */
  public String getProOrgCode() {
    return this.proOrgCode;
  }

  /**
   * 被发展组织机构代码的省级机构
   */
  public OutletPreferVo setProOrgCode(String proOrgCode) {
    this.proOrgCode = proOrgCode;
    return this;
  }

  public void unsetProOrgCode() {
    this.proOrgCode = null;
  }

  /** Returns true if field proOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetProOrgCode() {
    return this.proOrgCode != null;
  }

  public void setProOrgCodeIsSet(boolean value) {
    if (!value) {
      this.proOrgCode = null;
    }
  }

  /**
   * 被发展组织机构代码的市级机构
   */
  public String getCityOrgCode() {
    return this.cityOrgCode;
  }

  /**
   * 被发展组织机构代码的市级机构
   */
  public OutletPreferVo setCityOrgCode(String cityOrgCode) {
    this.cityOrgCode = cityOrgCode;
    return this;
  }

  public void unsetCityOrgCode() {
    this.cityOrgCode = null;
  }

  /** Returns true if field cityOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCityOrgCode() {
    return this.cityOrgCode != null;
  }

  public void setCityOrgCodeIsSet(boolean value) {
    if (!value) {
      this.cityOrgCode = null;
    }
  }

  /**
   * 被发展组织机构代码的区级机构
   */
  public String getCountyOrgCode() {
    return this.countyOrgCode;
  }

  /**
   * 被发展组织机构代码的区级机构
   */
  public OutletPreferVo setCountyOrgCode(String countyOrgCode) {
    this.countyOrgCode = countyOrgCode;
    return this;
  }

  public void unsetCountyOrgCode() {
    this.countyOrgCode = null;
  }

  /** Returns true if field countyOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCountyOrgCode() {
    return this.countyOrgCode != null;
  }

  public void setCountyOrgCodeIsSet(boolean value) {
    if (!value) {
      this.countyOrgCode = null;
    }
  }

  /**
   * 被发展组织机构代码
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 被发展组织机构代码
   */
  public OutletPreferVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 商户名
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名
   */
  public OutletPreferVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 营业执照号码
   */
  public String getLicense() {
    return this.license;
  }

  /**
   * 营业执照号码
   */
  public OutletPreferVo setLicense(String license) {
    this.license = license;
    return this;
  }

  public void unsetLicense() {
    this.license = null;
  }

  /** Returns true if field license is set (has been assigned a value) and false otherwise */
  public boolean isSetLicense() {
    return this.license != null;
  }

  public void setLicenseIsSet(boolean value) {
    if (!value) {
      this.license = null;
    }
  }

  /**
   * 门店名称
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 门店名称
   */
  public OutletPreferVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 门店id
   */
  public String getOutletId() {
    return this.outletId;
  }

  /**
   * 门店id
   */
  public OutletPreferVo setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  /**
   * 审核时间
   */
  public long getAuditTime() {
    return this.auditTime;
  }

  /**
   * 审核时间
   */
  public OutletPreferVo setAuditTime(long auditTime) {
    this.auditTime = auditTime;
    setAuditTimeIsSet(true);
    return this;
  }

  public void unsetAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  /** Returns true if field auditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  public void setAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AUDITTIME_ISSET_ID, value);
  }

  /**
   * 审核状态   0=待审核 ,1=审核通过 , 2=审核不通过 , 3=未提交 , 4=审核通过待同步
   */
  public String getAuditState() {
    return this.auditState;
  }

  /**
   * 审核状态   0=待审核 ,1=审核通过 , 2=审核不通过 , 3=未提交 , 4=审核通过待同步
   */
  public OutletPreferVo setAuditState(String auditState) {
    this.auditState = auditState;
    return this;
  }

  public void unsetAuditState() {
    this.auditState = null;
  }

  /** Returns true if field auditState is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditState() {
    return this.auditState != null;
  }

  public void setAuditStateIsSet(boolean value) {
    if (!value) {
      this.auditState = null;
    }
  }

  /**
   * 0-更新审核中1-正常(编辑审核通过)2-审核未通过
   */
  public String getEditAuditState() {
    return this.editAuditState;
  }

  /**
   * 0-更新审核中1-正常(编辑审核通过)2-审核未通过
   */
  public OutletPreferVo setEditAuditState(String editAuditState) {
    this.editAuditState = editAuditState;
    return this;
  }

  public void unsetEditAuditState() {
    this.editAuditState = null;
  }

  /** Returns true if field editAuditState is set (has been assigned a value) and false otherwise */
  public boolean isSetEditAuditState() {
    return this.editAuditState != null;
  }

  public void setEditAuditStateIsSet(boolean value) {
    if (!value) {
      this.editAuditState = null;
    }
  }

  /**
   * 门店二维码
   */
  public String getQrcodeUrl() {
    return this.qrcodeUrl;
  }

  /**
   * 门店二维码
   */
  public OutletPreferVo setQrcodeUrl(String qrcodeUrl) {
    this.qrcodeUrl = qrcodeUrl;
    return this;
  }

  public void unsetQrcodeUrl() {
    this.qrcodeUrl = null;
  }

  /** Returns true if field qrcodeUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetQrcodeUrl() {
    return this.qrcodeUrl != null;
  }

  public void setQrcodeUrlIsSet(boolean value) {
    if (!value) {
      this.qrcodeUrl = null;
    }
  }

  /**
   * 开始创建时间(查询条件使用)
   */
  public long getStartCreateTime() {
    return this.startCreateTime;
  }

  /**
   * 开始创建时间(查询条件使用)
   */
  public OutletPreferVo setStartCreateTime(long startCreateTime) {
    this.startCreateTime = startCreateTime;
    setStartCreateTimeIsSet(true);
    return this;
  }

  public void unsetStartCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID);
  }

  /** Returns true if field startCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID);
  }

  public void setStartCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTCREATETIME_ISSET_ID, value);
  }

  /**
   * 结束创建时间(查询条件使用)
   */
  public long getEndCreateTime() {
    return this.endCreateTime;
  }

  /**
   * 结束创建时间(查询条件使用)
   */
  public OutletPreferVo setEndCreateTime(long endCreateTime) {
    this.endCreateTime = endCreateTime;
    setEndCreateTimeIsSet(true);
    return this;
  }

  public void unsetEndCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID);
  }

  /** Returns true if field endCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID);
  }

  public void setEndCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDCREATETIME_ISSET_ID, value);
  }

  /**
   * 开始审核时间(查询条件使用)
   */
  public long getStartAuditTime() {
    return this.startAuditTime;
  }

  /**
   * 开始审核时间(查询条件使用)
   */
  public OutletPreferVo setStartAuditTime(long startAuditTime) {
    this.startAuditTime = startAuditTime;
    setStartAuditTimeIsSet(true);
    return this;
  }

  public void unsetStartAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTAUDITTIME_ISSET_ID);
  }

  /** Returns true if field startAuditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTAUDITTIME_ISSET_ID);
  }

  public void setStartAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTAUDITTIME_ISSET_ID, value);
  }

  /**
   * 结束审核时间(查询条件使用)
   */
  public long getEndAuditTime() {
    return this.endAuditTime;
  }

  /**
   * 结束审核时间(查询条件使用)
   */
  public OutletPreferVo setEndAuditTime(long endAuditTime) {
    this.endAuditTime = endAuditTime;
    setEndAuditTimeIsSet(true);
    return this;
  }

  public void unsetEndAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDAUDITTIME_ISSET_ID);
  }

  /** Returns true if field endAuditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDAUDITTIME_ISSET_ID);
  }

  public void setEndAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDAUDITTIME_ISSET_ID, value);
  }

  /**
   * 门店地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 门店地址
   */
  public OutletPreferVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 门店地区
   */
  public String getAreaName() {
    return this.areaName;
  }

  /**
   * 门店地区
   */
  public OutletPreferVo setAreaName(String areaName) {
    this.areaName = areaName;
    return this;
  }

  public void unsetAreaName() {
    this.areaName = null;
  }

  /** Returns true if field areaName is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaName() {
    return this.areaName != null;
  }

  public void setAreaNameIsSet(boolean value) {
    if (!value) {
      this.areaName = null;
    }
  }

  /**
   * 所属机构名称
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 所属机构名称
   */
  public OutletPreferVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 无效状态,0正常;1禁用;2解约
   */
  public String getDisableStatus() {
    return this.disableStatus;
  }

  /**
   * 无效状态,0正常;1禁用;2解约
   */
  public OutletPreferVo setDisableStatus(String disableStatus) {
    this.disableStatus = disableStatus;
    return this;
  }

  public void unsetDisableStatus() {
    this.disableStatus = null;
  }

  /** Returns true if field disableStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetDisableStatus() {
    return this.disableStatus != null;
  }

  public void setDisableStatusIsSet(boolean value) {
    if (!value) {
      this.disableStatus = null;
    }
  }

  /**
   * 是否有效
   */
  public boolean isIsEnable() {
    return this.isEnable;
  }

  /**
   * 是否有效
   */
  public OutletPreferVo setIsEnable(boolean isEnable) {
    this.isEnable = isEnable;
    setIsEnableIsSet(true);
    return this;
  }

  public void unsetIsEnable() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  /** Returns true if field isEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnable() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  public void setIsEnableIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLE_ISSET_ID, value);
  }

  /**
   * 是否为默认门店
   */
  public boolean isIsDefault() {
    return this.isDefault;
  }

  /**
   * 是否为默认门店
   */
  public OutletPreferVo setIsDefault(boolean isDefault) {
    this.isDefault = isDefault;
    setIsDefaultIsSet(true);
    return this;
  }

  public void unsetIsDefault() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISDEFAULT_ISSET_ID);
  }

  /** Returns true if field isDefault is set (has been assigned a value) and false otherwise */
  public boolean isSetIsDefault() {
    return EncodingUtils.testBit(__isset_bitfield, __ISDEFAULT_ISSET_ID);
  }

  public void setIsDefaultIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISDEFAULT_ISSET_ID, value);
  }

  /**
   * 区域树路径
   */
  public String getTreePathName() {
    return this.treePathName;
  }

  /**
   * 区域树路径
   */
  public OutletPreferVo setTreePathName(String treePathName) {
    this.treePathName = treePathName;
    return this;
  }

  public void unsetTreePathName() {
    this.treePathName = null;
  }

  /** Returns true if field treePathName is set (has been assigned a value) and false otherwise */
  public boolean isSetTreePathName() {
    return this.treePathName != null;
  }

  public void setTreePathNameIsSet(boolean value) {
    if (!value) {
      this.treePathName = null;
    }
  }

  /**
   * 优惠开通状态 0=无效 ,1=有效
   */
  public boolean isPreferStatus() {
    return this.preferStatus;
  }

  /**
   * 优惠开通状态 0=无效 ,1=有效
   */
  public OutletPreferVo setPreferStatus(boolean preferStatus) {
    this.preferStatus = preferStatus;
    setPreferStatusIsSet(true);
    return this;
  }

  public void unsetPreferStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PREFERSTATUS_ISSET_ID);
  }

  /** Returns true if field preferStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetPreferStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __PREFERSTATUS_ISSET_ID);
  }

  public void setPreferStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PREFERSTATUS_ISSET_ID, value);
  }

  /**
   * 优惠折扣比
   */
  public String getDiscountRate() {
    return this.discountRate;
  }

  /**
   * 优惠折扣比
   */
  public OutletPreferVo setDiscountRate(String discountRate) {
    this.discountRate = discountRate;
    return this;
  }

  public void unsetDiscountRate() {
    this.discountRate = null;
  }

  /** Returns true if field discountRate is set (has been assigned a value) and false otherwise */
  public boolean isSetDiscountRate() {
    return this.discountRate != null;
  }

  public void setDiscountRateIsSet(boolean value) {
    if (!value) {
      this.discountRate = null;
    }
  }

  public int getDisableStatusListSize() {
    return (this.disableStatusList == null) ? 0 : this.disableStatusList.size();
  }

  public java.util.Iterator<String> getDisableStatusListIterator() {
    return (this.disableStatusList == null) ? null : this.disableStatusList.iterator();
  }

  public void addToDisableStatusList(String elem) {
    if (this.disableStatusList == null) {
      this.disableStatusList = new ArrayList<String>();
    }
    this.disableStatusList.add(elem);
  }

  /**
   * 无效状态 集合
   */
  public List<String> getDisableStatusList() {
    return this.disableStatusList;
  }

  /**
   * 无效状态 集合
   */
  public OutletPreferVo setDisableStatusList(List<String> disableStatusList) {
    this.disableStatusList = disableStatusList;
    return this;
  }

  public void unsetDisableStatusList() {
    this.disableStatusList = null;
  }

  /** Returns true if field disableStatusList is set (has been assigned a value) and false otherwise */
  public boolean isSetDisableStatusList() {
    return this.disableStatusList != null;
  }

  public void setDisableStatusListIsSet(boolean value) {
    if (!value) {
      this.disableStatusList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case PRO_ORG_CODE:
      if (value == null) {
        unsetProOrgCode();
      } else {
        setProOrgCode((String)value);
      }
      break;

    case CITY_ORG_CODE:
      if (value == null) {
        unsetCityOrgCode();
      } else {
        setCityOrgCode((String)value);
      }
      break;

    case COUNTY_ORG_CODE:
      if (value == null) {
        unsetCountyOrgCode();
      } else {
        setCountyOrgCode((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case LICENSE:
      if (value == null) {
        unsetLicense();
      } else {
        setLicense((String)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    case AUDIT_TIME:
      if (value == null) {
        unsetAuditTime();
      } else {
        setAuditTime((Long)value);
      }
      break;

    case AUDIT_STATE:
      if (value == null) {
        unsetAuditState();
      } else {
        setAuditState((String)value);
      }
      break;

    case EDIT_AUDIT_STATE:
      if (value == null) {
        unsetEditAuditState();
      } else {
        setEditAuditState((String)value);
      }
      break;

    case QRCODE_URL:
      if (value == null) {
        unsetQrcodeUrl();
      } else {
        setQrcodeUrl((String)value);
      }
      break;

    case START_CREATE_TIME:
      if (value == null) {
        unsetStartCreateTime();
      } else {
        setStartCreateTime((Long)value);
      }
      break;

    case END_CREATE_TIME:
      if (value == null) {
        unsetEndCreateTime();
      } else {
        setEndCreateTime((Long)value);
      }
      break;

    case START_AUDIT_TIME:
      if (value == null) {
        unsetStartAuditTime();
      } else {
        setStartAuditTime((Long)value);
      }
      break;

    case END_AUDIT_TIME:
      if (value == null) {
        unsetEndAuditTime();
      } else {
        setEndAuditTime((Long)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case AREA_NAME:
      if (value == null) {
        unsetAreaName();
      } else {
        setAreaName((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case DISABLE_STATUS:
      if (value == null) {
        unsetDisableStatus();
      } else {
        setDisableStatus((String)value);
      }
      break;

    case IS_ENABLE:
      if (value == null) {
        unsetIsEnable();
      } else {
        setIsEnable((Boolean)value);
      }
      break;

    case IS_DEFAULT:
      if (value == null) {
        unsetIsDefault();
      } else {
        setIsDefault((Boolean)value);
      }
      break;

    case TREE_PATH_NAME:
      if (value == null) {
        unsetTreePathName();
      } else {
        setTreePathName((String)value);
      }
      break;

    case PREFER_STATUS:
      if (value == null) {
        unsetPreferStatus();
      } else {
        setPreferStatus((Boolean)value);
      }
      break;

    case DISCOUNT_RATE:
      if (value == null) {
        unsetDiscountRate();
      } else {
        setDiscountRate((String)value);
      }
      break;

    case DISABLE_STATUS_LIST:
      if (value == null) {
        unsetDisableStatusList();
      } else {
        setDisableStatusList((List<String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case CLIENT_ID:
      return getClientId();

    case MERCHANT_ID:
      return getMerchantId();

    case PRO_ORG_CODE:
      return getProOrgCode();

    case CITY_ORG_CODE:
      return getCityOrgCode();

    case COUNTY_ORG_CODE:
      return getCountyOrgCode();

    case ORG_CODE:
      return getOrgCode();

    case MERCHANT_NAME:
      return getMerchantName();

    case LICENSE:
      return getLicense();

    case OUTLET_NAME:
      return getOutletName();

    case OUTLET_ID:
      return getOutletId();

    case AUDIT_TIME:
      return Long.valueOf(getAuditTime());

    case AUDIT_STATE:
      return getAuditState();

    case EDIT_AUDIT_STATE:
      return getEditAuditState();

    case QRCODE_URL:
      return getQrcodeUrl();

    case START_CREATE_TIME:
      return Long.valueOf(getStartCreateTime());

    case END_CREATE_TIME:
      return Long.valueOf(getEndCreateTime());

    case START_AUDIT_TIME:
      return Long.valueOf(getStartAuditTime());

    case END_AUDIT_TIME:
      return Long.valueOf(getEndAuditTime());

    case ADDRESS:
      return getAddress();

    case AREA_NAME:
      return getAreaName();

    case ORG_NAME:
      return getOrgName();

    case DISABLE_STATUS:
      return getDisableStatus();

    case IS_ENABLE:
      return Boolean.valueOf(isIsEnable());

    case IS_DEFAULT:
      return Boolean.valueOf(isIsDefault());

    case TREE_PATH_NAME:
      return getTreePathName();

    case PREFER_STATUS:
      return Boolean.valueOf(isPreferStatus());

    case DISCOUNT_RATE:
      return getDiscountRate();

    case DISABLE_STATUS_LIST:
      return getDisableStatusList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case CLIENT_ID:
      return isSetClientId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case PRO_ORG_CODE:
      return isSetProOrgCode();
    case CITY_ORG_CODE:
      return isSetCityOrgCode();
    case COUNTY_ORG_CODE:
      return isSetCountyOrgCode();
    case ORG_CODE:
      return isSetOrgCode();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case LICENSE:
      return isSetLicense();
    case OUTLET_NAME:
      return isSetOutletName();
    case OUTLET_ID:
      return isSetOutletId();
    case AUDIT_TIME:
      return isSetAuditTime();
    case AUDIT_STATE:
      return isSetAuditState();
    case EDIT_AUDIT_STATE:
      return isSetEditAuditState();
    case QRCODE_URL:
      return isSetQrcodeUrl();
    case START_CREATE_TIME:
      return isSetStartCreateTime();
    case END_CREATE_TIME:
      return isSetEndCreateTime();
    case START_AUDIT_TIME:
      return isSetStartAuditTime();
    case END_AUDIT_TIME:
      return isSetEndAuditTime();
    case ADDRESS:
      return isSetAddress();
    case AREA_NAME:
      return isSetAreaName();
    case ORG_NAME:
      return isSetOrgName();
    case DISABLE_STATUS:
      return isSetDisableStatus();
    case IS_ENABLE:
      return isSetIsEnable();
    case IS_DEFAULT:
      return isSetIsDefault();
    case TREE_PATH_NAME:
      return isSetTreePathName();
    case PREFER_STATUS:
      return isSetPreferStatus();
    case DISCOUNT_RATE:
      return isSetDiscountRate();
    case DISABLE_STATUS_LIST:
      return isSetDisableStatusList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OutletPreferVo)
      return this.equals((OutletPreferVo)that);
    return false;
  }

  public boolean equals(OutletPreferVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_proOrgCode = true && this.isSetProOrgCode();
    boolean that_present_proOrgCode = true && that.isSetProOrgCode();
    if (this_present_proOrgCode || that_present_proOrgCode) {
      if (!(this_present_proOrgCode && that_present_proOrgCode))
        return false;
      if (!this.proOrgCode.equals(that.proOrgCode))
        return false;
    }

    boolean this_present_cityOrgCode = true && this.isSetCityOrgCode();
    boolean that_present_cityOrgCode = true && that.isSetCityOrgCode();
    if (this_present_cityOrgCode || that_present_cityOrgCode) {
      if (!(this_present_cityOrgCode && that_present_cityOrgCode))
        return false;
      if (!this.cityOrgCode.equals(that.cityOrgCode))
        return false;
    }

    boolean this_present_countyOrgCode = true && this.isSetCountyOrgCode();
    boolean that_present_countyOrgCode = true && that.isSetCountyOrgCode();
    if (this_present_countyOrgCode || that_present_countyOrgCode) {
      if (!(this_present_countyOrgCode && that_present_countyOrgCode))
        return false;
      if (!this.countyOrgCode.equals(that.countyOrgCode))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_license = true && this.isSetLicense();
    boolean that_present_license = true && that.isSetLicense();
    if (this_present_license || that_present_license) {
      if (!(this_present_license && that_present_license))
        return false;
      if (!this.license.equals(that.license))
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    boolean this_present_auditTime = true && this.isSetAuditTime();
    boolean that_present_auditTime = true && that.isSetAuditTime();
    if (this_present_auditTime || that_present_auditTime) {
      if (!(this_present_auditTime && that_present_auditTime))
        return false;
      if (this.auditTime != that.auditTime)
        return false;
    }

    boolean this_present_auditState = true && this.isSetAuditState();
    boolean that_present_auditState = true && that.isSetAuditState();
    if (this_present_auditState || that_present_auditState) {
      if (!(this_present_auditState && that_present_auditState))
        return false;
      if (!this.auditState.equals(that.auditState))
        return false;
    }

    boolean this_present_editAuditState = true && this.isSetEditAuditState();
    boolean that_present_editAuditState = true && that.isSetEditAuditState();
    if (this_present_editAuditState || that_present_editAuditState) {
      if (!(this_present_editAuditState && that_present_editAuditState))
        return false;
      if (!this.editAuditState.equals(that.editAuditState))
        return false;
    }

    boolean this_present_qrcodeUrl = true && this.isSetQrcodeUrl();
    boolean that_present_qrcodeUrl = true && that.isSetQrcodeUrl();
    if (this_present_qrcodeUrl || that_present_qrcodeUrl) {
      if (!(this_present_qrcodeUrl && that_present_qrcodeUrl))
        return false;
      if (!this.qrcodeUrl.equals(that.qrcodeUrl))
        return false;
    }

    boolean this_present_startCreateTime = true && this.isSetStartCreateTime();
    boolean that_present_startCreateTime = true && that.isSetStartCreateTime();
    if (this_present_startCreateTime || that_present_startCreateTime) {
      if (!(this_present_startCreateTime && that_present_startCreateTime))
        return false;
      if (this.startCreateTime != that.startCreateTime)
        return false;
    }

    boolean this_present_endCreateTime = true && this.isSetEndCreateTime();
    boolean that_present_endCreateTime = true && that.isSetEndCreateTime();
    if (this_present_endCreateTime || that_present_endCreateTime) {
      if (!(this_present_endCreateTime && that_present_endCreateTime))
        return false;
      if (this.endCreateTime != that.endCreateTime)
        return false;
    }

    boolean this_present_startAuditTime = true && this.isSetStartAuditTime();
    boolean that_present_startAuditTime = true && that.isSetStartAuditTime();
    if (this_present_startAuditTime || that_present_startAuditTime) {
      if (!(this_present_startAuditTime && that_present_startAuditTime))
        return false;
      if (this.startAuditTime != that.startAuditTime)
        return false;
    }

    boolean this_present_endAuditTime = true && this.isSetEndAuditTime();
    boolean that_present_endAuditTime = true && that.isSetEndAuditTime();
    if (this_present_endAuditTime || that_present_endAuditTime) {
      if (!(this_present_endAuditTime && that_present_endAuditTime))
        return false;
      if (this.endAuditTime != that.endAuditTime)
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_areaName = true && this.isSetAreaName();
    boolean that_present_areaName = true && that.isSetAreaName();
    if (this_present_areaName || that_present_areaName) {
      if (!(this_present_areaName && that_present_areaName))
        return false;
      if (!this.areaName.equals(that.areaName))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_disableStatus = true && this.isSetDisableStatus();
    boolean that_present_disableStatus = true && that.isSetDisableStatus();
    if (this_present_disableStatus || that_present_disableStatus) {
      if (!(this_present_disableStatus && that_present_disableStatus))
        return false;
      if (!this.disableStatus.equals(that.disableStatus))
        return false;
    }

    boolean this_present_isEnable = true && this.isSetIsEnable();
    boolean that_present_isEnable = true && that.isSetIsEnable();
    if (this_present_isEnable || that_present_isEnable) {
      if (!(this_present_isEnable && that_present_isEnable))
        return false;
      if (this.isEnable != that.isEnable)
        return false;
    }

    boolean this_present_isDefault = true && this.isSetIsDefault();
    boolean that_present_isDefault = true && that.isSetIsDefault();
    if (this_present_isDefault || that_present_isDefault) {
      if (!(this_present_isDefault && that_present_isDefault))
        return false;
      if (this.isDefault != that.isDefault)
        return false;
    }

    boolean this_present_treePathName = true && this.isSetTreePathName();
    boolean that_present_treePathName = true && that.isSetTreePathName();
    if (this_present_treePathName || that_present_treePathName) {
      if (!(this_present_treePathName && that_present_treePathName))
        return false;
      if (!this.treePathName.equals(that.treePathName))
        return false;
    }

    boolean this_present_preferStatus = true && this.isSetPreferStatus();
    boolean that_present_preferStatus = true && that.isSetPreferStatus();
    if (this_present_preferStatus || that_present_preferStatus) {
      if (!(this_present_preferStatus && that_present_preferStatus))
        return false;
      if (this.preferStatus != that.preferStatus)
        return false;
    }

    boolean this_present_discountRate = true && this.isSetDiscountRate();
    boolean that_present_discountRate = true && that.isSetDiscountRate();
    if (this_present_discountRate || that_present_discountRate) {
      if (!(this_present_discountRate && that_present_discountRate))
        return false;
      if (!this.discountRate.equals(that.discountRate))
        return false;
    }

    boolean this_present_disableStatusList = true && this.isSetDisableStatusList();
    boolean that_present_disableStatusList = true && that.isSetDisableStatusList();
    if (this_present_disableStatusList || that_present_disableStatusList) {
      if (!(this_present_disableStatusList && that_present_disableStatusList))
        return false;
      if (!this.disableStatusList.equals(that.disableStatusList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_proOrgCode = true && (isSetProOrgCode());
    list.add(present_proOrgCode);
    if (present_proOrgCode)
      list.add(proOrgCode);

    boolean present_cityOrgCode = true && (isSetCityOrgCode());
    list.add(present_cityOrgCode);
    if (present_cityOrgCode)
      list.add(cityOrgCode);

    boolean present_countyOrgCode = true && (isSetCountyOrgCode());
    list.add(present_countyOrgCode);
    if (present_countyOrgCode)
      list.add(countyOrgCode);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_license = true && (isSetLicense());
    list.add(present_license);
    if (present_license)
      list.add(license);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    boolean present_auditTime = true && (isSetAuditTime());
    list.add(present_auditTime);
    if (present_auditTime)
      list.add(auditTime);

    boolean present_auditState = true && (isSetAuditState());
    list.add(present_auditState);
    if (present_auditState)
      list.add(auditState);

    boolean present_editAuditState = true && (isSetEditAuditState());
    list.add(present_editAuditState);
    if (present_editAuditState)
      list.add(editAuditState);

    boolean present_qrcodeUrl = true && (isSetQrcodeUrl());
    list.add(present_qrcodeUrl);
    if (present_qrcodeUrl)
      list.add(qrcodeUrl);

    boolean present_startCreateTime = true && (isSetStartCreateTime());
    list.add(present_startCreateTime);
    if (present_startCreateTime)
      list.add(startCreateTime);

    boolean present_endCreateTime = true && (isSetEndCreateTime());
    list.add(present_endCreateTime);
    if (present_endCreateTime)
      list.add(endCreateTime);

    boolean present_startAuditTime = true && (isSetStartAuditTime());
    list.add(present_startAuditTime);
    if (present_startAuditTime)
      list.add(startAuditTime);

    boolean present_endAuditTime = true && (isSetEndAuditTime());
    list.add(present_endAuditTime);
    if (present_endAuditTime)
      list.add(endAuditTime);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_areaName = true && (isSetAreaName());
    list.add(present_areaName);
    if (present_areaName)
      list.add(areaName);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_disableStatus = true && (isSetDisableStatus());
    list.add(present_disableStatus);
    if (present_disableStatus)
      list.add(disableStatus);

    boolean present_isEnable = true && (isSetIsEnable());
    list.add(present_isEnable);
    if (present_isEnable)
      list.add(isEnable);

    boolean present_isDefault = true && (isSetIsDefault());
    list.add(present_isDefault);
    if (present_isDefault)
      list.add(isDefault);

    boolean present_treePathName = true && (isSetTreePathName());
    list.add(present_treePathName);
    if (present_treePathName)
      list.add(treePathName);

    boolean present_preferStatus = true && (isSetPreferStatus());
    list.add(present_preferStatus);
    if (present_preferStatus)
      list.add(preferStatus);

    boolean present_discountRate = true && (isSetDiscountRate());
    list.add(present_discountRate);
    if (present_discountRate)
      list.add(discountRate);

    boolean present_disableStatusList = true && (isSetDisableStatusList());
    list.add(present_disableStatusList);
    if (present_disableStatusList)
      list.add(disableStatusList);

    return list.hashCode();
  }

  @Override
  public int compareTo(OutletPreferVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProOrgCode()).compareTo(other.isSetProOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.proOrgCode, other.proOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityOrgCode()).compareTo(other.isSetCityOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cityOrgCode, other.cityOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyOrgCode()).compareTo(other.isSetCountyOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.countyOrgCode, other.countyOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLicense()).compareTo(other.isSetLicense());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLicense()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.license, other.license);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditTime()).compareTo(other.isSetAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditTime, other.auditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditState()).compareTo(other.isSetAuditState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditState, other.auditState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEditAuditState()).compareTo(other.isSetEditAuditState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEditAuditState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.editAuditState, other.editAuditState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQrcodeUrl()).compareTo(other.isSetQrcodeUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQrcodeUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.qrcodeUrl, other.qrcodeUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartCreateTime()).compareTo(other.isSetStartCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startCreateTime, other.startCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndCreateTime()).compareTo(other.isSetEndCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endCreateTime, other.endCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartAuditTime()).compareTo(other.isSetStartAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startAuditTime, other.startAuditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndAuditTime()).compareTo(other.isSetEndAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endAuditTime, other.endAuditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaName()).compareTo(other.isSetAreaName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaName, other.areaName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisableStatus()).compareTo(other.isSetDisableStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisableStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disableStatus, other.disableStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnable()).compareTo(other.isSetIsEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnable, other.isEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsDefault()).compareTo(other.isSetIsDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDefault()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDefault, other.isDefault);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTreePathName()).compareTo(other.isSetTreePathName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTreePathName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.treePathName, other.treePathName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreferStatus()).compareTo(other.isSetPreferStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preferStatus, other.preferStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiscountRate()).compareTo(other.isSetDiscountRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiscountRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.discountRate, other.discountRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisableStatusList()).compareTo(other.isSetDisableStatusList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisableStatusList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disableStatusList, other.disableStatusList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OutletPreferVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetProOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("proOrgCode:");
      if (this.proOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.proOrgCode);
      }
      first = false;
    }
    if (isSetCityOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("cityOrgCode:");
      if (this.cityOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.cityOrgCode);
      }
      first = false;
    }
    if (isSetCountyOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("countyOrgCode:");
      if (this.countyOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.countyOrgCode);
      }
      first = false;
    }
    if (isSetOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
    }
    if (isSetMerchantName()) {
      if (!first) sb.append(", ");
      sb.append("merchantName:");
      if (this.merchantName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantName);
      }
      first = false;
    }
    if (isSetLicense()) {
      if (!first) sb.append(", ");
      sb.append("license:");
      if (this.license == null) {
        sb.append("null");
      } else {
        sb.append(this.license);
      }
      first = false;
    }
    if (isSetOutletName()) {
      if (!first) sb.append(", ");
      sb.append("outletName:");
      if (this.outletName == null) {
        sb.append("null");
      } else {
        sb.append(this.outletName);
      }
      first = false;
    }
    if (isSetOutletId()) {
      if (!first) sb.append(", ");
      sb.append("outletId:");
      if (this.outletId == null) {
        sb.append("null");
      } else {
        sb.append(this.outletId);
      }
      first = false;
    }
    if (isSetAuditTime()) {
      if (!first) sb.append(", ");
      sb.append("auditTime:");
      sb.append(this.auditTime);
      first = false;
    }
    if (isSetAuditState()) {
      if (!first) sb.append(", ");
      sb.append("auditState:");
      if (this.auditState == null) {
        sb.append("null");
      } else {
        sb.append(this.auditState);
      }
      first = false;
    }
    if (isSetEditAuditState()) {
      if (!first) sb.append(", ");
      sb.append("editAuditState:");
      if (this.editAuditState == null) {
        sb.append("null");
      } else {
        sb.append(this.editAuditState);
      }
      first = false;
    }
    if (isSetQrcodeUrl()) {
      if (!first) sb.append(", ");
      sb.append("qrcodeUrl:");
      if (this.qrcodeUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.qrcodeUrl);
      }
      first = false;
    }
    if (isSetStartCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("startCreateTime:");
      sb.append(this.startCreateTime);
      first = false;
    }
    if (isSetEndCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("endCreateTime:");
      sb.append(this.endCreateTime);
      first = false;
    }
    if (isSetStartAuditTime()) {
      if (!first) sb.append(", ");
      sb.append("startAuditTime:");
      sb.append(this.startAuditTime);
      first = false;
    }
    if (isSetEndAuditTime()) {
      if (!first) sb.append(", ");
      sb.append("endAuditTime:");
      sb.append(this.endAuditTime);
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetAreaName()) {
      if (!first) sb.append(", ");
      sb.append("areaName:");
      if (this.areaName == null) {
        sb.append("null");
      } else {
        sb.append(this.areaName);
      }
      first = false;
    }
    if (isSetOrgName()) {
      if (!first) sb.append(", ");
      sb.append("orgName:");
      if (this.orgName == null) {
        sb.append("null");
      } else {
        sb.append(this.orgName);
      }
      first = false;
    }
    if (isSetDisableStatus()) {
      if (!first) sb.append(", ");
      sb.append("disableStatus:");
      if (this.disableStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.disableStatus);
      }
      first = false;
    }
    if (isSetIsEnable()) {
      if (!first) sb.append(", ");
      sb.append("isEnable:");
      sb.append(this.isEnable);
      first = false;
    }
    if (isSetIsDefault()) {
      if (!first) sb.append(", ");
      sb.append("isDefault:");
      sb.append(this.isDefault);
      first = false;
    }
    if (isSetTreePathName()) {
      if (!first) sb.append(", ");
      sb.append("treePathName:");
      if (this.treePathName == null) {
        sb.append("null");
      } else {
        sb.append(this.treePathName);
      }
      first = false;
    }
    if (isSetPreferStatus()) {
      if (!first) sb.append(", ");
      sb.append("preferStatus:");
      sb.append(this.preferStatus);
      first = false;
    }
    if (isSetDiscountRate()) {
      if (!first) sb.append(", ");
      sb.append("discountRate:");
      if (this.discountRate == null) {
        sb.append("null");
      } else {
        sb.append(this.discountRate);
      }
      first = false;
    }
    if (isSetDisableStatusList()) {
      if (!first) sb.append(", ");
      sb.append("disableStatusList:");
      if (this.disableStatusList == null) {
        sb.append("null");
      } else {
        sb.append(this.disableStatusList);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OutletPreferVoStandardSchemeFactory implements SchemeFactory {
    public OutletPreferVoStandardScheme getScheme() {
      return new OutletPreferVoStandardScheme();
    }
  }

  private static class OutletPreferVoStandardScheme extends StandardScheme<OutletPreferVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OutletPreferVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PRO_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.proOrgCode = iprot.readString();
              struct.setProOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CITY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cityOrgCode = iprot.readString();
              struct.setCityOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // COUNTY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.countyOrgCode = iprot.readString();
              struct.setCountyOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // LICENSE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.license = iprot.readString();
              struct.setLicenseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.auditTime = iprot.readI64();
              struct.setAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // AUDIT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditState = iprot.readString();
              struct.setAuditStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // EDIT_AUDIT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.editAuditState = iprot.readString();
              struct.setEditAuditStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // QRCODE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.qrcodeUrl = iprot.readString();
              struct.setQrcodeUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // START_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startCreateTime = iprot.readI64();
              struct.setStartCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // END_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endCreateTime = iprot.readI64();
              struct.setEndCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // START_AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startAuditTime = iprot.readI64();
              struct.setStartAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // END_AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endAuditTime = iprot.readI64();
              struct.setEndAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // AREA_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaName = iprot.readString();
              struct.setAreaNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // DISABLE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.disableStatus = iprot.readString();
              struct.setDisableStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // IS_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnable = iprot.readBool();
              struct.setIsEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // IS_DEFAULT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isDefault = iprot.readBool();
              struct.setIsDefaultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // TREE_PATH_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.treePathName = iprot.readString();
              struct.setTreePathNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // PREFER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.preferStatus = iprot.readBool();
              struct.setPreferStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // DISCOUNT_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.discountRate = iprot.readString();
              struct.setDiscountRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // DISABLE_STATUS_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.disableStatusList = new ArrayList<String>(_list0.size);
                String _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readString();
                  struct.disableStatusList.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setDisableStatusListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OutletPreferVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.proOrgCode != null) {
        if (struct.isSetProOrgCode()) {
          oprot.writeFieldBegin(PRO_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.proOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cityOrgCode != null) {
        if (struct.isSetCityOrgCode()) {
          oprot.writeFieldBegin(CITY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.cityOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.countyOrgCode != null) {
        if (struct.isSetCountyOrgCode()) {
          oprot.writeFieldBegin(COUNTY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.countyOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgCode != null) {
        if (struct.isSetOrgCode()) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantName != null) {
        if (struct.isSetMerchantName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.license != null) {
        if (struct.isSetLicense()) {
          oprot.writeFieldBegin(LICENSE_FIELD_DESC);
          oprot.writeString(struct.license);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletName != null) {
        if (struct.isSetOutletName()) {
          oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
          oprot.writeString(struct.outletName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletId != null) {
        if (struct.isSetOutletId()) {
          oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
          oprot.writeString(struct.outletId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAuditTime()) {
        oprot.writeFieldBegin(AUDIT_TIME_FIELD_DESC);
        oprot.writeI64(struct.auditTime);
        oprot.writeFieldEnd();
      }
      if (struct.auditState != null) {
        if (struct.isSetAuditState()) {
          oprot.writeFieldBegin(AUDIT_STATE_FIELD_DESC);
          oprot.writeString(struct.auditState);
          oprot.writeFieldEnd();
        }
      }
      if (struct.editAuditState != null) {
        if (struct.isSetEditAuditState()) {
          oprot.writeFieldBegin(EDIT_AUDIT_STATE_FIELD_DESC);
          oprot.writeString(struct.editAuditState);
          oprot.writeFieldEnd();
        }
      }
      if (struct.qrcodeUrl != null) {
        if (struct.isSetQrcodeUrl()) {
          oprot.writeFieldBegin(QRCODE_URL_FIELD_DESC);
          oprot.writeString(struct.qrcodeUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStartCreateTime()) {
        oprot.writeFieldBegin(START_CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.startCreateTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndCreateTime()) {
        oprot.writeFieldBegin(END_CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.endCreateTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStartAuditTime()) {
        oprot.writeFieldBegin(START_AUDIT_TIME_FIELD_DESC);
        oprot.writeI64(struct.startAuditTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndAuditTime()) {
        oprot.writeFieldBegin(END_AUDIT_TIME_FIELD_DESC);
        oprot.writeI64(struct.endAuditTime);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.areaName != null) {
        if (struct.isSetAreaName()) {
          oprot.writeFieldBegin(AREA_NAME_FIELD_DESC);
          oprot.writeString(struct.areaName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgName != null) {
        if (struct.isSetOrgName()) {
          oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
          oprot.writeString(struct.orgName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.disableStatus != null) {
        if (struct.isSetDisableStatus()) {
          oprot.writeFieldBegin(DISABLE_STATUS_FIELD_DESC);
          oprot.writeString(struct.disableStatus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsEnable()) {
        oprot.writeFieldBegin(IS_ENABLE_FIELD_DESC);
        oprot.writeBool(struct.isEnable);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsDefault()) {
        oprot.writeFieldBegin(IS_DEFAULT_FIELD_DESC);
        oprot.writeBool(struct.isDefault);
        oprot.writeFieldEnd();
      }
      if (struct.treePathName != null) {
        if (struct.isSetTreePathName()) {
          oprot.writeFieldBegin(TREE_PATH_NAME_FIELD_DESC);
          oprot.writeString(struct.treePathName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPreferStatus()) {
        oprot.writeFieldBegin(PREFER_STATUS_FIELD_DESC);
        oprot.writeBool(struct.preferStatus);
        oprot.writeFieldEnd();
      }
      if (struct.discountRate != null) {
        if (struct.isSetDiscountRate()) {
          oprot.writeFieldBegin(DISCOUNT_RATE_FIELD_DESC);
          oprot.writeString(struct.discountRate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.disableStatusList != null) {
        if (struct.isSetDisableStatusList()) {
          oprot.writeFieldBegin(DISABLE_STATUS_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.disableStatusList.size()));
            for (String _iter3 : struct.disableStatusList)
            {
              oprot.writeString(_iter3);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OutletPreferVoTupleSchemeFactory implements SchemeFactory {
    public OutletPreferVoTupleScheme getScheme() {
      return new OutletPreferVoTupleScheme();
    }
  }

  private static class OutletPreferVoTupleScheme extends TupleScheme<OutletPreferVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OutletPreferVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetClientId()) {
        optionals.set(2);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(3);
      }
      if (struct.isSetProOrgCode()) {
        optionals.set(4);
      }
      if (struct.isSetCityOrgCode()) {
        optionals.set(5);
      }
      if (struct.isSetCountyOrgCode()) {
        optionals.set(6);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(7);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(8);
      }
      if (struct.isSetLicense()) {
        optionals.set(9);
      }
      if (struct.isSetOutletName()) {
        optionals.set(10);
      }
      if (struct.isSetOutletId()) {
        optionals.set(11);
      }
      if (struct.isSetAuditTime()) {
        optionals.set(12);
      }
      if (struct.isSetAuditState()) {
        optionals.set(13);
      }
      if (struct.isSetEditAuditState()) {
        optionals.set(14);
      }
      if (struct.isSetQrcodeUrl()) {
        optionals.set(15);
      }
      if (struct.isSetStartCreateTime()) {
        optionals.set(16);
      }
      if (struct.isSetEndCreateTime()) {
        optionals.set(17);
      }
      if (struct.isSetStartAuditTime()) {
        optionals.set(18);
      }
      if (struct.isSetEndAuditTime()) {
        optionals.set(19);
      }
      if (struct.isSetAddress()) {
        optionals.set(20);
      }
      if (struct.isSetAreaName()) {
        optionals.set(21);
      }
      if (struct.isSetOrgName()) {
        optionals.set(22);
      }
      if (struct.isSetDisableStatus()) {
        optionals.set(23);
      }
      if (struct.isSetIsEnable()) {
        optionals.set(24);
      }
      if (struct.isSetIsDefault()) {
        optionals.set(25);
      }
      if (struct.isSetTreePathName()) {
        optionals.set(26);
      }
      if (struct.isSetPreferStatus()) {
        optionals.set(27);
      }
      if (struct.isSetDiscountRate()) {
        optionals.set(28);
      }
      if (struct.isSetDisableStatusList()) {
        optionals.set(29);
      }
      oprot.writeBitSet(optionals, 30);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetProOrgCode()) {
        oprot.writeString(struct.proOrgCode);
      }
      if (struct.isSetCityOrgCode()) {
        oprot.writeString(struct.cityOrgCode);
      }
      if (struct.isSetCountyOrgCode()) {
        oprot.writeString(struct.countyOrgCode);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetLicense()) {
        oprot.writeString(struct.license);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
      if (struct.isSetAuditTime()) {
        oprot.writeI64(struct.auditTime);
      }
      if (struct.isSetAuditState()) {
        oprot.writeString(struct.auditState);
      }
      if (struct.isSetEditAuditState()) {
        oprot.writeString(struct.editAuditState);
      }
      if (struct.isSetQrcodeUrl()) {
        oprot.writeString(struct.qrcodeUrl);
      }
      if (struct.isSetStartCreateTime()) {
        oprot.writeI64(struct.startCreateTime);
      }
      if (struct.isSetEndCreateTime()) {
        oprot.writeI64(struct.endCreateTime);
      }
      if (struct.isSetStartAuditTime()) {
        oprot.writeI64(struct.startAuditTime);
      }
      if (struct.isSetEndAuditTime()) {
        oprot.writeI64(struct.endAuditTime);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetAreaName()) {
        oprot.writeString(struct.areaName);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetDisableStatus()) {
        oprot.writeString(struct.disableStatus);
      }
      if (struct.isSetIsEnable()) {
        oprot.writeBool(struct.isEnable);
      }
      if (struct.isSetIsDefault()) {
        oprot.writeBool(struct.isDefault);
      }
      if (struct.isSetTreePathName()) {
        oprot.writeString(struct.treePathName);
      }
      if (struct.isSetPreferStatus()) {
        oprot.writeBool(struct.preferStatus);
      }
      if (struct.isSetDiscountRate()) {
        oprot.writeString(struct.discountRate);
      }
      if (struct.isSetDisableStatusList()) {
        {
          oprot.writeI32(struct.disableStatusList.size());
          for (String _iter4 : struct.disableStatusList)
          {
            oprot.writeString(_iter4);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OutletPreferVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(30);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.proOrgCode = iprot.readString();
        struct.setProOrgCodeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.cityOrgCode = iprot.readString();
        struct.setCityOrgCodeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.countyOrgCode = iprot.readString();
        struct.setCountyOrgCodeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.license = iprot.readString();
        struct.setLicenseIsSet(true);
      }
      if (incoming.get(10)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(11)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.auditTime = iprot.readI64();
        struct.setAuditTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.auditState = iprot.readString();
        struct.setAuditStateIsSet(true);
      }
      if (incoming.get(14)) {
        struct.editAuditState = iprot.readString();
        struct.setEditAuditStateIsSet(true);
      }
      if (incoming.get(15)) {
        struct.qrcodeUrl = iprot.readString();
        struct.setQrcodeUrlIsSet(true);
      }
      if (incoming.get(16)) {
        struct.startCreateTime = iprot.readI64();
        struct.setStartCreateTimeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.endCreateTime = iprot.readI64();
        struct.setEndCreateTimeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.startAuditTime = iprot.readI64();
        struct.setStartAuditTimeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.endAuditTime = iprot.readI64();
        struct.setEndAuditTimeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(21)) {
        struct.areaName = iprot.readString();
        struct.setAreaNameIsSet(true);
      }
      if (incoming.get(22)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(23)) {
        struct.disableStatus = iprot.readString();
        struct.setDisableStatusIsSet(true);
      }
      if (incoming.get(24)) {
        struct.isEnable = iprot.readBool();
        struct.setIsEnableIsSet(true);
      }
      if (incoming.get(25)) {
        struct.isDefault = iprot.readBool();
        struct.setIsDefaultIsSet(true);
      }
      if (incoming.get(26)) {
        struct.treePathName = iprot.readString();
        struct.setTreePathNameIsSet(true);
      }
      if (incoming.get(27)) {
        struct.preferStatus = iprot.readBool();
        struct.setPreferStatusIsSet(true);
      }
      if (incoming.get(28)) {
        struct.discountRate = iprot.readString();
        struct.setDiscountRateIsSet(true);
      }
      if (incoming.get(29)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.disableStatusList = new ArrayList<String>(_list5.size);
          String _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = iprot.readString();
            struct.disableStatusList.add(_elem6);
          }
        }
        struct.setDisableStatusListIsSet(true);
      }
    }
  }

}

