/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 订单详细响应参数detailed
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class GetOrderDetailByMerchantPhoneVoRes implements org.apache.thrift.TBase<GetOrderDetailByMerchantPhoneVoRes, GetOrderDetailByMerchantPhoneVoRes._Fields>, java.io.Serializable, Cloneable, Comparable<GetOrderDetailByMerchantPhoneVoRes> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetOrderDetailByMerchantPhoneVoRes");

  private static final org.apache.thrift.protocol.TField MEMBER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("memberName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MEMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("memberCode", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField SETTLE_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("settleState", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField IS_OUTLET_COMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("isOutletComment", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField ORDER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("orderStatus", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField TOTAL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("quantity", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField PAYMENT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentTime", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField PRODUCT_INFOS_FIELD_DESC = new org.apache.thrift.protocol.TField("productInfos", org.apache.thrift.protocol.TType.LIST, (short)11);
  private static final org.apache.thrift.protocol.TField RESULT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("resultVo", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField CONSIGNEE_FIELD_DESC = new org.apache.thrift.protocol.TField("consignee", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField DELIVERY_CORP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCorpId", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField DELIVERY_CORP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryCorpName", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField TRACKING_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("trackingNo", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField SHIPPING_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("shippingTime", org.apache.thrift.protocol.TType.I64, (short)19);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField DELIVERY_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryStatus", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField REFUND_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("refundState", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField SUB_ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("subOrderId", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField CUT_POINT_FIELD_DESC = new org.apache.thrift.protocol.TField("cutPoint", org.apache.thrift.protocol.TType.DOUBLE, (short)26);
  private static final org.apache.thrift.protocol.TField TOTAL_CASH_FIELD_DESC = new org.apache.thrift.protocol.TField("totalCash", org.apache.thrift.protocol.TType.DOUBLE, (short)27);
  private static final org.apache.thrift.protocol.TField POINT_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("pointMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)28);
  private static final org.apache.thrift.protocol.TField CUT_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("cutMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)29);
  private static final org.apache.thrift.protocol.TField CONSUME_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("consumeMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)30);
  private static final org.apache.thrift.protocol.TField DISCOUNT_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("discountMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)31);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField OUTLET_IMG_FIELD_DESC = new org.apache.thrift.protocol.TField("outletImg", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField MERCHANT_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantUserId", org.apache.thrift.protocol.TType.I64, (short)34);
  private static final org.apache.thrift.protocol.TField MERCHANT_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantUserName", org.apache.thrift.protocol.TType.STRING, (short)35);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new GetOrderDetailByMerchantPhoneVoResStandardSchemeFactory());
    schemes.put(TupleScheme.class, new GetOrderDetailByMerchantPhoneVoResTupleSchemeFactory());
  }

  public String memberName; // required
  public long memberCode; // required
  public long createTime; // required
  public String settleState; // required
  public String outletId; // required
  public boolean isOutletComment; // required
  public String orderStatus; // required
  public double totalPrice; // required
  public int quantity; // required
  public long paymentTime; // required
  public List<ProductInfoVo> productInfos; // required
  public com.froad.thrift.vo.ResultVo resultVo; // required
  /**
   * 收货人姓名（名优特惠使用）
   */
  public String consignee; // required
  /**
   * 收货地址（名优特惠使用）
   */
  public String address; // required
  /**
   * 收货人手机号码（名优特惠使用）
   */
  public String phone; // required
  /**
   * 物流ID
   */
  public String deliveryCorpId; // required
  /**
   * 物流名称
   */
  public String deliveryCorpName; // required
  /**
   * 物流单号
   */
  public String trackingNo; // required
  /**
   * 发货时间
   */
  public long shippingTime; // required
  /**
   * 地址ID收货地址使用
   */
  public long areaId; // required
  /**
   * 发货状态
   */
  public String deliveryStatus; // required
  /**
   * 商户ID--面对面新增
   */
  public String merchantId; // required
  /**
   * 商户名--面对面新增
   */
  public String merchantName; // required
  /**
   * 退款状态--2015-5-25 新增 TODO： 1. 未退款， 2. 退款中， 3. 退款完成， 4. 部分退款
   */
  public String refundState; // required
  /**
   * 子订单号
   */
  public String subOrderId; // required
  /**
   * 积分抵扣
   */
  public double cutPoint; // required
  /**
   * 实付款
   */
  public double totalCash; // required
  /**
   * 积分抵扣金额
   */
  public double pointMoney; // required
  /**
   * 优惠金额
   */
  public double cutMoney; // required
  /**
   * 消费总金额
   */
  public double consumeMoney; // required
  /**
   * 门店折扣金额
   */
  public double discountMoney; // required
  /**
   * 门店名称
   */
  public String outletName; // required
  /**
   * 门店LOGO
   */
  public String outletImg; // required
  /**
   * 操作员ID
   */
  public long merchantUserId; // required
  /**
   * 操作员名
   */
  public String merchantUserName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MEMBER_NAME((short)1, "memberName"),
    MEMBER_CODE((short)2, "memberCode"),
    CREATE_TIME((short)3, "createTime"),
    SETTLE_STATE((short)4, "settleState"),
    OUTLET_ID((short)5, "outletId"),
    IS_OUTLET_COMMENT((short)6, "isOutletComment"),
    ORDER_STATUS((short)7, "orderStatus"),
    TOTAL_PRICE((short)8, "totalPrice"),
    QUANTITY((short)9, "quantity"),
    PAYMENT_TIME((short)10, "paymentTime"),
    PRODUCT_INFOS((short)11, "productInfos"),
    RESULT_VO((short)12, "resultVo"),
    /**
     * 收货人姓名（名优特惠使用）
     */
    CONSIGNEE((short)13, "consignee"),
    /**
     * 收货地址（名优特惠使用）
     */
    ADDRESS((short)14, "address"),
    /**
     * 收货人手机号码（名优特惠使用）
     */
    PHONE((short)15, "phone"),
    /**
     * 物流ID
     */
    DELIVERY_CORP_ID((short)16, "deliveryCorpId"),
    /**
     * 物流名称
     */
    DELIVERY_CORP_NAME((short)17, "deliveryCorpName"),
    /**
     * 物流单号
     */
    TRACKING_NO((short)18, "trackingNo"),
    /**
     * 发货时间
     */
    SHIPPING_TIME((short)19, "shippingTime"),
    /**
     * 地址ID收货地址使用
     */
    AREA_ID((short)20, "areaId"),
    /**
     * 发货状态
     */
    DELIVERY_STATUS((short)21, "deliveryStatus"),
    /**
     * 商户ID--面对面新增
     */
    MERCHANT_ID((short)22, "merchantId"),
    /**
     * 商户名--面对面新增
     */
    MERCHANT_NAME((short)23, "merchantName"),
    /**
     * 退款状态--2015-5-25 新增 TODO： 1. 未退款， 2. 退款中， 3. 退款完成， 4. 部分退款
     */
    REFUND_STATE((short)24, "refundState"),
    /**
     * 子订单号
     */
    SUB_ORDER_ID((short)25, "subOrderId"),
    /**
     * 积分抵扣
     */
    CUT_POINT((short)26, "cutPoint"),
    /**
     * 实付款
     */
    TOTAL_CASH((short)27, "totalCash"),
    /**
     * 积分抵扣金额
     */
    POINT_MONEY((short)28, "pointMoney"),
    /**
     * 优惠金额
     */
    CUT_MONEY((short)29, "cutMoney"),
    /**
     * 消费总金额
     */
    CONSUME_MONEY((short)30, "consumeMoney"),
    /**
     * 门店折扣金额
     */
    DISCOUNT_MONEY((short)31, "discountMoney"),
    /**
     * 门店名称
     */
    OUTLET_NAME((short)32, "outletName"),
    /**
     * 门店LOGO
     */
    OUTLET_IMG((short)33, "outletImg"),
    /**
     * 操作员ID
     */
    MERCHANT_USER_ID((short)34, "merchantUserId"),
    /**
     * 操作员名
     */
    MERCHANT_USER_NAME((short)35, "merchantUserName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MEMBER_NAME
          return MEMBER_NAME;
        case 2: // MEMBER_CODE
          return MEMBER_CODE;
        case 3: // CREATE_TIME
          return CREATE_TIME;
        case 4: // SETTLE_STATE
          return SETTLE_STATE;
        case 5: // OUTLET_ID
          return OUTLET_ID;
        case 6: // IS_OUTLET_COMMENT
          return IS_OUTLET_COMMENT;
        case 7: // ORDER_STATUS
          return ORDER_STATUS;
        case 8: // TOTAL_PRICE
          return TOTAL_PRICE;
        case 9: // QUANTITY
          return QUANTITY;
        case 10: // PAYMENT_TIME
          return PAYMENT_TIME;
        case 11: // PRODUCT_INFOS
          return PRODUCT_INFOS;
        case 12: // RESULT_VO
          return RESULT_VO;
        case 13: // CONSIGNEE
          return CONSIGNEE;
        case 14: // ADDRESS
          return ADDRESS;
        case 15: // PHONE
          return PHONE;
        case 16: // DELIVERY_CORP_ID
          return DELIVERY_CORP_ID;
        case 17: // DELIVERY_CORP_NAME
          return DELIVERY_CORP_NAME;
        case 18: // TRACKING_NO
          return TRACKING_NO;
        case 19: // SHIPPING_TIME
          return SHIPPING_TIME;
        case 20: // AREA_ID
          return AREA_ID;
        case 21: // DELIVERY_STATUS
          return DELIVERY_STATUS;
        case 22: // MERCHANT_ID
          return MERCHANT_ID;
        case 23: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 24: // REFUND_STATE
          return REFUND_STATE;
        case 25: // SUB_ORDER_ID
          return SUB_ORDER_ID;
        case 26: // CUT_POINT
          return CUT_POINT;
        case 27: // TOTAL_CASH
          return TOTAL_CASH;
        case 28: // POINT_MONEY
          return POINT_MONEY;
        case 29: // CUT_MONEY
          return CUT_MONEY;
        case 30: // CONSUME_MONEY
          return CONSUME_MONEY;
        case 31: // DISCOUNT_MONEY
          return DISCOUNT_MONEY;
        case 32: // OUTLET_NAME
          return OUTLET_NAME;
        case 33: // OUTLET_IMG
          return OUTLET_IMG;
        case 34: // MERCHANT_USER_ID
          return MERCHANT_USER_ID;
        case 35: // MERCHANT_USER_NAME
          return MERCHANT_USER_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MEMBERCODE_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __ISOUTLETCOMMENT_ISSET_ID = 2;
  private static final int __TOTALPRICE_ISSET_ID = 3;
  private static final int __QUANTITY_ISSET_ID = 4;
  private static final int __PAYMENTTIME_ISSET_ID = 5;
  private static final int __SHIPPINGTIME_ISSET_ID = 6;
  private static final int __AREAID_ISSET_ID = 7;
  private static final int __CUTPOINT_ISSET_ID = 8;
  private static final int __TOTALCASH_ISSET_ID = 9;
  private static final int __POINTMONEY_ISSET_ID = 10;
  private static final int __CUTMONEY_ISSET_ID = 11;
  private static final int __CONSUMEMONEY_ISSET_ID = 12;
  private static final int __DISCOUNTMONEY_ISSET_ID = 13;
  private static final int __MERCHANTUSERID_ISSET_ID = 14;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MEMBER_NAME, new org.apache.thrift.meta_data.FieldMetaData("memberName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("memberCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SETTLE_STATE, new org.apache.thrift.meta_data.FieldMetaData("settleState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_OUTLET_COMMENT, new org.apache.thrift.meta_data.FieldMetaData("isOutletComment", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ORDER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("orderStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("totalPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("quantity", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAYMENT_TIME, new org.apache.thrift.meta_data.FieldMetaData("paymentTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PRODUCT_INFOS, new org.apache.thrift.meta_data.FieldMetaData("productInfos", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProductInfoVo.class))));
    tmpMap.put(_Fields.RESULT_VO, new org.apache.thrift.meta_data.FieldMetaData("resultVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
    tmpMap.put(_Fields.CONSIGNEE, new org.apache.thrift.meta_data.FieldMetaData("consignee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_CORP_ID, new org.apache.thrift.meta_data.FieldMetaData("deliveryCorpId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_CORP_NAME, new org.apache.thrift.meta_data.FieldMetaData("deliveryCorpName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TRACKING_NO, new org.apache.thrift.meta_data.FieldMetaData("trackingNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHIPPING_TIME, new org.apache.thrift.meta_data.FieldMetaData("shippingTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DELIVERY_STATUS, new org.apache.thrift.meta_data.FieldMetaData("deliveryStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFUND_STATE, new org.apache.thrift.meta_data.FieldMetaData("refundState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUB_ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("subOrderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUT_POINT, new org.apache.thrift.meta_data.FieldMetaData("cutPoint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TOTAL_CASH, new org.apache.thrift.meta_data.FieldMetaData("totalCash", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.POINT_MONEY, new org.apache.thrift.meta_data.FieldMetaData("pointMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CUT_MONEY, new org.apache.thrift.meta_data.FieldMetaData("cutMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CONSUME_MONEY, new org.apache.thrift.meta_data.FieldMetaData("consumeMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DISCOUNT_MONEY, new org.apache.thrift.meta_data.FieldMetaData("discountMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_IMG, new org.apache.thrift.meta_data.FieldMetaData("outletImg", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MERCHANT_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetOrderDetailByMerchantPhoneVoRes.class, metaDataMap);
  }

  public GetOrderDetailByMerchantPhoneVoRes() {
  }

  public GetOrderDetailByMerchantPhoneVoRes(
    String memberName,
    long memberCode,
    long createTime,
    String settleState,
    String outletId,
    boolean isOutletComment,
    String orderStatus,
    double totalPrice,
    int quantity,
    long paymentTime,
    List<ProductInfoVo> productInfos,
    com.froad.thrift.vo.ResultVo resultVo,
    String consignee,
    String address,
    String phone,
    String deliveryCorpId,
    String deliveryCorpName,
    String trackingNo,
    long shippingTime,
    long areaId,
    String deliveryStatus,
    String merchantId,
    String merchantName,
    String refundState,
    String subOrderId,
    double cutPoint,
    double totalCash,
    double pointMoney,
    double cutMoney,
    double consumeMoney,
    double discountMoney,
    String outletName,
    String outletImg,
    long merchantUserId,
    String merchantUserName)
  {
    this();
    this.memberName = memberName;
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.settleState = settleState;
    this.outletId = outletId;
    this.isOutletComment = isOutletComment;
    setIsOutletCommentIsSet(true);
    this.orderStatus = orderStatus;
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    this.quantity = quantity;
    setQuantityIsSet(true);
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    this.productInfos = productInfos;
    this.resultVo = resultVo;
    this.consignee = consignee;
    this.address = address;
    this.phone = phone;
    this.deliveryCorpId = deliveryCorpId;
    this.deliveryCorpName = deliveryCorpName;
    this.trackingNo = trackingNo;
    this.shippingTime = shippingTime;
    setShippingTimeIsSet(true);
    this.areaId = areaId;
    setAreaIdIsSet(true);
    this.deliveryStatus = deliveryStatus;
    this.merchantId = merchantId;
    this.merchantName = merchantName;
    this.refundState = refundState;
    this.subOrderId = subOrderId;
    this.cutPoint = cutPoint;
    setCutPointIsSet(true);
    this.totalCash = totalCash;
    setTotalCashIsSet(true);
    this.pointMoney = pointMoney;
    setPointMoneyIsSet(true);
    this.cutMoney = cutMoney;
    setCutMoneyIsSet(true);
    this.consumeMoney = consumeMoney;
    setConsumeMoneyIsSet(true);
    this.discountMoney = discountMoney;
    setDiscountMoneyIsSet(true);
    this.outletName = outletName;
    this.outletImg = outletImg;
    this.merchantUserId = merchantUserId;
    setMerchantUserIdIsSet(true);
    this.merchantUserName = merchantUserName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GetOrderDetailByMerchantPhoneVoRes(GetOrderDetailByMerchantPhoneVoRes other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetMemberName()) {
      this.memberName = other.memberName;
    }
    this.memberCode = other.memberCode;
    this.createTime = other.createTime;
    if (other.isSetSettleState()) {
      this.settleState = other.settleState;
    }
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
    this.isOutletComment = other.isOutletComment;
    if (other.isSetOrderStatus()) {
      this.orderStatus = other.orderStatus;
    }
    this.totalPrice = other.totalPrice;
    this.quantity = other.quantity;
    this.paymentTime = other.paymentTime;
    if (other.isSetProductInfos()) {
      List<ProductInfoVo> __this__productInfos = new ArrayList<ProductInfoVo>(other.productInfos.size());
      for (ProductInfoVo other_element : other.productInfos) {
        __this__productInfos.add(new ProductInfoVo(other_element));
      }
      this.productInfos = __this__productInfos;
    }
    if (other.isSetResultVo()) {
      this.resultVo = new com.froad.thrift.vo.ResultVo(other.resultVo);
    }
    if (other.isSetConsignee()) {
      this.consignee = other.consignee;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetDeliveryCorpId()) {
      this.deliveryCorpId = other.deliveryCorpId;
    }
    if (other.isSetDeliveryCorpName()) {
      this.deliveryCorpName = other.deliveryCorpName;
    }
    if (other.isSetTrackingNo()) {
      this.trackingNo = other.trackingNo;
    }
    this.shippingTime = other.shippingTime;
    this.areaId = other.areaId;
    if (other.isSetDeliveryStatus()) {
      this.deliveryStatus = other.deliveryStatus;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetRefundState()) {
      this.refundState = other.refundState;
    }
    if (other.isSetSubOrderId()) {
      this.subOrderId = other.subOrderId;
    }
    this.cutPoint = other.cutPoint;
    this.totalCash = other.totalCash;
    this.pointMoney = other.pointMoney;
    this.cutMoney = other.cutMoney;
    this.consumeMoney = other.consumeMoney;
    this.discountMoney = other.discountMoney;
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    if (other.isSetOutletImg()) {
      this.outletImg = other.outletImg;
    }
    this.merchantUserId = other.merchantUserId;
    if (other.isSetMerchantUserName()) {
      this.merchantUserName = other.merchantUserName;
    }
  }

  public GetOrderDetailByMerchantPhoneVoRes deepCopy() {
    return new GetOrderDetailByMerchantPhoneVoRes(this);
  }

  @Override
  public void clear() {
    this.memberName = null;
    setMemberCodeIsSet(false);
    this.memberCode = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.settleState = null;
    this.outletId = null;
    setIsOutletCommentIsSet(false);
    this.isOutletComment = false;
    this.orderStatus = null;
    setTotalPriceIsSet(false);
    this.totalPrice = 0.0;
    setQuantityIsSet(false);
    this.quantity = 0;
    setPaymentTimeIsSet(false);
    this.paymentTime = 0;
    this.productInfos = null;
    this.resultVo = null;
    this.consignee = null;
    this.address = null;
    this.phone = null;
    this.deliveryCorpId = null;
    this.deliveryCorpName = null;
    this.trackingNo = null;
    setShippingTimeIsSet(false);
    this.shippingTime = 0;
    setAreaIdIsSet(false);
    this.areaId = 0;
    this.deliveryStatus = null;
    this.merchantId = null;
    this.merchantName = null;
    this.refundState = null;
    this.subOrderId = null;
    setCutPointIsSet(false);
    this.cutPoint = 0.0;
    setTotalCashIsSet(false);
    this.totalCash = 0.0;
    setPointMoneyIsSet(false);
    this.pointMoney = 0.0;
    setCutMoneyIsSet(false);
    this.cutMoney = 0.0;
    setConsumeMoneyIsSet(false);
    this.consumeMoney = 0.0;
    setDiscountMoneyIsSet(false);
    this.discountMoney = 0.0;
    this.outletName = null;
    this.outletImg = null;
    setMerchantUserIdIsSet(false);
    this.merchantUserId = 0;
    this.merchantUserName = null;
  }

  public String getMemberName() {
    return this.memberName;
  }

  public GetOrderDetailByMerchantPhoneVoRes setMemberName(String memberName) {
    this.memberName = memberName;
    return this;
  }

  public void unsetMemberName() {
    this.memberName = null;
  }

  /** Returns true if field memberName is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberName() {
    return this.memberName != null;
  }

  public void setMemberNameIsSet(boolean value) {
    if (!value) {
      this.memberName = null;
    }
  }

  public long getMemberCode() {
    return this.memberCode;
  }

  public GetOrderDetailByMerchantPhoneVoRes setMemberCode(long memberCode) {
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    return this;
  }

  public void unsetMemberCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  /** Returns true if field memberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberCode() {
    return EncodingUtils.testBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  public void setMemberCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEMBERCODE_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public GetOrderDetailByMerchantPhoneVoRes setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public String getSettleState() {
    return this.settleState;
  }

  public GetOrderDetailByMerchantPhoneVoRes setSettleState(String settleState) {
    this.settleState = settleState;
    return this;
  }

  public void unsetSettleState() {
    this.settleState = null;
  }

  /** Returns true if field settleState is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleState() {
    return this.settleState != null;
  }

  public void setSettleStateIsSet(boolean value) {
    if (!value) {
      this.settleState = null;
    }
  }

  public String getOutletId() {
    return this.outletId;
  }

  public GetOrderDetailByMerchantPhoneVoRes setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  public boolean isIsOutletComment() {
    return this.isOutletComment;
  }

  public GetOrderDetailByMerchantPhoneVoRes setIsOutletComment(boolean isOutletComment) {
    this.isOutletComment = isOutletComment;
    setIsOutletCommentIsSet(true);
    return this;
  }

  public void unsetIsOutletComment() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISOUTLETCOMMENT_ISSET_ID);
  }

  /** Returns true if field isOutletComment is set (has been assigned a value) and false otherwise */
  public boolean isSetIsOutletComment() {
    return EncodingUtils.testBit(__isset_bitfield, __ISOUTLETCOMMENT_ISSET_ID);
  }

  public void setIsOutletCommentIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISOUTLETCOMMENT_ISSET_ID, value);
  }

  public String getOrderStatus() {
    return this.orderStatus;
  }

  public GetOrderDetailByMerchantPhoneVoRes setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

  public void unsetOrderStatus() {
    this.orderStatus = null;
  }

  /** Returns true if field orderStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderStatus() {
    return this.orderStatus != null;
  }

  public void setOrderStatusIsSet(boolean value) {
    if (!value) {
      this.orderStatus = null;
    }
  }

  public double getTotalPrice() {
    return this.totalPrice;
  }

  public GetOrderDetailByMerchantPhoneVoRes setTotalPrice(double totalPrice) {
    this.totalPrice = totalPrice;
    setTotalPriceIsSet(true);
    return this;
  }

  public void unsetTotalPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  /** Returns true if field totalPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPRICE_ISSET_ID);
  }

  public void setTotalPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPRICE_ISSET_ID, value);
  }

  public int getQuantity() {
    return this.quantity;
  }

  public GetOrderDetailByMerchantPhoneVoRes setQuantity(int quantity) {
    this.quantity = quantity;
    setQuantityIsSet(true);
    return this;
  }

  public void unsetQuantity() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __QUANTITY_ISSET_ID);
  }

  /** Returns true if field quantity is set (has been assigned a value) and false otherwise */
  public boolean isSetQuantity() {
    return EncodingUtils.testBit(__isset_bitfield, __QUANTITY_ISSET_ID);
  }

  public void setQuantityIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __QUANTITY_ISSET_ID, value);
  }

  public long getPaymentTime() {
    return this.paymentTime;
  }

  public GetOrderDetailByMerchantPhoneVoRes setPaymentTime(long paymentTime) {
    this.paymentTime = paymentTime;
    setPaymentTimeIsSet(true);
    return this;
  }

  public void unsetPaymentTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  /** Returns true if field paymentTime is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentTime() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID);
  }

  public void setPaymentTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTTIME_ISSET_ID, value);
  }

  public int getProductInfosSize() {
    return (this.productInfos == null) ? 0 : this.productInfos.size();
  }

  public java.util.Iterator<ProductInfoVo> getProductInfosIterator() {
    return (this.productInfos == null) ? null : this.productInfos.iterator();
  }

  public void addToProductInfos(ProductInfoVo elem) {
    if (this.productInfos == null) {
      this.productInfos = new ArrayList<ProductInfoVo>();
    }
    this.productInfos.add(elem);
  }

  public List<ProductInfoVo> getProductInfos() {
    return this.productInfos;
  }

  public GetOrderDetailByMerchantPhoneVoRes setProductInfos(List<ProductInfoVo> productInfos) {
    this.productInfos = productInfos;
    return this;
  }

  public void unsetProductInfos() {
    this.productInfos = null;
  }

  /** Returns true if field productInfos is set (has been assigned a value) and false otherwise */
  public boolean isSetProductInfos() {
    return this.productInfos != null;
  }

  public void setProductInfosIsSet(boolean value) {
    if (!value) {
      this.productInfos = null;
    }
  }

  public com.froad.thrift.vo.ResultVo getResultVo() {
    return this.resultVo;
  }

  public GetOrderDetailByMerchantPhoneVoRes setResultVo(com.froad.thrift.vo.ResultVo resultVo) {
    this.resultVo = resultVo;
    return this;
  }

  public void unsetResultVo() {
    this.resultVo = null;
  }

  /** Returns true if field resultVo is set (has been assigned a value) and false otherwise */
  public boolean isSetResultVo() {
    return this.resultVo != null;
  }

  public void setResultVoIsSet(boolean value) {
    if (!value) {
      this.resultVo = null;
    }
  }

  /**
   * 收货人姓名（名优特惠使用）
   */
  public String getConsignee() {
    return this.consignee;
  }

  /**
   * 收货人姓名（名优特惠使用）
   */
  public GetOrderDetailByMerchantPhoneVoRes setConsignee(String consignee) {
    this.consignee = consignee;
    return this;
  }

  public void unsetConsignee() {
    this.consignee = null;
  }

  /** Returns true if field consignee is set (has been assigned a value) and false otherwise */
  public boolean isSetConsignee() {
    return this.consignee != null;
  }

  public void setConsigneeIsSet(boolean value) {
    if (!value) {
      this.consignee = null;
    }
  }

  /**
   * 收货地址（名优特惠使用）
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 收货地址（名优特惠使用）
   */
  public GetOrderDetailByMerchantPhoneVoRes setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 收货人手机号码（名优特惠使用）
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 收货人手机号码（名优特惠使用）
   */
  public GetOrderDetailByMerchantPhoneVoRes setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 物流ID
   */
  public String getDeliveryCorpId() {
    return this.deliveryCorpId;
  }

  /**
   * 物流ID
   */
  public GetOrderDetailByMerchantPhoneVoRes setDeliveryCorpId(String deliveryCorpId) {
    this.deliveryCorpId = deliveryCorpId;
    return this;
  }

  public void unsetDeliveryCorpId() {
    this.deliveryCorpId = null;
  }

  /** Returns true if field deliveryCorpId is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryCorpId() {
    return this.deliveryCorpId != null;
  }

  public void setDeliveryCorpIdIsSet(boolean value) {
    if (!value) {
      this.deliveryCorpId = null;
    }
  }

  /**
   * 物流名称
   */
  public String getDeliveryCorpName() {
    return this.deliveryCorpName;
  }

  /**
   * 物流名称
   */
  public GetOrderDetailByMerchantPhoneVoRes setDeliveryCorpName(String deliveryCorpName) {
    this.deliveryCorpName = deliveryCorpName;
    return this;
  }

  public void unsetDeliveryCorpName() {
    this.deliveryCorpName = null;
  }

  /** Returns true if field deliveryCorpName is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryCorpName() {
    return this.deliveryCorpName != null;
  }

  public void setDeliveryCorpNameIsSet(boolean value) {
    if (!value) {
      this.deliveryCorpName = null;
    }
  }

  /**
   * 物流单号
   */
  public String getTrackingNo() {
    return this.trackingNo;
  }

  /**
   * 物流单号
   */
  public GetOrderDetailByMerchantPhoneVoRes setTrackingNo(String trackingNo) {
    this.trackingNo = trackingNo;
    return this;
  }

  public void unsetTrackingNo() {
    this.trackingNo = null;
  }

  /** Returns true if field trackingNo is set (has been assigned a value) and false otherwise */
  public boolean isSetTrackingNo() {
    return this.trackingNo != null;
  }

  public void setTrackingNoIsSet(boolean value) {
    if (!value) {
      this.trackingNo = null;
    }
  }

  /**
   * 发货时间
   */
  public long getShippingTime() {
    return this.shippingTime;
  }

  /**
   * 发货时间
   */
  public GetOrderDetailByMerchantPhoneVoRes setShippingTime(long shippingTime) {
    this.shippingTime = shippingTime;
    setShippingTimeIsSet(true);
    return this;
  }

  public void unsetShippingTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SHIPPINGTIME_ISSET_ID);
  }

  /** Returns true if field shippingTime is set (has been assigned a value) and false otherwise */
  public boolean isSetShippingTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SHIPPINGTIME_ISSET_ID);
  }

  public void setShippingTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SHIPPINGTIME_ISSET_ID, value);
  }

  /**
   * 地址ID收货地址使用
   */
  public long getAreaId() {
    return this.areaId;
  }

  /**
   * 地址ID收货地址使用
   */
  public GetOrderDetailByMerchantPhoneVoRes setAreaId(long areaId) {
    this.areaId = areaId;
    setAreaIdIsSet(true);
    return this;
  }

  public void unsetAreaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return EncodingUtils.testBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  public void setAreaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREAID_ISSET_ID, value);
  }

  /**
   * 发货状态
   */
  public String getDeliveryStatus() {
    return this.deliveryStatus;
  }

  /**
   * 发货状态
   */
  public GetOrderDetailByMerchantPhoneVoRes setDeliveryStatus(String deliveryStatus) {
    this.deliveryStatus = deliveryStatus;
    return this;
  }

  public void unsetDeliveryStatus() {
    this.deliveryStatus = null;
  }

  /** Returns true if field deliveryStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryStatus() {
    return this.deliveryStatus != null;
  }

  public void setDeliveryStatusIsSet(boolean value) {
    if (!value) {
      this.deliveryStatus = null;
    }
  }

  /**
   * 商户ID--面对面新增
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID--面对面新增
   */
  public GetOrderDetailByMerchantPhoneVoRes setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 商户名--面对面新增
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名--面对面新增
   */
  public GetOrderDetailByMerchantPhoneVoRes setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 退款状态--2015-5-25 新增 TODO： 1. 未退款， 2. 退款中， 3. 退款完成， 4. 部分退款
   */
  public String getRefundState() {
    return this.refundState;
  }

  /**
   * 退款状态--2015-5-25 新增 TODO： 1. 未退款， 2. 退款中， 3. 退款完成， 4. 部分退款
   */
  public GetOrderDetailByMerchantPhoneVoRes setRefundState(String refundState) {
    this.refundState = refundState;
    return this;
  }

  public void unsetRefundState() {
    this.refundState = null;
  }

  /** Returns true if field refundState is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundState() {
    return this.refundState != null;
  }

  public void setRefundStateIsSet(boolean value) {
    if (!value) {
      this.refundState = null;
    }
  }

  /**
   * 子订单号
   */
  public String getSubOrderId() {
    return this.subOrderId;
  }

  /**
   * 子订单号
   */
  public GetOrderDetailByMerchantPhoneVoRes setSubOrderId(String subOrderId) {
    this.subOrderId = subOrderId;
    return this;
  }

  public void unsetSubOrderId() {
    this.subOrderId = null;
  }

  /** Returns true if field subOrderId is set (has been assigned a value) and false otherwise */
  public boolean isSetSubOrderId() {
    return this.subOrderId != null;
  }

  public void setSubOrderIdIsSet(boolean value) {
    if (!value) {
      this.subOrderId = null;
    }
  }

  /**
   * 积分抵扣
   */
  public double getCutPoint() {
    return this.cutPoint;
  }

  /**
   * 积分抵扣
   */
  public GetOrderDetailByMerchantPhoneVoRes setCutPoint(double cutPoint) {
    this.cutPoint = cutPoint;
    setCutPointIsSet(true);
    return this;
  }

  public void unsetCutPoint() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUTPOINT_ISSET_ID);
  }

  /** Returns true if field cutPoint is set (has been assigned a value) and false otherwise */
  public boolean isSetCutPoint() {
    return EncodingUtils.testBit(__isset_bitfield, __CUTPOINT_ISSET_ID);
  }

  public void setCutPointIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUTPOINT_ISSET_ID, value);
  }

  /**
   * 实付款
   */
  public double getTotalCash() {
    return this.totalCash;
  }

  /**
   * 实付款
   */
  public GetOrderDetailByMerchantPhoneVoRes setTotalCash(double totalCash) {
    this.totalCash = totalCash;
    setTotalCashIsSet(true);
    return this;
  }

  public void unsetTotalCash() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALCASH_ISSET_ID);
  }

  /** Returns true if field totalCash is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalCash() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALCASH_ISSET_ID);
  }

  public void setTotalCashIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALCASH_ISSET_ID, value);
  }

  /**
   * 积分抵扣金额
   */
  public double getPointMoney() {
    return this.pointMoney;
  }

  /**
   * 积分抵扣金额
   */
  public GetOrderDetailByMerchantPhoneVoRes setPointMoney(double pointMoney) {
    this.pointMoney = pointMoney;
    setPointMoneyIsSet(true);
    return this;
  }

  public void unsetPointMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __POINTMONEY_ISSET_ID);
  }

  /** Returns true if field pointMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetPointMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __POINTMONEY_ISSET_ID);
  }

  public void setPointMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __POINTMONEY_ISSET_ID, value);
  }

  /**
   * 优惠金额
   */
  public double getCutMoney() {
    return this.cutMoney;
  }

  /**
   * 优惠金额
   */
  public GetOrderDetailByMerchantPhoneVoRes setCutMoney(double cutMoney) {
    this.cutMoney = cutMoney;
    setCutMoneyIsSet(true);
    return this;
  }

  public void unsetCutMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUTMONEY_ISSET_ID);
  }

  /** Returns true if field cutMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetCutMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __CUTMONEY_ISSET_ID);
  }

  public void setCutMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUTMONEY_ISSET_ID, value);
  }

  /**
   * 消费总金额
   */
  public double getConsumeMoney() {
    return this.consumeMoney;
  }

  /**
   * 消费总金额
   */
  public GetOrderDetailByMerchantPhoneVoRes setConsumeMoney(double consumeMoney) {
    this.consumeMoney = consumeMoney;
    setConsumeMoneyIsSet(true);
    return this;
  }

  public void unsetConsumeMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONSUMEMONEY_ISSET_ID);
  }

  /** Returns true if field consumeMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetConsumeMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __CONSUMEMONEY_ISSET_ID);
  }

  public void setConsumeMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONSUMEMONEY_ISSET_ID, value);
  }

  /**
   * 门店折扣金额
   */
  public double getDiscountMoney() {
    return this.discountMoney;
  }

  /**
   * 门店折扣金额
   */
  public GetOrderDetailByMerchantPhoneVoRes setDiscountMoney(double discountMoney) {
    this.discountMoney = discountMoney;
    setDiscountMoneyIsSet(true);
    return this;
  }

  public void unsetDiscountMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DISCOUNTMONEY_ISSET_ID);
  }

  /** Returns true if field discountMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetDiscountMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __DISCOUNTMONEY_ISSET_ID);
  }

  public void setDiscountMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DISCOUNTMONEY_ISSET_ID, value);
  }

  /**
   * 门店名称
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 门店名称
   */
  public GetOrderDetailByMerchantPhoneVoRes setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 门店LOGO
   */
  public String getOutletImg() {
    return this.outletImg;
  }

  /**
   * 门店LOGO
   */
  public GetOrderDetailByMerchantPhoneVoRes setOutletImg(String outletImg) {
    this.outletImg = outletImg;
    return this;
  }

  public void unsetOutletImg() {
    this.outletImg = null;
  }

  /** Returns true if field outletImg is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletImg() {
    return this.outletImg != null;
  }

  public void setOutletImgIsSet(boolean value) {
    if (!value) {
      this.outletImg = null;
    }
  }

  /**
   * 操作员ID
   */
  public long getMerchantUserId() {
    return this.merchantUserId;
  }

  /**
   * 操作员ID
   */
  public GetOrderDetailByMerchantPhoneVoRes setMerchantUserId(long merchantUserId) {
    this.merchantUserId = merchantUserId;
    setMerchantUserIdIsSet(true);
    return this;
  }

  public void unsetMerchantUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MERCHANTUSERID_ISSET_ID);
  }

  /** Returns true if field merchantUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __MERCHANTUSERID_ISSET_ID);
  }

  public void setMerchantUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MERCHANTUSERID_ISSET_ID, value);
  }

  /**
   * 操作员名
   */
  public String getMerchantUserName() {
    return this.merchantUserName;
  }

  /**
   * 操作员名
   */
  public GetOrderDetailByMerchantPhoneVoRes setMerchantUserName(String merchantUserName) {
    this.merchantUserName = merchantUserName;
    return this;
  }

  public void unsetMerchantUserName() {
    this.merchantUserName = null;
  }

  /** Returns true if field merchantUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantUserName() {
    return this.merchantUserName != null;
  }

  public void setMerchantUserNameIsSet(boolean value) {
    if (!value) {
      this.merchantUserName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MEMBER_NAME:
      if (value == null) {
        unsetMemberName();
      } else {
        setMemberName((String)value);
      }
      break;

    case MEMBER_CODE:
      if (value == null) {
        unsetMemberCode();
      } else {
        setMemberCode((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case SETTLE_STATE:
      if (value == null) {
        unsetSettleState();
      } else {
        setSettleState((String)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    case IS_OUTLET_COMMENT:
      if (value == null) {
        unsetIsOutletComment();
      } else {
        setIsOutletComment((Boolean)value);
      }
      break;

    case ORDER_STATUS:
      if (value == null) {
        unsetOrderStatus();
      } else {
        setOrderStatus((String)value);
      }
      break;

    case TOTAL_PRICE:
      if (value == null) {
        unsetTotalPrice();
      } else {
        setTotalPrice((Double)value);
      }
      break;

    case QUANTITY:
      if (value == null) {
        unsetQuantity();
      } else {
        setQuantity((Integer)value);
      }
      break;

    case PAYMENT_TIME:
      if (value == null) {
        unsetPaymentTime();
      } else {
        setPaymentTime((Long)value);
      }
      break;

    case PRODUCT_INFOS:
      if (value == null) {
        unsetProductInfos();
      } else {
        setProductInfos((List<ProductInfoVo>)value);
      }
      break;

    case RESULT_VO:
      if (value == null) {
        unsetResultVo();
      } else {
        setResultVo((com.froad.thrift.vo.ResultVo)value);
      }
      break;

    case CONSIGNEE:
      if (value == null) {
        unsetConsignee();
      } else {
        setConsignee((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case DELIVERY_CORP_ID:
      if (value == null) {
        unsetDeliveryCorpId();
      } else {
        setDeliveryCorpId((String)value);
      }
      break;

    case DELIVERY_CORP_NAME:
      if (value == null) {
        unsetDeliveryCorpName();
      } else {
        setDeliveryCorpName((String)value);
      }
      break;

    case TRACKING_NO:
      if (value == null) {
        unsetTrackingNo();
      } else {
        setTrackingNo((String)value);
      }
      break;

    case SHIPPING_TIME:
      if (value == null) {
        unsetShippingTime();
      } else {
        setShippingTime((Long)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((Long)value);
      }
      break;

    case DELIVERY_STATUS:
      if (value == null) {
        unsetDeliveryStatus();
      } else {
        setDeliveryStatus((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case REFUND_STATE:
      if (value == null) {
        unsetRefundState();
      } else {
        setRefundState((String)value);
      }
      break;

    case SUB_ORDER_ID:
      if (value == null) {
        unsetSubOrderId();
      } else {
        setSubOrderId((String)value);
      }
      break;

    case CUT_POINT:
      if (value == null) {
        unsetCutPoint();
      } else {
        setCutPoint((Double)value);
      }
      break;

    case TOTAL_CASH:
      if (value == null) {
        unsetTotalCash();
      } else {
        setTotalCash((Double)value);
      }
      break;

    case POINT_MONEY:
      if (value == null) {
        unsetPointMoney();
      } else {
        setPointMoney((Double)value);
      }
      break;

    case CUT_MONEY:
      if (value == null) {
        unsetCutMoney();
      } else {
        setCutMoney((Double)value);
      }
      break;

    case CONSUME_MONEY:
      if (value == null) {
        unsetConsumeMoney();
      } else {
        setConsumeMoney((Double)value);
      }
      break;

    case DISCOUNT_MONEY:
      if (value == null) {
        unsetDiscountMoney();
      } else {
        setDiscountMoney((Double)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case OUTLET_IMG:
      if (value == null) {
        unsetOutletImg();
      } else {
        setOutletImg((String)value);
      }
      break;

    case MERCHANT_USER_ID:
      if (value == null) {
        unsetMerchantUserId();
      } else {
        setMerchantUserId((Long)value);
      }
      break;

    case MERCHANT_USER_NAME:
      if (value == null) {
        unsetMerchantUserName();
      } else {
        setMerchantUserName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MEMBER_NAME:
      return getMemberName();

    case MEMBER_CODE:
      return Long.valueOf(getMemberCode());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case SETTLE_STATE:
      return getSettleState();

    case OUTLET_ID:
      return getOutletId();

    case IS_OUTLET_COMMENT:
      return Boolean.valueOf(isIsOutletComment());

    case ORDER_STATUS:
      return getOrderStatus();

    case TOTAL_PRICE:
      return Double.valueOf(getTotalPrice());

    case QUANTITY:
      return Integer.valueOf(getQuantity());

    case PAYMENT_TIME:
      return Long.valueOf(getPaymentTime());

    case PRODUCT_INFOS:
      return getProductInfos();

    case RESULT_VO:
      return getResultVo();

    case CONSIGNEE:
      return getConsignee();

    case ADDRESS:
      return getAddress();

    case PHONE:
      return getPhone();

    case DELIVERY_CORP_ID:
      return getDeliveryCorpId();

    case DELIVERY_CORP_NAME:
      return getDeliveryCorpName();

    case TRACKING_NO:
      return getTrackingNo();

    case SHIPPING_TIME:
      return Long.valueOf(getShippingTime());

    case AREA_ID:
      return Long.valueOf(getAreaId());

    case DELIVERY_STATUS:
      return getDeliveryStatus();

    case MERCHANT_ID:
      return getMerchantId();

    case MERCHANT_NAME:
      return getMerchantName();

    case REFUND_STATE:
      return getRefundState();

    case SUB_ORDER_ID:
      return getSubOrderId();

    case CUT_POINT:
      return Double.valueOf(getCutPoint());

    case TOTAL_CASH:
      return Double.valueOf(getTotalCash());

    case POINT_MONEY:
      return Double.valueOf(getPointMoney());

    case CUT_MONEY:
      return Double.valueOf(getCutMoney());

    case CONSUME_MONEY:
      return Double.valueOf(getConsumeMoney());

    case DISCOUNT_MONEY:
      return Double.valueOf(getDiscountMoney());

    case OUTLET_NAME:
      return getOutletName();

    case OUTLET_IMG:
      return getOutletImg();

    case MERCHANT_USER_ID:
      return Long.valueOf(getMerchantUserId());

    case MERCHANT_USER_NAME:
      return getMerchantUserName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MEMBER_NAME:
      return isSetMemberName();
    case MEMBER_CODE:
      return isSetMemberCode();
    case CREATE_TIME:
      return isSetCreateTime();
    case SETTLE_STATE:
      return isSetSettleState();
    case OUTLET_ID:
      return isSetOutletId();
    case IS_OUTLET_COMMENT:
      return isSetIsOutletComment();
    case ORDER_STATUS:
      return isSetOrderStatus();
    case TOTAL_PRICE:
      return isSetTotalPrice();
    case QUANTITY:
      return isSetQuantity();
    case PAYMENT_TIME:
      return isSetPaymentTime();
    case PRODUCT_INFOS:
      return isSetProductInfos();
    case RESULT_VO:
      return isSetResultVo();
    case CONSIGNEE:
      return isSetConsignee();
    case ADDRESS:
      return isSetAddress();
    case PHONE:
      return isSetPhone();
    case DELIVERY_CORP_ID:
      return isSetDeliveryCorpId();
    case DELIVERY_CORP_NAME:
      return isSetDeliveryCorpName();
    case TRACKING_NO:
      return isSetTrackingNo();
    case SHIPPING_TIME:
      return isSetShippingTime();
    case AREA_ID:
      return isSetAreaId();
    case DELIVERY_STATUS:
      return isSetDeliveryStatus();
    case MERCHANT_ID:
      return isSetMerchantId();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case REFUND_STATE:
      return isSetRefundState();
    case SUB_ORDER_ID:
      return isSetSubOrderId();
    case CUT_POINT:
      return isSetCutPoint();
    case TOTAL_CASH:
      return isSetTotalCash();
    case POINT_MONEY:
      return isSetPointMoney();
    case CUT_MONEY:
      return isSetCutMoney();
    case CONSUME_MONEY:
      return isSetConsumeMoney();
    case DISCOUNT_MONEY:
      return isSetDiscountMoney();
    case OUTLET_NAME:
      return isSetOutletName();
    case OUTLET_IMG:
      return isSetOutletImg();
    case MERCHANT_USER_ID:
      return isSetMerchantUserId();
    case MERCHANT_USER_NAME:
      return isSetMerchantUserName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof GetOrderDetailByMerchantPhoneVoRes)
      return this.equals((GetOrderDetailByMerchantPhoneVoRes)that);
    return false;
  }

  public boolean equals(GetOrderDetailByMerchantPhoneVoRes that) {
    if (that == null)
      return false;

    boolean this_present_memberName = true && this.isSetMemberName();
    boolean that_present_memberName = true && that.isSetMemberName();
    if (this_present_memberName || that_present_memberName) {
      if (!(this_present_memberName && that_present_memberName))
        return false;
      if (!this.memberName.equals(that.memberName))
        return false;
    }

    boolean this_present_memberCode = true;
    boolean that_present_memberCode = true;
    if (this_present_memberCode || that_present_memberCode) {
      if (!(this_present_memberCode && that_present_memberCode))
        return false;
      if (this.memberCode != that.memberCode)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_settleState = true && this.isSetSettleState();
    boolean that_present_settleState = true && that.isSetSettleState();
    if (this_present_settleState || that_present_settleState) {
      if (!(this_present_settleState && that_present_settleState))
        return false;
      if (!this.settleState.equals(that.settleState))
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    boolean this_present_isOutletComment = true;
    boolean that_present_isOutletComment = true;
    if (this_present_isOutletComment || that_present_isOutletComment) {
      if (!(this_present_isOutletComment && that_present_isOutletComment))
        return false;
      if (this.isOutletComment != that.isOutletComment)
        return false;
    }

    boolean this_present_orderStatus = true && this.isSetOrderStatus();
    boolean that_present_orderStatus = true && that.isSetOrderStatus();
    if (this_present_orderStatus || that_present_orderStatus) {
      if (!(this_present_orderStatus && that_present_orderStatus))
        return false;
      if (!this.orderStatus.equals(that.orderStatus))
        return false;
    }

    boolean this_present_totalPrice = true;
    boolean that_present_totalPrice = true;
    if (this_present_totalPrice || that_present_totalPrice) {
      if (!(this_present_totalPrice && that_present_totalPrice))
        return false;
      if (this.totalPrice != that.totalPrice)
        return false;
    }

    boolean this_present_quantity = true;
    boolean that_present_quantity = true;
    if (this_present_quantity || that_present_quantity) {
      if (!(this_present_quantity && that_present_quantity))
        return false;
      if (this.quantity != that.quantity)
        return false;
    }

    boolean this_present_paymentTime = true;
    boolean that_present_paymentTime = true;
    if (this_present_paymentTime || that_present_paymentTime) {
      if (!(this_present_paymentTime && that_present_paymentTime))
        return false;
      if (this.paymentTime != that.paymentTime)
        return false;
    }

    boolean this_present_productInfos = true && this.isSetProductInfos();
    boolean that_present_productInfos = true && that.isSetProductInfos();
    if (this_present_productInfos || that_present_productInfos) {
      if (!(this_present_productInfos && that_present_productInfos))
        return false;
      if (!this.productInfos.equals(that.productInfos))
        return false;
    }

    boolean this_present_resultVo = true && this.isSetResultVo();
    boolean that_present_resultVo = true && that.isSetResultVo();
    if (this_present_resultVo || that_present_resultVo) {
      if (!(this_present_resultVo && that_present_resultVo))
        return false;
      if (!this.resultVo.equals(that.resultVo))
        return false;
    }

    boolean this_present_consignee = true && this.isSetConsignee();
    boolean that_present_consignee = true && that.isSetConsignee();
    if (this_present_consignee || that_present_consignee) {
      if (!(this_present_consignee && that_present_consignee))
        return false;
      if (!this.consignee.equals(that.consignee))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_deliveryCorpId = true && this.isSetDeliveryCorpId();
    boolean that_present_deliveryCorpId = true && that.isSetDeliveryCorpId();
    if (this_present_deliveryCorpId || that_present_deliveryCorpId) {
      if (!(this_present_deliveryCorpId && that_present_deliveryCorpId))
        return false;
      if (!this.deliveryCorpId.equals(that.deliveryCorpId))
        return false;
    }

    boolean this_present_deliveryCorpName = true && this.isSetDeliveryCorpName();
    boolean that_present_deliveryCorpName = true && that.isSetDeliveryCorpName();
    if (this_present_deliveryCorpName || that_present_deliveryCorpName) {
      if (!(this_present_deliveryCorpName && that_present_deliveryCorpName))
        return false;
      if (!this.deliveryCorpName.equals(that.deliveryCorpName))
        return false;
    }

    boolean this_present_trackingNo = true && this.isSetTrackingNo();
    boolean that_present_trackingNo = true && that.isSetTrackingNo();
    if (this_present_trackingNo || that_present_trackingNo) {
      if (!(this_present_trackingNo && that_present_trackingNo))
        return false;
      if (!this.trackingNo.equals(that.trackingNo))
        return false;
    }

    boolean this_present_shippingTime = true;
    boolean that_present_shippingTime = true;
    if (this_present_shippingTime || that_present_shippingTime) {
      if (!(this_present_shippingTime && that_present_shippingTime))
        return false;
      if (this.shippingTime != that.shippingTime)
        return false;
    }

    boolean this_present_areaId = true;
    boolean that_present_areaId = true;
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (this.areaId != that.areaId)
        return false;
    }

    boolean this_present_deliveryStatus = true && this.isSetDeliveryStatus();
    boolean that_present_deliveryStatus = true && that.isSetDeliveryStatus();
    if (this_present_deliveryStatus || that_present_deliveryStatus) {
      if (!(this_present_deliveryStatus && that_present_deliveryStatus))
        return false;
      if (!this.deliveryStatus.equals(that.deliveryStatus))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_refundState = true && this.isSetRefundState();
    boolean that_present_refundState = true && that.isSetRefundState();
    if (this_present_refundState || that_present_refundState) {
      if (!(this_present_refundState && that_present_refundState))
        return false;
      if (!this.refundState.equals(that.refundState))
        return false;
    }

    boolean this_present_subOrderId = true && this.isSetSubOrderId();
    boolean that_present_subOrderId = true && that.isSetSubOrderId();
    if (this_present_subOrderId || that_present_subOrderId) {
      if (!(this_present_subOrderId && that_present_subOrderId))
        return false;
      if (!this.subOrderId.equals(that.subOrderId))
        return false;
    }

    boolean this_present_cutPoint = true;
    boolean that_present_cutPoint = true;
    if (this_present_cutPoint || that_present_cutPoint) {
      if (!(this_present_cutPoint && that_present_cutPoint))
        return false;
      if (this.cutPoint != that.cutPoint)
        return false;
    }

    boolean this_present_totalCash = true;
    boolean that_present_totalCash = true;
    if (this_present_totalCash || that_present_totalCash) {
      if (!(this_present_totalCash && that_present_totalCash))
        return false;
      if (this.totalCash != that.totalCash)
        return false;
    }

    boolean this_present_pointMoney = true;
    boolean that_present_pointMoney = true;
    if (this_present_pointMoney || that_present_pointMoney) {
      if (!(this_present_pointMoney && that_present_pointMoney))
        return false;
      if (this.pointMoney != that.pointMoney)
        return false;
    }

    boolean this_present_cutMoney = true;
    boolean that_present_cutMoney = true;
    if (this_present_cutMoney || that_present_cutMoney) {
      if (!(this_present_cutMoney && that_present_cutMoney))
        return false;
      if (this.cutMoney != that.cutMoney)
        return false;
    }

    boolean this_present_consumeMoney = true;
    boolean that_present_consumeMoney = true;
    if (this_present_consumeMoney || that_present_consumeMoney) {
      if (!(this_present_consumeMoney && that_present_consumeMoney))
        return false;
      if (this.consumeMoney != that.consumeMoney)
        return false;
    }

    boolean this_present_discountMoney = true;
    boolean that_present_discountMoney = true;
    if (this_present_discountMoney || that_present_discountMoney) {
      if (!(this_present_discountMoney && that_present_discountMoney))
        return false;
      if (this.discountMoney != that.discountMoney)
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_outletImg = true && this.isSetOutletImg();
    boolean that_present_outletImg = true && that.isSetOutletImg();
    if (this_present_outletImg || that_present_outletImg) {
      if (!(this_present_outletImg && that_present_outletImg))
        return false;
      if (!this.outletImg.equals(that.outletImg))
        return false;
    }

    boolean this_present_merchantUserId = true;
    boolean that_present_merchantUserId = true;
    if (this_present_merchantUserId || that_present_merchantUserId) {
      if (!(this_present_merchantUserId && that_present_merchantUserId))
        return false;
      if (this.merchantUserId != that.merchantUserId)
        return false;
    }

    boolean this_present_merchantUserName = true && this.isSetMerchantUserName();
    boolean that_present_merchantUserName = true && that.isSetMerchantUserName();
    if (this_present_merchantUserName || that_present_merchantUserName) {
      if (!(this_present_merchantUserName && that_present_merchantUserName))
        return false;
      if (!this.merchantUserName.equals(that.merchantUserName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_memberName = true && (isSetMemberName());
    list.add(present_memberName);
    if (present_memberName)
      list.add(memberName);

    boolean present_memberCode = true;
    list.add(present_memberCode);
    if (present_memberCode)
      list.add(memberCode);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_settleState = true && (isSetSettleState());
    list.add(present_settleState);
    if (present_settleState)
      list.add(settleState);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    boolean present_isOutletComment = true;
    list.add(present_isOutletComment);
    if (present_isOutletComment)
      list.add(isOutletComment);

    boolean present_orderStatus = true && (isSetOrderStatus());
    list.add(present_orderStatus);
    if (present_orderStatus)
      list.add(orderStatus);

    boolean present_totalPrice = true;
    list.add(present_totalPrice);
    if (present_totalPrice)
      list.add(totalPrice);

    boolean present_quantity = true;
    list.add(present_quantity);
    if (present_quantity)
      list.add(quantity);

    boolean present_paymentTime = true;
    list.add(present_paymentTime);
    if (present_paymentTime)
      list.add(paymentTime);

    boolean present_productInfos = true && (isSetProductInfos());
    list.add(present_productInfos);
    if (present_productInfos)
      list.add(productInfos);

    boolean present_resultVo = true && (isSetResultVo());
    list.add(present_resultVo);
    if (present_resultVo)
      list.add(resultVo);

    boolean present_consignee = true && (isSetConsignee());
    list.add(present_consignee);
    if (present_consignee)
      list.add(consignee);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_deliveryCorpId = true && (isSetDeliveryCorpId());
    list.add(present_deliveryCorpId);
    if (present_deliveryCorpId)
      list.add(deliveryCorpId);

    boolean present_deliveryCorpName = true && (isSetDeliveryCorpName());
    list.add(present_deliveryCorpName);
    if (present_deliveryCorpName)
      list.add(deliveryCorpName);

    boolean present_trackingNo = true && (isSetTrackingNo());
    list.add(present_trackingNo);
    if (present_trackingNo)
      list.add(trackingNo);

    boolean present_shippingTime = true;
    list.add(present_shippingTime);
    if (present_shippingTime)
      list.add(shippingTime);

    boolean present_areaId = true;
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_deliveryStatus = true && (isSetDeliveryStatus());
    list.add(present_deliveryStatus);
    if (present_deliveryStatus)
      list.add(deliveryStatus);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_refundState = true && (isSetRefundState());
    list.add(present_refundState);
    if (present_refundState)
      list.add(refundState);

    boolean present_subOrderId = true && (isSetSubOrderId());
    list.add(present_subOrderId);
    if (present_subOrderId)
      list.add(subOrderId);

    boolean present_cutPoint = true;
    list.add(present_cutPoint);
    if (present_cutPoint)
      list.add(cutPoint);

    boolean present_totalCash = true;
    list.add(present_totalCash);
    if (present_totalCash)
      list.add(totalCash);

    boolean present_pointMoney = true;
    list.add(present_pointMoney);
    if (present_pointMoney)
      list.add(pointMoney);

    boolean present_cutMoney = true;
    list.add(present_cutMoney);
    if (present_cutMoney)
      list.add(cutMoney);

    boolean present_consumeMoney = true;
    list.add(present_consumeMoney);
    if (present_consumeMoney)
      list.add(consumeMoney);

    boolean present_discountMoney = true;
    list.add(present_discountMoney);
    if (present_discountMoney)
      list.add(discountMoney);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_outletImg = true && (isSetOutletImg());
    list.add(present_outletImg);
    if (present_outletImg)
      list.add(outletImg);

    boolean present_merchantUserId = true;
    list.add(present_merchantUserId);
    if (present_merchantUserId)
      list.add(merchantUserId);

    boolean present_merchantUserName = true && (isSetMerchantUserName());
    list.add(present_merchantUserName);
    if (present_merchantUserName)
      list.add(merchantUserName);

    return list.hashCode();
  }

  @Override
  public int compareTo(GetOrderDetailByMerchantPhoneVoRes other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMemberName()).compareTo(other.isSetMemberName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberName, other.memberName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberCode()).compareTo(other.isSetMemberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberCode, other.memberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleState()).compareTo(other.isSetSettleState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleState, other.settleState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsOutletComment()).compareTo(other.isSetIsOutletComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsOutletComment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isOutletComment, other.isOutletComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderStatus()).compareTo(other.isSetOrderStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderStatus, other.orderStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPrice()).compareTo(other.isSetTotalPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPrice, other.totalPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuantity()).compareTo(other.isSetQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quantity, other.quantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentTime()).compareTo(other.isSetPaymentTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentTime, other.paymentTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductInfos()).compareTo(other.isSetProductInfos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductInfos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productInfos, other.productInfos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultVo()).compareTo(other.isSetResultVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultVo, other.resultVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsignee()).compareTo(other.isSetConsignee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsignee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consignee, other.consignee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryCorpId()).compareTo(other.isSetDeliveryCorpId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryCorpId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCorpId, other.deliveryCorpId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryCorpName()).compareTo(other.isSetDeliveryCorpName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryCorpName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryCorpName, other.deliveryCorpName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTrackingNo()).compareTo(other.isSetTrackingNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrackingNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trackingNo, other.trackingNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShippingTime()).compareTo(other.isSetShippingTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShippingTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shippingTime, other.shippingTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryStatus()).compareTo(other.isSetDeliveryStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryStatus, other.deliveryStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundState()).compareTo(other.isSetRefundState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundState, other.refundState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubOrderId()).compareTo(other.isSetSubOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subOrderId, other.subOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutPoint()).compareTo(other.isSetCutPoint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutPoint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutPoint, other.cutPoint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalCash()).compareTo(other.isSetTotalCash());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalCash()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalCash, other.totalCash);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPointMoney()).compareTo(other.isSetPointMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPointMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pointMoney, other.pointMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutMoney()).compareTo(other.isSetCutMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutMoney, other.cutMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConsumeMoney()).compareTo(other.isSetConsumeMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsumeMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.consumeMoney, other.consumeMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiscountMoney()).compareTo(other.isSetDiscountMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiscountMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.discountMoney, other.discountMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletImg()).compareTo(other.isSetOutletImg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletImg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletImg, other.outletImg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantUserId()).compareTo(other.isSetMerchantUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantUserId, other.merchantUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantUserName()).compareTo(other.isSetMerchantUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantUserName, other.merchantUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("GetOrderDetailByMerchantPhoneVoRes(");
    boolean first = true;

    sb.append("memberName:");
    if (this.memberName == null) {
      sb.append("null");
    } else {
      sb.append(this.memberName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberCode:");
    sb.append(this.memberCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleState:");
    if (this.settleState == null) {
      sb.append("null");
    } else {
      sb.append(this.settleState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletId:");
    if (this.outletId == null) {
      sb.append("null");
    } else {
      sb.append(this.outletId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isOutletComment:");
    sb.append(this.isOutletComment);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderStatus:");
    if (this.orderStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.orderStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPrice:");
    sb.append(this.totalPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("quantity:");
    sb.append(this.quantity);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentTime:");
    sb.append(this.paymentTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productInfos:");
    if (this.productInfos == null) {
      sb.append("null");
    } else {
      sb.append(this.productInfos);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resultVo:");
    if (this.resultVo == null) {
      sb.append("null");
    } else {
      sb.append(this.resultVo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("consignee:");
    if (this.consignee == null) {
      sb.append("null");
    } else {
      sb.append(this.consignee);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryCorpId:");
    if (this.deliveryCorpId == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryCorpId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryCorpName:");
    if (this.deliveryCorpName == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryCorpName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("trackingNo:");
    if (this.trackingNo == null) {
      sb.append("null");
    } else {
      sb.append(this.trackingNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shippingTime:");
    sb.append(this.shippingTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("areaId:");
    sb.append(this.areaId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryStatus:");
    if (this.deliveryStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundState:");
    if (this.refundState == null) {
      sb.append("null");
    } else {
      sb.append(this.refundState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("subOrderId:");
    if (this.subOrderId == null) {
      sb.append("null");
    } else {
      sb.append(this.subOrderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutPoint:");
    sb.append(this.cutPoint);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalCash:");
    sb.append(this.totalCash);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pointMoney:");
    sb.append(this.pointMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutMoney:");
    sb.append(this.cutMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("consumeMoney:");
    sb.append(this.consumeMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("discountMoney:");
    sb.append(this.discountMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletName:");
    if (this.outletName == null) {
      sb.append("null");
    } else {
      sb.append(this.outletName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletImg:");
    if (this.outletImg == null) {
      sb.append("null");
    } else {
      sb.append(this.outletImg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantUserId:");
    sb.append(this.merchantUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantUserName:");
    if (this.merchantUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantUserName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (resultVo != null) {
      resultVo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GetOrderDetailByMerchantPhoneVoResStandardSchemeFactory implements SchemeFactory {
    public GetOrderDetailByMerchantPhoneVoResStandardScheme getScheme() {
      return new GetOrderDetailByMerchantPhoneVoResStandardScheme();
    }
  }

  private static class GetOrderDetailByMerchantPhoneVoResStandardScheme extends StandardScheme<GetOrderDetailByMerchantPhoneVoRes> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GetOrderDetailByMerchantPhoneVoRes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MEMBER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberName = iprot.readString();
              struct.setMemberNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MEMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.memberCode = iprot.readI64();
              struct.setMemberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SETTLE_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleState = iprot.readString();
              struct.setSettleStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // IS_OUTLET_COMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isOutletComment = iprot.readBool();
              struct.setIsOutletCommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORDER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderStatus = iprot.readString();
              struct.setOrderStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TOTAL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalPrice = iprot.readDouble();
              struct.setTotalPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.quantity = iprot.readI32();
              struct.setQuantityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PAYMENT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.paymentTime = iprot.readI64();
              struct.setPaymentTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PRODUCT_INFOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                struct.productInfos = new ArrayList<ProductInfoVo>(_list32.size);
                ProductInfoVo _elem33;
                for (int _i34 = 0; _i34 < _list32.size; ++_i34)
                {
                  _elem33 = new ProductInfoVo();
                  _elem33.read(iprot);
                  struct.productInfos.add(_elem33);
                }
                iprot.readListEnd();
              }
              struct.setProductInfosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // RESULT_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.resultVo = new com.froad.thrift.vo.ResultVo();
              struct.resultVo.read(iprot);
              struct.setResultVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CONSIGNEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.consignee = iprot.readString();
              struct.setConsigneeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // DELIVERY_CORP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryCorpId = iprot.readString();
              struct.setDeliveryCorpIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // DELIVERY_CORP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryCorpName = iprot.readString();
              struct.setDeliveryCorpNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // TRACKING_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.trackingNo = iprot.readString();
              struct.setTrackingNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // SHIPPING_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.shippingTime = iprot.readI64();
              struct.setShippingTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.areaId = iprot.readI64();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // DELIVERY_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryStatus = iprot.readString();
              struct.setDeliveryStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // REFUND_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundState = iprot.readString();
              struct.setRefundStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // SUB_ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subOrderId = iprot.readString();
              struct.setSubOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // CUT_POINT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.cutPoint = iprot.readDouble();
              struct.setCutPointIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // TOTAL_CASH
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalCash = iprot.readDouble();
              struct.setTotalCashIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // POINT_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.pointMoney = iprot.readDouble();
              struct.setPointMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // CUT_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.cutMoney = iprot.readDouble();
              struct.setCutMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // CONSUME_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.consumeMoney = iprot.readDouble();
              struct.setConsumeMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // DISCOUNT_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.discountMoney = iprot.readDouble();
              struct.setDiscountMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // OUTLET_IMG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletImg = iprot.readString();
              struct.setOutletImgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // MERCHANT_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.merchantUserId = iprot.readI64();
              struct.setMerchantUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // MERCHANT_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantUserName = iprot.readString();
              struct.setMerchantUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GetOrderDetailByMerchantPhoneVoRes struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.memberName != null) {
        oprot.writeFieldBegin(MEMBER_NAME_FIELD_DESC);
        oprot.writeString(struct.memberName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MEMBER_CODE_FIELD_DESC);
      oprot.writeI64(struct.memberCode);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.settleState != null) {
        oprot.writeFieldBegin(SETTLE_STATE_FIELD_DESC);
        oprot.writeString(struct.settleState);
        oprot.writeFieldEnd();
      }
      if (struct.outletId != null) {
        oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
        oprot.writeString(struct.outletId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_OUTLET_COMMENT_FIELD_DESC);
      oprot.writeBool(struct.isOutletComment);
      oprot.writeFieldEnd();
      if (struct.orderStatus != null) {
        oprot.writeFieldBegin(ORDER_STATUS_FIELD_DESC);
        oprot.writeString(struct.orderStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.totalPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(QUANTITY_FIELD_DESC);
      oprot.writeI32(struct.quantity);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAYMENT_TIME_FIELD_DESC);
      oprot.writeI64(struct.paymentTime);
      oprot.writeFieldEnd();
      if (struct.productInfos != null) {
        oprot.writeFieldBegin(PRODUCT_INFOS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.productInfos.size()));
          for (ProductInfoVo _iter35 : struct.productInfos)
          {
            _iter35.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.resultVo != null) {
        oprot.writeFieldBegin(RESULT_VO_FIELD_DESC);
        struct.resultVo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.consignee != null) {
        oprot.writeFieldBegin(CONSIGNEE_FIELD_DESC);
        oprot.writeString(struct.consignee);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        oprot.writeString(struct.address);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.deliveryCorpId != null) {
        oprot.writeFieldBegin(DELIVERY_CORP_ID_FIELD_DESC);
        oprot.writeString(struct.deliveryCorpId);
        oprot.writeFieldEnd();
      }
      if (struct.deliveryCorpName != null) {
        oprot.writeFieldBegin(DELIVERY_CORP_NAME_FIELD_DESC);
        oprot.writeString(struct.deliveryCorpName);
        oprot.writeFieldEnd();
      }
      if (struct.trackingNo != null) {
        oprot.writeFieldBegin(TRACKING_NO_FIELD_DESC);
        oprot.writeString(struct.trackingNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SHIPPING_TIME_FIELD_DESC);
      oprot.writeI64(struct.shippingTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
      oprot.writeI64(struct.areaId);
      oprot.writeFieldEnd();
      if (struct.deliveryStatus != null) {
        oprot.writeFieldBegin(DELIVERY_STATUS_FIELD_DESC);
        oprot.writeString(struct.deliveryStatus);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      if (struct.refundState != null) {
        oprot.writeFieldBegin(REFUND_STATE_FIELD_DESC);
        oprot.writeString(struct.refundState);
        oprot.writeFieldEnd();
      }
      if (struct.subOrderId != null) {
        oprot.writeFieldBegin(SUB_ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.subOrderId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CUT_POINT_FIELD_DESC);
      oprot.writeDouble(struct.cutPoint);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_CASH_FIELD_DESC);
      oprot.writeDouble(struct.totalCash);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(POINT_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.pointMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CUT_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.cutMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CONSUME_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.consumeMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DISCOUNT_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.discountMoney);
      oprot.writeFieldEnd();
      if (struct.outletName != null) {
        oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
        oprot.writeString(struct.outletName);
        oprot.writeFieldEnd();
      }
      if (struct.outletImg != null) {
        oprot.writeFieldBegin(OUTLET_IMG_FIELD_DESC);
        oprot.writeString(struct.outletImg);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MERCHANT_USER_ID_FIELD_DESC);
      oprot.writeI64(struct.merchantUserId);
      oprot.writeFieldEnd();
      if (struct.merchantUserName != null) {
        oprot.writeFieldBegin(MERCHANT_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantUserName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GetOrderDetailByMerchantPhoneVoResTupleSchemeFactory implements SchemeFactory {
    public GetOrderDetailByMerchantPhoneVoResTupleScheme getScheme() {
      return new GetOrderDetailByMerchantPhoneVoResTupleScheme();
    }
  }

  private static class GetOrderDetailByMerchantPhoneVoResTupleScheme extends TupleScheme<GetOrderDetailByMerchantPhoneVoRes> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GetOrderDetailByMerchantPhoneVoRes struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMemberName()) {
        optionals.set(0);
      }
      if (struct.isSetMemberCode()) {
        optionals.set(1);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(2);
      }
      if (struct.isSetSettleState()) {
        optionals.set(3);
      }
      if (struct.isSetOutletId()) {
        optionals.set(4);
      }
      if (struct.isSetIsOutletComment()) {
        optionals.set(5);
      }
      if (struct.isSetOrderStatus()) {
        optionals.set(6);
      }
      if (struct.isSetTotalPrice()) {
        optionals.set(7);
      }
      if (struct.isSetQuantity()) {
        optionals.set(8);
      }
      if (struct.isSetPaymentTime()) {
        optionals.set(9);
      }
      if (struct.isSetProductInfos()) {
        optionals.set(10);
      }
      if (struct.isSetResultVo()) {
        optionals.set(11);
      }
      if (struct.isSetConsignee()) {
        optionals.set(12);
      }
      if (struct.isSetAddress()) {
        optionals.set(13);
      }
      if (struct.isSetPhone()) {
        optionals.set(14);
      }
      if (struct.isSetDeliveryCorpId()) {
        optionals.set(15);
      }
      if (struct.isSetDeliveryCorpName()) {
        optionals.set(16);
      }
      if (struct.isSetTrackingNo()) {
        optionals.set(17);
      }
      if (struct.isSetShippingTime()) {
        optionals.set(18);
      }
      if (struct.isSetAreaId()) {
        optionals.set(19);
      }
      if (struct.isSetDeliveryStatus()) {
        optionals.set(20);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(21);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(22);
      }
      if (struct.isSetRefundState()) {
        optionals.set(23);
      }
      if (struct.isSetSubOrderId()) {
        optionals.set(24);
      }
      if (struct.isSetCutPoint()) {
        optionals.set(25);
      }
      if (struct.isSetTotalCash()) {
        optionals.set(26);
      }
      if (struct.isSetPointMoney()) {
        optionals.set(27);
      }
      if (struct.isSetCutMoney()) {
        optionals.set(28);
      }
      if (struct.isSetConsumeMoney()) {
        optionals.set(29);
      }
      if (struct.isSetDiscountMoney()) {
        optionals.set(30);
      }
      if (struct.isSetOutletName()) {
        optionals.set(31);
      }
      if (struct.isSetOutletImg()) {
        optionals.set(32);
      }
      if (struct.isSetMerchantUserId()) {
        optionals.set(33);
      }
      if (struct.isSetMerchantUserName()) {
        optionals.set(34);
      }
      oprot.writeBitSet(optionals, 35);
      if (struct.isSetMemberName()) {
        oprot.writeString(struct.memberName);
      }
      if (struct.isSetMemberCode()) {
        oprot.writeI64(struct.memberCode);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetSettleState()) {
        oprot.writeString(struct.settleState);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
      if (struct.isSetIsOutletComment()) {
        oprot.writeBool(struct.isOutletComment);
      }
      if (struct.isSetOrderStatus()) {
        oprot.writeString(struct.orderStatus);
      }
      if (struct.isSetTotalPrice()) {
        oprot.writeDouble(struct.totalPrice);
      }
      if (struct.isSetQuantity()) {
        oprot.writeI32(struct.quantity);
      }
      if (struct.isSetPaymentTime()) {
        oprot.writeI64(struct.paymentTime);
      }
      if (struct.isSetProductInfos()) {
        {
          oprot.writeI32(struct.productInfos.size());
          for (ProductInfoVo _iter36 : struct.productInfos)
          {
            _iter36.write(oprot);
          }
        }
      }
      if (struct.isSetResultVo()) {
        struct.resultVo.write(oprot);
      }
      if (struct.isSetConsignee()) {
        oprot.writeString(struct.consignee);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetDeliveryCorpId()) {
        oprot.writeString(struct.deliveryCorpId);
      }
      if (struct.isSetDeliveryCorpName()) {
        oprot.writeString(struct.deliveryCorpName);
      }
      if (struct.isSetTrackingNo()) {
        oprot.writeString(struct.trackingNo);
      }
      if (struct.isSetShippingTime()) {
        oprot.writeI64(struct.shippingTime);
      }
      if (struct.isSetAreaId()) {
        oprot.writeI64(struct.areaId);
      }
      if (struct.isSetDeliveryStatus()) {
        oprot.writeString(struct.deliveryStatus);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetRefundState()) {
        oprot.writeString(struct.refundState);
      }
      if (struct.isSetSubOrderId()) {
        oprot.writeString(struct.subOrderId);
      }
      if (struct.isSetCutPoint()) {
        oprot.writeDouble(struct.cutPoint);
      }
      if (struct.isSetTotalCash()) {
        oprot.writeDouble(struct.totalCash);
      }
      if (struct.isSetPointMoney()) {
        oprot.writeDouble(struct.pointMoney);
      }
      if (struct.isSetCutMoney()) {
        oprot.writeDouble(struct.cutMoney);
      }
      if (struct.isSetConsumeMoney()) {
        oprot.writeDouble(struct.consumeMoney);
      }
      if (struct.isSetDiscountMoney()) {
        oprot.writeDouble(struct.discountMoney);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetOutletImg()) {
        oprot.writeString(struct.outletImg);
      }
      if (struct.isSetMerchantUserId()) {
        oprot.writeI64(struct.merchantUserId);
      }
      if (struct.isSetMerchantUserName()) {
        oprot.writeString(struct.merchantUserName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GetOrderDetailByMerchantPhoneVoRes struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(35);
      if (incoming.get(0)) {
        struct.memberName = iprot.readString();
        struct.setMemberNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.memberCode = iprot.readI64();
        struct.setMemberCodeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.settleState = iprot.readString();
        struct.setSettleStateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.isOutletComment = iprot.readBool();
        struct.setIsOutletCommentIsSet(true);
      }
      if (incoming.get(6)) {
        struct.orderStatus = iprot.readString();
        struct.setOrderStatusIsSet(true);
      }
      if (incoming.get(7)) {
        struct.totalPrice = iprot.readDouble();
        struct.setTotalPriceIsSet(true);
      }
      if (incoming.get(8)) {
        struct.quantity = iprot.readI32();
        struct.setQuantityIsSet(true);
      }
      if (incoming.get(9)) {
        struct.paymentTime = iprot.readI64();
        struct.setPaymentTimeIsSet(true);
      }
      if (incoming.get(10)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.productInfos = new ArrayList<ProductInfoVo>(_list37.size);
          ProductInfoVo _elem38;
          for (int _i39 = 0; _i39 < _list37.size; ++_i39)
          {
            _elem38 = new ProductInfoVo();
            _elem38.read(iprot);
            struct.productInfos.add(_elem38);
          }
        }
        struct.setProductInfosIsSet(true);
      }
      if (incoming.get(11)) {
        struct.resultVo = new com.froad.thrift.vo.ResultVo();
        struct.resultVo.read(iprot);
        struct.setResultVoIsSet(true);
      }
      if (incoming.get(12)) {
        struct.consignee = iprot.readString();
        struct.setConsigneeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(14)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(15)) {
        struct.deliveryCorpId = iprot.readString();
        struct.setDeliveryCorpIdIsSet(true);
      }
      if (incoming.get(16)) {
        struct.deliveryCorpName = iprot.readString();
        struct.setDeliveryCorpNameIsSet(true);
      }
      if (incoming.get(17)) {
        struct.trackingNo = iprot.readString();
        struct.setTrackingNoIsSet(true);
      }
      if (incoming.get(18)) {
        struct.shippingTime = iprot.readI64();
        struct.setShippingTimeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.areaId = iprot.readI64();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(20)) {
        struct.deliveryStatus = iprot.readString();
        struct.setDeliveryStatusIsSet(true);
      }
      if (incoming.get(21)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(22)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(23)) {
        struct.refundState = iprot.readString();
        struct.setRefundStateIsSet(true);
      }
      if (incoming.get(24)) {
        struct.subOrderId = iprot.readString();
        struct.setSubOrderIdIsSet(true);
      }
      if (incoming.get(25)) {
        struct.cutPoint = iprot.readDouble();
        struct.setCutPointIsSet(true);
      }
      if (incoming.get(26)) {
        struct.totalCash = iprot.readDouble();
        struct.setTotalCashIsSet(true);
      }
      if (incoming.get(27)) {
        struct.pointMoney = iprot.readDouble();
        struct.setPointMoneyIsSet(true);
      }
      if (incoming.get(28)) {
        struct.cutMoney = iprot.readDouble();
        struct.setCutMoneyIsSet(true);
      }
      if (incoming.get(29)) {
        struct.consumeMoney = iprot.readDouble();
        struct.setConsumeMoneyIsSet(true);
      }
      if (incoming.get(30)) {
        struct.discountMoney = iprot.readDouble();
        struct.setDiscountMoneyIsSet(true);
      }
      if (incoming.get(31)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(32)) {
        struct.outletImg = iprot.readString();
        struct.setOutletImgIsSet(true);
      }
      if (incoming.get(33)) {
        struct.merchantUserId = iprot.readI64();
        struct.setMerchantUserIdIsSet(true);
      }
      if (incoming.get(34)) {
        struct.merchantUserName = iprot.readString();
        struct.setMerchantUserNameIsSet(true);
      }
    }
  }

}

