/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商品审核信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ProductAuditVo implements org.apache.thrift.TBase<ProductAuditVo, ProductAuditVo._Fields>, java.io.Serializable, Cloneable, Comparable<ProductAuditVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProductAuditVo");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AUDIT_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditOrgCode", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField AUDIT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditState", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField AUDIT_STAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStage", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField AUDIT_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStaff", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField AUDIT_ORG_FIELD_DESC = new org.apache.thrift.protocol.TField("auditOrg", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField AUDIT_COMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("auditComment", org.apache.thrift.protocol.TType.STRING, (short)11);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProductAuditVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProductAuditVoTupleSchemeFactory());
  }

  /**
   * 商品Id
   */
  public String productId; // required
  /**
   * 客户端id
   */
  public String clientId; // required
  /**
   * 商户ID
   */
  public String merchantId; // required
  /**
   * 审核机构代码
   */
  public String auditOrgCode; // required
  /**
   * 机构代码
   */
  public String orgCode; // required
  /**
   * 商品审核状态("0待审核",1审核通过,2审核不通过,3未提交)
   */
  public String auditState; // required
  /**
   * 审核步骤
   */
  public String auditStage; // required
  /**
   * 审核人
   */
  public String auditStaff; // required
  /**
   * 银行用户所属机构代码-审核人所属机构编号
   */
  public String auditOrg; // required
  /**
   * 审核备注
   */
  public String auditComment; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商品Id
     */
    PRODUCT_ID((short)1, "productId"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)3, "merchantId"),
    /**
     * 审核机构代码
     */
    AUDIT_ORG_CODE((short)4, "auditOrgCode"),
    /**
     * 机构代码
     */
    ORG_CODE((short)6, "orgCode"),
    /**
     * 商品审核状态("0待审核",1审核通过,2审核不通过,3未提交)
     */
    AUDIT_STATE((short)7, "auditState"),
    /**
     * 审核步骤
     */
    AUDIT_STAGE((short)8, "auditStage"),
    /**
     * 审核人
     */
    AUDIT_STAFF((short)9, "auditStaff"),
    /**
     * 银行用户所属机构代码-审核人所属机构编号
     */
    AUDIT_ORG((short)10, "auditOrg"),
    /**
     * 审核备注
     */
    AUDIT_COMMENT((short)11, "auditComment");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // MERCHANT_ID
          return MERCHANT_ID;
        case 4: // AUDIT_ORG_CODE
          return AUDIT_ORG_CODE;
        case 6: // ORG_CODE
          return ORG_CODE;
        case 7: // AUDIT_STATE
          return AUDIT_STATE;
        case 8: // AUDIT_STAGE
          return AUDIT_STAGE;
        case 9: // AUDIT_STAFF
          return AUDIT_STAFF;
        case 10: // AUDIT_ORG
          return AUDIT_ORG;
        case 11: // AUDIT_COMMENT
          return AUDIT_COMMENT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditOrgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STATE, new org.apache.thrift.meta_data.FieldMetaData("auditState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STAGE, new org.apache.thrift.meta_data.FieldMetaData("auditStage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STAFF, new org.apache.thrift.meta_data.FieldMetaData("auditStaff", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_ORG, new org.apache.thrift.meta_data.FieldMetaData("auditOrg", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_COMMENT, new org.apache.thrift.meta_data.FieldMetaData("auditComment", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProductAuditVo.class, metaDataMap);
  }

  public ProductAuditVo() {
  }

  public ProductAuditVo(
    String productId,
    String clientId,
    String merchantId,
    String auditOrgCode,
    String orgCode,
    String auditState,
    String auditStage,
    String auditStaff,
    String auditOrg,
    String auditComment)
  {
    this();
    this.productId = productId;
    this.clientId = clientId;
    this.merchantId = merchantId;
    this.auditOrgCode = auditOrgCode;
    this.orgCode = orgCode;
    this.auditState = auditState;
    this.auditStage = auditStage;
    this.auditStaff = auditStaff;
    this.auditOrg = auditOrg;
    this.auditComment = auditComment;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProductAuditVo(ProductAuditVo other) {
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetAuditOrgCode()) {
      this.auditOrgCode = other.auditOrgCode;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetAuditState()) {
      this.auditState = other.auditState;
    }
    if (other.isSetAuditStage()) {
      this.auditStage = other.auditStage;
    }
    if (other.isSetAuditStaff()) {
      this.auditStaff = other.auditStaff;
    }
    if (other.isSetAuditOrg()) {
      this.auditOrg = other.auditOrg;
    }
    if (other.isSetAuditComment()) {
      this.auditComment = other.auditComment;
    }
  }

  public ProductAuditVo deepCopy() {
    return new ProductAuditVo(this);
  }

  @Override
  public void clear() {
    this.productId = null;
    this.clientId = null;
    this.merchantId = null;
    this.auditOrgCode = null;
    this.orgCode = null;
    this.auditState = null;
    this.auditStage = null;
    this.auditStaff = null;
    this.auditOrg = null;
    this.auditComment = null;
  }

  /**
   * 商品Id
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品Id
   */
  public ProductAuditVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public ProductAuditVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public ProductAuditVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 审核机构代码
   */
  public String getAuditOrgCode() {
    return this.auditOrgCode;
  }

  /**
   * 审核机构代码
   */
  public ProductAuditVo setAuditOrgCode(String auditOrgCode) {
    this.auditOrgCode = auditOrgCode;
    return this;
  }

  public void unsetAuditOrgCode() {
    this.auditOrgCode = null;
  }

  /** Returns true if field auditOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditOrgCode() {
    return this.auditOrgCode != null;
  }

  public void setAuditOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditOrgCode = null;
    }
  }

  /**
   * 机构代码
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 机构代码
   */
  public ProductAuditVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 商品审核状态("0待审核",1审核通过,2审核不通过,3未提交)
   */
  public String getAuditState() {
    return this.auditState;
  }

  /**
   * 商品审核状态("0待审核",1审核通过,2审核不通过,3未提交)
   */
  public ProductAuditVo setAuditState(String auditState) {
    this.auditState = auditState;
    return this;
  }

  public void unsetAuditState() {
    this.auditState = null;
  }

  /** Returns true if field auditState is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditState() {
    return this.auditState != null;
  }

  public void setAuditStateIsSet(boolean value) {
    if (!value) {
      this.auditState = null;
    }
  }

  /**
   * 审核步骤
   */
  public String getAuditStage() {
    return this.auditStage;
  }

  /**
   * 审核步骤
   */
  public ProductAuditVo setAuditStage(String auditStage) {
    this.auditStage = auditStage;
    return this;
  }

  public void unsetAuditStage() {
    this.auditStage = null;
  }

  /** Returns true if field auditStage is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStage() {
    return this.auditStage != null;
  }

  public void setAuditStageIsSet(boolean value) {
    if (!value) {
      this.auditStage = null;
    }
  }

  /**
   * 审核人
   */
  public String getAuditStaff() {
    return this.auditStaff;
  }

  /**
   * 审核人
   */
  public ProductAuditVo setAuditStaff(String auditStaff) {
    this.auditStaff = auditStaff;
    return this;
  }

  public void unsetAuditStaff() {
    this.auditStaff = null;
  }

  /** Returns true if field auditStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStaff() {
    return this.auditStaff != null;
  }

  public void setAuditStaffIsSet(boolean value) {
    if (!value) {
      this.auditStaff = null;
    }
  }

  /**
   * 银行用户所属机构代码-审核人所属机构编号
   */
  public String getAuditOrg() {
    return this.auditOrg;
  }

  /**
   * 银行用户所属机构代码-审核人所属机构编号
   */
  public ProductAuditVo setAuditOrg(String auditOrg) {
    this.auditOrg = auditOrg;
    return this;
  }

  public void unsetAuditOrg() {
    this.auditOrg = null;
  }

  /** Returns true if field auditOrg is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditOrg() {
    return this.auditOrg != null;
  }

  public void setAuditOrgIsSet(boolean value) {
    if (!value) {
      this.auditOrg = null;
    }
  }

  /**
   * 审核备注
   */
  public String getAuditComment() {
    return this.auditComment;
  }

  /**
   * 审核备注
   */
  public ProductAuditVo setAuditComment(String auditComment) {
    this.auditComment = auditComment;
    return this;
  }

  public void unsetAuditComment() {
    this.auditComment = null;
  }

  /** Returns true if field auditComment is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditComment() {
    return this.auditComment != null;
  }

  public void setAuditCommentIsSet(boolean value) {
    if (!value) {
      this.auditComment = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case AUDIT_ORG_CODE:
      if (value == null) {
        unsetAuditOrgCode();
      } else {
        setAuditOrgCode((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case AUDIT_STATE:
      if (value == null) {
        unsetAuditState();
      } else {
        setAuditState((String)value);
      }
      break;

    case AUDIT_STAGE:
      if (value == null) {
        unsetAuditStage();
      } else {
        setAuditStage((String)value);
      }
      break;

    case AUDIT_STAFF:
      if (value == null) {
        unsetAuditStaff();
      } else {
        setAuditStaff((String)value);
      }
      break;

    case AUDIT_ORG:
      if (value == null) {
        unsetAuditOrg();
      } else {
        setAuditOrg((String)value);
      }
      break;

    case AUDIT_COMMENT:
      if (value == null) {
        unsetAuditComment();
      } else {
        setAuditComment((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return getProductId();

    case CLIENT_ID:
      return getClientId();

    case MERCHANT_ID:
      return getMerchantId();

    case AUDIT_ORG_CODE:
      return getAuditOrgCode();

    case ORG_CODE:
      return getOrgCode();

    case AUDIT_STATE:
      return getAuditState();

    case AUDIT_STAGE:
      return getAuditStage();

    case AUDIT_STAFF:
      return getAuditStaff();

    case AUDIT_ORG:
      return getAuditOrg();

    case AUDIT_COMMENT:
      return getAuditComment();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case CLIENT_ID:
      return isSetClientId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case AUDIT_ORG_CODE:
      return isSetAuditOrgCode();
    case ORG_CODE:
      return isSetOrgCode();
    case AUDIT_STATE:
      return isSetAuditState();
    case AUDIT_STAGE:
      return isSetAuditStage();
    case AUDIT_STAFF:
      return isSetAuditStaff();
    case AUDIT_ORG:
      return isSetAuditOrg();
    case AUDIT_COMMENT:
      return isSetAuditComment();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProductAuditVo)
      return this.equals((ProductAuditVo)that);
    return false;
  }

  public boolean equals(ProductAuditVo that) {
    if (that == null)
      return false;

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_auditOrgCode = true && this.isSetAuditOrgCode();
    boolean that_present_auditOrgCode = true && that.isSetAuditOrgCode();
    if (this_present_auditOrgCode || that_present_auditOrgCode) {
      if (!(this_present_auditOrgCode && that_present_auditOrgCode))
        return false;
      if (!this.auditOrgCode.equals(that.auditOrgCode))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_auditState = true && this.isSetAuditState();
    boolean that_present_auditState = true && that.isSetAuditState();
    if (this_present_auditState || that_present_auditState) {
      if (!(this_present_auditState && that_present_auditState))
        return false;
      if (!this.auditState.equals(that.auditState))
        return false;
    }

    boolean this_present_auditStage = true && this.isSetAuditStage();
    boolean that_present_auditStage = true && that.isSetAuditStage();
    if (this_present_auditStage || that_present_auditStage) {
      if (!(this_present_auditStage && that_present_auditStage))
        return false;
      if (!this.auditStage.equals(that.auditStage))
        return false;
    }

    boolean this_present_auditStaff = true && this.isSetAuditStaff();
    boolean that_present_auditStaff = true && that.isSetAuditStaff();
    if (this_present_auditStaff || that_present_auditStaff) {
      if (!(this_present_auditStaff && that_present_auditStaff))
        return false;
      if (!this.auditStaff.equals(that.auditStaff))
        return false;
    }

    boolean this_present_auditOrg = true && this.isSetAuditOrg();
    boolean that_present_auditOrg = true && that.isSetAuditOrg();
    if (this_present_auditOrg || that_present_auditOrg) {
      if (!(this_present_auditOrg && that_present_auditOrg))
        return false;
      if (!this.auditOrg.equals(that.auditOrg))
        return false;
    }

    boolean this_present_auditComment = true && this.isSetAuditComment();
    boolean that_present_auditComment = true && that.isSetAuditComment();
    if (this_present_auditComment || that_present_auditComment) {
      if (!(this_present_auditComment && that_present_auditComment))
        return false;
      if (!this.auditComment.equals(that.auditComment))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_auditOrgCode = true && (isSetAuditOrgCode());
    list.add(present_auditOrgCode);
    if (present_auditOrgCode)
      list.add(auditOrgCode);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_auditState = true && (isSetAuditState());
    list.add(present_auditState);
    if (present_auditState)
      list.add(auditState);

    boolean present_auditStage = true && (isSetAuditStage());
    list.add(present_auditStage);
    if (present_auditStage)
      list.add(auditStage);

    boolean present_auditStaff = true && (isSetAuditStaff());
    list.add(present_auditStaff);
    if (present_auditStaff)
      list.add(auditStaff);

    boolean present_auditOrg = true && (isSetAuditOrg());
    list.add(present_auditOrg);
    if (present_auditOrg)
      list.add(auditOrg);

    boolean present_auditComment = true && (isSetAuditComment());
    list.add(present_auditComment);
    if (present_auditComment)
      list.add(auditComment);

    return list.hashCode();
  }

  @Override
  public int compareTo(ProductAuditVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditOrgCode()).compareTo(other.isSetAuditOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditOrgCode, other.auditOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditState()).compareTo(other.isSetAuditState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditState, other.auditState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStage()).compareTo(other.isSetAuditStage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStage, other.auditStage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStaff()).compareTo(other.isSetAuditStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStaff, other.auditStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditOrg()).compareTo(other.isSetAuditOrg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditOrg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditOrg, other.auditOrg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditComment()).compareTo(other.isSetAuditComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditComment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditComment, other.auditComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProductAuditVo(");
    boolean first = true;

    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditOrgCode:");
    if (this.auditOrgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.auditOrgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditState:");
    if (this.auditState == null) {
      sb.append("null");
    } else {
      sb.append(this.auditState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStage:");
    if (this.auditStage == null) {
      sb.append("null");
    } else {
      sb.append(this.auditStage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStaff:");
    if (this.auditStaff == null) {
      sb.append("null");
    } else {
      sb.append(this.auditStaff);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditOrg:");
    if (this.auditOrg == null) {
      sb.append("null");
    } else {
      sb.append(this.auditOrg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditComment:");
    if (this.auditComment == null) {
      sb.append("null");
    } else {
      sb.append(this.auditComment);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductAuditVoStandardSchemeFactory implements SchemeFactory {
    public ProductAuditVoStandardScheme getScheme() {
      return new ProductAuditVoStandardScheme();
    }
  }

  private static class ProductAuditVoStandardScheme extends StandardScheme<ProductAuditVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProductAuditVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AUDIT_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditOrgCode = iprot.readString();
              struct.setAuditOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AUDIT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditState = iprot.readString();
              struct.setAuditStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // AUDIT_STAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStage = iprot.readString();
              struct.setAuditStageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // AUDIT_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStaff = iprot.readString();
              struct.setAuditStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // AUDIT_ORG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditOrg = iprot.readString();
              struct.setAuditOrgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // AUDIT_COMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditComment = iprot.readString();
              struct.setAuditCommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProductAuditVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.auditOrgCode != null) {
        oprot.writeFieldBegin(AUDIT_ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.auditOrgCode);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      if (struct.auditState != null) {
        oprot.writeFieldBegin(AUDIT_STATE_FIELD_DESC);
        oprot.writeString(struct.auditState);
        oprot.writeFieldEnd();
      }
      if (struct.auditStage != null) {
        oprot.writeFieldBegin(AUDIT_STAGE_FIELD_DESC);
        oprot.writeString(struct.auditStage);
        oprot.writeFieldEnd();
      }
      if (struct.auditStaff != null) {
        oprot.writeFieldBegin(AUDIT_STAFF_FIELD_DESC);
        oprot.writeString(struct.auditStaff);
        oprot.writeFieldEnd();
      }
      if (struct.auditOrg != null) {
        oprot.writeFieldBegin(AUDIT_ORG_FIELD_DESC);
        oprot.writeString(struct.auditOrg);
        oprot.writeFieldEnd();
      }
      if (struct.auditComment != null) {
        oprot.writeFieldBegin(AUDIT_COMMENT_FIELD_DESC);
        oprot.writeString(struct.auditComment);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductAuditVoTupleSchemeFactory implements SchemeFactory {
    public ProductAuditVoTupleScheme getScheme() {
      return new ProductAuditVoTupleScheme();
    }
  }

  private static class ProductAuditVoTupleScheme extends TupleScheme<ProductAuditVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProductAuditVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProductId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(2);
      }
      if (struct.isSetAuditOrgCode()) {
        optionals.set(3);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(4);
      }
      if (struct.isSetAuditState()) {
        optionals.set(5);
      }
      if (struct.isSetAuditStage()) {
        optionals.set(6);
      }
      if (struct.isSetAuditStaff()) {
        optionals.set(7);
      }
      if (struct.isSetAuditOrg()) {
        optionals.set(8);
      }
      if (struct.isSetAuditComment()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetAuditOrgCode()) {
        oprot.writeString(struct.auditOrgCode);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetAuditState()) {
        oprot.writeString(struct.auditState);
      }
      if (struct.isSetAuditStage()) {
        oprot.writeString(struct.auditStage);
      }
      if (struct.isSetAuditStaff()) {
        oprot.writeString(struct.auditStaff);
      }
      if (struct.isSetAuditOrg()) {
        oprot.writeString(struct.auditOrg);
      }
      if (struct.isSetAuditComment()) {
        oprot.writeString(struct.auditComment);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProductAuditVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.auditOrgCode = iprot.readString();
        struct.setAuditOrgCodeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.auditState = iprot.readString();
        struct.setAuditStateIsSet(true);
      }
      if (incoming.get(6)) {
        struct.auditStage = iprot.readString();
        struct.setAuditStageIsSet(true);
      }
      if (incoming.get(7)) {
        struct.auditStaff = iprot.readString();
        struct.setAuditStaffIsSet(true);
      }
      if (incoming.get(8)) {
        struct.auditOrg = iprot.readString();
        struct.setAuditOrgIsSet(true);
      }
      if (incoming.get(9)) {
        struct.auditComment = iprot.readString();
        struct.setAuditCommentIsSet(true);
      }
    }
  }

}

