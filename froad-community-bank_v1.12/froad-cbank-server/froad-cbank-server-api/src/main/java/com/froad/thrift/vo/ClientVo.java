/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 客户端Vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ClientVo implements org.apache.thrift.TBase<ClientVo, ClientVo._Fields>, java.io.Serializable, Cloneable, Comparable<ClientVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ClientVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField URI_FIELD_DESC = new org.apache.thrift.protocol.TField("uri", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField POINT_PARTNER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("pointPartnerNo", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField OPENAPI_PARTNER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("openapiPartnerNo", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ORDER_DISPLAY_FIELD_DESC = new org.apache.thrift.protocol.TField("orderDisplay", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField APPKEY_FIELD_DESC = new org.apache.thrift.protocol.TField("appkey", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField APPSECRET_FIELD_DESC = new org.apache.thrift.protocol.TField("appsecret", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField BANK_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("bankType", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField BANK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("bankName", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField QR_LOGO_FIELD_DESC = new org.apache.thrift.protocol.TField("qrLogo", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField RETURN_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("returnUrl", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField BANK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bankId", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField SETTLE_PAY_ORG_FIELD_DESC = new org.apache.thrift.protocol.TField("settlePayOrg", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField BANK_ORG_FIELD_DESC = new org.apache.thrift.protocol.TField("bankOrg", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField BANK_ZH_FIELD_DESC = new org.apache.thrift.protocol.TField("bankZH", org.apache.thrift.protocol.TType.STRING, (short)19);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ClientVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ClientVoTupleSchemeFactory());
  }

  /**
   * 主键id
   */
  public long id; // optional
  /**
   * 客户端id
   */
  public String clientId; // optional
  /**
   * 客户端uri
   */
  public String uri; // optional
  /**
   * 创建时间
   */
  public long createTime; // optional
  /**
   * 客户端名称
   */
  public String name; // optional
  /**
   * 积分平台商户号
   */
  public String pointPartnerNo; // optional
  /**
   * 支付平台商户号
   */
  public String openapiPartnerNo; // optional
  /**
   * 订单显示名
   */
  public String orderDisplay; // optional
  /**
   * APPKEY（手机客户端）
   */
  public String appkey; // optional
  /**
   * 私钥（手机客户端）
   */
  public String appsecret; // optional
  /**
   * 银行类型  0-重庆模式 1-安徽模式
   */
  public String bankType; // optional
  /**
   * 银行名
   */
  public String bankName; // optional
  /**
   * 银行logo图片地址
   */
  public String qrLogo; // optional
  /**
   * 支付结果通知地址
   */
  public String returnUrl; // optional
  /**
   * 备注
   */
  public String remark; // optional
  /**
   * 积分平台银行代码
   */
  public String bankId; // optional
  /**
   * 结算组织机构代码
   */
  public String settlePayOrg; // optional
  /**
   * vip所属银行标签
   */
  public String bankOrg; // optional
  /**
   * 银行组号
   */
  public String bankZH; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键id
     */
    ID((short)1, "id"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 客户端uri
     */
    URI((short)3, "uri"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)4, "createTime"),
    /**
     * 客户端名称
     */
    NAME((short)5, "name"),
    /**
     * 积分平台商户号
     */
    POINT_PARTNER_NO((short)6, "pointPartnerNo"),
    /**
     * 支付平台商户号
     */
    OPENAPI_PARTNER_NO((short)7, "openapiPartnerNo"),
    /**
     * 订单显示名
     */
    ORDER_DISPLAY((short)8, "orderDisplay"),
    /**
     * APPKEY（手机客户端）
     */
    APPKEY((short)9, "appkey"),
    /**
     * 私钥（手机客户端）
     */
    APPSECRET((short)10, "appsecret"),
    /**
     * 银行类型  0-重庆模式 1-安徽模式
     */
    BANK_TYPE((short)11, "bankType"),
    /**
     * 银行名
     */
    BANK_NAME((short)12, "bankName"),
    /**
     * 银行logo图片地址
     */
    QR_LOGO((short)13, "qrLogo"),
    /**
     * 支付结果通知地址
     */
    RETURN_URL((short)14, "returnUrl"),
    /**
     * 备注
     */
    REMARK((short)15, "remark"),
    /**
     * 积分平台银行代码
     */
    BANK_ID((short)16, "bankId"),
    /**
     * 结算组织机构代码
     */
    SETTLE_PAY_ORG((short)17, "settlePayOrg"),
    /**
     * vip所属银行标签
     */
    BANK_ORG((short)18, "bankOrg"),
    /**
     * 银行组号
     */
    BANK_ZH((short)19, "bankZH");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // URI
          return URI;
        case 4: // CREATE_TIME
          return CREATE_TIME;
        case 5: // NAME
          return NAME;
        case 6: // POINT_PARTNER_NO
          return POINT_PARTNER_NO;
        case 7: // OPENAPI_PARTNER_NO
          return OPENAPI_PARTNER_NO;
        case 8: // ORDER_DISPLAY
          return ORDER_DISPLAY;
        case 9: // APPKEY
          return APPKEY;
        case 10: // APPSECRET
          return APPSECRET;
        case 11: // BANK_TYPE
          return BANK_TYPE;
        case 12: // BANK_NAME
          return BANK_NAME;
        case 13: // QR_LOGO
          return QR_LOGO;
        case 14: // RETURN_URL
          return RETURN_URL;
        case 15: // REMARK
          return REMARK;
        case 16: // BANK_ID
          return BANK_ID;
        case 17: // SETTLE_PAY_ORG
          return SETTLE_PAY_ORG;
        case 18: // BANK_ORG
          return BANK_ORG;
        case 19: // BANK_ZH
          return BANK_ZH;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CLIENT_ID,_Fields.URI,_Fields.CREATE_TIME,_Fields.NAME,_Fields.POINT_PARTNER_NO,_Fields.OPENAPI_PARTNER_NO,_Fields.ORDER_DISPLAY,_Fields.APPKEY,_Fields.APPSECRET,_Fields.BANK_TYPE,_Fields.BANK_NAME,_Fields.QR_LOGO,_Fields.RETURN_URL,_Fields.REMARK,_Fields.BANK_ID,_Fields.SETTLE_PAY_ORG,_Fields.BANK_ORG,_Fields.BANK_ZH};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.URI, new org.apache.thrift.meta_data.FieldMetaData("uri", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POINT_PARTNER_NO, new org.apache.thrift.meta_data.FieldMetaData("pointPartnerNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPENAPI_PARTNER_NO, new org.apache.thrift.meta_data.FieldMetaData("openapiPartnerNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_DISPLAY, new org.apache.thrift.meta_data.FieldMetaData("orderDisplay", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPKEY, new org.apache.thrift.meta_data.FieldMetaData("appkey", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPSECRET, new org.apache.thrift.meta_data.FieldMetaData("appsecret", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_TYPE, new org.apache.thrift.meta_data.FieldMetaData("bankType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_NAME, new org.apache.thrift.meta_data.FieldMetaData("bankName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QR_LOGO, new org.apache.thrift.meta_data.FieldMetaData("qrLogo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RETURN_URL, new org.apache.thrift.meta_data.FieldMetaData("returnUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_ID, new org.apache.thrift.meta_data.FieldMetaData("bankId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_PAY_ORG, new org.apache.thrift.meta_data.FieldMetaData("settlePayOrg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_ORG, new org.apache.thrift.meta_data.FieldMetaData("bankOrg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_ZH, new org.apache.thrift.meta_data.FieldMetaData("bankZH", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ClientVo.class, metaDataMap);
  }

  public ClientVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ClientVo(ClientVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetUri()) {
      this.uri = other.uri;
    }
    this.createTime = other.createTime;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetPointPartnerNo()) {
      this.pointPartnerNo = other.pointPartnerNo;
    }
    if (other.isSetOpenapiPartnerNo()) {
      this.openapiPartnerNo = other.openapiPartnerNo;
    }
    if (other.isSetOrderDisplay()) {
      this.orderDisplay = other.orderDisplay;
    }
    if (other.isSetAppkey()) {
      this.appkey = other.appkey;
    }
    if (other.isSetAppsecret()) {
      this.appsecret = other.appsecret;
    }
    if (other.isSetBankType()) {
      this.bankType = other.bankType;
    }
    if (other.isSetBankName()) {
      this.bankName = other.bankName;
    }
    if (other.isSetQrLogo()) {
      this.qrLogo = other.qrLogo;
    }
    if (other.isSetReturnUrl()) {
      this.returnUrl = other.returnUrl;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    if (other.isSetBankId()) {
      this.bankId = other.bankId;
    }
    if (other.isSetSettlePayOrg()) {
      this.settlePayOrg = other.settlePayOrg;
    }
    if (other.isSetBankOrg()) {
      this.bankOrg = other.bankOrg;
    }
    if (other.isSetBankZH()) {
      this.bankZH = other.bankZH;
    }
  }

  public ClientVo deepCopy() {
    return new ClientVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.clientId = null;
    this.uri = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.name = null;
    this.pointPartnerNo = null;
    this.openapiPartnerNo = null;
    this.orderDisplay = null;
    this.appkey = null;
    this.appsecret = null;
    this.bankType = null;
    this.bankName = null;
    this.qrLogo = null;
    this.returnUrl = null;
    this.remark = null;
    this.bankId = null;
    this.settlePayOrg = null;
    this.bankOrg = null;
    this.bankZH = null;
  }

  /**
   * 主键id
   */
  public long getId() {
    return this.id;
  }

  /**
   * 主键id
   */
  public ClientVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public ClientVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 客户端uri
   */
  public String getUri() {
    return this.uri;
  }

  /**
   * 客户端uri
   */
  public ClientVo setUri(String uri) {
    this.uri = uri;
    return this;
  }

  public void unsetUri() {
    this.uri = null;
  }

  /** Returns true if field uri is set (has been assigned a value) and false otherwise */
  public boolean isSetUri() {
    return this.uri != null;
  }

  public void setUriIsSet(boolean value) {
    if (!value) {
      this.uri = null;
    }
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public ClientVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端名称
   */
  public String getName() {
    return this.name;
  }

  /**
   * 客户端名称
   */
  public ClientVo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  /**
   * 积分平台商户号
   */
  public String getPointPartnerNo() {
    return this.pointPartnerNo;
  }

  /**
   * 积分平台商户号
   */
  public ClientVo setPointPartnerNo(String pointPartnerNo) {
    this.pointPartnerNo = pointPartnerNo;
    return this;
  }

  public void unsetPointPartnerNo() {
    this.pointPartnerNo = null;
  }

  /** Returns true if field pointPartnerNo is set (has been assigned a value) and false otherwise */
  public boolean isSetPointPartnerNo() {
    return this.pointPartnerNo != null;
  }

  public void setPointPartnerNoIsSet(boolean value) {
    if (!value) {
      this.pointPartnerNo = null;
    }
  }

  /**
   * 支付平台商户号
   */
  public String getOpenapiPartnerNo() {
    return this.openapiPartnerNo;
  }

  /**
   * 支付平台商户号
   */
  public ClientVo setOpenapiPartnerNo(String openapiPartnerNo) {
    this.openapiPartnerNo = openapiPartnerNo;
    return this;
  }

  public void unsetOpenapiPartnerNo() {
    this.openapiPartnerNo = null;
  }

  /** Returns true if field openapiPartnerNo is set (has been assigned a value) and false otherwise */
  public boolean isSetOpenapiPartnerNo() {
    return this.openapiPartnerNo != null;
  }

  public void setOpenapiPartnerNoIsSet(boolean value) {
    if (!value) {
      this.openapiPartnerNo = null;
    }
  }

  /**
   * 订单显示名
   */
  public String getOrderDisplay() {
    return this.orderDisplay;
  }

  /**
   * 订单显示名
   */
  public ClientVo setOrderDisplay(String orderDisplay) {
    this.orderDisplay = orderDisplay;
    return this;
  }

  public void unsetOrderDisplay() {
    this.orderDisplay = null;
  }

  /** Returns true if field orderDisplay is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderDisplay() {
    return this.orderDisplay != null;
  }

  public void setOrderDisplayIsSet(boolean value) {
    if (!value) {
      this.orderDisplay = null;
    }
  }

  /**
   * APPKEY（手机客户端）
   */
  public String getAppkey() {
    return this.appkey;
  }

  /**
   * APPKEY（手机客户端）
   */
  public ClientVo setAppkey(String appkey) {
    this.appkey = appkey;
    return this;
  }

  public void unsetAppkey() {
    this.appkey = null;
  }

  /** Returns true if field appkey is set (has been assigned a value) and false otherwise */
  public boolean isSetAppkey() {
    return this.appkey != null;
  }

  public void setAppkeyIsSet(boolean value) {
    if (!value) {
      this.appkey = null;
    }
  }

  /**
   * 私钥（手机客户端）
   */
  public String getAppsecret() {
    return this.appsecret;
  }

  /**
   * 私钥（手机客户端）
   */
  public ClientVo setAppsecret(String appsecret) {
    this.appsecret = appsecret;
    return this;
  }

  public void unsetAppsecret() {
    this.appsecret = null;
  }

  /** Returns true if field appsecret is set (has been assigned a value) and false otherwise */
  public boolean isSetAppsecret() {
    return this.appsecret != null;
  }

  public void setAppsecretIsSet(boolean value) {
    if (!value) {
      this.appsecret = null;
    }
  }

  /**
   * 银行类型  0-重庆模式 1-安徽模式
   */
  public String getBankType() {
    return this.bankType;
  }

  /**
   * 银行类型  0-重庆模式 1-安徽模式
   */
  public ClientVo setBankType(String bankType) {
    this.bankType = bankType;
    return this;
  }

  public void unsetBankType() {
    this.bankType = null;
  }

  /** Returns true if field bankType is set (has been assigned a value) and false otherwise */
  public boolean isSetBankType() {
    return this.bankType != null;
  }

  public void setBankTypeIsSet(boolean value) {
    if (!value) {
      this.bankType = null;
    }
  }

  /**
   * 银行名
   */
  public String getBankName() {
    return this.bankName;
  }

  /**
   * 银行名
   */
  public ClientVo setBankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

  public void unsetBankName() {
    this.bankName = null;
  }

  /** Returns true if field bankName is set (has been assigned a value) and false otherwise */
  public boolean isSetBankName() {
    return this.bankName != null;
  }

  public void setBankNameIsSet(boolean value) {
    if (!value) {
      this.bankName = null;
    }
  }

  /**
   * 银行logo图片地址
   */
  public String getQrLogo() {
    return this.qrLogo;
  }

  /**
   * 银行logo图片地址
   */
  public ClientVo setQrLogo(String qrLogo) {
    this.qrLogo = qrLogo;
    return this;
  }

  public void unsetQrLogo() {
    this.qrLogo = null;
  }

  /** Returns true if field qrLogo is set (has been assigned a value) and false otherwise */
  public boolean isSetQrLogo() {
    return this.qrLogo != null;
  }

  public void setQrLogoIsSet(boolean value) {
    if (!value) {
      this.qrLogo = null;
    }
  }

  /**
   * 支付结果通知地址
   */
  public String getReturnUrl() {
    return this.returnUrl;
  }

  /**
   * 支付结果通知地址
   */
  public ClientVo setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
    return this;
  }

  public void unsetReturnUrl() {
    this.returnUrl = null;
  }

  /** Returns true if field returnUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnUrl() {
    return this.returnUrl != null;
  }

  public void setReturnUrlIsSet(boolean value) {
    if (!value) {
      this.returnUrl = null;
    }
  }

  /**
   * 备注
   */
  public String getRemark() {
    return this.remark;
  }

  /**
   * 备注
   */
  public ClientVo setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  /**
   * 积分平台银行代码
   */
  public String getBankId() {
    return this.bankId;
  }

  /**
   * 积分平台银行代码
   */
  public ClientVo setBankId(String bankId) {
    this.bankId = bankId;
    return this;
  }

  public void unsetBankId() {
    this.bankId = null;
  }

  /** Returns true if field bankId is set (has been assigned a value) and false otherwise */
  public boolean isSetBankId() {
    return this.bankId != null;
  }

  public void setBankIdIsSet(boolean value) {
    if (!value) {
      this.bankId = null;
    }
  }

  /**
   * 结算组织机构代码
   */
  public String getSettlePayOrg() {
    return this.settlePayOrg;
  }

  /**
   * 结算组织机构代码
   */
  public ClientVo setSettlePayOrg(String settlePayOrg) {
    this.settlePayOrg = settlePayOrg;
    return this;
  }

  public void unsetSettlePayOrg() {
    this.settlePayOrg = null;
  }

  /** Returns true if field settlePayOrg is set (has been assigned a value) and false otherwise */
  public boolean isSetSettlePayOrg() {
    return this.settlePayOrg != null;
  }

  public void setSettlePayOrgIsSet(boolean value) {
    if (!value) {
      this.settlePayOrg = null;
    }
  }

  /**
   * vip所属银行标签
   */
  public String getBankOrg() {
    return this.bankOrg;
  }

  /**
   * vip所属银行标签
   */
  public ClientVo setBankOrg(String bankOrg) {
    this.bankOrg = bankOrg;
    return this;
  }

  public void unsetBankOrg() {
    this.bankOrg = null;
  }

  /** Returns true if field bankOrg is set (has been assigned a value) and false otherwise */
  public boolean isSetBankOrg() {
    return this.bankOrg != null;
  }

  public void setBankOrgIsSet(boolean value) {
    if (!value) {
      this.bankOrg = null;
    }
  }

  /**
   * 银行组号
   */
  public String getBankZH() {
    return this.bankZH;
  }

  /**
   * 银行组号
   */
  public ClientVo setBankZH(String bankZH) {
    this.bankZH = bankZH;
    return this;
  }

  public void unsetBankZH() {
    this.bankZH = null;
  }

  /** Returns true if field bankZH is set (has been assigned a value) and false otherwise */
  public boolean isSetBankZH() {
    return this.bankZH != null;
  }

  public void setBankZHIsSet(boolean value) {
    if (!value) {
      this.bankZH = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case URI:
      if (value == null) {
        unsetUri();
      } else {
        setUri((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case POINT_PARTNER_NO:
      if (value == null) {
        unsetPointPartnerNo();
      } else {
        setPointPartnerNo((String)value);
      }
      break;

    case OPENAPI_PARTNER_NO:
      if (value == null) {
        unsetOpenapiPartnerNo();
      } else {
        setOpenapiPartnerNo((String)value);
      }
      break;

    case ORDER_DISPLAY:
      if (value == null) {
        unsetOrderDisplay();
      } else {
        setOrderDisplay((String)value);
      }
      break;

    case APPKEY:
      if (value == null) {
        unsetAppkey();
      } else {
        setAppkey((String)value);
      }
      break;

    case APPSECRET:
      if (value == null) {
        unsetAppsecret();
      } else {
        setAppsecret((String)value);
      }
      break;

    case BANK_TYPE:
      if (value == null) {
        unsetBankType();
      } else {
        setBankType((String)value);
      }
      break;

    case BANK_NAME:
      if (value == null) {
        unsetBankName();
      } else {
        setBankName((String)value);
      }
      break;

    case QR_LOGO:
      if (value == null) {
        unsetQrLogo();
      } else {
        setQrLogo((String)value);
      }
      break;

    case RETURN_URL:
      if (value == null) {
        unsetReturnUrl();
      } else {
        setReturnUrl((String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    case BANK_ID:
      if (value == null) {
        unsetBankId();
      } else {
        setBankId((String)value);
      }
      break;

    case SETTLE_PAY_ORG:
      if (value == null) {
        unsetSettlePayOrg();
      } else {
        setSettlePayOrg((String)value);
      }
      break;

    case BANK_ORG:
      if (value == null) {
        unsetBankOrg();
      } else {
        setBankOrg((String)value);
      }
      break;

    case BANK_ZH:
      if (value == null) {
        unsetBankZH();
      } else {
        setBankZH((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CLIENT_ID:
      return getClientId();

    case URI:
      return getUri();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case NAME:
      return getName();

    case POINT_PARTNER_NO:
      return getPointPartnerNo();

    case OPENAPI_PARTNER_NO:
      return getOpenapiPartnerNo();

    case ORDER_DISPLAY:
      return getOrderDisplay();

    case APPKEY:
      return getAppkey();

    case APPSECRET:
      return getAppsecret();

    case BANK_TYPE:
      return getBankType();

    case BANK_NAME:
      return getBankName();

    case QR_LOGO:
      return getQrLogo();

    case RETURN_URL:
      return getReturnUrl();

    case REMARK:
      return getRemark();

    case BANK_ID:
      return getBankId();

    case SETTLE_PAY_ORG:
      return getSettlePayOrg();

    case BANK_ORG:
      return getBankOrg();

    case BANK_ZH:
      return getBankZH();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CLIENT_ID:
      return isSetClientId();
    case URI:
      return isSetUri();
    case CREATE_TIME:
      return isSetCreateTime();
    case NAME:
      return isSetName();
    case POINT_PARTNER_NO:
      return isSetPointPartnerNo();
    case OPENAPI_PARTNER_NO:
      return isSetOpenapiPartnerNo();
    case ORDER_DISPLAY:
      return isSetOrderDisplay();
    case APPKEY:
      return isSetAppkey();
    case APPSECRET:
      return isSetAppsecret();
    case BANK_TYPE:
      return isSetBankType();
    case BANK_NAME:
      return isSetBankName();
    case QR_LOGO:
      return isSetQrLogo();
    case RETURN_URL:
      return isSetReturnUrl();
    case REMARK:
      return isSetRemark();
    case BANK_ID:
      return isSetBankId();
    case SETTLE_PAY_ORG:
      return isSetSettlePayOrg();
    case BANK_ORG:
      return isSetBankOrg();
    case BANK_ZH:
      return isSetBankZH();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ClientVo)
      return this.equals((ClientVo)that);
    return false;
  }

  public boolean equals(ClientVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_uri = true && this.isSetUri();
    boolean that_present_uri = true && that.isSetUri();
    if (this_present_uri || that_present_uri) {
      if (!(this_present_uri && that_present_uri))
        return false;
      if (!this.uri.equals(that.uri))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_pointPartnerNo = true && this.isSetPointPartnerNo();
    boolean that_present_pointPartnerNo = true && that.isSetPointPartnerNo();
    if (this_present_pointPartnerNo || that_present_pointPartnerNo) {
      if (!(this_present_pointPartnerNo && that_present_pointPartnerNo))
        return false;
      if (!this.pointPartnerNo.equals(that.pointPartnerNo))
        return false;
    }

    boolean this_present_openapiPartnerNo = true && this.isSetOpenapiPartnerNo();
    boolean that_present_openapiPartnerNo = true && that.isSetOpenapiPartnerNo();
    if (this_present_openapiPartnerNo || that_present_openapiPartnerNo) {
      if (!(this_present_openapiPartnerNo && that_present_openapiPartnerNo))
        return false;
      if (!this.openapiPartnerNo.equals(that.openapiPartnerNo))
        return false;
    }

    boolean this_present_orderDisplay = true && this.isSetOrderDisplay();
    boolean that_present_orderDisplay = true && that.isSetOrderDisplay();
    if (this_present_orderDisplay || that_present_orderDisplay) {
      if (!(this_present_orderDisplay && that_present_orderDisplay))
        return false;
      if (!this.orderDisplay.equals(that.orderDisplay))
        return false;
    }

    boolean this_present_appkey = true && this.isSetAppkey();
    boolean that_present_appkey = true && that.isSetAppkey();
    if (this_present_appkey || that_present_appkey) {
      if (!(this_present_appkey && that_present_appkey))
        return false;
      if (!this.appkey.equals(that.appkey))
        return false;
    }

    boolean this_present_appsecret = true && this.isSetAppsecret();
    boolean that_present_appsecret = true && that.isSetAppsecret();
    if (this_present_appsecret || that_present_appsecret) {
      if (!(this_present_appsecret && that_present_appsecret))
        return false;
      if (!this.appsecret.equals(that.appsecret))
        return false;
    }

    boolean this_present_bankType = true && this.isSetBankType();
    boolean that_present_bankType = true && that.isSetBankType();
    if (this_present_bankType || that_present_bankType) {
      if (!(this_present_bankType && that_present_bankType))
        return false;
      if (!this.bankType.equals(that.bankType))
        return false;
    }

    boolean this_present_bankName = true && this.isSetBankName();
    boolean that_present_bankName = true && that.isSetBankName();
    if (this_present_bankName || that_present_bankName) {
      if (!(this_present_bankName && that_present_bankName))
        return false;
      if (!this.bankName.equals(that.bankName))
        return false;
    }

    boolean this_present_qrLogo = true && this.isSetQrLogo();
    boolean that_present_qrLogo = true && that.isSetQrLogo();
    if (this_present_qrLogo || that_present_qrLogo) {
      if (!(this_present_qrLogo && that_present_qrLogo))
        return false;
      if (!this.qrLogo.equals(that.qrLogo))
        return false;
    }

    boolean this_present_returnUrl = true && this.isSetReturnUrl();
    boolean that_present_returnUrl = true && that.isSetReturnUrl();
    if (this_present_returnUrl || that_present_returnUrl) {
      if (!(this_present_returnUrl && that_present_returnUrl))
        return false;
      if (!this.returnUrl.equals(that.returnUrl))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_bankId = true && this.isSetBankId();
    boolean that_present_bankId = true && that.isSetBankId();
    if (this_present_bankId || that_present_bankId) {
      if (!(this_present_bankId && that_present_bankId))
        return false;
      if (!this.bankId.equals(that.bankId))
        return false;
    }

    boolean this_present_settlePayOrg = true && this.isSetSettlePayOrg();
    boolean that_present_settlePayOrg = true && that.isSetSettlePayOrg();
    if (this_present_settlePayOrg || that_present_settlePayOrg) {
      if (!(this_present_settlePayOrg && that_present_settlePayOrg))
        return false;
      if (!this.settlePayOrg.equals(that.settlePayOrg))
        return false;
    }

    boolean this_present_bankOrg = true && this.isSetBankOrg();
    boolean that_present_bankOrg = true && that.isSetBankOrg();
    if (this_present_bankOrg || that_present_bankOrg) {
      if (!(this_present_bankOrg && that_present_bankOrg))
        return false;
      if (!this.bankOrg.equals(that.bankOrg))
        return false;
    }

    boolean this_present_bankZH = true && this.isSetBankZH();
    boolean that_present_bankZH = true && that.isSetBankZH();
    if (this_present_bankZH || that_present_bankZH) {
      if (!(this_present_bankZH && that_present_bankZH))
        return false;
      if (!this.bankZH.equals(that.bankZH))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_uri = true && (isSetUri());
    list.add(present_uri);
    if (present_uri)
      list.add(uri);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_pointPartnerNo = true && (isSetPointPartnerNo());
    list.add(present_pointPartnerNo);
    if (present_pointPartnerNo)
      list.add(pointPartnerNo);

    boolean present_openapiPartnerNo = true && (isSetOpenapiPartnerNo());
    list.add(present_openapiPartnerNo);
    if (present_openapiPartnerNo)
      list.add(openapiPartnerNo);

    boolean present_orderDisplay = true && (isSetOrderDisplay());
    list.add(present_orderDisplay);
    if (present_orderDisplay)
      list.add(orderDisplay);

    boolean present_appkey = true && (isSetAppkey());
    list.add(present_appkey);
    if (present_appkey)
      list.add(appkey);

    boolean present_appsecret = true && (isSetAppsecret());
    list.add(present_appsecret);
    if (present_appsecret)
      list.add(appsecret);

    boolean present_bankType = true && (isSetBankType());
    list.add(present_bankType);
    if (present_bankType)
      list.add(bankType);

    boolean present_bankName = true && (isSetBankName());
    list.add(present_bankName);
    if (present_bankName)
      list.add(bankName);

    boolean present_qrLogo = true && (isSetQrLogo());
    list.add(present_qrLogo);
    if (present_qrLogo)
      list.add(qrLogo);

    boolean present_returnUrl = true && (isSetReturnUrl());
    list.add(present_returnUrl);
    if (present_returnUrl)
      list.add(returnUrl);

    boolean present_remark = true && (isSetRemark());
    list.add(present_remark);
    if (present_remark)
      list.add(remark);

    boolean present_bankId = true && (isSetBankId());
    list.add(present_bankId);
    if (present_bankId)
      list.add(bankId);

    boolean present_settlePayOrg = true && (isSetSettlePayOrg());
    list.add(present_settlePayOrg);
    if (present_settlePayOrg)
      list.add(settlePayOrg);

    boolean present_bankOrg = true && (isSetBankOrg());
    list.add(present_bankOrg);
    if (present_bankOrg)
      list.add(bankOrg);

    boolean present_bankZH = true && (isSetBankZH());
    list.add(present_bankZH);
    if (present_bankZH)
      list.add(bankZH);

    return list.hashCode();
  }

  @Override
  public int compareTo(ClientVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUri()).compareTo(other.isSetUri());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUri()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uri, other.uri);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPointPartnerNo()).compareTo(other.isSetPointPartnerNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPointPartnerNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pointPartnerNo, other.pointPartnerNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOpenapiPartnerNo()).compareTo(other.isSetOpenapiPartnerNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOpenapiPartnerNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.openapiPartnerNo, other.openapiPartnerNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderDisplay()).compareTo(other.isSetOrderDisplay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderDisplay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderDisplay, other.orderDisplay);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppkey()).compareTo(other.isSetAppkey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppkey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appkey, other.appkey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppsecret()).compareTo(other.isSetAppsecret());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppsecret()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appsecret, other.appsecret);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankType()).compareTo(other.isSetBankType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankType, other.bankType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankName()).compareTo(other.isSetBankName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankName, other.bankName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQrLogo()).compareTo(other.isSetQrLogo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQrLogo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.qrLogo, other.qrLogo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReturnUrl()).compareTo(other.isSetReturnUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.returnUrl, other.returnUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankId()).compareTo(other.isSetBankId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankId, other.bankId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettlePayOrg()).compareTo(other.isSetSettlePayOrg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettlePayOrg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settlePayOrg, other.settlePayOrg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankOrg()).compareTo(other.isSetBankOrg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankOrg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankOrg, other.bankOrg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankZH()).compareTo(other.isSetBankZH());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankZH()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankZH, other.bankZH);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ClientVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetUri()) {
      if (!first) sb.append(", ");
      sb.append("uri:");
      if (this.uri == null) {
        sb.append("null");
      } else {
        sb.append(this.uri);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetPointPartnerNo()) {
      if (!first) sb.append(", ");
      sb.append("pointPartnerNo:");
      if (this.pointPartnerNo == null) {
        sb.append("null");
      } else {
        sb.append(this.pointPartnerNo);
      }
      first = false;
    }
    if (isSetOpenapiPartnerNo()) {
      if (!first) sb.append(", ");
      sb.append("openapiPartnerNo:");
      if (this.openapiPartnerNo == null) {
        sb.append("null");
      } else {
        sb.append(this.openapiPartnerNo);
      }
      first = false;
    }
    if (isSetOrderDisplay()) {
      if (!first) sb.append(", ");
      sb.append("orderDisplay:");
      if (this.orderDisplay == null) {
        sb.append("null");
      } else {
        sb.append(this.orderDisplay);
      }
      first = false;
    }
    if (isSetAppkey()) {
      if (!first) sb.append(", ");
      sb.append("appkey:");
      if (this.appkey == null) {
        sb.append("null");
      } else {
        sb.append(this.appkey);
      }
      first = false;
    }
    if (isSetAppsecret()) {
      if (!first) sb.append(", ");
      sb.append("appsecret:");
      if (this.appsecret == null) {
        sb.append("null");
      } else {
        sb.append(this.appsecret);
      }
      first = false;
    }
    if (isSetBankType()) {
      if (!first) sb.append(", ");
      sb.append("bankType:");
      if (this.bankType == null) {
        sb.append("null");
      } else {
        sb.append(this.bankType);
      }
      first = false;
    }
    if (isSetBankName()) {
      if (!first) sb.append(", ");
      sb.append("bankName:");
      if (this.bankName == null) {
        sb.append("null");
      } else {
        sb.append(this.bankName);
      }
      first = false;
    }
    if (isSetQrLogo()) {
      if (!first) sb.append(", ");
      sb.append("qrLogo:");
      if (this.qrLogo == null) {
        sb.append("null");
      } else {
        sb.append(this.qrLogo);
      }
      first = false;
    }
    if (isSetReturnUrl()) {
      if (!first) sb.append(", ");
      sb.append("returnUrl:");
      if (this.returnUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.returnUrl);
      }
      first = false;
    }
    if (isSetRemark()) {
      if (!first) sb.append(", ");
      sb.append("remark:");
      if (this.remark == null) {
        sb.append("null");
      } else {
        sb.append(this.remark);
      }
      first = false;
    }
    if (isSetBankId()) {
      if (!first) sb.append(", ");
      sb.append("bankId:");
      if (this.bankId == null) {
        sb.append("null");
      } else {
        sb.append(this.bankId);
      }
      first = false;
    }
    if (isSetSettlePayOrg()) {
      if (!first) sb.append(", ");
      sb.append("settlePayOrg:");
      if (this.settlePayOrg == null) {
        sb.append("null");
      } else {
        sb.append(this.settlePayOrg);
      }
      first = false;
    }
    if (isSetBankOrg()) {
      if (!first) sb.append(", ");
      sb.append("bankOrg:");
      if (this.bankOrg == null) {
        sb.append("null");
      } else {
        sb.append(this.bankOrg);
      }
      first = false;
    }
    if (isSetBankZH()) {
      if (!first) sb.append(", ");
      sb.append("bankZH:");
      if (this.bankZH == null) {
        sb.append("null");
      } else {
        sb.append(this.bankZH);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ClientVoStandardSchemeFactory implements SchemeFactory {
    public ClientVoStandardScheme getScheme() {
      return new ClientVoStandardScheme();
    }
  }

  private static class ClientVoStandardScheme extends StandardScheme<ClientVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ClientVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // URI
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uri = iprot.readString();
              struct.setUriIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // POINT_PARTNER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pointPartnerNo = iprot.readString();
              struct.setPointPartnerNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // OPENAPI_PARTNER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.openapiPartnerNo = iprot.readString();
              struct.setOpenapiPartnerNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORDER_DISPLAY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderDisplay = iprot.readString();
              struct.setOrderDisplayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // APPKEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appkey = iprot.readString();
              struct.setAppkeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // APPSECRET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appsecret = iprot.readString();
              struct.setAppsecretIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // BANK_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankType = iprot.readString();
              struct.setBankTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // BANK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankName = iprot.readString();
              struct.setBankNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // QR_LOGO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.qrLogo = iprot.readString();
              struct.setQrLogoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // RETURN_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.returnUrl = iprot.readString();
              struct.setReturnUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // BANK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankId = iprot.readString();
              struct.setBankIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // SETTLE_PAY_ORG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settlePayOrg = iprot.readString();
              struct.setSettlePayOrgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // BANK_ORG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankOrg = iprot.readString();
              struct.setBankOrgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // BANK_ZH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankZH = iprot.readString();
              struct.setBankZHIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ClientVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.uri != null) {
        if (struct.isSetUri()) {
          oprot.writeFieldBegin(URI_FIELD_DESC);
          oprot.writeString(struct.uri);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.pointPartnerNo != null) {
        if (struct.isSetPointPartnerNo()) {
          oprot.writeFieldBegin(POINT_PARTNER_NO_FIELD_DESC);
          oprot.writeString(struct.pointPartnerNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.openapiPartnerNo != null) {
        if (struct.isSetOpenapiPartnerNo()) {
          oprot.writeFieldBegin(OPENAPI_PARTNER_NO_FIELD_DESC);
          oprot.writeString(struct.openapiPartnerNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orderDisplay != null) {
        if (struct.isSetOrderDisplay()) {
          oprot.writeFieldBegin(ORDER_DISPLAY_FIELD_DESC);
          oprot.writeString(struct.orderDisplay);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appkey != null) {
        if (struct.isSetAppkey()) {
          oprot.writeFieldBegin(APPKEY_FIELD_DESC);
          oprot.writeString(struct.appkey);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appsecret != null) {
        if (struct.isSetAppsecret()) {
          oprot.writeFieldBegin(APPSECRET_FIELD_DESC);
          oprot.writeString(struct.appsecret);
          oprot.writeFieldEnd();
        }
      }
      if (struct.bankType != null) {
        if (struct.isSetBankType()) {
          oprot.writeFieldBegin(BANK_TYPE_FIELD_DESC);
          oprot.writeString(struct.bankType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.bankName != null) {
        if (struct.isSetBankName()) {
          oprot.writeFieldBegin(BANK_NAME_FIELD_DESC);
          oprot.writeString(struct.bankName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.qrLogo != null) {
        if (struct.isSetQrLogo()) {
          oprot.writeFieldBegin(QR_LOGO_FIELD_DESC);
          oprot.writeString(struct.qrLogo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.returnUrl != null) {
        if (struct.isSetReturnUrl()) {
          oprot.writeFieldBegin(RETURN_URL_FIELD_DESC);
          oprot.writeString(struct.returnUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.remark != null) {
        if (struct.isSetRemark()) {
          oprot.writeFieldBegin(REMARK_FIELD_DESC);
          oprot.writeString(struct.remark);
          oprot.writeFieldEnd();
        }
      }
      if (struct.bankId != null) {
        if (struct.isSetBankId()) {
          oprot.writeFieldBegin(BANK_ID_FIELD_DESC);
          oprot.writeString(struct.bankId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.settlePayOrg != null) {
        if (struct.isSetSettlePayOrg()) {
          oprot.writeFieldBegin(SETTLE_PAY_ORG_FIELD_DESC);
          oprot.writeString(struct.settlePayOrg);
          oprot.writeFieldEnd();
        }
      }
      if (struct.bankOrg != null) {
        if (struct.isSetBankOrg()) {
          oprot.writeFieldBegin(BANK_ORG_FIELD_DESC);
          oprot.writeString(struct.bankOrg);
          oprot.writeFieldEnd();
        }
      }
      if (struct.bankZH != null) {
        if (struct.isSetBankZH()) {
          oprot.writeFieldBegin(BANK_ZH_FIELD_DESC);
          oprot.writeString(struct.bankZH);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ClientVoTupleSchemeFactory implements SchemeFactory {
    public ClientVoTupleScheme getScheme() {
      return new ClientVoTupleScheme();
    }
  }

  private static class ClientVoTupleScheme extends TupleScheme<ClientVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ClientVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetUri()) {
        optionals.set(2);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(3);
      }
      if (struct.isSetName()) {
        optionals.set(4);
      }
      if (struct.isSetPointPartnerNo()) {
        optionals.set(5);
      }
      if (struct.isSetOpenapiPartnerNo()) {
        optionals.set(6);
      }
      if (struct.isSetOrderDisplay()) {
        optionals.set(7);
      }
      if (struct.isSetAppkey()) {
        optionals.set(8);
      }
      if (struct.isSetAppsecret()) {
        optionals.set(9);
      }
      if (struct.isSetBankType()) {
        optionals.set(10);
      }
      if (struct.isSetBankName()) {
        optionals.set(11);
      }
      if (struct.isSetQrLogo()) {
        optionals.set(12);
      }
      if (struct.isSetReturnUrl()) {
        optionals.set(13);
      }
      if (struct.isSetRemark()) {
        optionals.set(14);
      }
      if (struct.isSetBankId()) {
        optionals.set(15);
      }
      if (struct.isSetSettlePayOrg()) {
        optionals.set(16);
      }
      if (struct.isSetBankOrg()) {
        optionals.set(17);
      }
      if (struct.isSetBankZH()) {
        optionals.set(18);
      }
      oprot.writeBitSet(optionals, 19);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetUri()) {
        oprot.writeString(struct.uri);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetPointPartnerNo()) {
        oprot.writeString(struct.pointPartnerNo);
      }
      if (struct.isSetOpenapiPartnerNo()) {
        oprot.writeString(struct.openapiPartnerNo);
      }
      if (struct.isSetOrderDisplay()) {
        oprot.writeString(struct.orderDisplay);
      }
      if (struct.isSetAppkey()) {
        oprot.writeString(struct.appkey);
      }
      if (struct.isSetAppsecret()) {
        oprot.writeString(struct.appsecret);
      }
      if (struct.isSetBankType()) {
        oprot.writeString(struct.bankType);
      }
      if (struct.isSetBankName()) {
        oprot.writeString(struct.bankName);
      }
      if (struct.isSetQrLogo()) {
        oprot.writeString(struct.qrLogo);
      }
      if (struct.isSetReturnUrl()) {
        oprot.writeString(struct.returnUrl);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetBankId()) {
        oprot.writeString(struct.bankId);
      }
      if (struct.isSetSettlePayOrg()) {
        oprot.writeString(struct.settlePayOrg);
      }
      if (struct.isSetBankOrg()) {
        oprot.writeString(struct.bankOrg);
      }
      if (struct.isSetBankZH()) {
        oprot.writeString(struct.bankZH);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ClientVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(19);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.uri = iprot.readString();
        struct.setUriIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.pointPartnerNo = iprot.readString();
        struct.setPointPartnerNoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.openapiPartnerNo = iprot.readString();
        struct.setOpenapiPartnerNoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orderDisplay = iprot.readString();
        struct.setOrderDisplayIsSet(true);
      }
      if (incoming.get(8)) {
        struct.appkey = iprot.readString();
        struct.setAppkeyIsSet(true);
      }
      if (incoming.get(9)) {
        struct.appsecret = iprot.readString();
        struct.setAppsecretIsSet(true);
      }
      if (incoming.get(10)) {
        struct.bankType = iprot.readString();
        struct.setBankTypeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.bankName = iprot.readString();
        struct.setBankNameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.qrLogo = iprot.readString();
        struct.setQrLogoIsSet(true);
      }
      if (incoming.get(13)) {
        struct.returnUrl = iprot.readString();
        struct.setReturnUrlIsSet(true);
      }
      if (incoming.get(14)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(15)) {
        struct.bankId = iprot.readString();
        struct.setBankIdIsSet(true);
      }
      if (incoming.get(16)) {
        struct.settlePayOrg = iprot.readString();
        struct.setSettlePayOrgIsSet(true);
      }
      if (incoming.get(17)) {
        struct.bankOrg = iprot.readString();
        struct.setBankOrgIsSet(true);
      }
      if (incoming.get(18)) {
        struct.bankZH = iprot.readString();
        struct.setBankZHIsSet(true);
      }
    }
  }

}

