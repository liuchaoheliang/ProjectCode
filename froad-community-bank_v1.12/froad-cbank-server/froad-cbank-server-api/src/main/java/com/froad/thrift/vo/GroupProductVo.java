/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 特惠商品信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class GroupProductVo implements org.apache.thrift.TBase<GroupProductVo, GroupProductVo._Fields>, java.io.Serializable, Cloneable, Comparable<GroupProductVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupProductVo");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField FULL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("fullName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField MARKET_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("marketPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField SELL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("sellCount", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField BRIEF_INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("briefIntroduction", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField SMALL_IMG_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("smallImgUrl", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField IS_SECKILL_FIELD_DESC = new org.apache.thrift.protocol.TField("isSeckill", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField SERVER_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("serverTime", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField SEC_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("secStartTime", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField SEC_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("secEndTime", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField STAR_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("starLevel", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField DISTANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("distance", org.apache.thrift.protocol.TType.DOUBLE, (short)16);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)17);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new GroupProductVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new GroupProductVoTupleSchemeFactory());
  }

  /**
   * 商品id
   */
  public String productId; // required
  /**
   * 商品名
   */
  public String name; // required
  /**
   * 商品全名
   */
  public String fullName; // required
  /**
   * 销售价
   */
  public double price; // required
  /**
   * 市场价
   */
  public double marketPrice; // required
  /**
   * 销售数量
   */
  public int sellCount; // required
  /**
   * 简介
   */
  public String briefIntroduction; // required
  /**
   * 小图片地址
   */
  public String smallImgUrl; // required
  /**
   * 团购或预售有效期开始
   */
  public long startTime; // required
  /**
   * 团购或预售有效期结束
   */
  public long endTime; // required
  /**
   * 是否秒杀 0非秒杀,1秒杀,2秒杀未上架
   */
  public String isSeckill; // required
  /**
   * 服务器时间
   */
  public long serverTime; // required
  /**
   * 秒杀开始时间
   */
  public long secStartTime; // required
  /**
   * 秒杀结束时间
   */
  public long secEndTime; // required
  /**
   * 评论星级
   */
  public int starLevel; // required
  /**
   * 距离
   */
  public double distance; // required
  /**
   * 门店地址
   */
  public String address; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 商品id
     */
    PRODUCT_ID((short)1, "productId"),
    /**
     * 商品名
     */
    NAME((short)2, "name"),
    /**
     * 商品全名
     */
    FULL_NAME((short)3, "fullName"),
    /**
     * 销售价
     */
    PRICE((short)4, "price"),
    /**
     * 市场价
     */
    MARKET_PRICE((short)5, "marketPrice"),
    /**
     * 销售数量
     */
    SELL_COUNT((short)6, "sellCount"),
    /**
     * 简介
     */
    BRIEF_INTRODUCTION((short)7, "briefIntroduction"),
    /**
     * 小图片地址
     */
    SMALL_IMG_URL((short)8, "smallImgUrl"),
    /**
     * 团购或预售有效期开始
     */
    START_TIME((short)9, "startTime"),
    /**
     * 团购或预售有效期结束
     */
    END_TIME((short)10, "endTime"),
    /**
     * 是否秒杀 0非秒杀,1秒杀,2秒杀未上架
     */
    IS_SECKILL((short)11, "isSeckill"),
    /**
     * 服务器时间
     */
    SERVER_TIME((short)12, "serverTime"),
    /**
     * 秒杀开始时间
     */
    SEC_START_TIME((short)13, "secStartTime"),
    /**
     * 秒杀结束时间
     */
    SEC_END_TIME((short)14, "secEndTime"),
    /**
     * 评论星级
     */
    STAR_LEVEL((short)15, "starLevel"),
    /**
     * 距离
     */
    DISTANCE((short)16, "distance"),
    /**
     * 门店地址
     */
    ADDRESS((short)17, "address");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // NAME
          return NAME;
        case 3: // FULL_NAME
          return FULL_NAME;
        case 4: // PRICE
          return PRICE;
        case 5: // MARKET_PRICE
          return MARKET_PRICE;
        case 6: // SELL_COUNT
          return SELL_COUNT;
        case 7: // BRIEF_INTRODUCTION
          return BRIEF_INTRODUCTION;
        case 8: // SMALL_IMG_URL
          return SMALL_IMG_URL;
        case 9: // START_TIME
          return START_TIME;
        case 10: // END_TIME
          return END_TIME;
        case 11: // IS_SECKILL
          return IS_SECKILL;
        case 12: // SERVER_TIME
          return SERVER_TIME;
        case 13: // SEC_START_TIME
          return SEC_START_TIME;
        case 14: // SEC_END_TIME
          return SEC_END_TIME;
        case 15: // STAR_LEVEL
          return STAR_LEVEL;
        case 16: // DISTANCE
          return DISTANCE;
        case 17: // ADDRESS
          return ADDRESS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PRICE_ISSET_ID = 0;
  private static final int __MARKETPRICE_ISSET_ID = 1;
  private static final int __SELLCOUNT_ISSET_ID = 2;
  private static final int __STARTTIME_ISSET_ID = 3;
  private static final int __ENDTIME_ISSET_ID = 4;
  private static final int __SERVERTIME_ISSET_ID = 5;
  private static final int __SECSTARTTIME_ISSET_ID = 6;
  private static final int __SECENDTIME_ISSET_ID = 7;
  private static final int __STARLEVEL_ISSET_ID = 8;
  private static final int __DISTANCE_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FULL_NAME, new org.apache.thrift.meta_data.FieldMetaData("fullName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MARKET_PRICE, new org.apache.thrift.meta_data.FieldMetaData("marketPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SELL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("sellCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BRIEF_INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("briefIntroduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SMALL_IMG_URL, new org.apache.thrift.meta_data.FieldMetaData("smallImgUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.IS_SECKILL, new org.apache.thrift.meta_data.FieldMetaData("isSeckill", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SERVER_TIME, new org.apache.thrift.meta_data.FieldMetaData("serverTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEC_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("secStartTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEC_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("secEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STAR_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("starLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DISTANCE, new org.apache.thrift.meta_data.FieldMetaData("distance", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupProductVo.class, metaDataMap);
  }

  public GroupProductVo() {
  }

  public GroupProductVo(
    String productId,
    String name,
    String fullName,
    double price,
    double marketPrice,
    int sellCount,
    String briefIntroduction,
    String smallImgUrl,
    long startTime,
    long endTime,
    String isSeckill,
    long serverTime,
    long secStartTime,
    long secEndTime,
    int starLevel,
    double distance,
    String address)
  {
    this();
    this.productId = productId;
    this.name = name;
    this.fullName = fullName;
    this.price = price;
    setPriceIsSet(true);
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    this.sellCount = sellCount;
    setSellCountIsSet(true);
    this.briefIntroduction = briefIntroduction;
    this.smallImgUrl = smallImgUrl;
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
    this.isSeckill = isSeckill;
    this.serverTime = serverTime;
    setServerTimeIsSet(true);
    this.secStartTime = secStartTime;
    setSecStartTimeIsSet(true);
    this.secEndTime = secEndTime;
    setSecEndTimeIsSet(true);
    this.starLevel = starLevel;
    setStarLevelIsSet(true);
    this.distance = distance;
    setDistanceIsSet(true);
    this.address = address;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GroupProductVo(GroupProductVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetFullName()) {
      this.fullName = other.fullName;
    }
    this.price = other.price;
    this.marketPrice = other.marketPrice;
    this.sellCount = other.sellCount;
    if (other.isSetBriefIntroduction()) {
      this.briefIntroduction = other.briefIntroduction;
    }
    if (other.isSetSmallImgUrl()) {
      this.smallImgUrl = other.smallImgUrl;
    }
    this.startTime = other.startTime;
    this.endTime = other.endTime;
    if (other.isSetIsSeckill()) {
      this.isSeckill = other.isSeckill;
    }
    this.serverTime = other.serverTime;
    this.secStartTime = other.secStartTime;
    this.secEndTime = other.secEndTime;
    this.starLevel = other.starLevel;
    this.distance = other.distance;
    if (other.isSetAddress()) {
      this.address = other.address;
    }
  }

  public GroupProductVo deepCopy() {
    return new GroupProductVo(this);
  }

  @Override
  public void clear() {
    this.productId = null;
    this.name = null;
    this.fullName = null;
    setPriceIsSet(false);
    this.price = 0.0;
    setMarketPriceIsSet(false);
    this.marketPrice = 0.0;
    setSellCountIsSet(false);
    this.sellCount = 0;
    this.briefIntroduction = null;
    this.smallImgUrl = null;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    this.isSeckill = null;
    setServerTimeIsSet(false);
    this.serverTime = 0;
    setSecStartTimeIsSet(false);
    this.secStartTime = 0;
    setSecEndTimeIsSet(false);
    this.secEndTime = 0;
    setStarLevelIsSet(false);
    this.starLevel = 0;
    setDistanceIsSet(false);
    this.distance = 0.0;
    this.address = null;
  }

  /**
   * 商品id
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品id
   */
  public GroupProductVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 商品名
   */
  public String getName() {
    return this.name;
  }

  /**
   * 商品名
   */
  public GroupProductVo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  /**
   * 商品全名
   */
  public String getFullName() {
    return this.fullName;
  }

  /**
   * 商品全名
   */
  public GroupProductVo setFullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  public void unsetFullName() {
    this.fullName = null;
  }

  /** Returns true if field fullName is set (has been assigned a value) and false otherwise */
  public boolean isSetFullName() {
    return this.fullName != null;
  }

  public void setFullNameIsSet(boolean value) {
    if (!value) {
      this.fullName = null;
    }
  }

  /**
   * 销售价
   */
  public double getPrice() {
    return this.price;
  }

  /**
   * 销售价
   */
  public GroupProductVo setPrice(double price) {
    this.price = price;
    setPriceIsSet(true);
    return this;
  }

  public void unsetPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  public void setPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRICE_ISSET_ID, value);
  }

  /**
   * 市场价
   */
  public double getMarketPrice() {
    return this.marketPrice;
  }

  /**
   * 市场价
   */
  public GroupProductVo setMarketPrice(double marketPrice) {
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    return this;
  }

  public void unsetMarketPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  /** Returns true if field marketPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetMarketPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  public void setMarketPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MARKETPRICE_ISSET_ID, value);
  }

  /**
   * 销售数量
   */
  public int getSellCount() {
    return this.sellCount;
  }

  /**
   * 销售数量
   */
  public GroupProductVo setSellCount(int sellCount) {
    this.sellCount = sellCount;
    setSellCountIsSet(true);
    return this;
  }

  public void unsetSellCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SELLCOUNT_ISSET_ID);
  }

  /** Returns true if field sellCount is set (has been assigned a value) and false otherwise */
  public boolean isSetSellCount() {
    return EncodingUtils.testBit(__isset_bitfield, __SELLCOUNT_ISSET_ID);
  }

  public void setSellCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SELLCOUNT_ISSET_ID, value);
  }

  /**
   * 简介
   */
  public String getBriefIntroduction() {
    return this.briefIntroduction;
  }

  /**
   * 简介
   */
  public GroupProductVo setBriefIntroduction(String briefIntroduction) {
    this.briefIntroduction = briefIntroduction;
    return this;
  }

  public void unsetBriefIntroduction() {
    this.briefIntroduction = null;
  }

  /** Returns true if field briefIntroduction is set (has been assigned a value) and false otherwise */
  public boolean isSetBriefIntroduction() {
    return this.briefIntroduction != null;
  }

  public void setBriefIntroductionIsSet(boolean value) {
    if (!value) {
      this.briefIntroduction = null;
    }
  }

  /**
   * 小图片地址
   */
  public String getSmallImgUrl() {
    return this.smallImgUrl;
  }

  /**
   * 小图片地址
   */
  public GroupProductVo setSmallImgUrl(String smallImgUrl) {
    this.smallImgUrl = smallImgUrl;
    return this;
  }

  public void unsetSmallImgUrl() {
    this.smallImgUrl = null;
  }

  /** Returns true if field smallImgUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetSmallImgUrl() {
    return this.smallImgUrl != null;
  }

  public void setSmallImgUrlIsSet(boolean value) {
    if (!value) {
      this.smallImgUrl = null;
    }
  }

  /**
   * 团购或预售有效期开始
   */
  public long getStartTime() {
    return this.startTime;
  }

  /**
   * 团购或预售有效期开始
   */
  public GroupProductVo setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  /**
   * 团购或预售有效期结束
   */
  public long getEndTime() {
    return this.endTime;
  }

  /**
   * 团购或预售有效期结束
   */
  public GroupProductVo setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  /**
   * 是否秒杀 0非秒杀,1秒杀,2秒杀未上架
   */
  public String getIsSeckill() {
    return this.isSeckill;
  }

  /**
   * 是否秒杀 0非秒杀,1秒杀,2秒杀未上架
   */
  public GroupProductVo setIsSeckill(String isSeckill) {
    this.isSeckill = isSeckill;
    return this;
  }

  public void unsetIsSeckill() {
    this.isSeckill = null;
  }

  /** Returns true if field isSeckill is set (has been assigned a value) and false otherwise */
  public boolean isSetIsSeckill() {
    return this.isSeckill != null;
  }

  public void setIsSeckillIsSet(boolean value) {
    if (!value) {
      this.isSeckill = null;
    }
  }

  /**
   * 服务器时间
   */
  public long getServerTime() {
    return this.serverTime;
  }

  /**
   * 服务器时间
   */
  public GroupProductVo setServerTime(long serverTime) {
    this.serverTime = serverTime;
    setServerTimeIsSet(true);
    return this;
  }

  public void unsetServerTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SERVERTIME_ISSET_ID);
  }

  /** Returns true if field serverTime is set (has been assigned a value) and false otherwise */
  public boolean isSetServerTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SERVERTIME_ISSET_ID);
  }

  public void setServerTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SERVERTIME_ISSET_ID, value);
  }

  /**
   * 秒杀开始时间
   */
  public long getSecStartTime() {
    return this.secStartTime;
  }

  /**
   * 秒杀开始时间
   */
  public GroupProductVo setSecStartTime(long secStartTime) {
    this.secStartTime = secStartTime;
    setSecStartTimeIsSet(true);
    return this;
  }

  public void unsetSecStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SECSTARTTIME_ISSET_ID);
  }

  /** Returns true if field secStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSecStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SECSTARTTIME_ISSET_ID);
  }

  public void setSecStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SECSTARTTIME_ISSET_ID, value);
  }

  /**
   * 秒杀结束时间
   */
  public long getSecEndTime() {
    return this.secEndTime;
  }

  /**
   * 秒杀结束时间
   */
  public GroupProductVo setSecEndTime(long secEndTime) {
    this.secEndTime = secEndTime;
    setSecEndTimeIsSet(true);
    return this;
  }

  public void unsetSecEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SECENDTIME_ISSET_ID);
  }

  /** Returns true if field secEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSecEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SECENDTIME_ISSET_ID);
  }

  public void setSecEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SECENDTIME_ISSET_ID, value);
  }

  /**
   * 评论星级
   */
  public int getStarLevel() {
    return this.starLevel;
  }

  /**
   * 评论星级
   */
  public GroupProductVo setStarLevel(int starLevel) {
    this.starLevel = starLevel;
    setStarLevelIsSet(true);
    return this;
  }

  public void unsetStarLevel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  /** Returns true if field starLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetStarLevel() {
    return EncodingUtils.testBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  public void setStarLevelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARLEVEL_ISSET_ID, value);
  }

  /**
   * 距离
   */
  public double getDistance() {
    return this.distance;
  }

  /**
   * 距离
   */
  public GroupProductVo setDistance(double distance) {
    this.distance = distance;
    setDistanceIsSet(true);
    return this;
  }

  public void unsetDistance() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DISTANCE_ISSET_ID);
  }

  /** Returns true if field distance is set (has been assigned a value) and false otherwise */
  public boolean isSetDistance() {
    return EncodingUtils.testBit(__isset_bitfield, __DISTANCE_ISSET_ID);
  }

  public void setDistanceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DISTANCE_ISSET_ID, value);
  }

  /**
   * 门店地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 门店地址
   */
  public GroupProductVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case FULL_NAME:
      if (value == null) {
        unsetFullName();
      } else {
        setFullName((String)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((Double)value);
      }
      break;

    case MARKET_PRICE:
      if (value == null) {
        unsetMarketPrice();
      } else {
        setMarketPrice((Double)value);
      }
      break;

    case SELL_COUNT:
      if (value == null) {
        unsetSellCount();
      } else {
        setSellCount((Integer)value);
      }
      break;

    case BRIEF_INTRODUCTION:
      if (value == null) {
        unsetBriefIntroduction();
      } else {
        setBriefIntroduction((String)value);
      }
      break;

    case SMALL_IMG_URL:
      if (value == null) {
        unsetSmallImgUrl();
      } else {
        setSmallImgUrl((String)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((Long)value);
      }
      break;

    case IS_SECKILL:
      if (value == null) {
        unsetIsSeckill();
      } else {
        setIsSeckill((String)value);
      }
      break;

    case SERVER_TIME:
      if (value == null) {
        unsetServerTime();
      } else {
        setServerTime((Long)value);
      }
      break;

    case SEC_START_TIME:
      if (value == null) {
        unsetSecStartTime();
      } else {
        setSecStartTime((Long)value);
      }
      break;

    case SEC_END_TIME:
      if (value == null) {
        unsetSecEndTime();
      } else {
        setSecEndTime((Long)value);
      }
      break;

    case STAR_LEVEL:
      if (value == null) {
        unsetStarLevel();
      } else {
        setStarLevel((Integer)value);
      }
      break;

    case DISTANCE:
      if (value == null) {
        unsetDistance();
      } else {
        setDistance((Double)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return getProductId();

    case NAME:
      return getName();

    case FULL_NAME:
      return getFullName();

    case PRICE:
      return Double.valueOf(getPrice());

    case MARKET_PRICE:
      return Double.valueOf(getMarketPrice());

    case SELL_COUNT:
      return Integer.valueOf(getSellCount());

    case BRIEF_INTRODUCTION:
      return getBriefIntroduction();

    case SMALL_IMG_URL:
      return getSmallImgUrl();

    case START_TIME:
      return Long.valueOf(getStartTime());

    case END_TIME:
      return Long.valueOf(getEndTime());

    case IS_SECKILL:
      return getIsSeckill();

    case SERVER_TIME:
      return Long.valueOf(getServerTime());

    case SEC_START_TIME:
      return Long.valueOf(getSecStartTime());

    case SEC_END_TIME:
      return Long.valueOf(getSecEndTime());

    case STAR_LEVEL:
      return Integer.valueOf(getStarLevel());

    case DISTANCE:
      return Double.valueOf(getDistance());

    case ADDRESS:
      return getAddress();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case NAME:
      return isSetName();
    case FULL_NAME:
      return isSetFullName();
    case PRICE:
      return isSetPrice();
    case MARKET_PRICE:
      return isSetMarketPrice();
    case SELL_COUNT:
      return isSetSellCount();
    case BRIEF_INTRODUCTION:
      return isSetBriefIntroduction();
    case SMALL_IMG_URL:
      return isSetSmallImgUrl();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case IS_SECKILL:
      return isSetIsSeckill();
    case SERVER_TIME:
      return isSetServerTime();
    case SEC_START_TIME:
      return isSetSecStartTime();
    case SEC_END_TIME:
      return isSetSecEndTime();
    case STAR_LEVEL:
      return isSetStarLevel();
    case DISTANCE:
      return isSetDistance();
    case ADDRESS:
      return isSetAddress();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof GroupProductVo)
      return this.equals((GroupProductVo)that);
    return false;
  }

  public boolean equals(GroupProductVo that) {
    if (that == null)
      return false;

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_fullName = true && this.isSetFullName();
    boolean that_present_fullName = true && that.isSetFullName();
    if (this_present_fullName || that_present_fullName) {
      if (!(this_present_fullName && that_present_fullName))
        return false;
      if (!this.fullName.equals(that.fullName))
        return false;
    }

    boolean this_present_price = true;
    boolean that_present_price = true;
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (this.price != that.price)
        return false;
    }

    boolean this_present_marketPrice = true;
    boolean that_present_marketPrice = true;
    if (this_present_marketPrice || that_present_marketPrice) {
      if (!(this_present_marketPrice && that_present_marketPrice))
        return false;
      if (this.marketPrice != that.marketPrice)
        return false;
    }

    boolean this_present_sellCount = true;
    boolean that_present_sellCount = true;
    if (this_present_sellCount || that_present_sellCount) {
      if (!(this_present_sellCount && that_present_sellCount))
        return false;
      if (this.sellCount != that.sellCount)
        return false;
    }

    boolean this_present_briefIntroduction = true && this.isSetBriefIntroduction();
    boolean that_present_briefIntroduction = true && that.isSetBriefIntroduction();
    if (this_present_briefIntroduction || that_present_briefIntroduction) {
      if (!(this_present_briefIntroduction && that_present_briefIntroduction))
        return false;
      if (!this.briefIntroduction.equals(that.briefIntroduction))
        return false;
    }

    boolean this_present_smallImgUrl = true && this.isSetSmallImgUrl();
    boolean that_present_smallImgUrl = true && that.isSetSmallImgUrl();
    if (this_present_smallImgUrl || that_present_smallImgUrl) {
      if (!(this_present_smallImgUrl && that_present_smallImgUrl))
        return false;
      if (!this.smallImgUrl.equals(that.smallImgUrl))
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_isSeckill = true && this.isSetIsSeckill();
    boolean that_present_isSeckill = true && that.isSetIsSeckill();
    if (this_present_isSeckill || that_present_isSeckill) {
      if (!(this_present_isSeckill && that_present_isSeckill))
        return false;
      if (!this.isSeckill.equals(that.isSeckill))
        return false;
    }

    boolean this_present_serverTime = true;
    boolean that_present_serverTime = true;
    if (this_present_serverTime || that_present_serverTime) {
      if (!(this_present_serverTime && that_present_serverTime))
        return false;
      if (this.serverTime != that.serverTime)
        return false;
    }

    boolean this_present_secStartTime = true;
    boolean that_present_secStartTime = true;
    if (this_present_secStartTime || that_present_secStartTime) {
      if (!(this_present_secStartTime && that_present_secStartTime))
        return false;
      if (this.secStartTime != that.secStartTime)
        return false;
    }

    boolean this_present_secEndTime = true;
    boolean that_present_secEndTime = true;
    if (this_present_secEndTime || that_present_secEndTime) {
      if (!(this_present_secEndTime && that_present_secEndTime))
        return false;
      if (this.secEndTime != that.secEndTime)
        return false;
    }

    boolean this_present_starLevel = true;
    boolean that_present_starLevel = true;
    if (this_present_starLevel || that_present_starLevel) {
      if (!(this_present_starLevel && that_present_starLevel))
        return false;
      if (this.starLevel != that.starLevel)
        return false;
    }

    boolean this_present_distance = true;
    boolean that_present_distance = true;
    if (this_present_distance || that_present_distance) {
      if (!(this_present_distance && that_present_distance))
        return false;
      if (this.distance != that.distance)
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_fullName = true && (isSetFullName());
    list.add(present_fullName);
    if (present_fullName)
      list.add(fullName);

    boolean present_price = true;
    list.add(present_price);
    if (present_price)
      list.add(price);

    boolean present_marketPrice = true;
    list.add(present_marketPrice);
    if (present_marketPrice)
      list.add(marketPrice);

    boolean present_sellCount = true;
    list.add(present_sellCount);
    if (present_sellCount)
      list.add(sellCount);

    boolean present_briefIntroduction = true && (isSetBriefIntroduction());
    list.add(present_briefIntroduction);
    if (present_briefIntroduction)
      list.add(briefIntroduction);

    boolean present_smallImgUrl = true && (isSetSmallImgUrl());
    list.add(present_smallImgUrl);
    if (present_smallImgUrl)
      list.add(smallImgUrl);

    boolean present_startTime = true;
    list.add(present_startTime);
    if (present_startTime)
      list.add(startTime);

    boolean present_endTime = true;
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    boolean present_isSeckill = true && (isSetIsSeckill());
    list.add(present_isSeckill);
    if (present_isSeckill)
      list.add(isSeckill);

    boolean present_serverTime = true;
    list.add(present_serverTime);
    if (present_serverTime)
      list.add(serverTime);

    boolean present_secStartTime = true;
    list.add(present_secStartTime);
    if (present_secStartTime)
      list.add(secStartTime);

    boolean present_secEndTime = true;
    list.add(present_secEndTime);
    if (present_secEndTime)
      list.add(secEndTime);

    boolean present_starLevel = true;
    list.add(present_starLevel);
    if (present_starLevel)
      list.add(starLevel);

    boolean present_distance = true;
    list.add(present_distance);
    if (present_distance)
      list.add(distance);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    return list.hashCode();
  }

  @Override
  public int compareTo(GroupProductVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFullName()).compareTo(other.isSetFullName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFullName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fullName, other.fullName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMarketPrice()).compareTo(other.isSetMarketPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarketPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marketPrice, other.marketPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellCount()).compareTo(other.isSetSellCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellCount, other.sellCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBriefIntroduction()).compareTo(other.isSetBriefIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBriefIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.briefIntroduction, other.briefIntroduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSmallImgUrl()).compareTo(other.isSetSmallImgUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSmallImgUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.smallImgUrl, other.smallImgUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsSeckill()).compareTo(other.isSetIsSeckill());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsSeckill()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isSeckill, other.isSeckill);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetServerTime()).compareTo(other.isSetServerTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetServerTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serverTime, other.serverTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSecStartTime()).compareTo(other.isSetSecStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secStartTime, other.secStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSecEndTime()).compareTo(other.isSetSecEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secEndTime, other.secEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarLevel()).compareTo(other.isSetStarLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starLevel, other.starLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDistance()).compareTo(other.isSetDistance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.distance, other.distance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("GroupProductVo(");
    boolean first = true;

    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fullName:");
    if (this.fullName == null) {
      sb.append("null");
    } else {
      sb.append(this.fullName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    sb.append(this.price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("marketPrice:");
    sb.append(this.marketPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellCount:");
    sb.append(this.sellCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("briefIntroduction:");
    if (this.briefIntroduction == null) {
      sb.append("null");
    } else {
      sb.append(this.briefIntroduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("smallImgUrl:");
    if (this.smallImgUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.smallImgUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isSeckill:");
    if (this.isSeckill == null) {
      sb.append("null");
    } else {
      sb.append(this.isSeckill);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("serverTime:");
    sb.append(this.serverTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("secStartTime:");
    sb.append(this.secStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("secEndTime:");
    sb.append(this.secEndTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("starLevel:");
    sb.append(this.starLevel);
    first = false;
    if (!first) sb.append(", ");
    sb.append("distance:");
    sb.append(this.distance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GroupProductVoStandardSchemeFactory implements SchemeFactory {
    public GroupProductVoStandardScheme getScheme() {
      return new GroupProductVoStandardScheme();
    }
  }

  private static class GroupProductVoStandardScheme extends StandardScheme<GroupProductVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GroupProductVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FULL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fullName = iprot.readString();
              struct.setFullNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.price = iprot.readDouble();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MARKET_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.marketPrice = iprot.readDouble();
              struct.setMarketPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SELL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sellCount = iprot.readI32();
              struct.setSellCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BRIEF_INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.briefIntroduction = iprot.readString();
              struct.setBriefIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SMALL_IMG_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.smallImgUrl = iprot.readString();
              struct.setSmallImgUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // IS_SECKILL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isSeckill = iprot.readString();
              struct.setIsSeckillIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SERVER_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.serverTime = iprot.readI64();
              struct.setServerTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // SEC_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.secStartTime = iprot.readI64();
              struct.setSecStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // SEC_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.secEndTime = iprot.readI64();
              struct.setSecEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // STAR_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.starLevel = iprot.readI32();
              struct.setStarLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // DISTANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.distance = iprot.readDouble();
              struct.setDistanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GroupProductVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.fullName != null) {
        oprot.writeFieldBegin(FULL_NAME_FIELD_DESC);
        oprot.writeString(struct.fullName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeDouble(struct.price);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MARKET_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.marketPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SELL_COUNT_FIELD_DESC);
      oprot.writeI32(struct.sellCount);
      oprot.writeFieldEnd();
      if (struct.briefIntroduction != null) {
        oprot.writeFieldBegin(BRIEF_INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.briefIntroduction);
        oprot.writeFieldEnd();
      }
      if (struct.smallImgUrl != null) {
        oprot.writeFieldBegin(SMALL_IMG_URL_FIELD_DESC);
        oprot.writeString(struct.smallImgUrl);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      if (struct.isSeckill != null) {
        oprot.writeFieldBegin(IS_SECKILL_FIELD_DESC);
        oprot.writeString(struct.isSeckill);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SERVER_TIME_FIELD_DESC);
      oprot.writeI64(struct.serverTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SEC_START_TIME_FIELD_DESC);
      oprot.writeI64(struct.secStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SEC_END_TIME_FIELD_DESC);
      oprot.writeI64(struct.secEndTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STAR_LEVEL_FIELD_DESC);
      oprot.writeI32(struct.starLevel);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DISTANCE_FIELD_DESC);
      oprot.writeDouble(struct.distance);
      oprot.writeFieldEnd();
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        oprot.writeString(struct.address);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GroupProductVoTupleSchemeFactory implements SchemeFactory {
    public GroupProductVoTupleScheme getScheme() {
      return new GroupProductVoTupleScheme();
    }
  }

  private static class GroupProductVoTupleScheme extends TupleScheme<GroupProductVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GroupProductVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProductId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetFullName()) {
        optionals.set(2);
      }
      if (struct.isSetPrice()) {
        optionals.set(3);
      }
      if (struct.isSetMarketPrice()) {
        optionals.set(4);
      }
      if (struct.isSetSellCount()) {
        optionals.set(5);
      }
      if (struct.isSetBriefIntroduction()) {
        optionals.set(6);
      }
      if (struct.isSetSmallImgUrl()) {
        optionals.set(7);
      }
      if (struct.isSetStartTime()) {
        optionals.set(8);
      }
      if (struct.isSetEndTime()) {
        optionals.set(9);
      }
      if (struct.isSetIsSeckill()) {
        optionals.set(10);
      }
      if (struct.isSetServerTime()) {
        optionals.set(11);
      }
      if (struct.isSetSecStartTime()) {
        optionals.set(12);
      }
      if (struct.isSetSecEndTime()) {
        optionals.set(13);
      }
      if (struct.isSetStarLevel()) {
        optionals.set(14);
      }
      if (struct.isSetDistance()) {
        optionals.set(15);
      }
      if (struct.isSetAddress()) {
        optionals.set(16);
      }
      oprot.writeBitSet(optionals, 17);
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetFullName()) {
        oprot.writeString(struct.fullName);
      }
      if (struct.isSetPrice()) {
        oprot.writeDouble(struct.price);
      }
      if (struct.isSetMarketPrice()) {
        oprot.writeDouble(struct.marketPrice);
      }
      if (struct.isSetSellCount()) {
        oprot.writeI32(struct.sellCount);
      }
      if (struct.isSetBriefIntroduction()) {
        oprot.writeString(struct.briefIntroduction);
      }
      if (struct.isSetSmallImgUrl()) {
        oprot.writeString(struct.smallImgUrl);
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetIsSeckill()) {
        oprot.writeString(struct.isSeckill);
      }
      if (struct.isSetServerTime()) {
        oprot.writeI64(struct.serverTime);
      }
      if (struct.isSetSecStartTime()) {
        oprot.writeI64(struct.secStartTime);
      }
      if (struct.isSetSecEndTime()) {
        oprot.writeI64(struct.secEndTime);
      }
      if (struct.isSetStarLevel()) {
        oprot.writeI32(struct.starLevel);
      }
      if (struct.isSetDistance()) {
        oprot.writeDouble(struct.distance);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GroupProductVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(17);
      if (incoming.get(0)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.fullName = iprot.readString();
        struct.setFullNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.price = iprot.readDouble();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(4)) {
        struct.marketPrice = iprot.readDouble();
        struct.setMarketPriceIsSet(true);
      }
      if (incoming.get(5)) {
        struct.sellCount = iprot.readI32();
        struct.setSellCountIsSet(true);
      }
      if (incoming.get(6)) {
        struct.briefIntroduction = iprot.readString();
        struct.setBriefIntroductionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.smallImgUrl = iprot.readString();
        struct.setSmallImgUrlIsSet(true);
      }
      if (incoming.get(8)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.isSeckill = iprot.readString();
        struct.setIsSeckillIsSet(true);
      }
      if (incoming.get(11)) {
        struct.serverTime = iprot.readI64();
        struct.setServerTimeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.secStartTime = iprot.readI64();
        struct.setSecStartTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.secEndTime = iprot.readI64();
        struct.setSecEndTimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.starLevel = iprot.readI32();
        struct.setStarLevelIsSet(true);
      }
      if (incoming.get(15)) {
        struct.distance = iprot.readDouble();
        struct.setDistanceIsSet(true);
      }
      if (incoming.get(16)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
    }
  }

}

