/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MerchantRoleResourceService {

  /**
   * MerchantRoleResourceService
   */
  public interface Iface extends com.froad.thrift.monitor.service.BizMonitorService.Iface {

    /**
     * 增加 MerchantRoleResource
     * @param merchantRoleResource
     * @return MerchantRoleResourceAddVoRes
     * 
     * @param originVo
     * @param merchantRoleResourceVo
     */
    public com.froad.thrift.vo.MerchantRoleResourceAddVoRes addMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo) throws org.apache.thrift.TException;

    /**
     * 删除 MerchantRoleResource
     * @param _id (client_id_role_id)
     * @return ResultVo
     * 
     * @param originVo
     * @param _id
     */
    public com.froad.thrift.vo.ResultVo deleteMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, String _id) throws org.apache.thrift.TException;

    /**
     * 修改 MerchantRoleResource
     * @param merchantRoleResource
     * @return ResultVo
     * 
     * @param originVo
     * @param merchantRoleResourceVo
     */
    public com.froad.thrift.vo.ResultVo updateMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo) throws org.apache.thrift.TException;

    /**
     * 查询 MerchantRoleResource
     * @param _id (client_id_role_id)
     * @return MerchantRoleResourceVo
     * 
     * @param _id
     */
    public com.froad.thrift.vo.MerchantRoleResourceVo getMerchantRoleResource(String _id) throws org.apache.thrift.TException;

    /**
     * 查询 List<MerchantRoleResource>
     * @param client_id
     * @return List<MerchantRoleResourceVo>
     * 
     * @param client_id
     */
    public List<com.froad.thrift.vo.MerchantRoleResourceVo> getMerchantRoleResourceListByClientId(String client_id) throws org.apache.thrift.TException;

    /**
     * 查询 List<MerchantRoleResource> (全部)
     * @return List<MerchantRoleResourceVo>
     */
    public List<com.froad.thrift.vo.MerchantRoleResourceVo> getMerchantRoleResourceList() throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends com.froad.thrift.monitor.service.BizMonitorService .AsyncIface {

    public void addMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void deleteMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, String _id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void updateMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getMerchantRoleResource(String _id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getMerchantRoleResourceListByClientId(String client_id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getMerchantRoleResourceList(org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends com.froad.thrift.monitor.service.BizMonitorService.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.froad.thrift.vo.MerchantRoleResourceAddVoRes addMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo) throws org.apache.thrift.TException
    {
      send_addMerchantRoleResource(originVo, merchantRoleResourceVo);
      return recv_addMerchantRoleResource();
    }

    public void send_addMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo) throws org.apache.thrift.TException
    {
      addMerchantRoleResource_args args = new addMerchantRoleResource_args();
      args.setOriginVo(originVo);
      args.setMerchantRoleResourceVo(merchantRoleResourceVo);
      sendBase("addMerchantRoleResource", args);
    }

    public com.froad.thrift.vo.MerchantRoleResourceAddVoRes recv_addMerchantRoleResource() throws org.apache.thrift.TException
    {
      addMerchantRoleResource_result result = new addMerchantRoleResource_result();
      receiveBase(result, "addMerchantRoleResource");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addMerchantRoleResource failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo deleteMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, String _id) throws org.apache.thrift.TException
    {
      send_deleteMerchantRoleResource(originVo, _id);
      return recv_deleteMerchantRoleResource();
    }

    public void send_deleteMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, String _id) throws org.apache.thrift.TException
    {
      deleteMerchantRoleResource_args args = new deleteMerchantRoleResource_args();
      args.setOriginVo(originVo);
      args.set_id(_id);
      sendBase("deleteMerchantRoleResource", args);
    }

    public com.froad.thrift.vo.ResultVo recv_deleteMerchantRoleResource() throws org.apache.thrift.TException
    {
      deleteMerchantRoleResource_result result = new deleteMerchantRoleResource_result();
      receiveBase(result, "deleteMerchantRoleResource");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteMerchantRoleResource failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo updateMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo) throws org.apache.thrift.TException
    {
      send_updateMerchantRoleResource(originVo, merchantRoleResourceVo);
      return recv_updateMerchantRoleResource();
    }

    public void send_updateMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo) throws org.apache.thrift.TException
    {
      updateMerchantRoleResource_args args = new updateMerchantRoleResource_args();
      args.setOriginVo(originVo);
      args.setMerchantRoleResourceVo(merchantRoleResourceVo);
      sendBase("updateMerchantRoleResource", args);
    }

    public com.froad.thrift.vo.ResultVo recv_updateMerchantRoleResource() throws org.apache.thrift.TException
    {
      updateMerchantRoleResource_result result = new updateMerchantRoleResource_result();
      receiveBase(result, "updateMerchantRoleResource");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateMerchantRoleResource failed: unknown result");
    }

    public com.froad.thrift.vo.MerchantRoleResourceVo getMerchantRoleResource(String _id) throws org.apache.thrift.TException
    {
      send_getMerchantRoleResource(_id);
      return recv_getMerchantRoleResource();
    }

    public void send_getMerchantRoleResource(String _id) throws org.apache.thrift.TException
    {
      getMerchantRoleResource_args args = new getMerchantRoleResource_args();
      args.set_id(_id);
      sendBase("getMerchantRoleResource", args);
    }

    public com.froad.thrift.vo.MerchantRoleResourceVo recv_getMerchantRoleResource() throws org.apache.thrift.TException
    {
      getMerchantRoleResource_result result = new getMerchantRoleResource_result();
      receiveBase(result, "getMerchantRoleResource");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getMerchantRoleResource failed: unknown result");
    }

    public List<com.froad.thrift.vo.MerchantRoleResourceVo> getMerchantRoleResourceListByClientId(String client_id) throws org.apache.thrift.TException
    {
      send_getMerchantRoleResourceListByClientId(client_id);
      return recv_getMerchantRoleResourceListByClientId();
    }

    public void send_getMerchantRoleResourceListByClientId(String client_id) throws org.apache.thrift.TException
    {
      getMerchantRoleResourceListByClientId_args args = new getMerchantRoleResourceListByClientId_args();
      args.setClient_id(client_id);
      sendBase("getMerchantRoleResourceListByClientId", args);
    }

    public List<com.froad.thrift.vo.MerchantRoleResourceVo> recv_getMerchantRoleResourceListByClientId() throws org.apache.thrift.TException
    {
      getMerchantRoleResourceListByClientId_result result = new getMerchantRoleResourceListByClientId_result();
      receiveBase(result, "getMerchantRoleResourceListByClientId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getMerchantRoleResourceListByClientId failed: unknown result");
    }

    public List<com.froad.thrift.vo.MerchantRoleResourceVo> getMerchantRoleResourceList() throws org.apache.thrift.TException
    {
      send_getMerchantRoleResourceList();
      return recv_getMerchantRoleResourceList();
    }

    public void send_getMerchantRoleResourceList() throws org.apache.thrift.TException
    {
      getMerchantRoleResourceList_args args = new getMerchantRoleResourceList_args();
      sendBase("getMerchantRoleResourceList", args);
    }

    public List<com.froad.thrift.vo.MerchantRoleResourceVo> recv_getMerchantRoleResourceList() throws org.apache.thrift.TException
    {
      getMerchantRoleResourceList_result result = new getMerchantRoleResourceList_result();
      receiveBase(result, "getMerchantRoleResourceList");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getMerchantRoleResourceList failed: unknown result");
    }

  }
  public static class AsyncClient extends com.froad.thrift.monitor.service.BizMonitorService.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void addMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addMerchantRoleResource_call method_call = new addMerchantRoleResource_call(originVo, merchantRoleResourceVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addMerchantRoleResource_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo;
      public addMerchantRoleResource_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.merchantRoleResourceVo = merchantRoleResourceVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addMerchantRoleResource", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addMerchantRoleResource_args args = new addMerchantRoleResource_args();
        args.setOriginVo(originVo);
        args.setMerchantRoleResourceVo(merchantRoleResourceVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.MerchantRoleResourceAddVoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addMerchantRoleResource();
      }
    }

    public void deleteMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, String _id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteMerchantRoleResource_call method_call = new deleteMerchantRoleResource_call(originVo, _id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteMerchantRoleResource_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private String _id;
      public deleteMerchantRoleResource_call(com.froad.thrift.vo.OriginVo originVo, String _id, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this._id = _id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteMerchantRoleResource", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteMerchantRoleResource_args args = new deleteMerchantRoleResource_args();
        args.setOriginVo(originVo);
        args.set_id(_id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deleteMerchantRoleResource();
      }
    }

    public void updateMerchantRoleResource(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateMerchantRoleResource_call method_call = new updateMerchantRoleResource_call(originVo, merchantRoleResourceVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateMerchantRoleResource_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo;
      public updateMerchantRoleResource_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.merchantRoleResourceVo = merchantRoleResourceVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateMerchantRoleResource", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateMerchantRoleResource_args args = new updateMerchantRoleResource_args();
        args.setOriginVo(originVo);
        args.setMerchantRoleResourceVo(merchantRoleResourceVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateMerchantRoleResource();
      }
    }

    public void getMerchantRoleResource(String _id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getMerchantRoleResource_call method_call = new getMerchantRoleResource_call(_id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getMerchantRoleResource_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String _id;
      public getMerchantRoleResource_call(String _id, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this._id = _id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getMerchantRoleResource", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getMerchantRoleResource_args args = new getMerchantRoleResource_args();
        args.set_id(_id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.MerchantRoleResourceVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getMerchantRoleResource();
      }
    }

    public void getMerchantRoleResourceListByClientId(String client_id, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getMerchantRoleResourceListByClientId_call method_call = new getMerchantRoleResourceListByClientId_call(client_id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getMerchantRoleResourceListByClientId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String client_id;
      public getMerchantRoleResourceListByClientId_call(String client_id, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.client_id = client_id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getMerchantRoleResourceListByClientId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getMerchantRoleResourceListByClientId_args args = new getMerchantRoleResourceListByClientId_args();
        args.setClient_id(client_id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<com.froad.thrift.vo.MerchantRoleResourceVo> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getMerchantRoleResourceListByClientId();
      }
    }

    public void getMerchantRoleResourceList(org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getMerchantRoleResourceList_call method_call = new getMerchantRoleResourceList_call(resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getMerchantRoleResourceList_call extends org.apache.thrift.async.TAsyncMethodCall {
      public getMerchantRoleResourceList_call(org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getMerchantRoleResourceList", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getMerchantRoleResourceList_args args = new getMerchantRoleResourceList_args();
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<com.froad.thrift.vo.MerchantRoleResourceVo> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getMerchantRoleResourceList();
      }
    }

  }

  public static class Processor<I extends Iface> extends com.froad.thrift.monitor.service.BizMonitorService.Processor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("addMerchantRoleResource", new addMerchantRoleResource());
      processMap.put("deleteMerchantRoleResource", new deleteMerchantRoleResource());
      processMap.put("updateMerchantRoleResource", new updateMerchantRoleResource());
      processMap.put("getMerchantRoleResource", new getMerchantRoleResource());
      processMap.put("getMerchantRoleResourceListByClientId", new getMerchantRoleResourceListByClientId());
      processMap.put("getMerchantRoleResourceList", new getMerchantRoleResourceList());
      return processMap;
    }

    public static class addMerchantRoleResource<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addMerchantRoleResource_args> {
      public addMerchantRoleResource() {
        super("addMerchantRoleResource");
      }

      public addMerchantRoleResource_args getEmptyArgsInstance() {
        return new addMerchantRoleResource_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addMerchantRoleResource_result getResult(I iface, addMerchantRoleResource_args args) throws org.apache.thrift.TException {
        addMerchantRoleResource_result result = new addMerchantRoleResource_result();
        result.success = iface.addMerchantRoleResource(args.originVo, args.merchantRoleResourceVo);
        return result;
      }
    }

    public static class deleteMerchantRoleResource<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteMerchantRoleResource_args> {
      public deleteMerchantRoleResource() {
        super("deleteMerchantRoleResource");
      }

      public deleteMerchantRoleResource_args getEmptyArgsInstance() {
        return new deleteMerchantRoleResource_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteMerchantRoleResource_result getResult(I iface, deleteMerchantRoleResource_args args) throws org.apache.thrift.TException {
        deleteMerchantRoleResource_result result = new deleteMerchantRoleResource_result();
        result.success = iface.deleteMerchantRoleResource(args.originVo, args._id);
        return result;
      }
    }

    public static class updateMerchantRoleResource<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateMerchantRoleResource_args> {
      public updateMerchantRoleResource() {
        super("updateMerchantRoleResource");
      }

      public updateMerchantRoleResource_args getEmptyArgsInstance() {
        return new updateMerchantRoleResource_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateMerchantRoleResource_result getResult(I iface, updateMerchantRoleResource_args args) throws org.apache.thrift.TException {
        updateMerchantRoleResource_result result = new updateMerchantRoleResource_result();
        result.success = iface.updateMerchantRoleResource(args.originVo, args.merchantRoleResourceVo);
        return result;
      }
    }

    public static class getMerchantRoleResource<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getMerchantRoleResource_args> {
      public getMerchantRoleResource() {
        super("getMerchantRoleResource");
      }

      public getMerchantRoleResource_args getEmptyArgsInstance() {
        return new getMerchantRoleResource_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getMerchantRoleResource_result getResult(I iface, getMerchantRoleResource_args args) throws org.apache.thrift.TException {
        getMerchantRoleResource_result result = new getMerchantRoleResource_result();
        result.success = iface.getMerchantRoleResource(args._id);
        return result;
      }
    }

    public static class getMerchantRoleResourceListByClientId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getMerchantRoleResourceListByClientId_args> {
      public getMerchantRoleResourceListByClientId() {
        super("getMerchantRoleResourceListByClientId");
      }

      public getMerchantRoleResourceListByClientId_args getEmptyArgsInstance() {
        return new getMerchantRoleResourceListByClientId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getMerchantRoleResourceListByClientId_result getResult(I iface, getMerchantRoleResourceListByClientId_args args) throws org.apache.thrift.TException {
        getMerchantRoleResourceListByClientId_result result = new getMerchantRoleResourceListByClientId_result();
        result.success = iface.getMerchantRoleResourceListByClientId(args.client_id);
        return result;
      }
    }

    public static class getMerchantRoleResourceList<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getMerchantRoleResourceList_args> {
      public getMerchantRoleResourceList() {
        super("getMerchantRoleResourceList");
      }

      public getMerchantRoleResourceList_args getEmptyArgsInstance() {
        return new getMerchantRoleResourceList_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getMerchantRoleResourceList_result getResult(I iface, getMerchantRoleResourceList_args args) throws org.apache.thrift.TException {
        getMerchantRoleResourceList_result result = new getMerchantRoleResourceList_result();
        result.success = iface.getMerchantRoleResourceList();
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends com.froad.thrift.monitor.service.BizMonitorService.AsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("addMerchantRoleResource", new addMerchantRoleResource());
      processMap.put("deleteMerchantRoleResource", new deleteMerchantRoleResource());
      processMap.put("updateMerchantRoleResource", new updateMerchantRoleResource());
      processMap.put("getMerchantRoleResource", new getMerchantRoleResource());
      processMap.put("getMerchantRoleResourceListByClientId", new getMerchantRoleResourceListByClientId());
      processMap.put("getMerchantRoleResourceList", new getMerchantRoleResourceList());
      return processMap;
    }

    public static class addMerchantRoleResource<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addMerchantRoleResource_args, com.froad.thrift.vo.MerchantRoleResourceAddVoRes> {
      public addMerchantRoleResource() {
        super("addMerchantRoleResource");
      }

      public addMerchantRoleResource_args getEmptyArgsInstance() {
        return new addMerchantRoleResource_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.MerchantRoleResourceAddVoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.MerchantRoleResourceAddVoRes>() { 
          public void onComplete(com.froad.thrift.vo.MerchantRoleResourceAddVoRes o) {
            addMerchantRoleResource_result result = new addMerchantRoleResource_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addMerchantRoleResource_result result = new addMerchantRoleResource_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addMerchantRoleResource_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.MerchantRoleResourceAddVoRes> resultHandler) throws TException {
        iface.addMerchantRoleResource(args.originVo, args.merchantRoleResourceVo,resultHandler);
      }
    }

    public static class deleteMerchantRoleResource<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteMerchantRoleResource_args, com.froad.thrift.vo.ResultVo> {
      public deleteMerchantRoleResource() {
        super("deleteMerchantRoleResource");
      }

      public deleteMerchantRoleResource_args getEmptyArgsInstance() {
        return new deleteMerchantRoleResource_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            deleteMerchantRoleResource_result result = new deleteMerchantRoleResource_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            deleteMerchantRoleResource_result result = new deleteMerchantRoleResource_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteMerchantRoleResource_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.deleteMerchantRoleResource(args.originVo, args._id,resultHandler);
      }
    }

    public static class updateMerchantRoleResource<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateMerchantRoleResource_args, com.froad.thrift.vo.ResultVo> {
      public updateMerchantRoleResource() {
        super("updateMerchantRoleResource");
      }

      public updateMerchantRoleResource_args getEmptyArgsInstance() {
        return new updateMerchantRoleResource_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            updateMerchantRoleResource_result result = new updateMerchantRoleResource_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            updateMerchantRoleResource_result result = new updateMerchantRoleResource_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateMerchantRoleResource_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.updateMerchantRoleResource(args.originVo, args.merchantRoleResourceVo,resultHandler);
      }
    }

    public static class getMerchantRoleResource<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getMerchantRoleResource_args, com.froad.thrift.vo.MerchantRoleResourceVo> {
      public getMerchantRoleResource() {
        super("getMerchantRoleResource");
      }

      public getMerchantRoleResource_args getEmptyArgsInstance() {
        return new getMerchantRoleResource_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.MerchantRoleResourceVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.MerchantRoleResourceVo>() { 
          public void onComplete(com.froad.thrift.vo.MerchantRoleResourceVo o) {
            getMerchantRoleResource_result result = new getMerchantRoleResource_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getMerchantRoleResource_result result = new getMerchantRoleResource_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getMerchantRoleResource_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.MerchantRoleResourceVo> resultHandler) throws TException {
        iface.getMerchantRoleResource(args._id,resultHandler);
      }
    }

    public static class getMerchantRoleResourceListByClientId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getMerchantRoleResourceListByClientId_args, List<com.froad.thrift.vo.MerchantRoleResourceVo>> {
      public getMerchantRoleResourceListByClientId() {
        super("getMerchantRoleResourceListByClientId");
      }

      public getMerchantRoleResourceListByClientId_args getEmptyArgsInstance() {
        return new getMerchantRoleResourceListByClientId_args();
      }

      public AsyncMethodCallback<List<com.froad.thrift.vo.MerchantRoleResourceVo>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<com.froad.thrift.vo.MerchantRoleResourceVo>>() { 
          public void onComplete(List<com.froad.thrift.vo.MerchantRoleResourceVo> o) {
            getMerchantRoleResourceListByClientId_result result = new getMerchantRoleResourceListByClientId_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getMerchantRoleResourceListByClientId_result result = new getMerchantRoleResourceListByClientId_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getMerchantRoleResourceListByClientId_args args, org.apache.thrift.async.AsyncMethodCallback<List<com.froad.thrift.vo.MerchantRoleResourceVo>> resultHandler) throws TException {
        iface.getMerchantRoleResourceListByClientId(args.client_id,resultHandler);
      }
    }

    public static class getMerchantRoleResourceList<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getMerchantRoleResourceList_args, List<com.froad.thrift.vo.MerchantRoleResourceVo>> {
      public getMerchantRoleResourceList() {
        super("getMerchantRoleResourceList");
      }

      public getMerchantRoleResourceList_args getEmptyArgsInstance() {
        return new getMerchantRoleResourceList_args();
      }

      public AsyncMethodCallback<List<com.froad.thrift.vo.MerchantRoleResourceVo>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<com.froad.thrift.vo.MerchantRoleResourceVo>>() { 
          public void onComplete(List<com.froad.thrift.vo.MerchantRoleResourceVo> o) {
            getMerchantRoleResourceList_result result = new getMerchantRoleResourceList_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getMerchantRoleResourceList_result result = new getMerchantRoleResourceList_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getMerchantRoleResourceList_args args, org.apache.thrift.async.AsyncMethodCallback<List<com.froad.thrift.vo.MerchantRoleResourceVo>> resultHandler) throws TException {
        iface.getMerchantRoleResourceList(resultHandler);
      }
    }

  }

  public static class addMerchantRoleResource_args implements org.apache.thrift.TBase<addMerchantRoleResource_args, addMerchantRoleResource_args._Fields>, java.io.Serializable, Cloneable, Comparable<addMerchantRoleResource_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addMerchantRoleResource_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField MERCHANT_ROLE_RESOURCE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantRoleResourceVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addMerchantRoleResource_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addMerchantRoleResource_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      MERCHANT_ROLE_RESOURCE_VO((short)2, "merchantRoleResourceVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // MERCHANT_ROLE_RESOURCE_VO
            return MERCHANT_ROLE_RESOURCE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.MERCHANT_ROLE_RESOURCE_VO, new org.apache.thrift.meta_data.FieldMetaData("merchantRoleResourceVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.MerchantRoleResourceVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addMerchantRoleResource_args.class, metaDataMap);
    }

    public addMerchantRoleResource_args() {
    }

    public addMerchantRoleResource_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo)
    {
      this();
      this.originVo = originVo;
      this.merchantRoleResourceVo = merchantRoleResourceVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addMerchantRoleResource_args(addMerchantRoleResource_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetMerchantRoleResourceVo()) {
        this.merchantRoleResourceVo = new com.froad.thrift.vo.MerchantRoleResourceVo(other.merchantRoleResourceVo);
      }
    }

    public addMerchantRoleResource_args deepCopy() {
      return new addMerchantRoleResource_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.merchantRoleResourceVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public addMerchantRoleResource_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.MerchantRoleResourceVo getMerchantRoleResourceVo() {
      return this.merchantRoleResourceVo;
    }

    public addMerchantRoleResource_args setMerchantRoleResourceVo(com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo) {
      this.merchantRoleResourceVo = merchantRoleResourceVo;
      return this;
    }

    public void unsetMerchantRoleResourceVo() {
      this.merchantRoleResourceVo = null;
    }

    /** Returns true if field merchantRoleResourceVo is set (has been assigned a value) and false otherwise */
    public boolean isSetMerchantRoleResourceVo() {
      return this.merchantRoleResourceVo != null;
    }

    public void setMerchantRoleResourceVoIsSet(boolean value) {
      if (!value) {
        this.merchantRoleResourceVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case MERCHANT_ROLE_RESOURCE_VO:
        if (value == null) {
          unsetMerchantRoleResourceVo();
        } else {
          setMerchantRoleResourceVo((com.froad.thrift.vo.MerchantRoleResourceVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case MERCHANT_ROLE_RESOURCE_VO:
        return getMerchantRoleResourceVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case MERCHANT_ROLE_RESOURCE_VO:
        return isSetMerchantRoleResourceVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addMerchantRoleResource_args)
        return this.equals((addMerchantRoleResource_args)that);
      return false;
    }

    public boolean equals(addMerchantRoleResource_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_merchantRoleResourceVo = true && this.isSetMerchantRoleResourceVo();
      boolean that_present_merchantRoleResourceVo = true && that.isSetMerchantRoleResourceVo();
      if (this_present_merchantRoleResourceVo || that_present_merchantRoleResourceVo) {
        if (!(this_present_merchantRoleResourceVo && that_present_merchantRoleResourceVo))
          return false;
        if (!this.merchantRoleResourceVo.equals(that.merchantRoleResourceVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_merchantRoleResourceVo = true && (isSetMerchantRoleResourceVo());
      list.add(present_merchantRoleResourceVo);
      if (present_merchantRoleResourceVo)
        list.add(merchantRoleResourceVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(addMerchantRoleResource_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetMerchantRoleResourceVo()).compareTo(other.isSetMerchantRoleResourceVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetMerchantRoleResourceVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantRoleResourceVo, other.merchantRoleResourceVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addMerchantRoleResource_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("merchantRoleResourceVo:");
      if (this.merchantRoleResourceVo == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantRoleResourceVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (merchantRoleResourceVo != null) {
        merchantRoleResourceVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addMerchantRoleResource_argsStandardSchemeFactory implements SchemeFactory {
      public addMerchantRoleResource_argsStandardScheme getScheme() {
        return new addMerchantRoleResource_argsStandardScheme();
      }
    }

    private static class addMerchantRoleResource_argsStandardScheme extends StandardScheme<addMerchantRoleResource_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // MERCHANT_ROLE_RESOURCE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.merchantRoleResourceVo = new com.froad.thrift.vo.MerchantRoleResourceVo();
                struct.merchantRoleResourceVo.read(iprot);
                struct.setMerchantRoleResourceVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.merchantRoleResourceVo != null) {
          oprot.writeFieldBegin(MERCHANT_ROLE_RESOURCE_VO_FIELD_DESC);
          struct.merchantRoleResourceVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addMerchantRoleResource_argsTupleSchemeFactory implements SchemeFactory {
      public addMerchantRoleResource_argsTupleScheme getScheme() {
        return new addMerchantRoleResource_argsTupleScheme();
      }
    }

    private static class addMerchantRoleResource_argsTupleScheme extends TupleScheme<addMerchantRoleResource_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetMerchantRoleResourceVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetMerchantRoleResourceVo()) {
          struct.merchantRoleResourceVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.merchantRoleResourceVo = new com.froad.thrift.vo.MerchantRoleResourceVo();
          struct.merchantRoleResourceVo.read(iprot);
          struct.setMerchantRoleResourceVoIsSet(true);
        }
      }
    }

  }

  public static class addMerchantRoleResource_result implements org.apache.thrift.TBase<addMerchantRoleResource_result, addMerchantRoleResource_result._Fields>, java.io.Serializable, Cloneable, Comparable<addMerchantRoleResource_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addMerchantRoleResource_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addMerchantRoleResource_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addMerchantRoleResource_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.MerchantRoleResourceAddVoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.MerchantRoleResourceAddVoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addMerchantRoleResource_result.class, metaDataMap);
    }

    public addMerchantRoleResource_result() {
    }

    public addMerchantRoleResource_result(
      com.froad.thrift.vo.MerchantRoleResourceAddVoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addMerchantRoleResource_result(addMerchantRoleResource_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.MerchantRoleResourceAddVoRes(other.success);
      }
    }

    public addMerchantRoleResource_result deepCopy() {
      return new addMerchantRoleResource_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.MerchantRoleResourceAddVoRes getSuccess() {
      return this.success;
    }

    public addMerchantRoleResource_result setSuccess(com.froad.thrift.vo.MerchantRoleResourceAddVoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.MerchantRoleResourceAddVoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addMerchantRoleResource_result)
        return this.equals((addMerchantRoleResource_result)that);
      return false;
    }

    public boolean equals(addMerchantRoleResource_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(addMerchantRoleResource_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addMerchantRoleResource_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addMerchantRoleResource_resultStandardSchemeFactory implements SchemeFactory {
      public addMerchantRoleResource_resultStandardScheme getScheme() {
        return new addMerchantRoleResource_resultStandardScheme();
      }
    }

    private static class addMerchantRoleResource_resultStandardScheme extends StandardScheme<addMerchantRoleResource_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.MerchantRoleResourceAddVoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addMerchantRoleResource_resultTupleSchemeFactory implements SchemeFactory {
      public addMerchantRoleResource_resultTupleScheme getScheme() {
        return new addMerchantRoleResource_resultTupleScheme();
      }
    }

    private static class addMerchantRoleResource_resultTupleScheme extends TupleScheme<addMerchantRoleResource_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.MerchantRoleResourceAddVoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class deleteMerchantRoleResource_args implements org.apache.thrift.TBase<deleteMerchantRoleResource_args, deleteMerchantRoleResource_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteMerchantRoleResource_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteMerchantRoleResource_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField _ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_id", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteMerchantRoleResource_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteMerchantRoleResource_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public String _id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      _ID((short)2, "_id");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // _ID
            return _ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields._ID, new org.apache.thrift.meta_data.FieldMetaData("_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteMerchantRoleResource_args.class, metaDataMap);
    }

    public deleteMerchantRoleResource_args() {
    }

    public deleteMerchantRoleResource_args(
      com.froad.thrift.vo.OriginVo originVo,
      String _id)
    {
      this();
      this.originVo = originVo;
      this._id = _id;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteMerchantRoleResource_args(deleteMerchantRoleResource_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSet_id()) {
        this._id = other._id;
      }
    }

    public deleteMerchantRoleResource_args deepCopy() {
      return new deleteMerchantRoleResource_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this._id = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public deleteMerchantRoleResource_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public String get_id() {
      return this._id;
    }

    public deleteMerchantRoleResource_args set_id(String _id) {
      this._id = _id;
      return this;
    }

    public void unset_id() {
      this._id = null;
    }

    /** Returns true if field _id is set (has been assigned a value) and false otherwise */
    public boolean isSet_id() {
      return this._id != null;
    }

    public void set_idIsSet(boolean value) {
      if (!value) {
        this._id = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case _ID:
        if (value == null) {
          unset_id();
        } else {
          set_id((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case _ID:
        return get_id();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case _ID:
        return isSet_id();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteMerchantRoleResource_args)
        return this.equals((deleteMerchantRoleResource_args)that);
      return false;
    }

    public boolean equals(deleteMerchantRoleResource_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present__id = true && this.isSet_id();
      boolean that_present__id = true && that.isSet_id();
      if (this_present__id || that_present__id) {
        if (!(this_present__id && that_present__id))
          return false;
        if (!this._id.equals(that._id))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present__id = true && (isSet_id());
      list.add(present__id);
      if (present__id)
        list.add(_id);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteMerchantRoleResource_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSet_id()).compareTo(other.isSet_id());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSet_id()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._id, other._id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteMerchantRoleResource_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("_id:");
      if (this._id == null) {
        sb.append("null");
      } else {
        sb.append(this._id);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteMerchantRoleResource_argsStandardSchemeFactory implements SchemeFactory {
      public deleteMerchantRoleResource_argsStandardScheme getScheme() {
        return new deleteMerchantRoleResource_argsStandardScheme();
      }
    }

    private static class deleteMerchantRoleResource_argsStandardScheme extends StandardScheme<deleteMerchantRoleResource_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // _ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct._id = iprot.readString();
                struct.set_idIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct._id != null) {
          oprot.writeFieldBegin(_ID_FIELD_DESC);
          oprot.writeString(struct._id);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteMerchantRoleResource_argsTupleSchemeFactory implements SchemeFactory {
      public deleteMerchantRoleResource_argsTupleScheme getScheme() {
        return new deleteMerchantRoleResource_argsTupleScheme();
      }
    }

    private static class deleteMerchantRoleResource_argsTupleScheme extends TupleScheme<deleteMerchantRoleResource_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSet_id()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSet_id()) {
          oprot.writeString(struct._id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct._id = iprot.readString();
          struct.set_idIsSet(true);
        }
      }
    }

  }

  public static class deleteMerchantRoleResource_result implements org.apache.thrift.TBase<deleteMerchantRoleResource_result, deleteMerchantRoleResource_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteMerchantRoleResource_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteMerchantRoleResource_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteMerchantRoleResource_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteMerchantRoleResource_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteMerchantRoleResource_result.class, metaDataMap);
    }

    public deleteMerchantRoleResource_result() {
    }

    public deleteMerchantRoleResource_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteMerchantRoleResource_result(deleteMerchantRoleResource_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public deleteMerchantRoleResource_result deepCopy() {
      return new deleteMerchantRoleResource_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public deleteMerchantRoleResource_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteMerchantRoleResource_result)
        return this.equals((deleteMerchantRoleResource_result)that);
      return false;
    }

    public boolean equals(deleteMerchantRoleResource_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteMerchantRoleResource_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteMerchantRoleResource_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteMerchantRoleResource_resultStandardSchemeFactory implements SchemeFactory {
      public deleteMerchantRoleResource_resultStandardScheme getScheme() {
        return new deleteMerchantRoleResource_resultStandardScheme();
      }
    }

    private static class deleteMerchantRoleResource_resultStandardScheme extends StandardScheme<deleteMerchantRoleResource_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteMerchantRoleResource_resultTupleSchemeFactory implements SchemeFactory {
      public deleteMerchantRoleResource_resultTupleScheme getScheme() {
        return new deleteMerchantRoleResource_resultTupleScheme();
      }
    }

    private static class deleteMerchantRoleResource_resultTupleScheme extends TupleScheme<deleteMerchantRoleResource_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class updateMerchantRoleResource_args implements org.apache.thrift.TBase<updateMerchantRoleResource_args, updateMerchantRoleResource_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateMerchantRoleResource_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateMerchantRoleResource_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField MERCHANT_ROLE_RESOURCE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantRoleResourceVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateMerchantRoleResource_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateMerchantRoleResource_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      MERCHANT_ROLE_RESOURCE_VO((short)2, "merchantRoleResourceVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // MERCHANT_ROLE_RESOURCE_VO
            return MERCHANT_ROLE_RESOURCE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.MERCHANT_ROLE_RESOURCE_VO, new org.apache.thrift.meta_data.FieldMetaData("merchantRoleResourceVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.MerchantRoleResourceVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateMerchantRoleResource_args.class, metaDataMap);
    }

    public updateMerchantRoleResource_args() {
    }

    public updateMerchantRoleResource_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo)
    {
      this();
      this.originVo = originVo;
      this.merchantRoleResourceVo = merchantRoleResourceVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateMerchantRoleResource_args(updateMerchantRoleResource_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetMerchantRoleResourceVo()) {
        this.merchantRoleResourceVo = new com.froad.thrift.vo.MerchantRoleResourceVo(other.merchantRoleResourceVo);
      }
    }

    public updateMerchantRoleResource_args deepCopy() {
      return new updateMerchantRoleResource_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.merchantRoleResourceVo = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public updateMerchantRoleResource_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.MerchantRoleResourceVo getMerchantRoleResourceVo() {
      return this.merchantRoleResourceVo;
    }

    public updateMerchantRoleResource_args setMerchantRoleResourceVo(com.froad.thrift.vo.MerchantRoleResourceVo merchantRoleResourceVo) {
      this.merchantRoleResourceVo = merchantRoleResourceVo;
      return this;
    }

    public void unsetMerchantRoleResourceVo() {
      this.merchantRoleResourceVo = null;
    }

    /** Returns true if field merchantRoleResourceVo is set (has been assigned a value) and false otherwise */
    public boolean isSetMerchantRoleResourceVo() {
      return this.merchantRoleResourceVo != null;
    }

    public void setMerchantRoleResourceVoIsSet(boolean value) {
      if (!value) {
        this.merchantRoleResourceVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case MERCHANT_ROLE_RESOURCE_VO:
        if (value == null) {
          unsetMerchantRoleResourceVo();
        } else {
          setMerchantRoleResourceVo((com.froad.thrift.vo.MerchantRoleResourceVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case MERCHANT_ROLE_RESOURCE_VO:
        return getMerchantRoleResourceVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case MERCHANT_ROLE_RESOURCE_VO:
        return isSetMerchantRoleResourceVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateMerchantRoleResource_args)
        return this.equals((updateMerchantRoleResource_args)that);
      return false;
    }

    public boolean equals(updateMerchantRoleResource_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_merchantRoleResourceVo = true && this.isSetMerchantRoleResourceVo();
      boolean that_present_merchantRoleResourceVo = true && that.isSetMerchantRoleResourceVo();
      if (this_present_merchantRoleResourceVo || that_present_merchantRoleResourceVo) {
        if (!(this_present_merchantRoleResourceVo && that_present_merchantRoleResourceVo))
          return false;
        if (!this.merchantRoleResourceVo.equals(that.merchantRoleResourceVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_merchantRoleResourceVo = true && (isSetMerchantRoleResourceVo());
      list.add(present_merchantRoleResourceVo);
      if (present_merchantRoleResourceVo)
        list.add(merchantRoleResourceVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateMerchantRoleResource_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetMerchantRoleResourceVo()).compareTo(other.isSetMerchantRoleResourceVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetMerchantRoleResourceVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantRoleResourceVo, other.merchantRoleResourceVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateMerchantRoleResource_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("merchantRoleResourceVo:");
      if (this.merchantRoleResourceVo == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantRoleResourceVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (merchantRoleResourceVo != null) {
        merchantRoleResourceVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateMerchantRoleResource_argsStandardSchemeFactory implements SchemeFactory {
      public updateMerchantRoleResource_argsStandardScheme getScheme() {
        return new updateMerchantRoleResource_argsStandardScheme();
      }
    }

    private static class updateMerchantRoleResource_argsStandardScheme extends StandardScheme<updateMerchantRoleResource_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // MERCHANT_ROLE_RESOURCE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.merchantRoleResourceVo = new com.froad.thrift.vo.MerchantRoleResourceVo();
                struct.merchantRoleResourceVo.read(iprot);
                struct.setMerchantRoleResourceVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.merchantRoleResourceVo != null) {
          oprot.writeFieldBegin(MERCHANT_ROLE_RESOURCE_VO_FIELD_DESC);
          struct.merchantRoleResourceVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateMerchantRoleResource_argsTupleSchemeFactory implements SchemeFactory {
      public updateMerchantRoleResource_argsTupleScheme getScheme() {
        return new updateMerchantRoleResource_argsTupleScheme();
      }
    }

    private static class updateMerchantRoleResource_argsTupleScheme extends TupleScheme<updateMerchantRoleResource_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetMerchantRoleResourceVo()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetMerchantRoleResourceVo()) {
          struct.merchantRoleResourceVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.merchantRoleResourceVo = new com.froad.thrift.vo.MerchantRoleResourceVo();
          struct.merchantRoleResourceVo.read(iprot);
          struct.setMerchantRoleResourceVoIsSet(true);
        }
      }
    }

  }

  public static class updateMerchantRoleResource_result implements org.apache.thrift.TBase<updateMerchantRoleResource_result, updateMerchantRoleResource_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateMerchantRoleResource_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateMerchantRoleResource_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateMerchantRoleResource_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateMerchantRoleResource_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateMerchantRoleResource_result.class, metaDataMap);
    }

    public updateMerchantRoleResource_result() {
    }

    public updateMerchantRoleResource_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateMerchantRoleResource_result(updateMerchantRoleResource_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public updateMerchantRoleResource_result deepCopy() {
      return new updateMerchantRoleResource_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public updateMerchantRoleResource_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateMerchantRoleResource_result)
        return this.equals((updateMerchantRoleResource_result)that);
      return false;
    }

    public boolean equals(updateMerchantRoleResource_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateMerchantRoleResource_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateMerchantRoleResource_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateMerchantRoleResource_resultStandardSchemeFactory implements SchemeFactory {
      public updateMerchantRoleResource_resultStandardScheme getScheme() {
        return new updateMerchantRoleResource_resultStandardScheme();
      }
    }

    private static class updateMerchantRoleResource_resultStandardScheme extends StandardScheme<updateMerchantRoleResource_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateMerchantRoleResource_resultTupleSchemeFactory implements SchemeFactory {
      public updateMerchantRoleResource_resultTupleScheme getScheme() {
        return new updateMerchantRoleResource_resultTupleScheme();
      }
    }

    private static class updateMerchantRoleResource_resultTupleScheme extends TupleScheme<updateMerchantRoleResource_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getMerchantRoleResource_args implements org.apache.thrift.TBase<getMerchantRoleResource_args, getMerchantRoleResource_args._Fields>, java.io.Serializable, Cloneable, Comparable<getMerchantRoleResource_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMerchantRoleResource_args");

    private static final org.apache.thrift.protocol.TField _ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_id", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getMerchantRoleResource_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getMerchantRoleResource_argsTupleSchemeFactory());
    }

    public String _id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      _ID((short)1, "_id");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // _ID
            return _ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields._ID, new org.apache.thrift.meta_data.FieldMetaData("_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMerchantRoleResource_args.class, metaDataMap);
    }

    public getMerchantRoleResource_args() {
    }

    public getMerchantRoleResource_args(
      String _id)
    {
      this();
      this._id = _id;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getMerchantRoleResource_args(getMerchantRoleResource_args other) {
      if (other.isSet_id()) {
        this._id = other._id;
      }
    }

    public getMerchantRoleResource_args deepCopy() {
      return new getMerchantRoleResource_args(this);
    }

    @Override
    public void clear() {
      this._id = null;
    }

    public String get_id() {
      return this._id;
    }

    public getMerchantRoleResource_args set_id(String _id) {
      this._id = _id;
      return this;
    }

    public void unset_id() {
      this._id = null;
    }

    /** Returns true if field _id is set (has been assigned a value) and false otherwise */
    public boolean isSet_id() {
      return this._id != null;
    }

    public void set_idIsSet(boolean value) {
      if (!value) {
        this._id = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case _ID:
        if (value == null) {
          unset_id();
        } else {
          set_id((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case _ID:
        return get_id();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case _ID:
        return isSet_id();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getMerchantRoleResource_args)
        return this.equals((getMerchantRoleResource_args)that);
      return false;
    }

    public boolean equals(getMerchantRoleResource_args that) {
      if (that == null)
        return false;

      boolean this_present__id = true && this.isSet_id();
      boolean that_present__id = true && that.isSet_id();
      if (this_present__id || that_present__id) {
        if (!(this_present__id && that_present__id))
          return false;
        if (!this._id.equals(that._id))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present__id = true && (isSet_id());
      list.add(present__id);
      if (present__id)
        list.add(_id);

      return list.hashCode();
    }

    @Override
    public int compareTo(getMerchantRoleResource_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSet_id()).compareTo(other.isSet_id());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSet_id()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._id, other._id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getMerchantRoleResource_args(");
      boolean first = true;

      sb.append("_id:");
      if (this._id == null) {
        sb.append("null");
      } else {
        sb.append(this._id);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getMerchantRoleResource_argsStandardSchemeFactory implements SchemeFactory {
      public getMerchantRoleResource_argsStandardScheme getScheme() {
        return new getMerchantRoleResource_argsStandardScheme();
      }
    }

    private static class getMerchantRoleResource_argsStandardScheme extends StandardScheme<getMerchantRoleResource_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // _ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct._id = iprot.readString();
                struct.set_idIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct._id != null) {
          oprot.writeFieldBegin(_ID_FIELD_DESC);
          oprot.writeString(struct._id);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getMerchantRoleResource_argsTupleSchemeFactory implements SchemeFactory {
      public getMerchantRoleResource_argsTupleScheme getScheme() {
        return new getMerchantRoleResource_argsTupleScheme();
      }
    }

    private static class getMerchantRoleResource_argsTupleScheme extends TupleScheme<getMerchantRoleResource_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSet_id()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSet_id()) {
          oprot.writeString(struct._id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResource_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct._id = iprot.readString();
          struct.set_idIsSet(true);
        }
      }
    }

  }

  public static class getMerchantRoleResource_result implements org.apache.thrift.TBase<getMerchantRoleResource_result, getMerchantRoleResource_result._Fields>, java.io.Serializable, Cloneable, Comparable<getMerchantRoleResource_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMerchantRoleResource_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getMerchantRoleResource_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getMerchantRoleResource_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.MerchantRoleResourceVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.MerchantRoleResourceVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMerchantRoleResource_result.class, metaDataMap);
    }

    public getMerchantRoleResource_result() {
    }

    public getMerchantRoleResource_result(
      com.froad.thrift.vo.MerchantRoleResourceVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getMerchantRoleResource_result(getMerchantRoleResource_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.MerchantRoleResourceVo(other.success);
      }
    }

    public getMerchantRoleResource_result deepCopy() {
      return new getMerchantRoleResource_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.MerchantRoleResourceVo getSuccess() {
      return this.success;
    }

    public getMerchantRoleResource_result setSuccess(com.froad.thrift.vo.MerchantRoleResourceVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.MerchantRoleResourceVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getMerchantRoleResource_result)
        return this.equals((getMerchantRoleResource_result)that);
      return false;
    }

    public boolean equals(getMerchantRoleResource_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getMerchantRoleResource_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getMerchantRoleResource_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getMerchantRoleResource_resultStandardSchemeFactory implements SchemeFactory {
      public getMerchantRoleResource_resultStandardScheme getScheme() {
        return new getMerchantRoleResource_resultStandardScheme();
      }
    }

    private static class getMerchantRoleResource_resultStandardScheme extends StandardScheme<getMerchantRoleResource_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.MerchantRoleResourceVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getMerchantRoleResource_resultTupleSchemeFactory implements SchemeFactory {
      public getMerchantRoleResource_resultTupleScheme getScheme() {
        return new getMerchantRoleResource_resultTupleScheme();
      }
    }

    private static class getMerchantRoleResource_resultTupleScheme extends TupleScheme<getMerchantRoleResource_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResource_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.MerchantRoleResourceVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getMerchantRoleResourceListByClientId_args implements org.apache.thrift.TBase<getMerchantRoleResourceListByClientId_args, getMerchantRoleResourceListByClientId_args._Fields>, java.io.Serializable, Cloneable, Comparable<getMerchantRoleResourceListByClientId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMerchantRoleResourceListByClientId_args");

    private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("client_id", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getMerchantRoleResourceListByClientId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getMerchantRoleResourceListByClientId_argsTupleSchemeFactory());
    }

    public String client_id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      CLIENT_ID((short)1, "client_id");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // CLIENT_ID
            return CLIENT_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("client_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMerchantRoleResourceListByClientId_args.class, metaDataMap);
    }

    public getMerchantRoleResourceListByClientId_args() {
    }

    public getMerchantRoleResourceListByClientId_args(
      String client_id)
    {
      this();
      this.client_id = client_id;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getMerchantRoleResourceListByClientId_args(getMerchantRoleResourceListByClientId_args other) {
      if (other.isSetClient_id()) {
        this.client_id = other.client_id;
      }
    }

    public getMerchantRoleResourceListByClientId_args deepCopy() {
      return new getMerchantRoleResourceListByClientId_args(this);
    }

    @Override
    public void clear() {
      this.client_id = null;
    }

    public String getClient_id() {
      return this.client_id;
    }

    public getMerchantRoleResourceListByClientId_args setClient_id(String client_id) {
      this.client_id = client_id;
      return this;
    }

    public void unsetClient_id() {
      this.client_id = null;
    }

    /** Returns true if field client_id is set (has been assigned a value) and false otherwise */
    public boolean isSetClient_id() {
      return this.client_id != null;
    }

    public void setClient_idIsSet(boolean value) {
      if (!value) {
        this.client_id = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case CLIENT_ID:
        if (value == null) {
          unsetClient_id();
        } else {
          setClient_id((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case CLIENT_ID:
        return getClient_id();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case CLIENT_ID:
        return isSetClient_id();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getMerchantRoleResourceListByClientId_args)
        return this.equals((getMerchantRoleResourceListByClientId_args)that);
      return false;
    }

    public boolean equals(getMerchantRoleResourceListByClientId_args that) {
      if (that == null)
        return false;

      boolean this_present_client_id = true && this.isSetClient_id();
      boolean that_present_client_id = true && that.isSetClient_id();
      if (this_present_client_id || that_present_client_id) {
        if (!(this_present_client_id && that_present_client_id))
          return false;
        if (!this.client_id.equals(that.client_id))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_client_id = true && (isSetClient_id());
      list.add(present_client_id);
      if (present_client_id)
        list.add(client_id);

      return list.hashCode();
    }

    @Override
    public int compareTo(getMerchantRoleResourceListByClientId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetClient_id()).compareTo(other.isSetClient_id());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClient_id()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.client_id, other.client_id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getMerchantRoleResourceListByClientId_args(");
      boolean first = true;

      sb.append("client_id:");
      if (this.client_id == null) {
        sb.append("null");
      } else {
        sb.append(this.client_id);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getMerchantRoleResourceListByClientId_argsStandardSchemeFactory implements SchemeFactory {
      public getMerchantRoleResourceListByClientId_argsStandardScheme getScheme() {
        return new getMerchantRoleResourceListByClientId_argsStandardScheme();
      }
    }

    private static class getMerchantRoleResourceListByClientId_argsStandardScheme extends StandardScheme<getMerchantRoleResourceListByClientId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getMerchantRoleResourceListByClientId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // CLIENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.client_id = iprot.readString();
                struct.setClient_idIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getMerchantRoleResourceListByClientId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.client_id != null) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.client_id);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getMerchantRoleResourceListByClientId_argsTupleSchemeFactory implements SchemeFactory {
      public getMerchantRoleResourceListByClientId_argsTupleScheme getScheme() {
        return new getMerchantRoleResourceListByClientId_argsTupleScheme();
      }
    }

    private static class getMerchantRoleResourceListByClientId_argsTupleScheme extends TupleScheme<getMerchantRoleResourceListByClientId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResourceListByClientId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetClient_id()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetClient_id()) {
          oprot.writeString(struct.client_id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResourceListByClientId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.client_id = iprot.readString();
          struct.setClient_idIsSet(true);
        }
      }
    }

  }

  public static class getMerchantRoleResourceListByClientId_result implements org.apache.thrift.TBase<getMerchantRoleResourceListByClientId_result, getMerchantRoleResourceListByClientId_result._Fields>, java.io.Serializable, Cloneable, Comparable<getMerchantRoleResourceListByClientId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMerchantRoleResourceListByClientId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getMerchantRoleResourceListByClientId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getMerchantRoleResourceListByClientId_resultTupleSchemeFactory());
    }

    public List<com.froad.thrift.vo.MerchantRoleResourceVo> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.MerchantRoleResourceVo.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMerchantRoleResourceListByClientId_result.class, metaDataMap);
    }

    public getMerchantRoleResourceListByClientId_result() {
    }

    public getMerchantRoleResourceListByClientId_result(
      List<com.froad.thrift.vo.MerchantRoleResourceVo> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getMerchantRoleResourceListByClientId_result(getMerchantRoleResourceListByClientId_result other) {
      if (other.isSetSuccess()) {
        List<com.froad.thrift.vo.MerchantRoleResourceVo> __this__success = new ArrayList<com.froad.thrift.vo.MerchantRoleResourceVo>(other.success.size());
        for (com.froad.thrift.vo.MerchantRoleResourceVo other_element : other.success) {
          __this__success.add(new com.froad.thrift.vo.MerchantRoleResourceVo(other_element));
        }
        this.success = __this__success;
      }
    }

    public getMerchantRoleResourceListByClientId_result deepCopy() {
      return new getMerchantRoleResourceListByClientId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.froad.thrift.vo.MerchantRoleResourceVo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.froad.thrift.vo.MerchantRoleResourceVo elem) {
      if (this.success == null) {
        this.success = new ArrayList<com.froad.thrift.vo.MerchantRoleResourceVo>();
      }
      this.success.add(elem);
    }

    public List<com.froad.thrift.vo.MerchantRoleResourceVo> getSuccess() {
      return this.success;
    }

    public getMerchantRoleResourceListByClientId_result setSuccess(List<com.froad.thrift.vo.MerchantRoleResourceVo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<com.froad.thrift.vo.MerchantRoleResourceVo>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getMerchantRoleResourceListByClientId_result)
        return this.equals((getMerchantRoleResourceListByClientId_result)that);
      return false;
    }

    public boolean equals(getMerchantRoleResourceListByClientId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getMerchantRoleResourceListByClientId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getMerchantRoleResourceListByClientId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getMerchantRoleResourceListByClientId_resultStandardSchemeFactory implements SchemeFactory {
      public getMerchantRoleResourceListByClientId_resultStandardScheme getScheme() {
        return new getMerchantRoleResourceListByClientId_resultStandardScheme();
      }
    }

    private static class getMerchantRoleResourceListByClientId_resultStandardScheme extends StandardScheme<getMerchantRoleResourceListByClientId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getMerchantRoleResourceListByClientId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                  struct.success = new ArrayList<com.froad.thrift.vo.MerchantRoleResourceVo>(_list0.size);
                  com.froad.thrift.vo.MerchantRoleResourceVo _elem1;
                  for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                  {
                    _elem1 = new com.froad.thrift.vo.MerchantRoleResourceVo();
                    _elem1.read(iprot);
                    struct.success.add(_elem1);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getMerchantRoleResourceListByClientId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.froad.thrift.vo.MerchantRoleResourceVo _iter3 : struct.success)
            {
              _iter3.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getMerchantRoleResourceListByClientId_resultTupleSchemeFactory implements SchemeFactory {
      public getMerchantRoleResourceListByClientId_resultTupleScheme getScheme() {
        return new getMerchantRoleResourceListByClientId_resultTupleScheme();
      }
    }

    private static class getMerchantRoleResourceListByClientId_resultTupleScheme extends TupleScheme<getMerchantRoleResourceListByClientId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResourceListByClientId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.froad.thrift.vo.MerchantRoleResourceVo _iter4 : struct.success)
            {
              _iter4.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResourceListByClientId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<com.froad.thrift.vo.MerchantRoleResourceVo>(_list5.size);
            com.froad.thrift.vo.MerchantRoleResourceVo _elem6;
            for (int _i7 = 0; _i7 < _list5.size; ++_i7)
            {
              _elem6 = new com.froad.thrift.vo.MerchantRoleResourceVo();
              _elem6.read(iprot);
              struct.success.add(_elem6);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getMerchantRoleResourceList_args implements org.apache.thrift.TBase<getMerchantRoleResourceList_args, getMerchantRoleResourceList_args._Fields>, java.io.Serializable, Cloneable, Comparable<getMerchantRoleResourceList_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMerchantRoleResourceList_args");


    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getMerchantRoleResourceList_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getMerchantRoleResourceList_argsTupleSchemeFactory());
    }


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMerchantRoleResourceList_args.class, metaDataMap);
    }

    public getMerchantRoleResourceList_args() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getMerchantRoleResourceList_args(getMerchantRoleResourceList_args other) {
    }

    public getMerchantRoleResourceList_args deepCopy() {
      return new getMerchantRoleResourceList_args(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getMerchantRoleResourceList_args)
        return this.equals((getMerchantRoleResourceList_args)that);
      return false;
    }

    public boolean equals(getMerchantRoleResourceList_args that) {
      if (that == null)
        return false;

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      return list.hashCode();
    }

    @Override
    public int compareTo(getMerchantRoleResourceList_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getMerchantRoleResourceList_args(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getMerchantRoleResourceList_argsStandardSchemeFactory implements SchemeFactory {
      public getMerchantRoleResourceList_argsStandardScheme getScheme() {
        return new getMerchantRoleResourceList_argsStandardScheme();
      }
    }

    private static class getMerchantRoleResourceList_argsStandardScheme extends StandardScheme<getMerchantRoleResourceList_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getMerchantRoleResourceList_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getMerchantRoleResourceList_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getMerchantRoleResourceList_argsTupleSchemeFactory implements SchemeFactory {
      public getMerchantRoleResourceList_argsTupleScheme getScheme() {
        return new getMerchantRoleResourceList_argsTupleScheme();
      }
    }

    private static class getMerchantRoleResourceList_argsTupleScheme extends TupleScheme<getMerchantRoleResourceList_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResourceList_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResourceList_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
      }
    }

  }

  public static class getMerchantRoleResourceList_result implements org.apache.thrift.TBase<getMerchantRoleResourceList_result, getMerchantRoleResourceList_result._Fields>, java.io.Serializable, Cloneable, Comparable<getMerchantRoleResourceList_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMerchantRoleResourceList_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getMerchantRoleResourceList_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getMerchantRoleResourceList_resultTupleSchemeFactory());
    }

    public List<com.froad.thrift.vo.MerchantRoleResourceVo> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.MerchantRoleResourceVo.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMerchantRoleResourceList_result.class, metaDataMap);
    }

    public getMerchantRoleResourceList_result() {
    }

    public getMerchantRoleResourceList_result(
      List<com.froad.thrift.vo.MerchantRoleResourceVo> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getMerchantRoleResourceList_result(getMerchantRoleResourceList_result other) {
      if (other.isSetSuccess()) {
        List<com.froad.thrift.vo.MerchantRoleResourceVo> __this__success = new ArrayList<com.froad.thrift.vo.MerchantRoleResourceVo>(other.success.size());
        for (com.froad.thrift.vo.MerchantRoleResourceVo other_element : other.success) {
          __this__success.add(new com.froad.thrift.vo.MerchantRoleResourceVo(other_element));
        }
        this.success = __this__success;
      }
    }

    public getMerchantRoleResourceList_result deepCopy() {
      return new getMerchantRoleResourceList_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.froad.thrift.vo.MerchantRoleResourceVo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.froad.thrift.vo.MerchantRoleResourceVo elem) {
      if (this.success == null) {
        this.success = new ArrayList<com.froad.thrift.vo.MerchantRoleResourceVo>();
      }
      this.success.add(elem);
    }

    public List<com.froad.thrift.vo.MerchantRoleResourceVo> getSuccess() {
      return this.success;
    }

    public getMerchantRoleResourceList_result setSuccess(List<com.froad.thrift.vo.MerchantRoleResourceVo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<com.froad.thrift.vo.MerchantRoleResourceVo>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getMerchantRoleResourceList_result)
        return this.equals((getMerchantRoleResourceList_result)that);
      return false;
    }

    public boolean equals(getMerchantRoleResourceList_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getMerchantRoleResourceList_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getMerchantRoleResourceList_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getMerchantRoleResourceList_resultStandardSchemeFactory implements SchemeFactory {
      public getMerchantRoleResourceList_resultStandardScheme getScheme() {
        return new getMerchantRoleResourceList_resultStandardScheme();
      }
    }

    private static class getMerchantRoleResourceList_resultStandardScheme extends StandardScheme<getMerchantRoleResourceList_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getMerchantRoleResourceList_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                  struct.success = new ArrayList<com.froad.thrift.vo.MerchantRoleResourceVo>(_list8.size);
                  com.froad.thrift.vo.MerchantRoleResourceVo _elem9;
                  for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                  {
                    _elem9 = new com.froad.thrift.vo.MerchantRoleResourceVo();
                    _elem9.read(iprot);
                    struct.success.add(_elem9);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getMerchantRoleResourceList_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.froad.thrift.vo.MerchantRoleResourceVo _iter11 : struct.success)
            {
              _iter11.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getMerchantRoleResourceList_resultTupleSchemeFactory implements SchemeFactory {
      public getMerchantRoleResourceList_resultTupleScheme getScheme() {
        return new getMerchantRoleResourceList_resultTupleScheme();
      }
    }

    private static class getMerchantRoleResourceList_resultTupleScheme extends TupleScheme<getMerchantRoleResourceList_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResourceList_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.froad.thrift.vo.MerchantRoleResourceVo _iter12 : struct.success)
            {
              _iter12.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getMerchantRoleResourceList_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<com.froad.thrift.vo.MerchantRoleResourceVo>(_list13.size);
            com.froad.thrift.vo.MerchantRoleResourceVo _elem14;
            for (int _i15 = 0; _i15 < _list13.size; ++_i15)
            {
              _elem14 = new com.froad.thrift.vo.MerchantRoleResourceVo();
              _elem14.read(iprot);
              struct.success.add(_elem14);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
