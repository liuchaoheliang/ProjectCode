/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商户详情信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MerchantDetailVo implements org.apache.thrift.TBase<MerchantDetailVo, MerchantDetailVo._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantDetailVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantDetailVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PRO_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("proOrgCode", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CITY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("cityOrgCode", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField COUNTY_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("countyOrgCode", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnable", org.apache.thrift.protocol.TType.BOOL, (short)8);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField MERCHANT_FULLNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantFullname", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField LOGO_FIELD_DESC = new org.apache.thrift.protocol.TField("logo", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField INTRODUCE_FIELD_DESC = new org.apache.thrift.protocol.TField("introduce", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.I64, (short)15);
  private static final org.apache.thrift.protocol.TField TREE_PATH_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("treePathName", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField OUTLET_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("outletInfo", org.apache.thrift.protocol.TType.LIST, (short)17);
  private static final org.apache.thrift.protocol.TField CATEGORY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryInfo", org.apache.thrift.protocol.TType.LIST, (short)18);
  private static final org.apache.thrift.protocol.TField TYPE_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("typeInfo", org.apache.thrift.protocol.TType.LIST, (short)19);
  private static final org.apache.thrift.protocol.TField STAR_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("starLevel", org.apache.thrift.protocol.TType.I32, (short)20);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)21);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantDetailVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantDetailVoTupleSchemeFactory());
  }

  /**
   * id(商户id)
   */
  public String id; // optional
  /**
   * 创建时间
   */
  public long createTime; // optional
  /**
   * 客户端id
   */
  public String clientId; // required
  /**
   * 一级机构
   */
  public String proOrgCode; // optional
  /**
   * 二级机构
   */
  public String cityOrgCode; // optional
  /**
   * 三级级机构
   */
  public String countyOrgCode; // optional
  /**
   * 所属组织机构编号
   */
  public String orgCode; // optional
  /**
   * 是否启动
   */
  public boolean isEnable; // optional
  /**
   * 商户名称
   */
  public String merchantName; // optional
  /**
   * 商户全称
   */
  public String merchantFullname; // optional
  /**
   * 商标
   */
  public String logo; // optional
  /**
   * 地址
   */
  public String address; // optional
  /**
   * 电话
   */
  public String phone; // optional
  /**
   * 简介
   */
  public String introduce; // optional
  /**
   * 区域id
   */
  public long areaId; // optional
  /**
   * 对应地区表的冗余
   */
  public String treePathName; // optional
  /**
   * 门店信息
   */
  public List<String> outletInfo; // optional
  /**
   * 分类列表
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> categoryInfo; // optional
  /**
   * 类型列表
   */
  public List<com.froad.thrift.vo.TypeInfoVo> typeInfo; // optional
  /**
   * 评论星级
   */
  public int starLevel; // optional
  /**
   * 机构名称(查询单个详细信息时返回)
   */
  public String orgName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * id(商户id)
     */
    ID((short)1, "id"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)2, "createTime"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)3, "clientId"),
    /**
     * 一级机构
     */
    PRO_ORG_CODE((short)4, "proOrgCode"),
    /**
     * 二级机构
     */
    CITY_ORG_CODE((short)5, "cityOrgCode"),
    /**
     * 三级级机构
     */
    COUNTY_ORG_CODE((short)6, "countyOrgCode"),
    /**
     * 所属组织机构编号
     */
    ORG_CODE((short)7, "orgCode"),
    /**
     * 是否启动
     */
    IS_ENABLE((short)8, "isEnable"),
    /**
     * 商户名称
     */
    MERCHANT_NAME((short)9, "merchantName"),
    /**
     * 商户全称
     */
    MERCHANT_FULLNAME((short)10, "merchantFullname"),
    /**
     * 商标
     */
    LOGO((short)11, "logo"),
    /**
     * 地址
     */
    ADDRESS((short)12, "address"),
    /**
     * 电话
     */
    PHONE((short)13, "phone"),
    /**
     * 简介
     */
    INTRODUCE((short)14, "introduce"),
    /**
     * 区域id
     */
    AREA_ID((short)15, "areaId"),
    /**
     * 对应地区表的冗余
     */
    TREE_PATH_NAME((short)16, "treePathName"),
    /**
     * 门店信息
     */
    OUTLET_INFO((short)17, "outletInfo"),
    /**
     * 分类列表
     */
    CATEGORY_INFO((short)18, "categoryInfo"),
    /**
     * 类型列表
     */
    TYPE_INFO((short)19, "typeInfo"),
    /**
     * 评论星级
     */
    STAR_LEVEL((short)20, "starLevel"),
    /**
     * 机构名称(查询单个详细信息时返回)
     */
    ORG_NAME((short)21, "orgName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // CLIENT_ID
          return CLIENT_ID;
        case 4: // PRO_ORG_CODE
          return PRO_ORG_CODE;
        case 5: // CITY_ORG_CODE
          return CITY_ORG_CODE;
        case 6: // COUNTY_ORG_CODE
          return COUNTY_ORG_CODE;
        case 7: // ORG_CODE
          return ORG_CODE;
        case 8: // IS_ENABLE
          return IS_ENABLE;
        case 9: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 10: // MERCHANT_FULLNAME
          return MERCHANT_FULLNAME;
        case 11: // LOGO
          return LOGO;
        case 12: // ADDRESS
          return ADDRESS;
        case 13: // PHONE
          return PHONE;
        case 14: // INTRODUCE
          return INTRODUCE;
        case 15: // AREA_ID
          return AREA_ID;
        case 16: // TREE_PATH_NAME
          return TREE_PATH_NAME;
        case 17: // OUTLET_INFO
          return OUTLET_INFO;
        case 18: // CATEGORY_INFO
          return CATEGORY_INFO;
        case 19: // TYPE_INFO
          return TYPE_INFO;
        case 20: // STAR_LEVEL
          return STAR_LEVEL;
        case 21: // ORG_NAME
          return ORG_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIME_ISSET_ID = 0;
  private static final int __ISENABLE_ISSET_ID = 1;
  private static final int __AREAID_ISSET_ID = 2;
  private static final int __STARLEVEL_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CREATE_TIME,_Fields.PRO_ORG_CODE,_Fields.CITY_ORG_CODE,_Fields.COUNTY_ORG_CODE,_Fields.ORG_CODE,_Fields.IS_ENABLE,_Fields.MERCHANT_NAME,_Fields.MERCHANT_FULLNAME,_Fields.LOGO,_Fields.ADDRESS,_Fields.PHONE,_Fields.INTRODUCE,_Fields.AREA_ID,_Fields.TREE_PATH_NAME,_Fields.OUTLET_INFO,_Fields.CATEGORY_INFO,_Fields.TYPE_INFO,_Fields.STAR_LEVEL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRO_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("proOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("cityOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNTY_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("countyOrgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("isEnable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_FULLNAME, new org.apache.thrift.meta_data.FieldMetaData("merchantFullname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGO, new org.apache.thrift.meta_data.FieldMetaData("logo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INTRODUCE, new org.apache.thrift.meta_data.FieldMetaData("introduce", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TREE_PATH_NAME, new org.apache.thrift.meta_data.FieldMetaData("treePathName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_INFO, new org.apache.thrift.meta_data.FieldMetaData("outletInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.CATEGORY_INFO, new org.apache.thrift.meta_data.FieldMetaData("categoryInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.CategoryInfoVo.class))));
    tmpMap.put(_Fields.TYPE_INFO, new org.apache.thrift.meta_data.FieldMetaData("typeInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.TypeInfoVo.class))));
    tmpMap.put(_Fields.STAR_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("starLevel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantDetailVo.class, metaDataMap);
  }

  public MerchantDetailVo() {
  }

  public MerchantDetailVo(
    String clientId,
    String orgName)
  {
    this();
    this.clientId = clientId;
    this.orgName = orgName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantDetailVo(MerchantDetailVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    this.createTime = other.createTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetProOrgCode()) {
      this.proOrgCode = other.proOrgCode;
    }
    if (other.isSetCityOrgCode()) {
      this.cityOrgCode = other.cityOrgCode;
    }
    if (other.isSetCountyOrgCode()) {
      this.countyOrgCode = other.countyOrgCode;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    this.isEnable = other.isEnable;
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetMerchantFullname()) {
      this.merchantFullname = other.merchantFullname;
    }
    if (other.isSetLogo()) {
      this.logo = other.logo;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetIntroduce()) {
      this.introduce = other.introduce;
    }
    this.areaId = other.areaId;
    if (other.isSetTreePathName()) {
      this.treePathName = other.treePathName;
    }
    if (other.isSetOutletInfo()) {
      List<String> __this__outletInfo = new ArrayList<String>(other.outletInfo);
      this.outletInfo = __this__outletInfo;
    }
    if (other.isSetCategoryInfo()) {
      List<com.froad.thrift.vo.CategoryInfoVo> __this__categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(other.categoryInfo.size());
      for (com.froad.thrift.vo.CategoryInfoVo other_element : other.categoryInfo) {
        __this__categoryInfo.add(new com.froad.thrift.vo.CategoryInfoVo(other_element));
      }
      this.categoryInfo = __this__categoryInfo;
    }
    if (other.isSetTypeInfo()) {
      List<com.froad.thrift.vo.TypeInfoVo> __this__typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(other.typeInfo.size());
      for (com.froad.thrift.vo.TypeInfoVo other_element : other.typeInfo) {
        __this__typeInfo.add(new com.froad.thrift.vo.TypeInfoVo(other_element));
      }
      this.typeInfo = __this__typeInfo;
    }
    this.starLevel = other.starLevel;
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
  }

  public MerchantDetailVo deepCopy() {
    return new MerchantDetailVo(this);
  }

  @Override
  public void clear() {
    this.id = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.clientId = null;
    this.proOrgCode = null;
    this.cityOrgCode = null;
    this.countyOrgCode = null;
    this.orgCode = null;
    setIsEnableIsSet(false);
    this.isEnable = false;
    this.merchantName = null;
    this.merchantFullname = null;
    this.logo = null;
    this.address = null;
    this.phone = null;
    this.introduce = null;
    setAreaIdIsSet(false);
    this.areaId = 0;
    this.treePathName = null;
    this.outletInfo = null;
    this.categoryInfo = null;
    this.typeInfo = null;
    setStarLevelIsSet(false);
    this.starLevel = 0;
    this.orgName = null;
  }

  /**
   * id(商户id)
   */
  public String getId() {
    return this.id;
  }

  /**
   * id(商户id)
   */
  public MerchantDetailVo setId(String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public MerchantDetailVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public MerchantDetailVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 一级机构
   */
  public String getProOrgCode() {
    return this.proOrgCode;
  }

  /**
   * 一级机构
   */
  public MerchantDetailVo setProOrgCode(String proOrgCode) {
    this.proOrgCode = proOrgCode;
    return this;
  }

  public void unsetProOrgCode() {
    this.proOrgCode = null;
  }

  /** Returns true if field proOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetProOrgCode() {
    return this.proOrgCode != null;
  }

  public void setProOrgCodeIsSet(boolean value) {
    if (!value) {
      this.proOrgCode = null;
    }
  }

  /**
   * 二级机构
   */
  public String getCityOrgCode() {
    return this.cityOrgCode;
  }

  /**
   * 二级机构
   */
  public MerchantDetailVo setCityOrgCode(String cityOrgCode) {
    this.cityOrgCode = cityOrgCode;
    return this;
  }

  public void unsetCityOrgCode() {
    this.cityOrgCode = null;
  }

  /** Returns true if field cityOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCityOrgCode() {
    return this.cityOrgCode != null;
  }

  public void setCityOrgCodeIsSet(boolean value) {
    if (!value) {
      this.cityOrgCode = null;
    }
  }

  /**
   * 三级级机构
   */
  public String getCountyOrgCode() {
    return this.countyOrgCode;
  }

  /**
   * 三级级机构
   */
  public MerchantDetailVo setCountyOrgCode(String countyOrgCode) {
    this.countyOrgCode = countyOrgCode;
    return this;
  }

  public void unsetCountyOrgCode() {
    this.countyOrgCode = null;
  }

  /** Returns true if field countyOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCountyOrgCode() {
    return this.countyOrgCode != null;
  }

  public void setCountyOrgCodeIsSet(boolean value) {
    if (!value) {
      this.countyOrgCode = null;
    }
  }

  /**
   * 所属组织机构编号
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 所属组织机构编号
   */
  public MerchantDetailVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 是否启动
   */
  public boolean isIsEnable() {
    return this.isEnable;
  }

  /**
   * 是否启动
   */
  public MerchantDetailVo setIsEnable(boolean isEnable) {
    this.isEnable = isEnable;
    setIsEnableIsSet(true);
    return this;
  }

  public void unsetIsEnable() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  /** Returns true if field isEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnable() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  public void setIsEnableIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLE_ISSET_ID, value);
  }

  /**
   * 商户名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称
   */
  public MerchantDetailVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 商户全称
   */
  public String getMerchantFullname() {
    return this.merchantFullname;
  }

  /**
   * 商户全称
   */
  public MerchantDetailVo setMerchantFullname(String merchantFullname) {
    this.merchantFullname = merchantFullname;
    return this;
  }

  public void unsetMerchantFullname() {
    this.merchantFullname = null;
  }

  /** Returns true if field merchantFullname is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantFullname() {
    return this.merchantFullname != null;
  }

  public void setMerchantFullnameIsSet(boolean value) {
    if (!value) {
      this.merchantFullname = null;
    }
  }

  /**
   * 商标
   */
  public String getLogo() {
    return this.logo;
  }

  /**
   * 商标
   */
  public MerchantDetailVo setLogo(String logo) {
    this.logo = logo;
    return this;
  }

  public void unsetLogo() {
    this.logo = null;
  }

  /** Returns true if field logo is set (has been assigned a value) and false otherwise */
  public boolean isSetLogo() {
    return this.logo != null;
  }

  public void setLogoIsSet(boolean value) {
    if (!value) {
      this.logo = null;
    }
  }

  /**
   * 地址
   */
  public String getAddress() {
    return this.address;
  }

  /**
   * 地址
   */
  public MerchantDetailVo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  /**
   * 电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 电话
   */
  public MerchantDetailVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 简介
   */
  public String getIntroduce() {
    return this.introduce;
  }

  /**
   * 简介
   */
  public MerchantDetailVo setIntroduce(String introduce) {
    this.introduce = introduce;
    return this;
  }

  public void unsetIntroduce() {
    this.introduce = null;
  }

  /** Returns true if field introduce is set (has been assigned a value) and false otherwise */
  public boolean isSetIntroduce() {
    return this.introduce != null;
  }

  public void setIntroduceIsSet(boolean value) {
    if (!value) {
      this.introduce = null;
    }
  }

  /**
   * 区域id
   */
  public long getAreaId() {
    return this.areaId;
  }

  /**
   * 区域id
   */
  public MerchantDetailVo setAreaId(long areaId) {
    this.areaId = areaId;
    setAreaIdIsSet(true);
    return this;
  }

  public void unsetAreaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return EncodingUtils.testBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  public void setAreaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREAID_ISSET_ID, value);
  }

  /**
   * 对应地区表的冗余
   */
  public String getTreePathName() {
    return this.treePathName;
  }

  /**
   * 对应地区表的冗余
   */
  public MerchantDetailVo setTreePathName(String treePathName) {
    this.treePathName = treePathName;
    return this;
  }

  public void unsetTreePathName() {
    this.treePathName = null;
  }

  /** Returns true if field treePathName is set (has been assigned a value) and false otherwise */
  public boolean isSetTreePathName() {
    return this.treePathName != null;
  }

  public void setTreePathNameIsSet(boolean value) {
    if (!value) {
      this.treePathName = null;
    }
  }

  public int getOutletInfoSize() {
    return (this.outletInfo == null) ? 0 : this.outletInfo.size();
  }

  public java.util.Iterator<String> getOutletInfoIterator() {
    return (this.outletInfo == null) ? null : this.outletInfo.iterator();
  }

  public void addToOutletInfo(String elem) {
    if (this.outletInfo == null) {
      this.outletInfo = new ArrayList<String>();
    }
    this.outletInfo.add(elem);
  }

  /**
   * 门店信息
   */
  public List<String> getOutletInfo() {
    return this.outletInfo;
  }

  /**
   * 门店信息
   */
  public MerchantDetailVo setOutletInfo(List<String> outletInfo) {
    this.outletInfo = outletInfo;
    return this;
  }

  public void unsetOutletInfo() {
    this.outletInfo = null;
  }

  /** Returns true if field outletInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletInfo() {
    return this.outletInfo != null;
  }

  public void setOutletInfoIsSet(boolean value) {
    if (!value) {
      this.outletInfo = null;
    }
  }

  public int getCategoryInfoSize() {
    return (this.categoryInfo == null) ? 0 : this.categoryInfo.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfoIterator() {
    return (this.categoryInfo == null) ? null : this.categoryInfo.iterator();
  }

  public void addToCategoryInfo(com.froad.thrift.vo.CategoryInfoVo elem) {
    if (this.categoryInfo == null) {
      this.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>();
    }
    this.categoryInfo.add(elem);
  }

  /**
   * 分类列表
   */
  public List<com.froad.thrift.vo.CategoryInfoVo> getCategoryInfo() {
    return this.categoryInfo;
  }

  /**
   * 分类列表
   */
  public MerchantDetailVo setCategoryInfo(List<com.froad.thrift.vo.CategoryInfoVo> categoryInfo) {
    this.categoryInfo = categoryInfo;
    return this;
  }

  public void unsetCategoryInfo() {
    this.categoryInfo = null;
  }

  /** Returns true if field categoryInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryInfo() {
    return this.categoryInfo != null;
  }

  public void setCategoryInfoIsSet(boolean value) {
    if (!value) {
      this.categoryInfo = null;
    }
  }

  public int getTypeInfoSize() {
    return (this.typeInfo == null) ? 0 : this.typeInfo.size();
  }

  public java.util.Iterator<com.froad.thrift.vo.TypeInfoVo> getTypeInfoIterator() {
    return (this.typeInfo == null) ? null : this.typeInfo.iterator();
  }

  public void addToTypeInfo(com.froad.thrift.vo.TypeInfoVo elem) {
    if (this.typeInfo == null) {
      this.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>();
    }
    this.typeInfo.add(elem);
  }

  /**
   * 类型列表
   */
  public List<com.froad.thrift.vo.TypeInfoVo> getTypeInfo() {
    return this.typeInfo;
  }

  /**
   * 类型列表
   */
  public MerchantDetailVo setTypeInfo(List<com.froad.thrift.vo.TypeInfoVo> typeInfo) {
    this.typeInfo = typeInfo;
    return this;
  }

  public void unsetTypeInfo() {
    this.typeInfo = null;
  }

  /** Returns true if field typeInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetTypeInfo() {
    return this.typeInfo != null;
  }

  public void setTypeInfoIsSet(boolean value) {
    if (!value) {
      this.typeInfo = null;
    }
  }

  /**
   * 评论星级
   */
  public int getStarLevel() {
    return this.starLevel;
  }

  /**
   * 评论星级
   */
  public MerchantDetailVo setStarLevel(int starLevel) {
    this.starLevel = starLevel;
    setStarLevelIsSet(true);
    return this;
  }

  public void unsetStarLevel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  /** Returns true if field starLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetStarLevel() {
    return EncodingUtils.testBit(__isset_bitfield, __STARLEVEL_ISSET_ID);
  }

  public void setStarLevelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARLEVEL_ISSET_ID, value);
  }

  /**
   * 机构名称(查询单个详细信息时返回)
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 机构名称(查询单个详细信息时返回)
   */
  public MerchantDetailVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case PRO_ORG_CODE:
      if (value == null) {
        unsetProOrgCode();
      } else {
        setProOrgCode((String)value);
      }
      break;

    case CITY_ORG_CODE:
      if (value == null) {
        unsetCityOrgCode();
      } else {
        setCityOrgCode((String)value);
      }
      break;

    case COUNTY_ORG_CODE:
      if (value == null) {
        unsetCountyOrgCode();
      } else {
        setCountyOrgCode((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case IS_ENABLE:
      if (value == null) {
        unsetIsEnable();
      } else {
        setIsEnable((Boolean)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case MERCHANT_FULLNAME:
      if (value == null) {
        unsetMerchantFullname();
      } else {
        setMerchantFullname((String)value);
      }
      break;

    case LOGO:
      if (value == null) {
        unsetLogo();
      } else {
        setLogo((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case INTRODUCE:
      if (value == null) {
        unsetIntroduce();
      } else {
        setIntroduce((String)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((Long)value);
      }
      break;

    case TREE_PATH_NAME:
      if (value == null) {
        unsetTreePathName();
      } else {
        setTreePathName((String)value);
      }
      break;

    case OUTLET_INFO:
      if (value == null) {
        unsetOutletInfo();
      } else {
        setOutletInfo((List<String>)value);
      }
      break;

    case CATEGORY_INFO:
      if (value == null) {
        unsetCategoryInfo();
      } else {
        setCategoryInfo((List<com.froad.thrift.vo.CategoryInfoVo>)value);
      }
      break;

    case TYPE_INFO:
      if (value == null) {
        unsetTypeInfo();
      } else {
        setTypeInfo((List<com.froad.thrift.vo.TypeInfoVo>)value);
      }
      break;

    case STAR_LEVEL:
      if (value == null) {
        unsetStarLevel();
      } else {
        setStarLevel((Integer)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case CLIENT_ID:
      return getClientId();

    case PRO_ORG_CODE:
      return getProOrgCode();

    case CITY_ORG_CODE:
      return getCityOrgCode();

    case COUNTY_ORG_CODE:
      return getCountyOrgCode();

    case ORG_CODE:
      return getOrgCode();

    case IS_ENABLE:
      return Boolean.valueOf(isIsEnable());

    case MERCHANT_NAME:
      return getMerchantName();

    case MERCHANT_FULLNAME:
      return getMerchantFullname();

    case LOGO:
      return getLogo();

    case ADDRESS:
      return getAddress();

    case PHONE:
      return getPhone();

    case INTRODUCE:
      return getIntroduce();

    case AREA_ID:
      return Long.valueOf(getAreaId());

    case TREE_PATH_NAME:
      return getTreePathName();

    case OUTLET_INFO:
      return getOutletInfo();

    case CATEGORY_INFO:
      return getCategoryInfo();

    case TYPE_INFO:
      return getTypeInfo();

    case STAR_LEVEL:
      return Integer.valueOf(getStarLevel());

    case ORG_NAME:
      return getOrgName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case CLIENT_ID:
      return isSetClientId();
    case PRO_ORG_CODE:
      return isSetProOrgCode();
    case CITY_ORG_CODE:
      return isSetCityOrgCode();
    case COUNTY_ORG_CODE:
      return isSetCountyOrgCode();
    case ORG_CODE:
      return isSetOrgCode();
    case IS_ENABLE:
      return isSetIsEnable();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case MERCHANT_FULLNAME:
      return isSetMerchantFullname();
    case LOGO:
      return isSetLogo();
    case ADDRESS:
      return isSetAddress();
    case PHONE:
      return isSetPhone();
    case INTRODUCE:
      return isSetIntroduce();
    case AREA_ID:
      return isSetAreaId();
    case TREE_PATH_NAME:
      return isSetTreePathName();
    case OUTLET_INFO:
      return isSetOutletInfo();
    case CATEGORY_INFO:
      return isSetCategoryInfo();
    case TYPE_INFO:
      return isSetTypeInfo();
    case STAR_LEVEL:
      return isSetStarLevel();
    case ORG_NAME:
      return isSetOrgName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantDetailVo)
      return this.equals((MerchantDetailVo)that);
    return false;
  }

  public boolean equals(MerchantDetailVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_proOrgCode = true && this.isSetProOrgCode();
    boolean that_present_proOrgCode = true && that.isSetProOrgCode();
    if (this_present_proOrgCode || that_present_proOrgCode) {
      if (!(this_present_proOrgCode && that_present_proOrgCode))
        return false;
      if (!this.proOrgCode.equals(that.proOrgCode))
        return false;
    }

    boolean this_present_cityOrgCode = true && this.isSetCityOrgCode();
    boolean that_present_cityOrgCode = true && that.isSetCityOrgCode();
    if (this_present_cityOrgCode || that_present_cityOrgCode) {
      if (!(this_present_cityOrgCode && that_present_cityOrgCode))
        return false;
      if (!this.cityOrgCode.equals(that.cityOrgCode))
        return false;
    }

    boolean this_present_countyOrgCode = true && this.isSetCountyOrgCode();
    boolean that_present_countyOrgCode = true && that.isSetCountyOrgCode();
    if (this_present_countyOrgCode || that_present_countyOrgCode) {
      if (!(this_present_countyOrgCode && that_present_countyOrgCode))
        return false;
      if (!this.countyOrgCode.equals(that.countyOrgCode))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_isEnable = true && this.isSetIsEnable();
    boolean that_present_isEnable = true && that.isSetIsEnable();
    if (this_present_isEnable || that_present_isEnable) {
      if (!(this_present_isEnable && that_present_isEnable))
        return false;
      if (this.isEnable != that.isEnable)
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_merchantFullname = true && this.isSetMerchantFullname();
    boolean that_present_merchantFullname = true && that.isSetMerchantFullname();
    if (this_present_merchantFullname || that_present_merchantFullname) {
      if (!(this_present_merchantFullname && that_present_merchantFullname))
        return false;
      if (!this.merchantFullname.equals(that.merchantFullname))
        return false;
    }

    boolean this_present_logo = true && this.isSetLogo();
    boolean that_present_logo = true && that.isSetLogo();
    if (this_present_logo || that_present_logo) {
      if (!(this_present_logo && that_present_logo))
        return false;
      if (!this.logo.equals(that.logo))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_introduce = true && this.isSetIntroduce();
    boolean that_present_introduce = true && that.isSetIntroduce();
    if (this_present_introduce || that_present_introduce) {
      if (!(this_present_introduce && that_present_introduce))
        return false;
      if (!this.introduce.equals(that.introduce))
        return false;
    }

    boolean this_present_areaId = true && this.isSetAreaId();
    boolean that_present_areaId = true && that.isSetAreaId();
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (this.areaId != that.areaId)
        return false;
    }

    boolean this_present_treePathName = true && this.isSetTreePathName();
    boolean that_present_treePathName = true && that.isSetTreePathName();
    if (this_present_treePathName || that_present_treePathName) {
      if (!(this_present_treePathName && that_present_treePathName))
        return false;
      if (!this.treePathName.equals(that.treePathName))
        return false;
    }

    boolean this_present_outletInfo = true && this.isSetOutletInfo();
    boolean that_present_outletInfo = true && that.isSetOutletInfo();
    if (this_present_outletInfo || that_present_outletInfo) {
      if (!(this_present_outletInfo && that_present_outletInfo))
        return false;
      if (!this.outletInfo.equals(that.outletInfo))
        return false;
    }

    boolean this_present_categoryInfo = true && this.isSetCategoryInfo();
    boolean that_present_categoryInfo = true && that.isSetCategoryInfo();
    if (this_present_categoryInfo || that_present_categoryInfo) {
      if (!(this_present_categoryInfo && that_present_categoryInfo))
        return false;
      if (!this.categoryInfo.equals(that.categoryInfo))
        return false;
    }

    boolean this_present_typeInfo = true && this.isSetTypeInfo();
    boolean that_present_typeInfo = true && that.isSetTypeInfo();
    if (this_present_typeInfo || that_present_typeInfo) {
      if (!(this_present_typeInfo && that_present_typeInfo))
        return false;
      if (!this.typeInfo.equals(that.typeInfo))
        return false;
    }

    boolean this_present_starLevel = true && this.isSetStarLevel();
    boolean that_present_starLevel = true && that.isSetStarLevel();
    if (this_present_starLevel || that_present_starLevel) {
      if (!(this_present_starLevel && that_present_starLevel))
        return false;
      if (this.starLevel != that.starLevel)
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_proOrgCode = true && (isSetProOrgCode());
    list.add(present_proOrgCode);
    if (present_proOrgCode)
      list.add(proOrgCode);

    boolean present_cityOrgCode = true && (isSetCityOrgCode());
    list.add(present_cityOrgCode);
    if (present_cityOrgCode)
      list.add(cityOrgCode);

    boolean present_countyOrgCode = true && (isSetCountyOrgCode());
    list.add(present_countyOrgCode);
    if (present_countyOrgCode)
      list.add(countyOrgCode);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_isEnable = true && (isSetIsEnable());
    list.add(present_isEnable);
    if (present_isEnable)
      list.add(isEnable);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_merchantFullname = true && (isSetMerchantFullname());
    list.add(present_merchantFullname);
    if (present_merchantFullname)
      list.add(merchantFullname);

    boolean present_logo = true && (isSetLogo());
    list.add(present_logo);
    if (present_logo)
      list.add(logo);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_introduce = true && (isSetIntroduce());
    list.add(present_introduce);
    if (present_introduce)
      list.add(introduce);

    boolean present_areaId = true && (isSetAreaId());
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_treePathName = true && (isSetTreePathName());
    list.add(present_treePathName);
    if (present_treePathName)
      list.add(treePathName);

    boolean present_outletInfo = true && (isSetOutletInfo());
    list.add(present_outletInfo);
    if (present_outletInfo)
      list.add(outletInfo);

    boolean present_categoryInfo = true && (isSetCategoryInfo());
    list.add(present_categoryInfo);
    if (present_categoryInfo)
      list.add(categoryInfo);

    boolean present_typeInfo = true && (isSetTypeInfo());
    list.add(present_typeInfo);
    if (present_typeInfo)
      list.add(typeInfo);

    boolean present_starLevel = true && (isSetStarLevel());
    list.add(present_starLevel);
    if (present_starLevel)
      list.add(starLevel);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantDetailVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProOrgCode()).compareTo(other.isSetProOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.proOrgCode, other.proOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityOrgCode()).compareTo(other.isSetCityOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cityOrgCode, other.cityOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyOrgCode()).compareTo(other.isSetCountyOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.countyOrgCode, other.countyOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnable()).compareTo(other.isSetIsEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnable, other.isEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantFullname()).compareTo(other.isSetMerchantFullname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantFullname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantFullname, other.merchantFullname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLogo()).compareTo(other.isSetLogo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.logo, other.logo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntroduce()).compareTo(other.isSetIntroduce());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntroduce()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.introduce, other.introduce);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTreePathName()).compareTo(other.isSetTreePathName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTreePathName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.treePathName, other.treePathName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletInfo()).compareTo(other.isSetOutletInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletInfo, other.outletInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryInfo()).compareTo(other.isSetCategoryInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryInfo, other.categoryInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTypeInfo()).compareTo(other.isSetTypeInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTypeInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.typeInfo, other.typeInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarLevel()).compareTo(other.isSetStarLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starLevel, other.starLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantDetailVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      if (this.id == null) {
        sb.append("null");
      } else {
        sb.append(this.id);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (isSetProOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("proOrgCode:");
      if (this.proOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.proOrgCode);
      }
      first = false;
    }
    if (isSetCityOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("cityOrgCode:");
      if (this.cityOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.cityOrgCode);
      }
      first = false;
    }
    if (isSetCountyOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("countyOrgCode:");
      if (this.countyOrgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.countyOrgCode);
      }
      first = false;
    }
    if (isSetOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
    }
    if (isSetIsEnable()) {
      if (!first) sb.append(", ");
      sb.append("isEnable:");
      sb.append(this.isEnable);
      first = false;
    }
    if (isSetMerchantName()) {
      if (!first) sb.append(", ");
      sb.append("merchantName:");
      if (this.merchantName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantName);
      }
      first = false;
    }
    if (isSetMerchantFullname()) {
      if (!first) sb.append(", ");
      sb.append("merchantFullname:");
      if (this.merchantFullname == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantFullname);
      }
      first = false;
    }
    if (isSetLogo()) {
      if (!first) sb.append(", ");
      sb.append("logo:");
      if (this.logo == null) {
        sb.append("null");
      } else {
        sb.append(this.logo);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetIntroduce()) {
      if (!first) sb.append(", ");
      sb.append("introduce:");
      if (this.introduce == null) {
        sb.append("null");
      } else {
        sb.append(this.introduce);
      }
      first = false;
    }
    if (isSetAreaId()) {
      if (!first) sb.append(", ");
      sb.append("areaId:");
      sb.append(this.areaId);
      first = false;
    }
    if (isSetTreePathName()) {
      if (!first) sb.append(", ");
      sb.append("treePathName:");
      if (this.treePathName == null) {
        sb.append("null");
      } else {
        sb.append(this.treePathName);
      }
      first = false;
    }
    if (isSetOutletInfo()) {
      if (!first) sb.append(", ");
      sb.append("outletInfo:");
      if (this.outletInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.outletInfo);
      }
      first = false;
    }
    if (isSetCategoryInfo()) {
      if (!first) sb.append(", ");
      sb.append("categoryInfo:");
      if (this.categoryInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.categoryInfo);
      }
      first = false;
    }
    if (isSetTypeInfo()) {
      if (!first) sb.append(", ");
      sb.append("typeInfo:");
      if (this.typeInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.typeInfo);
      }
      first = false;
    }
    if (isSetStarLevel()) {
      if (!first) sb.append(", ");
      sb.append("starLevel:");
      sb.append(this.starLevel);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantDetailVoStandardSchemeFactory implements SchemeFactory {
    public MerchantDetailVoStandardScheme getScheme() {
      return new MerchantDetailVoStandardScheme();
    }
  }

  private static class MerchantDetailVoStandardScheme extends StandardScheme<MerchantDetailVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantDetailVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRO_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.proOrgCode = iprot.readString();
              struct.setProOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CITY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cityOrgCode = iprot.readString();
              struct.setCityOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // COUNTY_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.countyOrgCode = iprot.readString();
              struct.setCountyOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // IS_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnable = iprot.readBool();
              struct.setIsEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MERCHANT_FULLNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantFullname = iprot.readString();
              struct.setMerchantFullnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // LOGO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.logo = iprot.readString();
              struct.setLogoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // INTRODUCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.introduce = iprot.readString();
              struct.setIntroduceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.areaId = iprot.readI64();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // TREE_PATH_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.treePathName = iprot.readString();
              struct.setTreePathNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // OUTLET_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.outletInfo = new ArrayList<String>(_list0.size);
                String _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readString();
                  struct.outletInfo.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setOutletInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CATEGORY_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list3.size);
                com.froad.thrift.vo.CategoryInfoVo _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = new com.froad.thrift.vo.CategoryInfoVo();
                  _elem4.read(iprot);
                  struct.categoryInfo.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setCategoryInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // TYPE_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
                struct.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list6.size);
                com.froad.thrift.vo.TypeInfoVo _elem7;
                for (int _i8 = 0; _i8 < _list6.size; ++_i8)
                {
                  _elem7 = new com.froad.thrift.vo.TypeInfoVo();
                  _elem7.read(iprot);
                  struct.typeInfo.add(_elem7);
                }
                iprot.readListEnd();
              }
              struct.setTypeInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // STAR_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.starLevel = iprot.readI32();
              struct.setStarLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantDetailVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        if (struct.isSetId()) {
          oprot.writeFieldBegin(ID_FIELD_DESC);
          oprot.writeString(struct.id);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.proOrgCode != null) {
        if (struct.isSetProOrgCode()) {
          oprot.writeFieldBegin(PRO_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.proOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cityOrgCode != null) {
        if (struct.isSetCityOrgCode()) {
          oprot.writeFieldBegin(CITY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.cityOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.countyOrgCode != null) {
        if (struct.isSetCountyOrgCode()) {
          oprot.writeFieldBegin(COUNTY_ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.countyOrgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgCode != null) {
        if (struct.isSetOrgCode()) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsEnable()) {
        oprot.writeFieldBegin(IS_ENABLE_FIELD_DESC);
        oprot.writeBool(struct.isEnable);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        if (struct.isSetMerchantName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantFullname != null) {
        if (struct.isSetMerchantFullname()) {
          oprot.writeFieldBegin(MERCHANT_FULLNAME_FIELD_DESC);
          oprot.writeString(struct.merchantFullname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.logo != null) {
        if (struct.isSetLogo()) {
          oprot.writeFieldBegin(LOGO_FIELD_DESC);
          oprot.writeString(struct.logo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.introduce != null) {
        if (struct.isSetIntroduce()) {
          oprot.writeFieldBegin(INTRODUCE_FIELD_DESC);
          oprot.writeString(struct.introduce);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAreaId()) {
        oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
        oprot.writeI64(struct.areaId);
        oprot.writeFieldEnd();
      }
      if (struct.treePathName != null) {
        if (struct.isSetTreePathName()) {
          oprot.writeFieldBegin(TREE_PATH_NAME_FIELD_DESC);
          oprot.writeString(struct.treePathName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletInfo != null) {
        if (struct.isSetOutletInfo()) {
          oprot.writeFieldBegin(OUTLET_INFO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.outletInfo.size()));
            for (String _iter9 : struct.outletInfo)
            {
              oprot.writeString(_iter9);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.categoryInfo != null) {
        if (struct.isSetCategoryInfo()) {
          oprot.writeFieldBegin(CATEGORY_INFO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.categoryInfo.size()));
            for (com.froad.thrift.vo.CategoryInfoVo _iter10 : struct.categoryInfo)
            {
              _iter10.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.typeInfo != null) {
        if (struct.isSetTypeInfo()) {
          oprot.writeFieldBegin(TYPE_INFO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.typeInfo.size()));
            for (com.froad.thrift.vo.TypeInfoVo _iter11 : struct.typeInfo)
            {
              _iter11.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStarLevel()) {
        oprot.writeFieldBegin(STAR_LEVEL_FIELD_DESC);
        oprot.writeI32(struct.starLevel);
        oprot.writeFieldEnd();
      }
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantDetailVoTupleSchemeFactory implements SchemeFactory {
    public MerchantDetailVoTupleScheme getScheme() {
      return new MerchantDetailVoTupleScheme();
    }
  }

  private static class MerchantDetailVoTupleScheme extends TupleScheme<MerchantDetailVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetClientId()) {
        optionals.set(2);
      }
      if (struct.isSetProOrgCode()) {
        optionals.set(3);
      }
      if (struct.isSetCityOrgCode()) {
        optionals.set(4);
      }
      if (struct.isSetCountyOrgCode()) {
        optionals.set(5);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(6);
      }
      if (struct.isSetIsEnable()) {
        optionals.set(7);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(8);
      }
      if (struct.isSetMerchantFullname()) {
        optionals.set(9);
      }
      if (struct.isSetLogo()) {
        optionals.set(10);
      }
      if (struct.isSetAddress()) {
        optionals.set(11);
      }
      if (struct.isSetPhone()) {
        optionals.set(12);
      }
      if (struct.isSetIntroduce()) {
        optionals.set(13);
      }
      if (struct.isSetAreaId()) {
        optionals.set(14);
      }
      if (struct.isSetTreePathName()) {
        optionals.set(15);
      }
      if (struct.isSetOutletInfo()) {
        optionals.set(16);
      }
      if (struct.isSetCategoryInfo()) {
        optionals.set(17);
      }
      if (struct.isSetTypeInfo()) {
        optionals.set(18);
      }
      if (struct.isSetStarLevel()) {
        optionals.set(19);
      }
      if (struct.isSetOrgName()) {
        optionals.set(20);
      }
      oprot.writeBitSet(optionals, 21);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetProOrgCode()) {
        oprot.writeString(struct.proOrgCode);
      }
      if (struct.isSetCityOrgCode()) {
        oprot.writeString(struct.cityOrgCode);
      }
      if (struct.isSetCountyOrgCode()) {
        oprot.writeString(struct.countyOrgCode);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetIsEnable()) {
        oprot.writeBool(struct.isEnable);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetMerchantFullname()) {
        oprot.writeString(struct.merchantFullname);
      }
      if (struct.isSetLogo()) {
        oprot.writeString(struct.logo);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetIntroduce()) {
        oprot.writeString(struct.introduce);
      }
      if (struct.isSetAreaId()) {
        oprot.writeI64(struct.areaId);
      }
      if (struct.isSetTreePathName()) {
        oprot.writeString(struct.treePathName);
      }
      if (struct.isSetOutletInfo()) {
        {
          oprot.writeI32(struct.outletInfo.size());
          for (String _iter12 : struct.outletInfo)
          {
            oprot.writeString(_iter12);
          }
        }
      }
      if (struct.isSetCategoryInfo()) {
        {
          oprot.writeI32(struct.categoryInfo.size());
          for (com.froad.thrift.vo.CategoryInfoVo _iter13 : struct.categoryInfo)
          {
            _iter13.write(oprot);
          }
        }
      }
      if (struct.isSetTypeInfo()) {
        {
          oprot.writeI32(struct.typeInfo.size());
          for (com.froad.thrift.vo.TypeInfoVo _iter14 : struct.typeInfo)
          {
            _iter14.write(oprot);
          }
        }
      }
      if (struct.isSetStarLevel()) {
        oprot.writeI32(struct.starLevel);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(21);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.proOrgCode = iprot.readString();
        struct.setProOrgCodeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.cityOrgCode = iprot.readString();
        struct.setCityOrgCodeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.countyOrgCode = iprot.readString();
        struct.setCountyOrgCodeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.isEnable = iprot.readBool();
        struct.setIsEnableIsSet(true);
      }
      if (incoming.get(8)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.merchantFullname = iprot.readString();
        struct.setMerchantFullnameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.logo = iprot.readString();
        struct.setLogoIsSet(true);
      }
      if (incoming.get(11)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(12)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(13)) {
        struct.introduce = iprot.readString();
        struct.setIntroduceIsSet(true);
      }
      if (incoming.get(14)) {
        struct.areaId = iprot.readI64();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(15)) {
        struct.treePathName = iprot.readString();
        struct.setTreePathNameIsSet(true);
      }
      if (incoming.get(16)) {
        {
          org.apache.thrift.protocol.TList _list15 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.outletInfo = new ArrayList<String>(_list15.size);
          String _elem16;
          for (int _i17 = 0; _i17 < _list15.size; ++_i17)
          {
            _elem16 = iprot.readString();
            struct.outletInfo.add(_elem16);
          }
        }
        struct.setOutletInfoIsSet(true);
      }
      if (incoming.get(17)) {
        {
          org.apache.thrift.protocol.TList _list18 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.categoryInfo = new ArrayList<com.froad.thrift.vo.CategoryInfoVo>(_list18.size);
          com.froad.thrift.vo.CategoryInfoVo _elem19;
          for (int _i20 = 0; _i20 < _list18.size; ++_i20)
          {
            _elem19 = new com.froad.thrift.vo.CategoryInfoVo();
            _elem19.read(iprot);
            struct.categoryInfo.add(_elem19);
          }
        }
        struct.setCategoryInfoIsSet(true);
      }
      if (incoming.get(18)) {
        {
          org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.typeInfo = new ArrayList<com.froad.thrift.vo.TypeInfoVo>(_list21.size);
          com.froad.thrift.vo.TypeInfoVo _elem22;
          for (int _i23 = 0; _i23 < _list21.size; ++_i23)
          {
            _elem22 = new com.froad.thrift.vo.TypeInfoVo();
            _elem22.read(iprot);
            struct.typeInfo.add(_elem22);
          }
        }
        struct.setTypeInfoIsSet(true);
      }
      if (incoming.get(19)) {
        struct.starLevel = iprot.readI32();
        struct.setStarLevelIsSet(true);
      }
      if (incoming.get(20)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
    }
  }

}

