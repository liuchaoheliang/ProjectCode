/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.active;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商品列表查询过滤条件
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class QueryProductFilterVo implements org.apache.thrift.TBase<QueryProductFilterVo, QueryProductFilterVo._Fields>, java.io.Serializable, Cloneable, Comparable<QueryProductFilterVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QueryProductFilterVo");

  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField LONGITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("longitude", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField LATITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("latitude", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField DISTANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("distance", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField IS_RECOMMEND_FIELD_DESC = new org.apache.thrift.protocol.TField("isRecommend", org.apache.thrift.protocol.TType.BOOL, (short)7);
  private static final org.apache.thrift.protocol.TField PRODUCT_CATEGORY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productCategoryId", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new QueryProductFilterVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new QueryProductFilterVoTupleSchemeFactory());
  }

  /**
   * 客户端ID
   */
  public String clientId; // required
  /**
   * 商品类型
   */
  public String type; // required
  /**
   * 地区ID
   */
  public long areaId; // required
  /**
   * 经度
   */
  public double longitude; // required
  /**
   * 纬度
   */
  public double latitude; // required
  /**
   * 距离
   */
  public double distance; // required
  /**
   * 是否推荐列表
   */
  public boolean isRecommend; // required
  /**
   * 商品分类ID
   */
  public long productCategoryId; // required
  /**
   * 商品名
   */
  public String productName; // required
  /**
   * 商户ID
   */
  public String merchantId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 客户端ID
     */
    CLIENT_ID((short)1, "clientId"),
    /**
     * 商品类型
     */
    TYPE((short)2, "type"),
    /**
     * 地区ID
     */
    AREA_ID((short)3, "areaId"),
    /**
     * 经度
     */
    LONGITUDE((short)4, "longitude"),
    /**
     * 纬度
     */
    LATITUDE((short)5, "latitude"),
    /**
     * 距离
     */
    DISTANCE((short)6, "distance"),
    /**
     * 是否推荐列表
     */
    IS_RECOMMEND((short)7, "isRecommend"),
    /**
     * 商品分类ID
     */
    PRODUCT_CATEGORY_ID((short)8, "productCategoryId"),
    /**
     * 商品名
     */
    PRODUCT_NAME((short)9, "productName"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)10, "merchantId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CLIENT_ID
          return CLIENT_ID;
        case 2: // TYPE
          return TYPE;
        case 3: // AREA_ID
          return AREA_ID;
        case 4: // LONGITUDE
          return LONGITUDE;
        case 5: // LATITUDE
          return LATITUDE;
        case 6: // DISTANCE
          return DISTANCE;
        case 7: // IS_RECOMMEND
          return IS_RECOMMEND;
        case 8: // PRODUCT_CATEGORY_ID
          return PRODUCT_CATEGORY_ID;
        case 9: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 10: // MERCHANT_ID
          return MERCHANT_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __AREAID_ISSET_ID = 0;
  private static final int __LONGITUDE_ISSET_ID = 1;
  private static final int __LATITUDE_ISSET_ID = 2;
  private static final int __DISTANCE_ISSET_ID = 3;
  private static final int __ISRECOMMEND_ISSET_ID = 4;
  private static final int __PRODUCTCATEGORYID_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LONGITUDE, new org.apache.thrift.meta_data.FieldMetaData("longitude", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LATITUDE, new org.apache.thrift.meta_data.FieldMetaData("latitude", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DISTANCE, new org.apache.thrift.meta_data.FieldMetaData("distance", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.IS_RECOMMEND, new org.apache.thrift.meta_data.FieldMetaData("isRecommend", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.PRODUCT_CATEGORY_ID, new org.apache.thrift.meta_data.FieldMetaData("productCategoryId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QueryProductFilterVo.class, metaDataMap);
  }

  public QueryProductFilterVo() {
  }

  public QueryProductFilterVo(
    String clientId,
    String type,
    long areaId,
    double longitude,
    double latitude,
    double distance,
    boolean isRecommend,
    long productCategoryId,
    String productName,
    String merchantId)
  {
    this();
    this.clientId = clientId;
    this.type = type;
    this.areaId = areaId;
    setAreaIdIsSet(true);
    this.longitude = longitude;
    setLongitudeIsSet(true);
    this.latitude = latitude;
    setLatitudeIsSet(true);
    this.distance = distance;
    setDistanceIsSet(true);
    this.isRecommend = isRecommend;
    setIsRecommendIsSet(true);
    this.productCategoryId = productCategoryId;
    setProductCategoryIdIsSet(true);
    this.productName = productName;
    this.merchantId = merchantId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QueryProductFilterVo(QueryProductFilterVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    this.areaId = other.areaId;
    this.longitude = other.longitude;
    this.latitude = other.latitude;
    this.distance = other.distance;
    this.isRecommend = other.isRecommend;
    this.productCategoryId = other.productCategoryId;
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
  }

  public QueryProductFilterVo deepCopy() {
    return new QueryProductFilterVo(this);
  }

  @Override
  public void clear() {
    this.clientId = null;
    this.type = null;
    setAreaIdIsSet(false);
    this.areaId = 0;
    setLongitudeIsSet(false);
    this.longitude = 0.0;
    setLatitudeIsSet(false);
    this.latitude = 0.0;
    setDistanceIsSet(false);
    this.distance = 0.0;
    setIsRecommendIsSet(false);
    this.isRecommend = false;
    setProductCategoryIdIsSet(false);
    this.productCategoryId = 0;
    this.productName = null;
    this.merchantId = null;
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public QueryProductFilterVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 商品类型
   */
  public String getType() {
    return this.type;
  }

  /**
   * 商品类型
   */
  public QueryProductFilterVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 地区ID
   */
  public long getAreaId() {
    return this.areaId;
  }

  /**
   * 地区ID
   */
  public QueryProductFilterVo setAreaId(long areaId) {
    this.areaId = areaId;
    setAreaIdIsSet(true);
    return this;
  }

  public void unsetAreaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return EncodingUtils.testBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  public void setAreaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREAID_ISSET_ID, value);
  }

  /**
   * 经度
   */
  public double getLongitude() {
    return this.longitude;
  }

  /**
   * 经度
   */
  public QueryProductFilterVo setLongitude(double longitude) {
    this.longitude = longitude;
    setLongitudeIsSet(true);
    return this;
  }

  public void unsetLongitude() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LONGITUDE_ISSET_ID);
  }

  /** Returns true if field longitude is set (has been assigned a value) and false otherwise */
  public boolean isSetLongitude() {
    return EncodingUtils.testBit(__isset_bitfield, __LONGITUDE_ISSET_ID);
  }

  public void setLongitudeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LONGITUDE_ISSET_ID, value);
  }

  /**
   * 纬度
   */
  public double getLatitude() {
    return this.latitude;
  }

  /**
   * 纬度
   */
  public QueryProductFilterVo setLatitude(double latitude) {
    this.latitude = latitude;
    setLatitudeIsSet(true);
    return this;
  }

  public void unsetLatitude() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LATITUDE_ISSET_ID);
  }

  /** Returns true if field latitude is set (has been assigned a value) and false otherwise */
  public boolean isSetLatitude() {
    return EncodingUtils.testBit(__isset_bitfield, __LATITUDE_ISSET_ID);
  }

  public void setLatitudeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LATITUDE_ISSET_ID, value);
  }

  /**
   * 距离
   */
  public double getDistance() {
    return this.distance;
  }

  /**
   * 距离
   */
  public QueryProductFilterVo setDistance(double distance) {
    this.distance = distance;
    setDistanceIsSet(true);
    return this;
  }

  public void unsetDistance() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DISTANCE_ISSET_ID);
  }

  /** Returns true if field distance is set (has been assigned a value) and false otherwise */
  public boolean isSetDistance() {
    return EncodingUtils.testBit(__isset_bitfield, __DISTANCE_ISSET_ID);
  }

  public void setDistanceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DISTANCE_ISSET_ID, value);
  }

  /**
   * 是否推荐列表
   */
  public boolean isIsRecommend() {
    return this.isRecommend;
  }

  /**
   * 是否推荐列表
   */
  public QueryProductFilterVo setIsRecommend(boolean isRecommend) {
    this.isRecommend = isRecommend;
    setIsRecommendIsSet(true);
    return this;
  }

  public void unsetIsRecommend() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID);
  }

  /** Returns true if field isRecommend is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRecommend() {
    return EncodingUtils.testBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID);
  }

  public void setIsRecommendIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID, value);
  }

  /**
   * 商品分类ID
   */
  public long getProductCategoryId() {
    return this.productCategoryId;
  }

  /**
   * 商品分类ID
   */
  public QueryProductFilterVo setProductCategoryId(long productCategoryId) {
    this.productCategoryId = productCategoryId;
    setProductCategoryIdIsSet(true);
    return this;
  }

  public void unsetProductCategoryId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRODUCTCATEGORYID_ISSET_ID);
  }

  /** Returns true if field productCategoryId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductCategoryId() {
    return EncodingUtils.testBit(__isset_bitfield, __PRODUCTCATEGORYID_ISSET_ID);
  }

  public void setProductCategoryIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRODUCTCATEGORYID_ISSET_ID, value);
  }

  /**
   * 商品名
   */
  public String getProductName() {
    return this.productName;
  }

  /**
   * 商品名
   */
  public QueryProductFilterVo setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public QueryProductFilterVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((Long)value);
      }
      break;

    case LONGITUDE:
      if (value == null) {
        unsetLongitude();
      } else {
        setLongitude((Double)value);
      }
      break;

    case LATITUDE:
      if (value == null) {
        unsetLatitude();
      } else {
        setLatitude((Double)value);
      }
      break;

    case DISTANCE:
      if (value == null) {
        unsetDistance();
      } else {
        setDistance((Double)value);
      }
      break;

    case IS_RECOMMEND:
      if (value == null) {
        unsetIsRecommend();
      } else {
        setIsRecommend((Boolean)value);
      }
      break;

    case PRODUCT_CATEGORY_ID:
      if (value == null) {
        unsetProductCategoryId();
      } else {
        setProductCategoryId((Long)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CLIENT_ID:
      return getClientId();

    case TYPE:
      return getType();

    case AREA_ID:
      return Long.valueOf(getAreaId());

    case LONGITUDE:
      return Double.valueOf(getLongitude());

    case LATITUDE:
      return Double.valueOf(getLatitude());

    case DISTANCE:
      return Double.valueOf(getDistance());

    case IS_RECOMMEND:
      return Boolean.valueOf(isIsRecommend());

    case PRODUCT_CATEGORY_ID:
      return Long.valueOf(getProductCategoryId());

    case PRODUCT_NAME:
      return getProductName();

    case MERCHANT_ID:
      return getMerchantId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CLIENT_ID:
      return isSetClientId();
    case TYPE:
      return isSetType();
    case AREA_ID:
      return isSetAreaId();
    case LONGITUDE:
      return isSetLongitude();
    case LATITUDE:
      return isSetLatitude();
    case DISTANCE:
      return isSetDistance();
    case IS_RECOMMEND:
      return isSetIsRecommend();
    case PRODUCT_CATEGORY_ID:
      return isSetProductCategoryId();
    case PRODUCT_NAME:
      return isSetProductName();
    case MERCHANT_ID:
      return isSetMerchantId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QueryProductFilterVo)
      return this.equals((QueryProductFilterVo)that);
    return false;
  }

  public boolean equals(QueryProductFilterVo that) {
    if (that == null)
      return false;

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_areaId = true;
    boolean that_present_areaId = true;
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (this.areaId != that.areaId)
        return false;
    }

    boolean this_present_longitude = true;
    boolean that_present_longitude = true;
    if (this_present_longitude || that_present_longitude) {
      if (!(this_present_longitude && that_present_longitude))
        return false;
      if (this.longitude != that.longitude)
        return false;
    }

    boolean this_present_latitude = true;
    boolean that_present_latitude = true;
    if (this_present_latitude || that_present_latitude) {
      if (!(this_present_latitude && that_present_latitude))
        return false;
      if (this.latitude != that.latitude)
        return false;
    }

    boolean this_present_distance = true;
    boolean that_present_distance = true;
    if (this_present_distance || that_present_distance) {
      if (!(this_present_distance && that_present_distance))
        return false;
      if (this.distance != that.distance)
        return false;
    }

    boolean this_present_isRecommend = true;
    boolean that_present_isRecommend = true;
    if (this_present_isRecommend || that_present_isRecommend) {
      if (!(this_present_isRecommend && that_present_isRecommend))
        return false;
      if (this.isRecommend != that.isRecommend)
        return false;
    }

    boolean this_present_productCategoryId = true;
    boolean that_present_productCategoryId = true;
    if (this_present_productCategoryId || that_present_productCategoryId) {
      if (!(this_present_productCategoryId && that_present_productCategoryId))
        return false;
      if (this.productCategoryId != that.productCategoryId)
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_areaId = true;
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_longitude = true;
    list.add(present_longitude);
    if (present_longitude)
      list.add(longitude);

    boolean present_latitude = true;
    list.add(present_latitude);
    if (present_latitude)
      list.add(latitude);

    boolean present_distance = true;
    list.add(present_distance);
    if (present_distance)
      list.add(distance);

    boolean present_isRecommend = true;
    list.add(present_isRecommend);
    if (present_isRecommend)
      list.add(isRecommend);

    boolean present_productCategoryId = true;
    list.add(present_productCategoryId);
    if (present_productCategoryId)
      list.add(productCategoryId);

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    return list.hashCode();
  }

  @Override
  public int compareTo(QueryProductFilterVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLongitude()).compareTo(other.isSetLongitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLongitude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.longitude, other.longitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLatitude()).compareTo(other.isSetLatitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatitude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latitude, other.latitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDistance()).compareTo(other.isSetDistance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.distance, other.distance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsRecommend()).compareTo(other.isSetIsRecommend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRecommend()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRecommend, other.isRecommend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductCategoryId()).compareTo(other.isSetProductCategoryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductCategoryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productCategoryId, other.productCategoryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QueryProductFilterVo(");
    boolean first = true;

    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("areaId:");
    sb.append(this.areaId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("longitude:");
    sb.append(this.longitude);
    first = false;
    if (!first) sb.append(", ");
    sb.append("latitude:");
    sb.append(this.latitude);
    first = false;
    if (!first) sb.append(", ");
    sb.append("distance:");
    sb.append(this.distance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isRecommend:");
    sb.append(this.isRecommend);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productCategoryId:");
    sb.append(this.productCategoryId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QueryProductFilterVoStandardSchemeFactory implements SchemeFactory {
    public QueryProductFilterVoStandardScheme getScheme() {
      return new QueryProductFilterVoStandardScheme();
    }
  }

  private static class QueryProductFilterVoStandardScheme extends StandardScheme<QueryProductFilterVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QueryProductFilterVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.areaId = iprot.readI64();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LONGITUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.longitude = iprot.readDouble();
              struct.setLongitudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LATITUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.latitude = iprot.readDouble();
              struct.setLatitudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DISTANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.distance = iprot.readDouble();
              struct.setDistanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // IS_RECOMMEND
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isRecommend = iprot.readBool();
              struct.setIsRecommendIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PRODUCT_CATEGORY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.productCategoryId = iprot.readI64();
              struct.setProductCategoryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QueryProductFilterVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
      oprot.writeI64(struct.areaId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LONGITUDE_FIELD_DESC);
      oprot.writeDouble(struct.longitude);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LATITUDE_FIELD_DESC);
      oprot.writeDouble(struct.latitude);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DISTANCE_FIELD_DESC);
      oprot.writeDouble(struct.distance);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_RECOMMEND_FIELD_DESC);
      oprot.writeBool(struct.isRecommend);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRODUCT_CATEGORY_ID_FIELD_DESC);
      oprot.writeI64(struct.productCategoryId);
      oprot.writeFieldEnd();
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QueryProductFilterVoTupleSchemeFactory implements SchemeFactory {
    public QueryProductFilterVoTupleScheme getScheme() {
      return new QueryProductFilterVoTupleScheme();
    }
  }

  private static class QueryProductFilterVoTupleScheme extends TupleScheme<QueryProductFilterVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QueryProductFilterVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetClientId()) {
        optionals.set(0);
      }
      if (struct.isSetType()) {
        optionals.set(1);
      }
      if (struct.isSetAreaId()) {
        optionals.set(2);
      }
      if (struct.isSetLongitude()) {
        optionals.set(3);
      }
      if (struct.isSetLatitude()) {
        optionals.set(4);
      }
      if (struct.isSetDistance()) {
        optionals.set(5);
      }
      if (struct.isSetIsRecommend()) {
        optionals.set(6);
      }
      if (struct.isSetProductCategoryId()) {
        optionals.set(7);
      }
      if (struct.isSetProductName()) {
        optionals.set(8);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetAreaId()) {
        oprot.writeI64(struct.areaId);
      }
      if (struct.isSetLongitude()) {
        oprot.writeDouble(struct.longitude);
      }
      if (struct.isSetLatitude()) {
        oprot.writeDouble(struct.latitude);
      }
      if (struct.isSetDistance()) {
        oprot.writeDouble(struct.distance);
      }
      if (struct.isSetIsRecommend()) {
        oprot.writeBool(struct.isRecommend);
      }
      if (struct.isSetProductCategoryId()) {
        oprot.writeI64(struct.productCategoryId);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QueryProductFilterVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.areaId = iprot.readI64();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.longitude = iprot.readDouble();
        struct.setLongitudeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.latitude = iprot.readDouble();
        struct.setLatitudeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.distance = iprot.readDouble();
        struct.setDistanceIsSet(true);
      }
      if (incoming.get(6)) {
        struct.isRecommend = iprot.readBool();
        struct.setIsRecommendIsSet(true);
      }
      if (incoming.get(7)) {
        struct.productCategoryId = iprot.readI64();
        struct.setProductCategoryIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
    }
  }

}

