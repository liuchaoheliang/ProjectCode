/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 2.补全收货信息请求
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class AddDeliveryInfoVoReq implements org.apache.thrift.TBase<AddDeliveryInfoVoReq, AddDeliveryInfoVoReq._Fields>, java.io.Serializable, Cloneable, Comparable<AddDeliveryInfoVoReq> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AddDeliveryInfoVoReq");

  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField DELIVER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("deliverId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField RECV_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recvId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DELIVERY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryType", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AddDeliveryInfoVoReqStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AddDeliveryInfoVoReqTupleSchemeFactory());
  }

  /**
   * 订单号
   */
  public String orderId; // required
  /**
   * 提货信息编号
   */
  public String deliverId; // optional
  /**
   * 收货信息编号
   */
  public String recvId; // optional
  /**
   * 接收券和短信的手机号
   */
  public String phone; // optional
  /**
   * 预售商品自提网点|线下积分兑换网点
   */
  public String orgCode; // optional
  /**
   * 预售商品自提网点|线下积分兑换网点名称
   */
  public String orgName; // optional
  /**
   * 配送|自提方式
   */
  public String deliveryType; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 订单号
     */
    ORDER_ID((short)1, "orderId"),
    /**
     * 提货信息编号
     */
    DELIVER_ID((short)2, "deliverId"),
    /**
     * 收货信息编号
     */
    RECV_ID((short)3, "recvId"),
    /**
     * 接收券和短信的手机号
     */
    PHONE((short)4, "phone"),
    /**
     * 预售商品自提网点|线下积分兑换网点
     */
    ORG_CODE((short)5, "orgCode"),
    /**
     * 预售商品自提网点|线下积分兑换网点名称
     */
    ORG_NAME((short)6, "orgName"),
    /**
     * 配送|自提方式
     */
    DELIVERY_TYPE((short)7, "deliveryType");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_ID
          return ORDER_ID;
        case 2: // DELIVER_ID
          return DELIVER_ID;
        case 3: // RECV_ID
          return RECV_ID;
        case 4: // PHONE
          return PHONE;
        case 5: // ORG_CODE
          return ORG_CODE;
        case 6: // ORG_NAME
          return ORG_NAME;
        case 7: // DELIVERY_TYPE
          return DELIVERY_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.DELIVER_ID,_Fields.RECV_ID,_Fields.PHONE,_Fields.ORG_CODE,_Fields.ORG_NAME,_Fields.DELIVERY_TYPE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVER_ID, new org.apache.thrift.meta_data.FieldMetaData("deliverId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECV_ID, new org.apache.thrift.meta_data.FieldMetaData("recvId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("deliveryType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AddDeliveryInfoVoReq.class, metaDataMap);
  }

  public AddDeliveryInfoVoReq() {
  }

  public AddDeliveryInfoVoReq(
    String orderId)
  {
    this();
    this.orderId = orderId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AddDeliveryInfoVoReq(AddDeliveryInfoVoReq other) {
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    if (other.isSetDeliverId()) {
      this.deliverId = other.deliverId;
    }
    if (other.isSetRecvId()) {
      this.recvId = other.recvId;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetDeliveryType()) {
      this.deliveryType = other.deliveryType;
    }
  }

  public AddDeliveryInfoVoReq deepCopy() {
    return new AddDeliveryInfoVoReq(this);
  }

  @Override
  public void clear() {
    this.orderId = null;
    this.deliverId = null;
    this.recvId = null;
    this.phone = null;
    this.orgCode = null;
    this.orgName = null;
    this.deliveryType = null;
  }

  /**
   * 订单号
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 订单号
   */
  public AddDeliveryInfoVoReq setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 提货信息编号
   */
  public String getDeliverId() {
    return this.deliverId;
  }

  /**
   * 提货信息编号
   */
  public AddDeliveryInfoVoReq setDeliverId(String deliverId) {
    this.deliverId = deliverId;
    return this;
  }

  public void unsetDeliverId() {
    this.deliverId = null;
  }

  /** Returns true if field deliverId is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliverId() {
    return this.deliverId != null;
  }

  public void setDeliverIdIsSet(boolean value) {
    if (!value) {
      this.deliverId = null;
    }
  }

  /**
   * 收货信息编号
   */
  public String getRecvId() {
    return this.recvId;
  }

  /**
   * 收货信息编号
   */
  public AddDeliveryInfoVoReq setRecvId(String recvId) {
    this.recvId = recvId;
    return this;
  }

  public void unsetRecvId() {
    this.recvId = null;
  }

  /** Returns true if field recvId is set (has been assigned a value) and false otherwise */
  public boolean isSetRecvId() {
    return this.recvId != null;
  }

  public void setRecvIdIsSet(boolean value) {
    if (!value) {
      this.recvId = null;
    }
  }

  /**
   * 接收券和短信的手机号
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 接收券和短信的手机号
   */
  public AddDeliveryInfoVoReq setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 预售商品自提网点|线下积分兑换网点
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 预售商品自提网点|线下积分兑换网点
   */
  public AddDeliveryInfoVoReq setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 预售商品自提网点|线下积分兑换网点名称
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 预售商品自提网点|线下积分兑换网点名称
   */
  public AddDeliveryInfoVoReq setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 配送|自提方式
   */
  public String getDeliveryType() {
    return this.deliveryType;
  }

  /**
   * 配送|自提方式
   */
  public AddDeliveryInfoVoReq setDeliveryType(String deliveryType) {
    this.deliveryType = deliveryType;
    return this;
  }

  public void unsetDeliveryType() {
    this.deliveryType = null;
  }

  /** Returns true if field deliveryType is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryType() {
    return this.deliveryType != null;
  }

  public void setDeliveryTypeIsSet(boolean value) {
    if (!value) {
      this.deliveryType = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case DELIVER_ID:
      if (value == null) {
        unsetDeliverId();
      } else {
        setDeliverId((String)value);
      }
      break;

    case RECV_ID:
      if (value == null) {
        unsetRecvId();
      } else {
        setRecvId((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case DELIVERY_TYPE:
      if (value == null) {
        unsetDeliveryType();
      } else {
        setDeliveryType((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_ID:
      return getOrderId();

    case DELIVER_ID:
      return getDeliverId();

    case RECV_ID:
      return getRecvId();

    case PHONE:
      return getPhone();

    case ORG_CODE:
      return getOrgCode();

    case ORG_NAME:
      return getOrgName();

    case DELIVERY_TYPE:
      return getDeliveryType();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_ID:
      return isSetOrderId();
    case DELIVER_ID:
      return isSetDeliverId();
    case RECV_ID:
      return isSetRecvId();
    case PHONE:
      return isSetPhone();
    case ORG_CODE:
      return isSetOrgCode();
    case ORG_NAME:
      return isSetOrgName();
    case DELIVERY_TYPE:
      return isSetDeliveryType();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AddDeliveryInfoVoReq)
      return this.equals((AddDeliveryInfoVoReq)that);
    return false;
  }

  public boolean equals(AddDeliveryInfoVoReq that) {
    if (that == null)
      return false;

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_deliverId = true && this.isSetDeliverId();
    boolean that_present_deliverId = true && that.isSetDeliverId();
    if (this_present_deliverId || that_present_deliverId) {
      if (!(this_present_deliverId && that_present_deliverId))
        return false;
      if (!this.deliverId.equals(that.deliverId))
        return false;
    }

    boolean this_present_recvId = true && this.isSetRecvId();
    boolean that_present_recvId = true && that.isSetRecvId();
    if (this_present_recvId || that_present_recvId) {
      if (!(this_present_recvId && that_present_recvId))
        return false;
      if (!this.recvId.equals(that.recvId))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_deliveryType = true && this.isSetDeliveryType();
    boolean that_present_deliveryType = true && that.isSetDeliveryType();
    if (this_present_deliveryType || that_present_deliveryType) {
      if (!(this_present_deliveryType && that_present_deliveryType))
        return false;
      if (!this.deliveryType.equals(that.deliveryType))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_deliverId = true && (isSetDeliverId());
    list.add(present_deliverId);
    if (present_deliverId)
      list.add(deliverId);

    boolean present_recvId = true && (isSetRecvId());
    list.add(present_recvId);
    if (present_recvId)
      list.add(recvId);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_deliveryType = true && (isSetDeliveryType());
    list.add(present_deliveryType);
    if (present_deliveryType)
      list.add(deliveryType);

    return list.hashCode();
  }

  @Override
  public int compareTo(AddDeliveryInfoVoReq other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliverId()).compareTo(other.isSetDeliverId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliverId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliverId, other.deliverId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecvId()).compareTo(other.isSetRecvId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecvId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recvId, other.recvId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryType()).compareTo(other.isSetDeliveryType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryType, other.deliveryType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AddDeliveryInfoVoReq(");
    boolean first = true;

    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (isSetDeliverId()) {
      if (!first) sb.append(", ");
      sb.append("deliverId:");
      if (this.deliverId == null) {
        sb.append("null");
      } else {
        sb.append(this.deliverId);
      }
      first = false;
    }
    if (isSetRecvId()) {
      if (!first) sb.append(", ");
      sb.append("recvId:");
      if (this.recvId == null) {
        sb.append("null");
      } else {
        sb.append(this.recvId);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
    }
    if (isSetOrgName()) {
      if (!first) sb.append(", ");
      sb.append("orgName:");
      if (this.orgName == null) {
        sb.append("null");
      } else {
        sb.append(this.orgName);
      }
      first = false;
    }
    if (isSetDeliveryType()) {
      if (!first) sb.append(", ");
      sb.append("deliveryType:");
      if (this.deliveryType == null) {
        sb.append("null");
      } else {
        sb.append(this.deliveryType);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AddDeliveryInfoVoReqStandardSchemeFactory implements SchemeFactory {
    public AddDeliveryInfoVoReqStandardScheme getScheme() {
      return new AddDeliveryInfoVoReqStandardScheme();
    }
  }

  private static class AddDeliveryInfoVoReqStandardScheme extends StandardScheme<AddDeliveryInfoVoReq> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AddDeliveryInfoVoReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DELIVER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliverId = iprot.readString();
              struct.setDeliverIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // RECV_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recvId = iprot.readString();
              struct.setRecvIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DELIVERY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryType = iprot.readString();
              struct.setDeliveryTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AddDeliveryInfoVoReq struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      if (struct.deliverId != null) {
        if (struct.isSetDeliverId()) {
          oprot.writeFieldBegin(DELIVER_ID_FIELD_DESC);
          oprot.writeString(struct.deliverId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recvId != null) {
        if (struct.isSetRecvId()) {
          oprot.writeFieldBegin(RECV_ID_FIELD_DESC);
          oprot.writeString(struct.recvId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgCode != null) {
        if (struct.isSetOrgCode()) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgName != null) {
        if (struct.isSetOrgName()) {
          oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
          oprot.writeString(struct.orgName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.deliveryType != null) {
        if (struct.isSetDeliveryType()) {
          oprot.writeFieldBegin(DELIVERY_TYPE_FIELD_DESC);
          oprot.writeString(struct.deliveryType);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AddDeliveryInfoVoReqTupleSchemeFactory implements SchemeFactory {
    public AddDeliveryInfoVoReqTupleScheme getScheme() {
      return new AddDeliveryInfoVoReqTupleScheme();
    }
  }

  private static class AddDeliveryInfoVoReqTupleScheme extends TupleScheme<AddDeliveryInfoVoReq> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AddDeliveryInfoVoReq struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrderId()) {
        optionals.set(0);
      }
      if (struct.isSetDeliverId()) {
        optionals.set(1);
      }
      if (struct.isSetRecvId()) {
        optionals.set(2);
      }
      if (struct.isSetPhone()) {
        optionals.set(3);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(4);
      }
      if (struct.isSetOrgName()) {
        optionals.set(5);
      }
      if (struct.isSetDeliveryType()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetDeliverId()) {
        oprot.writeString(struct.deliverId);
      }
      if (struct.isSetRecvId()) {
        oprot.writeString(struct.recvId);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetDeliveryType()) {
        oprot.writeString(struct.deliveryType);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AddDeliveryInfoVoReq struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.deliverId = iprot.readString();
        struct.setDeliverIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.recvId = iprot.readString();
        struct.setRecvIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.deliveryType = iprot.readString();
        struct.setDeliveryTypeIsSet(true);
      }
    }
  }

}

