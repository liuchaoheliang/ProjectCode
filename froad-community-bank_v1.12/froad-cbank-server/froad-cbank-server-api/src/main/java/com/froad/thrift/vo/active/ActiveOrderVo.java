/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.active;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 营销活动订单
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ActiveOrderVo implements org.apache.thrift.TBase<ActiveOrderVo, ActiveOrderVo._Fields>, java.io.Serializable, Cloneable, Comparable<ActiveOrderVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ActiveOrderVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField ORDER_ORI_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("orderOriMoney", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField ORDER_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("orderMoney", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField ORDER_ORI_MODIFY_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("orderOriModifyMoney", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField ORDER_MODIFY_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("orderModifyMoney", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField PAY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("payTime", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField MEMBER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("memberCode", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField MEMBER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("memberName", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField DETAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("detail", org.apache.thrift.protocol.TType.STRING, (short)15);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ActiveOrderVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ActiveOrderVoTupleSchemeFactory());
  }

  /**
   * 主键 活动订单id - 记录在社区银行订单表中
   */
  public String id; // required
  /**
   * 客户端ID
   */
  public String clientId; // required
  /**
   * 创建时间
   */
  public long createTime; // required
  /**
   * 更新时间
   */
  public long updateTime; // required
  /**
   * Order ID
   */
  public String orderId; // required
  /**
   * 状态，是否有效 0-无效 1-有效
   */
  public boolean status; // required
  /**
   * 订单原始金额
   */
  public int orderOriMoney; // required
  /**
   * 订单成交金额
   */
  public int orderMoney; // required
  /**
   * 订单原始金额(有退款操作后更新)
   */
  public int orderOriModifyMoney; // required
  /**
   * 订单成交金额(有退款操作后更新)
   */
  public int orderModifyMoney; // required
  /**
   * 支付时间(支付成功后记录的时间)
   */
  public long payTime; // required
  /**
   * 用户id
   */
  public long memberCode; // required
  /**
   * 用户名称
   */
  public String memberName; // required
  /**
   * 用户电话号码
   */
  public String phone; // required
  /**
   * 交易明细-每种商品实际成交价格以及数量[{"product_id":"","money":"","vip_money":"","quantity":"","vip_quantity":""}]
   */
  public String detail; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键 活动订单id - 记录在社区银行订单表中
     */
    ID((short)1, "id"),
    /**
     * 客户端ID
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)3, "createTime"),
    /**
     * 更新时间
     */
    UPDATE_TIME((short)4, "updateTime"),
    /**
     * Order ID
     */
    ORDER_ID((short)5, "orderId"),
    /**
     * 状态，是否有效 0-无效 1-有效
     */
    STATUS((short)6, "status"),
    /**
     * 订单原始金额
     */
    ORDER_ORI_MONEY((short)7, "orderOriMoney"),
    /**
     * 订单成交金额
     */
    ORDER_MONEY((short)8, "orderMoney"),
    /**
     * 订单原始金额(有退款操作后更新)
     */
    ORDER_ORI_MODIFY_MONEY((short)9, "orderOriModifyMoney"),
    /**
     * 订单成交金额(有退款操作后更新)
     */
    ORDER_MODIFY_MONEY((short)10, "orderModifyMoney"),
    /**
     * 支付时间(支付成功后记录的时间)
     */
    PAY_TIME((short)11, "payTime"),
    /**
     * 用户id
     */
    MEMBER_CODE((short)12, "memberCode"),
    /**
     * 用户名称
     */
    MEMBER_NAME((short)13, "memberName"),
    /**
     * 用户电话号码
     */
    PHONE((short)14, "phone"),
    /**
     * 交易明细-每种商品实际成交价格以及数量[{"product_id":"","money":"","vip_money":"","quantity":"","vip_quantity":""}]
     */
    DETAIL((short)15, "detail");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // CREATE_TIME
          return CREATE_TIME;
        case 4: // UPDATE_TIME
          return UPDATE_TIME;
        case 5: // ORDER_ID
          return ORDER_ID;
        case 6: // STATUS
          return STATUS;
        case 7: // ORDER_ORI_MONEY
          return ORDER_ORI_MONEY;
        case 8: // ORDER_MONEY
          return ORDER_MONEY;
        case 9: // ORDER_ORI_MODIFY_MONEY
          return ORDER_ORI_MODIFY_MONEY;
        case 10: // ORDER_MODIFY_MONEY
          return ORDER_MODIFY_MONEY;
        case 11: // PAY_TIME
          return PAY_TIME;
        case 12: // MEMBER_CODE
          return MEMBER_CODE;
        case 13: // MEMBER_NAME
          return MEMBER_NAME;
        case 14: // PHONE
          return PHONE;
        case 15: // DETAIL
          return DETAIL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIME_ISSET_ID = 0;
  private static final int __UPDATETIME_ISSET_ID = 1;
  private static final int __STATUS_ISSET_ID = 2;
  private static final int __ORDERORIMONEY_ISSET_ID = 3;
  private static final int __ORDERMONEY_ISSET_ID = 4;
  private static final int __ORDERORIMODIFYMONEY_ISSET_ID = 5;
  private static final int __ORDERMODIFYMONEY_ISSET_ID = 6;
  private static final int __PAYTIME_ISSET_ID = 7;
  private static final int __MEMBERCODE_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ORDER_ORI_MONEY, new org.apache.thrift.meta_data.FieldMetaData("orderOriMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORDER_MONEY, new org.apache.thrift.meta_data.FieldMetaData("orderMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORDER_ORI_MODIFY_MONEY, new org.apache.thrift.meta_data.FieldMetaData("orderOriModifyMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORDER_MODIFY_MONEY, new org.apache.thrift.meta_data.FieldMetaData("orderModifyMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAY_TIME, new org.apache.thrift.meta_data.FieldMetaData("payTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MEMBER_CODE, new org.apache.thrift.meta_data.FieldMetaData("memberCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MEMBER_NAME, new org.apache.thrift.meta_data.FieldMetaData("memberName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DETAIL, new org.apache.thrift.meta_data.FieldMetaData("detail", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ActiveOrderVo.class, metaDataMap);
  }

  public ActiveOrderVo() {
  }

  public ActiveOrderVo(
    String id,
    String clientId,
    long createTime,
    long updateTime,
    String orderId,
    boolean status,
    int orderOriMoney,
    int orderMoney,
    int orderOriModifyMoney,
    int orderModifyMoney,
    long payTime,
    long memberCode,
    String memberName,
    String phone,
    String detail)
  {
    this();
    this.id = id;
    this.clientId = clientId;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    this.orderId = orderId;
    this.status = status;
    setStatusIsSet(true);
    this.orderOriMoney = orderOriMoney;
    setOrderOriMoneyIsSet(true);
    this.orderMoney = orderMoney;
    setOrderMoneyIsSet(true);
    this.orderOriModifyMoney = orderOriModifyMoney;
    setOrderOriModifyMoneyIsSet(true);
    this.orderModifyMoney = orderModifyMoney;
    setOrderModifyMoneyIsSet(true);
    this.payTime = payTime;
    setPayTimeIsSet(true);
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    this.memberName = memberName;
    this.phone = phone;
    this.detail = detail;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ActiveOrderVo(ActiveOrderVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    this.createTime = other.createTime;
    this.updateTime = other.updateTime;
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    this.status = other.status;
    this.orderOriMoney = other.orderOriMoney;
    this.orderMoney = other.orderMoney;
    this.orderOriModifyMoney = other.orderOriModifyMoney;
    this.orderModifyMoney = other.orderModifyMoney;
    this.payTime = other.payTime;
    this.memberCode = other.memberCode;
    if (other.isSetMemberName()) {
      this.memberName = other.memberName;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetDetail()) {
      this.detail = other.detail;
    }
  }

  public ActiveOrderVo deepCopy() {
    return new ActiveOrderVo(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.clientId = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setUpdateTimeIsSet(false);
    this.updateTime = 0;
    this.orderId = null;
    setStatusIsSet(false);
    this.status = false;
    setOrderOriMoneyIsSet(false);
    this.orderOriMoney = 0;
    setOrderMoneyIsSet(false);
    this.orderMoney = 0;
    setOrderOriModifyMoneyIsSet(false);
    this.orderOriModifyMoney = 0;
    setOrderModifyMoneyIsSet(false);
    this.orderModifyMoney = 0;
    setPayTimeIsSet(false);
    this.payTime = 0;
    setMemberCodeIsSet(false);
    this.memberCode = 0;
    this.memberName = null;
    this.phone = null;
    this.detail = null;
  }

  /**
   * 主键 活动订单id - 记录在社区银行订单表中
   */
  public String getId() {
    return this.id;
  }

  /**
   * 主键 活动订单id - 记录在社区银行订单表中
   */
  public ActiveOrderVo setId(String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public ActiveOrderVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public ActiveOrderVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 更新时间
   */
  public long getUpdateTime() {
    return this.updateTime;
  }

  /**
   * 更新时间
   */
  public ActiveOrderVo setUpdateTime(long updateTime) {
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    return this;
  }

  public void unsetUpdateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UPDATETIME_ISSET_ID);
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __UPDATETIME_ISSET_ID);
  }

  public void setUpdateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UPDATETIME_ISSET_ID, value);
  }

  /**
   * Order ID
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * Order ID
   */
  public ActiveOrderVo setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 状态，是否有效 0-无效 1-有效
   */
  public boolean isStatus() {
    return this.status;
  }

  /**
   * 状态，是否有效 0-无效 1-有效
   */
  public ActiveOrderVo setStatus(boolean status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  /**
   * 订单原始金额
   */
  public int getOrderOriMoney() {
    return this.orderOriMoney;
  }

  /**
   * 订单原始金额
   */
  public ActiveOrderVo setOrderOriMoney(int orderOriMoney) {
    this.orderOriMoney = orderOriMoney;
    setOrderOriMoneyIsSet(true);
    return this;
  }

  public void unsetOrderOriMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERORIMONEY_ISSET_ID);
  }

  /** Returns true if field orderOriMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderOriMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERORIMONEY_ISSET_ID);
  }

  public void setOrderOriMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERORIMONEY_ISSET_ID, value);
  }

  /**
   * 订单成交金额
   */
  public int getOrderMoney() {
    return this.orderMoney;
  }

  /**
   * 订单成交金额
   */
  public ActiveOrderVo setOrderMoney(int orderMoney) {
    this.orderMoney = orderMoney;
    setOrderMoneyIsSet(true);
    return this;
  }

  public void unsetOrderMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERMONEY_ISSET_ID);
  }

  /** Returns true if field orderMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERMONEY_ISSET_ID);
  }

  public void setOrderMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERMONEY_ISSET_ID, value);
  }

  /**
   * 订单原始金额(有退款操作后更新)
   */
  public int getOrderOriModifyMoney() {
    return this.orderOriModifyMoney;
  }

  /**
   * 订单原始金额(有退款操作后更新)
   */
  public ActiveOrderVo setOrderOriModifyMoney(int orderOriModifyMoney) {
    this.orderOriModifyMoney = orderOriModifyMoney;
    setOrderOriModifyMoneyIsSet(true);
    return this;
  }

  public void unsetOrderOriModifyMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERORIMODIFYMONEY_ISSET_ID);
  }

  /** Returns true if field orderOriModifyMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderOriModifyMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERORIMODIFYMONEY_ISSET_ID);
  }

  public void setOrderOriModifyMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERORIMODIFYMONEY_ISSET_ID, value);
  }

  /**
   * 订单成交金额(有退款操作后更新)
   */
  public int getOrderModifyMoney() {
    return this.orderModifyMoney;
  }

  /**
   * 订单成交金额(有退款操作后更新)
   */
  public ActiveOrderVo setOrderModifyMoney(int orderModifyMoney) {
    this.orderModifyMoney = orderModifyMoney;
    setOrderModifyMoneyIsSet(true);
    return this;
  }

  public void unsetOrderModifyMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERMODIFYMONEY_ISSET_ID);
  }

  /** Returns true if field orderModifyMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderModifyMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERMODIFYMONEY_ISSET_ID);
  }

  public void setOrderModifyMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERMODIFYMONEY_ISSET_ID, value);
  }

  /**
   * 支付时间(支付成功后记录的时间)
   */
  public long getPayTime() {
    return this.payTime;
  }

  /**
   * 支付时间(支付成功后记录的时间)
   */
  public ActiveOrderVo setPayTime(long payTime) {
    this.payTime = payTime;
    setPayTimeIsSet(true);
    return this;
  }

  public void unsetPayTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYTIME_ISSET_ID);
  }

  /** Returns true if field payTime is set (has been assigned a value) and false otherwise */
  public boolean isSetPayTime() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYTIME_ISSET_ID);
  }

  public void setPayTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYTIME_ISSET_ID, value);
  }

  /**
   * 用户id
   */
  public long getMemberCode() {
    return this.memberCode;
  }

  /**
   * 用户id
   */
  public ActiveOrderVo setMemberCode(long memberCode) {
    this.memberCode = memberCode;
    setMemberCodeIsSet(true);
    return this;
  }

  public void unsetMemberCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  /** Returns true if field memberCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberCode() {
    return EncodingUtils.testBit(__isset_bitfield, __MEMBERCODE_ISSET_ID);
  }

  public void setMemberCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEMBERCODE_ISSET_ID, value);
  }

  /**
   * 用户名称
   */
  public String getMemberName() {
    return this.memberName;
  }

  /**
   * 用户名称
   */
  public ActiveOrderVo setMemberName(String memberName) {
    this.memberName = memberName;
    return this;
  }

  public void unsetMemberName() {
    this.memberName = null;
  }

  /** Returns true if field memberName is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberName() {
    return this.memberName != null;
  }

  public void setMemberNameIsSet(boolean value) {
    if (!value) {
      this.memberName = null;
    }
  }

  /**
   * 用户电话号码
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 用户电话号码
   */
  public ActiveOrderVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 交易明细-每种商品实际成交价格以及数量[{"product_id":"","money":"","vip_money":"","quantity":"","vip_quantity":""}]
   */
  public String getDetail() {
    return this.detail;
  }

  /**
   * 交易明细-每种商品实际成交价格以及数量[{"product_id":"","money":"","vip_money":"","quantity":"","vip_quantity":""}]
   */
  public ActiveOrderVo setDetail(String detail) {
    this.detail = detail;
    return this;
  }

  public void unsetDetail() {
    this.detail = null;
  }

  /** Returns true if field detail is set (has been assigned a value) and false otherwise */
  public boolean isSetDetail() {
    return this.detail != null;
  }

  public void setDetailIsSet(boolean value) {
    if (!value) {
      this.detail = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((String)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((Long)value);
      }
      break;

    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Boolean)value);
      }
      break;

    case ORDER_ORI_MONEY:
      if (value == null) {
        unsetOrderOriMoney();
      } else {
        setOrderOriMoney((Integer)value);
      }
      break;

    case ORDER_MONEY:
      if (value == null) {
        unsetOrderMoney();
      } else {
        setOrderMoney((Integer)value);
      }
      break;

    case ORDER_ORI_MODIFY_MONEY:
      if (value == null) {
        unsetOrderOriModifyMoney();
      } else {
        setOrderOriModifyMoney((Integer)value);
      }
      break;

    case ORDER_MODIFY_MONEY:
      if (value == null) {
        unsetOrderModifyMoney();
      } else {
        setOrderModifyMoney((Integer)value);
      }
      break;

    case PAY_TIME:
      if (value == null) {
        unsetPayTime();
      } else {
        setPayTime((Long)value);
      }
      break;

    case MEMBER_CODE:
      if (value == null) {
        unsetMemberCode();
      } else {
        setMemberCode((Long)value);
      }
      break;

    case MEMBER_NAME:
      if (value == null) {
        unsetMemberName();
      } else {
        setMemberName((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case DETAIL:
      if (value == null) {
        unsetDetail();
      } else {
        setDetail((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case CLIENT_ID:
      return getClientId();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case UPDATE_TIME:
      return Long.valueOf(getUpdateTime());

    case ORDER_ID:
      return getOrderId();

    case STATUS:
      return Boolean.valueOf(isStatus());

    case ORDER_ORI_MONEY:
      return Integer.valueOf(getOrderOriMoney());

    case ORDER_MONEY:
      return Integer.valueOf(getOrderMoney());

    case ORDER_ORI_MODIFY_MONEY:
      return Integer.valueOf(getOrderOriModifyMoney());

    case ORDER_MODIFY_MONEY:
      return Integer.valueOf(getOrderModifyMoney());

    case PAY_TIME:
      return Long.valueOf(getPayTime());

    case MEMBER_CODE:
      return Long.valueOf(getMemberCode());

    case MEMBER_NAME:
      return getMemberName();

    case PHONE:
      return getPhone();

    case DETAIL:
      return getDetail();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CLIENT_ID:
      return isSetClientId();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case ORDER_ID:
      return isSetOrderId();
    case STATUS:
      return isSetStatus();
    case ORDER_ORI_MONEY:
      return isSetOrderOriMoney();
    case ORDER_MONEY:
      return isSetOrderMoney();
    case ORDER_ORI_MODIFY_MONEY:
      return isSetOrderOriModifyMoney();
    case ORDER_MODIFY_MONEY:
      return isSetOrderModifyMoney();
    case PAY_TIME:
      return isSetPayTime();
    case MEMBER_CODE:
      return isSetMemberCode();
    case MEMBER_NAME:
      return isSetMemberName();
    case PHONE:
      return isSetPhone();
    case DETAIL:
      return isSetDetail();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ActiveOrderVo)
      return this.equals((ActiveOrderVo)that);
    return false;
  }

  public boolean equals(ActiveOrderVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_updateTime = true;
    boolean that_present_updateTime = true;
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (this.updateTime != that.updateTime)
        return false;
    }

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_orderOriMoney = true;
    boolean that_present_orderOriMoney = true;
    if (this_present_orderOriMoney || that_present_orderOriMoney) {
      if (!(this_present_orderOriMoney && that_present_orderOriMoney))
        return false;
      if (this.orderOriMoney != that.orderOriMoney)
        return false;
    }

    boolean this_present_orderMoney = true;
    boolean that_present_orderMoney = true;
    if (this_present_orderMoney || that_present_orderMoney) {
      if (!(this_present_orderMoney && that_present_orderMoney))
        return false;
      if (this.orderMoney != that.orderMoney)
        return false;
    }

    boolean this_present_orderOriModifyMoney = true;
    boolean that_present_orderOriModifyMoney = true;
    if (this_present_orderOriModifyMoney || that_present_orderOriModifyMoney) {
      if (!(this_present_orderOriModifyMoney && that_present_orderOriModifyMoney))
        return false;
      if (this.orderOriModifyMoney != that.orderOriModifyMoney)
        return false;
    }

    boolean this_present_orderModifyMoney = true;
    boolean that_present_orderModifyMoney = true;
    if (this_present_orderModifyMoney || that_present_orderModifyMoney) {
      if (!(this_present_orderModifyMoney && that_present_orderModifyMoney))
        return false;
      if (this.orderModifyMoney != that.orderModifyMoney)
        return false;
    }

    boolean this_present_payTime = true;
    boolean that_present_payTime = true;
    if (this_present_payTime || that_present_payTime) {
      if (!(this_present_payTime && that_present_payTime))
        return false;
      if (this.payTime != that.payTime)
        return false;
    }

    boolean this_present_memberCode = true;
    boolean that_present_memberCode = true;
    if (this_present_memberCode || that_present_memberCode) {
      if (!(this_present_memberCode && that_present_memberCode))
        return false;
      if (this.memberCode != that.memberCode)
        return false;
    }

    boolean this_present_memberName = true && this.isSetMemberName();
    boolean that_present_memberName = true && that.isSetMemberName();
    if (this_present_memberName || that_present_memberName) {
      if (!(this_present_memberName && that_present_memberName))
        return false;
      if (!this.memberName.equals(that.memberName))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_detail = true && this.isSetDetail();
    boolean that_present_detail = true && that.isSetDetail();
    if (this_present_detail || that_present_detail) {
      if (!(this_present_detail && that_present_detail))
        return false;
      if (!this.detail.equals(that.detail))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_updateTime = true;
    list.add(present_updateTime);
    if (present_updateTime)
      list.add(updateTime);

    boolean present_orderId = true && (isSetOrderId());
    list.add(present_orderId);
    if (present_orderId)
      list.add(orderId);

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_orderOriMoney = true;
    list.add(present_orderOriMoney);
    if (present_orderOriMoney)
      list.add(orderOriMoney);

    boolean present_orderMoney = true;
    list.add(present_orderMoney);
    if (present_orderMoney)
      list.add(orderMoney);

    boolean present_orderOriModifyMoney = true;
    list.add(present_orderOriModifyMoney);
    if (present_orderOriModifyMoney)
      list.add(orderOriModifyMoney);

    boolean present_orderModifyMoney = true;
    list.add(present_orderModifyMoney);
    if (present_orderModifyMoney)
      list.add(orderModifyMoney);

    boolean present_payTime = true;
    list.add(present_payTime);
    if (present_payTime)
      list.add(payTime);

    boolean present_memberCode = true;
    list.add(present_memberCode);
    if (present_memberCode)
      list.add(memberCode);

    boolean present_memberName = true && (isSetMemberName());
    list.add(present_memberName);
    if (present_memberName)
      list.add(memberName);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_detail = true && (isSetDetail());
    list.add(present_detail);
    if (present_detail)
      list.add(detail);

    return list.hashCode();
  }

  @Override
  public int compareTo(ActiveOrderVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderOriMoney()).compareTo(other.isSetOrderOriMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderOriMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderOriMoney, other.orderOriMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderMoney()).compareTo(other.isSetOrderMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderMoney, other.orderMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderOriModifyMoney()).compareTo(other.isSetOrderOriModifyMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderOriModifyMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderOriModifyMoney, other.orderOriModifyMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderModifyMoney()).compareTo(other.isSetOrderModifyMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderModifyMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderModifyMoney, other.orderModifyMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayTime()).compareTo(other.isSetPayTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payTime, other.payTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberCode()).compareTo(other.isSetMemberCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberCode, other.memberCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemberName()).compareTo(other.isSetMemberName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberName, other.memberName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDetail()).compareTo(other.isSetDetail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDetail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.detail, other.detail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ActiveOrderVo(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateTime:");
    sb.append(this.updateTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderOriMoney:");
    sb.append(this.orderOriMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderMoney:");
    sb.append(this.orderMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderOriModifyMoney:");
    sb.append(this.orderOriModifyMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderModifyMoney:");
    sb.append(this.orderModifyMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("payTime:");
    sb.append(this.payTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberCode:");
    sb.append(this.memberCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberName:");
    if (this.memberName == null) {
      sb.append("null");
    } else {
      sb.append(this.memberName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("detail:");
    if (this.detail == null) {
      sb.append("null");
    } else {
      sb.append(this.detail);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ActiveOrderVoStandardSchemeFactory implements SchemeFactory {
    public ActiveOrderVoStandardScheme getScheme() {
      return new ActiveOrderVoStandardScheme();
    }
  }

  private static class ActiveOrderVoStandardScheme extends StandardScheme<ActiveOrderVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ActiveOrderVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.updateTime = iprot.readI64();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.status = iprot.readBool();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORDER_ORI_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderOriMoney = iprot.readI32();
              struct.setOrderOriMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORDER_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderMoney = iprot.readI32();
              struct.setOrderMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ORDER_ORI_MODIFY_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderOriModifyMoney = iprot.readI32();
              struct.setOrderOriModifyMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ORDER_MODIFY_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderModifyMoney = iprot.readI32();
              struct.setOrderModifyMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PAY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.payTime = iprot.readI64();
              struct.setPayTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // MEMBER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.memberCode = iprot.readI64();
              struct.setMemberCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // MEMBER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memberName = iprot.readString();
              struct.setMemberNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DETAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.detail = iprot.readString();
              struct.setDetailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ActiveOrderVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.updateTime);
      oprot.writeFieldEnd();
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeBool(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORDER_ORI_MONEY_FIELD_DESC);
      oprot.writeI32(struct.orderOriMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORDER_MONEY_FIELD_DESC);
      oprot.writeI32(struct.orderMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORDER_ORI_MODIFY_MONEY_FIELD_DESC);
      oprot.writeI32(struct.orderOriModifyMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORDER_MODIFY_MONEY_FIELD_DESC);
      oprot.writeI32(struct.orderModifyMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAY_TIME_FIELD_DESC);
      oprot.writeI64(struct.payTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MEMBER_CODE_FIELD_DESC);
      oprot.writeI64(struct.memberCode);
      oprot.writeFieldEnd();
      if (struct.memberName != null) {
        oprot.writeFieldBegin(MEMBER_NAME_FIELD_DESC);
        oprot.writeString(struct.memberName);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.detail != null) {
        oprot.writeFieldBegin(DETAIL_FIELD_DESC);
        oprot.writeString(struct.detail);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ActiveOrderVoTupleSchemeFactory implements SchemeFactory {
    public ActiveOrderVoTupleScheme getScheme() {
      return new ActiveOrderVoTupleScheme();
    }
  }

  private static class ActiveOrderVoTupleScheme extends TupleScheme<ActiveOrderVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ActiveOrderVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(2);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(3);
      }
      if (struct.isSetOrderId()) {
        optionals.set(4);
      }
      if (struct.isSetStatus()) {
        optionals.set(5);
      }
      if (struct.isSetOrderOriMoney()) {
        optionals.set(6);
      }
      if (struct.isSetOrderMoney()) {
        optionals.set(7);
      }
      if (struct.isSetOrderOriModifyMoney()) {
        optionals.set(8);
      }
      if (struct.isSetOrderModifyMoney()) {
        optionals.set(9);
      }
      if (struct.isSetPayTime()) {
        optionals.set(10);
      }
      if (struct.isSetMemberCode()) {
        optionals.set(11);
      }
      if (struct.isSetMemberName()) {
        optionals.set(12);
      }
      if (struct.isSetPhone()) {
        optionals.set(13);
      }
      if (struct.isSetDetail()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeI64(struct.updateTime);
      }
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetStatus()) {
        oprot.writeBool(struct.status);
      }
      if (struct.isSetOrderOriMoney()) {
        oprot.writeI32(struct.orderOriMoney);
      }
      if (struct.isSetOrderMoney()) {
        oprot.writeI32(struct.orderMoney);
      }
      if (struct.isSetOrderOriModifyMoney()) {
        oprot.writeI32(struct.orderOriModifyMoney);
      }
      if (struct.isSetOrderModifyMoney()) {
        oprot.writeI32(struct.orderModifyMoney);
      }
      if (struct.isSetPayTime()) {
        oprot.writeI64(struct.payTime);
      }
      if (struct.isSetMemberCode()) {
        oprot.writeI64(struct.memberCode);
      }
      if (struct.isSetMemberName()) {
        oprot.writeString(struct.memberName);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetDetail()) {
        oprot.writeString(struct.detail);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ActiveOrderVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.updateTime = iprot.readI64();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.status = iprot.readBool();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(6)) {
        struct.orderOriMoney = iprot.readI32();
        struct.setOrderOriMoneyIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orderMoney = iprot.readI32();
        struct.setOrderMoneyIsSet(true);
      }
      if (incoming.get(8)) {
        struct.orderOriModifyMoney = iprot.readI32();
        struct.setOrderOriModifyMoneyIsSet(true);
      }
      if (incoming.get(9)) {
        struct.orderModifyMoney = iprot.readI32();
        struct.setOrderModifyMoneyIsSet(true);
      }
      if (incoming.get(10)) {
        struct.payTime = iprot.readI64();
        struct.setPayTimeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.memberCode = iprot.readI64();
        struct.setMemberCodeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.memberName = iprot.readString();
        struct.setMemberNameIsSet(true);
      }
      if (incoming.get(13)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(14)) {
        struct.detail = iprot.readString();
        struct.setDetailIsSet(true);
      }
    }
  }

}

