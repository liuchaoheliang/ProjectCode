/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商品秒杀配置信息分类
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ProductSeckillVo implements org.apache.thrift.TBase<ProductSeckillVo, ProductSeckillVo._Fields>, java.io.Serializable, Cloneable, Comparable<ProductSeckillVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProductSeckillVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SEC_STORE_FIELD_DESC = new org.apache.thrift.protocol.TField("secStore", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField SEC_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("secPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField VIP_SEC_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("vipSecPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField TRUE_BUYER_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("trueBuyerNumber", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField BUY_LIMIT_FIELD_DESC = new org.apache.thrift.protocol.TField("buyLimit", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField IS_MARKETABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isMarketable", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField AUDIT_START_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStartOrgCode", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField AUDIT_END_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditEndOrgCode", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField AUDIT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditState", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField AUDIT_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditOrgCode", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField AUDIT_STAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStage", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField REVIEW_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewStaff", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField AUDIT_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStaff", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("auditTime", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField AUDIT_COMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("auditComment", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.DOUBLE, (short)24);
  private static final org.apache.thrift.protocol.TField MARKET_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("marketPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)25);
  private static final org.apache.thrift.protocol.TField DELIVERY_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryStartTime", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField DELIVERY_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryEndTime", org.apache.thrift.protocol.TType.I64, (short)27);
  private static final org.apache.thrift.protocol.TField BRIEF_INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("briefIntroduction", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField DELIVERY_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryOption", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField BUY_KNOW_FIELD_DESC = new org.apache.thrift.protocol.TField("buyKnow", org.apache.thrift.protocol.TType.STRING, (short)31);
  private static final org.apache.thrift.protocol.TField INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("introduction", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)34);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.STRING, (short)36);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)37);
  private static final org.apache.thrift.protocol.TField FULL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("fullName", org.apache.thrift.protocol.TType.STRING, (short)38);
  private static final org.apache.thrift.protocol.TField DELIVERY_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)39);
  private static final org.apache.thrift.protocol.TField STORE_FIELD_DESC = new org.apache.thrift.protocol.TField("store", org.apache.thrift.protocol.TType.I32, (short)40);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProductSeckillVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProductSeckillVoTupleSchemeFactory());
  }

  /**
   * id
   */
  public long id; // required
  /**
   * 客户端id
   */
  public String clientId; // required
  /**
   * 创建时间(秒杀创建时间)
   */
  public long createTime; // required
  /**
   * 商品id
   */
  public String productId; // required
  /**
   * 秒杀库存数量
   */
  public int secStore; // required
  /**
   * 秒杀价
   */
  public double secPrice; // required
  /**
   * VIP秒杀价
   */
  public double vipSecPrice; // required
  /**
   * 秒杀开始时间
   */
  public long startTime; // required
  /**
   * 秒杀结束时间
   */
  public long endTime; // required
  /**
   * 真实秒杀数量
   */
  public int trueBuyerNumber; // required
  /**
   * 秒杀单用户限购
   */
  public int buyLimit; // required
  /**
   * 是否上架 0未上架,1已上架,2已下架,3已删除
   */
  public String isMarketable; // required
  /**
   * 起始审核机构
   */
  public String auditStartOrgCode; // required
  /**
   * 最终审核机构
   */
  public String auditEndOrgCode; // required
  /**
   * 商品审核状态("0待审核",1审核通过,2审核不通过,3未提交)
   */
  public String auditState; // required
  /**
   * 待审核机构编号(完成置0)
   */
  public String auditOrgCode; // required
  /**
   * 审核步骤(0-初审/1-复审)
   */
  public String auditStage; // required
  /**
   * 复核人
   */
  public String reviewStaff; // required
  /**
   * 审核人
   */
  public String auditStaff; // required
  /**
   * 审核时间
   */
  public long auditTime; // required
  /**
   * 审核批注
   */
  public String auditComment; // required
  /**
   * 商品名称类型
   */
  public String type; // required
  /**
   * 商品名称
   */
  public String name; // required
  /**
   * 优惠价格
   */
  public double price; // required
  /**
   * 市场价格
   */
  public double marketPrice; // required
  /**
   * 提货开始时间
   */
  public long deliveryStartTime; // required
  /**
   * 提货结束时间
   */
  public long deliveryEndTime; // required
  /**
   * 商品简介
   */
  public String briefIntroduction; // required
  /**
   * 投诉电话
   */
  public String phone; // required
  /**
   * 配送方式
   */
  public String deliveryOption; // required
  /**
   * 购买须知
   */
  public String buyKnow; // required
  /**
   * 商品详情
   */
  public String introduction; // required
  /**
   * 商户ID
   */
  public String merchantId; // required
  /**
   * 网点机构号
   */
  public String orgCode; // required
  /**
   * 所属机构
   */
  public String orgName; // required
  /**
   * 秒杀商品状态
   */
  public String status; // required
  /**
   * 商户名称
   */
  public String merchantName; // required
  /**
   * 商品全名
   */
  public String fullName; // required
  /**
   * 运费
   */
  public double deliveryMoney; // required
  /**
   * 商品库存数量
   */
  public int store; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * id
     */
    ID((short)1, "id"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 创建时间(秒杀创建时间)
     */
    CREATE_TIME((short)3, "createTime"),
    /**
     * 商品id
     */
    PRODUCT_ID((short)4, "productId"),
    /**
     * 秒杀库存数量
     */
    SEC_STORE((short)5, "secStore"),
    /**
     * 秒杀价
     */
    SEC_PRICE((short)6, "secPrice"),
    /**
     * VIP秒杀价
     */
    VIP_SEC_PRICE((short)7, "vipSecPrice"),
    /**
     * 秒杀开始时间
     */
    START_TIME((short)8, "startTime"),
    /**
     * 秒杀结束时间
     */
    END_TIME((short)9, "endTime"),
    /**
     * 真实秒杀数量
     */
    TRUE_BUYER_NUMBER((short)10, "trueBuyerNumber"),
    /**
     * 秒杀单用户限购
     */
    BUY_LIMIT((short)11, "buyLimit"),
    /**
     * 是否上架 0未上架,1已上架,2已下架,3已删除
     */
    IS_MARKETABLE((short)12, "isMarketable"),
    /**
     * 起始审核机构
     */
    AUDIT_START_ORG_CODE((short)13, "auditStartOrgCode"),
    /**
     * 最终审核机构
     */
    AUDIT_END_ORG_CODE((short)14, "auditEndOrgCode"),
    /**
     * 商品审核状态("0待审核",1审核通过,2审核不通过,3未提交)
     */
    AUDIT_STATE((short)15, "auditState"),
    /**
     * 待审核机构编号(完成置0)
     */
    AUDIT_ORG_CODE((short)16, "auditOrgCode"),
    /**
     * 审核步骤(0-初审/1-复审)
     */
    AUDIT_STAGE((short)17, "auditStage"),
    /**
     * 复核人
     */
    REVIEW_STAFF((short)18, "reviewStaff"),
    /**
     * 审核人
     */
    AUDIT_STAFF((short)19, "auditStaff"),
    /**
     * 审核时间
     */
    AUDIT_TIME((short)20, "auditTime"),
    /**
     * 审核批注
     */
    AUDIT_COMMENT((short)21, "auditComment"),
    /**
     * 商品名称类型
     */
    TYPE((short)22, "type"),
    /**
     * 商品名称
     */
    NAME((short)23, "name"),
    /**
     * 优惠价格
     */
    PRICE((short)24, "price"),
    /**
     * 市场价格
     */
    MARKET_PRICE((short)25, "marketPrice"),
    /**
     * 提货开始时间
     */
    DELIVERY_START_TIME((short)26, "deliveryStartTime"),
    /**
     * 提货结束时间
     */
    DELIVERY_END_TIME((short)27, "deliveryEndTime"),
    /**
     * 商品简介
     */
    BRIEF_INTRODUCTION((short)28, "briefIntroduction"),
    /**
     * 投诉电话
     */
    PHONE((short)29, "phone"),
    /**
     * 配送方式
     */
    DELIVERY_OPTION((short)30, "deliveryOption"),
    /**
     * 购买须知
     */
    BUY_KNOW((short)31, "buyKnow"),
    /**
     * 商品详情
     */
    INTRODUCTION((short)32, "introduction"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)33, "merchantId"),
    /**
     * 网点机构号
     */
    ORG_CODE((short)34, "orgCode"),
    /**
     * 所属机构
     */
    ORG_NAME((short)35, "orgName"),
    /**
     * 秒杀商品状态
     */
    STATUS((short)36, "status"),
    /**
     * 商户名称
     */
    MERCHANT_NAME((short)37, "merchantName"),
    /**
     * 商品全名
     */
    FULL_NAME((short)38, "fullName"),
    /**
     * 运费
     */
    DELIVERY_MONEY((short)39, "deliveryMoney"),
    /**
     * 商品库存数量
     */
    STORE((short)40, "store");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // CREATE_TIME
          return CREATE_TIME;
        case 4: // PRODUCT_ID
          return PRODUCT_ID;
        case 5: // SEC_STORE
          return SEC_STORE;
        case 6: // SEC_PRICE
          return SEC_PRICE;
        case 7: // VIP_SEC_PRICE
          return VIP_SEC_PRICE;
        case 8: // START_TIME
          return START_TIME;
        case 9: // END_TIME
          return END_TIME;
        case 10: // TRUE_BUYER_NUMBER
          return TRUE_BUYER_NUMBER;
        case 11: // BUY_LIMIT
          return BUY_LIMIT;
        case 12: // IS_MARKETABLE
          return IS_MARKETABLE;
        case 13: // AUDIT_START_ORG_CODE
          return AUDIT_START_ORG_CODE;
        case 14: // AUDIT_END_ORG_CODE
          return AUDIT_END_ORG_CODE;
        case 15: // AUDIT_STATE
          return AUDIT_STATE;
        case 16: // AUDIT_ORG_CODE
          return AUDIT_ORG_CODE;
        case 17: // AUDIT_STAGE
          return AUDIT_STAGE;
        case 18: // REVIEW_STAFF
          return REVIEW_STAFF;
        case 19: // AUDIT_STAFF
          return AUDIT_STAFF;
        case 20: // AUDIT_TIME
          return AUDIT_TIME;
        case 21: // AUDIT_COMMENT
          return AUDIT_COMMENT;
        case 22: // TYPE
          return TYPE;
        case 23: // NAME
          return NAME;
        case 24: // PRICE
          return PRICE;
        case 25: // MARKET_PRICE
          return MARKET_PRICE;
        case 26: // DELIVERY_START_TIME
          return DELIVERY_START_TIME;
        case 27: // DELIVERY_END_TIME
          return DELIVERY_END_TIME;
        case 28: // BRIEF_INTRODUCTION
          return BRIEF_INTRODUCTION;
        case 29: // PHONE
          return PHONE;
        case 30: // DELIVERY_OPTION
          return DELIVERY_OPTION;
        case 31: // BUY_KNOW
          return BUY_KNOW;
        case 32: // INTRODUCTION
          return INTRODUCTION;
        case 33: // MERCHANT_ID
          return MERCHANT_ID;
        case 34: // ORG_CODE
          return ORG_CODE;
        case 35: // ORG_NAME
          return ORG_NAME;
        case 36: // STATUS
          return STATUS;
        case 37: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 38: // FULL_NAME
          return FULL_NAME;
        case 39: // DELIVERY_MONEY
          return DELIVERY_MONEY;
        case 40: // STORE
          return STORE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __SECSTORE_ISSET_ID = 2;
  private static final int __SECPRICE_ISSET_ID = 3;
  private static final int __VIPSECPRICE_ISSET_ID = 4;
  private static final int __STARTTIME_ISSET_ID = 5;
  private static final int __ENDTIME_ISSET_ID = 6;
  private static final int __TRUEBUYERNUMBER_ISSET_ID = 7;
  private static final int __BUYLIMIT_ISSET_ID = 8;
  private static final int __AUDITTIME_ISSET_ID = 9;
  private static final int __PRICE_ISSET_ID = 10;
  private static final int __MARKETPRICE_ISSET_ID = 11;
  private static final int __DELIVERYSTARTTIME_ISSET_ID = 12;
  private static final int __DELIVERYENDTIME_ISSET_ID = 13;
  private static final int __DELIVERYMONEY_ISSET_ID = 14;
  private static final int __STORE_ISSET_ID = 15;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SEC_STORE, new org.apache.thrift.meta_data.FieldMetaData("secStore", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SEC_PRICE, new org.apache.thrift.meta_data.FieldMetaData("secPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.VIP_SEC_PRICE, new org.apache.thrift.meta_data.FieldMetaData("vipSecPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TRUE_BUYER_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("trueBuyerNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BUY_LIMIT, new org.apache.thrift.meta_data.FieldMetaData("buyLimit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_MARKETABLE, new org.apache.thrift.meta_data.FieldMetaData("isMarketable", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_START_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditStartOrgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_END_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditEndOrgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STATE, new org.apache.thrift.meta_data.FieldMetaData("auditState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditOrgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STAGE, new org.apache.thrift.meta_data.FieldMetaData("auditStage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REVIEW_STAFF, new org.apache.thrift.meta_data.FieldMetaData("reviewStaff", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STAFF, new org.apache.thrift.meta_data.FieldMetaData("auditStaff", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("auditTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AUDIT_COMMENT, new org.apache.thrift.meta_data.FieldMetaData("auditComment", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MARKET_PRICE, new org.apache.thrift.meta_data.FieldMetaData("marketPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DELIVERY_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryStartTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DELIVERY_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BRIEF_INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("briefIntroduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_OPTION, new org.apache.thrift.meta_data.FieldMetaData("deliveryOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUY_KNOW, new org.apache.thrift.meta_data.FieldMetaData("buyKnow", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("introduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FULL_NAME, new org.apache.thrift.meta_data.FieldMetaData("fullName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_MONEY, new org.apache.thrift.meta_data.FieldMetaData("deliveryMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.STORE, new org.apache.thrift.meta_data.FieldMetaData("store", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProductSeckillVo.class, metaDataMap);
  }

  public ProductSeckillVo() {
  }

  public ProductSeckillVo(
    long id,
    String clientId,
    long createTime,
    String productId,
    int secStore,
    double secPrice,
    double vipSecPrice,
    long startTime,
    long endTime,
    int trueBuyerNumber,
    int buyLimit,
    String isMarketable,
    String auditStartOrgCode,
    String auditEndOrgCode,
    String auditState,
    String auditOrgCode,
    String auditStage,
    String reviewStaff,
    String auditStaff,
    long auditTime,
    String auditComment,
    String type,
    String name,
    double price,
    double marketPrice,
    long deliveryStartTime,
    long deliveryEndTime,
    String briefIntroduction,
    String phone,
    String deliveryOption,
    String buyKnow,
    String introduction,
    String merchantId,
    String orgCode,
    String orgName,
    String status,
    String merchantName,
    String fullName,
    double deliveryMoney,
    int store)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.clientId = clientId;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.productId = productId;
    this.secStore = secStore;
    setSecStoreIsSet(true);
    this.secPrice = secPrice;
    setSecPriceIsSet(true);
    this.vipSecPrice = vipSecPrice;
    setVipSecPriceIsSet(true);
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
    this.trueBuyerNumber = trueBuyerNumber;
    setTrueBuyerNumberIsSet(true);
    this.buyLimit = buyLimit;
    setBuyLimitIsSet(true);
    this.isMarketable = isMarketable;
    this.auditStartOrgCode = auditStartOrgCode;
    this.auditEndOrgCode = auditEndOrgCode;
    this.auditState = auditState;
    this.auditOrgCode = auditOrgCode;
    this.auditStage = auditStage;
    this.reviewStaff = reviewStaff;
    this.auditStaff = auditStaff;
    this.auditTime = auditTime;
    setAuditTimeIsSet(true);
    this.auditComment = auditComment;
    this.type = type;
    this.name = name;
    this.price = price;
    setPriceIsSet(true);
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    this.deliveryStartTime = deliveryStartTime;
    setDeliveryStartTimeIsSet(true);
    this.deliveryEndTime = deliveryEndTime;
    setDeliveryEndTimeIsSet(true);
    this.briefIntroduction = briefIntroduction;
    this.phone = phone;
    this.deliveryOption = deliveryOption;
    this.buyKnow = buyKnow;
    this.introduction = introduction;
    this.merchantId = merchantId;
    this.orgCode = orgCode;
    this.orgName = orgName;
    this.status = status;
    this.merchantName = merchantName;
    this.fullName = fullName;
    this.deliveryMoney = deliveryMoney;
    setDeliveryMoneyIsSet(true);
    this.store = store;
    setStoreIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProductSeckillVo(ProductSeckillVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    this.createTime = other.createTime;
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    this.secStore = other.secStore;
    this.secPrice = other.secPrice;
    this.vipSecPrice = other.vipSecPrice;
    this.startTime = other.startTime;
    this.endTime = other.endTime;
    this.trueBuyerNumber = other.trueBuyerNumber;
    this.buyLimit = other.buyLimit;
    if (other.isSetIsMarketable()) {
      this.isMarketable = other.isMarketable;
    }
    if (other.isSetAuditStartOrgCode()) {
      this.auditStartOrgCode = other.auditStartOrgCode;
    }
    if (other.isSetAuditEndOrgCode()) {
      this.auditEndOrgCode = other.auditEndOrgCode;
    }
    if (other.isSetAuditState()) {
      this.auditState = other.auditState;
    }
    if (other.isSetAuditOrgCode()) {
      this.auditOrgCode = other.auditOrgCode;
    }
    if (other.isSetAuditStage()) {
      this.auditStage = other.auditStage;
    }
    if (other.isSetReviewStaff()) {
      this.reviewStaff = other.reviewStaff;
    }
    if (other.isSetAuditStaff()) {
      this.auditStaff = other.auditStaff;
    }
    this.auditTime = other.auditTime;
    if (other.isSetAuditComment()) {
      this.auditComment = other.auditComment;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.price = other.price;
    this.marketPrice = other.marketPrice;
    this.deliveryStartTime = other.deliveryStartTime;
    this.deliveryEndTime = other.deliveryEndTime;
    if (other.isSetBriefIntroduction()) {
      this.briefIntroduction = other.briefIntroduction;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetDeliveryOption()) {
      this.deliveryOption = other.deliveryOption;
    }
    if (other.isSetBuyKnow()) {
      this.buyKnow = other.buyKnow;
    }
    if (other.isSetIntroduction()) {
      this.introduction = other.introduction;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetFullName()) {
      this.fullName = other.fullName;
    }
    this.deliveryMoney = other.deliveryMoney;
    this.store = other.store;
  }

  public ProductSeckillVo deepCopy() {
    return new ProductSeckillVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.clientId = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.productId = null;
    setSecStoreIsSet(false);
    this.secStore = 0;
    setSecPriceIsSet(false);
    this.secPrice = 0.0;
    setVipSecPriceIsSet(false);
    this.vipSecPrice = 0.0;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    setTrueBuyerNumberIsSet(false);
    this.trueBuyerNumber = 0;
    setBuyLimitIsSet(false);
    this.buyLimit = 0;
    this.isMarketable = null;
    this.auditStartOrgCode = null;
    this.auditEndOrgCode = null;
    this.auditState = null;
    this.auditOrgCode = null;
    this.auditStage = null;
    this.reviewStaff = null;
    this.auditStaff = null;
    setAuditTimeIsSet(false);
    this.auditTime = 0;
    this.auditComment = null;
    this.type = null;
    this.name = null;
    setPriceIsSet(false);
    this.price = 0.0;
    setMarketPriceIsSet(false);
    this.marketPrice = 0.0;
    setDeliveryStartTimeIsSet(false);
    this.deliveryStartTime = 0;
    setDeliveryEndTimeIsSet(false);
    this.deliveryEndTime = 0;
    this.briefIntroduction = null;
    this.phone = null;
    this.deliveryOption = null;
    this.buyKnow = null;
    this.introduction = null;
    this.merchantId = null;
    this.orgCode = null;
    this.orgName = null;
    this.status = null;
    this.merchantName = null;
    this.fullName = null;
    setDeliveryMoneyIsSet(false);
    this.deliveryMoney = 0.0;
    setStoreIsSet(false);
    this.store = 0;
  }

  /**
   * id
   */
  public long getId() {
    return this.id;
  }

  /**
   * id
   */
  public ProductSeckillVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public ProductSeckillVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 创建时间(秒杀创建时间)
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间(秒杀创建时间)
   */
  public ProductSeckillVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 商品id
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品id
   */
  public ProductSeckillVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 秒杀库存数量
   */
  public int getSecStore() {
    return this.secStore;
  }

  /**
   * 秒杀库存数量
   */
  public ProductSeckillVo setSecStore(int secStore) {
    this.secStore = secStore;
    setSecStoreIsSet(true);
    return this;
  }

  public void unsetSecStore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SECSTORE_ISSET_ID);
  }

  /** Returns true if field secStore is set (has been assigned a value) and false otherwise */
  public boolean isSetSecStore() {
    return EncodingUtils.testBit(__isset_bitfield, __SECSTORE_ISSET_ID);
  }

  public void setSecStoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SECSTORE_ISSET_ID, value);
  }

  /**
   * 秒杀价
   */
  public double getSecPrice() {
    return this.secPrice;
  }

  /**
   * 秒杀价
   */
  public ProductSeckillVo setSecPrice(double secPrice) {
    this.secPrice = secPrice;
    setSecPriceIsSet(true);
    return this;
  }

  public void unsetSecPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SECPRICE_ISSET_ID);
  }

  /** Returns true if field secPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetSecPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __SECPRICE_ISSET_ID);
  }

  public void setSecPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SECPRICE_ISSET_ID, value);
  }

  /**
   * VIP秒杀价
   */
  public double getVipSecPrice() {
    return this.vipSecPrice;
  }

  /**
   * VIP秒杀价
   */
  public ProductSeckillVo setVipSecPrice(double vipSecPrice) {
    this.vipSecPrice = vipSecPrice;
    setVipSecPriceIsSet(true);
    return this;
  }

  public void unsetVipSecPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIPSECPRICE_ISSET_ID);
  }

  /** Returns true if field vipSecPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetVipSecPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __VIPSECPRICE_ISSET_ID);
  }

  public void setVipSecPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIPSECPRICE_ISSET_ID, value);
  }

  /**
   * 秒杀开始时间
   */
  public long getStartTime() {
    return this.startTime;
  }

  /**
   * 秒杀开始时间
   */
  public ProductSeckillVo setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  /**
   * 秒杀结束时间
   */
  public long getEndTime() {
    return this.endTime;
  }

  /**
   * 秒杀结束时间
   */
  public ProductSeckillVo setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  /**
   * 真实秒杀数量
   */
  public int getTrueBuyerNumber() {
    return this.trueBuyerNumber;
  }

  /**
   * 真实秒杀数量
   */
  public ProductSeckillVo setTrueBuyerNumber(int trueBuyerNumber) {
    this.trueBuyerNumber = trueBuyerNumber;
    setTrueBuyerNumberIsSet(true);
    return this;
  }

  public void unsetTrueBuyerNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TRUEBUYERNUMBER_ISSET_ID);
  }

  /** Returns true if field trueBuyerNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetTrueBuyerNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __TRUEBUYERNUMBER_ISSET_ID);
  }

  public void setTrueBuyerNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TRUEBUYERNUMBER_ISSET_ID, value);
  }

  /**
   * 秒杀单用户限购
   */
  public int getBuyLimit() {
    return this.buyLimit;
  }

  /**
   * 秒杀单用户限购
   */
  public ProductSeckillVo setBuyLimit(int buyLimit) {
    this.buyLimit = buyLimit;
    setBuyLimitIsSet(true);
    return this;
  }

  public void unsetBuyLimit() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUYLIMIT_ISSET_ID);
  }

  /** Returns true if field buyLimit is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyLimit() {
    return EncodingUtils.testBit(__isset_bitfield, __BUYLIMIT_ISSET_ID);
  }

  public void setBuyLimitIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUYLIMIT_ISSET_ID, value);
  }

  /**
   * 是否上架 0未上架,1已上架,2已下架,3已删除
   */
  public String getIsMarketable() {
    return this.isMarketable;
  }

  /**
   * 是否上架 0未上架,1已上架,2已下架,3已删除
   */
  public ProductSeckillVo setIsMarketable(String isMarketable) {
    this.isMarketable = isMarketable;
    return this;
  }

  public void unsetIsMarketable() {
    this.isMarketable = null;
  }

  /** Returns true if field isMarketable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsMarketable() {
    return this.isMarketable != null;
  }

  public void setIsMarketableIsSet(boolean value) {
    if (!value) {
      this.isMarketable = null;
    }
  }

  /**
   * 起始审核机构
   */
  public String getAuditStartOrgCode() {
    return this.auditStartOrgCode;
  }

  /**
   * 起始审核机构
   */
  public ProductSeckillVo setAuditStartOrgCode(String auditStartOrgCode) {
    this.auditStartOrgCode = auditStartOrgCode;
    return this;
  }

  public void unsetAuditStartOrgCode() {
    this.auditStartOrgCode = null;
  }

  /** Returns true if field auditStartOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStartOrgCode() {
    return this.auditStartOrgCode != null;
  }

  public void setAuditStartOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditStartOrgCode = null;
    }
  }

  /**
   * 最终审核机构
   */
  public String getAuditEndOrgCode() {
    return this.auditEndOrgCode;
  }

  /**
   * 最终审核机构
   */
  public ProductSeckillVo setAuditEndOrgCode(String auditEndOrgCode) {
    this.auditEndOrgCode = auditEndOrgCode;
    return this;
  }

  public void unsetAuditEndOrgCode() {
    this.auditEndOrgCode = null;
  }

  /** Returns true if field auditEndOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditEndOrgCode() {
    return this.auditEndOrgCode != null;
  }

  public void setAuditEndOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditEndOrgCode = null;
    }
  }

  /**
   * 商品审核状态("0待审核",1审核通过,2审核不通过,3未提交)
   */
  public String getAuditState() {
    return this.auditState;
  }

  /**
   * 商品审核状态("0待审核",1审核通过,2审核不通过,3未提交)
   */
  public ProductSeckillVo setAuditState(String auditState) {
    this.auditState = auditState;
    return this;
  }

  public void unsetAuditState() {
    this.auditState = null;
  }

  /** Returns true if field auditState is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditState() {
    return this.auditState != null;
  }

  public void setAuditStateIsSet(boolean value) {
    if (!value) {
      this.auditState = null;
    }
  }

  /**
   * 待审核机构编号(完成置0)
   */
  public String getAuditOrgCode() {
    return this.auditOrgCode;
  }

  /**
   * 待审核机构编号(完成置0)
   */
  public ProductSeckillVo setAuditOrgCode(String auditOrgCode) {
    this.auditOrgCode = auditOrgCode;
    return this;
  }

  public void unsetAuditOrgCode() {
    this.auditOrgCode = null;
  }

  /** Returns true if field auditOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditOrgCode() {
    return this.auditOrgCode != null;
  }

  public void setAuditOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditOrgCode = null;
    }
  }

  /**
   * 审核步骤(0-初审/1-复审)
   */
  public String getAuditStage() {
    return this.auditStage;
  }

  /**
   * 审核步骤(0-初审/1-复审)
   */
  public ProductSeckillVo setAuditStage(String auditStage) {
    this.auditStage = auditStage;
    return this;
  }

  public void unsetAuditStage() {
    this.auditStage = null;
  }

  /** Returns true if field auditStage is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStage() {
    return this.auditStage != null;
  }

  public void setAuditStageIsSet(boolean value) {
    if (!value) {
      this.auditStage = null;
    }
  }

  /**
   * 复核人
   */
  public String getReviewStaff() {
    return this.reviewStaff;
  }

  /**
   * 复核人
   */
  public ProductSeckillVo setReviewStaff(String reviewStaff) {
    this.reviewStaff = reviewStaff;
    return this;
  }

  public void unsetReviewStaff() {
    this.reviewStaff = null;
  }

  /** Returns true if field reviewStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewStaff() {
    return this.reviewStaff != null;
  }

  public void setReviewStaffIsSet(boolean value) {
    if (!value) {
      this.reviewStaff = null;
    }
  }

  /**
   * 审核人
   */
  public String getAuditStaff() {
    return this.auditStaff;
  }

  /**
   * 审核人
   */
  public ProductSeckillVo setAuditStaff(String auditStaff) {
    this.auditStaff = auditStaff;
    return this;
  }

  public void unsetAuditStaff() {
    this.auditStaff = null;
  }

  /** Returns true if field auditStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStaff() {
    return this.auditStaff != null;
  }

  public void setAuditStaffIsSet(boolean value) {
    if (!value) {
      this.auditStaff = null;
    }
  }

  /**
   * 审核时间
   */
  public long getAuditTime() {
    return this.auditTime;
  }

  /**
   * 审核时间
   */
  public ProductSeckillVo setAuditTime(long auditTime) {
    this.auditTime = auditTime;
    setAuditTimeIsSet(true);
    return this;
  }

  public void unsetAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  /** Returns true if field auditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  public void setAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AUDITTIME_ISSET_ID, value);
  }

  /**
   * 审核批注
   */
  public String getAuditComment() {
    return this.auditComment;
  }

  /**
   * 审核批注
   */
  public ProductSeckillVo setAuditComment(String auditComment) {
    this.auditComment = auditComment;
    return this;
  }

  public void unsetAuditComment() {
    this.auditComment = null;
  }

  /** Returns true if field auditComment is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditComment() {
    return this.auditComment != null;
  }

  public void setAuditCommentIsSet(boolean value) {
    if (!value) {
      this.auditComment = null;
    }
  }

  /**
   * 商品名称类型
   */
  public String getType() {
    return this.type;
  }

  /**
   * 商品名称类型
   */
  public ProductSeckillVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 商品名称
   */
  public String getName() {
    return this.name;
  }

  /**
   * 商品名称
   */
  public ProductSeckillVo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  /**
   * 优惠价格
   */
  public double getPrice() {
    return this.price;
  }

  /**
   * 优惠价格
   */
  public ProductSeckillVo setPrice(double price) {
    this.price = price;
    setPriceIsSet(true);
    return this;
  }

  public void unsetPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  public void setPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRICE_ISSET_ID, value);
  }

  /**
   * 市场价格
   */
  public double getMarketPrice() {
    return this.marketPrice;
  }

  /**
   * 市场价格
   */
  public ProductSeckillVo setMarketPrice(double marketPrice) {
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    return this;
  }

  public void unsetMarketPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  /** Returns true if field marketPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetMarketPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  public void setMarketPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MARKETPRICE_ISSET_ID, value);
  }

  /**
   * 提货开始时间
   */
  public long getDeliveryStartTime() {
    return this.deliveryStartTime;
  }

  /**
   * 提货开始时间
   */
  public ProductSeckillVo setDeliveryStartTime(long deliveryStartTime) {
    this.deliveryStartTime = deliveryStartTime;
    setDeliveryStartTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID);
  }

  /** Returns true if field deliveryStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID);
  }

  public void setDeliveryStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID, value);
  }

  /**
   * 提货结束时间
   */
  public long getDeliveryEndTime() {
    return this.deliveryEndTime;
  }

  /**
   * 提货结束时间
   */
  public ProductSeckillVo setDeliveryEndTime(long deliveryEndTime) {
    this.deliveryEndTime = deliveryEndTime;
    setDeliveryEndTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID);
  }

  /** Returns true if field deliveryEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID);
  }

  public void setDeliveryEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID, value);
  }

  /**
   * 商品简介
   */
  public String getBriefIntroduction() {
    return this.briefIntroduction;
  }

  /**
   * 商品简介
   */
  public ProductSeckillVo setBriefIntroduction(String briefIntroduction) {
    this.briefIntroduction = briefIntroduction;
    return this;
  }

  public void unsetBriefIntroduction() {
    this.briefIntroduction = null;
  }

  /** Returns true if field briefIntroduction is set (has been assigned a value) and false otherwise */
  public boolean isSetBriefIntroduction() {
    return this.briefIntroduction != null;
  }

  public void setBriefIntroductionIsSet(boolean value) {
    if (!value) {
      this.briefIntroduction = null;
    }
  }

  /**
   * 投诉电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 投诉电话
   */
  public ProductSeckillVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 配送方式
   */
  public String getDeliveryOption() {
    return this.deliveryOption;
  }

  /**
   * 配送方式
   */
  public ProductSeckillVo setDeliveryOption(String deliveryOption) {
    this.deliveryOption = deliveryOption;
    return this;
  }

  public void unsetDeliveryOption() {
    this.deliveryOption = null;
  }

  /** Returns true if field deliveryOption is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryOption() {
    return this.deliveryOption != null;
  }

  public void setDeliveryOptionIsSet(boolean value) {
    if (!value) {
      this.deliveryOption = null;
    }
  }

  /**
   * 购买须知
   */
  public String getBuyKnow() {
    return this.buyKnow;
  }

  /**
   * 购买须知
   */
  public ProductSeckillVo setBuyKnow(String buyKnow) {
    this.buyKnow = buyKnow;
    return this;
  }

  public void unsetBuyKnow() {
    this.buyKnow = null;
  }

  /** Returns true if field buyKnow is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyKnow() {
    return this.buyKnow != null;
  }

  public void setBuyKnowIsSet(boolean value) {
    if (!value) {
      this.buyKnow = null;
    }
  }

  /**
   * 商品详情
   */
  public String getIntroduction() {
    return this.introduction;
  }

  /**
   * 商品详情
   */
  public ProductSeckillVo setIntroduction(String introduction) {
    this.introduction = introduction;
    return this;
  }

  public void unsetIntroduction() {
    this.introduction = null;
  }

  /** Returns true if field introduction is set (has been assigned a value) and false otherwise */
  public boolean isSetIntroduction() {
    return this.introduction != null;
  }

  public void setIntroductionIsSet(boolean value) {
    if (!value) {
      this.introduction = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public ProductSeckillVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 网点机构号
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 网点机构号
   */
  public ProductSeckillVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 所属机构
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 所属机构
   */
  public ProductSeckillVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 秒杀商品状态
   */
  public String getStatus() {
    return this.status;
  }

  /**
   * 秒杀商品状态
   */
  public ProductSeckillVo setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  /**
   * 商户名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称
   */
  public ProductSeckillVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 商品全名
   */
  public String getFullName() {
    return this.fullName;
  }

  /**
   * 商品全名
   */
  public ProductSeckillVo setFullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  public void unsetFullName() {
    this.fullName = null;
  }

  /** Returns true if field fullName is set (has been assigned a value) and false otherwise */
  public boolean isSetFullName() {
    return this.fullName != null;
  }

  public void setFullNameIsSet(boolean value) {
    if (!value) {
      this.fullName = null;
    }
  }

  /**
   * 运费
   */
  public double getDeliveryMoney() {
    return this.deliveryMoney;
  }

  /**
   * 运费
   */
  public ProductSeckillVo setDeliveryMoney(double deliveryMoney) {
    this.deliveryMoney = deliveryMoney;
    setDeliveryMoneyIsSet(true);
    return this;
  }

  public void unsetDeliveryMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID);
  }

  /** Returns true if field deliveryMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID);
  }

  public void setDeliveryMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID, value);
  }

  /**
   * 商品库存数量
   */
  public int getStore() {
    return this.store;
  }

  /**
   * 商品库存数量
   */
  public ProductSeckillVo setStore(int store) {
    this.store = store;
    setStoreIsSet(true);
    return this;
  }

  public void unsetStore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STORE_ISSET_ID);
  }

  /** Returns true if field store is set (has been assigned a value) and false otherwise */
  public boolean isSetStore() {
    return EncodingUtils.testBit(__isset_bitfield, __STORE_ISSET_ID);
  }

  public void setStoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STORE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case SEC_STORE:
      if (value == null) {
        unsetSecStore();
      } else {
        setSecStore((Integer)value);
      }
      break;

    case SEC_PRICE:
      if (value == null) {
        unsetSecPrice();
      } else {
        setSecPrice((Double)value);
      }
      break;

    case VIP_SEC_PRICE:
      if (value == null) {
        unsetVipSecPrice();
      } else {
        setVipSecPrice((Double)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((Long)value);
      }
      break;

    case TRUE_BUYER_NUMBER:
      if (value == null) {
        unsetTrueBuyerNumber();
      } else {
        setTrueBuyerNumber((Integer)value);
      }
      break;

    case BUY_LIMIT:
      if (value == null) {
        unsetBuyLimit();
      } else {
        setBuyLimit((Integer)value);
      }
      break;

    case IS_MARKETABLE:
      if (value == null) {
        unsetIsMarketable();
      } else {
        setIsMarketable((String)value);
      }
      break;

    case AUDIT_START_ORG_CODE:
      if (value == null) {
        unsetAuditStartOrgCode();
      } else {
        setAuditStartOrgCode((String)value);
      }
      break;

    case AUDIT_END_ORG_CODE:
      if (value == null) {
        unsetAuditEndOrgCode();
      } else {
        setAuditEndOrgCode((String)value);
      }
      break;

    case AUDIT_STATE:
      if (value == null) {
        unsetAuditState();
      } else {
        setAuditState((String)value);
      }
      break;

    case AUDIT_ORG_CODE:
      if (value == null) {
        unsetAuditOrgCode();
      } else {
        setAuditOrgCode((String)value);
      }
      break;

    case AUDIT_STAGE:
      if (value == null) {
        unsetAuditStage();
      } else {
        setAuditStage((String)value);
      }
      break;

    case REVIEW_STAFF:
      if (value == null) {
        unsetReviewStaff();
      } else {
        setReviewStaff((String)value);
      }
      break;

    case AUDIT_STAFF:
      if (value == null) {
        unsetAuditStaff();
      } else {
        setAuditStaff((String)value);
      }
      break;

    case AUDIT_TIME:
      if (value == null) {
        unsetAuditTime();
      } else {
        setAuditTime((Long)value);
      }
      break;

    case AUDIT_COMMENT:
      if (value == null) {
        unsetAuditComment();
      } else {
        setAuditComment((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((Double)value);
      }
      break;

    case MARKET_PRICE:
      if (value == null) {
        unsetMarketPrice();
      } else {
        setMarketPrice((Double)value);
      }
      break;

    case DELIVERY_START_TIME:
      if (value == null) {
        unsetDeliveryStartTime();
      } else {
        setDeliveryStartTime((Long)value);
      }
      break;

    case DELIVERY_END_TIME:
      if (value == null) {
        unsetDeliveryEndTime();
      } else {
        setDeliveryEndTime((Long)value);
      }
      break;

    case BRIEF_INTRODUCTION:
      if (value == null) {
        unsetBriefIntroduction();
      } else {
        setBriefIntroduction((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case DELIVERY_OPTION:
      if (value == null) {
        unsetDeliveryOption();
      } else {
        setDeliveryOption((String)value);
      }
      break;

    case BUY_KNOW:
      if (value == null) {
        unsetBuyKnow();
      } else {
        setBuyKnow((String)value);
      }
      break;

    case INTRODUCTION:
      if (value == null) {
        unsetIntroduction();
      } else {
        setIntroduction((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case FULL_NAME:
      if (value == null) {
        unsetFullName();
      } else {
        setFullName((String)value);
      }
      break;

    case DELIVERY_MONEY:
      if (value == null) {
        unsetDeliveryMoney();
      } else {
        setDeliveryMoney((Double)value);
      }
      break;

    case STORE:
      if (value == null) {
        unsetStore();
      } else {
        setStore((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CLIENT_ID:
      return getClientId();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case PRODUCT_ID:
      return getProductId();

    case SEC_STORE:
      return Integer.valueOf(getSecStore());

    case SEC_PRICE:
      return Double.valueOf(getSecPrice());

    case VIP_SEC_PRICE:
      return Double.valueOf(getVipSecPrice());

    case START_TIME:
      return Long.valueOf(getStartTime());

    case END_TIME:
      return Long.valueOf(getEndTime());

    case TRUE_BUYER_NUMBER:
      return Integer.valueOf(getTrueBuyerNumber());

    case BUY_LIMIT:
      return Integer.valueOf(getBuyLimit());

    case IS_MARKETABLE:
      return getIsMarketable();

    case AUDIT_START_ORG_CODE:
      return getAuditStartOrgCode();

    case AUDIT_END_ORG_CODE:
      return getAuditEndOrgCode();

    case AUDIT_STATE:
      return getAuditState();

    case AUDIT_ORG_CODE:
      return getAuditOrgCode();

    case AUDIT_STAGE:
      return getAuditStage();

    case REVIEW_STAFF:
      return getReviewStaff();

    case AUDIT_STAFF:
      return getAuditStaff();

    case AUDIT_TIME:
      return Long.valueOf(getAuditTime());

    case AUDIT_COMMENT:
      return getAuditComment();

    case TYPE:
      return getType();

    case NAME:
      return getName();

    case PRICE:
      return Double.valueOf(getPrice());

    case MARKET_PRICE:
      return Double.valueOf(getMarketPrice());

    case DELIVERY_START_TIME:
      return Long.valueOf(getDeliveryStartTime());

    case DELIVERY_END_TIME:
      return Long.valueOf(getDeliveryEndTime());

    case BRIEF_INTRODUCTION:
      return getBriefIntroduction();

    case PHONE:
      return getPhone();

    case DELIVERY_OPTION:
      return getDeliveryOption();

    case BUY_KNOW:
      return getBuyKnow();

    case INTRODUCTION:
      return getIntroduction();

    case MERCHANT_ID:
      return getMerchantId();

    case ORG_CODE:
      return getOrgCode();

    case ORG_NAME:
      return getOrgName();

    case STATUS:
      return getStatus();

    case MERCHANT_NAME:
      return getMerchantName();

    case FULL_NAME:
      return getFullName();

    case DELIVERY_MONEY:
      return Double.valueOf(getDeliveryMoney());

    case STORE:
      return Integer.valueOf(getStore());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CLIENT_ID:
      return isSetClientId();
    case CREATE_TIME:
      return isSetCreateTime();
    case PRODUCT_ID:
      return isSetProductId();
    case SEC_STORE:
      return isSetSecStore();
    case SEC_PRICE:
      return isSetSecPrice();
    case VIP_SEC_PRICE:
      return isSetVipSecPrice();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case TRUE_BUYER_NUMBER:
      return isSetTrueBuyerNumber();
    case BUY_LIMIT:
      return isSetBuyLimit();
    case IS_MARKETABLE:
      return isSetIsMarketable();
    case AUDIT_START_ORG_CODE:
      return isSetAuditStartOrgCode();
    case AUDIT_END_ORG_CODE:
      return isSetAuditEndOrgCode();
    case AUDIT_STATE:
      return isSetAuditState();
    case AUDIT_ORG_CODE:
      return isSetAuditOrgCode();
    case AUDIT_STAGE:
      return isSetAuditStage();
    case REVIEW_STAFF:
      return isSetReviewStaff();
    case AUDIT_STAFF:
      return isSetAuditStaff();
    case AUDIT_TIME:
      return isSetAuditTime();
    case AUDIT_COMMENT:
      return isSetAuditComment();
    case TYPE:
      return isSetType();
    case NAME:
      return isSetName();
    case PRICE:
      return isSetPrice();
    case MARKET_PRICE:
      return isSetMarketPrice();
    case DELIVERY_START_TIME:
      return isSetDeliveryStartTime();
    case DELIVERY_END_TIME:
      return isSetDeliveryEndTime();
    case BRIEF_INTRODUCTION:
      return isSetBriefIntroduction();
    case PHONE:
      return isSetPhone();
    case DELIVERY_OPTION:
      return isSetDeliveryOption();
    case BUY_KNOW:
      return isSetBuyKnow();
    case INTRODUCTION:
      return isSetIntroduction();
    case MERCHANT_ID:
      return isSetMerchantId();
    case ORG_CODE:
      return isSetOrgCode();
    case ORG_NAME:
      return isSetOrgName();
    case STATUS:
      return isSetStatus();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case FULL_NAME:
      return isSetFullName();
    case DELIVERY_MONEY:
      return isSetDeliveryMoney();
    case STORE:
      return isSetStore();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProductSeckillVo)
      return this.equals((ProductSeckillVo)that);
    return false;
  }

  public boolean equals(ProductSeckillVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_secStore = true;
    boolean that_present_secStore = true;
    if (this_present_secStore || that_present_secStore) {
      if (!(this_present_secStore && that_present_secStore))
        return false;
      if (this.secStore != that.secStore)
        return false;
    }

    boolean this_present_secPrice = true;
    boolean that_present_secPrice = true;
    if (this_present_secPrice || that_present_secPrice) {
      if (!(this_present_secPrice && that_present_secPrice))
        return false;
      if (this.secPrice != that.secPrice)
        return false;
    }

    boolean this_present_vipSecPrice = true;
    boolean that_present_vipSecPrice = true;
    if (this_present_vipSecPrice || that_present_vipSecPrice) {
      if (!(this_present_vipSecPrice && that_present_vipSecPrice))
        return false;
      if (this.vipSecPrice != that.vipSecPrice)
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_trueBuyerNumber = true;
    boolean that_present_trueBuyerNumber = true;
    if (this_present_trueBuyerNumber || that_present_trueBuyerNumber) {
      if (!(this_present_trueBuyerNumber && that_present_trueBuyerNumber))
        return false;
      if (this.trueBuyerNumber != that.trueBuyerNumber)
        return false;
    }

    boolean this_present_buyLimit = true;
    boolean that_present_buyLimit = true;
    if (this_present_buyLimit || that_present_buyLimit) {
      if (!(this_present_buyLimit && that_present_buyLimit))
        return false;
      if (this.buyLimit != that.buyLimit)
        return false;
    }

    boolean this_present_isMarketable = true && this.isSetIsMarketable();
    boolean that_present_isMarketable = true && that.isSetIsMarketable();
    if (this_present_isMarketable || that_present_isMarketable) {
      if (!(this_present_isMarketable && that_present_isMarketable))
        return false;
      if (!this.isMarketable.equals(that.isMarketable))
        return false;
    }

    boolean this_present_auditStartOrgCode = true && this.isSetAuditStartOrgCode();
    boolean that_present_auditStartOrgCode = true && that.isSetAuditStartOrgCode();
    if (this_present_auditStartOrgCode || that_present_auditStartOrgCode) {
      if (!(this_present_auditStartOrgCode && that_present_auditStartOrgCode))
        return false;
      if (!this.auditStartOrgCode.equals(that.auditStartOrgCode))
        return false;
    }

    boolean this_present_auditEndOrgCode = true && this.isSetAuditEndOrgCode();
    boolean that_present_auditEndOrgCode = true && that.isSetAuditEndOrgCode();
    if (this_present_auditEndOrgCode || that_present_auditEndOrgCode) {
      if (!(this_present_auditEndOrgCode && that_present_auditEndOrgCode))
        return false;
      if (!this.auditEndOrgCode.equals(that.auditEndOrgCode))
        return false;
    }

    boolean this_present_auditState = true && this.isSetAuditState();
    boolean that_present_auditState = true && that.isSetAuditState();
    if (this_present_auditState || that_present_auditState) {
      if (!(this_present_auditState && that_present_auditState))
        return false;
      if (!this.auditState.equals(that.auditState))
        return false;
    }

    boolean this_present_auditOrgCode = true && this.isSetAuditOrgCode();
    boolean that_present_auditOrgCode = true && that.isSetAuditOrgCode();
    if (this_present_auditOrgCode || that_present_auditOrgCode) {
      if (!(this_present_auditOrgCode && that_present_auditOrgCode))
        return false;
      if (!this.auditOrgCode.equals(that.auditOrgCode))
        return false;
    }

    boolean this_present_auditStage = true && this.isSetAuditStage();
    boolean that_present_auditStage = true && that.isSetAuditStage();
    if (this_present_auditStage || that_present_auditStage) {
      if (!(this_present_auditStage && that_present_auditStage))
        return false;
      if (!this.auditStage.equals(that.auditStage))
        return false;
    }

    boolean this_present_reviewStaff = true && this.isSetReviewStaff();
    boolean that_present_reviewStaff = true && that.isSetReviewStaff();
    if (this_present_reviewStaff || that_present_reviewStaff) {
      if (!(this_present_reviewStaff && that_present_reviewStaff))
        return false;
      if (!this.reviewStaff.equals(that.reviewStaff))
        return false;
    }

    boolean this_present_auditStaff = true && this.isSetAuditStaff();
    boolean that_present_auditStaff = true && that.isSetAuditStaff();
    if (this_present_auditStaff || that_present_auditStaff) {
      if (!(this_present_auditStaff && that_present_auditStaff))
        return false;
      if (!this.auditStaff.equals(that.auditStaff))
        return false;
    }

    boolean this_present_auditTime = true;
    boolean that_present_auditTime = true;
    if (this_present_auditTime || that_present_auditTime) {
      if (!(this_present_auditTime && that_present_auditTime))
        return false;
      if (this.auditTime != that.auditTime)
        return false;
    }

    boolean this_present_auditComment = true && this.isSetAuditComment();
    boolean that_present_auditComment = true && that.isSetAuditComment();
    if (this_present_auditComment || that_present_auditComment) {
      if (!(this_present_auditComment && that_present_auditComment))
        return false;
      if (!this.auditComment.equals(that.auditComment))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_price = true;
    boolean that_present_price = true;
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (this.price != that.price)
        return false;
    }

    boolean this_present_marketPrice = true;
    boolean that_present_marketPrice = true;
    if (this_present_marketPrice || that_present_marketPrice) {
      if (!(this_present_marketPrice && that_present_marketPrice))
        return false;
      if (this.marketPrice != that.marketPrice)
        return false;
    }

    boolean this_present_deliveryStartTime = true;
    boolean that_present_deliveryStartTime = true;
    if (this_present_deliveryStartTime || that_present_deliveryStartTime) {
      if (!(this_present_deliveryStartTime && that_present_deliveryStartTime))
        return false;
      if (this.deliveryStartTime != that.deliveryStartTime)
        return false;
    }

    boolean this_present_deliveryEndTime = true;
    boolean that_present_deliveryEndTime = true;
    if (this_present_deliveryEndTime || that_present_deliveryEndTime) {
      if (!(this_present_deliveryEndTime && that_present_deliveryEndTime))
        return false;
      if (this.deliveryEndTime != that.deliveryEndTime)
        return false;
    }

    boolean this_present_briefIntroduction = true && this.isSetBriefIntroduction();
    boolean that_present_briefIntroduction = true && that.isSetBriefIntroduction();
    if (this_present_briefIntroduction || that_present_briefIntroduction) {
      if (!(this_present_briefIntroduction && that_present_briefIntroduction))
        return false;
      if (!this.briefIntroduction.equals(that.briefIntroduction))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_deliveryOption = true && this.isSetDeliveryOption();
    boolean that_present_deliveryOption = true && that.isSetDeliveryOption();
    if (this_present_deliveryOption || that_present_deliveryOption) {
      if (!(this_present_deliveryOption && that_present_deliveryOption))
        return false;
      if (!this.deliveryOption.equals(that.deliveryOption))
        return false;
    }

    boolean this_present_buyKnow = true && this.isSetBuyKnow();
    boolean that_present_buyKnow = true && that.isSetBuyKnow();
    if (this_present_buyKnow || that_present_buyKnow) {
      if (!(this_present_buyKnow && that_present_buyKnow))
        return false;
      if (!this.buyKnow.equals(that.buyKnow))
        return false;
    }

    boolean this_present_introduction = true && this.isSetIntroduction();
    boolean that_present_introduction = true && that.isSetIntroduction();
    if (this_present_introduction || that_present_introduction) {
      if (!(this_present_introduction && that_present_introduction))
        return false;
      if (!this.introduction.equals(that.introduction))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_fullName = true && this.isSetFullName();
    boolean that_present_fullName = true && that.isSetFullName();
    if (this_present_fullName || that_present_fullName) {
      if (!(this_present_fullName && that_present_fullName))
        return false;
      if (!this.fullName.equals(that.fullName))
        return false;
    }

    boolean this_present_deliveryMoney = true;
    boolean that_present_deliveryMoney = true;
    if (this_present_deliveryMoney || that_present_deliveryMoney) {
      if (!(this_present_deliveryMoney && that_present_deliveryMoney))
        return false;
      if (this.deliveryMoney != that.deliveryMoney)
        return false;
    }

    boolean this_present_store = true;
    boolean that_present_store = true;
    if (this_present_store || that_present_store) {
      if (!(this_present_store && that_present_store))
        return false;
      if (this.store != that.store)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_secStore = true;
    list.add(present_secStore);
    if (present_secStore)
      list.add(secStore);

    boolean present_secPrice = true;
    list.add(present_secPrice);
    if (present_secPrice)
      list.add(secPrice);

    boolean present_vipSecPrice = true;
    list.add(present_vipSecPrice);
    if (present_vipSecPrice)
      list.add(vipSecPrice);

    boolean present_startTime = true;
    list.add(present_startTime);
    if (present_startTime)
      list.add(startTime);

    boolean present_endTime = true;
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    boolean present_trueBuyerNumber = true;
    list.add(present_trueBuyerNumber);
    if (present_trueBuyerNumber)
      list.add(trueBuyerNumber);

    boolean present_buyLimit = true;
    list.add(present_buyLimit);
    if (present_buyLimit)
      list.add(buyLimit);

    boolean present_isMarketable = true && (isSetIsMarketable());
    list.add(present_isMarketable);
    if (present_isMarketable)
      list.add(isMarketable);

    boolean present_auditStartOrgCode = true && (isSetAuditStartOrgCode());
    list.add(present_auditStartOrgCode);
    if (present_auditStartOrgCode)
      list.add(auditStartOrgCode);

    boolean present_auditEndOrgCode = true && (isSetAuditEndOrgCode());
    list.add(present_auditEndOrgCode);
    if (present_auditEndOrgCode)
      list.add(auditEndOrgCode);

    boolean present_auditState = true && (isSetAuditState());
    list.add(present_auditState);
    if (present_auditState)
      list.add(auditState);

    boolean present_auditOrgCode = true && (isSetAuditOrgCode());
    list.add(present_auditOrgCode);
    if (present_auditOrgCode)
      list.add(auditOrgCode);

    boolean present_auditStage = true && (isSetAuditStage());
    list.add(present_auditStage);
    if (present_auditStage)
      list.add(auditStage);

    boolean present_reviewStaff = true && (isSetReviewStaff());
    list.add(present_reviewStaff);
    if (present_reviewStaff)
      list.add(reviewStaff);

    boolean present_auditStaff = true && (isSetAuditStaff());
    list.add(present_auditStaff);
    if (present_auditStaff)
      list.add(auditStaff);

    boolean present_auditTime = true;
    list.add(present_auditTime);
    if (present_auditTime)
      list.add(auditTime);

    boolean present_auditComment = true && (isSetAuditComment());
    list.add(present_auditComment);
    if (present_auditComment)
      list.add(auditComment);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_price = true;
    list.add(present_price);
    if (present_price)
      list.add(price);

    boolean present_marketPrice = true;
    list.add(present_marketPrice);
    if (present_marketPrice)
      list.add(marketPrice);

    boolean present_deliveryStartTime = true;
    list.add(present_deliveryStartTime);
    if (present_deliveryStartTime)
      list.add(deliveryStartTime);

    boolean present_deliveryEndTime = true;
    list.add(present_deliveryEndTime);
    if (present_deliveryEndTime)
      list.add(deliveryEndTime);

    boolean present_briefIntroduction = true && (isSetBriefIntroduction());
    list.add(present_briefIntroduction);
    if (present_briefIntroduction)
      list.add(briefIntroduction);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_deliveryOption = true && (isSetDeliveryOption());
    list.add(present_deliveryOption);
    if (present_deliveryOption)
      list.add(deliveryOption);

    boolean present_buyKnow = true && (isSetBuyKnow());
    list.add(present_buyKnow);
    if (present_buyKnow)
      list.add(buyKnow);

    boolean present_introduction = true && (isSetIntroduction());
    list.add(present_introduction);
    if (present_introduction)
      list.add(introduction);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_status = true && (isSetStatus());
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_fullName = true && (isSetFullName());
    list.add(present_fullName);
    if (present_fullName)
      list.add(fullName);

    boolean present_deliveryMoney = true;
    list.add(present_deliveryMoney);
    if (present_deliveryMoney)
      list.add(deliveryMoney);

    boolean present_store = true;
    list.add(present_store);
    if (present_store)
      list.add(store);

    return list.hashCode();
  }

  @Override
  public int compareTo(ProductSeckillVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSecStore()).compareTo(other.isSetSecStore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecStore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secStore, other.secStore);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSecPrice()).compareTo(other.isSetSecPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secPrice, other.secPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipSecPrice()).compareTo(other.isSetVipSecPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipSecPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipSecPrice, other.vipSecPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTrueBuyerNumber()).compareTo(other.isSetTrueBuyerNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrueBuyerNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trueBuyerNumber, other.trueBuyerNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyLimit()).compareTo(other.isSetBuyLimit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyLimit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyLimit, other.buyLimit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsMarketable()).compareTo(other.isSetIsMarketable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsMarketable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isMarketable, other.isMarketable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStartOrgCode()).compareTo(other.isSetAuditStartOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStartOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStartOrgCode, other.auditStartOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditEndOrgCode()).compareTo(other.isSetAuditEndOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditEndOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditEndOrgCode, other.auditEndOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditState()).compareTo(other.isSetAuditState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditState, other.auditState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditOrgCode()).compareTo(other.isSetAuditOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditOrgCode, other.auditOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStage()).compareTo(other.isSetAuditStage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStage, other.auditStage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewStaff()).compareTo(other.isSetReviewStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewStaff, other.reviewStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStaff()).compareTo(other.isSetAuditStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStaff, other.auditStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditTime()).compareTo(other.isSetAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditTime, other.auditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditComment()).compareTo(other.isSetAuditComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditComment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditComment, other.auditComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMarketPrice()).compareTo(other.isSetMarketPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarketPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marketPrice, other.marketPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryStartTime()).compareTo(other.isSetDeliveryStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryStartTime, other.deliveryStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryEndTime()).compareTo(other.isSetDeliveryEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryEndTime, other.deliveryEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBriefIntroduction()).compareTo(other.isSetBriefIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBriefIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.briefIntroduction, other.briefIntroduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryOption()).compareTo(other.isSetDeliveryOption());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryOption()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryOption, other.deliveryOption);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyKnow()).compareTo(other.isSetBuyKnow());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyKnow()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyKnow, other.buyKnow);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntroduction()).compareTo(other.isSetIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.introduction, other.introduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFullName()).compareTo(other.isSetFullName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFullName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fullName, other.fullName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryMoney()).compareTo(other.isSetDeliveryMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryMoney, other.deliveryMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStore()).compareTo(other.isSetStore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.store, other.store);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProductSeckillVo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("secStore:");
    sb.append(this.secStore);
    first = false;
    if (!first) sb.append(", ");
    sb.append("secPrice:");
    sb.append(this.secPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipSecPrice:");
    sb.append(this.vipSecPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trueBuyerNumber:");
    sb.append(this.trueBuyerNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyLimit:");
    sb.append(this.buyLimit);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isMarketable:");
    if (this.isMarketable == null) {
      sb.append("null");
    } else {
      sb.append(this.isMarketable);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStartOrgCode:");
    if (this.auditStartOrgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.auditStartOrgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditEndOrgCode:");
    if (this.auditEndOrgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.auditEndOrgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditState:");
    if (this.auditState == null) {
      sb.append("null");
    } else {
      sb.append(this.auditState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditOrgCode:");
    if (this.auditOrgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.auditOrgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStage:");
    if (this.auditStage == null) {
      sb.append("null");
    } else {
      sb.append(this.auditStage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewStaff:");
    if (this.reviewStaff == null) {
      sb.append("null");
    } else {
      sb.append(this.reviewStaff);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStaff:");
    if (this.auditStaff == null) {
      sb.append("null");
    } else {
      sb.append(this.auditStaff);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditTime:");
    sb.append(this.auditTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditComment:");
    if (this.auditComment == null) {
      sb.append("null");
    } else {
      sb.append(this.auditComment);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    sb.append(this.price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("marketPrice:");
    sb.append(this.marketPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryStartTime:");
    sb.append(this.deliveryStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryEndTime:");
    sb.append(this.deliveryEndTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("briefIntroduction:");
    if (this.briefIntroduction == null) {
      sb.append("null");
    } else {
      sb.append(this.briefIntroduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryOption:");
    if (this.deliveryOption == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryOption);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyKnow:");
    if (this.buyKnow == null) {
      sb.append("null");
    } else {
      sb.append(this.buyKnow);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("introduction:");
    if (this.introduction == null) {
      sb.append("null");
    } else {
      sb.append(this.introduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fullName:");
    if (this.fullName == null) {
      sb.append("null");
    } else {
      sb.append(this.fullName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryMoney:");
    sb.append(this.deliveryMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("store:");
    sb.append(this.store);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductSeckillVoStandardSchemeFactory implements SchemeFactory {
    public ProductSeckillVoStandardScheme getScheme() {
      return new ProductSeckillVoStandardScheme();
    }
  }

  private static class ProductSeckillVoStandardScheme extends StandardScheme<ProductSeckillVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProductSeckillVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SEC_STORE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.secStore = iprot.readI32();
              struct.setSecStoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SEC_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.secPrice = iprot.readDouble();
              struct.setSecPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // VIP_SEC_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.vipSecPrice = iprot.readDouble();
              struct.setVipSecPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TRUE_BUYER_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.trueBuyerNumber = iprot.readI32();
              struct.setTrueBuyerNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // BUY_LIMIT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.buyLimit = iprot.readI32();
              struct.setBuyLimitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_MARKETABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isMarketable = iprot.readString();
              struct.setIsMarketableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // AUDIT_START_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStartOrgCode = iprot.readString();
              struct.setAuditStartOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // AUDIT_END_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditEndOrgCode = iprot.readString();
              struct.setAuditEndOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // AUDIT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditState = iprot.readString();
              struct.setAuditStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // AUDIT_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditOrgCode = iprot.readString();
              struct.setAuditOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // AUDIT_STAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStage = iprot.readString();
              struct.setAuditStageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // REVIEW_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reviewStaff = iprot.readString();
              struct.setReviewStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // AUDIT_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStaff = iprot.readString();
              struct.setAuditStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.auditTime = iprot.readI64();
              struct.setAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // AUDIT_COMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditComment = iprot.readString();
              struct.setAuditCommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.price = iprot.readDouble();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // MARKET_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.marketPrice = iprot.readDouble();
              struct.setMarketPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // DELIVERY_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryStartTime = iprot.readI64();
              struct.setDeliveryStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // DELIVERY_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryEndTime = iprot.readI64();
              struct.setDeliveryEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // BRIEF_INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.briefIntroduction = iprot.readString();
              struct.setBriefIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // DELIVERY_OPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryOption = iprot.readString();
              struct.setDeliveryOptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // BUY_KNOW
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyKnow = iprot.readString();
              struct.setBuyKnowIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.introduction = iprot.readString();
              struct.setIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.status = iprot.readString();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // FULL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fullName = iprot.readString();
              struct.setFullNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // DELIVERY_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.deliveryMoney = iprot.readDouble();
              struct.setDeliveryMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // STORE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.store = iprot.readI32();
              struct.setStoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProductSeckillVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.id);
      oprot.writeFieldEnd();
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SEC_STORE_FIELD_DESC);
      oprot.writeI32(struct.secStore);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SEC_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.secPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VIP_SEC_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.vipSecPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRUE_BUYER_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.trueBuyerNumber);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BUY_LIMIT_FIELD_DESC);
      oprot.writeI32(struct.buyLimit);
      oprot.writeFieldEnd();
      if (struct.isMarketable != null) {
        oprot.writeFieldBegin(IS_MARKETABLE_FIELD_DESC);
        oprot.writeString(struct.isMarketable);
        oprot.writeFieldEnd();
      }
      if (struct.auditStartOrgCode != null) {
        oprot.writeFieldBegin(AUDIT_START_ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.auditStartOrgCode);
        oprot.writeFieldEnd();
      }
      if (struct.auditEndOrgCode != null) {
        oprot.writeFieldBegin(AUDIT_END_ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.auditEndOrgCode);
        oprot.writeFieldEnd();
      }
      if (struct.auditState != null) {
        oprot.writeFieldBegin(AUDIT_STATE_FIELD_DESC);
        oprot.writeString(struct.auditState);
        oprot.writeFieldEnd();
      }
      if (struct.auditOrgCode != null) {
        oprot.writeFieldBegin(AUDIT_ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.auditOrgCode);
        oprot.writeFieldEnd();
      }
      if (struct.auditStage != null) {
        oprot.writeFieldBegin(AUDIT_STAGE_FIELD_DESC);
        oprot.writeString(struct.auditStage);
        oprot.writeFieldEnd();
      }
      if (struct.reviewStaff != null) {
        oprot.writeFieldBegin(REVIEW_STAFF_FIELD_DESC);
        oprot.writeString(struct.reviewStaff);
        oprot.writeFieldEnd();
      }
      if (struct.auditStaff != null) {
        oprot.writeFieldBegin(AUDIT_STAFF_FIELD_DESC);
        oprot.writeString(struct.auditStaff);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AUDIT_TIME_FIELD_DESC);
      oprot.writeI64(struct.auditTime);
      oprot.writeFieldEnd();
      if (struct.auditComment != null) {
        oprot.writeFieldBegin(AUDIT_COMMENT_FIELD_DESC);
        oprot.writeString(struct.auditComment);
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeDouble(struct.price);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MARKET_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.marketPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_START_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_END_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryEndTime);
      oprot.writeFieldEnd();
      if (struct.briefIntroduction != null) {
        oprot.writeFieldBegin(BRIEF_INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.briefIntroduction);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.deliveryOption != null) {
        oprot.writeFieldBegin(DELIVERY_OPTION_FIELD_DESC);
        oprot.writeString(struct.deliveryOption);
        oprot.writeFieldEnd();
      }
      if (struct.buyKnow != null) {
        oprot.writeFieldBegin(BUY_KNOW_FIELD_DESC);
        oprot.writeString(struct.buyKnow);
        oprot.writeFieldEnd();
      }
      if (struct.introduction != null) {
        oprot.writeFieldBegin(INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.introduction);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeString(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      if (struct.fullName != null) {
        oprot.writeFieldBegin(FULL_NAME_FIELD_DESC);
        oprot.writeString(struct.fullName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DELIVERY_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.deliveryMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STORE_FIELD_DESC);
      oprot.writeI32(struct.store);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductSeckillVoTupleSchemeFactory implements SchemeFactory {
    public ProductSeckillVoTupleScheme getScheme() {
      return new ProductSeckillVoTupleScheme();
    }
  }

  private static class ProductSeckillVoTupleScheme extends TupleScheme<ProductSeckillVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProductSeckillVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(2);
      }
      if (struct.isSetProductId()) {
        optionals.set(3);
      }
      if (struct.isSetSecStore()) {
        optionals.set(4);
      }
      if (struct.isSetSecPrice()) {
        optionals.set(5);
      }
      if (struct.isSetVipSecPrice()) {
        optionals.set(6);
      }
      if (struct.isSetStartTime()) {
        optionals.set(7);
      }
      if (struct.isSetEndTime()) {
        optionals.set(8);
      }
      if (struct.isSetTrueBuyerNumber()) {
        optionals.set(9);
      }
      if (struct.isSetBuyLimit()) {
        optionals.set(10);
      }
      if (struct.isSetIsMarketable()) {
        optionals.set(11);
      }
      if (struct.isSetAuditStartOrgCode()) {
        optionals.set(12);
      }
      if (struct.isSetAuditEndOrgCode()) {
        optionals.set(13);
      }
      if (struct.isSetAuditState()) {
        optionals.set(14);
      }
      if (struct.isSetAuditOrgCode()) {
        optionals.set(15);
      }
      if (struct.isSetAuditStage()) {
        optionals.set(16);
      }
      if (struct.isSetReviewStaff()) {
        optionals.set(17);
      }
      if (struct.isSetAuditStaff()) {
        optionals.set(18);
      }
      if (struct.isSetAuditTime()) {
        optionals.set(19);
      }
      if (struct.isSetAuditComment()) {
        optionals.set(20);
      }
      if (struct.isSetType()) {
        optionals.set(21);
      }
      if (struct.isSetName()) {
        optionals.set(22);
      }
      if (struct.isSetPrice()) {
        optionals.set(23);
      }
      if (struct.isSetMarketPrice()) {
        optionals.set(24);
      }
      if (struct.isSetDeliveryStartTime()) {
        optionals.set(25);
      }
      if (struct.isSetDeliveryEndTime()) {
        optionals.set(26);
      }
      if (struct.isSetBriefIntroduction()) {
        optionals.set(27);
      }
      if (struct.isSetPhone()) {
        optionals.set(28);
      }
      if (struct.isSetDeliveryOption()) {
        optionals.set(29);
      }
      if (struct.isSetBuyKnow()) {
        optionals.set(30);
      }
      if (struct.isSetIntroduction()) {
        optionals.set(31);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(32);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(33);
      }
      if (struct.isSetOrgName()) {
        optionals.set(34);
      }
      if (struct.isSetStatus()) {
        optionals.set(35);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(36);
      }
      if (struct.isSetFullName()) {
        optionals.set(37);
      }
      if (struct.isSetDeliveryMoney()) {
        optionals.set(38);
      }
      if (struct.isSetStore()) {
        optionals.set(39);
      }
      oprot.writeBitSet(optionals, 40);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetSecStore()) {
        oprot.writeI32(struct.secStore);
      }
      if (struct.isSetSecPrice()) {
        oprot.writeDouble(struct.secPrice);
      }
      if (struct.isSetVipSecPrice()) {
        oprot.writeDouble(struct.vipSecPrice);
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetTrueBuyerNumber()) {
        oprot.writeI32(struct.trueBuyerNumber);
      }
      if (struct.isSetBuyLimit()) {
        oprot.writeI32(struct.buyLimit);
      }
      if (struct.isSetIsMarketable()) {
        oprot.writeString(struct.isMarketable);
      }
      if (struct.isSetAuditStartOrgCode()) {
        oprot.writeString(struct.auditStartOrgCode);
      }
      if (struct.isSetAuditEndOrgCode()) {
        oprot.writeString(struct.auditEndOrgCode);
      }
      if (struct.isSetAuditState()) {
        oprot.writeString(struct.auditState);
      }
      if (struct.isSetAuditOrgCode()) {
        oprot.writeString(struct.auditOrgCode);
      }
      if (struct.isSetAuditStage()) {
        oprot.writeString(struct.auditStage);
      }
      if (struct.isSetReviewStaff()) {
        oprot.writeString(struct.reviewStaff);
      }
      if (struct.isSetAuditStaff()) {
        oprot.writeString(struct.auditStaff);
      }
      if (struct.isSetAuditTime()) {
        oprot.writeI64(struct.auditTime);
      }
      if (struct.isSetAuditComment()) {
        oprot.writeString(struct.auditComment);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetPrice()) {
        oprot.writeDouble(struct.price);
      }
      if (struct.isSetMarketPrice()) {
        oprot.writeDouble(struct.marketPrice);
      }
      if (struct.isSetDeliveryStartTime()) {
        oprot.writeI64(struct.deliveryStartTime);
      }
      if (struct.isSetDeliveryEndTime()) {
        oprot.writeI64(struct.deliveryEndTime);
      }
      if (struct.isSetBriefIntroduction()) {
        oprot.writeString(struct.briefIntroduction);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetDeliveryOption()) {
        oprot.writeString(struct.deliveryOption);
      }
      if (struct.isSetBuyKnow()) {
        oprot.writeString(struct.buyKnow);
      }
      if (struct.isSetIntroduction()) {
        oprot.writeString(struct.introduction);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetStatus()) {
        oprot.writeString(struct.status);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetFullName()) {
        oprot.writeString(struct.fullName);
      }
      if (struct.isSetDeliveryMoney()) {
        oprot.writeDouble(struct.deliveryMoney);
      }
      if (struct.isSetStore()) {
        oprot.writeI32(struct.store);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProductSeckillVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(40);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.secStore = iprot.readI32();
        struct.setSecStoreIsSet(true);
      }
      if (incoming.get(5)) {
        struct.secPrice = iprot.readDouble();
        struct.setSecPriceIsSet(true);
      }
      if (incoming.get(6)) {
        struct.vipSecPrice = iprot.readDouble();
        struct.setVipSecPriceIsSet(true);
      }
      if (incoming.get(7)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.trueBuyerNumber = iprot.readI32();
        struct.setTrueBuyerNumberIsSet(true);
      }
      if (incoming.get(10)) {
        struct.buyLimit = iprot.readI32();
        struct.setBuyLimitIsSet(true);
      }
      if (incoming.get(11)) {
        struct.isMarketable = iprot.readString();
        struct.setIsMarketableIsSet(true);
      }
      if (incoming.get(12)) {
        struct.auditStartOrgCode = iprot.readString();
        struct.setAuditStartOrgCodeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.auditEndOrgCode = iprot.readString();
        struct.setAuditEndOrgCodeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.auditState = iprot.readString();
        struct.setAuditStateIsSet(true);
      }
      if (incoming.get(15)) {
        struct.auditOrgCode = iprot.readString();
        struct.setAuditOrgCodeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.auditStage = iprot.readString();
        struct.setAuditStageIsSet(true);
      }
      if (incoming.get(17)) {
        struct.reviewStaff = iprot.readString();
        struct.setReviewStaffIsSet(true);
      }
      if (incoming.get(18)) {
        struct.auditStaff = iprot.readString();
        struct.setAuditStaffIsSet(true);
      }
      if (incoming.get(19)) {
        struct.auditTime = iprot.readI64();
        struct.setAuditTimeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.auditComment = iprot.readString();
        struct.setAuditCommentIsSet(true);
      }
      if (incoming.get(21)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(23)) {
        struct.price = iprot.readDouble();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(24)) {
        struct.marketPrice = iprot.readDouble();
        struct.setMarketPriceIsSet(true);
      }
      if (incoming.get(25)) {
        struct.deliveryStartTime = iprot.readI64();
        struct.setDeliveryStartTimeIsSet(true);
      }
      if (incoming.get(26)) {
        struct.deliveryEndTime = iprot.readI64();
        struct.setDeliveryEndTimeIsSet(true);
      }
      if (incoming.get(27)) {
        struct.briefIntroduction = iprot.readString();
        struct.setBriefIntroductionIsSet(true);
      }
      if (incoming.get(28)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(29)) {
        struct.deliveryOption = iprot.readString();
        struct.setDeliveryOptionIsSet(true);
      }
      if (incoming.get(30)) {
        struct.buyKnow = iprot.readString();
        struct.setBuyKnowIsSet(true);
      }
      if (incoming.get(31)) {
        struct.introduction = iprot.readString();
        struct.setIntroductionIsSet(true);
      }
      if (incoming.get(32)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(33)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(34)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(35)) {
        struct.status = iprot.readString();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(36)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(37)) {
        struct.fullName = iprot.readString();
        struct.setFullNameIsSet(true);
      }
      if (incoming.get(38)) {
        struct.deliveryMoney = iprot.readDouble();
        struct.setDeliveryMoneyIsSet(true);
      }
      if (incoming.get(39)) {
        struct.store = iprot.readI32();
        struct.setStoreIsSet(true);
      }
    }
  }

}

