/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * ProductVo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ProductVo implements org.apache.thrift.TBase<ProductVo, ProductVo._Fields>, java.io.Serializable, Cloneable, Comparable<ProductVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProductVo");

  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField IS_MARKETABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isMarketable", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField RACK_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("rackTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField DELIVERY_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryOption", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField FULL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("fullName", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.DOUBLE, (short)12);
  private static final org.apache.thrift.protocol.TField COST_FIELD_DESC = new org.apache.thrift.protocol.TField("cost", org.apache.thrift.protocol.TType.DOUBLE, (short)13);
  private static final org.apache.thrift.protocol.TField MARKET_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("marketPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)14);
  private static final org.apache.thrift.protocol.TField WEIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("weight", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField WEIGHT_UNIT_FIELD_DESC = new org.apache.thrift.protocol.TField("weightUnit", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField STORE_FIELD_DESC = new org.apache.thrift.protocol.TField("store", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField SELL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("sellCount", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField ORDER_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderValue", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField IS_BEST_FIELD_DESC = new org.apache.thrift.protocol.TField("isBest", org.apache.thrift.protocol.TType.BOOL, (short)20);
  private static final org.apache.thrift.protocol.TField IS_LIMIT_FIELD_DESC = new org.apache.thrift.protocol.TField("isLimit", org.apache.thrift.protocol.TType.BOOL, (short)21);
  private static final org.apache.thrift.protocol.TField POINT_FIELD_DESC = new org.apache.thrift.protocol.TField("point", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField BRIEF_INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("briefIntroduction", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("introduction", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField BUY_KNOW_FIELD_DESC = new org.apache.thrift.protocol.TField("buyKnow", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField AUDIT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditState", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField AUDIT_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditOrgCode", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField AUDIT_STAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStage", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField REVIEW_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewStaff", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField AUDIT_STAFF_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStaff", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField STORE_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("storeCount", org.apache.thrift.protocol.TType.I32, (short)31);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)32);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)33);
  private static final org.apache.thrift.protocol.TField DELIVERY_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)34);
  private static final org.apache.thrift.protocol.TField EXPIRE_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("expireStartTime", org.apache.thrift.protocol.TType.I64, (short)35);
  private static final org.apache.thrift.protocol.TField EXPIRE_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("expireEndTime", org.apache.thrift.protocol.TType.I64, (short)36);
  private static final org.apache.thrift.protocol.TField TRUE_BUYER_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("trueBuyerNumber", org.apache.thrift.protocol.TType.I32, (short)37);
  private static final org.apache.thrift.protocol.TField VIRTUAL_BUYER_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("virtualBuyerNumber", org.apache.thrift.protocol.TType.I32, (short)38);
  private static final org.apache.thrift.protocol.TField PRODUCT_SUPPLIER_FIELD_DESC = new org.apache.thrift.protocol.TField("productSupplier", org.apache.thrift.protocol.TType.STRING, (short)39);
  private static final org.apache.thrift.protocol.TField MAX_PER_OUTLET_FIELD_DESC = new org.apache.thrift.protocol.TField("maxPerOutlet", org.apache.thrift.protocol.TType.I32, (short)40);
  private static final org.apache.thrift.protocol.TField DELIVERY_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryStartTime", org.apache.thrift.protocol.TType.I64, (short)41);
  private static final org.apache.thrift.protocol.TField DELIVERY_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryEndTime", org.apache.thrift.protocol.TType.I64, (short)42);
  private static final org.apache.thrift.protocol.TField CLUSTER_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("clusterState", org.apache.thrift.protocol.TType.BOOL, (short)43);
  private static final org.apache.thrift.protocol.TField CLUSTER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("clusterType", org.apache.thrift.protocol.TType.BOOL, (short)44);
  private static final org.apache.thrift.protocol.TField DOWN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("downTime", org.apache.thrift.protocol.TType.I64, (short)45);
  private static final org.apache.thrift.protocol.TField AUDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("auditTime", org.apache.thrift.protocol.TType.I64, (short)46);
  private static final org.apache.thrift.protocol.TField AUDIT_COMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("auditComment", org.apache.thrift.protocol.TType.STRING, (short)47);
  private static final org.apache.thrift.protocol.TField IS_SECKILL_FIELD_DESC = new org.apache.thrift.protocol.TField("isSeckill", org.apache.thrift.protocol.TType.STRING, (short)48);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)49);
  private static final org.apache.thrift.protocol.TField AUDIT_START_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStartOrgCode", org.apache.thrift.protocol.TType.STRING, (short)50);
  private static final org.apache.thrift.protocol.TField AUDIT_END_ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auditEndOrgCode", org.apache.thrift.protocol.TType.STRING, (short)51);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)52);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)53);
  private static final org.apache.thrift.protocol.TField CONTRACT_ENDTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("contractEndtime", org.apache.thrift.protocol.TType.I64, (short)54);
  private static final org.apache.thrift.protocol.TField SERVER_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("serverTime", org.apache.thrift.protocol.TType.I64, (short)55);
  private static final org.apache.thrift.protocol.TField SEC_STORE_FIELD_DESC = new org.apache.thrift.protocol.TField("secStore", org.apache.thrift.protocol.TType.I32, (short)56);
  private static final org.apache.thrift.protocol.TField SEC_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("secStartTime", org.apache.thrift.protocol.TType.I64, (short)57);
  private static final org.apache.thrift.protocol.TField SEC_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("secEndTime", org.apache.thrift.protocol.TType.I64, (short)58);
  private static final org.apache.thrift.protocol.TField IS_POINT_FIELD_DESC = new org.apache.thrift.protocol.TField("isPoint", org.apache.thrift.protocol.TType.BOOL, (short)59);
  private static final org.apache.thrift.protocol.TField IS_VIP_FIELD_DESC = new org.apache.thrift.protocol.TField("isVip", org.apache.thrift.protocol.TType.BOOL, (short)60);
  private static final org.apache.thrift.protocol.TField VIP_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("vipPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)61);
  private static final org.apache.thrift.protocol.TField CODE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("codeUrl", org.apache.thrift.protocol.TType.STRING, (short)62);
  private static final org.apache.thrift.protocol.TField CLIENT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("clientName", org.apache.thrift.protocol.TType.STRING, (short)63);
  private static final org.apache.thrift.protocol.TField IS_RECOMMEND_FIELD_DESC = new org.apache.thrift.protocol.TField("isRecommend", org.apache.thrift.protocol.TType.BOOL, (short)64);
  private static final org.apache.thrift.protocol.TField IS_NEW_FIELD_DESC = new org.apache.thrift.protocol.TField("isNew", org.apache.thrift.protocol.TType.BOOL, (short)65);
  private static final org.apache.thrift.protocol.TField IS_HOT_FIELD_DESC = new org.apache.thrift.protocol.TField("isHot", org.apache.thrift.protocol.TType.BOOL, (short)66);
  private static final org.apache.thrift.protocol.TField IS_BATCH_DELIVERY_FIELD_DESC = new org.apache.thrift.protocol.TField("isBatchDelivery", org.apache.thrift.protocol.TType.BOOL, (short)67);
  private static final org.apache.thrift.protocol.TField DELIVERY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryTime", org.apache.thrift.protocol.TType.I64, (short)68);
  private static final org.apache.thrift.protocol.TField AFTER_SHOP_FIELD_DESC = new org.apache.thrift.protocol.TField("afterShop", org.apache.thrift.protocol.TType.STRING, (short)69);
  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)70);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProductVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProductVoTupleSchemeFactory());
  }

  /**
   * 客户端id
   */
  public String clientId; // required
  /**
   * 商户ID
   */
  public String merchantId; // required
  /**
   * 商品对应商户所属机构编号
   */
  public String orgCode; // required
  /**
   * 商品id
   */
  public String productId; // required
  /**
   * 是否上架 0未上架,1已上架,2已下架,3已删除
   */
  public String isMarketable; // required
  /**
   * 上架时间
   */
  public long rackTime; // required
  /**
   * createTime
   */
  public long createTime; // required
  /**
   * 商品类型
   */
  public String type; // required
  /**
   * 0送货上门,1网点自提,2配送或自提
   */
  public String deliveryOption; // required
  /**
   * 商品名
   */
  public String name; // required
  /**
   * 商品全名
   */
  public String fullName; // required
  /**
   * 销售价
   */
  public double price; // required
  /**
   * 成本价
   */
  public double cost; // required
  /**
   * 市场价
   */
  public double marketPrice; // required
  /**
   * 商品重量
   */
  public String weight; // required
  /**
   * 重量单位
   */
  public String weightUnit; // required
  /**
   * 商品库存数量
   */
  public int store; // required
  /**
   * 销售数量
   */
  public int sellCount; // required
  /**
   * 排序(1-10)
   */
  public int orderValue; // required
  /**
   * 是否为精品
   */
  public boolean isBest; // required
  /**
   * 是否限购
   */
  public boolean isLimit; // required
  /**
   * 评分
   */
  public int point; // required
  /**
   * 简介
   */
  public String briefIntroduction; // required
  /**
   * 介绍
   */
  public String introduction; // required
  /**
   * 商品须知
   */
  public String buyKnow; // required
  /**
   * 商品审核状态 ("0待审核",1审核通过,2审核不通过,3未提交)
   */
  public String auditState; // required
  /**
   * 待审核机构编号
   */
  public String auditOrgCode; // required
  /**
   * 审核步骤
   */
  public String auditStage; // required
  /**
   * 复核人
   */
  public String reviewStaff; // required
  /**
   * 审核人
   */
  public String auditStaff; // required
  /**
   * 用户收藏数
   */
  public int storeCount; // required
  /**
   * 团购或预售有效期开始
   */
  public long startTime; // required
  /**
   * 团购或预售有效期结束
   */
  public long endTime; // required
  /**
   * 运费
   */
  public double deliveryMoney; // required
  /**
   * 团购或预售券有效起始日
   */
  public long expireStartTime; // required
  /**
   * 团购或预售券有效结束日
   */
  public long expireEndTime; // required
  /**
   * 团购或预售真实购买数量
   */
  public int trueBuyerNumber; // required
  /**
   * 团购或预售虚拟购买数量
   */
  public int virtualBuyerNumber; // required
  /**
   * 供货商
   */
  public String productSupplier; // required
  /**
   * 自提商品每家门店最大支持数量
   */
  public int maxPerOutlet; // required
  /**
   * 提货-开始
   */
  public long deliveryStartTime; // required
  /**
   * 提货-结束
   */
  public long deliveryEndTime; // required
  /**
   * 是否成功成团
   */
  public boolean clusterState; // required
  /**
   * 成团类型
   */
  public boolean clusterType; // required
  /**
   * 下架时间
   */
  public long downTime; // required
  /**
   * 审核时间
   */
  public long auditTime; // required
  /**
   * 审核备注
   */
  public String auditComment; // required
  /**
   * 是否秒杀 0非秒杀,1秒杀,2秒杀未上架
   */
  public String isSeckill; // required
  /**
   * 商户名称
   */
  public String merchantName; // required
  /**
   * 起始审核机构编号
   */
  public String auditStartOrgCode; // required
  /**
   * 最终审核机编号
   */
  public String auditEndOrgCode; // required
  /**
   * 机构名称
   */
  public String orgName; // required
  /**
   * 商户电话
   */
  public String phone; // required
  /**
   * 签约到期时间
   */
  public long contractEndtime; // required
  /**
   * 服务器时间
   */
  public long serverTime; // required
  /**
   * 商品秒杀库存数量
   */
  public int secStore; // required
  /**
   * 秒杀开始时间
   */
  public long secStartTime; // required
  /**
   * 秒杀结束时间
   */
  public long secEndTime; // required
  /**
   * 是否参与送积分活动
   */
  public boolean isPoint; // required
  /**
   * 是否参与VIP规则活动
   */
  public boolean isVip; // required
  /**
   * VIP价
   */
  public double vipPrice; // required
  /**
   * 二维码地址
   */
  public String codeUrl; // required
  /**
   * 客户端名称
   */
  public String clientName; // required
  /**
   * 是否推荐
   */
  public boolean isRecommend; // required
  /**
   * 是否新品
   */
  public boolean isNew; // required
  /**
   * 是否热销
   */
  public boolean isHot; // required
  /**
   * 是否批量发货
   */
  public boolean isBatchDelivery; // required
  /**
   * 预计发货时间
   */
  public long deliveryTime; // required
  /**
   * 售后说明
   */
  public String afterShop; // required
  /**
   * 商品id
   */
  public long id; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 客户端id
     */
    CLIENT_ID((short)1, "clientId"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)2, "merchantId"),
    /**
     * 商品对应商户所属机构编号
     */
    ORG_CODE((short)3, "orgCode"),
    /**
     * 商品id
     */
    PRODUCT_ID((short)4, "productId"),
    /**
     * 是否上架 0未上架,1已上架,2已下架,3已删除
     */
    IS_MARKETABLE((short)5, "isMarketable"),
    /**
     * 上架时间
     */
    RACK_TIME((short)6, "rackTime"),
    /**
     * createTime
     */
    CREATE_TIME((short)7, "createTime"),
    /**
     * 商品类型
     */
    TYPE((short)8, "type"),
    /**
     * 0送货上门,1网点自提,2配送或自提
     */
    DELIVERY_OPTION((short)9, "deliveryOption"),
    /**
     * 商品名
     */
    NAME((short)10, "name"),
    /**
     * 商品全名
     */
    FULL_NAME((short)11, "fullName"),
    /**
     * 销售价
     */
    PRICE((short)12, "price"),
    /**
     * 成本价
     */
    COST((short)13, "cost"),
    /**
     * 市场价
     */
    MARKET_PRICE((short)14, "marketPrice"),
    /**
     * 商品重量
     */
    WEIGHT((short)15, "weight"),
    /**
     * 重量单位
     */
    WEIGHT_UNIT((short)16, "weightUnit"),
    /**
     * 商品库存数量
     */
    STORE((short)17, "store"),
    /**
     * 销售数量
     */
    SELL_COUNT((short)18, "sellCount"),
    /**
     * 排序(1-10)
     */
    ORDER_VALUE((short)19, "orderValue"),
    /**
     * 是否为精品
     */
    IS_BEST((short)20, "isBest"),
    /**
     * 是否限购
     */
    IS_LIMIT((short)21, "isLimit"),
    /**
     * 评分
     */
    POINT((short)22, "point"),
    /**
     * 简介
     */
    BRIEF_INTRODUCTION((short)23, "briefIntroduction"),
    /**
     * 介绍
     */
    INTRODUCTION((short)24, "introduction"),
    /**
     * 商品须知
     */
    BUY_KNOW((short)25, "buyKnow"),
    /**
     * 商品审核状态 ("0待审核",1审核通过,2审核不通过,3未提交)
     */
    AUDIT_STATE((short)26, "auditState"),
    /**
     * 待审核机构编号
     */
    AUDIT_ORG_CODE((short)27, "auditOrgCode"),
    /**
     * 审核步骤
     */
    AUDIT_STAGE((short)28, "auditStage"),
    /**
     * 复核人
     */
    REVIEW_STAFF((short)29, "reviewStaff"),
    /**
     * 审核人
     */
    AUDIT_STAFF((short)30, "auditStaff"),
    /**
     * 用户收藏数
     */
    STORE_COUNT((short)31, "storeCount"),
    /**
     * 团购或预售有效期开始
     */
    START_TIME((short)32, "startTime"),
    /**
     * 团购或预售有效期结束
     */
    END_TIME((short)33, "endTime"),
    /**
     * 运费
     */
    DELIVERY_MONEY((short)34, "deliveryMoney"),
    /**
     * 团购或预售券有效起始日
     */
    EXPIRE_START_TIME((short)35, "expireStartTime"),
    /**
     * 团购或预售券有效结束日
     */
    EXPIRE_END_TIME((short)36, "expireEndTime"),
    /**
     * 团购或预售真实购买数量
     */
    TRUE_BUYER_NUMBER((short)37, "trueBuyerNumber"),
    /**
     * 团购或预售虚拟购买数量
     */
    VIRTUAL_BUYER_NUMBER((short)38, "virtualBuyerNumber"),
    /**
     * 供货商
     */
    PRODUCT_SUPPLIER((short)39, "productSupplier"),
    /**
     * 自提商品每家门店最大支持数量
     */
    MAX_PER_OUTLET((short)40, "maxPerOutlet"),
    /**
     * 提货-开始
     */
    DELIVERY_START_TIME((short)41, "deliveryStartTime"),
    /**
     * 提货-结束
     */
    DELIVERY_END_TIME((short)42, "deliveryEndTime"),
    /**
     * 是否成功成团
     */
    CLUSTER_STATE((short)43, "clusterState"),
    /**
     * 成团类型
     */
    CLUSTER_TYPE((short)44, "clusterType"),
    /**
     * 下架时间
     */
    DOWN_TIME((short)45, "downTime"),
    /**
     * 审核时间
     */
    AUDIT_TIME((short)46, "auditTime"),
    /**
     * 审核备注
     */
    AUDIT_COMMENT((short)47, "auditComment"),
    /**
     * 是否秒杀 0非秒杀,1秒杀,2秒杀未上架
     */
    IS_SECKILL((short)48, "isSeckill"),
    /**
     * 商户名称
     */
    MERCHANT_NAME((short)49, "merchantName"),
    /**
     * 起始审核机构编号
     */
    AUDIT_START_ORG_CODE((short)50, "auditStartOrgCode"),
    /**
     * 最终审核机编号
     */
    AUDIT_END_ORG_CODE((short)51, "auditEndOrgCode"),
    /**
     * 机构名称
     */
    ORG_NAME((short)52, "orgName"),
    /**
     * 商户电话
     */
    PHONE((short)53, "phone"),
    /**
     * 签约到期时间
     */
    CONTRACT_ENDTIME((short)54, "contractEndtime"),
    /**
     * 服务器时间
     */
    SERVER_TIME((short)55, "serverTime"),
    /**
     * 商品秒杀库存数量
     */
    SEC_STORE((short)56, "secStore"),
    /**
     * 秒杀开始时间
     */
    SEC_START_TIME((short)57, "secStartTime"),
    /**
     * 秒杀结束时间
     */
    SEC_END_TIME((short)58, "secEndTime"),
    /**
     * 是否参与送积分活动
     */
    IS_POINT((short)59, "isPoint"),
    /**
     * 是否参与VIP规则活动
     */
    IS_VIP((short)60, "isVip"),
    /**
     * VIP价
     */
    VIP_PRICE((short)61, "vipPrice"),
    /**
     * 二维码地址
     */
    CODE_URL((short)62, "codeUrl"),
    /**
     * 客户端名称
     */
    CLIENT_NAME((short)63, "clientName"),
    /**
     * 是否推荐
     */
    IS_RECOMMEND((short)64, "isRecommend"),
    /**
     * 是否新品
     */
    IS_NEW((short)65, "isNew"),
    /**
     * 是否热销
     */
    IS_HOT((short)66, "isHot"),
    /**
     * 是否批量发货
     */
    IS_BATCH_DELIVERY((short)67, "isBatchDelivery"),
    /**
     * 预计发货时间
     */
    DELIVERY_TIME((short)68, "deliveryTime"),
    /**
     * 售后说明
     */
    AFTER_SHOP((short)69, "afterShop"),
    /**
     * 商品id
     */
    ID((short)70, "id");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CLIENT_ID
          return CLIENT_ID;
        case 2: // MERCHANT_ID
          return MERCHANT_ID;
        case 3: // ORG_CODE
          return ORG_CODE;
        case 4: // PRODUCT_ID
          return PRODUCT_ID;
        case 5: // IS_MARKETABLE
          return IS_MARKETABLE;
        case 6: // RACK_TIME
          return RACK_TIME;
        case 7: // CREATE_TIME
          return CREATE_TIME;
        case 8: // TYPE
          return TYPE;
        case 9: // DELIVERY_OPTION
          return DELIVERY_OPTION;
        case 10: // NAME
          return NAME;
        case 11: // FULL_NAME
          return FULL_NAME;
        case 12: // PRICE
          return PRICE;
        case 13: // COST
          return COST;
        case 14: // MARKET_PRICE
          return MARKET_PRICE;
        case 15: // WEIGHT
          return WEIGHT;
        case 16: // WEIGHT_UNIT
          return WEIGHT_UNIT;
        case 17: // STORE
          return STORE;
        case 18: // SELL_COUNT
          return SELL_COUNT;
        case 19: // ORDER_VALUE
          return ORDER_VALUE;
        case 20: // IS_BEST
          return IS_BEST;
        case 21: // IS_LIMIT
          return IS_LIMIT;
        case 22: // POINT
          return POINT;
        case 23: // BRIEF_INTRODUCTION
          return BRIEF_INTRODUCTION;
        case 24: // INTRODUCTION
          return INTRODUCTION;
        case 25: // BUY_KNOW
          return BUY_KNOW;
        case 26: // AUDIT_STATE
          return AUDIT_STATE;
        case 27: // AUDIT_ORG_CODE
          return AUDIT_ORG_CODE;
        case 28: // AUDIT_STAGE
          return AUDIT_STAGE;
        case 29: // REVIEW_STAFF
          return REVIEW_STAFF;
        case 30: // AUDIT_STAFF
          return AUDIT_STAFF;
        case 31: // STORE_COUNT
          return STORE_COUNT;
        case 32: // START_TIME
          return START_TIME;
        case 33: // END_TIME
          return END_TIME;
        case 34: // DELIVERY_MONEY
          return DELIVERY_MONEY;
        case 35: // EXPIRE_START_TIME
          return EXPIRE_START_TIME;
        case 36: // EXPIRE_END_TIME
          return EXPIRE_END_TIME;
        case 37: // TRUE_BUYER_NUMBER
          return TRUE_BUYER_NUMBER;
        case 38: // VIRTUAL_BUYER_NUMBER
          return VIRTUAL_BUYER_NUMBER;
        case 39: // PRODUCT_SUPPLIER
          return PRODUCT_SUPPLIER;
        case 40: // MAX_PER_OUTLET
          return MAX_PER_OUTLET;
        case 41: // DELIVERY_START_TIME
          return DELIVERY_START_TIME;
        case 42: // DELIVERY_END_TIME
          return DELIVERY_END_TIME;
        case 43: // CLUSTER_STATE
          return CLUSTER_STATE;
        case 44: // CLUSTER_TYPE
          return CLUSTER_TYPE;
        case 45: // DOWN_TIME
          return DOWN_TIME;
        case 46: // AUDIT_TIME
          return AUDIT_TIME;
        case 47: // AUDIT_COMMENT
          return AUDIT_COMMENT;
        case 48: // IS_SECKILL
          return IS_SECKILL;
        case 49: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 50: // AUDIT_START_ORG_CODE
          return AUDIT_START_ORG_CODE;
        case 51: // AUDIT_END_ORG_CODE
          return AUDIT_END_ORG_CODE;
        case 52: // ORG_NAME
          return ORG_NAME;
        case 53: // PHONE
          return PHONE;
        case 54: // CONTRACT_ENDTIME
          return CONTRACT_ENDTIME;
        case 55: // SERVER_TIME
          return SERVER_TIME;
        case 56: // SEC_STORE
          return SEC_STORE;
        case 57: // SEC_START_TIME
          return SEC_START_TIME;
        case 58: // SEC_END_TIME
          return SEC_END_TIME;
        case 59: // IS_POINT
          return IS_POINT;
        case 60: // IS_VIP
          return IS_VIP;
        case 61: // VIP_PRICE
          return VIP_PRICE;
        case 62: // CODE_URL
          return CODE_URL;
        case 63: // CLIENT_NAME
          return CLIENT_NAME;
        case 64: // IS_RECOMMEND
          return IS_RECOMMEND;
        case 65: // IS_NEW
          return IS_NEW;
        case 66: // IS_HOT
          return IS_HOT;
        case 67: // IS_BATCH_DELIVERY
          return IS_BATCH_DELIVERY;
        case 68: // DELIVERY_TIME
          return DELIVERY_TIME;
        case 69: // AFTER_SHOP
          return AFTER_SHOP;
        case 70: // ID
          return ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RACKTIME_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __PRICE_ISSET_ID = 2;
  private static final int __COST_ISSET_ID = 3;
  private static final int __MARKETPRICE_ISSET_ID = 4;
  private static final int __STORE_ISSET_ID = 5;
  private static final int __SELLCOUNT_ISSET_ID = 6;
  private static final int __ORDERVALUE_ISSET_ID = 7;
  private static final int __ISBEST_ISSET_ID = 8;
  private static final int __ISLIMIT_ISSET_ID = 9;
  private static final int __POINT_ISSET_ID = 10;
  private static final int __STORECOUNT_ISSET_ID = 11;
  private static final int __STARTTIME_ISSET_ID = 12;
  private static final int __ENDTIME_ISSET_ID = 13;
  private static final int __DELIVERYMONEY_ISSET_ID = 14;
  private static final int __EXPIRESTARTTIME_ISSET_ID = 15;
  private static final int __EXPIREENDTIME_ISSET_ID = 16;
  private static final int __TRUEBUYERNUMBER_ISSET_ID = 17;
  private static final int __VIRTUALBUYERNUMBER_ISSET_ID = 18;
  private static final int __MAXPEROUTLET_ISSET_ID = 19;
  private static final int __DELIVERYSTARTTIME_ISSET_ID = 20;
  private static final int __DELIVERYENDTIME_ISSET_ID = 21;
  private static final int __CLUSTERSTATE_ISSET_ID = 22;
  private static final int __CLUSTERTYPE_ISSET_ID = 23;
  private static final int __DOWNTIME_ISSET_ID = 24;
  private static final int __AUDITTIME_ISSET_ID = 25;
  private static final int __CONTRACTENDTIME_ISSET_ID = 26;
  private static final int __SERVERTIME_ISSET_ID = 27;
  private static final int __SECSTORE_ISSET_ID = 28;
  private static final int __SECSTARTTIME_ISSET_ID = 29;
  private static final int __SECENDTIME_ISSET_ID = 30;
  private static final int __ISPOINT_ISSET_ID = 31;
  private static final int __ISVIP_ISSET_ID = 32;
  private static final int __VIPPRICE_ISSET_ID = 33;
  private static final int __ISRECOMMEND_ISSET_ID = 34;
  private static final int __ISNEW_ISSET_ID = 35;
  private static final int __ISHOT_ISSET_ID = 36;
  private static final int __ISBATCHDELIVERY_ISSET_ID = 37;
  private static final int __DELIVERYTIME_ISSET_ID = 38;
  private static final int __ID_ISSET_ID = 39;
  private long __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_MARKETABLE, new org.apache.thrift.meta_data.FieldMetaData("isMarketable", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RACK_TIME, new org.apache.thrift.meta_data.FieldMetaData("rackTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELIVERY_OPTION, new org.apache.thrift.meta_data.FieldMetaData("deliveryOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FULL_NAME, new org.apache.thrift.meta_data.FieldMetaData("fullName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.COST, new org.apache.thrift.meta_data.FieldMetaData("cost", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MARKET_PRICE, new org.apache.thrift.meta_data.FieldMetaData("marketPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.WEIGHT, new org.apache.thrift.meta_data.FieldMetaData("weight", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEIGHT_UNIT, new org.apache.thrift.meta_data.FieldMetaData("weightUnit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STORE, new org.apache.thrift.meta_data.FieldMetaData("store", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SELL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("sellCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORDER_VALUE, new org.apache.thrift.meta_data.FieldMetaData("orderValue", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_BEST, new org.apache.thrift.meta_data.FieldMetaData("isBest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_LIMIT, new org.apache.thrift.meta_data.FieldMetaData("isLimit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.POINT, new org.apache.thrift.meta_data.FieldMetaData("point", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BRIEF_INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("briefIntroduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("introduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUY_KNOW, new org.apache.thrift.meta_data.FieldMetaData("buyKnow", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STATE, new org.apache.thrift.meta_data.FieldMetaData("auditState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditOrgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STAGE, new org.apache.thrift.meta_data.FieldMetaData("auditStage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REVIEW_STAFF, new org.apache.thrift.meta_data.FieldMetaData("reviewStaff", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STAFF, new org.apache.thrift.meta_data.FieldMetaData("auditStaff", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STORE_COUNT, new org.apache.thrift.meta_data.FieldMetaData("storeCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DELIVERY_MONEY, new org.apache.thrift.meta_data.FieldMetaData("deliveryMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.EXPIRE_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("expireStartTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.EXPIRE_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("expireEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TRUE_BUYER_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("trueBuyerNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VIRTUAL_BUYER_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("virtualBuyerNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT_SUPPLIER, new org.apache.thrift.meta_data.FieldMetaData("productSupplier", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAX_PER_OUTLET, new org.apache.thrift.meta_data.FieldMetaData("maxPerOutlet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DELIVERY_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryStartTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DELIVERY_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLUSTER_STATE, new org.apache.thrift.meta_data.FieldMetaData("clusterState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CLUSTER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("clusterType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DOWN_TIME, new org.apache.thrift.meta_data.FieldMetaData("downTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AUDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("auditTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AUDIT_COMMENT, new org.apache.thrift.meta_data.FieldMetaData("auditComment", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_SECKILL, new org.apache.thrift.meta_data.FieldMetaData("isSeckill", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_START_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditStartOrgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_END_ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("auditEndOrgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTRACT_ENDTIME, new org.apache.thrift.meta_data.FieldMetaData("contractEndtime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SERVER_TIME, new org.apache.thrift.meta_data.FieldMetaData("serverTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEC_STORE, new org.apache.thrift.meta_data.FieldMetaData("secStore", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SEC_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("secStartTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEC_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("secEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.IS_POINT, new org.apache.thrift.meta_data.FieldMetaData("isPoint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_VIP, new org.apache.thrift.meta_data.FieldMetaData("isVip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.VIP_PRICE, new org.apache.thrift.meta_data.FieldMetaData("vipPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CODE_URL, new org.apache.thrift.meta_data.FieldMetaData("codeUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_NAME, new org.apache.thrift.meta_data.FieldMetaData("clientName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_RECOMMEND, new org.apache.thrift.meta_data.FieldMetaData("isRecommend", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_NEW, new org.apache.thrift.meta_data.FieldMetaData("isNew", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_HOT, new org.apache.thrift.meta_data.FieldMetaData("isHot", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_BATCH_DELIVERY, new org.apache.thrift.meta_data.FieldMetaData("isBatchDelivery", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DELIVERY_TIME, new org.apache.thrift.meta_data.FieldMetaData("deliveryTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AFTER_SHOP, new org.apache.thrift.meta_data.FieldMetaData("afterShop", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProductVo.class, metaDataMap);
  }

  public ProductVo() {
  }

  public ProductVo(
    String clientId,
    String merchantId,
    String orgCode,
    String productId,
    String isMarketable,
    long rackTime,
    long createTime,
    String type,
    String deliveryOption,
    String name,
    String fullName,
    double price,
    double cost,
    double marketPrice,
    String weight,
    String weightUnit,
    int store,
    int sellCount,
    int orderValue,
    boolean isBest,
    boolean isLimit,
    int point,
    String briefIntroduction,
    String introduction,
    String buyKnow,
    String auditState,
    String auditOrgCode,
    String auditStage,
    String reviewStaff,
    String auditStaff,
    int storeCount,
    long startTime,
    long endTime,
    double deliveryMoney,
    long expireStartTime,
    long expireEndTime,
    int trueBuyerNumber,
    int virtualBuyerNumber,
    String productSupplier,
    int maxPerOutlet,
    long deliveryStartTime,
    long deliveryEndTime,
    boolean clusterState,
    boolean clusterType,
    long downTime,
    long auditTime,
    String auditComment,
    String isSeckill,
    String merchantName,
    String auditStartOrgCode,
    String auditEndOrgCode,
    String orgName,
    String phone,
    long contractEndtime,
    long serverTime,
    int secStore,
    long secStartTime,
    long secEndTime,
    boolean isPoint,
    boolean isVip,
    double vipPrice,
    String codeUrl,
    String clientName,
    boolean isRecommend,
    boolean isNew,
    boolean isHot,
    boolean isBatchDelivery,
    long deliveryTime,
    String afterShop,
    long id)
  {
    this();
    this.clientId = clientId;
    this.merchantId = merchantId;
    this.orgCode = orgCode;
    this.productId = productId;
    this.isMarketable = isMarketable;
    this.rackTime = rackTime;
    setRackTimeIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.type = type;
    this.deliveryOption = deliveryOption;
    this.name = name;
    this.fullName = fullName;
    this.price = price;
    setPriceIsSet(true);
    this.cost = cost;
    setCostIsSet(true);
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    this.weight = weight;
    this.weightUnit = weightUnit;
    this.store = store;
    setStoreIsSet(true);
    this.sellCount = sellCount;
    setSellCountIsSet(true);
    this.orderValue = orderValue;
    setOrderValueIsSet(true);
    this.isBest = isBest;
    setIsBestIsSet(true);
    this.isLimit = isLimit;
    setIsLimitIsSet(true);
    this.point = point;
    setPointIsSet(true);
    this.briefIntroduction = briefIntroduction;
    this.introduction = introduction;
    this.buyKnow = buyKnow;
    this.auditState = auditState;
    this.auditOrgCode = auditOrgCode;
    this.auditStage = auditStage;
    this.reviewStaff = reviewStaff;
    this.auditStaff = auditStaff;
    this.storeCount = storeCount;
    setStoreCountIsSet(true);
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
    this.deliveryMoney = deliveryMoney;
    setDeliveryMoneyIsSet(true);
    this.expireStartTime = expireStartTime;
    setExpireStartTimeIsSet(true);
    this.expireEndTime = expireEndTime;
    setExpireEndTimeIsSet(true);
    this.trueBuyerNumber = trueBuyerNumber;
    setTrueBuyerNumberIsSet(true);
    this.virtualBuyerNumber = virtualBuyerNumber;
    setVirtualBuyerNumberIsSet(true);
    this.productSupplier = productSupplier;
    this.maxPerOutlet = maxPerOutlet;
    setMaxPerOutletIsSet(true);
    this.deliveryStartTime = deliveryStartTime;
    setDeliveryStartTimeIsSet(true);
    this.deliveryEndTime = deliveryEndTime;
    setDeliveryEndTimeIsSet(true);
    this.clusterState = clusterState;
    setClusterStateIsSet(true);
    this.clusterType = clusterType;
    setClusterTypeIsSet(true);
    this.downTime = downTime;
    setDownTimeIsSet(true);
    this.auditTime = auditTime;
    setAuditTimeIsSet(true);
    this.auditComment = auditComment;
    this.isSeckill = isSeckill;
    this.merchantName = merchantName;
    this.auditStartOrgCode = auditStartOrgCode;
    this.auditEndOrgCode = auditEndOrgCode;
    this.orgName = orgName;
    this.phone = phone;
    this.contractEndtime = contractEndtime;
    setContractEndtimeIsSet(true);
    this.serverTime = serverTime;
    setServerTimeIsSet(true);
    this.secStore = secStore;
    setSecStoreIsSet(true);
    this.secStartTime = secStartTime;
    setSecStartTimeIsSet(true);
    this.secEndTime = secEndTime;
    setSecEndTimeIsSet(true);
    this.isPoint = isPoint;
    setIsPointIsSet(true);
    this.isVip = isVip;
    setIsVipIsSet(true);
    this.vipPrice = vipPrice;
    setVipPriceIsSet(true);
    this.codeUrl = codeUrl;
    this.clientName = clientName;
    this.isRecommend = isRecommend;
    setIsRecommendIsSet(true);
    this.isNew = isNew;
    setIsNewIsSet(true);
    this.isHot = isHot;
    setIsHotIsSet(true);
    this.isBatchDelivery = isBatchDelivery;
    setIsBatchDeliveryIsSet(true);
    this.deliveryTime = deliveryTime;
    setDeliveryTimeIsSet(true);
    this.afterShop = afterShop;
    this.id = id;
    setIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProductVo(ProductVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetIsMarketable()) {
      this.isMarketable = other.isMarketable;
    }
    this.rackTime = other.rackTime;
    this.createTime = other.createTime;
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetDeliveryOption()) {
      this.deliveryOption = other.deliveryOption;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetFullName()) {
      this.fullName = other.fullName;
    }
    this.price = other.price;
    this.cost = other.cost;
    this.marketPrice = other.marketPrice;
    if (other.isSetWeight()) {
      this.weight = other.weight;
    }
    if (other.isSetWeightUnit()) {
      this.weightUnit = other.weightUnit;
    }
    this.store = other.store;
    this.sellCount = other.sellCount;
    this.orderValue = other.orderValue;
    this.isBest = other.isBest;
    this.isLimit = other.isLimit;
    this.point = other.point;
    if (other.isSetBriefIntroduction()) {
      this.briefIntroduction = other.briefIntroduction;
    }
    if (other.isSetIntroduction()) {
      this.introduction = other.introduction;
    }
    if (other.isSetBuyKnow()) {
      this.buyKnow = other.buyKnow;
    }
    if (other.isSetAuditState()) {
      this.auditState = other.auditState;
    }
    if (other.isSetAuditOrgCode()) {
      this.auditOrgCode = other.auditOrgCode;
    }
    if (other.isSetAuditStage()) {
      this.auditStage = other.auditStage;
    }
    if (other.isSetReviewStaff()) {
      this.reviewStaff = other.reviewStaff;
    }
    if (other.isSetAuditStaff()) {
      this.auditStaff = other.auditStaff;
    }
    this.storeCount = other.storeCount;
    this.startTime = other.startTime;
    this.endTime = other.endTime;
    this.deliveryMoney = other.deliveryMoney;
    this.expireStartTime = other.expireStartTime;
    this.expireEndTime = other.expireEndTime;
    this.trueBuyerNumber = other.trueBuyerNumber;
    this.virtualBuyerNumber = other.virtualBuyerNumber;
    if (other.isSetProductSupplier()) {
      this.productSupplier = other.productSupplier;
    }
    this.maxPerOutlet = other.maxPerOutlet;
    this.deliveryStartTime = other.deliveryStartTime;
    this.deliveryEndTime = other.deliveryEndTime;
    this.clusterState = other.clusterState;
    this.clusterType = other.clusterType;
    this.downTime = other.downTime;
    this.auditTime = other.auditTime;
    if (other.isSetAuditComment()) {
      this.auditComment = other.auditComment;
    }
    if (other.isSetIsSeckill()) {
      this.isSeckill = other.isSeckill;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetAuditStartOrgCode()) {
      this.auditStartOrgCode = other.auditStartOrgCode;
    }
    if (other.isSetAuditEndOrgCode()) {
      this.auditEndOrgCode = other.auditEndOrgCode;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    this.contractEndtime = other.contractEndtime;
    this.serverTime = other.serverTime;
    this.secStore = other.secStore;
    this.secStartTime = other.secStartTime;
    this.secEndTime = other.secEndTime;
    this.isPoint = other.isPoint;
    this.isVip = other.isVip;
    this.vipPrice = other.vipPrice;
    if (other.isSetCodeUrl()) {
      this.codeUrl = other.codeUrl;
    }
    if (other.isSetClientName()) {
      this.clientName = other.clientName;
    }
    this.isRecommend = other.isRecommend;
    this.isNew = other.isNew;
    this.isHot = other.isHot;
    this.isBatchDelivery = other.isBatchDelivery;
    this.deliveryTime = other.deliveryTime;
    if (other.isSetAfterShop()) {
      this.afterShop = other.afterShop;
    }
    this.id = other.id;
  }

  public ProductVo deepCopy() {
    return new ProductVo(this);
  }

  @Override
  public void clear() {
    this.clientId = null;
    this.merchantId = null;
    this.orgCode = null;
    this.productId = null;
    this.isMarketable = null;
    setRackTimeIsSet(false);
    this.rackTime = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.type = null;
    this.deliveryOption = null;
    this.name = null;
    this.fullName = null;
    setPriceIsSet(false);
    this.price = 0.0;
    setCostIsSet(false);
    this.cost = 0.0;
    setMarketPriceIsSet(false);
    this.marketPrice = 0.0;
    this.weight = null;
    this.weightUnit = null;
    setStoreIsSet(false);
    this.store = 0;
    setSellCountIsSet(false);
    this.sellCount = 0;
    setOrderValueIsSet(false);
    this.orderValue = 0;
    setIsBestIsSet(false);
    this.isBest = false;
    setIsLimitIsSet(false);
    this.isLimit = false;
    setPointIsSet(false);
    this.point = 0;
    this.briefIntroduction = null;
    this.introduction = null;
    this.buyKnow = null;
    this.auditState = null;
    this.auditOrgCode = null;
    this.auditStage = null;
    this.reviewStaff = null;
    this.auditStaff = null;
    setStoreCountIsSet(false);
    this.storeCount = 0;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    setDeliveryMoneyIsSet(false);
    this.deliveryMoney = 0.0;
    setExpireStartTimeIsSet(false);
    this.expireStartTime = 0;
    setExpireEndTimeIsSet(false);
    this.expireEndTime = 0;
    setTrueBuyerNumberIsSet(false);
    this.trueBuyerNumber = 0;
    setVirtualBuyerNumberIsSet(false);
    this.virtualBuyerNumber = 0;
    this.productSupplier = null;
    setMaxPerOutletIsSet(false);
    this.maxPerOutlet = 0;
    setDeliveryStartTimeIsSet(false);
    this.deliveryStartTime = 0;
    setDeliveryEndTimeIsSet(false);
    this.deliveryEndTime = 0;
    setClusterStateIsSet(false);
    this.clusterState = false;
    setClusterTypeIsSet(false);
    this.clusterType = false;
    setDownTimeIsSet(false);
    this.downTime = 0;
    setAuditTimeIsSet(false);
    this.auditTime = 0;
    this.auditComment = null;
    this.isSeckill = null;
    this.merchantName = null;
    this.auditStartOrgCode = null;
    this.auditEndOrgCode = null;
    this.orgName = null;
    this.phone = null;
    setContractEndtimeIsSet(false);
    this.contractEndtime = 0;
    setServerTimeIsSet(false);
    this.serverTime = 0;
    setSecStoreIsSet(false);
    this.secStore = 0;
    setSecStartTimeIsSet(false);
    this.secStartTime = 0;
    setSecEndTimeIsSet(false);
    this.secEndTime = 0;
    setIsPointIsSet(false);
    this.isPoint = false;
    setIsVipIsSet(false);
    this.isVip = false;
    setVipPriceIsSet(false);
    this.vipPrice = 0.0;
    this.codeUrl = null;
    this.clientName = null;
    setIsRecommendIsSet(false);
    this.isRecommend = false;
    setIsNewIsSet(false);
    this.isNew = false;
    setIsHotIsSet(false);
    this.isHot = false;
    setIsBatchDeliveryIsSet(false);
    this.isBatchDelivery = false;
    setDeliveryTimeIsSet(false);
    this.deliveryTime = 0;
    this.afterShop = null;
    setIdIsSet(false);
    this.id = 0;
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public ProductVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public ProductVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 商品对应商户所属机构编号
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 商品对应商户所属机构编号
   */
  public ProductVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 商品id
   */
  public String getProductId() {
    return this.productId;
  }

  /**
   * 商品id
   */
  public ProductVo setProductId(String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  /**
   * 是否上架 0未上架,1已上架,2已下架,3已删除
   */
  public String getIsMarketable() {
    return this.isMarketable;
  }

  /**
   * 是否上架 0未上架,1已上架,2已下架,3已删除
   */
  public ProductVo setIsMarketable(String isMarketable) {
    this.isMarketable = isMarketable;
    return this;
  }

  public void unsetIsMarketable() {
    this.isMarketable = null;
  }

  /** Returns true if field isMarketable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsMarketable() {
    return this.isMarketable != null;
  }

  public void setIsMarketableIsSet(boolean value) {
    if (!value) {
      this.isMarketable = null;
    }
  }

  /**
   * 上架时间
   */
  public long getRackTime() {
    return this.rackTime;
  }

  /**
   * 上架时间
   */
  public ProductVo setRackTime(long rackTime) {
    this.rackTime = rackTime;
    setRackTimeIsSet(true);
    return this;
  }

  public void unsetRackTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RACKTIME_ISSET_ID);
  }

  /** Returns true if field rackTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRackTime() {
    return EncodingUtils.testBit(__isset_bitfield, __RACKTIME_ISSET_ID);
  }

  public void setRackTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RACKTIME_ISSET_ID, value);
  }

  /**
   * createTime
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * createTime
   */
  public ProductVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 商品类型
   */
  public String getType() {
    return this.type;
  }

  /**
   * 商品类型
   */
  public ProductVo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 0送货上门,1网点自提,2配送或自提
   */
  public String getDeliveryOption() {
    return this.deliveryOption;
  }

  /**
   * 0送货上门,1网点自提,2配送或自提
   */
  public ProductVo setDeliveryOption(String deliveryOption) {
    this.deliveryOption = deliveryOption;
    return this;
  }

  public void unsetDeliveryOption() {
    this.deliveryOption = null;
  }

  /** Returns true if field deliveryOption is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryOption() {
    return this.deliveryOption != null;
  }

  public void setDeliveryOptionIsSet(boolean value) {
    if (!value) {
      this.deliveryOption = null;
    }
  }

  /**
   * 商品名
   */
  public String getName() {
    return this.name;
  }

  /**
   * 商品名
   */
  public ProductVo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  /**
   * 商品全名
   */
  public String getFullName() {
    return this.fullName;
  }

  /**
   * 商品全名
   */
  public ProductVo setFullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  public void unsetFullName() {
    this.fullName = null;
  }

  /** Returns true if field fullName is set (has been assigned a value) and false otherwise */
  public boolean isSetFullName() {
    return this.fullName != null;
  }

  public void setFullNameIsSet(boolean value) {
    if (!value) {
      this.fullName = null;
    }
  }

  /**
   * 销售价
   */
  public double getPrice() {
    return this.price;
  }

  /**
   * 销售价
   */
  public ProductVo setPrice(double price) {
    this.price = price;
    setPriceIsSet(true);
    return this;
  }

  public void unsetPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  public void setPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRICE_ISSET_ID, value);
  }

  /**
   * 成本价
   */
  public double getCost() {
    return this.cost;
  }

  /**
   * 成本价
   */
  public ProductVo setCost(double cost) {
    this.cost = cost;
    setCostIsSet(true);
    return this;
  }

  public void unsetCost() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COST_ISSET_ID);
  }

  /** Returns true if field cost is set (has been assigned a value) and false otherwise */
  public boolean isSetCost() {
    return EncodingUtils.testBit(__isset_bitfield, __COST_ISSET_ID);
  }

  public void setCostIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COST_ISSET_ID, value);
  }

  /**
   * 市场价
   */
  public double getMarketPrice() {
    return this.marketPrice;
  }

  /**
   * 市场价
   */
  public ProductVo setMarketPrice(double marketPrice) {
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    return this;
  }

  public void unsetMarketPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  /** Returns true if field marketPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetMarketPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  public void setMarketPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MARKETPRICE_ISSET_ID, value);
  }

  /**
   * 商品重量
   */
  public String getWeight() {
    return this.weight;
  }

  /**
   * 商品重量
   */
  public ProductVo setWeight(String weight) {
    this.weight = weight;
    return this;
  }

  public void unsetWeight() {
    this.weight = null;
  }

  /** Returns true if field weight is set (has been assigned a value) and false otherwise */
  public boolean isSetWeight() {
    return this.weight != null;
  }

  public void setWeightIsSet(boolean value) {
    if (!value) {
      this.weight = null;
    }
  }

  /**
   * 重量单位
   */
  public String getWeightUnit() {
    return this.weightUnit;
  }

  /**
   * 重量单位
   */
  public ProductVo setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
    return this;
  }

  public void unsetWeightUnit() {
    this.weightUnit = null;
  }

  /** Returns true if field weightUnit is set (has been assigned a value) and false otherwise */
  public boolean isSetWeightUnit() {
    return this.weightUnit != null;
  }

  public void setWeightUnitIsSet(boolean value) {
    if (!value) {
      this.weightUnit = null;
    }
  }

  /**
   * 商品库存数量
   */
  public int getStore() {
    return this.store;
  }

  /**
   * 商品库存数量
   */
  public ProductVo setStore(int store) {
    this.store = store;
    setStoreIsSet(true);
    return this;
  }

  public void unsetStore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STORE_ISSET_ID);
  }

  /** Returns true if field store is set (has been assigned a value) and false otherwise */
  public boolean isSetStore() {
    return EncodingUtils.testBit(__isset_bitfield, __STORE_ISSET_ID);
  }

  public void setStoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STORE_ISSET_ID, value);
  }

  /**
   * 销售数量
   */
  public int getSellCount() {
    return this.sellCount;
  }

  /**
   * 销售数量
   */
  public ProductVo setSellCount(int sellCount) {
    this.sellCount = sellCount;
    setSellCountIsSet(true);
    return this;
  }

  public void unsetSellCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SELLCOUNT_ISSET_ID);
  }

  /** Returns true if field sellCount is set (has been assigned a value) and false otherwise */
  public boolean isSetSellCount() {
    return EncodingUtils.testBit(__isset_bitfield, __SELLCOUNT_ISSET_ID);
  }

  public void setSellCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SELLCOUNT_ISSET_ID, value);
  }

  /**
   * 排序(1-10)
   */
  public int getOrderValue() {
    return this.orderValue;
  }

  /**
   * 排序(1-10)
   */
  public ProductVo setOrderValue(int orderValue) {
    this.orderValue = orderValue;
    setOrderValueIsSet(true);
    return this;
  }

  public void unsetOrderValue() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERVALUE_ISSET_ID);
  }

  /** Returns true if field orderValue is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderValue() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERVALUE_ISSET_ID);
  }

  public void setOrderValueIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERVALUE_ISSET_ID, value);
  }

  /**
   * 是否为精品
   */
  public boolean isIsBest() {
    return this.isBest;
  }

  /**
   * 是否为精品
   */
  public ProductVo setIsBest(boolean isBest) {
    this.isBest = isBest;
    setIsBestIsSet(true);
    return this;
  }

  public void unsetIsBest() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISBEST_ISSET_ID);
  }

  /** Returns true if field isBest is set (has been assigned a value) and false otherwise */
  public boolean isSetIsBest() {
    return EncodingUtils.testBit(__isset_bitfield, __ISBEST_ISSET_ID);
  }

  public void setIsBestIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISBEST_ISSET_ID, value);
  }

  /**
   * 是否限购
   */
  public boolean isIsLimit() {
    return this.isLimit;
  }

  /**
   * 是否限购
   */
  public ProductVo setIsLimit(boolean isLimit) {
    this.isLimit = isLimit;
    setIsLimitIsSet(true);
    return this;
  }

  public void unsetIsLimit() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISLIMIT_ISSET_ID);
  }

  /** Returns true if field isLimit is set (has been assigned a value) and false otherwise */
  public boolean isSetIsLimit() {
    return EncodingUtils.testBit(__isset_bitfield, __ISLIMIT_ISSET_ID);
  }

  public void setIsLimitIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISLIMIT_ISSET_ID, value);
  }

  /**
   * 评分
   */
  public int getPoint() {
    return this.point;
  }

  /**
   * 评分
   */
  public ProductVo setPoint(int point) {
    this.point = point;
    setPointIsSet(true);
    return this;
  }

  public void unsetPoint() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __POINT_ISSET_ID);
  }

  /** Returns true if field point is set (has been assigned a value) and false otherwise */
  public boolean isSetPoint() {
    return EncodingUtils.testBit(__isset_bitfield, __POINT_ISSET_ID);
  }

  public void setPointIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __POINT_ISSET_ID, value);
  }

  /**
   * 简介
   */
  public String getBriefIntroduction() {
    return this.briefIntroduction;
  }

  /**
   * 简介
   */
  public ProductVo setBriefIntroduction(String briefIntroduction) {
    this.briefIntroduction = briefIntroduction;
    return this;
  }

  public void unsetBriefIntroduction() {
    this.briefIntroduction = null;
  }

  /** Returns true if field briefIntroduction is set (has been assigned a value) and false otherwise */
  public boolean isSetBriefIntroduction() {
    return this.briefIntroduction != null;
  }

  public void setBriefIntroductionIsSet(boolean value) {
    if (!value) {
      this.briefIntroduction = null;
    }
  }

  /**
   * 介绍
   */
  public String getIntroduction() {
    return this.introduction;
  }

  /**
   * 介绍
   */
  public ProductVo setIntroduction(String introduction) {
    this.introduction = introduction;
    return this;
  }

  public void unsetIntroduction() {
    this.introduction = null;
  }

  /** Returns true if field introduction is set (has been assigned a value) and false otherwise */
  public boolean isSetIntroduction() {
    return this.introduction != null;
  }

  public void setIntroductionIsSet(boolean value) {
    if (!value) {
      this.introduction = null;
    }
  }

  /**
   * 商品须知
   */
  public String getBuyKnow() {
    return this.buyKnow;
  }

  /**
   * 商品须知
   */
  public ProductVo setBuyKnow(String buyKnow) {
    this.buyKnow = buyKnow;
    return this;
  }

  public void unsetBuyKnow() {
    this.buyKnow = null;
  }

  /** Returns true if field buyKnow is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyKnow() {
    return this.buyKnow != null;
  }

  public void setBuyKnowIsSet(boolean value) {
    if (!value) {
      this.buyKnow = null;
    }
  }

  /**
   * 商品审核状态 ("0待审核",1审核通过,2审核不通过,3未提交)
   */
  public String getAuditState() {
    return this.auditState;
  }

  /**
   * 商品审核状态 ("0待审核",1审核通过,2审核不通过,3未提交)
   */
  public ProductVo setAuditState(String auditState) {
    this.auditState = auditState;
    return this;
  }

  public void unsetAuditState() {
    this.auditState = null;
  }

  /** Returns true if field auditState is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditState() {
    return this.auditState != null;
  }

  public void setAuditStateIsSet(boolean value) {
    if (!value) {
      this.auditState = null;
    }
  }

  /**
   * 待审核机构编号
   */
  public String getAuditOrgCode() {
    return this.auditOrgCode;
  }

  /**
   * 待审核机构编号
   */
  public ProductVo setAuditOrgCode(String auditOrgCode) {
    this.auditOrgCode = auditOrgCode;
    return this;
  }

  public void unsetAuditOrgCode() {
    this.auditOrgCode = null;
  }

  /** Returns true if field auditOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditOrgCode() {
    return this.auditOrgCode != null;
  }

  public void setAuditOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditOrgCode = null;
    }
  }

  /**
   * 审核步骤
   */
  public String getAuditStage() {
    return this.auditStage;
  }

  /**
   * 审核步骤
   */
  public ProductVo setAuditStage(String auditStage) {
    this.auditStage = auditStage;
    return this;
  }

  public void unsetAuditStage() {
    this.auditStage = null;
  }

  /** Returns true if field auditStage is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStage() {
    return this.auditStage != null;
  }

  public void setAuditStageIsSet(boolean value) {
    if (!value) {
      this.auditStage = null;
    }
  }

  /**
   * 复核人
   */
  public String getReviewStaff() {
    return this.reviewStaff;
  }

  /**
   * 复核人
   */
  public ProductVo setReviewStaff(String reviewStaff) {
    this.reviewStaff = reviewStaff;
    return this;
  }

  public void unsetReviewStaff() {
    this.reviewStaff = null;
  }

  /** Returns true if field reviewStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewStaff() {
    return this.reviewStaff != null;
  }

  public void setReviewStaffIsSet(boolean value) {
    if (!value) {
      this.reviewStaff = null;
    }
  }

  /**
   * 审核人
   */
  public String getAuditStaff() {
    return this.auditStaff;
  }

  /**
   * 审核人
   */
  public ProductVo setAuditStaff(String auditStaff) {
    this.auditStaff = auditStaff;
    return this;
  }

  public void unsetAuditStaff() {
    this.auditStaff = null;
  }

  /** Returns true if field auditStaff is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStaff() {
    return this.auditStaff != null;
  }

  public void setAuditStaffIsSet(boolean value) {
    if (!value) {
      this.auditStaff = null;
    }
  }

  /**
   * 用户收藏数
   */
  public int getStoreCount() {
    return this.storeCount;
  }

  /**
   * 用户收藏数
   */
  public ProductVo setStoreCount(int storeCount) {
    this.storeCount = storeCount;
    setStoreCountIsSet(true);
    return this;
  }

  public void unsetStoreCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STORECOUNT_ISSET_ID);
  }

  /** Returns true if field storeCount is set (has been assigned a value) and false otherwise */
  public boolean isSetStoreCount() {
    return EncodingUtils.testBit(__isset_bitfield, __STORECOUNT_ISSET_ID);
  }

  public void setStoreCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STORECOUNT_ISSET_ID, value);
  }

  /**
   * 团购或预售有效期开始
   */
  public long getStartTime() {
    return this.startTime;
  }

  /**
   * 团购或预售有效期开始
   */
  public ProductVo setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  /**
   * 团购或预售有效期结束
   */
  public long getEndTime() {
    return this.endTime;
  }

  /**
   * 团购或预售有效期结束
   */
  public ProductVo setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  /**
   * 运费
   */
  public double getDeliveryMoney() {
    return this.deliveryMoney;
  }

  /**
   * 运费
   */
  public ProductVo setDeliveryMoney(double deliveryMoney) {
    this.deliveryMoney = deliveryMoney;
    setDeliveryMoneyIsSet(true);
    return this;
  }

  public void unsetDeliveryMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID);
  }

  /** Returns true if field deliveryMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID);
  }

  public void setDeliveryMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYMONEY_ISSET_ID, value);
  }

  /**
   * 团购或预售券有效起始日
   */
  public long getExpireStartTime() {
    return this.expireStartTime;
  }

  /**
   * 团购或预售券有效起始日
   */
  public ProductVo setExpireStartTime(long expireStartTime) {
    this.expireStartTime = expireStartTime;
    setExpireStartTimeIsSet(true);
    return this;
  }

  public void unsetExpireStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPIRESTARTTIME_ISSET_ID);
  }

  /** Returns true if field expireStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSetExpireStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPIRESTARTTIME_ISSET_ID);
  }

  public void setExpireStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPIRESTARTTIME_ISSET_ID, value);
  }

  /**
   * 团购或预售券有效结束日
   */
  public long getExpireEndTime() {
    return this.expireEndTime;
  }

  /**
   * 团购或预售券有效结束日
   */
  public ProductVo setExpireEndTime(long expireEndTime) {
    this.expireEndTime = expireEndTime;
    setExpireEndTimeIsSet(true);
    return this;
  }

  public void unsetExpireEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPIREENDTIME_ISSET_ID);
  }

  /** Returns true if field expireEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetExpireEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPIREENDTIME_ISSET_ID);
  }

  public void setExpireEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPIREENDTIME_ISSET_ID, value);
  }

  /**
   * 团购或预售真实购买数量
   */
  public int getTrueBuyerNumber() {
    return this.trueBuyerNumber;
  }

  /**
   * 团购或预售真实购买数量
   */
  public ProductVo setTrueBuyerNumber(int trueBuyerNumber) {
    this.trueBuyerNumber = trueBuyerNumber;
    setTrueBuyerNumberIsSet(true);
    return this;
  }

  public void unsetTrueBuyerNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TRUEBUYERNUMBER_ISSET_ID);
  }

  /** Returns true if field trueBuyerNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetTrueBuyerNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __TRUEBUYERNUMBER_ISSET_ID);
  }

  public void setTrueBuyerNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TRUEBUYERNUMBER_ISSET_ID, value);
  }

  /**
   * 团购或预售虚拟购买数量
   */
  public int getVirtualBuyerNumber() {
    return this.virtualBuyerNumber;
  }

  /**
   * 团购或预售虚拟购买数量
   */
  public ProductVo setVirtualBuyerNumber(int virtualBuyerNumber) {
    this.virtualBuyerNumber = virtualBuyerNumber;
    setVirtualBuyerNumberIsSet(true);
    return this;
  }

  public void unsetVirtualBuyerNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIRTUALBUYERNUMBER_ISSET_ID);
  }

  /** Returns true if field virtualBuyerNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetVirtualBuyerNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __VIRTUALBUYERNUMBER_ISSET_ID);
  }

  public void setVirtualBuyerNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIRTUALBUYERNUMBER_ISSET_ID, value);
  }

  /**
   * 供货商
   */
  public String getProductSupplier() {
    return this.productSupplier;
  }

  /**
   * 供货商
   */
  public ProductVo setProductSupplier(String productSupplier) {
    this.productSupplier = productSupplier;
    return this;
  }

  public void unsetProductSupplier() {
    this.productSupplier = null;
  }

  /** Returns true if field productSupplier is set (has been assigned a value) and false otherwise */
  public boolean isSetProductSupplier() {
    return this.productSupplier != null;
  }

  public void setProductSupplierIsSet(boolean value) {
    if (!value) {
      this.productSupplier = null;
    }
  }

  /**
   * 自提商品每家门店最大支持数量
   */
  public int getMaxPerOutlet() {
    return this.maxPerOutlet;
  }

  /**
   * 自提商品每家门店最大支持数量
   */
  public ProductVo setMaxPerOutlet(int maxPerOutlet) {
    this.maxPerOutlet = maxPerOutlet;
    setMaxPerOutletIsSet(true);
    return this;
  }

  public void unsetMaxPerOutlet() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXPEROUTLET_ISSET_ID);
  }

  /** Returns true if field maxPerOutlet is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxPerOutlet() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXPEROUTLET_ISSET_ID);
  }

  public void setMaxPerOutletIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXPEROUTLET_ISSET_ID, value);
  }

  /**
   * 提货-开始
   */
  public long getDeliveryStartTime() {
    return this.deliveryStartTime;
  }

  /**
   * 提货-开始
   */
  public ProductVo setDeliveryStartTime(long deliveryStartTime) {
    this.deliveryStartTime = deliveryStartTime;
    setDeliveryStartTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID);
  }

  /** Returns true if field deliveryStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID);
  }

  public void setDeliveryStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYSTARTTIME_ISSET_ID, value);
  }

  /**
   * 提货-结束
   */
  public long getDeliveryEndTime() {
    return this.deliveryEndTime;
  }

  /**
   * 提货-结束
   */
  public ProductVo setDeliveryEndTime(long deliveryEndTime) {
    this.deliveryEndTime = deliveryEndTime;
    setDeliveryEndTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID);
  }

  /** Returns true if field deliveryEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID);
  }

  public void setDeliveryEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYENDTIME_ISSET_ID, value);
  }

  /**
   * 是否成功成团
   */
  public boolean isClusterState() {
    return this.clusterState;
  }

  /**
   * 是否成功成团
   */
  public ProductVo setClusterState(boolean clusterState) {
    this.clusterState = clusterState;
    setClusterStateIsSet(true);
    return this;
  }

  public void unsetClusterState() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CLUSTERSTATE_ISSET_ID);
  }

  /** Returns true if field clusterState is set (has been assigned a value) and false otherwise */
  public boolean isSetClusterState() {
    return EncodingUtils.testBit(__isset_bitfield, __CLUSTERSTATE_ISSET_ID);
  }

  public void setClusterStateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CLUSTERSTATE_ISSET_ID, value);
  }

  /**
   * 成团类型
   */
  public boolean isClusterType() {
    return this.clusterType;
  }

  /**
   * 成团类型
   */
  public ProductVo setClusterType(boolean clusterType) {
    this.clusterType = clusterType;
    setClusterTypeIsSet(true);
    return this;
  }

  public void unsetClusterType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CLUSTERTYPE_ISSET_ID);
  }

  /** Returns true if field clusterType is set (has been assigned a value) and false otherwise */
  public boolean isSetClusterType() {
    return EncodingUtils.testBit(__isset_bitfield, __CLUSTERTYPE_ISSET_ID);
  }

  public void setClusterTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CLUSTERTYPE_ISSET_ID, value);
  }

  /**
   * 下架时间
   */
  public long getDownTime() {
    return this.downTime;
  }

  /**
   * 下架时间
   */
  public ProductVo setDownTime(long downTime) {
    this.downTime = downTime;
    setDownTimeIsSet(true);
    return this;
  }

  public void unsetDownTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DOWNTIME_ISSET_ID);
  }

  /** Returns true if field downTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDownTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DOWNTIME_ISSET_ID);
  }

  public void setDownTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DOWNTIME_ISSET_ID, value);
  }

  /**
   * 审核时间
   */
  public long getAuditTime() {
    return this.auditTime;
  }

  /**
   * 审核时间
   */
  public ProductVo setAuditTime(long auditTime) {
    this.auditTime = auditTime;
    setAuditTimeIsSet(true);
    return this;
  }

  public void unsetAuditTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  /** Returns true if field auditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditTime() {
    return EncodingUtils.testBit(__isset_bitfield, __AUDITTIME_ISSET_ID);
  }

  public void setAuditTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AUDITTIME_ISSET_ID, value);
  }

  /**
   * 审核备注
   */
  public String getAuditComment() {
    return this.auditComment;
  }

  /**
   * 审核备注
   */
  public ProductVo setAuditComment(String auditComment) {
    this.auditComment = auditComment;
    return this;
  }

  public void unsetAuditComment() {
    this.auditComment = null;
  }

  /** Returns true if field auditComment is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditComment() {
    return this.auditComment != null;
  }

  public void setAuditCommentIsSet(boolean value) {
    if (!value) {
      this.auditComment = null;
    }
  }

  /**
   * 是否秒杀 0非秒杀,1秒杀,2秒杀未上架
   */
  public String getIsSeckill() {
    return this.isSeckill;
  }

  /**
   * 是否秒杀 0非秒杀,1秒杀,2秒杀未上架
   */
  public ProductVo setIsSeckill(String isSeckill) {
    this.isSeckill = isSeckill;
    return this;
  }

  public void unsetIsSeckill() {
    this.isSeckill = null;
  }

  /** Returns true if field isSeckill is set (has been assigned a value) and false otherwise */
  public boolean isSetIsSeckill() {
    return this.isSeckill != null;
  }

  public void setIsSeckillIsSet(boolean value) {
    if (!value) {
      this.isSeckill = null;
    }
  }

  /**
   * 商户名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称
   */
  public ProductVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 起始审核机构编号
   */
  public String getAuditStartOrgCode() {
    return this.auditStartOrgCode;
  }

  /**
   * 起始审核机构编号
   */
  public ProductVo setAuditStartOrgCode(String auditStartOrgCode) {
    this.auditStartOrgCode = auditStartOrgCode;
    return this;
  }

  public void unsetAuditStartOrgCode() {
    this.auditStartOrgCode = null;
  }

  /** Returns true if field auditStartOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStartOrgCode() {
    return this.auditStartOrgCode != null;
  }

  public void setAuditStartOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditStartOrgCode = null;
    }
  }

  /**
   * 最终审核机编号
   */
  public String getAuditEndOrgCode() {
    return this.auditEndOrgCode;
  }

  /**
   * 最终审核机编号
   */
  public ProductVo setAuditEndOrgCode(String auditEndOrgCode) {
    this.auditEndOrgCode = auditEndOrgCode;
    return this;
  }

  public void unsetAuditEndOrgCode() {
    this.auditEndOrgCode = null;
  }

  /** Returns true if field auditEndOrgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditEndOrgCode() {
    return this.auditEndOrgCode != null;
  }

  public void setAuditEndOrgCodeIsSet(boolean value) {
    if (!value) {
      this.auditEndOrgCode = null;
    }
  }

  /**
   * 机构名称
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 机构名称
   */
  public ProductVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 商户电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 商户电话
   */
  public ProductVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 签约到期时间
   */
  public long getContractEndtime() {
    return this.contractEndtime;
  }

  /**
   * 签约到期时间
   */
  public ProductVo setContractEndtime(long contractEndtime) {
    this.contractEndtime = contractEndtime;
    setContractEndtimeIsSet(true);
    return this;
  }

  public void unsetContractEndtime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONTRACTENDTIME_ISSET_ID);
  }

  /** Returns true if field contractEndtime is set (has been assigned a value) and false otherwise */
  public boolean isSetContractEndtime() {
    return EncodingUtils.testBit(__isset_bitfield, __CONTRACTENDTIME_ISSET_ID);
  }

  public void setContractEndtimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONTRACTENDTIME_ISSET_ID, value);
  }

  /**
   * 服务器时间
   */
  public long getServerTime() {
    return this.serverTime;
  }

  /**
   * 服务器时间
   */
  public ProductVo setServerTime(long serverTime) {
    this.serverTime = serverTime;
    setServerTimeIsSet(true);
    return this;
  }

  public void unsetServerTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SERVERTIME_ISSET_ID);
  }

  /** Returns true if field serverTime is set (has been assigned a value) and false otherwise */
  public boolean isSetServerTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SERVERTIME_ISSET_ID);
  }

  public void setServerTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SERVERTIME_ISSET_ID, value);
  }

  /**
   * 商品秒杀库存数量
   */
  public int getSecStore() {
    return this.secStore;
  }

  /**
   * 商品秒杀库存数量
   */
  public ProductVo setSecStore(int secStore) {
    this.secStore = secStore;
    setSecStoreIsSet(true);
    return this;
  }

  public void unsetSecStore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SECSTORE_ISSET_ID);
  }

  /** Returns true if field secStore is set (has been assigned a value) and false otherwise */
  public boolean isSetSecStore() {
    return EncodingUtils.testBit(__isset_bitfield, __SECSTORE_ISSET_ID);
  }

  public void setSecStoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SECSTORE_ISSET_ID, value);
  }

  /**
   * 秒杀开始时间
   */
  public long getSecStartTime() {
    return this.secStartTime;
  }

  /**
   * 秒杀开始时间
   */
  public ProductVo setSecStartTime(long secStartTime) {
    this.secStartTime = secStartTime;
    setSecStartTimeIsSet(true);
    return this;
  }

  public void unsetSecStartTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SECSTARTTIME_ISSET_ID);
  }

  /** Returns true if field secStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSecStartTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SECSTARTTIME_ISSET_ID);
  }

  public void setSecStartTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SECSTARTTIME_ISSET_ID, value);
  }

  /**
   * 秒杀结束时间
   */
  public long getSecEndTime() {
    return this.secEndTime;
  }

  /**
   * 秒杀结束时间
   */
  public ProductVo setSecEndTime(long secEndTime) {
    this.secEndTime = secEndTime;
    setSecEndTimeIsSet(true);
    return this;
  }

  public void unsetSecEndTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SECENDTIME_ISSET_ID);
  }

  /** Returns true if field secEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSecEndTime() {
    return EncodingUtils.testBit(__isset_bitfield, __SECENDTIME_ISSET_ID);
  }

  public void setSecEndTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SECENDTIME_ISSET_ID, value);
  }

  /**
   * 是否参与送积分活动
   */
  public boolean isIsPoint() {
    return this.isPoint;
  }

  /**
   * 是否参与送积分活动
   */
  public ProductVo setIsPoint(boolean isPoint) {
    this.isPoint = isPoint;
    setIsPointIsSet(true);
    return this;
  }

  public void unsetIsPoint() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISPOINT_ISSET_ID);
  }

  /** Returns true if field isPoint is set (has been assigned a value) and false otherwise */
  public boolean isSetIsPoint() {
    return EncodingUtils.testBit(__isset_bitfield, __ISPOINT_ISSET_ID);
  }

  public void setIsPointIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISPOINT_ISSET_ID, value);
  }

  /**
   * 是否参与VIP规则活动
   */
  public boolean isIsVip() {
    return this.isVip;
  }

  /**
   * 是否参与VIP规则活动
   */
  public ProductVo setIsVip(boolean isVip) {
    this.isVip = isVip;
    setIsVipIsSet(true);
    return this;
  }

  public void unsetIsVip() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISVIP_ISSET_ID);
  }

  /** Returns true if field isVip is set (has been assigned a value) and false otherwise */
  public boolean isSetIsVip() {
    return EncodingUtils.testBit(__isset_bitfield, __ISVIP_ISSET_ID);
  }

  public void setIsVipIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISVIP_ISSET_ID, value);
  }

  /**
   * VIP价
   */
  public double getVipPrice() {
    return this.vipPrice;
  }

  /**
   * VIP价
   */
  public ProductVo setVipPrice(double vipPrice) {
    this.vipPrice = vipPrice;
    setVipPriceIsSet(true);
    return this;
  }

  public void unsetVipPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIPPRICE_ISSET_ID);
  }

  /** Returns true if field vipPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetVipPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __VIPPRICE_ISSET_ID);
  }

  public void setVipPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIPPRICE_ISSET_ID, value);
  }

  /**
   * 二维码地址
   */
  public String getCodeUrl() {
    return this.codeUrl;
  }

  /**
   * 二维码地址
   */
  public ProductVo setCodeUrl(String codeUrl) {
    this.codeUrl = codeUrl;
    return this;
  }

  public void unsetCodeUrl() {
    this.codeUrl = null;
  }

  /** Returns true if field codeUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetCodeUrl() {
    return this.codeUrl != null;
  }

  public void setCodeUrlIsSet(boolean value) {
    if (!value) {
      this.codeUrl = null;
    }
  }

  /**
   * 客户端名称
   */
  public String getClientName() {
    return this.clientName;
  }

  /**
   * 客户端名称
   */
  public ProductVo setClientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

  public void unsetClientName() {
    this.clientName = null;
  }

  /** Returns true if field clientName is set (has been assigned a value) and false otherwise */
  public boolean isSetClientName() {
    return this.clientName != null;
  }

  public void setClientNameIsSet(boolean value) {
    if (!value) {
      this.clientName = null;
    }
  }

  /**
   * 是否推荐
   */
  public boolean isIsRecommend() {
    return this.isRecommend;
  }

  /**
   * 是否推荐
   */
  public ProductVo setIsRecommend(boolean isRecommend) {
    this.isRecommend = isRecommend;
    setIsRecommendIsSet(true);
    return this;
  }

  public void unsetIsRecommend() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID);
  }

  /** Returns true if field isRecommend is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRecommend() {
    return EncodingUtils.testBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID);
  }

  public void setIsRecommendIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISRECOMMEND_ISSET_ID, value);
  }

  /**
   * 是否新品
   */
  public boolean isIsNew() {
    return this.isNew;
  }

  /**
   * 是否新品
   */
  public ProductVo setIsNew(boolean isNew) {
    this.isNew = isNew;
    setIsNewIsSet(true);
    return this;
  }

  public void unsetIsNew() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISNEW_ISSET_ID);
  }

  /** Returns true if field isNew is set (has been assigned a value) and false otherwise */
  public boolean isSetIsNew() {
    return EncodingUtils.testBit(__isset_bitfield, __ISNEW_ISSET_ID);
  }

  public void setIsNewIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISNEW_ISSET_ID, value);
  }

  /**
   * 是否热销
   */
  public boolean isIsHot() {
    return this.isHot;
  }

  /**
   * 是否热销
   */
  public ProductVo setIsHot(boolean isHot) {
    this.isHot = isHot;
    setIsHotIsSet(true);
    return this;
  }

  public void unsetIsHot() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISHOT_ISSET_ID);
  }

  /** Returns true if field isHot is set (has been assigned a value) and false otherwise */
  public boolean isSetIsHot() {
    return EncodingUtils.testBit(__isset_bitfield, __ISHOT_ISSET_ID);
  }

  public void setIsHotIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISHOT_ISSET_ID, value);
  }

  /**
   * 是否批量发货
   */
  public boolean isIsBatchDelivery() {
    return this.isBatchDelivery;
  }

  /**
   * 是否批量发货
   */
  public ProductVo setIsBatchDelivery(boolean isBatchDelivery) {
    this.isBatchDelivery = isBatchDelivery;
    setIsBatchDeliveryIsSet(true);
    return this;
  }

  public void unsetIsBatchDelivery() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISBATCHDELIVERY_ISSET_ID);
  }

  /** Returns true if field isBatchDelivery is set (has been assigned a value) and false otherwise */
  public boolean isSetIsBatchDelivery() {
    return EncodingUtils.testBit(__isset_bitfield, __ISBATCHDELIVERY_ISSET_ID);
  }

  public void setIsBatchDeliveryIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISBATCHDELIVERY_ISSET_ID, value);
  }

  /**
   * 预计发货时间
   */
  public long getDeliveryTime() {
    return this.deliveryTime;
  }

  /**
   * 预计发货时间
   */
  public ProductVo setDeliveryTime(long deliveryTime) {
    this.deliveryTime = deliveryTime;
    setDeliveryTimeIsSet(true);
    return this;
  }

  public void unsetDeliveryTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELIVERYTIME_ISSET_ID);
  }

  /** Returns true if field deliveryTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryTime() {
    return EncodingUtils.testBit(__isset_bitfield, __DELIVERYTIME_ISSET_ID);
  }

  public void setDeliveryTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELIVERYTIME_ISSET_ID, value);
  }

  /**
   * 售后说明
   */
  public String getAfterShop() {
    return this.afterShop;
  }

  /**
   * 售后说明
   */
  public ProductVo setAfterShop(String afterShop) {
    this.afterShop = afterShop;
    return this;
  }

  public void unsetAfterShop() {
    this.afterShop = null;
  }

  /** Returns true if field afterShop is set (has been assigned a value) and false otherwise */
  public boolean isSetAfterShop() {
    return this.afterShop != null;
  }

  public void setAfterShopIsSet(boolean value) {
    if (!value) {
      this.afterShop = null;
    }
  }

  /**
   * 商品id
   */
  public long getId() {
    return this.id;
  }

  /**
   * 商品id
   */
  public ProductVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case IS_MARKETABLE:
      if (value == null) {
        unsetIsMarketable();
      } else {
        setIsMarketable((String)value);
      }
      break;

    case RACK_TIME:
      if (value == null) {
        unsetRackTime();
      } else {
        setRackTime((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case DELIVERY_OPTION:
      if (value == null) {
        unsetDeliveryOption();
      } else {
        setDeliveryOption((String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case FULL_NAME:
      if (value == null) {
        unsetFullName();
      } else {
        setFullName((String)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((Double)value);
      }
      break;

    case COST:
      if (value == null) {
        unsetCost();
      } else {
        setCost((Double)value);
      }
      break;

    case MARKET_PRICE:
      if (value == null) {
        unsetMarketPrice();
      } else {
        setMarketPrice((Double)value);
      }
      break;

    case WEIGHT:
      if (value == null) {
        unsetWeight();
      } else {
        setWeight((String)value);
      }
      break;

    case WEIGHT_UNIT:
      if (value == null) {
        unsetWeightUnit();
      } else {
        setWeightUnit((String)value);
      }
      break;

    case STORE:
      if (value == null) {
        unsetStore();
      } else {
        setStore((Integer)value);
      }
      break;

    case SELL_COUNT:
      if (value == null) {
        unsetSellCount();
      } else {
        setSellCount((Integer)value);
      }
      break;

    case ORDER_VALUE:
      if (value == null) {
        unsetOrderValue();
      } else {
        setOrderValue((Integer)value);
      }
      break;

    case IS_BEST:
      if (value == null) {
        unsetIsBest();
      } else {
        setIsBest((Boolean)value);
      }
      break;

    case IS_LIMIT:
      if (value == null) {
        unsetIsLimit();
      } else {
        setIsLimit((Boolean)value);
      }
      break;

    case POINT:
      if (value == null) {
        unsetPoint();
      } else {
        setPoint((Integer)value);
      }
      break;

    case BRIEF_INTRODUCTION:
      if (value == null) {
        unsetBriefIntroduction();
      } else {
        setBriefIntroduction((String)value);
      }
      break;

    case INTRODUCTION:
      if (value == null) {
        unsetIntroduction();
      } else {
        setIntroduction((String)value);
      }
      break;

    case BUY_KNOW:
      if (value == null) {
        unsetBuyKnow();
      } else {
        setBuyKnow((String)value);
      }
      break;

    case AUDIT_STATE:
      if (value == null) {
        unsetAuditState();
      } else {
        setAuditState((String)value);
      }
      break;

    case AUDIT_ORG_CODE:
      if (value == null) {
        unsetAuditOrgCode();
      } else {
        setAuditOrgCode((String)value);
      }
      break;

    case AUDIT_STAGE:
      if (value == null) {
        unsetAuditStage();
      } else {
        setAuditStage((String)value);
      }
      break;

    case REVIEW_STAFF:
      if (value == null) {
        unsetReviewStaff();
      } else {
        setReviewStaff((String)value);
      }
      break;

    case AUDIT_STAFF:
      if (value == null) {
        unsetAuditStaff();
      } else {
        setAuditStaff((String)value);
      }
      break;

    case STORE_COUNT:
      if (value == null) {
        unsetStoreCount();
      } else {
        setStoreCount((Integer)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((Long)value);
      }
      break;

    case DELIVERY_MONEY:
      if (value == null) {
        unsetDeliveryMoney();
      } else {
        setDeliveryMoney((Double)value);
      }
      break;

    case EXPIRE_START_TIME:
      if (value == null) {
        unsetExpireStartTime();
      } else {
        setExpireStartTime((Long)value);
      }
      break;

    case EXPIRE_END_TIME:
      if (value == null) {
        unsetExpireEndTime();
      } else {
        setExpireEndTime((Long)value);
      }
      break;

    case TRUE_BUYER_NUMBER:
      if (value == null) {
        unsetTrueBuyerNumber();
      } else {
        setTrueBuyerNumber((Integer)value);
      }
      break;

    case VIRTUAL_BUYER_NUMBER:
      if (value == null) {
        unsetVirtualBuyerNumber();
      } else {
        setVirtualBuyerNumber((Integer)value);
      }
      break;

    case PRODUCT_SUPPLIER:
      if (value == null) {
        unsetProductSupplier();
      } else {
        setProductSupplier((String)value);
      }
      break;

    case MAX_PER_OUTLET:
      if (value == null) {
        unsetMaxPerOutlet();
      } else {
        setMaxPerOutlet((Integer)value);
      }
      break;

    case DELIVERY_START_TIME:
      if (value == null) {
        unsetDeliveryStartTime();
      } else {
        setDeliveryStartTime((Long)value);
      }
      break;

    case DELIVERY_END_TIME:
      if (value == null) {
        unsetDeliveryEndTime();
      } else {
        setDeliveryEndTime((Long)value);
      }
      break;

    case CLUSTER_STATE:
      if (value == null) {
        unsetClusterState();
      } else {
        setClusterState((Boolean)value);
      }
      break;

    case CLUSTER_TYPE:
      if (value == null) {
        unsetClusterType();
      } else {
        setClusterType((Boolean)value);
      }
      break;

    case DOWN_TIME:
      if (value == null) {
        unsetDownTime();
      } else {
        setDownTime((Long)value);
      }
      break;

    case AUDIT_TIME:
      if (value == null) {
        unsetAuditTime();
      } else {
        setAuditTime((Long)value);
      }
      break;

    case AUDIT_COMMENT:
      if (value == null) {
        unsetAuditComment();
      } else {
        setAuditComment((String)value);
      }
      break;

    case IS_SECKILL:
      if (value == null) {
        unsetIsSeckill();
      } else {
        setIsSeckill((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case AUDIT_START_ORG_CODE:
      if (value == null) {
        unsetAuditStartOrgCode();
      } else {
        setAuditStartOrgCode((String)value);
      }
      break;

    case AUDIT_END_ORG_CODE:
      if (value == null) {
        unsetAuditEndOrgCode();
      } else {
        setAuditEndOrgCode((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case CONTRACT_ENDTIME:
      if (value == null) {
        unsetContractEndtime();
      } else {
        setContractEndtime((Long)value);
      }
      break;

    case SERVER_TIME:
      if (value == null) {
        unsetServerTime();
      } else {
        setServerTime((Long)value);
      }
      break;

    case SEC_STORE:
      if (value == null) {
        unsetSecStore();
      } else {
        setSecStore((Integer)value);
      }
      break;

    case SEC_START_TIME:
      if (value == null) {
        unsetSecStartTime();
      } else {
        setSecStartTime((Long)value);
      }
      break;

    case SEC_END_TIME:
      if (value == null) {
        unsetSecEndTime();
      } else {
        setSecEndTime((Long)value);
      }
      break;

    case IS_POINT:
      if (value == null) {
        unsetIsPoint();
      } else {
        setIsPoint((Boolean)value);
      }
      break;

    case IS_VIP:
      if (value == null) {
        unsetIsVip();
      } else {
        setIsVip((Boolean)value);
      }
      break;

    case VIP_PRICE:
      if (value == null) {
        unsetVipPrice();
      } else {
        setVipPrice((Double)value);
      }
      break;

    case CODE_URL:
      if (value == null) {
        unsetCodeUrl();
      } else {
        setCodeUrl((String)value);
      }
      break;

    case CLIENT_NAME:
      if (value == null) {
        unsetClientName();
      } else {
        setClientName((String)value);
      }
      break;

    case IS_RECOMMEND:
      if (value == null) {
        unsetIsRecommend();
      } else {
        setIsRecommend((Boolean)value);
      }
      break;

    case IS_NEW:
      if (value == null) {
        unsetIsNew();
      } else {
        setIsNew((Boolean)value);
      }
      break;

    case IS_HOT:
      if (value == null) {
        unsetIsHot();
      } else {
        setIsHot((Boolean)value);
      }
      break;

    case IS_BATCH_DELIVERY:
      if (value == null) {
        unsetIsBatchDelivery();
      } else {
        setIsBatchDelivery((Boolean)value);
      }
      break;

    case DELIVERY_TIME:
      if (value == null) {
        unsetDeliveryTime();
      } else {
        setDeliveryTime((Long)value);
      }
      break;

    case AFTER_SHOP:
      if (value == null) {
        unsetAfterShop();
      } else {
        setAfterShop((String)value);
      }
      break;

    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CLIENT_ID:
      return getClientId();

    case MERCHANT_ID:
      return getMerchantId();

    case ORG_CODE:
      return getOrgCode();

    case PRODUCT_ID:
      return getProductId();

    case IS_MARKETABLE:
      return getIsMarketable();

    case RACK_TIME:
      return Long.valueOf(getRackTime());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case TYPE:
      return getType();

    case DELIVERY_OPTION:
      return getDeliveryOption();

    case NAME:
      return getName();

    case FULL_NAME:
      return getFullName();

    case PRICE:
      return Double.valueOf(getPrice());

    case COST:
      return Double.valueOf(getCost());

    case MARKET_PRICE:
      return Double.valueOf(getMarketPrice());

    case WEIGHT:
      return getWeight();

    case WEIGHT_UNIT:
      return getWeightUnit();

    case STORE:
      return Integer.valueOf(getStore());

    case SELL_COUNT:
      return Integer.valueOf(getSellCount());

    case ORDER_VALUE:
      return Integer.valueOf(getOrderValue());

    case IS_BEST:
      return Boolean.valueOf(isIsBest());

    case IS_LIMIT:
      return Boolean.valueOf(isIsLimit());

    case POINT:
      return Integer.valueOf(getPoint());

    case BRIEF_INTRODUCTION:
      return getBriefIntroduction();

    case INTRODUCTION:
      return getIntroduction();

    case BUY_KNOW:
      return getBuyKnow();

    case AUDIT_STATE:
      return getAuditState();

    case AUDIT_ORG_CODE:
      return getAuditOrgCode();

    case AUDIT_STAGE:
      return getAuditStage();

    case REVIEW_STAFF:
      return getReviewStaff();

    case AUDIT_STAFF:
      return getAuditStaff();

    case STORE_COUNT:
      return Integer.valueOf(getStoreCount());

    case START_TIME:
      return Long.valueOf(getStartTime());

    case END_TIME:
      return Long.valueOf(getEndTime());

    case DELIVERY_MONEY:
      return Double.valueOf(getDeliveryMoney());

    case EXPIRE_START_TIME:
      return Long.valueOf(getExpireStartTime());

    case EXPIRE_END_TIME:
      return Long.valueOf(getExpireEndTime());

    case TRUE_BUYER_NUMBER:
      return Integer.valueOf(getTrueBuyerNumber());

    case VIRTUAL_BUYER_NUMBER:
      return Integer.valueOf(getVirtualBuyerNumber());

    case PRODUCT_SUPPLIER:
      return getProductSupplier();

    case MAX_PER_OUTLET:
      return Integer.valueOf(getMaxPerOutlet());

    case DELIVERY_START_TIME:
      return Long.valueOf(getDeliveryStartTime());

    case DELIVERY_END_TIME:
      return Long.valueOf(getDeliveryEndTime());

    case CLUSTER_STATE:
      return Boolean.valueOf(isClusterState());

    case CLUSTER_TYPE:
      return Boolean.valueOf(isClusterType());

    case DOWN_TIME:
      return Long.valueOf(getDownTime());

    case AUDIT_TIME:
      return Long.valueOf(getAuditTime());

    case AUDIT_COMMENT:
      return getAuditComment();

    case IS_SECKILL:
      return getIsSeckill();

    case MERCHANT_NAME:
      return getMerchantName();

    case AUDIT_START_ORG_CODE:
      return getAuditStartOrgCode();

    case AUDIT_END_ORG_CODE:
      return getAuditEndOrgCode();

    case ORG_NAME:
      return getOrgName();

    case PHONE:
      return getPhone();

    case CONTRACT_ENDTIME:
      return Long.valueOf(getContractEndtime());

    case SERVER_TIME:
      return Long.valueOf(getServerTime());

    case SEC_STORE:
      return Integer.valueOf(getSecStore());

    case SEC_START_TIME:
      return Long.valueOf(getSecStartTime());

    case SEC_END_TIME:
      return Long.valueOf(getSecEndTime());

    case IS_POINT:
      return Boolean.valueOf(isIsPoint());

    case IS_VIP:
      return Boolean.valueOf(isIsVip());

    case VIP_PRICE:
      return Double.valueOf(getVipPrice());

    case CODE_URL:
      return getCodeUrl();

    case CLIENT_NAME:
      return getClientName();

    case IS_RECOMMEND:
      return Boolean.valueOf(isIsRecommend());

    case IS_NEW:
      return Boolean.valueOf(isIsNew());

    case IS_HOT:
      return Boolean.valueOf(isIsHot());

    case IS_BATCH_DELIVERY:
      return Boolean.valueOf(isIsBatchDelivery());

    case DELIVERY_TIME:
      return Long.valueOf(getDeliveryTime());

    case AFTER_SHOP:
      return getAfterShop();

    case ID:
      return Long.valueOf(getId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CLIENT_ID:
      return isSetClientId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case ORG_CODE:
      return isSetOrgCode();
    case PRODUCT_ID:
      return isSetProductId();
    case IS_MARKETABLE:
      return isSetIsMarketable();
    case RACK_TIME:
      return isSetRackTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case TYPE:
      return isSetType();
    case DELIVERY_OPTION:
      return isSetDeliveryOption();
    case NAME:
      return isSetName();
    case FULL_NAME:
      return isSetFullName();
    case PRICE:
      return isSetPrice();
    case COST:
      return isSetCost();
    case MARKET_PRICE:
      return isSetMarketPrice();
    case WEIGHT:
      return isSetWeight();
    case WEIGHT_UNIT:
      return isSetWeightUnit();
    case STORE:
      return isSetStore();
    case SELL_COUNT:
      return isSetSellCount();
    case ORDER_VALUE:
      return isSetOrderValue();
    case IS_BEST:
      return isSetIsBest();
    case IS_LIMIT:
      return isSetIsLimit();
    case POINT:
      return isSetPoint();
    case BRIEF_INTRODUCTION:
      return isSetBriefIntroduction();
    case INTRODUCTION:
      return isSetIntroduction();
    case BUY_KNOW:
      return isSetBuyKnow();
    case AUDIT_STATE:
      return isSetAuditState();
    case AUDIT_ORG_CODE:
      return isSetAuditOrgCode();
    case AUDIT_STAGE:
      return isSetAuditStage();
    case REVIEW_STAFF:
      return isSetReviewStaff();
    case AUDIT_STAFF:
      return isSetAuditStaff();
    case STORE_COUNT:
      return isSetStoreCount();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case DELIVERY_MONEY:
      return isSetDeliveryMoney();
    case EXPIRE_START_TIME:
      return isSetExpireStartTime();
    case EXPIRE_END_TIME:
      return isSetExpireEndTime();
    case TRUE_BUYER_NUMBER:
      return isSetTrueBuyerNumber();
    case VIRTUAL_BUYER_NUMBER:
      return isSetVirtualBuyerNumber();
    case PRODUCT_SUPPLIER:
      return isSetProductSupplier();
    case MAX_PER_OUTLET:
      return isSetMaxPerOutlet();
    case DELIVERY_START_TIME:
      return isSetDeliveryStartTime();
    case DELIVERY_END_TIME:
      return isSetDeliveryEndTime();
    case CLUSTER_STATE:
      return isSetClusterState();
    case CLUSTER_TYPE:
      return isSetClusterType();
    case DOWN_TIME:
      return isSetDownTime();
    case AUDIT_TIME:
      return isSetAuditTime();
    case AUDIT_COMMENT:
      return isSetAuditComment();
    case IS_SECKILL:
      return isSetIsSeckill();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case AUDIT_START_ORG_CODE:
      return isSetAuditStartOrgCode();
    case AUDIT_END_ORG_CODE:
      return isSetAuditEndOrgCode();
    case ORG_NAME:
      return isSetOrgName();
    case PHONE:
      return isSetPhone();
    case CONTRACT_ENDTIME:
      return isSetContractEndtime();
    case SERVER_TIME:
      return isSetServerTime();
    case SEC_STORE:
      return isSetSecStore();
    case SEC_START_TIME:
      return isSetSecStartTime();
    case SEC_END_TIME:
      return isSetSecEndTime();
    case IS_POINT:
      return isSetIsPoint();
    case IS_VIP:
      return isSetIsVip();
    case VIP_PRICE:
      return isSetVipPrice();
    case CODE_URL:
      return isSetCodeUrl();
    case CLIENT_NAME:
      return isSetClientName();
    case IS_RECOMMEND:
      return isSetIsRecommend();
    case IS_NEW:
      return isSetIsNew();
    case IS_HOT:
      return isSetIsHot();
    case IS_BATCH_DELIVERY:
      return isSetIsBatchDelivery();
    case DELIVERY_TIME:
      return isSetDeliveryTime();
    case AFTER_SHOP:
      return isSetAfterShop();
    case ID:
      return isSetId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProductVo)
      return this.equals((ProductVo)that);
    return false;
  }

  public boolean equals(ProductVo that) {
    if (that == null)
      return false;

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_isMarketable = true && this.isSetIsMarketable();
    boolean that_present_isMarketable = true && that.isSetIsMarketable();
    if (this_present_isMarketable || that_present_isMarketable) {
      if (!(this_present_isMarketable && that_present_isMarketable))
        return false;
      if (!this.isMarketable.equals(that.isMarketable))
        return false;
    }

    boolean this_present_rackTime = true;
    boolean that_present_rackTime = true;
    if (this_present_rackTime || that_present_rackTime) {
      if (!(this_present_rackTime && that_present_rackTime))
        return false;
      if (this.rackTime != that.rackTime)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_deliveryOption = true && this.isSetDeliveryOption();
    boolean that_present_deliveryOption = true && that.isSetDeliveryOption();
    if (this_present_deliveryOption || that_present_deliveryOption) {
      if (!(this_present_deliveryOption && that_present_deliveryOption))
        return false;
      if (!this.deliveryOption.equals(that.deliveryOption))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_fullName = true && this.isSetFullName();
    boolean that_present_fullName = true && that.isSetFullName();
    if (this_present_fullName || that_present_fullName) {
      if (!(this_present_fullName && that_present_fullName))
        return false;
      if (!this.fullName.equals(that.fullName))
        return false;
    }

    boolean this_present_price = true;
    boolean that_present_price = true;
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (this.price != that.price)
        return false;
    }

    boolean this_present_cost = true;
    boolean that_present_cost = true;
    if (this_present_cost || that_present_cost) {
      if (!(this_present_cost && that_present_cost))
        return false;
      if (this.cost != that.cost)
        return false;
    }

    boolean this_present_marketPrice = true;
    boolean that_present_marketPrice = true;
    if (this_present_marketPrice || that_present_marketPrice) {
      if (!(this_present_marketPrice && that_present_marketPrice))
        return false;
      if (this.marketPrice != that.marketPrice)
        return false;
    }

    boolean this_present_weight = true && this.isSetWeight();
    boolean that_present_weight = true && that.isSetWeight();
    if (this_present_weight || that_present_weight) {
      if (!(this_present_weight && that_present_weight))
        return false;
      if (!this.weight.equals(that.weight))
        return false;
    }

    boolean this_present_weightUnit = true && this.isSetWeightUnit();
    boolean that_present_weightUnit = true && that.isSetWeightUnit();
    if (this_present_weightUnit || that_present_weightUnit) {
      if (!(this_present_weightUnit && that_present_weightUnit))
        return false;
      if (!this.weightUnit.equals(that.weightUnit))
        return false;
    }

    boolean this_present_store = true;
    boolean that_present_store = true;
    if (this_present_store || that_present_store) {
      if (!(this_present_store && that_present_store))
        return false;
      if (this.store != that.store)
        return false;
    }

    boolean this_present_sellCount = true;
    boolean that_present_sellCount = true;
    if (this_present_sellCount || that_present_sellCount) {
      if (!(this_present_sellCount && that_present_sellCount))
        return false;
      if (this.sellCount != that.sellCount)
        return false;
    }

    boolean this_present_orderValue = true;
    boolean that_present_orderValue = true;
    if (this_present_orderValue || that_present_orderValue) {
      if (!(this_present_orderValue && that_present_orderValue))
        return false;
      if (this.orderValue != that.orderValue)
        return false;
    }

    boolean this_present_isBest = true;
    boolean that_present_isBest = true;
    if (this_present_isBest || that_present_isBest) {
      if (!(this_present_isBest && that_present_isBest))
        return false;
      if (this.isBest != that.isBest)
        return false;
    }

    boolean this_present_isLimit = true;
    boolean that_present_isLimit = true;
    if (this_present_isLimit || that_present_isLimit) {
      if (!(this_present_isLimit && that_present_isLimit))
        return false;
      if (this.isLimit != that.isLimit)
        return false;
    }

    boolean this_present_point = true;
    boolean that_present_point = true;
    if (this_present_point || that_present_point) {
      if (!(this_present_point && that_present_point))
        return false;
      if (this.point != that.point)
        return false;
    }

    boolean this_present_briefIntroduction = true && this.isSetBriefIntroduction();
    boolean that_present_briefIntroduction = true && that.isSetBriefIntroduction();
    if (this_present_briefIntroduction || that_present_briefIntroduction) {
      if (!(this_present_briefIntroduction && that_present_briefIntroduction))
        return false;
      if (!this.briefIntroduction.equals(that.briefIntroduction))
        return false;
    }

    boolean this_present_introduction = true && this.isSetIntroduction();
    boolean that_present_introduction = true && that.isSetIntroduction();
    if (this_present_introduction || that_present_introduction) {
      if (!(this_present_introduction && that_present_introduction))
        return false;
      if (!this.introduction.equals(that.introduction))
        return false;
    }

    boolean this_present_buyKnow = true && this.isSetBuyKnow();
    boolean that_present_buyKnow = true && that.isSetBuyKnow();
    if (this_present_buyKnow || that_present_buyKnow) {
      if (!(this_present_buyKnow && that_present_buyKnow))
        return false;
      if (!this.buyKnow.equals(that.buyKnow))
        return false;
    }

    boolean this_present_auditState = true && this.isSetAuditState();
    boolean that_present_auditState = true && that.isSetAuditState();
    if (this_present_auditState || that_present_auditState) {
      if (!(this_present_auditState && that_present_auditState))
        return false;
      if (!this.auditState.equals(that.auditState))
        return false;
    }

    boolean this_present_auditOrgCode = true && this.isSetAuditOrgCode();
    boolean that_present_auditOrgCode = true && that.isSetAuditOrgCode();
    if (this_present_auditOrgCode || that_present_auditOrgCode) {
      if (!(this_present_auditOrgCode && that_present_auditOrgCode))
        return false;
      if (!this.auditOrgCode.equals(that.auditOrgCode))
        return false;
    }

    boolean this_present_auditStage = true && this.isSetAuditStage();
    boolean that_present_auditStage = true && that.isSetAuditStage();
    if (this_present_auditStage || that_present_auditStage) {
      if (!(this_present_auditStage && that_present_auditStage))
        return false;
      if (!this.auditStage.equals(that.auditStage))
        return false;
    }

    boolean this_present_reviewStaff = true && this.isSetReviewStaff();
    boolean that_present_reviewStaff = true && that.isSetReviewStaff();
    if (this_present_reviewStaff || that_present_reviewStaff) {
      if (!(this_present_reviewStaff && that_present_reviewStaff))
        return false;
      if (!this.reviewStaff.equals(that.reviewStaff))
        return false;
    }

    boolean this_present_auditStaff = true && this.isSetAuditStaff();
    boolean that_present_auditStaff = true && that.isSetAuditStaff();
    if (this_present_auditStaff || that_present_auditStaff) {
      if (!(this_present_auditStaff && that_present_auditStaff))
        return false;
      if (!this.auditStaff.equals(that.auditStaff))
        return false;
    }

    boolean this_present_storeCount = true;
    boolean that_present_storeCount = true;
    if (this_present_storeCount || that_present_storeCount) {
      if (!(this_present_storeCount && that_present_storeCount))
        return false;
      if (this.storeCount != that.storeCount)
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_deliveryMoney = true;
    boolean that_present_deliveryMoney = true;
    if (this_present_deliveryMoney || that_present_deliveryMoney) {
      if (!(this_present_deliveryMoney && that_present_deliveryMoney))
        return false;
      if (this.deliveryMoney != that.deliveryMoney)
        return false;
    }

    boolean this_present_expireStartTime = true;
    boolean that_present_expireStartTime = true;
    if (this_present_expireStartTime || that_present_expireStartTime) {
      if (!(this_present_expireStartTime && that_present_expireStartTime))
        return false;
      if (this.expireStartTime != that.expireStartTime)
        return false;
    }

    boolean this_present_expireEndTime = true;
    boolean that_present_expireEndTime = true;
    if (this_present_expireEndTime || that_present_expireEndTime) {
      if (!(this_present_expireEndTime && that_present_expireEndTime))
        return false;
      if (this.expireEndTime != that.expireEndTime)
        return false;
    }

    boolean this_present_trueBuyerNumber = true;
    boolean that_present_trueBuyerNumber = true;
    if (this_present_trueBuyerNumber || that_present_trueBuyerNumber) {
      if (!(this_present_trueBuyerNumber && that_present_trueBuyerNumber))
        return false;
      if (this.trueBuyerNumber != that.trueBuyerNumber)
        return false;
    }

    boolean this_present_virtualBuyerNumber = true;
    boolean that_present_virtualBuyerNumber = true;
    if (this_present_virtualBuyerNumber || that_present_virtualBuyerNumber) {
      if (!(this_present_virtualBuyerNumber && that_present_virtualBuyerNumber))
        return false;
      if (this.virtualBuyerNumber != that.virtualBuyerNumber)
        return false;
    }

    boolean this_present_productSupplier = true && this.isSetProductSupplier();
    boolean that_present_productSupplier = true && that.isSetProductSupplier();
    if (this_present_productSupplier || that_present_productSupplier) {
      if (!(this_present_productSupplier && that_present_productSupplier))
        return false;
      if (!this.productSupplier.equals(that.productSupplier))
        return false;
    }

    boolean this_present_maxPerOutlet = true;
    boolean that_present_maxPerOutlet = true;
    if (this_present_maxPerOutlet || that_present_maxPerOutlet) {
      if (!(this_present_maxPerOutlet && that_present_maxPerOutlet))
        return false;
      if (this.maxPerOutlet != that.maxPerOutlet)
        return false;
    }

    boolean this_present_deliveryStartTime = true;
    boolean that_present_deliveryStartTime = true;
    if (this_present_deliveryStartTime || that_present_deliveryStartTime) {
      if (!(this_present_deliveryStartTime && that_present_deliveryStartTime))
        return false;
      if (this.deliveryStartTime != that.deliveryStartTime)
        return false;
    }

    boolean this_present_deliveryEndTime = true;
    boolean that_present_deliveryEndTime = true;
    if (this_present_deliveryEndTime || that_present_deliveryEndTime) {
      if (!(this_present_deliveryEndTime && that_present_deliveryEndTime))
        return false;
      if (this.deliveryEndTime != that.deliveryEndTime)
        return false;
    }

    boolean this_present_clusterState = true;
    boolean that_present_clusterState = true;
    if (this_present_clusterState || that_present_clusterState) {
      if (!(this_present_clusterState && that_present_clusterState))
        return false;
      if (this.clusterState != that.clusterState)
        return false;
    }

    boolean this_present_clusterType = true;
    boolean that_present_clusterType = true;
    if (this_present_clusterType || that_present_clusterType) {
      if (!(this_present_clusterType && that_present_clusterType))
        return false;
      if (this.clusterType != that.clusterType)
        return false;
    }

    boolean this_present_downTime = true;
    boolean that_present_downTime = true;
    if (this_present_downTime || that_present_downTime) {
      if (!(this_present_downTime && that_present_downTime))
        return false;
      if (this.downTime != that.downTime)
        return false;
    }

    boolean this_present_auditTime = true;
    boolean that_present_auditTime = true;
    if (this_present_auditTime || that_present_auditTime) {
      if (!(this_present_auditTime && that_present_auditTime))
        return false;
      if (this.auditTime != that.auditTime)
        return false;
    }

    boolean this_present_auditComment = true && this.isSetAuditComment();
    boolean that_present_auditComment = true && that.isSetAuditComment();
    if (this_present_auditComment || that_present_auditComment) {
      if (!(this_present_auditComment && that_present_auditComment))
        return false;
      if (!this.auditComment.equals(that.auditComment))
        return false;
    }

    boolean this_present_isSeckill = true && this.isSetIsSeckill();
    boolean that_present_isSeckill = true && that.isSetIsSeckill();
    if (this_present_isSeckill || that_present_isSeckill) {
      if (!(this_present_isSeckill && that_present_isSeckill))
        return false;
      if (!this.isSeckill.equals(that.isSeckill))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_auditStartOrgCode = true && this.isSetAuditStartOrgCode();
    boolean that_present_auditStartOrgCode = true && that.isSetAuditStartOrgCode();
    if (this_present_auditStartOrgCode || that_present_auditStartOrgCode) {
      if (!(this_present_auditStartOrgCode && that_present_auditStartOrgCode))
        return false;
      if (!this.auditStartOrgCode.equals(that.auditStartOrgCode))
        return false;
    }

    boolean this_present_auditEndOrgCode = true && this.isSetAuditEndOrgCode();
    boolean that_present_auditEndOrgCode = true && that.isSetAuditEndOrgCode();
    if (this_present_auditEndOrgCode || that_present_auditEndOrgCode) {
      if (!(this_present_auditEndOrgCode && that_present_auditEndOrgCode))
        return false;
      if (!this.auditEndOrgCode.equals(that.auditEndOrgCode))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_contractEndtime = true;
    boolean that_present_contractEndtime = true;
    if (this_present_contractEndtime || that_present_contractEndtime) {
      if (!(this_present_contractEndtime && that_present_contractEndtime))
        return false;
      if (this.contractEndtime != that.contractEndtime)
        return false;
    }

    boolean this_present_serverTime = true;
    boolean that_present_serverTime = true;
    if (this_present_serverTime || that_present_serverTime) {
      if (!(this_present_serverTime && that_present_serverTime))
        return false;
      if (this.serverTime != that.serverTime)
        return false;
    }

    boolean this_present_secStore = true;
    boolean that_present_secStore = true;
    if (this_present_secStore || that_present_secStore) {
      if (!(this_present_secStore && that_present_secStore))
        return false;
      if (this.secStore != that.secStore)
        return false;
    }

    boolean this_present_secStartTime = true;
    boolean that_present_secStartTime = true;
    if (this_present_secStartTime || that_present_secStartTime) {
      if (!(this_present_secStartTime && that_present_secStartTime))
        return false;
      if (this.secStartTime != that.secStartTime)
        return false;
    }

    boolean this_present_secEndTime = true;
    boolean that_present_secEndTime = true;
    if (this_present_secEndTime || that_present_secEndTime) {
      if (!(this_present_secEndTime && that_present_secEndTime))
        return false;
      if (this.secEndTime != that.secEndTime)
        return false;
    }

    boolean this_present_isPoint = true;
    boolean that_present_isPoint = true;
    if (this_present_isPoint || that_present_isPoint) {
      if (!(this_present_isPoint && that_present_isPoint))
        return false;
      if (this.isPoint != that.isPoint)
        return false;
    }

    boolean this_present_isVip = true;
    boolean that_present_isVip = true;
    if (this_present_isVip || that_present_isVip) {
      if (!(this_present_isVip && that_present_isVip))
        return false;
      if (this.isVip != that.isVip)
        return false;
    }

    boolean this_present_vipPrice = true;
    boolean that_present_vipPrice = true;
    if (this_present_vipPrice || that_present_vipPrice) {
      if (!(this_present_vipPrice && that_present_vipPrice))
        return false;
      if (this.vipPrice != that.vipPrice)
        return false;
    }

    boolean this_present_codeUrl = true && this.isSetCodeUrl();
    boolean that_present_codeUrl = true && that.isSetCodeUrl();
    if (this_present_codeUrl || that_present_codeUrl) {
      if (!(this_present_codeUrl && that_present_codeUrl))
        return false;
      if (!this.codeUrl.equals(that.codeUrl))
        return false;
    }

    boolean this_present_clientName = true && this.isSetClientName();
    boolean that_present_clientName = true && that.isSetClientName();
    if (this_present_clientName || that_present_clientName) {
      if (!(this_present_clientName && that_present_clientName))
        return false;
      if (!this.clientName.equals(that.clientName))
        return false;
    }

    boolean this_present_isRecommend = true;
    boolean that_present_isRecommend = true;
    if (this_present_isRecommend || that_present_isRecommend) {
      if (!(this_present_isRecommend && that_present_isRecommend))
        return false;
      if (this.isRecommend != that.isRecommend)
        return false;
    }

    boolean this_present_isNew = true;
    boolean that_present_isNew = true;
    if (this_present_isNew || that_present_isNew) {
      if (!(this_present_isNew && that_present_isNew))
        return false;
      if (this.isNew != that.isNew)
        return false;
    }

    boolean this_present_isHot = true;
    boolean that_present_isHot = true;
    if (this_present_isHot || that_present_isHot) {
      if (!(this_present_isHot && that_present_isHot))
        return false;
      if (this.isHot != that.isHot)
        return false;
    }

    boolean this_present_isBatchDelivery = true;
    boolean that_present_isBatchDelivery = true;
    if (this_present_isBatchDelivery || that_present_isBatchDelivery) {
      if (!(this_present_isBatchDelivery && that_present_isBatchDelivery))
        return false;
      if (this.isBatchDelivery != that.isBatchDelivery)
        return false;
    }

    boolean this_present_deliveryTime = true;
    boolean that_present_deliveryTime = true;
    if (this_present_deliveryTime || that_present_deliveryTime) {
      if (!(this_present_deliveryTime && that_present_deliveryTime))
        return false;
      if (this.deliveryTime != that.deliveryTime)
        return false;
    }

    boolean this_present_afterShop = true && this.isSetAfterShop();
    boolean that_present_afterShop = true && that.isSetAfterShop();
    if (this_present_afterShop || that_present_afterShop) {
      if (!(this_present_afterShop && that_present_afterShop))
        return false;
      if (!this.afterShop.equals(that.afterShop))
        return false;
    }

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_isMarketable = true && (isSetIsMarketable());
    list.add(present_isMarketable);
    if (present_isMarketable)
      list.add(isMarketable);

    boolean present_rackTime = true;
    list.add(present_rackTime);
    if (present_rackTime)
      list.add(rackTime);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_deliveryOption = true && (isSetDeliveryOption());
    list.add(present_deliveryOption);
    if (present_deliveryOption)
      list.add(deliveryOption);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_fullName = true && (isSetFullName());
    list.add(present_fullName);
    if (present_fullName)
      list.add(fullName);

    boolean present_price = true;
    list.add(present_price);
    if (present_price)
      list.add(price);

    boolean present_cost = true;
    list.add(present_cost);
    if (present_cost)
      list.add(cost);

    boolean present_marketPrice = true;
    list.add(present_marketPrice);
    if (present_marketPrice)
      list.add(marketPrice);

    boolean present_weight = true && (isSetWeight());
    list.add(present_weight);
    if (present_weight)
      list.add(weight);

    boolean present_weightUnit = true && (isSetWeightUnit());
    list.add(present_weightUnit);
    if (present_weightUnit)
      list.add(weightUnit);

    boolean present_store = true;
    list.add(present_store);
    if (present_store)
      list.add(store);

    boolean present_sellCount = true;
    list.add(present_sellCount);
    if (present_sellCount)
      list.add(sellCount);

    boolean present_orderValue = true;
    list.add(present_orderValue);
    if (present_orderValue)
      list.add(orderValue);

    boolean present_isBest = true;
    list.add(present_isBest);
    if (present_isBest)
      list.add(isBest);

    boolean present_isLimit = true;
    list.add(present_isLimit);
    if (present_isLimit)
      list.add(isLimit);

    boolean present_point = true;
    list.add(present_point);
    if (present_point)
      list.add(point);

    boolean present_briefIntroduction = true && (isSetBriefIntroduction());
    list.add(present_briefIntroduction);
    if (present_briefIntroduction)
      list.add(briefIntroduction);

    boolean present_introduction = true && (isSetIntroduction());
    list.add(present_introduction);
    if (present_introduction)
      list.add(introduction);

    boolean present_buyKnow = true && (isSetBuyKnow());
    list.add(present_buyKnow);
    if (present_buyKnow)
      list.add(buyKnow);

    boolean present_auditState = true && (isSetAuditState());
    list.add(present_auditState);
    if (present_auditState)
      list.add(auditState);

    boolean present_auditOrgCode = true && (isSetAuditOrgCode());
    list.add(present_auditOrgCode);
    if (present_auditOrgCode)
      list.add(auditOrgCode);

    boolean present_auditStage = true && (isSetAuditStage());
    list.add(present_auditStage);
    if (present_auditStage)
      list.add(auditStage);

    boolean present_reviewStaff = true && (isSetReviewStaff());
    list.add(present_reviewStaff);
    if (present_reviewStaff)
      list.add(reviewStaff);

    boolean present_auditStaff = true && (isSetAuditStaff());
    list.add(present_auditStaff);
    if (present_auditStaff)
      list.add(auditStaff);

    boolean present_storeCount = true;
    list.add(present_storeCount);
    if (present_storeCount)
      list.add(storeCount);

    boolean present_startTime = true;
    list.add(present_startTime);
    if (present_startTime)
      list.add(startTime);

    boolean present_endTime = true;
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    boolean present_deliveryMoney = true;
    list.add(present_deliveryMoney);
    if (present_deliveryMoney)
      list.add(deliveryMoney);

    boolean present_expireStartTime = true;
    list.add(present_expireStartTime);
    if (present_expireStartTime)
      list.add(expireStartTime);

    boolean present_expireEndTime = true;
    list.add(present_expireEndTime);
    if (present_expireEndTime)
      list.add(expireEndTime);

    boolean present_trueBuyerNumber = true;
    list.add(present_trueBuyerNumber);
    if (present_trueBuyerNumber)
      list.add(trueBuyerNumber);

    boolean present_virtualBuyerNumber = true;
    list.add(present_virtualBuyerNumber);
    if (present_virtualBuyerNumber)
      list.add(virtualBuyerNumber);

    boolean present_productSupplier = true && (isSetProductSupplier());
    list.add(present_productSupplier);
    if (present_productSupplier)
      list.add(productSupplier);

    boolean present_maxPerOutlet = true;
    list.add(present_maxPerOutlet);
    if (present_maxPerOutlet)
      list.add(maxPerOutlet);

    boolean present_deliveryStartTime = true;
    list.add(present_deliveryStartTime);
    if (present_deliveryStartTime)
      list.add(deliveryStartTime);

    boolean present_deliveryEndTime = true;
    list.add(present_deliveryEndTime);
    if (present_deliveryEndTime)
      list.add(deliveryEndTime);

    boolean present_clusterState = true;
    list.add(present_clusterState);
    if (present_clusterState)
      list.add(clusterState);

    boolean present_clusterType = true;
    list.add(present_clusterType);
    if (present_clusterType)
      list.add(clusterType);

    boolean present_downTime = true;
    list.add(present_downTime);
    if (present_downTime)
      list.add(downTime);

    boolean present_auditTime = true;
    list.add(present_auditTime);
    if (present_auditTime)
      list.add(auditTime);

    boolean present_auditComment = true && (isSetAuditComment());
    list.add(present_auditComment);
    if (present_auditComment)
      list.add(auditComment);

    boolean present_isSeckill = true && (isSetIsSeckill());
    list.add(present_isSeckill);
    if (present_isSeckill)
      list.add(isSeckill);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_auditStartOrgCode = true && (isSetAuditStartOrgCode());
    list.add(present_auditStartOrgCode);
    if (present_auditStartOrgCode)
      list.add(auditStartOrgCode);

    boolean present_auditEndOrgCode = true && (isSetAuditEndOrgCode());
    list.add(present_auditEndOrgCode);
    if (present_auditEndOrgCode)
      list.add(auditEndOrgCode);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_contractEndtime = true;
    list.add(present_contractEndtime);
    if (present_contractEndtime)
      list.add(contractEndtime);

    boolean present_serverTime = true;
    list.add(present_serverTime);
    if (present_serverTime)
      list.add(serverTime);

    boolean present_secStore = true;
    list.add(present_secStore);
    if (present_secStore)
      list.add(secStore);

    boolean present_secStartTime = true;
    list.add(present_secStartTime);
    if (present_secStartTime)
      list.add(secStartTime);

    boolean present_secEndTime = true;
    list.add(present_secEndTime);
    if (present_secEndTime)
      list.add(secEndTime);

    boolean present_isPoint = true;
    list.add(present_isPoint);
    if (present_isPoint)
      list.add(isPoint);

    boolean present_isVip = true;
    list.add(present_isVip);
    if (present_isVip)
      list.add(isVip);

    boolean present_vipPrice = true;
    list.add(present_vipPrice);
    if (present_vipPrice)
      list.add(vipPrice);

    boolean present_codeUrl = true && (isSetCodeUrl());
    list.add(present_codeUrl);
    if (present_codeUrl)
      list.add(codeUrl);

    boolean present_clientName = true && (isSetClientName());
    list.add(present_clientName);
    if (present_clientName)
      list.add(clientName);

    boolean present_isRecommend = true;
    list.add(present_isRecommend);
    if (present_isRecommend)
      list.add(isRecommend);

    boolean present_isNew = true;
    list.add(present_isNew);
    if (present_isNew)
      list.add(isNew);

    boolean present_isHot = true;
    list.add(present_isHot);
    if (present_isHot)
      list.add(isHot);

    boolean present_isBatchDelivery = true;
    list.add(present_isBatchDelivery);
    if (present_isBatchDelivery)
      list.add(isBatchDelivery);

    boolean present_deliveryTime = true;
    list.add(present_deliveryTime);
    if (present_deliveryTime)
      list.add(deliveryTime);

    boolean present_afterShop = true && (isSetAfterShop());
    list.add(present_afterShop);
    if (present_afterShop)
      list.add(afterShop);

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    return list.hashCode();
  }

  @Override
  public int compareTo(ProductVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsMarketable()).compareTo(other.isSetIsMarketable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsMarketable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isMarketable, other.isMarketable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRackTime()).compareTo(other.isSetRackTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRackTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rackTime, other.rackTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryOption()).compareTo(other.isSetDeliveryOption());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryOption()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryOption, other.deliveryOption);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFullName()).compareTo(other.isSetFullName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFullName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fullName, other.fullName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCost()).compareTo(other.isSetCost());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCost()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cost, other.cost);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMarketPrice()).compareTo(other.isSetMarketPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarketPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marketPrice, other.marketPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWeight()).compareTo(other.isSetWeight());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeight()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weight, other.weight);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWeightUnit()).compareTo(other.isSetWeightUnit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeightUnit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weightUnit, other.weightUnit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStore()).compareTo(other.isSetStore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.store, other.store);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellCount()).compareTo(other.isSetSellCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellCount, other.sellCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderValue()).compareTo(other.isSetOrderValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderValue, other.orderValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsBest()).compareTo(other.isSetIsBest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsBest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isBest, other.isBest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsLimit()).compareTo(other.isSetIsLimit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsLimit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isLimit, other.isLimit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoint()).compareTo(other.isSetPoint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.point, other.point);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBriefIntroduction()).compareTo(other.isSetBriefIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBriefIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.briefIntroduction, other.briefIntroduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntroduction()).compareTo(other.isSetIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.introduction, other.introduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyKnow()).compareTo(other.isSetBuyKnow());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyKnow()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyKnow, other.buyKnow);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditState()).compareTo(other.isSetAuditState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditState, other.auditState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditOrgCode()).compareTo(other.isSetAuditOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditOrgCode, other.auditOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStage()).compareTo(other.isSetAuditStage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStage, other.auditStage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewStaff()).compareTo(other.isSetReviewStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewStaff, other.reviewStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStaff()).compareTo(other.isSetAuditStaff());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStaff()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStaff, other.auditStaff);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStoreCount()).compareTo(other.isSetStoreCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStoreCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storeCount, other.storeCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryMoney()).compareTo(other.isSetDeliveryMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryMoney, other.deliveryMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpireStartTime()).compareTo(other.isSetExpireStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpireStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expireStartTime, other.expireStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpireEndTime()).compareTo(other.isSetExpireEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpireEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expireEndTime, other.expireEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTrueBuyerNumber()).compareTo(other.isSetTrueBuyerNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrueBuyerNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trueBuyerNumber, other.trueBuyerNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVirtualBuyerNumber()).compareTo(other.isSetVirtualBuyerNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVirtualBuyerNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.virtualBuyerNumber, other.virtualBuyerNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductSupplier()).compareTo(other.isSetProductSupplier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductSupplier()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productSupplier, other.productSupplier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxPerOutlet()).compareTo(other.isSetMaxPerOutlet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxPerOutlet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxPerOutlet, other.maxPerOutlet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryStartTime()).compareTo(other.isSetDeliveryStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryStartTime, other.deliveryStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryEndTime()).compareTo(other.isSetDeliveryEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryEndTime, other.deliveryEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClusterState()).compareTo(other.isSetClusterState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClusterState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clusterState, other.clusterState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClusterType()).compareTo(other.isSetClusterType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClusterType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clusterType, other.clusterType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDownTime()).compareTo(other.isSetDownTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.downTime, other.downTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditTime()).compareTo(other.isSetAuditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditTime, other.auditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditComment()).compareTo(other.isSetAuditComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditComment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditComment, other.auditComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsSeckill()).compareTo(other.isSetIsSeckill());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsSeckill()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isSeckill, other.isSeckill);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStartOrgCode()).compareTo(other.isSetAuditStartOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStartOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStartOrgCode, other.auditStartOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditEndOrgCode()).compareTo(other.isSetAuditEndOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditEndOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditEndOrgCode, other.auditEndOrgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractEndtime()).compareTo(other.isSetContractEndtime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractEndtime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contractEndtime, other.contractEndtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetServerTime()).compareTo(other.isSetServerTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetServerTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serverTime, other.serverTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSecStore()).compareTo(other.isSetSecStore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecStore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secStore, other.secStore);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSecStartTime()).compareTo(other.isSetSecStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secStartTime, other.secStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSecEndTime()).compareTo(other.isSetSecEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secEndTime, other.secEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsPoint()).compareTo(other.isSetIsPoint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsPoint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isPoint, other.isPoint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsVip()).compareTo(other.isSetIsVip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsVip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isVip, other.isVip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVipPrice()).compareTo(other.isSetVipPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVipPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vipPrice, other.vipPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodeUrl()).compareTo(other.isSetCodeUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodeUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codeUrl, other.codeUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientName()).compareTo(other.isSetClientName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientName, other.clientName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsRecommend()).compareTo(other.isSetIsRecommend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRecommend()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRecommend, other.isRecommend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsNew()).compareTo(other.isSetIsNew());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsNew()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isNew, other.isNew);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsHot()).compareTo(other.isSetIsHot());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsHot()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isHot, other.isHot);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsBatchDelivery()).compareTo(other.isSetIsBatchDelivery());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsBatchDelivery()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isBatchDelivery, other.isBatchDelivery);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliveryTime()).compareTo(other.isSetDeliveryTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryTime, other.deliveryTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAfterShop()).compareTo(other.isSetAfterShop());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAfterShop()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.afterShop, other.afterShop);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProductVo(");
    boolean first = true;

    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isMarketable:");
    if (this.isMarketable == null) {
      sb.append("null");
    } else {
      sb.append(this.isMarketable);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("rackTime:");
    sb.append(this.rackTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryOption:");
    if (this.deliveryOption == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryOption);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fullName:");
    if (this.fullName == null) {
      sb.append("null");
    } else {
      sb.append(this.fullName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    sb.append(this.price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cost:");
    sb.append(this.cost);
    first = false;
    if (!first) sb.append(", ");
    sb.append("marketPrice:");
    sb.append(this.marketPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("weight:");
    if (this.weight == null) {
      sb.append("null");
    } else {
      sb.append(this.weight);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("weightUnit:");
    if (this.weightUnit == null) {
      sb.append("null");
    } else {
      sb.append(this.weightUnit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("store:");
    sb.append(this.store);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellCount:");
    sb.append(this.sellCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderValue:");
    sb.append(this.orderValue);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isBest:");
    sb.append(this.isBest);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isLimit:");
    sb.append(this.isLimit);
    first = false;
    if (!first) sb.append(", ");
    sb.append("point:");
    sb.append(this.point);
    first = false;
    if (!first) sb.append(", ");
    sb.append("briefIntroduction:");
    if (this.briefIntroduction == null) {
      sb.append("null");
    } else {
      sb.append(this.briefIntroduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("introduction:");
    if (this.introduction == null) {
      sb.append("null");
    } else {
      sb.append(this.introduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyKnow:");
    if (this.buyKnow == null) {
      sb.append("null");
    } else {
      sb.append(this.buyKnow);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditState:");
    if (this.auditState == null) {
      sb.append("null");
    } else {
      sb.append(this.auditState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditOrgCode:");
    if (this.auditOrgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.auditOrgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStage:");
    if (this.auditStage == null) {
      sb.append("null");
    } else {
      sb.append(this.auditStage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewStaff:");
    if (this.reviewStaff == null) {
      sb.append("null");
    } else {
      sb.append(this.reviewStaff);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStaff:");
    if (this.auditStaff == null) {
      sb.append("null");
    } else {
      sb.append(this.auditStaff);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("storeCount:");
    sb.append(this.storeCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryMoney:");
    sb.append(this.deliveryMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("expireStartTime:");
    sb.append(this.expireStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("expireEndTime:");
    sb.append(this.expireEndTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trueBuyerNumber:");
    sb.append(this.trueBuyerNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("virtualBuyerNumber:");
    sb.append(this.virtualBuyerNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productSupplier:");
    if (this.productSupplier == null) {
      sb.append("null");
    } else {
      sb.append(this.productSupplier);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxPerOutlet:");
    sb.append(this.maxPerOutlet);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryStartTime:");
    sb.append(this.deliveryStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryEndTime:");
    sb.append(this.deliveryEndTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clusterState:");
    sb.append(this.clusterState);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clusterType:");
    sb.append(this.clusterType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("downTime:");
    sb.append(this.downTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditTime:");
    sb.append(this.auditTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditComment:");
    if (this.auditComment == null) {
      sb.append("null");
    } else {
      sb.append(this.auditComment);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isSeckill:");
    if (this.isSeckill == null) {
      sb.append("null");
    } else {
      sb.append(this.isSeckill);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStartOrgCode:");
    if (this.auditStartOrgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.auditStartOrgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditEndOrgCode:");
    if (this.auditEndOrgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.auditEndOrgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contractEndtime:");
    sb.append(this.contractEndtime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("serverTime:");
    sb.append(this.serverTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("secStore:");
    sb.append(this.secStore);
    first = false;
    if (!first) sb.append(", ");
    sb.append("secStartTime:");
    sb.append(this.secStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("secEndTime:");
    sb.append(this.secEndTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isPoint:");
    sb.append(this.isPoint);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isVip:");
    sb.append(this.isVip);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vipPrice:");
    sb.append(this.vipPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("codeUrl:");
    if (this.codeUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.codeUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientName:");
    if (this.clientName == null) {
      sb.append("null");
    } else {
      sb.append(this.clientName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isRecommend:");
    sb.append(this.isRecommend);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isNew:");
    sb.append(this.isNew);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isHot:");
    sb.append(this.isHot);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isBatchDelivery:");
    sb.append(this.isBatchDelivery);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deliveryTime:");
    sb.append(this.deliveryTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("afterShop:");
    if (this.afterShop == null) {
      sb.append("null");
    } else {
      sb.append(this.afterShop);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("id:");
    sb.append(this.id);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductVoStandardSchemeFactory implements SchemeFactory {
    public ProductVoStandardScheme getScheme() {
      return new ProductVoStandardScheme();
    }
  }

  private static class ProductVoStandardScheme extends StandardScheme<ProductVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProductVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IS_MARKETABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isMarketable = iprot.readString();
              struct.setIsMarketableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RACK_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.rackTime = iprot.readI64();
              struct.setRackTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DELIVERY_OPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryOption = iprot.readString();
              struct.setDeliveryOptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // FULL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fullName = iprot.readString();
              struct.setFullNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.price = iprot.readDouble();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // COST
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.cost = iprot.readDouble();
              struct.setCostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // MARKET_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.marketPrice = iprot.readDouble();
              struct.setMarketPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // WEIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.weight = iprot.readString();
              struct.setWeightIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // WEIGHT_UNIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.weightUnit = iprot.readString();
              struct.setWeightUnitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // STORE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.store = iprot.readI32();
              struct.setStoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // SELL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sellCount = iprot.readI32();
              struct.setSellCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // ORDER_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderValue = iprot.readI32();
              struct.setOrderValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // IS_BEST
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isBest = iprot.readBool();
              struct.setIsBestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // IS_LIMIT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isLimit = iprot.readBool();
              struct.setIsLimitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // POINT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.point = iprot.readI32();
              struct.setPointIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // BRIEF_INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.briefIntroduction = iprot.readString();
              struct.setBriefIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.introduction = iprot.readString();
              struct.setIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // BUY_KNOW
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyKnow = iprot.readString();
              struct.setBuyKnowIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // AUDIT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditState = iprot.readString();
              struct.setAuditStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // AUDIT_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditOrgCode = iprot.readString();
              struct.setAuditOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // AUDIT_STAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStage = iprot.readString();
              struct.setAuditStageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // REVIEW_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reviewStaff = iprot.readString();
              struct.setReviewStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // AUDIT_STAFF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStaff = iprot.readString();
              struct.setAuditStaffIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // STORE_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.storeCount = iprot.readI32();
              struct.setStoreCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // DELIVERY_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.deliveryMoney = iprot.readDouble();
              struct.setDeliveryMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // EXPIRE_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expireStartTime = iprot.readI64();
              struct.setExpireStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // EXPIRE_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expireEndTime = iprot.readI64();
              struct.setExpireEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // TRUE_BUYER_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.trueBuyerNumber = iprot.readI32();
              struct.setTrueBuyerNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // VIRTUAL_BUYER_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.virtualBuyerNumber = iprot.readI32();
              struct.setVirtualBuyerNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // PRODUCT_SUPPLIER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productSupplier = iprot.readString();
              struct.setProductSupplierIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // MAX_PER_OUTLET
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxPerOutlet = iprot.readI32();
              struct.setMaxPerOutletIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // DELIVERY_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryStartTime = iprot.readI64();
              struct.setDeliveryStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // DELIVERY_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryEndTime = iprot.readI64();
              struct.setDeliveryEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // CLUSTER_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.clusterState = iprot.readBool();
              struct.setClusterStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // CLUSTER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.clusterType = iprot.readBool();
              struct.setClusterTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 45: // DOWN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.downTime = iprot.readI64();
              struct.setDownTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 46: // AUDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.auditTime = iprot.readI64();
              struct.setAuditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 47: // AUDIT_COMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditComment = iprot.readString();
              struct.setAuditCommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 48: // IS_SECKILL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isSeckill = iprot.readString();
              struct.setIsSeckillIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 49: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 50: // AUDIT_START_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditStartOrgCode = iprot.readString();
              struct.setAuditStartOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 51: // AUDIT_END_ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditEndOrgCode = iprot.readString();
              struct.setAuditEndOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 52: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 53: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 54: // CONTRACT_ENDTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.contractEndtime = iprot.readI64();
              struct.setContractEndtimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 55: // SERVER_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.serverTime = iprot.readI64();
              struct.setServerTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 56: // SEC_STORE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.secStore = iprot.readI32();
              struct.setSecStoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 57: // SEC_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.secStartTime = iprot.readI64();
              struct.setSecStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 58: // SEC_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.secEndTime = iprot.readI64();
              struct.setSecEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 59: // IS_POINT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isPoint = iprot.readBool();
              struct.setIsPointIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 60: // IS_VIP
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isVip = iprot.readBool();
              struct.setIsVipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 61: // VIP_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.vipPrice = iprot.readDouble();
              struct.setVipPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 62: // CODE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.codeUrl = iprot.readString();
              struct.setCodeUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 63: // CLIENT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientName = iprot.readString();
              struct.setClientNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 64: // IS_RECOMMEND
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isRecommend = iprot.readBool();
              struct.setIsRecommendIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 65: // IS_NEW
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isNew = iprot.readBool();
              struct.setIsNewIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 66: // IS_HOT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isHot = iprot.readBool();
              struct.setIsHotIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 67: // IS_BATCH_DELIVERY
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isBatchDelivery = iprot.readBool();
              struct.setIsBatchDeliveryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 68: // DELIVERY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.deliveryTime = iprot.readI64();
              struct.setDeliveryTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 69: // AFTER_SHOP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.afterShop = iprot.readString();
              struct.setAfterShopIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 70: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProductVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.isMarketable != null) {
        oprot.writeFieldBegin(IS_MARKETABLE_FIELD_DESC);
        oprot.writeString(struct.isMarketable);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RACK_TIME_FIELD_DESC);
      oprot.writeI64(struct.rackTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.deliveryOption != null) {
        oprot.writeFieldBegin(DELIVERY_OPTION_FIELD_DESC);
        oprot.writeString(struct.deliveryOption);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.fullName != null) {
        oprot.writeFieldBegin(FULL_NAME_FIELD_DESC);
        oprot.writeString(struct.fullName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeDouble(struct.price);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COST_FIELD_DESC);
      oprot.writeDouble(struct.cost);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MARKET_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.marketPrice);
      oprot.writeFieldEnd();
      if (struct.weight != null) {
        oprot.writeFieldBegin(WEIGHT_FIELD_DESC);
        oprot.writeString(struct.weight);
        oprot.writeFieldEnd();
      }
      if (struct.weightUnit != null) {
        oprot.writeFieldBegin(WEIGHT_UNIT_FIELD_DESC);
        oprot.writeString(struct.weightUnit);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STORE_FIELD_DESC);
      oprot.writeI32(struct.store);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SELL_COUNT_FIELD_DESC);
      oprot.writeI32(struct.sellCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORDER_VALUE_FIELD_DESC);
      oprot.writeI32(struct.orderValue);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_BEST_FIELD_DESC);
      oprot.writeBool(struct.isBest);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_LIMIT_FIELD_DESC);
      oprot.writeBool(struct.isLimit);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(POINT_FIELD_DESC);
      oprot.writeI32(struct.point);
      oprot.writeFieldEnd();
      if (struct.briefIntroduction != null) {
        oprot.writeFieldBegin(BRIEF_INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.briefIntroduction);
        oprot.writeFieldEnd();
      }
      if (struct.introduction != null) {
        oprot.writeFieldBegin(INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.introduction);
        oprot.writeFieldEnd();
      }
      if (struct.buyKnow != null) {
        oprot.writeFieldBegin(BUY_KNOW_FIELD_DESC);
        oprot.writeString(struct.buyKnow);
        oprot.writeFieldEnd();
      }
      if (struct.auditState != null) {
        oprot.writeFieldBegin(AUDIT_STATE_FIELD_DESC);
        oprot.writeString(struct.auditState);
        oprot.writeFieldEnd();
      }
      if (struct.auditOrgCode != null) {
        oprot.writeFieldBegin(AUDIT_ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.auditOrgCode);
        oprot.writeFieldEnd();
      }
      if (struct.auditStage != null) {
        oprot.writeFieldBegin(AUDIT_STAGE_FIELD_DESC);
        oprot.writeString(struct.auditStage);
        oprot.writeFieldEnd();
      }
      if (struct.reviewStaff != null) {
        oprot.writeFieldBegin(REVIEW_STAFF_FIELD_DESC);
        oprot.writeString(struct.reviewStaff);
        oprot.writeFieldEnd();
      }
      if (struct.auditStaff != null) {
        oprot.writeFieldBegin(AUDIT_STAFF_FIELD_DESC);
        oprot.writeString(struct.auditStaff);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STORE_COUNT_FIELD_DESC);
      oprot.writeI32(struct.storeCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.deliveryMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPIRE_START_TIME_FIELD_DESC);
      oprot.writeI64(struct.expireStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPIRE_END_TIME_FIELD_DESC);
      oprot.writeI64(struct.expireEndTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRUE_BUYER_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.trueBuyerNumber);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VIRTUAL_BUYER_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.virtualBuyerNumber);
      oprot.writeFieldEnd();
      if (struct.productSupplier != null) {
        oprot.writeFieldBegin(PRODUCT_SUPPLIER_FIELD_DESC);
        oprot.writeString(struct.productSupplier);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MAX_PER_OUTLET_FIELD_DESC);
      oprot.writeI32(struct.maxPerOutlet);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_START_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_END_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryEndTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CLUSTER_STATE_FIELD_DESC);
      oprot.writeBool(struct.clusterState);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CLUSTER_TYPE_FIELD_DESC);
      oprot.writeBool(struct.clusterType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DOWN_TIME_FIELD_DESC);
      oprot.writeI64(struct.downTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AUDIT_TIME_FIELD_DESC);
      oprot.writeI64(struct.auditTime);
      oprot.writeFieldEnd();
      if (struct.auditComment != null) {
        oprot.writeFieldBegin(AUDIT_COMMENT_FIELD_DESC);
        oprot.writeString(struct.auditComment);
        oprot.writeFieldEnd();
      }
      if (struct.isSeckill != null) {
        oprot.writeFieldBegin(IS_SECKILL_FIELD_DESC);
        oprot.writeString(struct.isSeckill);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      if (struct.auditStartOrgCode != null) {
        oprot.writeFieldBegin(AUDIT_START_ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.auditStartOrgCode);
        oprot.writeFieldEnd();
      }
      if (struct.auditEndOrgCode != null) {
        oprot.writeFieldBegin(AUDIT_END_ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.auditEndOrgCode);
        oprot.writeFieldEnd();
      }
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CONTRACT_ENDTIME_FIELD_DESC);
      oprot.writeI64(struct.contractEndtime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SERVER_TIME_FIELD_DESC);
      oprot.writeI64(struct.serverTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SEC_STORE_FIELD_DESC);
      oprot.writeI32(struct.secStore);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SEC_START_TIME_FIELD_DESC);
      oprot.writeI64(struct.secStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SEC_END_TIME_FIELD_DESC);
      oprot.writeI64(struct.secEndTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_POINT_FIELD_DESC);
      oprot.writeBool(struct.isPoint);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_VIP_FIELD_DESC);
      oprot.writeBool(struct.isVip);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VIP_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.vipPrice);
      oprot.writeFieldEnd();
      if (struct.codeUrl != null) {
        oprot.writeFieldBegin(CODE_URL_FIELD_DESC);
        oprot.writeString(struct.codeUrl);
        oprot.writeFieldEnd();
      }
      if (struct.clientName != null) {
        oprot.writeFieldBegin(CLIENT_NAME_FIELD_DESC);
        oprot.writeString(struct.clientName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_RECOMMEND_FIELD_DESC);
      oprot.writeBool(struct.isRecommend);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_NEW_FIELD_DESC);
      oprot.writeBool(struct.isNew);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_HOT_FIELD_DESC);
      oprot.writeBool(struct.isHot);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_BATCH_DELIVERY_FIELD_DESC);
      oprot.writeBool(struct.isBatchDelivery);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DELIVERY_TIME_FIELD_DESC);
      oprot.writeI64(struct.deliveryTime);
      oprot.writeFieldEnd();
      if (struct.afterShop != null) {
        oprot.writeFieldBegin(AFTER_SHOP_FIELD_DESC);
        oprot.writeString(struct.afterShop);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductVoTupleSchemeFactory implements SchemeFactory {
    public ProductVoTupleScheme getScheme() {
      return new ProductVoTupleScheme();
    }
  }

  private static class ProductVoTupleScheme extends TupleScheme<ProductVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProductVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetClientId()) {
        optionals.set(0);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(1);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(2);
      }
      if (struct.isSetProductId()) {
        optionals.set(3);
      }
      if (struct.isSetIsMarketable()) {
        optionals.set(4);
      }
      if (struct.isSetRackTime()) {
        optionals.set(5);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(6);
      }
      if (struct.isSetType()) {
        optionals.set(7);
      }
      if (struct.isSetDeliveryOption()) {
        optionals.set(8);
      }
      if (struct.isSetName()) {
        optionals.set(9);
      }
      if (struct.isSetFullName()) {
        optionals.set(10);
      }
      if (struct.isSetPrice()) {
        optionals.set(11);
      }
      if (struct.isSetCost()) {
        optionals.set(12);
      }
      if (struct.isSetMarketPrice()) {
        optionals.set(13);
      }
      if (struct.isSetWeight()) {
        optionals.set(14);
      }
      if (struct.isSetWeightUnit()) {
        optionals.set(15);
      }
      if (struct.isSetStore()) {
        optionals.set(16);
      }
      if (struct.isSetSellCount()) {
        optionals.set(17);
      }
      if (struct.isSetOrderValue()) {
        optionals.set(18);
      }
      if (struct.isSetIsBest()) {
        optionals.set(19);
      }
      if (struct.isSetIsLimit()) {
        optionals.set(20);
      }
      if (struct.isSetPoint()) {
        optionals.set(21);
      }
      if (struct.isSetBriefIntroduction()) {
        optionals.set(22);
      }
      if (struct.isSetIntroduction()) {
        optionals.set(23);
      }
      if (struct.isSetBuyKnow()) {
        optionals.set(24);
      }
      if (struct.isSetAuditState()) {
        optionals.set(25);
      }
      if (struct.isSetAuditOrgCode()) {
        optionals.set(26);
      }
      if (struct.isSetAuditStage()) {
        optionals.set(27);
      }
      if (struct.isSetReviewStaff()) {
        optionals.set(28);
      }
      if (struct.isSetAuditStaff()) {
        optionals.set(29);
      }
      if (struct.isSetStoreCount()) {
        optionals.set(30);
      }
      if (struct.isSetStartTime()) {
        optionals.set(31);
      }
      if (struct.isSetEndTime()) {
        optionals.set(32);
      }
      if (struct.isSetDeliveryMoney()) {
        optionals.set(33);
      }
      if (struct.isSetExpireStartTime()) {
        optionals.set(34);
      }
      if (struct.isSetExpireEndTime()) {
        optionals.set(35);
      }
      if (struct.isSetTrueBuyerNumber()) {
        optionals.set(36);
      }
      if (struct.isSetVirtualBuyerNumber()) {
        optionals.set(37);
      }
      if (struct.isSetProductSupplier()) {
        optionals.set(38);
      }
      if (struct.isSetMaxPerOutlet()) {
        optionals.set(39);
      }
      if (struct.isSetDeliveryStartTime()) {
        optionals.set(40);
      }
      if (struct.isSetDeliveryEndTime()) {
        optionals.set(41);
      }
      if (struct.isSetClusterState()) {
        optionals.set(42);
      }
      if (struct.isSetClusterType()) {
        optionals.set(43);
      }
      if (struct.isSetDownTime()) {
        optionals.set(44);
      }
      if (struct.isSetAuditTime()) {
        optionals.set(45);
      }
      if (struct.isSetAuditComment()) {
        optionals.set(46);
      }
      if (struct.isSetIsSeckill()) {
        optionals.set(47);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(48);
      }
      if (struct.isSetAuditStartOrgCode()) {
        optionals.set(49);
      }
      if (struct.isSetAuditEndOrgCode()) {
        optionals.set(50);
      }
      if (struct.isSetOrgName()) {
        optionals.set(51);
      }
      if (struct.isSetPhone()) {
        optionals.set(52);
      }
      if (struct.isSetContractEndtime()) {
        optionals.set(53);
      }
      if (struct.isSetServerTime()) {
        optionals.set(54);
      }
      if (struct.isSetSecStore()) {
        optionals.set(55);
      }
      if (struct.isSetSecStartTime()) {
        optionals.set(56);
      }
      if (struct.isSetSecEndTime()) {
        optionals.set(57);
      }
      if (struct.isSetIsPoint()) {
        optionals.set(58);
      }
      if (struct.isSetIsVip()) {
        optionals.set(59);
      }
      if (struct.isSetVipPrice()) {
        optionals.set(60);
      }
      if (struct.isSetCodeUrl()) {
        optionals.set(61);
      }
      if (struct.isSetClientName()) {
        optionals.set(62);
      }
      if (struct.isSetIsRecommend()) {
        optionals.set(63);
      }
      if (struct.isSetIsNew()) {
        optionals.set(64);
      }
      if (struct.isSetIsHot()) {
        optionals.set(65);
      }
      if (struct.isSetIsBatchDelivery()) {
        optionals.set(66);
      }
      if (struct.isSetDeliveryTime()) {
        optionals.set(67);
      }
      if (struct.isSetAfterShop()) {
        optionals.set(68);
      }
      if (struct.isSetId()) {
        optionals.set(69);
      }
      oprot.writeBitSet(optionals, 70);
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetIsMarketable()) {
        oprot.writeString(struct.isMarketable);
      }
      if (struct.isSetRackTime()) {
        oprot.writeI64(struct.rackTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetDeliveryOption()) {
        oprot.writeString(struct.deliveryOption);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetFullName()) {
        oprot.writeString(struct.fullName);
      }
      if (struct.isSetPrice()) {
        oprot.writeDouble(struct.price);
      }
      if (struct.isSetCost()) {
        oprot.writeDouble(struct.cost);
      }
      if (struct.isSetMarketPrice()) {
        oprot.writeDouble(struct.marketPrice);
      }
      if (struct.isSetWeight()) {
        oprot.writeString(struct.weight);
      }
      if (struct.isSetWeightUnit()) {
        oprot.writeString(struct.weightUnit);
      }
      if (struct.isSetStore()) {
        oprot.writeI32(struct.store);
      }
      if (struct.isSetSellCount()) {
        oprot.writeI32(struct.sellCount);
      }
      if (struct.isSetOrderValue()) {
        oprot.writeI32(struct.orderValue);
      }
      if (struct.isSetIsBest()) {
        oprot.writeBool(struct.isBest);
      }
      if (struct.isSetIsLimit()) {
        oprot.writeBool(struct.isLimit);
      }
      if (struct.isSetPoint()) {
        oprot.writeI32(struct.point);
      }
      if (struct.isSetBriefIntroduction()) {
        oprot.writeString(struct.briefIntroduction);
      }
      if (struct.isSetIntroduction()) {
        oprot.writeString(struct.introduction);
      }
      if (struct.isSetBuyKnow()) {
        oprot.writeString(struct.buyKnow);
      }
      if (struct.isSetAuditState()) {
        oprot.writeString(struct.auditState);
      }
      if (struct.isSetAuditOrgCode()) {
        oprot.writeString(struct.auditOrgCode);
      }
      if (struct.isSetAuditStage()) {
        oprot.writeString(struct.auditStage);
      }
      if (struct.isSetReviewStaff()) {
        oprot.writeString(struct.reviewStaff);
      }
      if (struct.isSetAuditStaff()) {
        oprot.writeString(struct.auditStaff);
      }
      if (struct.isSetStoreCount()) {
        oprot.writeI32(struct.storeCount);
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetDeliveryMoney()) {
        oprot.writeDouble(struct.deliveryMoney);
      }
      if (struct.isSetExpireStartTime()) {
        oprot.writeI64(struct.expireStartTime);
      }
      if (struct.isSetExpireEndTime()) {
        oprot.writeI64(struct.expireEndTime);
      }
      if (struct.isSetTrueBuyerNumber()) {
        oprot.writeI32(struct.trueBuyerNumber);
      }
      if (struct.isSetVirtualBuyerNumber()) {
        oprot.writeI32(struct.virtualBuyerNumber);
      }
      if (struct.isSetProductSupplier()) {
        oprot.writeString(struct.productSupplier);
      }
      if (struct.isSetMaxPerOutlet()) {
        oprot.writeI32(struct.maxPerOutlet);
      }
      if (struct.isSetDeliveryStartTime()) {
        oprot.writeI64(struct.deliveryStartTime);
      }
      if (struct.isSetDeliveryEndTime()) {
        oprot.writeI64(struct.deliveryEndTime);
      }
      if (struct.isSetClusterState()) {
        oprot.writeBool(struct.clusterState);
      }
      if (struct.isSetClusterType()) {
        oprot.writeBool(struct.clusterType);
      }
      if (struct.isSetDownTime()) {
        oprot.writeI64(struct.downTime);
      }
      if (struct.isSetAuditTime()) {
        oprot.writeI64(struct.auditTime);
      }
      if (struct.isSetAuditComment()) {
        oprot.writeString(struct.auditComment);
      }
      if (struct.isSetIsSeckill()) {
        oprot.writeString(struct.isSeckill);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetAuditStartOrgCode()) {
        oprot.writeString(struct.auditStartOrgCode);
      }
      if (struct.isSetAuditEndOrgCode()) {
        oprot.writeString(struct.auditEndOrgCode);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetContractEndtime()) {
        oprot.writeI64(struct.contractEndtime);
      }
      if (struct.isSetServerTime()) {
        oprot.writeI64(struct.serverTime);
      }
      if (struct.isSetSecStore()) {
        oprot.writeI32(struct.secStore);
      }
      if (struct.isSetSecStartTime()) {
        oprot.writeI64(struct.secStartTime);
      }
      if (struct.isSetSecEndTime()) {
        oprot.writeI64(struct.secEndTime);
      }
      if (struct.isSetIsPoint()) {
        oprot.writeBool(struct.isPoint);
      }
      if (struct.isSetIsVip()) {
        oprot.writeBool(struct.isVip);
      }
      if (struct.isSetVipPrice()) {
        oprot.writeDouble(struct.vipPrice);
      }
      if (struct.isSetCodeUrl()) {
        oprot.writeString(struct.codeUrl);
      }
      if (struct.isSetClientName()) {
        oprot.writeString(struct.clientName);
      }
      if (struct.isSetIsRecommend()) {
        oprot.writeBool(struct.isRecommend);
      }
      if (struct.isSetIsNew()) {
        oprot.writeBool(struct.isNew);
      }
      if (struct.isSetIsHot()) {
        oprot.writeBool(struct.isHot);
      }
      if (struct.isSetIsBatchDelivery()) {
        oprot.writeBool(struct.isBatchDelivery);
      }
      if (struct.isSetDeliveryTime()) {
        oprot.writeI64(struct.deliveryTime);
      }
      if (struct.isSetAfterShop()) {
        oprot.writeString(struct.afterShop);
      }
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProductVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(70);
      if (incoming.get(0)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.isMarketable = iprot.readString();
        struct.setIsMarketableIsSet(true);
      }
      if (incoming.get(5)) {
        struct.rackTime = iprot.readI64();
        struct.setRackTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.deliveryOption = iprot.readString();
        struct.setDeliveryOptionIsSet(true);
      }
      if (incoming.get(9)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.fullName = iprot.readString();
        struct.setFullNameIsSet(true);
      }
      if (incoming.get(11)) {
        struct.price = iprot.readDouble();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(12)) {
        struct.cost = iprot.readDouble();
        struct.setCostIsSet(true);
      }
      if (incoming.get(13)) {
        struct.marketPrice = iprot.readDouble();
        struct.setMarketPriceIsSet(true);
      }
      if (incoming.get(14)) {
        struct.weight = iprot.readString();
        struct.setWeightIsSet(true);
      }
      if (incoming.get(15)) {
        struct.weightUnit = iprot.readString();
        struct.setWeightUnitIsSet(true);
      }
      if (incoming.get(16)) {
        struct.store = iprot.readI32();
        struct.setStoreIsSet(true);
      }
      if (incoming.get(17)) {
        struct.sellCount = iprot.readI32();
        struct.setSellCountIsSet(true);
      }
      if (incoming.get(18)) {
        struct.orderValue = iprot.readI32();
        struct.setOrderValueIsSet(true);
      }
      if (incoming.get(19)) {
        struct.isBest = iprot.readBool();
        struct.setIsBestIsSet(true);
      }
      if (incoming.get(20)) {
        struct.isLimit = iprot.readBool();
        struct.setIsLimitIsSet(true);
      }
      if (incoming.get(21)) {
        struct.point = iprot.readI32();
        struct.setPointIsSet(true);
      }
      if (incoming.get(22)) {
        struct.briefIntroduction = iprot.readString();
        struct.setBriefIntroductionIsSet(true);
      }
      if (incoming.get(23)) {
        struct.introduction = iprot.readString();
        struct.setIntroductionIsSet(true);
      }
      if (incoming.get(24)) {
        struct.buyKnow = iprot.readString();
        struct.setBuyKnowIsSet(true);
      }
      if (incoming.get(25)) {
        struct.auditState = iprot.readString();
        struct.setAuditStateIsSet(true);
      }
      if (incoming.get(26)) {
        struct.auditOrgCode = iprot.readString();
        struct.setAuditOrgCodeIsSet(true);
      }
      if (incoming.get(27)) {
        struct.auditStage = iprot.readString();
        struct.setAuditStageIsSet(true);
      }
      if (incoming.get(28)) {
        struct.reviewStaff = iprot.readString();
        struct.setReviewStaffIsSet(true);
      }
      if (incoming.get(29)) {
        struct.auditStaff = iprot.readString();
        struct.setAuditStaffIsSet(true);
      }
      if (incoming.get(30)) {
        struct.storeCount = iprot.readI32();
        struct.setStoreCountIsSet(true);
      }
      if (incoming.get(31)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(32)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(33)) {
        struct.deliveryMoney = iprot.readDouble();
        struct.setDeliveryMoneyIsSet(true);
      }
      if (incoming.get(34)) {
        struct.expireStartTime = iprot.readI64();
        struct.setExpireStartTimeIsSet(true);
      }
      if (incoming.get(35)) {
        struct.expireEndTime = iprot.readI64();
        struct.setExpireEndTimeIsSet(true);
      }
      if (incoming.get(36)) {
        struct.trueBuyerNumber = iprot.readI32();
        struct.setTrueBuyerNumberIsSet(true);
      }
      if (incoming.get(37)) {
        struct.virtualBuyerNumber = iprot.readI32();
        struct.setVirtualBuyerNumberIsSet(true);
      }
      if (incoming.get(38)) {
        struct.productSupplier = iprot.readString();
        struct.setProductSupplierIsSet(true);
      }
      if (incoming.get(39)) {
        struct.maxPerOutlet = iprot.readI32();
        struct.setMaxPerOutletIsSet(true);
      }
      if (incoming.get(40)) {
        struct.deliveryStartTime = iprot.readI64();
        struct.setDeliveryStartTimeIsSet(true);
      }
      if (incoming.get(41)) {
        struct.deliveryEndTime = iprot.readI64();
        struct.setDeliveryEndTimeIsSet(true);
      }
      if (incoming.get(42)) {
        struct.clusterState = iprot.readBool();
        struct.setClusterStateIsSet(true);
      }
      if (incoming.get(43)) {
        struct.clusterType = iprot.readBool();
        struct.setClusterTypeIsSet(true);
      }
      if (incoming.get(44)) {
        struct.downTime = iprot.readI64();
        struct.setDownTimeIsSet(true);
      }
      if (incoming.get(45)) {
        struct.auditTime = iprot.readI64();
        struct.setAuditTimeIsSet(true);
      }
      if (incoming.get(46)) {
        struct.auditComment = iprot.readString();
        struct.setAuditCommentIsSet(true);
      }
      if (incoming.get(47)) {
        struct.isSeckill = iprot.readString();
        struct.setIsSeckillIsSet(true);
      }
      if (incoming.get(48)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(49)) {
        struct.auditStartOrgCode = iprot.readString();
        struct.setAuditStartOrgCodeIsSet(true);
      }
      if (incoming.get(50)) {
        struct.auditEndOrgCode = iprot.readString();
        struct.setAuditEndOrgCodeIsSet(true);
      }
      if (incoming.get(51)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(52)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(53)) {
        struct.contractEndtime = iprot.readI64();
        struct.setContractEndtimeIsSet(true);
      }
      if (incoming.get(54)) {
        struct.serverTime = iprot.readI64();
        struct.setServerTimeIsSet(true);
      }
      if (incoming.get(55)) {
        struct.secStore = iprot.readI32();
        struct.setSecStoreIsSet(true);
      }
      if (incoming.get(56)) {
        struct.secStartTime = iprot.readI64();
        struct.setSecStartTimeIsSet(true);
      }
      if (incoming.get(57)) {
        struct.secEndTime = iprot.readI64();
        struct.setSecEndTimeIsSet(true);
      }
      if (incoming.get(58)) {
        struct.isPoint = iprot.readBool();
        struct.setIsPointIsSet(true);
      }
      if (incoming.get(59)) {
        struct.isVip = iprot.readBool();
        struct.setIsVipIsSet(true);
      }
      if (incoming.get(60)) {
        struct.vipPrice = iprot.readDouble();
        struct.setVipPriceIsSet(true);
      }
      if (incoming.get(61)) {
        struct.codeUrl = iprot.readString();
        struct.setCodeUrlIsSet(true);
      }
      if (incoming.get(62)) {
        struct.clientName = iprot.readString();
        struct.setClientNameIsSet(true);
      }
      if (incoming.get(63)) {
        struct.isRecommend = iprot.readBool();
        struct.setIsRecommendIsSet(true);
      }
      if (incoming.get(64)) {
        struct.isNew = iprot.readBool();
        struct.setIsNewIsSet(true);
      }
      if (incoming.get(65)) {
        struct.isHot = iprot.readBool();
        struct.setIsHotIsSet(true);
      }
      if (incoming.get(66)) {
        struct.isBatchDelivery = iprot.readBool();
        struct.setIsBatchDeliveryIsSet(true);
      }
      if (incoming.get(67)) {
        struct.deliveryTime = iprot.readI64();
        struct.setDeliveryTimeIsSet(true);
      }
      if (incoming.get(68)) {
        struct.afterShop = iprot.readString();
        struct.setAfterShopIsSet(true);
      }
      if (incoming.get(69)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
    }
  }

}

