/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商户用户信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class MerchantUserVo implements org.apache.thrift.TBase<MerchantUserVo, MerchantUserVo._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantUserVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantUserVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MERCHANT_ROLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantRoleId", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField USERNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("username", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PASSWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("password", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField IS_REST_FIELD_DESC = new org.apache.thrift.protocol.TField("isRest", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField IS_DELETE_FIELD_DESC = new org.apache.thrift.protocol.TField("isDelete", org.apache.thrift.protocol.TType.BOOL, (short)12);
  private static final org.apache.thrift.protocol.TField REALNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("realname", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField MERCHANT_IS_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantIsEnable", org.apache.thrift.protocol.TType.BOOL, (short)15);
  private static final org.apache.thrift.protocol.TField MERCHANT_DISABLE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantDisableStatus", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField OPERATOR_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("operatorUserId", org.apache.thrift.protocol.TType.I64, (short)19);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantUserVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantUserVoTupleSchemeFactory());
  }

  /**
   * 主键ID
   */
  public long id; // optional
  /**
   * 创建时间
   */
  public long createTime; // optional
  /**
   * 客户端ID
   */
  public String clientId; // optional
  /**
   * 商户ID
   */
  public String merchantId; // optional
  /**
   * 门店ID
   */
  public String outletId; // optional
  /**
   * 角色ID
   */
  public long merchantRoleId; // optional
  /**
   * 帐号
   */
  public String username; // optional
  /**
   * 密码
   */
  public String password; // optional
  /**
   * 邮箱地址
   */
  public String email; // optional
  /**
   * 电话号码
   */
  public String phone; // optional
  /**
   * 密码是否重置
   */
  public boolean isRest; // optional
  /**
   * 是否删除
   */
  public boolean isDelete; // optional
  /**
   * 真实姓名
   */
  public String realname; // optional
  /**
   * 商户名称
   */
  public String merchantName; // optional
  /**
   * 商户是否可用
   */
  public boolean merchantIsEnable; // optional
  /**
   * 商户禁用状态
   */
  public String merchantDisableStatus; // optional
  /**
   * 商户所属机构码
   */
  public String orgCode; // optional
  /**
   * 门店名称
   */
  public String outletName; // optional
  /**
   * 操作人ID*
   */
  public long operatorUserId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键ID
     */
    ID((short)1, "id"),
    /**
     * 创建时间
     */
    CREATE_TIME((short)2, "createTime"),
    /**
     * 客户端ID
     */
    CLIENT_ID((short)3, "clientId"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)4, "merchantId"),
    /**
     * 门店ID
     */
    OUTLET_ID((short)5, "outletId"),
    /**
     * 角色ID
     */
    MERCHANT_ROLE_ID((short)6, "merchantRoleId"),
    /**
     * 帐号
     */
    USERNAME((short)7, "username"),
    /**
     * 密码
     */
    PASSWORD((short)8, "password"),
    /**
     * 邮箱地址
     */
    EMAIL((short)9, "email"),
    /**
     * 电话号码
     */
    PHONE((short)10, "phone"),
    /**
     * 密码是否重置
     */
    IS_REST((short)11, "isRest"),
    /**
     * 是否删除
     */
    IS_DELETE((short)12, "isDelete"),
    /**
     * 真实姓名
     */
    REALNAME((short)13, "realname"),
    /**
     * 商户名称
     */
    MERCHANT_NAME((short)14, "merchantName"),
    /**
     * 商户是否可用
     */
    MERCHANT_IS_ENABLE((short)15, "merchantIsEnable"),
    /**
     * 商户禁用状态
     */
    MERCHANT_DISABLE_STATUS((short)16, "merchantDisableStatus"),
    /**
     * 商户所属机构码
     */
    ORG_CODE((short)17, "orgCode"),
    /**
     * 门店名称
     */
    OUTLET_NAME((short)18, "outletName"),
    /**
     * 操作人ID*
     */
    OPERATOR_USER_ID((short)19, "operatorUserId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // CLIENT_ID
          return CLIENT_ID;
        case 4: // MERCHANT_ID
          return MERCHANT_ID;
        case 5: // OUTLET_ID
          return OUTLET_ID;
        case 6: // MERCHANT_ROLE_ID
          return MERCHANT_ROLE_ID;
        case 7: // USERNAME
          return USERNAME;
        case 8: // PASSWORD
          return PASSWORD;
        case 9: // EMAIL
          return EMAIL;
        case 10: // PHONE
          return PHONE;
        case 11: // IS_REST
          return IS_REST;
        case 12: // IS_DELETE
          return IS_DELETE;
        case 13: // REALNAME
          return REALNAME;
        case 14: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 15: // MERCHANT_IS_ENABLE
          return MERCHANT_IS_ENABLE;
        case 16: // MERCHANT_DISABLE_STATUS
          return MERCHANT_DISABLE_STATUS;
        case 17: // ORG_CODE
          return ORG_CODE;
        case 18: // OUTLET_NAME
          return OUTLET_NAME;
        case 19: // OPERATOR_USER_ID
          return OPERATOR_USER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __MERCHANTROLEID_ISSET_ID = 2;
  private static final int __ISREST_ISSET_ID = 3;
  private static final int __ISDELETE_ISSET_ID = 4;
  private static final int __MERCHANTISENABLE_ISSET_ID = 5;
  private static final int __OPERATORUSERID_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CREATE_TIME,_Fields.CLIENT_ID,_Fields.MERCHANT_ID,_Fields.OUTLET_ID,_Fields.MERCHANT_ROLE_ID,_Fields.USERNAME,_Fields.PASSWORD,_Fields.EMAIL,_Fields.PHONE,_Fields.IS_REST,_Fields.IS_DELETE,_Fields.REALNAME,_Fields.MERCHANT_NAME,_Fields.MERCHANT_IS_ENABLE,_Fields.MERCHANT_DISABLE_STATUS,_Fields.ORG_CODE,_Fields.OUTLET_NAME,_Fields.OPERATOR_USER_ID};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ROLE_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantRoleId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USERNAME, new org.apache.thrift.meta_data.FieldMetaData("username", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PASSWORD, new org.apache.thrift.meta_data.FieldMetaData("password", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_REST, new org.apache.thrift.meta_data.FieldMetaData("isRest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_DELETE, new org.apache.thrift.meta_data.FieldMetaData("isDelete", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.REALNAME, new org.apache.thrift.meta_data.FieldMetaData("realname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_IS_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("merchantIsEnable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MERCHANT_DISABLE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("merchantDisableStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPERATOR_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("operatorUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantUserVo.class, metaDataMap);
  }

  public MerchantUserVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantUserVo(MerchantUserVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.createTime = other.createTime;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
    this.merchantRoleId = other.merchantRoleId;
    if (other.isSetUsername()) {
      this.username = other.username;
    }
    if (other.isSetPassword()) {
      this.password = other.password;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    this.isRest = other.isRest;
    this.isDelete = other.isDelete;
    if (other.isSetRealname()) {
      this.realname = other.realname;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    this.merchantIsEnable = other.merchantIsEnable;
    if (other.isSetMerchantDisableStatus()) {
      this.merchantDisableStatus = other.merchantDisableStatus;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    this.operatorUserId = other.operatorUserId;
  }

  public MerchantUserVo deepCopy() {
    return new MerchantUserVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.clientId = null;
    this.merchantId = null;
    this.outletId = null;
    setMerchantRoleIdIsSet(false);
    this.merchantRoleId = 0;
    this.username = null;
    this.password = null;
    this.email = null;
    this.phone = null;
    setIsRestIsSet(false);
    this.isRest = false;
    setIsDeleteIsSet(false);
    this.isDelete = false;
    this.realname = null;
    this.merchantName = null;
    setMerchantIsEnableIsSet(false);
    this.merchantIsEnable = false;
    this.merchantDisableStatus = null;
    this.orgCode = null;
    this.outletName = null;
    setOperatorUserIdIsSet(false);
    this.operatorUserId = 0;
  }

  /**
   * 主键ID
   */
  public long getId() {
    return this.id;
  }

  /**
   * 主键ID
   */
  public MerchantUserVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 创建时间
   */
  public long getCreateTime() {
    return this.createTime;
  }

  /**
   * 创建时间
   */
  public MerchantUserVo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public MerchantUserVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public MerchantUserVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 门店ID
   */
  public String getOutletId() {
    return this.outletId;
  }

  /**
   * 门店ID
   */
  public MerchantUserVo setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  /**
   * 角色ID
   */
  public long getMerchantRoleId() {
    return this.merchantRoleId;
  }

  /**
   * 角色ID
   */
  public MerchantUserVo setMerchantRoleId(long merchantRoleId) {
    this.merchantRoleId = merchantRoleId;
    setMerchantRoleIdIsSet(true);
    return this;
  }

  public void unsetMerchantRoleId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MERCHANTROLEID_ISSET_ID);
  }

  /** Returns true if field merchantRoleId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantRoleId() {
    return EncodingUtils.testBit(__isset_bitfield, __MERCHANTROLEID_ISSET_ID);
  }

  public void setMerchantRoleIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MERCHANTROLEID_ISSET_ID, value);
  }

  /**
   * 帐号
   */
  public String getUsername() {
    return this.username;
  }

  /**
   * 帐号
   */
  public MerchantUserVo setUsername(String username) {
    this.username = username;
    return this;
  }

  public void unsetUsername() {
    this.username = null;
  }

  /** Returns true if field username is set (has been assigned a value) and false otherwise */
  public boolean isSetUsername() {
    return this.username != null;
  }

  public void setUsernameIsSet(boolean value) {
    if (!value) {
      this.username = null;
    }
  }

  /**
   * 密码
   */
  public String getPassword() {
    return this.password;
  }

  /**
   * 密码
   */
  public MerchantUserVo setPassword(String password) {
    this.password = password;
    return this;
  }

  public void unsetPassword() {
    this.password = null;
  }

  /** Returns true if field password is set (has been assigned a value) and false otherwise */
  public boolean isSetPassword() {
    return this.password != null;
  }

  public void setPasswordIsSet(boolean value) {
    if (!value) {
      this.password = null;
    }
  }

  /**
   * 邮箱地址
   */
  public String getEmail() {
    return this.email;
  }

  /**
   * 邮箱地址
   */
  public MerchantUserVo setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  /**
   * 电话号码
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 电话号码
   */
  public MerchantUserVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 密码是否重置
   */
  public boolean isIsRest() {
    return this.isRest;
  }

  /**
   * 密码是否重置
   */
  public MerchantUserVo setIsRest(boolean isRest) {
    this.isRest = isRest;
    setIsRestIsSet(true);
    return this;
  }

  public void unsetIsRest() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISREST_ISSET_ID);
  }

  /** Returns true if field isRest is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRest() {
    return EncodingUtils.testBit(__isset_bitfield, __ISREST_ISSET_ID);
  }

  public void setIsRestIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISREST_ISSET_ID, value);
  }

  /**
   * 是否删除
   */
  public boolean isIsDelete() {
    return this.isDelete;
  }

  /**
   * 是否删除
   */
  public MerchantUserVo setIsDelete(boolean isDelete) {
    this.isDelete = isDelete;
    setIsDeleteIsSet(true);
    return this;
  }

  public void unsetIsDelete() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISDELETE_ISSET_ID);
  }

  /** Returns true if field isDelete is set (has been assigned a value) and false otherwise */
  public boolean isSetIsDelete() {
    return EncodingUtils.testBit(__isset_bitfield, __ISDELETE_ISSET_ID);
  }

  public void setIsDeleteIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISDELETE_ISSET_ID, value);
  }

  /**
   * 真实姓名
   */
  public String getRealname() {
    return this.realname;
  }

  /**
   * 真实姓名
   */
  public MerchantUserVo setRealname(String realname) {
    this.realname = realname;
    return this;
  }

  public void unsetRealname() {
    this.realname = null;
  }

  /** Returns true if field realname is set (has been assigned a value) and false otherwise */
  public boolean isSetRealname() {
    return this.realname != null;
  }

  public void setRealnameIsSet(boolean value) {
    if (!value) {
      this.realname = null;
    }
  }

  /**
   * 商户名称
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称
   */
  public MerchantUserVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 商户是否可用
   */
  public boolean isMerchantIsEnable() {
    return this.merchantIsEnable;
  }

  /**
   * 商户是否可用
   */
  public MerchantUserVo setMerchantIsEnable(boolean merchantIsEnable) {
    this.merchantIsEnable = merchantIsEnable;
    setMerchantIsEnableIsSet(true);
    return this;
  }

  public void unsetMerchantIsEnable() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MERCHANTISENABLE_ISSET_ID);
  }

  /** Returns true if field merchantIsEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantIsEnable() {
    return EncodingUtils.testBit(__isset_bitfield, __MERCHANTISENABLE_ISSET_ID);
  }

  public void setMerchantIsEnableIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MERCHANTISENABLE_ISSET_ID, value);
  }

  /**
   * 商户禁用状态
   */
  public String getMerchantDisableStatus() {
    return this.merchantDisableStatus;
  }

  /**
   * 商户禁用状态
   */
  public MerchantUserVo setMerchantDisableStatus(String merchantDisableStatus) {
    this.merchantDisableStatus = merchantDisableStatus;
    return this;
  }

  public void unsetMerchantDisableStatus() {
    this.merchantDisableStatus = null;
  }

  /** Returns true if field merchantDisableStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantDisableStatus() {
    return this.merchantDisableStatus != null;
  }

  public void setMerchantDisableStatusIsSet(boolean value) {
    if (!value) {
      this.merchantDisableStatus = null;
    }
  }

  /**
   * 商户所属机构码
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 商户所属机构码
   */
  public MerchantUserVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 门店名称
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 门店名称
   */
  public MerchantUserVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 操作人ID*
   */
  public long getOperatorUserId() {
    return this.operatorUserId;
  }

  /**
   * 操作人ID*
   */
  public MerchantUserVo setOperatorUserId(long operatorUserId) {
    this.operatorUserId = operatorUserId;
    setOperatorUserIdIsSet(true);
    return this;
  }

  public void unsetOperatorUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OPERATORUSERID_ISSET_ID);
  }

  /** Returns true if field operatorUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetOperatorUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __OPERATORUSERID_ISSET_ID);
  }

  public void setOperatorUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OPERATORUSERID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    case MERCHANT_ROLE_ID:
      if (value == null) {
        unsetMerchantRoleId();
      } else {
        setMerchantRoleId((Long)value);
      }
      break;

    case USERNAME:
      if (value == null) {
        unsetUsername();
      } else {
        setUsername((String)value);
      }
      break;

    case PASSWORD:
      if (value == null) {
        unsetPassword();
      } else {
        setPassword((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case IS_REST:
      if (value == null) {
        unsetIsRest();
      } else {
        setIsRest((Boolean)value);
      }
      break;

    case IS_DELETE:
      if (value == null) {
        unsetIsDelete();
      } else {
        setIsDelete((Boolean)value);
      }
      break;

    case REALNAME:
      if (value == null) {
        unsetRealname();
      } else {
        setRealname((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case MERCHANT_IS_ENABLE:
      if (value == null) {
        unsetMerchantIsEnable();
      } else {
        setMerchantIsEnable((Boolean)value);
      }
      break;

    case MERCHANT_DISABLE_STATUS:
      if (value == null) {
        unsetMerchantDisableStatus();
      } else {
        setMerchantDisableStatus((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case OPERATOR_USER_ID:
      if (value == null) {
        unsetOperatorUserId();
      } else {
        setOperatorUserId((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case CLIENT_ID:
      return getClientId();

    case MERCHANT_ID:
      return getMerchantId();

    case OUTLET_ID:
      return getOutletId();

    case MERCHANT_ROLE_ID:
      return Long.valueOf(getMerchantRoleId());

    case USERNAME:
      return getUsername();

    case PASSWORD:
      return getPassword();

    case EMAIL:
      return getEmail();

    case PHONE:
      return getPhone();

    case IS_REST:
      return Boolean.valueOf(isIsRest());

    case IS_DELETE:
      return Boolean.valueOf(isIsDelete());

    case REALNAME:
      return getRealname();

    case MERCHANT_NAME:
      return getMerchantName();

    case MERCHANT_IS_ENABLE:
      return Boolean.valueOf(isMerchantIsEnable());

    case MERCHANT_DISABLE_STATUS:
      return getMerchantDisableStatus();

    case ORG_CODE:
      return getOrgCode();

    case OUTLET_NAME:
      return getOutletName();

    case OPERATOR_USER_ID:
      return Long.valueOf(getOperatorUserId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case CLIENT_ID:
      return isSetClientId();
    case MERCHANT_ID:
      return isSetMerchantId();
    case OUTLET_ID:
      return isSetOutletId();
    case MERCHANT_ROLE_ID:
      return isSetMerchantRoleId();
    case USERNAME:
      return isSetUsername();
    case PASSWORD:
      return isSetPassword();
    case EMAIL:
      return isSetEmail();
    case PHONE:
      return isSetPhone();
    case IS_REST:
      return isSetIsRest();
    case IS_DELETE:
      return isSetIsDelete();
    case REALNAME:
      return isSetRealname();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case MERCHANT_IS_ENABLE:
      return isSetMerchantIsEnable();
    case MERCHANT_DISABLE_STATUS:
      return isSetMerchantDisableStatus();
    case ORG_CODE:
      return isSetOrgCode();
    case OUTLET_NAME:
      return isSetOutletName();
    case OPERATOR_USER_ID:
      return isSetOperatorUserId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantUserVo)
      return this.equals((MerchantUserVo)that);
    return false;
  }

  public boolean equals(MerchantUserVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    boolean this_present_merchantRoleId = true && this.isSetMerchantRoleId();
    boolean that_present_merchantRoleId = true && that.isSetMerchantRoleId();
    if (this_present_merchantRoleId || that_present_merchantRoleId) {
      if (!(this_present_merchantRoleId && that_present_merchantRoleId))
        return false;
      if (this.merchantRoleId != that.merchantRoleId)
        return false;
    }

    boolean this_present_username = true && this.isSetUsername();
    boolean that_present_username = true && that.isSetUsername();
    if (this_present_username || that_present_username) {
      if (!(this_present_username && that_present_username))
        return false;
      if (!this.username.equals(that.username))
        return false;
    }

    boolean this_present_password = true && this.isSetPassword();
    boolean that_present_password = true && that.isSetPassword();
    if (this_present_password || that_present_password) {
      if (!(this_present_password && that_present_password))
        return false;
      if (!this.password.equals(that.password))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_isRest = true && this.isSetIsRest();
    boolean that_present_isRest = true && that.isSetIsRest();
    if (this_present_isRest || that_present_isRest) {
      if (!(this_present_isRest && that_present_isRest))
        return false;
      if (this.isRest != that.isRest)
        return false;
    }

    boolean this_present_isDelete = true && this.isSetIsDelete();
    boolean that_present_isDelete = true && that.isSetIsDelete();
    if (this_present_isDelete || that_present_isDelete) {
      if (!(this_present_isDelete && that_present_isDelete))
        return false;
      if (this.isDelete != that.isDelete)
        return false;
    }

    boolean this_present_realname = true && this.isSetRealname();
    boolean that_present_realname = true && that.isSetRealname();
    if (this_present_realname || that_present_realname) {
      if (!(this_present_realname && that_present_realname))
        return false;
      if (!this.realname.equals(that.realname))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_merchantIsEnable = true && this.isSetMerchantIsEnable();
    boolean that_present_merchantIsEnable = true && that.isSetMerchantIsEnable();
    if (this_present_merchantIsEnable || that_present_merchantIsEnable) {
      if (!(this_present_merchantIsEnable && that_present_merchantIsEnable))
        return false;
      if (this.merchantIsEnable != that.merchantIsEnable)
        return false;
    }

    boolean this_present_merchantDisableStatus = true && this.isSetMerchantDisableStatus();
    boolean that_present_merchantDisableStatus = true && that.isSetMerchantDisableStatus();
    if (this_present_merchantDisableStatus || that_present_merchantDisableStatus) {
      if (!(this_present_merchantDisableStatus && that_present_merchantDisableStatus))
        return false;
      if (!this.merchantDisableStatus.equals(that.merchantDisableStatus))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_operatorUserId = true && this.isSetOperatorUserId();
    boolean that_present_operatorUserId = true && that.isSetOperatorUserId();
    if (this_present_operatorUserId || that_present_operatorUserId) {
      if (!(this_present_operatorUserId && that_present_operatorUserId))
        return false;
      if (this.operatorUserId != that.operatorUserId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    boolean present_merchantRoleId = true && (isSetMerchantRoleId());
    list.add(present_merchantRoleId);
    if (present_merchantRoleId)
      list.add(merchantRoleId);

    boolean present_username = true && (isSetUsername());
    list.add(present_username);
    if (present_username)
      list.add(username);

    boolean present_password = true && (isSetPassword());
    list.add(present_password);
    if (present_password)
      list.add(password);

    boolean present_email = true && (isSetEmail());
    list.add(present_email);
    if (present_email)
      list.add(email);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_isRest = true && (isSetIsRest());
    list.add(present_isRest);
    if (present_isRest)
      list.add(isRest);

    boolean present_isDelete = true && (isSetIsDelete());
    list.add(present_isDelete);
    if (present_isDelete)
      list.add(isDelete);

    boolean present_realname = true && (isSetRealname());
    list.add(present_realname);
    if (present_realname)
      list.add(realname);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_merchantIsEnable = true && (isSetMerchantIsEnable());
    list.add(present_merchantIsEnable);
    if (present_merchantIsEnable)
      list.add(merchantIsEnable);

    boolean present_merchantDisableStatus = true && (isSetMerchantDisableStatus());
    list.add(present_merchantDisableStatus);
    if (present_merchantDisableStatus)
      list.add(merchantDisableStatus);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_operatorUserId = true && (isSetOperatorUserId());
    list.add(present_operatorUserId);
    if (present_operatorUserId)
      list.add(operatorUserId);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantUserVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantRoleId()).compareTo(other.isSetMerchantRoleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantRoleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantRoleId, other.merchantRoleId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUsername()).compareTo(other.isSetUsername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsername()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.username, other.username);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPassword()).compareTo(other.isSetPassword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPassword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.password, other.password);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsRest()).compareTo(other.isSetIsRest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRest, other.isRest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsDelete()).compareTo(other.isSetIsDelete());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDelete()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDelete, other.isDelete);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRealname()).compareTo(other.isSetRealname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRealname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.realname, other.realname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantIsEnable()).compareTo(other.isSetMerchantIsEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantIsEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantIsEnable, other.merchantIsEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantDisableStatus()).compareTo(other.isSetMerchantDisableStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantDisableStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantDisableStatus, other.merchantDisableStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOperatorUserId()).compareTo(other.isSetOperatorUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperatorUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operatorUserId, other.operatorUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantUserVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetOutletId()) {
      if (!first) sb.append(", ");
      sb.append("outletId:");
      if (this.outletId == null) {
        sb.append("null");
      } else {
        sb.append(this.outletId);
      }
      first = false;
    }
    if (isSetMerchantRoleId()) {
      if (!first) sb.append(", ");
      sb.append("merchantRoleId:");
      sb.append(this.merchantRoleId);
      first = false;
    }
    if (isSetUsername()) {
      if (!first) sb.append(", ");
      sb.append("username:");
      if (this.username == null) {
        sb.append("null");
      } else {
        sb.append(this.username);
      }
      first = false;
    }
    if (isSetPassword()) {
      if (!first) sb.append(", ");
      sb.append("password:");
      if (this.password == null) {
        sb.append("null");
      } else {
        sb.append(this.password);
      }
      first = false;
    }
    if (isSetEmail()) {
      if (!first) sb.append(", ");
      sb.append("email:");
      if (this.email == null) {
        sb.append("null");
      } else {
        sb.append(this.email);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetIsRest()) {
      if (!first) sb.append(", ");
      sb.append("isRest:");
      sb.append(this.isRest);
      first = false;
    }
    if (isSetIsDelete()) {
      if (!first) sb.append(", ");
      sb.append("isDelete:");
      sb.append(this.isDelete);
      first = false;
    }
    if (isSetRealname()) {
      if (!first) sb.append(", ");
      sb.append("realname:");
      if (this.realname == null) {
        sb.append("null");
      } else {
        sb.append(this.realname);
      }
      first = false;
    }
    if (isSetMerchantName()) {
      if (!first) sb.append(", ");
      sb.append("merchantName:");
      if (this.merchantName == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantName);
      }
      first = false;
    }
    if (isSetMerchantIsEnable()) {
      if (!first) sb.append(", ");
      sb.append("merchantIsEnable:");
      sb.append(this.merchantIsEnable);
      first = false;
    }
    if (isSetMerchantDisableStatus()) {
      if (!first) sb.append(", ");
      sb.append("merchantDisableStatus:");
      if (this.merchantDisableStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantDisableStatus);
      }
      first = false;
    }
    if (isSetOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
    }
    if (isSetOutletName()) {
      if (!first) sb.append(", ");
      sb.append("outletName:");
      if (this.outletName == null) {
        sb.append("null");
      } else {
        sb.append(this.outletName);
      }
      first = false;
    }
    if (isSetOperatorUserId()) {
      if (!first) sb.append(", ");
      sb.append("operatorUserId:");
      sb.append(this.operatorUserId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantUserVoStandardSchemeFactory implements SchemeFactory {
    public MerchantUserVoStandardScheme getScheme() {
      return new MerchantUserVoStandardScheme();
    }
  }

  private static class MerchantUserVoStandardScheme extends StandardScheme<MerchantUserVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantUserVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MERCHANT_ROLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.merchantRoleId = iprot.readI64();
              struct.setMerchantRoleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // USERNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.username = iprot.readString();
              struct.setUsernameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PASSWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.password = iprot.readString();
              struct.setPasswordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // IS_REST
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isRest = iprot.readBool();
              struct.setIsRestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_DELETE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isDelete = iprot.readBool();
              struct.setIsDeleteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // REALNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.realname = iprot.readString();
              struct.setRealnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // MERCHANT_IS_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.merchantIsEnable = iprot.readBool();
              struct.setMerchantIsEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // MERCHANT_DISABLE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantDisableStatus = iprot.readString();
              struct.setMerchantDisableStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // OPERATOR_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.operatorUserId = iprot.readI64();
              struct.setOperatorUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantUserVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTime()) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeI64(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletId != null) {
        if (struct.isSetOutletId()) {
          oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
          oprot.writeString(struct.outletId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetMerchantRoleId()) {
        oprot.writeFieldBegin(MERCHANT_ROLE_ID_FIELD_DESC);
        oprot.writeI64(struct.merchantRoleId);
        oprot.writeFieldEnd();
      }
      if (struct.username != null) {
        if (struct.isSetUsername()) {
          oprot.writeFieldBegin(USERNAME_FIELD_DESC);
          oprot.writeString(struct.username);
          oprot.writeFieldEnd();
        }
      }
      if (struct.password != null) {
        if (struct.isSetPassword()) {
          oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
          oprot.writeString(struct.password);
          oprot.writeFieldEnd();
        }
      }
      if (struct.email != null) {
        if (struct.isSetEmail()) {
          oprot.writeFieldBegin(EMAIL_FIELD_DESC);
          oprot.writeString(struct.email);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsRest()) {
        oprot.writeFieldBegin(IS_REST_FIELD_DESC);
        oprot.writeBool(struct.isRest);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsDelete()) {
        oprot.writeFieldBegin(IS_DELETE_FIELD_DESC);
        oprot.writeBool(struct.isDelete);
        oprot.writeFieldEnd();
      }
      if (struct.realname != null) {
        if (struct.isSetRealname()) {
          oprot.writeFieldBegin(REALNAME_FIELD_DESC);
          oprot.writeString(struct.realname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantName != null) {
        if (struct.isSetMerchantName()) {
          oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
          oprot.writeString(struct.merchantName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetMerchantIsEnable()) {
        oprot.writeFieldBegin(MERCHANT_IS_ENABLE_FIELD_DESC);
        oprot.writeBool(struct.merchantIsEnable);
        oprot.writeFieldEnd();
      }
      if (struct.merchantDisableStatus != null) {
        if (struct.isSetMerchantDisableStatus()) {
          oprot.writeFieldBegin(MERCHANT_DISABLE_STATUS_FIELD_DESC);
          oprot.writeString(struct.merchantDisableStatus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgCode != null) {
        if (struct.isSetOrgCode()) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletName != null) {
        if (struct.isSetOutletName()) {
          oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
          oprot.writeString(struct.outletName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOperatorUserId()) {
        oprot.writeFieldBegin(OPERATOR_USER_ID_FIELD_DESC);
        oprot.writeI64(struct.operatorUserId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantUserVoTupleSchemeFactory implements SchemeFactory {
    public MerchantUserVoTupleScheme getScheme() {
      return new MerchantUserVoTupleScheme();
    }
  }

  private static class MerchantUserVoTupleScheme extends TupleScheme<MerchantUserVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantUserVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetClientId()) {
        optionals.set(2);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(3);
      }
      if (struct.isSetOutletId()) {
        optionals.set(4);
      }
      if (struct.isSetMerchantRoleId()) {
        optionals.set(5);
      }
      if (struct.isSetUsername()) {
        optionals.set(6);
      }
      if (struct.isSetPassword()) {
        optionals.set(7);
      }
      if (struct.isSetEmail()) {
        optionals.set(8);
      }
      if (struct.isSetPhone()) {
        optionals.set(9);
      }
      if (struct.isSetIsRest()) {
        optionals.set(10);
      }
      if (struct.isSetIsDelete()) {
        optionals.set(11);
      }
      if (struct.isSetRealname()) {
        optionals.set(12);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(13);
      }
      if (struct.isSetMerchantIsEnable()) {
        optionals.set(14);
      }
      if (struct.isSetMerchantDisableStatus()) {
        optionals.set(15);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(16);
      }
      if (struct.isSetOutletName()) {
        optionals.set(17);
      }
      if (struct.isSetOperatorUserId()) {
        optionals.set(18);
      }
      oprot.writeBitSet(optionals, 19);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
      if (struct.isSetMerchantRoleId()) {
        oprot.writeI64(struct.merchantRoleId);
      }
      if (struct.isSetUsername()) {
        oprot.writeString(struct.username);
      }
      if (struct.isSetPassword()) {
        oprot.writeString(struct.password);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetIsRest()) {
        oprot.writeBool(struct.isRest);
      }
      if (struct.isSetIsDelete()) {
        oprot.writeBool(struct.isDelete);
      }
      if (struct.isSetRealname()) {
        oprot.writeString(struct.realname);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetMerchantIsEnable()) {
        oprot.writeBool(struct.merchantIsEnable);
      }
      if (struct.isSetMerchantDisableStatus()) {
        oprot.writeString(struct.merchantDisableStatus);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetOperatorUserId()) {
        oprot.writeI64(struct.operatorUserId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantUserVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(19);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.merchantRoleId = iprot.readI64();
        struct.setMerchantRoleIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.username = iprot.readString();
        struct.setUsernameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.password = iprot.readString();
        struct.setPasswordIsSet(true);
      }
      if (incoming.get(8)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(9)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(10)) {
        struct.isRest = iprot.readBool();
        struct.setIsRestIsSet(true);
      }
      if (incoming.get(11)) {
        struct.isDelete = iprot.readBool();
        struct.setIsDeleteIsSet(true);
      }
      if (incoming.get(12)) {
        struct.realname = iprot.readString();
        struct.setRealnameIsSet(true);
      }
      if (incoming.get(13)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.merchantIsEnable = iprot.readBool();
        struct.setMerchantIsEnableIsSet(true);
      }
      if (incoming.get(15)) {
        struct.merchantDisableStatus = iprot.readString();
        struct.setMerchantDisableStatusIsSet(true);
      }
      if (incoming.get(16)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.operatorUserId = iprot.readI64();
        struct.setOperatorUserIdIsSet(true);
      }
    }
  }

}

