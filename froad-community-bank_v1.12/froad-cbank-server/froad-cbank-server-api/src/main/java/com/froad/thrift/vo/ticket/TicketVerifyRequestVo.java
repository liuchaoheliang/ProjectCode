/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.ticket;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 验券请求VO
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class TicketVerifyRequestVo implements org.apache.thrift.TBase<TicketVerifyRequestVo, TicketVerifyRequestVo._Fields>, java.io.Serializable, Cloneable, Comparable<TicketVerifyRequestVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TicketVerifyRequestVo");

  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField RESOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("resource", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField MERCHANT_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantUserId", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField MERCHANT_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantUserName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField TICKET_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("ticketList", org.apache.thrift.protocol.TType.LIST, (short)9);
  private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TicketVerifyRequestVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TicketVerifyRequestVoTupleSchemeFactory());
  }

  /**
   * 客户端ID
   */
  public String clientId; // required
  /**
   * 请求来源，1-银行端，2-商户端，3-个人端
   */
  public String resource; // required
  /**
   * 商户ID
   */
  public String merchantId; // required
  /**
   * 消费门店ID
   */
  public String outletId; // required
  /**
   * 消费门店名称
   */
  public String outletName; // required
  /**
   * 机构号
   */
  public String orgCode; // required
  /**
   * 商户操作员
   */
  public long merchantUserId; // required
  /**
   * 商户操作员名字
   */
  public String merchantUserName; // required
  /**
   * 券ID列表
   */
  public List<TicketSummaryVo> ticketList; // required
  /**
   * 操作来源
   */
  public com.froad.thrift.vo.OriginVo originVo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 客户端ID
     */
    CLIENT_ID((short)1, "clientId"),
    /**
     * 请求来源，1-银行端，2-商户端，3-个人端
     */
    RESOURCE((short)2, "resource"),
    /**
     * 商户ID
     */
    MERCHANT_ID((short)3, "merchantId"),
    /**
     * 消费门店ID
     */
    OUTLET_ID((short)4, "outletId"),
    /**
     * 消费门店名称
     */
    OUTLET_NAME((short)5, "outletName"),
    /**
     * 机构号
     */
    ORG_CODE((short)6, "orgCode"),
    /**
     * 商户操作员
     */
    MERCHANT_USER_ID((short)7, "merchantUserId"),
    /**
     * 商户操作员名字
     */
    MERCHANT_USER_NAME((short)8, "merchantUserName"),
    /**
     * 券ID列表
     */
    TICKET_LIST((short)9, "ticketList"),
    /**
     * 操作来源
     */
    ORIGIN_VO((short)10, "originVo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CLIENT_ID
          return CLIENT_ID;
        case 2: // RESOURCE
          return RESOURCE;
        case 3: // MERCHANT_ID
          return MERCHANT_ID;
        case 4: // OUTLET_ID
          return OUTLET_ID;
        case 5: // OUTLET_NAME
          return OUTLET_NAME;
        case 6: // ORG_CODE
          return ORG_CODE;
        case 7: // MERCHANT_USER_ID
          return MERCHANT_USER_ID;
        case 8: // MERCHANT_USER_NAME
          return MERCHANT_USER_NAME;
        case 9: // TICKET_LIST
          return TICKET_LIST;
        case 10: // ORIGIN_VO
          return ORIGIN_VO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MERCHANTUSERID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESOURCE, new org.apache.thrift.meta_data.FieldMetaData("resource", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MERCHANT_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TICKET_LIST, new org.apache.thrift.meta_data.FieldMetaData("ticketList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TicketSummaryVo.class))));
    tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TicketVerifyRequestVo.class, metaDataMap);
  }

  public TicketVerifyRequestVo() {
  }

  public TicketVerifyRequestVo(
    String clientId,
    String resource,
    String merchantId,
    String outletId,
    String outletName,
    String orgCode,
    long merchantUserId,
    String merchantUserName,
    List<TicketSummaryVo> ticketList,
    com.froad.thrift.vo.OriginVo originVo)
  {
    this();
    this.clientId = clientId;
    this.resource = resource;
    this.merchantId = merchantId;
    this.outletId = outletId;
    this.outletName = outletName;
    this.orgCode = orgCode;
    this.merchantUserId = merchantUserId;
    setMerchantUserIdIsSet(true);
    this.merchantUserName = merchantUserName;
    this.ticketList = ticketList;
    this.originVo = originVo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TicketVerifyRequestVo(TicketVerifyRequestVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetResource()) {
      this.resource = other.resource;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    this.merchantUserId = other.merchantUserId;
    if (other.isSetMerchantUserName()) {
      this.merchantUserName = other.merchantUserName;
    }
    if (other.isSetTicketList()) {
      List<TicketSummaryVo> __this__ticketList = new ArrayList<TicketSummaryVo>(other.ticketList.size());
      for (TicketSummaryVo other_element : other.ticketList) {
        __this__ticketList.add(new TicketSummaryVo(other_element));
      }
      this.ticketList = __this__ticketList;
    }
    if (other.isSetOriginVo()) {
      this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
    }
  }

  public TicketVerifyRequestVo deepCopy() {
    return new TicketVerifyRequestVo(this);
  }

  @Override
  public void clear() {
    this.clientId = null;
    this.resource = null;
    this.merchantId = null;
    this.outletId = null;
    this.outletName = null;
    this.orgCode = null;
    setMerchantUserIdIsSet(false);
    this.merchantUserId = 0;
    this.merchantUserName = null;
    this.ticketList = null;
    this.originVo = null;
  }

  /**
   * 客户端ID
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端ID
   */
  public TicketVerifyRequestVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 请求来源，1-银行端，2-商户端，3-个人端
   */
  public String getResource() {
    return this.resource;
  }

  /**
   * 请求来源，1-银行端，2-商户端，3-个人端
   */
  public TicketVerifyRequestVo setResource(String resource) {
    this.resource = resource;
    return this;
  }

  public void unsetResource() {
    this.resource = null;
  }

  /** Returns true if field resource is set (has been assigned a value) and false otherwise */
  public boolean isSetResource() {
    return this.resource != null;
  }

  public void setResourceIsSet(boolean value) {
    if (!value) {
      this.resource = null;
    }
  }

  /**
   * 商户ID
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 商户ID
   */
  public TicketVerifyRequestVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 消费门店ID
   */
  public String getOutletId() {
    return this.outletId;
  }

  /**
   * 消费门店ID
   */
  public TicketVerifyRequestVo setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  /**
   * 消费门店名称
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 消费门店名称
   */
  public TicketVerifyRequestVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 机构号
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 机构号
   */
  public TicketVerifyRequestVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 商户操作员
   */
  public long getMerchantUserId() {
    return this.merchantUserId;
  }

  /**
   * 商户操作员
   */
  public TicketVerifyRequestVo setMerchantUserId(long merchantUserId) {
    this.merchantUserId = merchantUserId;
    setMerchantUserIdIsSet(true);
    return this;
  }

  public void unsetMerchantUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MERCHANTUSERID_ISSET_ID);
  }

  /** Returns true if field merchantUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __MERCHANTUSERID_ISSET_ID);
  }

  public void setMerchantUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MERCHANTUSERID_ISSET_ID, value);
  }

  /**
   * 商户操作员名字
   */
  public String getMerchantUserName() {
    return this.merchantUserName;
  }

  /**
   * 商户操作员名字
   */
  public TicketVerifyRequestVo setMerchantUserName(String merchantUserName) {
    this.merchantUserName = merchantUserName;
    return this;
  }

  public void unsetMerchantUserName() {
    this.merchantUserName = null;
  }

  /** Returns true if field merchantUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantUserName() {
    return this.merchantUserName != null;
  }

  public void setMerchantUserNameIsSet(boolean value) {
    if (!value) {
      this.merchantUserName = null;
    }
  }

  public int getTicketListSize() {
    return (this.ticketList == null) ? 0 : this.ticketList.size();
  }

  public java.util.Iterator<TicketSummaryVo> getTicketListIterator() {
    return (this.ticketList == null) ? null : this.ticketList.iterator();
  }

  public void addToTicketList(TicketSummaryVo elem) {
    if (this.ticketList == null) {
      this.ticketList = new ArrayList<TicketSummaryVo>();
    }
    this.ticketList.add(elem);
  }

  /**
   * 券ID列表
   */
  public List<TicketSummaryVo> getTicketList() {
    return this.ticketList;
  }

  /**
   * 券ID列表
   */
  public TicketVerifyRequestVo setTicketList(List<TicketSummaryVo> ticketList) {
    this.ticketList = ticketList;
    return this;
  }

  public void unsetTicketList() {
    this.ticketList = null;
  }

  /** Returns true if field ticketList is set (has been assigned a value) and false otherwise */
  public boolean isSetTicketList() {
    return this.ticketList != null;
  }

  public void setTicketListIsSet(boolean value) {
    if (!value) {
      this.ticketList = null;
    }
  }

  /**
   * 操作来源
   */
  public com.froad.thrift.vo.OriginVo getOriginVo() {
    return this.originVo;
  }

  /**
   * 操作来源
   */
  public TicketVerifyRequestVo setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
    this.originVo = originVo;
    return this;
  }

  public void unsetOriginVo() {
    this.originVo = null;
  }

  /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
  public boolean isSetOriginVo() {
    return this.originVo != null;
  }

  public void setOriginVoIsSet(boolean value) {
    if (!value) {
      this.originVo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case RESOURCE:
      if (value == null) {
        unsetResource();
      } else {
        setResource((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case MERCHANT_USER_ID:
      if (value == null) {
        unsetMerchantUserId();
      } else {
        setMerchantUserId((Long)value);
      }
      break;

    case MERCHANT_USER_NAME:
      if (value == null) {
        unsetMerchantUserName();
      } else {
        setMerchantUserName((String)value);
      }
      break;

    case TICKET_LIST:
      if (value == null) {
        unsetTicketList();
      } else {
        setTicketList((List<TicketSummaryVo>)value);
      }
      break;

    case ORIGIN_VO:
      if (value == null) {
        unsetOriginVo();
      } else {
        setOriginVo((com.froad.thrift.vo.OriginVo)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CLIENT_ID:
      return getClientId();

    case RESOURCE:
      return getResource();

    case MERCHANT_ID:
      return getMerchantId();

    case OUTLET_ID:
      return getOutletId();

    case OUTLET_NAME:
      return getOutletName();

    case ORG_CODE:
      return getOrgCode();

    case MERCHANT_USER_ID:
      return Long.valueOf(getMerchantUserId());

    case MERCHANT_USER_NAME:
      return getMerchantUserName();

    case TICKET_LIST:
      return getTicketList();

    case ORIGIN_VO:
      return getOriginVo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CLIENT_ID:
      return isSetClientId();
    case RESOURCE:
      return isSetResource();
    case MERCHANT_ID:
      return isSetMerchantId();
    case OUTLET_ID:
      return isSetOutletId();
    case OUTLET_NAME:
      return isSetOutletName();
    case ORG_CODE:
      return isSetOrgCode();
    case MERCHANT_USER_ID:
      return isSetMerchantUserId();
    case MERCHANT_USER_NAME:
      return isSetMerchantUserName();
    case TICKET_LIST:
      return isSetTicketList();
    case ORIGIN_VO:
      return isSetOriginVo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TicketVerifyRequestVo)
      return this.equals((TicketVerifyRequestVo)that);
    return false;
  }

  public boolean equals(TicketVerifyRequestVo that) {
    if (that == null)
      return false;

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_resource = true && this.isSetResource();
    boolean that_present_resource = true && that.isSetResource();
    if (this_present_resource || that_present_resource) {
      if (!(this_present_resource && that_present_resource))
        return false;
      if (!this.resource.equals(that.resource))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_merchantUserId = true;
    boolean that_present_merchantUserId = true;
    if (this_present_merchantUserId || that_present_merchantUserId) {
      if (!(this_present_merchantUserId && that_present_merchantUserId))
        return false;
      if (this.merchantUserId != that.merchantUserId)
        return false;
    }

    boolean this_present_merchantUserName = true && this.isSetMerchantUserName();
    boolean that_present_merchantUserName = true && that.isSetMerchantUserName();
    if (this_present_merchantUserName || that_present_merchantUserName) {
      if (!(this_present_merchantUserName && that_present_merchantUserName))
        return false;
      if (!this.merchantUserName.equals(that.merchantUserName))
        return false;
    }

    boolean this_present_ticketList = true && this.isSetTicketList();
    boolean that_present_ticketList = true && that.isSetTicketList();
    if (this_present_ticketList || that_present_ticketList) {
      if (!(this_present_ticketList && that_present_ticketList))
        return false;
      if (!this.ticketList.equals(that.ticketList))
        return false;
    }

    boolean this_present_originVo = true && this.isSetOriginVo();
    boolean that_present_originVo = true && that.isSetOriginVo();
    if (this_present_originVo || that_present_originVo) {
      if (!(this_present_originVo && that_present_originVo))
        return false;
      if (!this.originVo.equals(that.originVo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_resource = true && (isSetResource());
    list.add(present_resource);
    if (present_resource)
      list.add(resource);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_merchantUserId = true;
    list.add(present_merchantUserId);
    if (present_merchantUserId)
      list.add(merchantUserId);

    boolean present_merchantUserName = true && (isSetMerchantUserName());
    list.add(present_merchantUserName);
    if (present_merchantUserName)
      list.add(merchantUserName);

    boolean present_ticketList = true && (isSetTicketList());
    list.add(present_ticketList);
    if (present_ticketList)
      list.add(ticketList);

    boolean present_originVo = true && (isSetOriginVo());
    list.add(present_originVo);
    if (present_originVo)
      list.add(originVo);

    return list.hashCode();
  }

  @Override
  public int compareTo(TicketVerifyRequestVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResource()).compareTo(other.isSetResource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resource, other.resource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantUserId()).compareTo(other.isSetMerchantUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantUserId, other.merchantUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantUserName()).compareTo(other.isSetMerchantUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantUserName, other.merchantUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTicketList()).compareTo(other.isSetTicketList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTicketList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ticketList, other.ticketList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOriginVo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TicketVerifyRequestVo(");
    boolean first = true;

    sb.append("clientId:");
    if (this.clientId == null) {
      sb.append("null");
    } else {
      sb.append(this.clientId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resource:");
    if (this.resource == null) {
      sb.append("null");
    } else {
      sb.append(this.resource);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletId:");
    if (this.outletId == null) {
      sb.append("null");
    } else {
      sb.append(this.outletId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletName:");
    if (this.outletName == null) {
      sb.append("null");
    } else {
      sb.append(this.outletName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantUserId:");
    sb.append(this.merchantUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantUserName:");
    if (this.merchantUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ticketList:");
    if (this.ticketList == null) {
      sb.append("null");
    } else {
      sb.append(this.ticketList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("originVo:");
    if (this.originVo == null) {
      sb.append("null");
    } else {
      sb.append(this.originVo);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (originVo != null) {
      originVo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TicketVerifyRequestVoStandardSchemeFactory implements SchemeFactory {
    public TicketVerifyRequestVoStandardScheme getScheme() {
      return new TicketVerifyRequestVoStandardScheme();
    }
  }

  private static class TicketVerifyRequestVoStandardScheme extends StandardScheme<TicketVerifyRequestVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TicketVerifyRequestVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // RESOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resource = iprot.readString();
              struct.setResourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MERCHANT_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.merchantUserId = iprot.readI64();
              struct.setMerchantUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MERCHANT_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantUserName = iprot.readString();
              struct.setMerchantUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TICKET_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.ticketList = new ArrayList<TicketSummaryVo>(_list0.size);
                TicketSummaryVo _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new TicketSummaryVo();
                  _elem1.read(iprot);
                  struct.ticketList.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setTicketListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ORIGIN_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.originVo = new com.froad.thrift.vo.OriginVo();
              struct.originVo.read(iprot);
              struct.setOriginVoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TicketVerifyRequestVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.clientId != null) {
        oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
        oprot.writeString(struct.clientId);
        oprot.writeFieldEnd();
      }
      if (struct.resource != null) {
        oprot.writeFieldBegin(RESOURCE_FIELD_DESC);
        oprot.writeString(struct.resource);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.outletId != null) {
        oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
        oprot.writeString(struct.outletId);
        oprot.writeFieldEnd();
      }
      if (struct.outletName != null) {
        oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
        oprot.writeString(struct.outletName);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MERCHANT_USER_ID_FIELD_DESC);
      oprot.writeI64(struct.merchantUserId);
      oprot.writeFieldEnd();
      if (struct.merchantUserName != null) {
        oprot.writeFieldBegin(MERCHANT_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantUserName);
        oprot.writeFieldEnd();
      }
      if (struct.ticketList != null) {
        oprot.writeFieldBegin(TICKET_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.ticketList.size()));
          for (TicketSummaryVo _iter3 : struct.ticketList)
          {
            _iter3.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.originVo != null) {
        oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
        struct.originVo.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TicketVerifyRequestVoTupleSchemeFactory implements SchemeFactory {
    public TicketVerifyRequestVoTupleScheme getScheme() {
      return new TicketVerifyRequestVoTupleScheme();
    }
  }

  private static class TicketVerifyRequestVoTupleScheme extends TupleScheme<TicketVerifyRequestVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TicketVerifyRequestVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetClientId()) {
        optionals.set(0);
      }
      if (struct.isSetResource()) {
        optionals.set(1);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(2);
      }
      if (struct.isSetOutletId()) {
        optionals.set(3);
      }
      if (struct.isSetOutletName()) {
        optionals.set(4);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(5);
      }
      if (struct.isSetMerchantUserId()) {
        optionals.set(6);
      }
      if (struct.isSetMerchantUserName()) {
        optionals.set(7);
      }
      if (struct.isSetTicketList()) {
        optionals.set(8);
      }
      if (struct.isSetOriginVo()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetResource()) {
        oprot.writeString(struct.resource);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
      if (struct.isSetOutletName()) {
        oprot.writeString(struct.outletName);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetMerchantUserId()) {
        oprot.writeI64(struct.merchantUserId);
      }
      if (struct.isSetMerchantUserName()) {
        oprot.writeString(struct.merchantUserName);
      }
      if (struct.isSetTicketList()) {
        {
          oprot.writeI32(struct.ticketList.size());
          for (TicketSummaryVo _iter4 : struct.ticketList)
          {
            _iter4.write(oprot);
          }
        }
      }
      if (struct.isSetOriginVo()) {
        struct.originVo.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TicketVerifyRequestVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.resource = iprot.readString();
        struct.setResourceIsSet(true);
      }
      if (incoming.get(2)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.outletName = iprot.readString();
        struct.setOutletNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.merchantUserId = iprot.readI64();
        struct.setMerchantUserIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.merchantUserName = iprot.readString();
        struct.setMerchantUserNameIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.ticketList = new ArrayList<TicketSummaryVo>(_list5.size);
          TicketSummaryVo _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = new TicketSummaryVo();
            _elem6.read(iprot);
            struct.ticketList.add(_elem6);
          }
        }
        struct.setTicketListIsSet(true);
      }
      if (incoming.get(9)) {
        struct.originVo = new com.froad.thrift.vo.OriginVo();
        struct.originVo.read(iprot);
        struct.setOriginVoIsSet(true);
      }
    }
  }

}

