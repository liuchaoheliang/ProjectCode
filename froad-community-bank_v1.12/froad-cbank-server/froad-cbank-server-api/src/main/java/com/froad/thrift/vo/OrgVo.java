/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 机构信息Vo
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class OrgVo implements org.apache.thrift.TBase<OrgVo, OrgVo._Fields>, java.io.Serializable, Cloneable, Comparable<OrgVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrgVo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField BANK_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("bankType", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PROVINCE_AGENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("provinceAgency", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CITY_AGENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("cityAgency", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField COUNTY_AGENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("countyAgency", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField OUTLET_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("outletId", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField AREA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("areaId", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField ORG_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("orgLevel", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField NEED_REVIEW_FIELD_DESC = new org.apache.thrift.protocol.TField("needReview", org.apache.thrift.protocol.TType.BOOL, (short)14);
  private static final org.apache.thrift.protocol.TField ORG_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgType", org.apache.thrift.protocol.TType.BOOL, (short)15);
  private static final org.apache.thrift.protocol.TField IS_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isEnable", org.apache.thrift.protocol.TType.BOOL, (short)16);
  private static final org.apache.thrift.protocol.TField SUPER_ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("superOrgName", org.apache.thrift.protocol.TType.STRING, (short)17);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrgVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrgVoTupleSchemeFactory());
  }

  /**
   * 主键id
   */
  public long id; // optional
  /**
   * 客户端id
   */
  public String clientId; // optional
  /**
   * 银行类型 0代表省联社-市联社-县联社-网点，1代表省联社-市联社-网点，2代表市联社-网点，3县联社-网点
   */
  public String bankType; // optional
  /**
   * 机构编号
   */
  public String orgCode; // optional
  /**
   * 机构名称
   */
  public String orgName; // optional
  /**
   * 一级org_code
   */
  public String provinceAgency; // optional
  /**
   * 二级org_code
   */
  public String cityAgency; // optional
  /**
   * 三级org_code
   */
  public String countyAgency; // optional
  /**
   * 联系电话
   */
  public String phone; // optional
  /**
   * 机构对应商户id
   */
  public String merchantId; // optional
  /**
   * 机构对应门店id
   */
  public String outletId; // optional
  /**
   * 机构地区
   */
  public long areaId; // optional
  /**
   * 机构级别1-2-3-4-
   */
  public String orgLevel; // optional
  /**
   * 是否需要双人审核
   */
  public boolean needReview; // optional
  /**
   * 0-部门机构，1-业务机构
   */
  public boolean orgType; // optional
  /**
   * 是否有效
   */
  public boolean isEnable; // optional
  /**
   * 上级机构名称(用于前端显示)
   */
  public String superOrgName; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键id
     */
    ID((short)1, "id"),
    /**
     * 客户端id
     */
    CLIENT_ID((short)2, "clientId"),
    /**
     * 银行类型 0代表省联社-市联社-县联社-网点，1代表省联社-市联社-网点，2代表市联社-网点，3县联社-网点
     */
    BANK_TYPE((short)3, "bankType"),
    /**
     * 机构编号
     */
    ORG_CODE((short)4, "orgCode"),
    /**
     * 机构名称
     */
    ORG_NAME((short)5, "orgName"),
    /**
     * 一级org_code
     */
    PROVINCE_AGENCY((short)6, "provinceAgency"),
    /**
     * 二级org_code
     */
    CITY_AGENCY((short)7, "cityAgency"),
    /**
     * 三级org_code
     */
    COUNTY_AGENCY((short)8, "countyAgency"),
    /**
     * 联系电话
     */
    PHONE((short)9, "phone"),
    /**
     * 机构对应商户id
     */
    MERCHANT_ID((short)10, "merchantId"),
    /**
     * 机构对应门店id
     */
    OUTLET_ID((short)11, "outletId"),
    /**
     * 机构地区
     */
    AREA_ID((short)12, "areaId"),
    /**
     * 机构级别1-2-3-4-
     */
    ORG_LEVEL((short)13, "orgLevel"),
    /**
     * 是否需要双人审核
     */
    NEED_REVIEW((short)14, "needReview"),
    /**
     * 0-部门机构，1-业务机构
     */
    ORG_TYPE((short)15, "orgType"),
    /**
     * 是否有效
     */
    IS_ENABLE((short)16, "isEnable"),
    /**
     * 上级机构名称(用于前端显示)
     */
    SUPER_ORG_NAME((short)17, "superOrgName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CLIENT_ID
          return CLIENT_ID;
        case 3: // BANK_TYPE
          return BANK_TYPE;
        case 4: // ORG_CODE
          return ORG_CODE;
        case 5: // ORG_NAME
          return ORG_NAME;
        case 6: // PROVINCE_AGENCY
          return PROVINCE_AGENCY;
        case 7: // CITY_AGENCY
          return CITY_AGENCY;
        case 8: // COUNTY_AGENCY
          return COUNTY_AGENCY;
        case 9: // PHONE
          return PHONE;
        case 10: // MERCHANT_ID
          return MERCHANT_ID;
        case 11: // OUTLET_ID
          return OUTLET_ID;
        case 12: // AREA_ID
          return AREA_ID;
        case 13: // ORG_LEVEL
          return ORG_LEVEL;
        case 14: // NEED_REVIEW
          return NEED_REVIEW;
        case 15: // ORG_TYPE
          return ORG_TYPE;
        case 16: // IS_ENABLE
          return IS_ENABLE;
        case 17: // SUPER_ORG_NAME
          return SUPER_ORG_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __AREAID_ISSET_ID = 1;
  private static final int __NEEDREVIEW_ISSET_ID = 2;
  private static final int __ORGTYPE_ISSET_ID = 3;
  private static final int __ISENABLE_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CLIENT_ID,_Fields.BANK_TYPE,_Fields.ORG_CODE,_Fields.ORG_NAME,_Fields.PROVINCE_AGENCY,_Fields.CITY_AGENCY,_Fields.COUNTY_AGENCY,_Fields.PHONE,_Fields.MERCHANT_ID,_Fields.OUTLET_ID,_Fields.AREA_ID,_Fields.ORG_LEVEL,_Fields.NEED_REVIEW,_Fields.ORG_TYPE,_Fields.IS_ENABLE,_Fields.SUPER_ORG_NAME};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_TYPE, new org.apache.thrift.meta_data.FieldMetaData("bankType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROVINCE_AGENCY, new org.apache.thrift.meta_data.FieldMetaData("provinceAgency", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_AGENCY, new org.apache.thrift.meta_data.FieldMetaData("cityAgency", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNTY_AGENCY, new org.apache.thrift.meta_data.FieldMetaData("countyAgency", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ID, new org.apache.thrift.meta_data.FieldMetaData("outletId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_ID, new org.apache.thrift.meta_data.FieldMetaData("areaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ORG_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("orgLevel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NEED_REVIEW, new org.apache.thrift.meta_data.FieldMetaData("needReview", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ORG_TYPE, new org.apache.thrift.meta_data.FieldMetaData("orgType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("isEnable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.SUPER_ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("superOrgName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrgVo.class, metaDataMap);
  }

  public OrgVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrgVo(OrgVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetClientId()) {
      this.clientId = other.clientId;
    }
    if (other.isSetBankType()) {
      this.bankType = other.bankType;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetProvinceAgency()) {
      this.provinceAgency = other.provinceAgency;
    }
    if (other.isSetCityAgency()) {
      this.cityAgency = other.cityAgency;
    }
    if (other.isSetCountyAgency()) {
      this.countyAgency = other.countyAgency;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetOutletId()) {
      this.outletId = other.outletId;
    }
    this.areaId = other.areaId;
    if (other.isSetOrgLevel()) {
      this.orgLevel = other.orgLevel;
    }
    this.needReview = other.needReview;
    this.orgType = other.orgType;
    this.isEnable = other.isEnable;
    if (other.isSetSuperOrgName()) {
      this.superOrgName = other.superOrgName;
    }
  }

  public OrgVo deepCopy() {
    return new OrgVo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.clientId = null;
    this.bankType = null;
    this.orgCode = null;
    this.orgName = null;
    this.provinceAgency = null;
    this.cityAgency = null;
    this.countyAgency = null;
    this.phone = null;
    this.merchantId = null;
    this.outletId = null;
    setAreaIdIsSet(false);
    this.areaId = 0;
    this.orgLevel = null;
    setNeedReviewIsSet(false);
    this.needReview = false;
    setOrgTypeIsSet(false);
    this.orgType = false;
    setIsEnableIsSet(false);
    this.isEnable = false;
    this.superOrgName = null;
  }

  /**
   * 主键id
   */
  public long getId() {
    return this.id;
  }

  /**
   * 主键id
   */
  public OrgVo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  /**
   * 客户端id
   */
  public String getClientId() {
    return this.clientId;
  }

  /**
   * 客户端id
   */
  public OrgVo setClientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  public void unsetClientId() {
    this.clientId = null;
  }

  /** Returns true if field clientId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientId() {
    return this.clientId != null;
  }

  public void setClientIdIsSet(boolean value) {
    if (!value) {
      this.clientId = null;
    }
  }

  /**
   * 银行类型 0代表省联社-市联社-县联社-网点，1代表省联社-市联社-网点，2代表市联社-网点，3县联社-网点
   */
  public String getBankType() {
    return this.bankType;
  }

  /**
   * 银行类型 0代表省联社-市联社-县联社-网点，1代表省联社-市联社-网点，2代表市联社-网点，3县联社-网点
   */
  public OrgVo setBankType(String bankType) {
    this.bankType = bankType;
    return this;
  }

  public void unsetBankType() {
    this.bankType = null;
  }

  /** Returns true if field bankType is set (has been assigned a value) and false otherwise */
  public boolean isSetBankType() {
    return this.bankType != null;
  }

  public void setBankTypeIsSet(boolean value) {
    if (!value) {
      this.bankType = null;
    }
  }

  /**
   * 机构编号
   */
  public String getOrgCode() {
    return this.orgCode;
  }

  /**
   * 机构编号
   */
  public OrgVo setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  /**
   * 机构名称
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 机构名称
   */
  public OrgVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 一级org_code
   */
  public String getProvinceAgency() {
    return this.provinceAgency;
  }

  /**
   * 一级org_code
   */
  public OrgVo setProvinceAgency(String provinceAgency) {
    this.provinceAgency = provinceAgency;
    return this;
  }

  public void unsetProvinceAgency() {
    this.provinceAgency = null;
  }

  /** Returns true if field provinceAgency is set (has been assigned a value) and false otherwise */
  public boolean isSetProvinceAgency() {
    return this.provinceAgency != null;
  }

  public void setProvinceAgencyIsSet(boolean value) {
    if (!value) {
      this.provinceAgency = null;
    }
  }

  /**
   * 二级org_code
   */
  public String getCityAgency() {
    return this.cityAgency;
  }

  /**
   * 二级org_code
   */
  public OrgVo setCityAgency(String cityAgency) {
    this.cityAgency = cityAgency;
    return this;
  }

  public void unsetCityAgency() {
    this.cityAgency = null;
  }

  /** Returns true if field cityAgency is set (has been assigned a value) and false otherwise */
  public boolean isSetCityAgency() {
    return this.cityAgency != null;
  }

  public void setCityAgencyIsSet(boolean value) {
    if (!value) {
      this.cityAgency = null;
    }
  }

  /**
   * 三级org_code
   */
  public String getCountyAgency() {
    return this.countyAgency;
  }

  /**
   * 三级org_code
   */
  public OrgVo setCountyAgency(String countyAgency) {
    this.countyAgency = countyAgency;
    return this;
  }

  public void unsetCountyAgency() {
    this.countyAgency = null;
  }

  /** Returns true if field countyAgency is set (has been assigned a value) and false otherwise */
  public boolean isSetCountyAgency() {
    return this.countyAgency != null;
  }

  public void setCountyAgencyIsSet(boolean value) {
    if (!value) {
      this.countyAgency = null;
    }
  }

  /**
   * 联系电话
   */
  public String getPhone() {
    return this.phone;
  }

  /**
   * 联系电话
   */
  public OrgVo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  /**
   * 机构对应商户id
   */
  public String getMerchantId() {
    return this.merchantId;
  }

  /**
   * 机构对应商户id
   */
  public OrgVo setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  /**
   * 机构对应门店id
   */
  public String getOutletId() {
    return this.outletId;
  }

  /**
   * 机构对应门店id
   */
  public OrgVo setOutletId(String outletId) {
    this.outletId = outletId;
    return this;
  }

  public void unsetOutletId() {
    this.outletId = null;
  }

  /** Returns true if field outletId is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletId() {
    return this.outletId != null;
  }

  public void setOutletIdIsSet(boolean value) {
    if (!value) {
      this.outletId = null;
    }
  }

  /**
   * 机构地区
   */
  public long getAreaId() {
    return this.areaId;
  }

  /**
   * 机构地区
   */
  public OrgVo setAreaId(long areaId) {
    this.areaId = areaId;
    setAreaIdIsSet(true);
    return this;
  }

  public void unsetAreaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  /** Returns true if field areaId is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaId() {
    return EncodingUtils.testBit(__isset_bitfield, __AREAID_ISSET_ID);
  }

  public void setAreaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREAID_ISSET_ID, value);
  }

  /**
   * 机构级别1-2-3-4-
   */
  public String getOrgLevel() {
    return this.orgLevel;
  }

  /**
   * 机构级别1-2-3-4-
   */
  public OrgVo setOrgLevel(String orgLevel) {
    this.orgLevel = orgLevel;
    return this;
  }

  public void unsetOrgLevel() {
    this.orgLevel = null;
  }

  /** Returns true if field orgLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgLevel() {
    return this.orgLevel != null;
  }

  public void setOrgLevelIsSet(boolean value) {
    if (!value) {
      this.orgLevel = null;
    }
  }

  /**
   * 是否需要双人审核
   */
  public boolean isNeedReview() {
    return this.needReview;
  }

  /**
   * 是否需要双人审核
   */
  public OrgVo setNeedReview(boolean needReview) {
    this.needReview = needReview;
    setNeedReviewIsSet(true);
    return this;
  }

  public void unsetNeedReview() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NEEDREVIEW_ISSET_ID);
  }

  /** Returns true if field needReview is set (has been assigned a value) and false otherwise */
  public boolean isSetNeedReview() {
    return EncodingUtils.testBit(__isset_bitfield, __NEEDREVIEW_ISSET_ID);
  }

  public void setNeedReviewIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NEEDREVIEW_ISSET_ID, value);
  }

  /**
   * 0-部门机构，1-业务机构
   */
  public boolean isOrgType() {
    return this.orgType;
  }

  /**
   * 0-部门机构，1-业务机构
   */
  public OrgVo setOrgType(boolean orgType) {
    this.orgType = orgType;
    setOrgTypeIsSet(true);
    return this;
  }

  public void unsetOrgType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORGTYPE_ISSET_ID);
  }

  /** Returns true if field orgType is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgType() {
    return EncodingUtils.testBit(__isset_bitfield, __ORGTYPE_ISSET_ID);
  }

  public void setOrgTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORGTYPE_ISSET_ID, value);
  }

  /**
   * 是否有效
   */
  public boolean isIsEnable() {
    return this.isEnable;
  }

  /**
   * 是否有效
   */
  public OrgVo setIsEnable(boolean isEnable) {
    this.isEnable = isEnable;
    setIsEnableIsSet(true);
    return this;
  }

  public void unsetIsEnable() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  /** Returns true if field isEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsEnable() {
    return EncodingUtils.testBit(__isset_bitfield, __ISENABLE_ISSET_ID);
  }

  public void setIsEnableIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISENABLE_ISSET_ID, value);
  }

  /**
   * 上级机构名称(用于前端显示)
   */
  public String getSuperOrgName() {
    return this.superOrgName;
  }

  /**
   * 上级机构名称(用于前端显示)
   */
  public OrgVo setSuperOrgName(String superOrgName) {
    this.superOrgName = superOrgName;
    return this;
  }

  public void unsetSuperOrgName() {
    this.superOrgName = null;
  }

  /** Returns true if field superOrgName is set (has been assigned a value) and false otherwise */
  public boolean isSetSuperOrgName() {
    return this.superOrgName != null;
  }

  public void setSuperOrgNameIsSet(boolean value) {
    if (!value) {
      this.superOrgName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case CLIENT_ID:
      if (value == null) {
        unsetClientId();
      } else {
        setClientId((String)value);
      }
      break;

    case BANK_TYPE:
      if (value == null) {
        unsetBankType();
      } else {
        setBankType((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case PROVINCE_AGENCY:
      if (value == null) {
        unsetProvinceAgency();
      } else {
        setProvinceAgency((String)value);
      }
      break;

    case CITY_AGENCY:
      if (value == null) {
        unsetCityAgency();
      } else {
        setCityAgency((String)value);
      }
      break;

    case COUNTY_AGENCY:
      if (value == null) {
        unsetCountyAgency();
      } else {
        setCountyAgency((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case OUTLET_ID:
      if (value == null) {
        unsetOutletId();
      } else {
        setOutletId((String)value);
      }
      break;

    case AREA_ID:
      if (value == null) {
        unsetAreaId();
      } else {
        setAreaId((Long)value);
      }
      break;

    case ORG_LEVEL:
      if (value == null) {
        unsetOrgLevel();
      } else {
        setOrgLevel((String)value);
      }
      break;

    case NEED_REVIEW:
      if (value == null) {
        unsetNeedReview();
      } else {
        setNeedReview((Boolean)value);
      }
      break;

    case ORG_TYPE:
      if (value == null) {
        unsetOrgType();
      } else {
        setOrgType((Boolean)value);
      }
      break;

    case IS_ENABLE:
      if (value == null) {
        unsetIsEnable();
      } else {
        setIsEnable((Boolean)value);
      }
      break;

    case SUPER_ORG_NAME:
      if (value == null) {
        unsetSuperOrgName();
      } else {
        setSuperOrgName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case CLIENT_ID:
      return getClientId();

    case BANK_TYPE:
      return getBankType();

    case ORG_CODE:
      return getOrgCode();

    case ORG_NAME:
      return getOrgName();

    case PROVINCE_AGENCY:
      return getProvinceAgency();

    case CITY_AGENCY:
      return getCityAgency();

    case COUNTY_AGENCY:
      return getCountyAgency();

    case PHONE:
      return getPhone();

    case MERCHANT_ID:
      return getMerchantId();

    case OUTLET_ID:
      return getOutletId();

    case AREA_ID:
      return Long.valueOf(getAreaId());

    case ORG_LEVEL:
      return getOrgLevel();

    case NEED_REVIEW:
      return Boolean.valueOf(isNeedReview());

    case ORG_TYPE:
      return Boolean.valueOf(isOrgType());

    case IS_ENABLE:
      return Boolean.valueOf(isIsEnable());

    case SUPER_ORG_NAME:
      return getSuperOrgName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CLIENT_ID:
      return isSetClientId();
    case BANK_TYPE:
      return isSetBankType();
    case ORG_CODE:
      return isSetOrgCode();
    case ORG_NAME:
      return isSetOrgName();
    case PROVINCE_AGENCY:
      return isSetProvinceAgency();
    case CITY_AGENCY:
      return isSetCityAgency();
    case COUNTY_AGENCY:
      return isSetCountyAgency();
    case PHONE:
      return isSetPhone();
    case MERCHANT_ID:
      return isSetMerchantId();
    case OUTLET_ID:
      return isSetOutletId();
    case AREA_ID:
      return isSetAreaId();
    case ORG_LEVEL:
      return isSetOrgLevel();
    case NEED_REVIEW:
      return isSetNeedReview();
    case ORG_TYPE:
      return isSetOrgType();
    case IS_ENABLE:
      return isSetIsEnable();
    case SUPER_ORG_NAME:
      return isSetSuperOrgName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrgVo)
      return this.equals((OrgVo)that);
    return false;
  }

  public boolean equals(OrgVo that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_clientId = true && this.isSetClientId();
    boolean that_present_clientId = true && that.isSetClientId();
    if (this_present_clientId || that_present_clientId) {
      if (!(this_present_clientId && that_present_clientId))
        return false;
      if (!this.clientId.equals(that.clientId))
        return false;
    }

    boolean this_present_bankType = true && this.isSetBankType();
    boolean that_present_bankType = true && that.isSetBankType();
    if (this_present_bankType || that_present_bankType) {
      if (!(this_present_bankType && that_present_bankType))
        return false;
      if (!this.bankType.equals(that.bankType))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_provinceAgency = true && this.isSetProvinceAgency();
    boolean that_present_provinceAgency = true && that.isSetProvinceAgency();
    if (this_present_provinceAgency || that_present_provinceAgency) {
      if (!(this_present_provinceAgency && that_present_provinceAgency))
        return false;
      if (!this.provinceAgency.equals(that.provinceAgency))
        return false;
    }

    boolean this_present_cityAgency = true && this.isSetCityAgency();
    boolean that_present_cityAgency = true && that.isSetCityAgency();
    if (this_present_cityAgency || that_present_cityAgency) {
      if (!(this_present_cityAgency && that_present_cityAgency))
        return false;
      if (!this.cityAgency.equals(that.cityAgency))
        return false;
    }

    boolean this_present_countyAgency = true && this.isSetCountyAgency();
    boolean that_present_countyAgency = true && that.isSetCountyAgency();
    if (this_present_countyAgency || that_present_countyAgency) {
      if (!(this_present_countyAgency && that_present_countyAgency))
        return false;
      if (!this.countyAgency.equals(that.countyAgency))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_outletId = true && this.isSetOutletId();
    boolean that_present_outletId = true && that.isSetOutletId();
    if (this_present_outletId || that_present_outletId) {
      if (!(this_present_outletId && that_present_outletId))
        return false;
      if (!this.outletId.equals(that.outletId))
        return false;
    }

    boolean this_present_areaId = true && this.isSetAreaId();
    boolean that_present_areaId = true && that.isSetAreaId();
    if (this_present_areaId || that_present_areaId) {
      if (!(this_present_areaId && that_present_areaId))
        return false;
      if (this.areaId != that.areaId)
        return false;
    }

    boolean this_present_orgLevel = true && this.isSetOrgLevel();
    boolean that_present_orgLevel = true && that.isSetOrgLevel();
    if (this_present_orgLevel || that_present_orgLevel) {
      if (!(this_present_orgLevel && that_present_orgLevel))
        return false;
      if (!this.orgLevel.equals(that.orgLevel))
        return false;
    }

    boolean this_present_needReview = true && this.isSetNeedReview();
    boolean that_present_needReview = true && that.isSetNeedReview();
    if (this_present_needReview || that_present_needReview) {
      if (!(this_present_needReview && that_present_needReview))
        return false;
      if (this.needReview != that.needReview)
        return false;
    }

    boolean this_present_orgType = true && this.isSetOrgType();
    boolean that_present_orgType = true && that.isSetOrgType();
    if (this_present_orgType || that_present_orgType) {
      if (!(this_present_orgType && that_present_orgType))
        return false;
      if (this.orgType != that.orgType)
        return false;
    }

    boolean this_present_isEnable = true && this.isSetIsEnable();
    boolean that_present_isEnable = true && that.isSetIsEnable();
    if (this_present_isEnable || that_present_isEnable) {
      if (!(this_present_isEnable && that_present_isEnable))
        return false;
      if (this.isEnable != that.isEnable)
        return false;
    }

    boolean this_present_superOrgName = true && this.isSetSuperOrgName();
    boolean that_present_superOrgName = true && that.isSetSuperOrgName();
    if (this_present_superOrgName || that_present_superOrgName) {
      if (!(this_present_superOrgName && that_present_superOrgName))
        return false;
      if (!this.superOrgName.equals(that.superOrgName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_clientId = true && (isSetClientId());
    list.add(present_clientId);
    if (present_clientId)
      list.add(clientId);

    boolean present_bankType = true && (isSetBankType());
    list.add(present_bankType);
    if (present_bankType)
      list.add(bankType);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_provinceAgency = true && (isSetProvinceAgency());
    list.add(present_provinceAgency);
    if (present_provinceAgency)
      list.add(provinceAgency);

    boolean present_cityAgency = true && (isSetCityAgency());
    list.add(present_cityAgency);
    if (present_cityAgency)
      list.add(cityAgency);

    boolean present_countyAgency = true && (isSetCountyAgency());
    list.add(present_countyAgency);
    if (present_countyAgency)
      list.add(countyAgency);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_outletId = true && (isSetOutletId());
    list.add(present_outletId);
    if (present_outletId)
      list.add(outletId);

    boolean present_areaId = true && (isSetAreaId());
    list.add(present_areaId);
    if (present_areaId)
      list.add(areaId);

    boolean present_orgLevel = true && (isSetOrgLevel());
    list.add(present_orgLevel);
    if (present_orgLevel)
      list.add(orgLevel);

    boolean present_needReview = true && (isSetNeedReview());
    list.add(present_needReview);
    if (present_needReview)
      list.add(needReview);

    boolean present_orgType = true && (isSetOrgType());
    list.add(present_orgType);
    if (present_orgType)
      list.add(orgType);

    boolean present_isEnable = true && (isSetIsEnable());
    list.add(present_isEnable);
    if (present_isEnable)
      list.add(isEnable);

    boolean present_superOrgName = true && (isSetSuperOrgName());
    list.add(present_superOrgName);
    if (present_superOrgName)
      list.add(superOrgName);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrgVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientId()).compareTo(other.isSetClientId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientId, other.clientId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankType()).compareTo(other.isSetBankType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankType, other.bankType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceAgency()).compareTo(other.isSetProvinceAgency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceAgency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.provinceAgency, other.provinceAgency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityAgency()).compareTo(other.isSetCityAgency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityAgency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cityAgency, other.cityAgency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyAgency()).compareTo(other.isSetCountyAgency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyAgency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.countyAgency, other.countyAgency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletId()).compareTo(other.isSetOutletId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletId, other.outletId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaId()).compareTo(other.isSetAreaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaId, other.areaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgLevel()).compareTo(other.isSetOrgLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgLevel, other.orgLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNeedReview()).compareTo(other.isSetNeedReview());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNeedReview()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.needReview, other.needReview);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgType()).compareTo(other.isSetOrgType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgType, other.orgType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsEnable()).compareTo(other.isSetIsEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isEnable, other.isEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSuperOrgName()).compareTo(other.isSetSuperOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSuperOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.superOrgName, other.superOrgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrgVo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetClientId()) {
      if (!first) sb.append(", ");
      sb.append("clientId:");
      if (this.clientId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientId);
      }
      first = false;
    }
    if (isSetBankType()) {
      if (!first) sb.append(", ");
      sb.append("bankType:");
      if (this.bankType == null) {
        sb.append("null");
      } else {
        sb.append(this.bankType);
      }
      first = false;
    }
    if (isSetOrgCode()) {
      if (!first) sb.append(", ");
      sb.append("orgCode:");
      if (this.orgCode == null) {
        sb.append("null");
      } else {
        sb.append(this.orgCode);
      }
      first = false;
    }
    if (isSetOrgName()) {
      if (!first) sb.append(", ");
      sb.append("orgName:");
      if (this.orgName == null) {
        sb.append("null");
      } else {
        sb.append(this.orgName);
      }
      first = false;
    }
    if (isSetProvinceAgency()) {
      if (!first) sb.append(", ");
      sb.append("provinceAgency:");
      if (this.provinceAgency == null) {
        sb.append("null");
      } else {
        sb.append(this.provinceAgency);
      }
      first = false;
    }
    if (isSetCityAgency()) {
      if (!first) sb.append(", ");
      sb.append("cityAgency:");
      if (this.cityAgency == null) {
        sb.append("null");
      } else {
        sb.append(this.cityAgency);
      }
      first = false;
    }
    if (isSetCountyAgency()) {
      if (!first) sb.append(", ");
      sb.append("countyAgency:");
      if (this.countyAgency == null) {
        sb.append("null");
      } else {
        sb.append(this.countyAgency);
      }
      first = false;
    }
    if (isSetPhone()) {
      if (!first) sb.append(", ");
      sb.append("phone:");
      if (this.phone == null) {
        sb.append("null");
      } else {
        sb.append(this.phone);
      }
      first = false;
    }
    if (isSetMerchantId()) {
      if (!first) sb.append(", ");
      sb.append("merchantId:");
      if (this.merchantId == null) {
        sb.append("null");
      } else {
        sb.append(this.merchantId);
      }
      first = false;
    }
    if (isSetOutletId()) {
      if (!first) sb.append(", ");
      sb.append("outletId:");
      if (this.outletId == null) {
        sb.append("null");
      } else {
        sb.append(this.outletId);
      }
      first = false;
    }
    if (isSetAreaId()) {
      if (!first) sb.append(", ");
      sb.append("areaId:");
      sb.append(this.areaId);
      first = false;
    }
    if (isSetOrgLevel()) {
      if (!first) sb.append(", ");
      sb.append("orgLevel:");
      if (this.orgLevel == null) {
        sb.append("null");
      } else {
        sb.append(this.orgLevel);
      }
      first = false;
    }
    if (isSetNeedReview()) {
      if (!first) sb.append(", ");
      sb.append("needReview:");
      sb.append(this.needReview);
      first = false;
    }
    if (isSetOrgType()) {
      if (!first) sb.append(", ");
      sb.append("orgType:");
      sb.append(this.orgType);
      first = false;
    }
    if (isSetIsEnable()) {
      if (!first) sb.append(", ");
      sb.append("isEnable:");
      sb.append(this.isEnable);
      first = false;
    }
    if (isSetSuperOrgName()) {
      if (!first) sb.append(", ");
      sb.append("superOrgName:");
      if (this.superOrgName == null) {
        sb.append("null");
      } else {
        sb.append(this.superOrgName);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrgVoStandardSchemeFactory implements SchemeFactory {
    public OrgVoStandardScheme getScheme() {
      return new OrgVoStandardScheme();
    }
  }

  private static class OrgVoStandardScheme extends StandardScheme<OrgVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrgVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLIENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientId = iprot.readString();
              struct.setClientIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BANK_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankType = iprot.readString();
              struct.setBankTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROVINCE_AGENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.provinceAgency = iprot.readString();
              struct.setProvinceAgencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CITY_AGENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cityAgency = iprot.readString();
              struct.setCityAgencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // COUNTY_AGENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.countyAgency = iprot.readString();
              struct.setCountyAgencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // OUTLET_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletId = iprot.readString();
              struct.setOutletIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // AREA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.areaId = iprot.readI64();
              struct.setAreaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ORG_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgLevel = iprot.readString();
              struct.setOrgLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // NEED_REVIEW
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.needReview = iprot.readBool();
              struct.setNeedReviewIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // ORG_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.orgType = iprot.readBool();
              struct.setOrgTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // IS_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isEnable = iprot.readBool();
              struct.setIsEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // SUPER_ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.superOrgName = iprot.readString();
              struct.setSuperOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrgVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.clientId != null) {
        if (struct.isSetClientId()) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.bankType != null) {
        if (struct.isSetBankType()) {
          oprot.writeFieldBegin(BANK_TYPE_FIELD_DESC);
          oprot.writeString(struct.bankType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgCode != null) {
        if (struct.isSetOrgCode()) {
          oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
          oprot.writeString(struct.orgCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgName != null) {
        if (struct.isSetOrgName()) {
          oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
          oprot.writeString(struct.orgName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.provinceAgency != null) {
        if (struct.isSetProvinceAgency()) {
          oprot.writeFieldBegin(PROVINCE_AGENCY_FIELD_DESC);
          oprot.writeString(struct.provinceAgency);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cityAgency != null) {
        if (struct.isSetCityAgency()) {
          oprot.writeFieldBegin(CITY_AGENCY_FIELD_DESC);
          oprot.writeString(struct.cityAgency);
          oprot.writeFieldEnd();
        }
      }
      if (struct.countyAgency != null) {
        if (struct.isSetCountyAgency()) {
          oprot.writeFieldBegin(COUNTY_AGENCY_FIELD_DESC);
          oprot.writeString(struct.countyAgency);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phone != null) {
        if (struct.isSetPhone()) {
          oprot.writeFieldBegin(PHONE_FIELD_DESC);
          oprot.writeString(struct.phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.merchantId != null) {
        if (struct.isSetMerchantId()) {
          oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
          oprot.writeString(struct.merchantId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outletId != null) {
        if (struct.isSetOutletId()) {
          oprot.writeFieldBegin(OUTLET_ID_FIELD_DESC);
          oprot.writeString(struct.outletId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAreaId()) {
        oprot.writeFieldBegin(AREA_ID_FIELD_DESC);
        oprot.writeI64(struct.areaId);
        oprot.writeFieldEnd();
      }
      if (struct.orgLevel != null) {
        if (struct.isSetOrgLevel()) {
          oprot.writeFieldBegin(ORG_LEVEL_FIELD_DESC);
          oprot.writeString(struct.orgLevel);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNeedReview()) {
        oprot.writeFieldBegin(NEED_REVIEW_FIELD_DESC);
        oprot.writeBool(struct.needReview);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOrgType()) {
        oprot.writeFieldBegin(ORG_TYPE_FIELD_DESC);
        oprot.writeBool(struct.orgType);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsEnable()) {
        oprot.writeFieldBegin(IS_ENABLE_FIELD_DESC);
        oprot.writeBool(struct.isEnable);
        oprot.writeFieldEnd();
      }
      if (struct.superOrgName != null) {
        if (struct.isSetSuperOrgName()) {
          oprot.writeFieldBegin(SUPER_ORG_NAME_FIELD_DESC);
          oprot.writeString(struct.superOrgName);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrgVoTupleSchemeFactory implements SchemeFactory {
    public OrgVoTupleScheme getScheme() {
      return new OrgVoTupleScheme();
    }
  }

  private static class OrgVoTupleScheme extends TupleScheme<OrgVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrgVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetClientId()) {
        optionals.set(1);
      }
      if (struct.isSetBankType()) {
        optionals.set(2);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(3);
      }
      if (struct.isSetOrgName()) {
        optionals.set(4);
      }
      if (struct.isSetProvinceAgency()) {
        optionals.set(5);
      }
      if (struct.isSetCityAgency()) {
        optionals.set(6);
      }
      if (struct.isSetCountyAgency()) {
        optionals.set(7);
      }
      if (struct.isSetPhone()) {
        optionals.set(8);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(9);
      }
      if (struct.isSetOutletId()) {
        optionals.set(10);
      }
      if (struct.isSetAreaId()) {
        optionals.set(11);
      }
      if (struct.isSetOrgLevel()) {
        optionals.set(12);
      }
      if (struct.isSetNeedReview()) {
        optionals.set(13);
      }
      if (struct.isSetOrgType()) {
        optionals.set(14);
      }
      if (struct.isSetIsEnable()) {
        optionals.set(15);
      }
      if (struct.isSetSuperOrgName()) {
        optionals.set(16);
      }
      oprot.writeBitSet(optionals, 17);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetClientId()) {
        oprot.writeString(struct.clientId);
      }
      if (struct.isSetBankType()) {
        oprot.writeString(struct.bankType);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetProvinceAgency()) {
        oprot.writeString(struct.provinceAgency);
      }
      if (struct.isSetCityAgency()) {
        oprot.writeString(struct.cityAgency);
      }
      if (struct.isSetCountyAgency()) {
        oprot.writeString(struct.countyAgency);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetOutletId()) {
        oprot.writeString(struct.outletId);
      }
      if (struct.isSetAreaId()) {
        oprot.writeI64(struct.areaId);
      }
      if (struct.isSetOrgLevel()) {
        oprot.writeString(struct.orgLevel);
      }
      if (struct.isSetNeedReview()) {
        oprot.writeBool(struct.needReview);
      }
      if (struct.isSetOrgType()) {
        oprot.writeBool(struct.orgType);
      }
      if (struct.isSetIsEnable()) {
        oprot.writeBool(struct.isEnable);
      }
      if (struct.isSetSuperOrgName()) {
        oprot.writeString(struct.superOrgName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrgVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(17);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clientId = iprot.readString();
        struct.setClientIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.bankType = iprot.readString();
        struct.setBankTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.provinceAgency = iprot.readString();
        struct.setProvinceAgencyIsSet(true);
      }
      if (incoming.get(6)) {
        struct.cityAgency = iprot.readString();
        struct.setCityAgencyIsSet(true);
      }
      if (incoming.get(7)) {
        struct.countyAgency = iprot.readString();
        struct.setCountyAgencyIsSet(true);
      }
      if (incoming.get(8)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(9)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.outletId = iprot.readString();
        struct.setOutletIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.areaId = iprot.readI64();
        struct.setAreaIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.orgLevel = iprot.readString();
        struct.setOrgLevelIsSet(true);
      }
      if (incoming.get(13)) {
        struct.needReview = iprot.readBool();
        struct.setNeedReviewIsSet(true);
      }
      if (incoming.get(14)) {
        struct.orgType = iprot.readBool();
        struct.setOrgTypeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.isEnable = iprot.readBool();
        struct.setIsEnableIsSet(true);
      }
      if (incoming.get(16)) {
        struct.superOrgName = iprot.readString();
        struct.setSuperOrgNameIsSet(true);
      }
    }
  }

}

