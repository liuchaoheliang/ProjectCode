/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class FinityRoleService {

  /**
   * 角色服务接口
   * FinityRoleService
   */
  public interface Iface extends com.froad.thrift.monitor.service.BizMonitorService.Iface {

    /**
     * 增加 FinityRole
     * @param finityRole 角色对象
     * @param resourceIds 资源id集合
     * @return long    主键ID(异常及错误返回-1)
     * 
     * @param originVo
     * @param finityRoleVo
     * @param resourceIds
     */
    public com.froad.thrift.vo.CommonAddVoRes addFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds) throws org.apache.thrift.TException;

    /**
     * 修改 FinityRole
     * @param finityRole
     * @param resourceIds 资源id集合
     * @return boolean
     * 
     * @param originVo
     * @param finityRoleVo
     * @param resourceIds
     */
    public com.froad.thrift.vo.ResultVo updateFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds) throws org.apache.thrift.TException;

    /**
     * 查询 FinityRole
     * @param finityRole
     * @return List<FinityRoleVo>
     * 
     * @param finityRoleVo
     */
    public List<com.froad.thrift.vo.finity.FinityRoleVo> getFinityRole(com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo) throws org.apache.thrift.TException;

    /**
     * 根据UserId、platform获取所能查看范围的角色列表
     * @param userId
     * @param platform 平台名称(boss、bank、merchant)
     * @return List<FinityRoleVo>
     * 
     * @param userId
     * @param platform
     */
    public com.froad.thrift.vo.finity.FinityRoleListVoRes getFinityRoleByUserId(long userId, String platform) throws org.apache.thrift.TException;

    /**
     * 用户登录时获取的所属角色
     * @param userId
     * @return List<FinityRoleVo>
     * 
     * @param userId
     */
    public com.froad.thrift.vo.finity.FinityRoleListVoRes getFinityRoleByUserIdLogin(long userId) throws org.apache.thrift.TException;

    /**
     * 查询 FinityRole
     * @param roleId
     * @return List<FinityRoleVo>
     * 
     * @param roleId
     */
    public com.froad.thrift.vo.finity.FinityRoleListVoRes getFinityRoleById(long roleId) throws org.apache.thrift.TException;

    /**
     * 删除 FinityRole
     * @param finityRole
     * @return boolean
     * 
     * @param originVo
     * @param platform
     * @param roleId
     */
    public com.froad.thrift.vo.ResultVo deleteFinityRole(com.froad.thrift.vo.OriginVo originVo, String platform, long roleId) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends com.froad.thrift.monitor.service.BizMonitorService .AsyncIface {

    public void addFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void updateFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getFinityRole(com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getFinityRoleByUserId(long userId, String platform, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getFinityRoleByUserIdLogin(long userId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getFinityRoleById(long roleId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void deleteFinityRole(com.froad.thrift.vo.OriginVo originVo, String platform, long roleId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends com.froad.thrift.monitor.service.BizMonitorService.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.froad.thrift.vo.CommonAddVoRes addFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds) throws org.apache.thrift.TException
    {
      send_addFinityRole(originVo, finityRoleVo, resourceIds);
      return recv_addFinityRole();
    }

    public void send_addFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds) throws org.apache.thrift.TException
    {
      addFinityRole_args args = new addFinityRole_args();
      args.setOriginVo(originVo);
      args.setFinityRoleVo(finityRoleVo);
      args.setResourceIds(resourceIds);
      sendBase("addFinityRole", args);
    }

    public com.froad.thrift.vo.CommonAddVoRes recv_addFinityRole() throws org.apache.thrift.TException
    {
      addFinityRole_result result = new addFinityRole_result();
      receiveBase(result, "addFinityRole");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addFinityRole failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo updateFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds) throws org.apache.thrift.TException
    {
      send_updateFinityRole(originVo, finityRoleVo, resourceIds);
      return recv_updateFinityRole();
    }

    public void send_updateFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds) throws org.apache.thrift.TException
    {
      updateFinityRole_args args = new updateFinityRole_args();
      args.setOriginVo(originVo);
      args.setFinityRoleVo(finityRoleVo);
      args.setResourceIds(resourceIds);
      sendBase("updateFinityRole", args);
    }

    public com.froad.thrift.vo.ResultVo recv_updateFinityRole() throws org.apache.thrift.TException
    {
      updateFinityRole_result result = new updateFinityRole_result();
      receiveBase(result, "updateFinityRole");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateFinityRole failed: unknown result");
    }

    public List<com.froad.thrift.vo.finity.FinityRoleVo> getFinityRole(com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo) throws org.apache.thrift.TException
    {
      send_getFinityRole(finityRoleVo);
      return recv_getFinityRole();
    }

    public void send_getFinityRole(com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo) throws org.apache.thrift.TException
    {
      getFinityRole_args args = new getFinityRole_args();
      args.setFinityRoleVo(finityRoleVo);
      sendBase("getFinityRole", args);
    }

    public List<com.froad.thrift.vo.finity.FinityRoleVo> recv_getFinityRole() throws org.apache.thrift.TException
    {
      getFinityRole_result result = new getFinityRole_result();
      receiveBase(result, "getFinityRole");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getFinityRole failed: unknown result");
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes getFinityRoleByUserId(long userId, String platform) throws org.apache.thrift.TException
    {
      send_getFinityRoleByUserId(userId, platform);
      return recv_getFinityRoleByUserId();
    }

    public void send_getFinityRoleByUserId(long userId, String platform) throws org.apache.thrift.TException
    {
      getFinityRoleByUserId_args args = new getFinityRoleByUserId_args();
      args.setUserId(userId);
      args.setPlatform(platform);
      sendBase("getFinityRoleByUserId", args);
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes recv_getFinityRoleByUserId() throws org.apache.thrift.TException
    {
      getFinityRoleByUserId_result result = new getFinityRoleByUserId_result();
      receiveBase(result, "getFinityRoleByUserId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getFinityRoleByUserId failed: unknown result");
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes getFinityRoleByUserIdLogin(long userId) throws org.apache.thrift.TException
    {
      send_getFinityRoleByUserIdLogin(userId);
      return recv_getFinityRoleByUserIdLogin();
    }

    public void send_getFinityRoleByUserIdLogin(long userId) throws org.apache.thrift.TException
    {
      getFinityRoleByUserIdLogin_args args = new getFinityRoleByUserIdLogin_args();
      args.setUserId(userId);
      sendBase("getFinityRoleByUserIdLogin", args);
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes recv_getFinityRoleByUserIdLogin() throws org.apache.thrift.TException
    {
      getFinityRoleByUserIdLogin_result result = new getFinityRoleByUserIdLogin_result();
      receiveBase(result, "getFinityRoleByUserIdLogin");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getFinityRoleByUserIdLogin failed: unknown result");
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes getFinityRoleById(long roleId) throws org.apache.thrift.TException
    {
      send_getFinityRoleById(roleId);
      return recv_getFinityRoleById();
    }

    public void send_getFinityRoleById(long roleId) throws org.apache.thrift.TException
    {
      getFinityRoleById_args args = new getFinityRoleById_args();
      args.setRoleId(roleId);
      sendBase("getFinityRoleById", args);
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes recv_getFinityRoleById() throws org.apache.thrift.TException
    {
      getFinityRoleById_result result = new getFinityRoleById_result();
      receiveBase(result, "getFinityRoleById");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getFinityRoleById failed: unknown result");
    }

    public com.froad.thrift.vo.ResultVo deleteFinityRole(com.froad.thrift.vo.OriginVo originVo, String platform, long roleId) throws org.apache.thrift.TException
    {
      send_deleteFinityRole(originVo, platform, roleId);
      return recv_deleteFinityRole();
    }

    public void send_deleteFinityRole(com.froad.thrift.vo.OriginVo originVo, String platform, long roleId) throws org.apache.thrift.TException
    {
      deleteFinityRole_args args = new deleteFinityRole_args();
      args.setOriginVo(originVo);
      args.setPlatform(platform);
      args.setRoleId(roleId);
      sendBase("deleteFinityRole", args);
    }

    public com.froad.thrift.vo.ResultVo recv_deleteFinityRole() throws org.apache.thrift.TException
    {
      deleteFinityRole_result result = new deleteFinityRole_result();
      receiveBase(result, "deleteFinityRole");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteFinityRole failed: unknown result");
    }

  }
  public static class AsyncClient extends com.froad.thrift.monitor.service.BizMonitorService.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void addFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addFinityRole_call method_call = new addFinityRole_call(originVo, finityRoleVo, resourceIds, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addFinityRole_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo;
      private List<Long> resourceIds;
      public addFinityRole_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.finityRoleVo = finityRoleVo;
        this.resourceIds = resourceIds;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addFinityRole", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addFinityRole_args args = new addFinityRole_args();
        args.setOriginVo(originVo);
        args.setFinityRoleVo(finityRoleVo);
        args.setResourceIds(resourceIds);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.CommonAddVoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addFinityRole();
      }
    }

    public void updateFinityRole(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateFinityRole_call method_call = new updateFinityRole_call(originVo, finityRoleVo, resourceIds, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateFinityRole_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo;
      private List<Long> resourceIds;
      public updateFinityRole_call(com.froad.thrift.vo.OriginVo originVo, com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, List<Long> resourceIds, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.finityRoleVo = finityRoleVo;
        this.resourceIds = resourceIds;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateFinityRole", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateFinityRole_args args = new updateFinityRole_args();
        args.setOriginVo(originVo);
        args.setFinityRoleVo(finityRoleVo);
        args.setResourceIds(resourceIds);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateFinityRole();
      }
    }

    public void getFinityRole(com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getFinityRole_call method_call = new getFinityRole_call(finityRoleVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getFinityRole_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo;
      public getFinityRole_call(com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.finityRoleVo = finityRoleVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getFinityRole", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getFinityRole_args args = new getFinityRole_args();
        args.setFinityRoleVo(finityRoleVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<com.froad.thrift.vo.finity.FinityRoleVo> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getFinityRole();
      }
    }

    public void getFinityRoleByUserId(long userId, String platform, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getFinityRoleByUserId_call method_call = new getFinityRoleByUserId_call(userId, platform, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getFinityRoleByUserId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private long userId;
      private String platform;
      public getFinityRoleByUserId_call(long userId, String platform, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.userId = userId;
        this.platform = platform;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getFinityRoleByUserId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getFinityRoleByUserId_args args = new getFinityRoleByUserId_args();
        args.setUserId(userId);
        args.setPlatform(platform);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.finity.FinityRoleListVoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getFinityRoleByUserId();
      }
    }

    public void getFinityRoleByUserIdLogin(long userId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getFinityRoleByUserIdLogin_call method_call = new getFinityRoleByUserIdLogin_call(userId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getFinityRoleByUserIdLogin_call extends org.apache.thrift.async.TAsyncMethodCall {
      private long userId;
      public getFinityRoleByUserIdLogin_call(long userId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.userId = userId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getFinityRoleByUserIdLogin", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getFinityRoleByUserIdLogin_args args = new getFinityRoleByUserIdLogin_args();
        args.setUserId(userId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.finity.FinityRoleListVoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getFinityRoleByUserIdLogin();
      }
    }

    public void getFinityRoleById(long roleId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getFinityRoleById_call method_call = new getFinityRoleById_call(roleId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getFinityRoleById_call extends org.apache.thrift.async.TAsyncMethodCall {
      private long roleId;
      public getFinityRoleById_call(long roleId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.roleId = roleId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getFinityRoleById", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getFinityRoleById_args args = new getFinityRoleById_args();
        args.setRoleId(roleId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.finity.FinityRoleListVoRes getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getFinityRoleById();
      }
    }

    public void deleteFinityRole(com.froad.thrift.vo.OriginVo originVo, String platform, long roleId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteFinityRole_call method_call = new deleteFinityRole_call(originVo, platform, roleId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteFinityRole_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.froad.thrift.vo.OriginVo originVo;
      private String platform;
      private long roleId;
      public deleteFinityRole_call(com.froad.thrift.vo.OriginVo originVo, String platform, long roleId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.originVo = originVo;
        this.platform = platform;
        this.roleId = roleId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteFinityRole", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteFinityRole_args args = new deleteFinityRole_args();
        args.setOriginVo(originVo);
        args.setPlatform(platform);
        args.setRoleId(roleId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.froad.thrift.vo.ResultVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deleteFinityRole();
      }
    }

  }

  public static class Processor<I extends Iface> extends com.froad.thrift.monitor.service.BizMonitorService.Processor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("addFinityRole", new addFinityRole());
      processMap.put("updateFinityRole", new updateFinityRole());
      processMap.put("getFinityRole", new getFinityRole());
      processMap.put("getFinityRoleByUserId", new getFinityRoleByUserId());
      processMap.put("getFinityRoleByUserIdLogin", new getFinityRoleByUserIdLogin());
      processMap.put("getFinityRoleById", new getFinityRoleById());
      processMap.put("deleteFinityRole", new deleteFinityRole());
      return processMap;
    }

    public static class addFinityRole<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addFinityRole_args> {
      public addFinityRole() {
        super("addFinityRole");
      }

      public addFinityRole_args getEmptyArgsInstance() {
        return new addFinityRole_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addFinityRole_result getResult(I iface, addFinityRole_args args) throws org.apache.thrift.TException {
        addFinityRole_result result = new addFinityRole_result();
        result.success = iface.addFinityRole(args.originVo, args.finityRoleVo, args.resourceIds);
        return result;
      }
    }

    public static class updateFinityRole<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateFinityRole_args> {
      public updateFinityRole() {
        super("updateFinityRole");
      }

      public updateFinityRole_args getEmptyArgsInstance() {
        return new updateFinityRole_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateFinityRole_result getResult(I iface, updateFinityRole_args args) throws org.apache.thrift.TException {
        updateFinityRole_result result = new updateFinityRole_result();
        result.success = iface.updateFinityRole(args.originVo, args.finityRoleVo, args.resourceIds);
        return result;
      }
    }

    public static class getFinityRole<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getFinityRole_args> {
      public getFinityRole() {
        super("getFinityRole");
      }

      public getFinityRole_args getEmptyArgsInstance() {
        return new getFinityRole_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getFinityRole_result getResult(I iface, getFinityRole_args args) throws org.apache.thrift.TException {
        getFinityRole_result result = new getFinityRole_result();
        result.success = iface.getFinityRole(args.finityRoleVo);
        return result;
      }
    }

    public static class getFinityRoleByUserId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getFinityRoleByUserId_args> {
      public getFinityRoleByUserId() {
        super("getFinityRoleByUserId");
      }

      public getFinityRoleByUserId_args getEmptyArgsInstance() {
        return new getFinityRoleByUserId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getFinityRoleByUserId_result getResult(I iface, getFinityRoleByUserId_args args) throws org.apache.thrift.TException {
        getFinityRoleByUserId_result result = new getFinityRoleByUserId_result();
        result.success = iface.getFinityRoleByUserId(args.userId, args.platform);
        return result;
      }
    }

    public static class getFinityRoleByUserIdLogin<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getFinityRoleByUserIdLogin_args> {
      public getFinityRoleByUserIdLogin() {
        super("getFinityRoleByUserIdLogin");
      }

      public getFinityRoleByUserIdLogin_args getEmptyArgsInstance() {
        return new getFinityRoleByUserIdLogin_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getFinityRoleByUserIdLogin_result getResult(I iface, getFinityRoleByUserIdLogin_args args) throws org.apache.thrift.TException {
        getFinityRoleByUserIdLogin_result result = new getFinityRoleByUserIdLogin_result();
        result.success = iface.getFinityRoleByUserIdLogin(args.userId);
        return result;
      }
    }

    public static class getFinityRoleById<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getFinityRoleById_args> {
      public getFinityRoleById() {
        super("getFinityRoleById");
      }

      public getFinityRoleById_args getEmptyArgsInstance() {
        return new getFinityRoleById_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getFinityRoleById_result getResult(I iface, getFinityRoleById_args args) throws org.apache.thrift.TException {
        getFinityRoleById_result result = new getFinityRoleById_result();
        result.success = iface.getFinityRoleById(args.roleId);
        return result;
      }
    }

    public static class deleteFinityRole<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteFinityRole_args> {
      public deleteFinityRole() {
        super("deleteFinityRole");
      }

      public deleteFinityRole_args getEmptyArgsInstance() {
        return new deleteFinityRole_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteFinityRole_result getResult(I iface, deleteFinityRole_args args) throws org.apache.thrift.TException {
        deleteFinityRole_result result = new deleteFinityRole_result();
        result.success = iface.deleteFinityRole(args.originVo, args.platform, args.roleId);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends com.froad.thrift.monitor.service.BizMonitorService.AsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("addFinityRole", new addFinityRole());
      processMap.put("updateFinityRole", new updateFinityRole());
      processMap.put("getFinityRole", new getFinityRole());
      processMap.put("getFinityRoleByUserId", new getFinityRoleByUserId());
      processMap.put("getFinityRoleByUserIdLogin", new getFinityRoleByUserIdLogin());
      processMap.put("getFinityRoleById", new getFinityRoleById());
      processMap.put("deleteFinityRole", new deleteFinityRole());
      return processMap;
    }

    public static class addFinityRole<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addFinityRole_args, com.froad.thrift.vo.CommonAddVoRes> {
      public addFinityRole() {
        super("addFinityRole");
      }

      public addFinityRole_args getEmptyArgsInstance() {
        return new addFinityRole_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.CommonAddVoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.CommonAddVoRes>() { 
          public void onComplete(com.froad.thrift.vo.CommonAddVoRes o) {
            addFinityRole_result result = new addFinityRole_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addFinityRole_result result = new addFinityRole_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addFinityRole_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.CommonAddVoRes> resultHandler) throws TException {
        iface.addFinityRole(args.originVo, args.finityRoleVo, args.resourceIds,resultHandler);
      }
    }

    public static class updateFinityRole<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateFinityRole_args, com.froad.thrift.vo.ResultVo> {
      public updateFinityRole() {
        super("updateFinityRole");
      }

      public updateFinityRole_args getEmptyArgsInstance() {
        return new updateFinityRole_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            updateFinityRole_result result = new updateFinityRole_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            updateFinityRole_result result = new updateFinityRole_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateFinityRole_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.updateFinityRole(args.originVo, args.finityRoleVo, args.resourceIds,resultHandler);
      }
    }

    public static class getFinityRole<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getFinityRole_args, List<com.froad.thrift.vo.finity.FinityRoleVo>> {
      public getFinityRole() {
        super("getFinityRole");
      }

      public getFinityRole_args getEmptyArgsInstance() {
        return new getFinityRole_args();
      }

      public AsyncMethodCallback<List<com.froad.thrift.vo.finity.FinityRoleVo>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<com.froad.thrift.vo.finity.FinityRoleVo>>() { 
          public void onComplete(List<com.froad.thrift.vo.finity.FinityRoleVo> o) {
            getFinityRole_result result = new getFinityRole_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getFinityRole_result result = new getFinityRole_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getFinityRole_args args, org.apache.thrift.async.AsyncMethodCallback<List<com.froad.thrift.vo.finity.FinityRoleVo>> resultHandler) throws TException {
        iface.getFinityRole(args.finityRoleVo,resultHandler);
      }
    }

    public static class getFinityRoleByUserId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getFinityRoleByUserId_args, com.froad.thrift.vo.finity.FinityRoleListVoRes> {
      public getFinityRoleByUserId() {
        super("getFinityRoleByUserId");
      }

      public getFinityRoleByUserId_args getEmptyArgsInstance() {
        return new getFinityRoleByUserId_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.finity.FinityRoleListVoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.finity.FinityRoleListVoRes>() { 
          public void onComplete(com.froad.thrift.vo.finity.FinityRoleListVoRes o) {
            getFinityRoleByUserId_result result = new getFinityRoleByUserId_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getFinityRoleByUserId_result result = new getFinityRoleByUserId_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getFinityRoleByUserId_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.finity.FinityRoleListVoRes> resultHandler) throws TException {
        iface.getFinityRoleByUserId(args.userId, args.platform,resultHandler);
      }
    }

    public static class getFinityRoleByUserIdLogin<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getFinityRoleByUserIdLogin_args, com.froad.thrift.vo.finity.FinityRoleListVoRes> {
      public getFinityRoleByUserIdLogin() {
        super("getFinityRoleByUserIdLogin");
      }

      public getFinityRoleByUserIdLogin_args getEmptyArgsInstance() {
        return new getFinityRoleByUserIdLogin_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.finity.FinityRoleListVoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.finity.FinityRoleListVoRes>() { 
          public void onComplete(com.froad.thrift.vo.finity.FinityRoleListVoRes o) {
            getFinityRoleByUserIdLogin_result result = new getFinityRoleByUserIdLogin_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getFinityRoleByUserIdLogin_result result = new getFinityRoleByUserIdLogin_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getFinityRoleByUserIdLogin_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.finity.FinityRoleListVoRes> resultHandler) throws TException {
        iface.getFinityRoleByUserIdLogin(args.userId,resultHandler);
      }
    }

    public static class getFinityRoleById<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getFinityRoleById_args, com.froad.thrift.vo.finity.FinityRoleListVoRes> {
      public getFinityRoleById() {
        super("getFinityRoleById");
      }

      public getFinityRoleById_args getEmptyArgsInstance() {
        return new getFinityRoleById_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.finity.FinityRoleListVoRes> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.finity.FinityRoleListVoRes>() { 
          public void onComplete(com.froad.thrift.vo.finity.FinityRoleListVoRes o) {
            getFinityRoleById_result result = new getFinityRoleById_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getFinityRoleById_result result = new getFinityRoleById_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getFinityRoleById_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.finity.FinityRoleListVoRes> resultHandler) throws TException {
        iface.getFinityRoleById(args.roleId,resultHandler);
      }
    }

    public static class deleteFinityRole<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteFinityRole_args, com.froad.thrift.vo.ResultVo> {
      public deleteFinityRole() {
        super("deleteFinityRole");
      }

      public deleteFinityRole_args getEmptyArgsInstance() {
        return new deleteFinityRole_args();
      }

      public AsyncMethodCallback<com.froad.thrift.vo.ResultVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.froad.thrift.vo.ResultVo>() { 
          public void onComplete(com.froad.thrift.vo.ResultVo o) {
            deleteFinityRole_result result = new deleteFinityRole_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            deleteFinityRole_result result = new deleteFinityRole_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteFinityRole_args args, org.apache.thrift.async.AsyncMethodCallback<com.froad.thrift.vo.ResultVo> resultHandler) throws TException {
        iface.deleteFinityRole(args.originVo, args.platform, args.roleId,resultHandler);
      }
    }

  }

  public static class addFinityRole_args implements org.apache.thrift.TBase<addFinityRole_args, addFinityRole_args._Fields>, java.io.Serializable, Cloneable, Comparable<addFinityRole_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addFinityRole_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField FINITY_ROLE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("finityRoleVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);
    private static final org.apache.thrift.protocol.TField RESOURCE_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("resourceIds", org.apache.thrift.protocol.TType.LIST, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addFinityRole_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addFinityRole_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo; // required
    public List<Long> resourceIds; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      FINITY_ROLE_VO((short)2, "finityRoleVo"),
      RESOURCE_IDS((short)3, "resourceIds");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // FINITY_ROLE_VO
            return FINITY_ROLE_VO;
          case 3: // RESOURCE_IDS
            return RESOURCE_IDS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.FINITY_ROLE_VO, new org.apache.thrift.meta_data.FieldMetaData("finityRoleVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.finity.FinityRoleVo.class)));
      tmpMap.put(_Fields.RESOURCE_IDS, new org.apache.thrift.meta_data.FieldMetaData("resourceIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addFinityRole_args.class, metaDataMap);
    }

    public addFinityRole_args() {
    }

    public addFinityRole_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo,
      List<Long> resourceIds)
    {
      this();
      this.originVo = originVo;
      this.finityRoleVo = finityRoleVo;
      this.resourceIds = resourceIds;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addFinityRole_args(addFinityRole_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetFinityRoleVo()) {
        this.finityRoleVo = new com.froad.thrift.vo.finity.FinityRoleVo(other.finityRoleVo);
      }
      if (other.isSetResourceIds()) {
        List<Long> __this__resourceIds = new ArrayList<Long>(other.resourceIds);
        this.resourceIds = __this__resourceIds;
      }
    }

    public addFinityRole_args deepCopy() {
      return new addFinityRole_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.finityRoleVo = null;
      this.resourceIds = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public addFinityRole_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.finity.FinityRoleVo getFinityRoleVo() {
      return this.finityRoleVo;
    }

    public addFinityRole_args setFinityRoleVo(com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo) {
      this.finityRoleVo = finityRoleVo;
      return this;
    }

    public void unsetFinityRoleVo() {
      this.finityRoleVo = null;
    }

    /** Returns true if field finityRoleVo is set (has been assigned a value) and false otherwise */
    public boolean isSetFinityRoleVo() {
      return this.finityRoleVo != null;
    }

    public void setFinityRoleVoIsSet(boolean value) {
      if (!value) {
        this.finityRoleVo = null;
      }
    }

    public int getResourceIdsSize() {
      return (this.resourceIds == null) ? 0 : this.resourceIds.size();
    }

    public java.util.Iterator<Long> getResourceIdsIterator() {
      return (this.resourceIds == null) ? null : this.resourceIds.iterator();
    }

    public void addToResourceIds(long elem) {
      if (this.resourceIds == null) {
        this.resourceIds = new ArrayList<Long>();
      }
      this.resourceIds.add(elem);
    }

    public List<Long> getResourceIds() {
      return this.resourceIds;
    }

    public addFinityRole_args setResourceIds(List<Long> resourceIds) {
      this.resourceIds = resourceIds;
      return this;
    }

    public void unsetResourceIds() {
      this.resourceIds = null;
    }

    /** Returns true if field resourceIds is set (has been assigned a value) and false otherwise */
    public boolean isSetResourceIds() {
      return this.resourceIds != null;
    }

    public void setResourceIdsIsSet(boolean value) {
      if (!value) {
        this.resourceIds = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case FINITY_ROLE_VO:
        if (value == null) {
          unsetFinityRoleVo();
        } else {
          setFinityRoleVo((com.froad.thrift.vo.finity.FinityRoleVo)value);
        }
        break;

      case RESOURCE_IDS:
        if (value == null) {
          unsetResourceIds();
        } else {
          setResourceIds((List<Long>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case FINITY_ROLE_VO:
        return getFinityRoleVo();

      case RESOURCE_IDS:
        return getResourceIds();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case FINITY_ROLE_VO:
        return isSetFinityRoleVo();
      case RESOURCE_IDS:
        return isSetResourceIds();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addFinityRole_args)
        return this.equals((addFinityRole_args)that);
      return false;
    }

    public boolean equals(addFinityRole_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_finityRoleVo = true && this.isSetFinityRoleVo();
      boolean that_present_finityRoleVo = true && that.isSetFinityRoleVo();
      if (this_present_finityRoleVo || that_present_finityRoleVo) {
        if (!(this_present_finityRoleVo && that_present_finityRoleVo))
          return false;
        if (!this.finityRoleVo.equals(that.finityRoleVo))
          return false;
      }

      boolean this_present_resourceIds = true && this.isSetResourceIds();
      boolean that_present_resourceIds = true && that.isSetResourceIds();
      if (this_present_resourceIds || that_present_resourceIds) {
        if (!(this_present_resourceIds && that_present_resourceIds))
          return false;
        if (!this.resourceIds.equals(that.resourceIds))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_finityRoleVo = true && (isSetFinityRoleVo());
      list.add(present_finityRoleVo);
      if (present_finityRoleVo)
        list.add(finityRoleVo);

      boolean present_resourceIds = true && (isSetResourceIds());
      list.add(present_resourceIds);
      if (present_resourceIds)
        list.add(resourceIds);

      return list.hashCode();
    }

    @Override
    public int compareTo(addFinityRole_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetFinityRoleVo()).compareTo(other.isSetFinityRoleVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFinityRoleVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finityRoleVo, other.finityRoleVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetResourceIds()).compareTo(other.isSetResourceIds());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetResourceIds()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resourceIds, other.resourceIds);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addFinityRole_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("finityRoleVo:");
      if (this.finityRoleVo == null) {
        sb.append("null");
      } else {
        sb.append(this.finityRoleVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("resourceIds:");
      if (this.resourceIds == null) {
        sb.append("null");
      } else {
        sb.append(this.resourceIds);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (finityRoleVo != null) {
        finityRoleVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addFinityRole_argsStandardSchemeFactory implements SchemeFactory {
      public addFinityRole_argsStandardScheme getScheme() {
        return new addFinityRole_argsStandardScheme();
      }
    }

    private static class addFinityRole_argsStandardScheme extends StandardScheme<addFinityRole_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addFinityRole_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // FINITY_ROLE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.finityRoleVo = new com.froad.thrift.vo.finity.FinityRoleVo();
                struct.finityRoleVo.read(iprot);
                struct.setFinityRoleVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // RESOURCE_IDS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list48 = iprot.readListBegin();
                  struct.resourceIds = new ArrayList<Long>(_list48.size);
                  long _elem49;
                  for (int _i50 = 0; _i50 < _list48.size; ++_i50)
                  {
                    _elem49 = iprot.readI64();
                    struct.resourceIds.add(_elem49);
                  }
                  iprot.readListEnd();
                }
                struct.setResourceIdsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addFinityRole_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.finityRoleVo != null) {
          oprot.writeFieldBegin(FINITY_ROLE_VO_FIELD_DESC);
          struct.finityRoleVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.resourceIds != null) {
          oprot.writeFieldBegin(RESOURCE_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.resourceIds.size()));
            for (long _iter51 : struct.resourceIds)
            {
              oprot.writeI64(_iter51);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addFinityRole_argsTupleSchemeFactory implements SchemeFactory {
      public addFinityRole_argsTupleScheme getScheme() {
        return new addFinityRole_argsTupleScheme();
      }
    }

    private static class addFinityRole_argsTupleScheme extends TupleScheme<addFinityRole_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addFinityRole_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetFinityRoleVo()) {
          optionals.set(1);
        }
        if (struct.isSetResourceIds()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetFinityRoleVo()) {
          struct.finityRoleVo.write(oprot);
        }
        if (struct.isSetResourceIds()) {
          {
            oprot.writeI32(struct.resourceIds.size());
            for (long _iter52 : struct.resourceIds)
            {
              oprot.writeI64(_iter52);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addFinityRole_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.finityRoleVo = new com.froad.thrift.vo.finity.FinityRoleVo();
          struct.finityRoleVo.read(iprot);
          struct.setFinityRoleVoIsSet(true);
        }
        if (incoming.get(2)) {
          {
            org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
            struct.resourceIds = new ArrayList<Long>(_list53.size);
            long _elem54;
            for (int _i55 = 0; _i55 < _list53.size; ++_i55)
            {
              _elem54 = iprot.readI64();
              struct.resourceIds.add(_elem54);
            }
          }
          struct.setResourceIdsIsSet(true);
        }
      }
    }

  }

  public static class addFinityRole_result implements org.apache.thrift.TBase<addFinityRole_result, addFinityRole_result._Fields>, java.io.Serializable, Cloneable, Comparable<addFinityRole_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addFinityRole_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addFinityRole_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addFinityRole_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.CommonAddVoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.CommonAddVoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addFinityRole_result.class, metaDataMap);
    }

    public addFinityRole_result() {
    }

    public addFinityRole_result(
      com.froad.thrift.vo.CommonAddVoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addFinityRole_result(addFinityRole_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.CommonAddVoRes(other.success);
      }
    }

    public addFinityRole_result deepCopy() {
      return new addFinityRole_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.CommonAddVoRes getSuccess() {
      return this.success;
    }

    public addFinityRole_result setSuccess(com.froad.thrift.vo.CommonAddVoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.CommonAddVoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addFinityRole_result)
        return this.equals((addFinityRole_result)that);
      return false;
    }

    public boolean equals(addFinityRole_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(addFinityRole_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addFinityRole_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addFinityRole_resultStandardSchemeFactory implements SchemeFactory {
      public addFinityRole_resultStandardScheme getScheme() {
        return new addFinityRole_resultStandardScheme();
      }
    }

    private static class addFinityRole_resultStandardScheme extends StandardScheme<addFinityRole_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addFinityRole_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.CommonAddVoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addFinityRole_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addFinityRole_resultTupleSchemeFactory implements SchemeFactory {
      public addFinityRole_resultTupleScheme getScheme() {
        return new addFinityRole_resultTupleScheme();
      }
    }

    private static class addFinityRole_resultTupleScheme extends TupleScheme<addFinityRole_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addFinityRole_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addFinityRole_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.CommonAddVoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class updateFinityRole_args implements org.apache.thrift.TBase<updateFinityRole_args, updateFinityRole_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateFinityRole_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateFinityRole_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField FINITY_ROLE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("finityRoleVo", org.apache.thrift.protocol.TType.STRUCT, (short)2);
    private static final org.apache.thrift.protocol.TField RESOURCE_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("resourceIds", org.apache.thrift.protocol.TType.LIST, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateFinityRole_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateFinityRole_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo; // required
    public List<Long> resourceIds; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      FINITY_ROLE_VO((short)2, "finityRoleVo"),
      RESOURCE_IDS((short)3, "resourceIds");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // FINITY_ROLE_VO
            return FINITY_ROLE_VO;
          case 3: // RESOURCE_IDS
            return RESOURCE_IDS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.FINITY_ROLE_VO, new org.apache.thrift.meta_data.FieldMetaData("finityRoleVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.finity.FinityRoleVo.class)));
      tmpMap.put(_Fields.RESOURCE_IDS, new org.apache.thrift.meta_data.FieldMetaData("resourceIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateFinityRole_args.class, metaDataMap);
    }

    public updateFinityRole_args() {
    }

    public updateFinityRole_args(
      com.froad.thrift.vo.OriginVo originVo,
      com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo,
      List<Long> resourceIds)
    {
      this();
      this.originVo = originVo;
      this.finityRoleVo = finityRoleVo;
      this.resourceIds = resourceIds;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateFinityRole_args(updateFinityRole_args other) {
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetFinityRoleVo()) {
        this.finityRoleVo = new com.froad.thrift.vo.finity.FinityRoleVo(other.finityRoleVo);
      }
      if (other.isSetResourceIds()) {
        List<Long> __this__resourceIds = new ArrayList<Long>(other.resourceIds);
        this.resourceIds = __this__resourceIds;
      }
    }

    public updateFinityRole_args deepCopy() {
      return new updateFinityRole_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.finityRoleVo = null;
      this.resourceIds = null;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public updateFinityRole_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public com.froad.thrift.vo.finity.FinityRoleVo getFinityRoleVo() {
      return this.finityRoleVo;
    }

    public updateFinityRole_args setFinityRoleVo(com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo) {
      this.finityRoleVo = finityRoleVo;
      return this;
    }

    public void unsetFinityRoleVo() {
      this.finityRoleVo = null;
    }

    /** Returns true if field finityRoleVo is set (has been assigned a value) and false otherwise */
    public boolean isSetFinityRoleVo() {
      return this.finityRoleVo != null;
    }

    public void setFinityRoleVoIsSet(boolean value) {
      if (!value) {
        this.finityRoleVo = null;
      }
    }

    public int getResourceIdsSize() {
      return (this.resourceIds == null) ? 0 : this.resourceIds.size();
    }

    public java.util.Iterator<Long> getResourceIdsIterator() {
      return (this.resourceIds == null) ? null : this.resourceIds.iterator();
    }

    public void addToResourceIds(long elem) {
      if (this.resourceIds == null) {
        this.resourceIds = new ArrayList<Long>();
      }
      this.resourceIds.add(elem);
    }

    public List<Long> getResourceIds() {
      return this.resourceIds;
    }

    public updateFinityRole_args setResourceIds(List<Long> resourceIds) {
      this.resourceIds = resourceIds;
      return this;
    }

    public void unsetResourceIds() {
      this.resourceIds = null;
    }

    /** Returns true if field resourceIds is set (has been assigned a value) and false otherwise */
    public boolean isSetResourceIds() {
      return this.resourceIds != null;
    }

    public void setResourceIdsIsSet(boolean value) {
      if (!value) {
        this.resourceIds = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case FINITY_ROLE_VO:
        if (value == null) {
          unsetFinityRoleVo();
        } else {
          setFinityRoleVo((com.froad.thrift.vo.finity.FinityRoleVo)value);
        }
        break;

      case RESOURCE_IDS:
        if (value == null) {
          unsetResourceIds();
        } else {
          setResourceIds((List<Long>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case FINITY_ROLE_VO:
        return getFinityRoleVo();

      case RESOURCE_IDS:
        return getResourceIds();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case FINITY_ROLE_VO:
        return isSetFinityRoleVo();
      case RESOURCE_IDS:
        return isSetResourceIds();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateFinityRole_args)
        return this.equals((updateFinityRole_args)that);
      return false;
    }

    public boolean equals(updateFinityRole_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_finityRoleVo = true && this.isSetFinityRoleVo();
      boolean that_present_finityRoleVo = true && that.isSetFinityRoleVo();
      if (this_present_finityRoleVo || that_present_finityRoleVo) {
        if (!(this_present_finityRoleVo && that_present_finityRoleVo))
          return false;
        if (!this.finityRoleVo.equals(that.finityRoleVo))
          return false;
      }

      boolean this_present_resourceIds = true && this.isSetResourceIds();
      boolean that_present_resourceIds = true && that.isSetResourceIds();
      if (this_present_resourceIds || that_present_resourceIds) {
        if (!(this_present_resourceIds && that_present_resourceIds))
          return false;
        if (!this.resourceIds.equals(that.resourceIds))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_finityRoleVo = true && (isSetFinityRoleVo());
      list.add(present_finityRoleVo);
      if (present_finityRoleVo)
        list.add(finityRoleVo);

      boolean present_resourceIds = true && (isSetResourceIds());
      list.add(present_resourceIds);
      if (present_resourceIds)
        list.add(resourceIds);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateFinityRole_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetFinityRoleVo()).compareTo(other.isSetFinityRoleVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFinityRoleVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finityRoleVo, other.finityRoleVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetResourceIds()).compareTo(other.isSetResourceIds());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetResourceIds()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resourceIds, other.resourceIds);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateFinityRole_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("finityRoleVo:");
      if (this.finityRoleVo == null) {
        sb.append("null");
      } else {
        sb.append(this.finityRoleVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("resourceIds:");
      if (this.resourceIds == null) {
        sb.append("null");
      } else {
        sb.append(this.resourceIds);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
      if (finityRoleVo != null) {
        finityRoleVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateFinityRole_argsStandardSchemeFactory implements SchemeFactory {
      public updateFinityRole_argsStandardScheme getScheme() {
        return new updateFinityRole_argsStandardScheme();
      }
    }

    private static class updateFinityRole_argsStandardScheme extends StandardScheme<updateFinityRole_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateFinityRole_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // FINITY_ROLE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.finityRoleVo = new com.froad.thrift.vo.finity.FinityRoleVo();
                struct.finityRoleVo.read(iprot);
                struct.setFinityRoleVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // RESOURCE_IDS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list56 = iprot.readListBegin();
                  struct.resourceIds = new ArrayList<Long>(_list56.size);
                  long _elem57;
                  for (int _i58 = 0; _i58 < _list56.size; ++_i58)
                  {
                    _elem57 = iprot.readI64();
                    struct.resourceIds.add(_elem57);
                  }
                  iprot.readListEnd();
                }
                struct.setResourceIdsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateFinityRole_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.finityRoleVo != null) {
          oprot.writeFieldBegin(FINITY_ROLE_VO_FIELD_DESC);
          struct.finityRoleVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.resourceIds != null) {
          oprot.writeFieldBegin(RESOURCE_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.resourceIds.size()));
            for (long _iter59 : struct.resourceIds)
            {
              oprot.writeI64(_iter59);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateFinityRole_argsTupleSchemeFactory implements SchemeFactory {
      public updateFinityRole_argsTupleScheme getScheme() {
        return new updateFinityRole_argsTupleScheme();
      }
    }

    private static class updateFinityRole_argsTupleScheme extends TupleScheme<updateFinityRole_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateFinityRole_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetFinityRoleVo()) {
          optionals.set(1);
        }
        if (struct.isSetResourceIds()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetFinityRoleVo()) {
          struct.finityRoleVo.write(oprot);
        }
        if (struct.isSetResourceIds()) {
          {
            oprot.writeI32(struct.resourceIds.size());
            for (long _iter60 : struct.resourceIds)
            {
              oprot.writeI64(_iter60);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateFinityRole_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.finityRoleVo = new com.froad.thrift.vo.finity.FinityRoleVo();
          struct.finityRoleVo.read(iprot);
          struct.setFinityRoleVoIsSet(true);
        }
        if (incoming.get(2)) {
          {
            org.apache.thrift.protocol.TList _list61 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
            struct.resourceIds = new ArrayList<Long>(_list61.size);
            long _elem62;
            for (int _i63 = 0; _i63 < _list61.size; ++_i63)
            {
              _elem62 = iprot.readI64();
              struct.resourceIds.add(_elem62);
            }
          }
          struct.setResourceIdsIsSet(true);
        }
      }
    }

  }

  public static class updateFinityRole_result implements org.apache.thrift.TBase<updateFinityRole_result, updateFinityRole_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateFinityRole_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateFinityRole_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new updateFinityRole_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new updateFinityRole_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateFinityRole_result.class, metaDataMap);
    }

    public updateFinityRole_result() {
    }

    public updateFinityRole_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateFinityRole_result(updateFinityRole_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public updateFinityRole_result deepCopy() {
      return new updateFinityRole_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public updateFinityRole_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateFinityRole_result)
        return this.equals((updateFinityRole_result)that);
      return false;
    }

    public boolean equals(updateFinityRole_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(updateFinityRole_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateFinityRole_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateFinityRole_resultStandardSchemeFactory implements SchemeFactory {
      public updateFinityRole_resultStandardScheme getScheme() {
        return new updateFinityRole_resultStandardScheme();
      }
    }

    private static class updateFinityRole_resultStandardScheme extends StandardScheme<updateFinityRole_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateFinityRole_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateFinityRole_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateFinityRole_resultTupleSchemeFactory implements SchemeFactory {
      public updateFinityRole_resultTupleScheme getScheme() {
        return new updateFinityRole_resultTupleScheme();
      }
    }

    private static class updateFinityRole_resultTupleScheme extends TupleScheme<updateFinityRole_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateFinityRole_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateFinityRole_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getFinityRole_args implements org.apache.thrift.TBase<getFinityRole_args, getFinityRole_args._Fields>, java.io.Serializable, Cloneable, Comparable<getFinityRole_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getFinityRole_args");

    private static final org.apache.thrift.protocol.TField FINITY_ROLE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("finityRoleVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getFinityRole_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getFinityRole_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      FINITY_ROLE_VO((short)1, "finityRoleVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // FINITY_ROLE_VO
            return FINITY_ROLE_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.FINITY_ROLE_VO, new org.apache.thrift.meta_data.FieldMetaData("finityRoleVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.finity.FinityRoleVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getFinityRole_args.class, metaDataMap);
    }

    public getFinityRole_args() {
    }

    public getFinityRole_args(
      com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo)
    {
      this();
      this.finityRoleVo = finityRoleVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getFinityRole_args(getFinityRole_args other) {
      if (other.isSetFinityRoleVo()) {
        this.finityRoleVo = new com.froad.thrift.vo.finity.FinityRoleVo(other.finityRoleVo);
      }
    }

    public getFinityRole_args deepCopy() {
      return new getFinityRole_args(this);
    }

    @Override
    public void clear() {
      this.finityRoleVo = null;
    }

    public com.froad.thrift.vo.finity.FinityRoleVo getFinityRoleVo() {
      return this.finityRoleVo;
    }

    public getFinityRole_args setFinityRoleVo(com.froad.thrift.vo.finity.FinityRoleVo finityRoleVo) {
      this.finityRoleVo = finityRoleVo;
      return this;
    }

    public void unsetFinityRoleVo() {
      this.finityRoleVo = null;
    }

    /** Returns true if field finityRoleVo is set (has been assigned a value) and false otherwise */
    public boolean isSetFinityRoleVo() {
      return this.finityRoleVo != null;
    }

    public void setFinityRoleVoIsSet(boolean value) {
      if (!value) {
        this.finityRoleVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case FINITY_ROLE_VO:
        if (value == null) {
          unsetFinityRoleVo();
        } else {
          setFinityRoleVo((com.froad.thrift.vo.finity.FinityRoleVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case FINITY_ROLE_VO:
        return getFinityRoleVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case FINITY_ROLE_VO:
        return isSetFinityRoleVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getFinityRole_args)
        return this.equals((getFinityRole_args)that);
      return false;
    }

    public boolean equals(getFinityRole_args that) {
      if (that == null)
        return false;

      boolean this_present_finityRoleVo = true && this.isSetFinityRoleVo();
      boolean that_present_finityRoleVo = true && that.isSetFinityRoleVo();
      if (this_present_finityRoleVo || that_present_finityRoleVo) {
        if (!(this_present_finityRoleVo && that_present_finityRoleVo))
          return false;
        if (!this.finityRoleVo.equals(that.finityRoleVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_finityRoleVo = true && (isSetFinityRoleVo());
      list.add(present_finityRoleVo);
      if (present_finityRoleVo)
        list.add(finityRoleVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(getFinityRole_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetFinityRoleVo()).compareTo(other.isSetFinityRoleVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFinityRoleVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finityRoleVo, other.finityRoleVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getFinityRole_args(");
      boolean first = true;

      sb.append("finityRoleVo:");
      if (this.finityRoleVo == null) {
        sb.append("null");
      } else {
        sb.append(this.finityRoleVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (finityRoleVo != null) {
        finityRoleVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getFinityRole_argsStandardSchemeFactory implements SchemeFactory {
      public getFinityRole_argsStandardScheme getScheme() {
        return new getFinityRole_argsStandardScheme();
      }
    }

    private static class getFinityRole_argsStandardScheme extends StandardScheme<getFinityRole_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getFinityRole_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // FINITY_ROLE_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.finityRoleVo = new com.froad.thrift.vo.finity.FinityRoleVo();
                struct.finityRoleVo.read(iprot);
                struct.setFinityRoleVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getFinityRole_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.finityRoleVo != null) {
          oprot.writeFieldBegin(FINITY_ROLE_VO_FIELD_DESC);
          struct.finityRoleVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getFinityRole_argsTupleSchemeFactory implements SchemeFactory {
      public getFinityRole_argsTupleScheme getScheme() {
        return new getFinityRole_argsTupleScheme();
      }
    }

    private static class getFinityRole_argsTupleScheme extends TupleScheme<getFinityRole_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getFinityRole_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetFinityRoleVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetFinityRoleVo()) {
          struct.finityRoleVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getFinityRole_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.finityRoleVo = new com.froad.thrift.vo.finity.FinityRoleVo();
          struct.finityRoleVo.read(iprot);
          struct.setFinityRoleVoIsSet(true);
        }
      }
    }

  }

  public static class getFinityRole_result implements org.apache.thrift.TBase<getFinityRole_result, getFinityRole_result._Fields>, java.io.Serializable, Cloneable, Comparable<getFinityRole_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getFinityRole_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getFinityRole_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getFinityRole_resultTupleSchemeFactory());
    }

    public List<com.froad.thrift.vo.finity.FinityRoleVo> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.finity.FinityRoleVo.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getFinityRole_result.class, metaDataMap);
    }

    public getFinityRole_result() {
    }

    public getFinityRole_result(
      List<com.froad.thrift.vo.finity.FinityRoleVo> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getFinityRole_result(getFinityRole_result other) {
      if (other.isSetSuccess()) {
        List<com.froad.thrift.vo.finity.FinityRoleVo> __this__success = new ArrayList<com.froad.thrift.vo.finity.FinityRoleVo>(other.success.size());
        for (com.froad.thrift.vo.finity.FinityRoleVo other_element : other.success) {
          __this__success.add(new com.froad.thrift.vo.finity.FinityRoleVo(other_element));
        }
        this.success = __this__success;
      }
    }

    public getFinityRole_result deepCopy() {
      return new getFinityRole_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.froad.thrift.vo.finity.FinityRoleVo> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.froad.thrift.vo.finity.FinityRoleVo elem) {
      if (this.success == null) {
        this.success = new ArrayList<com.froad.thrift.vo.finity.FinityRoleVo>();
      }
      this.success.add(elem);
    }

    public List<com.froad.thrift.vo.finity.FinityRoleVo> getSuccess() {
      return this.success;
    }

    public getFinityRole_result setSuccess(List<com.froad.thrift.vo.finity.FinityRoleVo> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<com.froad.thrift.vo.finity.FinityRoleVo>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getFinityRole_result)
        return this.equals((getFinityRole_result)that);
      return false;
    }

    public boolean equals(getFinityRole_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getFinityRole_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getFinityRole_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getFinityRole_resultStandardSchemeFactory implements SchemeFactory {
      public getFinityRole_resultStandardScheme getScheme() {
        return new getFinityRole_resultStandardScheme();
      }
    }

    private static class getFinityRole_resultStandardScheme extends StandardScheme<getFinityRole_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getFinityRole_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list64 = iprot.readListBegin();
                  struct.success = new ArrayList<com.froad.thrift.vo.finity.FinityRoleVo>(_list64.size);
                  com.froad.thrift.vo.finity.FinityRoleVo _elem65;
                  for (int _i66 = 0; _i66 < _list64.size; ++_i66)
                  {
                    _elem65 = new com.froad.thrift.vo.finity.FinityRoleVo();
                    _elem65.read(iprot);
                    struct.success.add(_elem65);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getFinityRole_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.froad.thrift.vo.finity.FinityRoleVo _iter67 : struct.success)
            {
              _iter67.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getFinityRole_resultTupleSchemeFactory implements SchemeFactory {
      public getFinityRole_resultTupleScheme getScheme() {
        return new getFinityRole_resultTupleScheme();
      }
    }

    private static class getFinityRole_resultTupleScheme extends TupleScheme<getFinityRole_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getFinityRole_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.froad.thrift.vo.finity.FinityRoleVo _iter68 : struct.success)
            {
              _iter68.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getFinityRole_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list69 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<com.froad.thrift.vo.finity.FinityRoleVo>(_list69.size);
            com.froad.thrift.vo.finity.FinityRoleVo _elem70;
            for (int _i71 = 0; _i71 < _list69.size; ++_i71)
            {
              _elem70 = new com.froad.thrift.vo.finity.FinityRoleVo();
              _elem70.read(iprot);
              struct.success.add(_elem70);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getFinityRoleByUserId_args implements org.apache.thrift.TBase<getFinityRoleByUserId_args, getFinityRoleByUserId_args._Fields>, java.io.Serializable, Cloneable, Comparable<getFinityRoleByUserId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getFinityRoleByUserId_args");

    private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I64, (short)1);
    private static final org.apache.thrift.protocol.TField PLATFORM_FIELD_DESC = new org.apache.thrift.protocol.TField("platform", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getFinityRoleByUserId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getFinityRoleByUserId_argsTupleSchemeFactory());
    }

    public long userId; // required
    public String platform; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      USER_ID((short)1, "userId"),
      PLATFORM((short)2, "platform");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // USER_ID
            return USER_ID;
          case 2: // PLATFORM
            return PLATFORM;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __USERID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.PLATFORM, new org.apache.thrift.meta_data.FieldMetaData("platform", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getFinityRoleByUserId_args.class, metaDataMap);
    }

    public getFinityRoleByUserId_args() {
    }

    public getFinityRoleByUserId_args(
      long userId,
      String platform)
    {
      this();
      this.userId = userId;
      setUserIdIsSet(true);
      this.platform = platform;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getFinityRoleByUserId_args(getFinityRoleByUserId_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.userId = other.userId;
      if (other.isSetPlatform()) {
        this.platform = other.platform;
      }
    }

    public getFinityRoleByUserId_args deepCopy() {
      return new getFinityRoleByUserId_args(this);
    }

    @Override
    public void clear() {
      setUserIdIsSet(false);
      this.userId = 0;
      this.platform = null;
    }

    public long getUserId() {
      return this.userId;
    }

    public getFinityRoleByUserId_args setUserId(long userId) {
      this.userId = userId;
      setUserIdIsSet(true);
      return this;
    }

    public void unsetUserId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
    }

    /** Returns true if field userId is set (has been assigned a value) and false otherwise */
    public boolean isSetUserId() {
      return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
    }

    public void setUserIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
    }

    public String getPlatform() {
      return this.platform;
    }

    public getFinityRoleByUserId_args setPlatform(String platform) {
      this.platform = platform;
      return this;
    }

    public void unsetPlatform() {
      this.platform = null;
    }

    /** Returns true if field platform is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatform() {
      return this.platform != null;
    }

    public void setPlatformIsSet(boolean value) {
      if (!value) {
        this.platform = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case USER_ID:
        if (value == null) {
          unsetUserId();
        } else {
          setUserId((Long)value);
        }
        break;

      case PLATFORM:
        if (value == null) {
          unsetPlatform();
        } else {
          setPlatform((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case USER_ID:
        return Long.valueOf(getUserId());

      case PLATFORM:
        return getPlatform();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case USER_ID:
        return isSetUserId();
      case PLATFORM:
        return isSetPlatform();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getFinityRoleByUserId_args)
        return this.equals((getFinityRoleByUserId_args)that);
      return false;
    }

    public boolean equals(getFinityRoleByUserId_args that) {
      if (that == null)
        return false;

      boolean this_present_userId = true;
      boolean that_present_userId = true;
      if (this_present_userId || that_present_userId) {
        if (!(this_present_userId && that_present_userId))
          return false;
        if (this.userId != that.userId)
          return false;
      }

      boolean this_present_platform = true && this.isSetPlatform();
      boolean that_present_platform = true && that.isSetPlatform();
      if (this_present_platform || that_present_platform) {
        if (!(this_present_platform && that_present_platform))
          return false;
        if (!this.platform.equals(that.platform))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_userId = true;
      list.add(present_userId);
      if (present_userId)
        list.add(userId);

      boolean present_platform = true && (isSetPlatform());
      list.add(present_platform);
      if (present_platform)
        list.add(platform);

      return list.hashCode();
    }

    @Override
    public int compareTo(getFinityRoleByUserId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetUserId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPlatform()).compareTo(other.isSetPlatform());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatform()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platform, other.platform);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getFinityRoleByUserId_args(");
      boolean first = true;

      sb.append("userId:");
      sb.append(this.userId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("platform:");
      if (this.platform == null) {
        sb.append("null");
      } else {
        sb.append(this.platform);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getFinityRoleByUserId_argsStandardSchemeFactory implements SchemeFactory {
      public getFinityRoleByUserId_argsStandardScheme getScheme() {
        return new getFinityRoleByUserId_argsStandardScheme();
      }
    }

    private static class getFinityRoleByUserId_argsStandardScheme extends StandardScheme<getFinityRoleByUserId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getFinityRoleByUserId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // USER_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.userId = iprot.readI64();
                struct.setUserIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // PLATFORM
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.platform = iprot.readString();
                struct.setPlatformIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getFinityRoleByUserId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(USER_ID_FIELD_DESC);
        oprot.writeI64(struct.userId);
        oprot.writeFieldEnd();
        if (struct.platform != null) {
          oprot.writeFieldBegin(PLATFORM_FIELD_DESC);
          oprot.writeString(struct.platform);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getFinityRoleByUserId_argsTupleSchemeFactory implements SchemeFactory {
      public getFinityRoleByUserId_argsTupleScheme getScheme() {
        return new getFinityRoleByUserId_argsTupleScheme();
      }
    }

    private static class getFinityRoleByUserId_argsTupleScheme extends TupleScheme<getFinityRoleByUserId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getFinityRoleByUserId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetUserId()) {
          optionals.set(0);
        }
        if (struct.isSetPlatform()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetUserId()) {
          oprot.writeI64(struct.userId);
        }
        if (struct.isSetPlatform()) {
          oprot.writeString(struct.platform);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getFinityRoleByUserId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.userId = iprot.readI64();
          struct.setUserIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.platform = iprot.readString();
          struct.setPlatformIsSet(true);
        }
      }
    }

  }

  public static class getFinityRoleByUserId_result implements org.apache.thrift.TBase<getFinityRoleByUserId_result, getFinityRoleByUserId_result._Fields>, java.io.Serializable, Cloneable, Comparable<getFinityRoleByUserId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getFinityRoleByUserId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getFinityRoleByUserId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getFinityRoleByUserId_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.finity.FinityRoleListVoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getFinityRoleByUserId_result.class, metaDataMap);
    }

    public getFinityRoleByUserId_result() {
    }

    public getFinityRoleByUserId_result(
      com.froad.thrift.vo.finity.FinityRoleListVoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getFinityRoleByUserId_result(getFinityRoleByUserId_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.finity.FinityRoleListVoRes(other.success);
      }
    }

    public getFinityRoleByUserId_result deepCopy() {
      return new getFinityRoleByUserId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes getSuccess() {
      return this.success;
    }

    public getFinityRoleByUserId_result setSuccess(com.froad.thrift.vo.finity.FinityRoleListVoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.finity.FinityRoleListVoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getFinityRoleByUserId_result)
        return this.equals((getFinityRoleByUserId_result)that);
      return false;
    }

    public boolean equals(getFinityRoleByUserId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getFinityRoleByUserId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getFinityRoleByUserId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getFinityRoleByUserId_resultStandardSchemeFactory implements SchemeFactory {
      public getFinityRoleByUserId_resultStandardScheme getScheme() {
        return new getFinityRoleByUserId_resultStandardScheme();
      }
    }

    private static class getFinityRoleByUserId_resultStandardScheme extends StandardScheme<getFinityRoleByUserId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getFinityRoleByUserId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.finity.FinityRoleListVoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getFinityRoleByUserId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getFinityRoleByUserId_resultTupleSchemeFactory implements SchemeFactory {
      public getFinityRoleByUserId_resultTupleScheme getScheme() {
        return new getFinityRoleByUserId_resultTupleScheme();
      }
    }

    private static class getFinityRoleByUserId_resultTupleScheme extends TupleScheme<getFinityRoleByUserId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getFinityRoleByUserId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getFinityRoleByUserId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.finity.FinityRoleListVoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getFinityRoleByUserIdLogin_args implements org.apache.thrift.TBase<getFinityRoleByUserIdLogin_args, getFinityRoleByUserIdLogin_args._Fields>, java.io.Serializable, Cloneable, Comparable<getFinityRoleByUserIdLogin_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getFinityRoleByUserIdLogin_args");

    private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I64, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getFinityRoleByUserIdLogin_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getFinityRoleByUserIdLogin_argsTupleSchemeFactory());
    }

    public long userId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      USER_ID((short)1, "userId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // USER_ID
            return USER_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __USERID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getFinityRoleByUserIdLogin_args.class, metaDataMap);
    }

    public getFinityRoleByUserIdLogin_args() {
    }

    public getFinityRoleByUserIdLogin_args(
      long userId)
    {
      this();
      this.userId = userId;
      setUserIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getFinityRoleByUserIdLogin_args(getFinityRoleByUserIdLogin_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.userId = other.userId;
    }

    public getFinityRoleByUserIdLogin_args deepCopy() {
      return new getFinityRoleByUserIdLogin_args(this);
    }

    @Override
    public void clear() {
      setUserIdIsSet(false);
      this.userId = 0;
    }

    public long getUserId() {
      return this.userId;
    }

    public getFinityRoleByUserIdLogin_args setUserId(long userId) {
      this.userId = userId;
      setUserIdIsSet(true);
      return this;
    }

    public void unsetUserId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
    }

    /** Returns true if field userId is set (has been assigned a value) and false otherwise */
    public boolean isSetUserId() {
      return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
    }

    public void setUserIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case USER_ID:
        if (value == null) {
          unsetUserId();
        } else {
          setUserId((Long)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case USER_ID:
        return Long.valueOf(getUserId());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case USER_ID:
        return isSetUserId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getFinityRoleByUserIdLogin_args)
        return this.equals((getFinityRoleByUserIdLogin_args)that);
      return false;
    }

    public boolean equals(getFinityRoleByUserIdLogin_args that) {
      if (that == null)
        return false;

      boolean this_present_userId = true;
      boolean that_present_userId = true;
      if (this_present_userId || that_present_userId) {
        if (!(this_present_userId && that_present_userId))
          return false;
        if (this.userId != that.userId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_userId = true;
      list.add(present_userId);
      if (present_userId)
        list.add(userId);

      return list.hashCode();
    }

    @Override
    public int compareTo(getFinityRoleByUserIdLogin_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetUserId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getFinityRoleByUserIdLogin_args(");
      boolean first = true;

      sb.append("userId:");
      sb.append(this.userId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getFinityRoleByUserIdLogin_argsStandardSchemeFactory implements SchemeFactory {
      public getFinityRoleByUserIdLogin_argsStandardScheme getScheme() {
        return new getFinityRoleByUserIdLogin_argsStandardScheme();
      }
    }

    private static class getFinityRoleByUserIdLogin_argsStandardScheme extends StandardScheme<getFinityRoleByUserIdLogin_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getFinityRoleByUserIdLogin_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // USER_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.userId = iprot.readI64();
                struct.setUserIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getFinityRoleByUserIdLogin_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(USER_ID_FIELD_DESC);
        oprot.writeI64(struct.userId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getFinityRoleByUserIdLogin_argsTupleSchemeFactory implements SchemeFactory {
      public getFinityRoleByUserIdLogin_argsTupleScheme getScheme() {
        return new getFinityRoleByUserIdLogin_argsTupleScheme();
      }
    }

    private static class getFinityRoleByUserIdLogin_argsTupleScheme extends TupleScheme<getFinityRoleByUserIdLogin_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getFinityRoleByUserIdLogin_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetUserId()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetUserId()) {
          oprot.writeI64(struct.userId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getFinityRoleByUserIdLogin_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.userId = iprot.readI64();
          struct.setUserIdIsSet(true);
        }
      }
    }

  }

  public static class getFinityRoleByUserIdLogin_result implements org.apache.thrift.TBase<getFinityRoleByUserIdLogin_result, getFinityRoleByUserIdLogin_result._Fields>, java.io.Serializable, Cloneable, Comparable<getFinityRoleByUserIdLogin_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getFinityRoleByUserIdLogin_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getFinityRoleByUserIdLogin_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getFinityRoleByUserIdLogin_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.finity.FinityRoleListVoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getFinityRoleByUserIdLogin_result.class, metaDataMap);
    }

    public getFinityRoleByUserIdLogin_result() {
    }

    public getFinityRoleByUserIdLogin_result(
      com.froad.thrift.vo.finity.FinityRoleListVoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getFinityRoleByUserIdLogin_result(getFinityRoleByUserIdLogin_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.finity.FinityRoleListVoRes(other.success);
      }
    }

    public getFinityRoleByUserIdLogin_result deepCopy() {
      return new getFinityRoleByUserIdLogin_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes getSuccess() {
      return this.success;
    }

    public getFinityRoleByUserIdLogin_result setSuccess(com.froad.thrift.vo.finity.FinityRoleListVoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.finity.FinityRoleListVoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getFinityRoleByUserIdLogin_result)
        return this.equals((getFinityRoleByUserIdLogin_result)that);
      return false;
    }

    public boolean equals(getFinityRoleByUserIdLogin_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getFinityRoleByUserIdLogin_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getFinityRoleByUserIdLogin_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getFinityRoleByUserIdLogin_resultStandardSchemeFactory implements SchemeFactory {
      public getFinityRoleByUserIdLogin_resultStandardScheme getScheme() {
        return new getFinityRoleByUserIdLogin_resultStandardScheme();
      }
    }

    private static class getFinityRoleByUserIdLogin_resultStandardScheme extends StandardScheme<getFinityRoleByUserIdLogin_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getFinityRoleByUserIdLogin_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.finity.FinityRoleListVoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getFinityRoleByUserIdLogin_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getFinityRoleByUserIdLogin_resultTupleSchemeFactory implements SchemeFactory {
      public getFinityRoleByUserIdLogin_resultTupleScheme getScheme() {
        return new getFinityRoleByUserIdLogin_resultTupleScheme();
      }
    }

    private static class getFinityRoleByUserIdLogin_resultTupleScheme extends TupleScheme<getFinityRoleByUserIdLogin_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getFinityRoleByUserIdLogin_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getFinityRoleByUserIdLogin_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.finity.FinityRoleListVoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getFinityRoleById_args implements org.apache.thrift.TBase<getFinityRoleById_args, getFinityRoleById_args._Fields>, java.io.Serializable, Cloneable, Comparable<getFinityRoleById_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getFinityRoleById_args");

    private static final org.apache.thrift.protocol.TField ROLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("roleId", org.apache.thrift.protocol.TType.I64, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getFinityRoleById_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getFinityRoleById_argsTupleSchemeFactory());
    }

    public long roleId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ROLE_ID((short)1, "roleId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ROLE_ID
            return ROLE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ROLEID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ROLE_ID, new org.apache.thrift.meta_data.FieldMetaData("roleId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getFinityRoleById_args.class, metaDataMap);
    }

    public getFinityRoleById_args() {
    }

    public getFinityRoleById_args(
      long roleId)
    {
      this();
      this.roleId = roleId;
      setRoleIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getFinityRoleById_args(getFinityRoleById_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.roleId = other.roleId;
    }

    public getFinityRoleById_args deepCopy() {
      return new getFinityRoleById_args(this);
    }

    @Override
    public void clear() {
      setRoleIdIsSet(false);
      this.roleId = 0;
    }

    public long getRoleId() {
      return this.roleId;
    }

    public getFinityRoleById_args setRoleId(long roleId) {
      this.roleId = roleId;
      setRoleIdIsSet(true);
      return this;
    }

    public void unsetRoleId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROLEID_ISSET_ID);
    }

    /** Returns true if field roleId is set (has been assigned a value) and false otherwise */
    public boolean isSetRoleId() {
      return EncodingUtils.testBit(__isset_bitfield, __ROLEID_ISSET_ID);
    }

    public void setRoleIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROLEID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ROLE_ID:
        if (value == null) {
          unsetRoleId();
        } else {
          setRoleId((Long)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ROLE_ID:
        return Long.valueOf(getRoleId());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ROLE_ID:
        return isSetRoleId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getFinityRoleById_args)
        return this.equals((getFinityRoleById_args)that);
      return false;
    }

    public boolean equals(getFinityRoleById_args that) {
      if (that == null)
        return false;

      boolean this_present_roleId = true;
      boolean that_present_roleId = true;
      if (this_present_roleId || that_present_roleId) {
        if (!(this_present_roleId && that_present_roleId))
          return false;
        if (this.roleId != that.roleId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_roleId = true;
      list.add(present_roleId);
      if (present_roleId)
        list.add(roleId);

      return list.hashCode();
    }

    @Override
    public int compareTo(getFinityRoleById_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRoleId()).compareTo(other.isSetRoleId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRoleId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.roleId, other.roleId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getFinityRoleById_args(");
      boolean first = true;

      sb.append("roleId:");
      sb.append(this.roleId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getFinityRoleById_argsStandardSchemeFactory implements SchemeFactory {
      public getFinityRoleById_argsStandardScheme getScheme() {
        return new getFinityRoleById_argsStandardScheme();
      }
    }

    private static class getFinityRoleById_argsStandardScheme extends StandardScheme<getFinityRoleById_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getFinityRoleById_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ROLE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.roleId = iprot.readI64();
                struct.setRoleIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getFinityRoleById_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(ROLE_ID_FIELD_DESC);
        oprot.writeI64(struct.roleId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getFinityRoleById_argsTupleSchemeFactory implements SchemeFactory {
      public getFinityRoleById_argsTupleScheme getScheme() {
        return new getFinityRoleById_argsTupleScheme();
      }
    }

    private static class getFinityRoleById_argsTupleScheme extends TupleScheme<getFinityRoleById_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getFinityRoleById_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRoleId()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRoleId()) {
          oprot.writeI64(struct.roleId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getFinityRoleById_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.roleId = iprot.readI64();
          struct.setRoleIdIsSet(true);
        }
      }
    }

  }

  public static class getFinityRoleById_result implements org.apache.thrift.TBase<getFinityRoleById_result, getFinityRoleById_result._Fields>, java.io.Serializable, Cloneable, Comparable<getFinityRoleById_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getFinityRoleById_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getFinityRoleById_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getFinityRoleById_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.finity.FinityRoleListVoRes.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getFinityRoleById_result.class, metaDataMap);
    }

    public getFinityRoleById_result() {
    }

    public getFinityRoleById_result(
      com.froad.thrift.vo.finity.FinityRoleListVoRes success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getFinityRoleById_result(getFinityRoleById_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.finity.FinityRoleListVoRes(other.success);
      }
    }

    public getFinityRoleById_result deepCopy() {
      return new getFinityRoleById_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.finity.FinityRoleListVoRes getSuccess() {
      return this.success;
    }

    public getFinityRoleById_result setSuccess(com.froad.thrift.vo.finity.FinityRoleListVoRes success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.finity.FinityRoleListVoRes)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getFinityRoleById_result)
        return this.equals((getFinityRoleById_result)that);
      return false;
    }

    public boolean equals(getFinityRoleById_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getFinityRoleById_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getFinityRoleById_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getFinityRoleById_resultStandardSchemeFactory implements SchemeFactory {
      public getFinityRoleById_resultStandardScheme getScheme() {
        return new getFinityRoleById_resultStandardScheme();
      }
    }

    private static class getFinityRoleById_resultStandardScheme extends StandardScheme<getFinityRoleById_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getFinityRoleById_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.finity.FinityRoleListVoRes();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getFinityRoleById_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getFinityRoleById_resultTupleSchemeFactory implements SchemeFactory {
      public getFinityRoleById_resultTupleScheme getScheme() {
        return new getFinityRoleById_resultTupleScheme();
      }
    }

    private static class getFinityRoleById_resultTupleScheme extends TupleScheme<getFinityRoleById_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getFinityRoleById_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getFinityRoleById_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.finity.FinityRoleListVoRes();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class deleteFinityRole_args implements org.apache.thrift.TBase<deleteFinityRole_args, deleteFinityRole_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteFinityRole_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteFinityRole_args");

    private static final org.apache.thrift.protocol.TField ORIGIN_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("originVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField PLATFORM_FIELD_DESC = new org.apache.thrift.protocol.TField("platform", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField ROLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("roleId", org.apache.thrift.protocol.TType.I64, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteFinityRole_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteFinityRole_argsTupleSchemeFactory());
    }

    public com.froad.thrift.vo.OriginVo originVo; // required
    public String platform; // required
    public long roleId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORIGIN_VO((short)1, "originVo"),
      PLATFORM((short)2, "platform"),
      ROLE_ID((short)3, "roleId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORIGIN_VO
            return ORIGIN_VO;
          case 2: // PLATFORM
            return PLATFORM;
          case 3: // ROLE_ID
            return ROLE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ROLEID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORIGIN_VO, new org.apache.thrift.meta_data.FieldMetaData("originVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.OriginVo.class)));
      tmpMap.put(_Fields.PLATFORM, new org.apache.thrift.meta_data.FieldMetaData("platform", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ROLE_ID, new org.apache.thrift.meta_data.FieldMetaData("roleId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteFinityRole_args.class, metaDataMap);
    }

    public deleteFinityRole_args() {
    }

    public deleteFinityRole_args(
      com.froad.thrift.vo.OriginVo originVo,
      String platform,
      long roleId)
    {
      this();
      this.originVo = originVo;
      this.platform = platform;
      this.roleId = roleId;
      setRoleIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteFinityRole_args(deleteFinityRole_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetOriginVo()) {
        this.originVo = new com.froad.thrift.vo.OriginVo(other.originVo);
      }
      if (other.isSetPlatform()) {
        this.platform = other.platform;
      }
      this.roleId = other.roleId;
    }

    public deleteFinityRole_args deepCopy() {
      return new deleteFinityRole_args(this);
    }

    @Override
    public void clear() {
      this.originVo = null;
      this.platform = null;
      setRoleIdIsSet(false);
      this.roleId = 0;
    }

    public com.froad.thrift.vo.OriginVo getOriginVo() {
      return this.originVo;
    }

    public deleteFinityRole_args setOriginVo(com.froad.thrift.vo.OriginVo originVo) {
      this.originVo = originVo;
      return this;
    }

    public void unsetOriginVo() {
      this.originVo = null;
    }

    /** Returns true if field originVo is set (has been assigned a value) and false otherwise */
    public boolean isSetOriginVo() {
      return this.originVo != null;
    }

    public void setOriginVoIsSet(boolean value) {
      if (!value) {
        this.originVo = null;
      }
    }

    public String getPlatform() {
      return this.platform;
    }

    public deleteFinityRole_args setPlatform(String platform) {
      this.platform = platform;
      return this;
    }

    public void unsetPlatform() {
      this.platform = null;
    }

    /** Returns true if field platform is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatform() {
      return this.platform != null;
    }

    public void setPlatformIsSet(boolean value) {
      if (!value) {
        this.platform = null;
      }
    }

    public long getRoleId() {
      return this.roleId;
    }

    public deleteFinityRole_args setRoleId(long roleId) {
      this.roleId = roleId;
      setRoleIdIsSet(true);
      return this;
    }

    public void unsetRoleId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROLEID_ISSET_ID);
    }

    /** Returns true if field roleId is set (has been assigned a value) and false otherwise */
    public boolean isSetRoleId() {
      return EncodingUtils.testBit(__isset_bitfield, __ROLEID_ISSET_ID);
    }

    public void setRoleIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROLEID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORIGIN_VO:
        if (value == null) {
          unsetOriginVo();
        } else {
          setOriginVo((com.froad.thrift.vo.OriginVo)value);
        }
        break;

      case PLATFORM:
        if (value == null) {
          unsetPlatform();
        } else {
          setPlatform((String)value);
        }
        break;

      case ROLE_ID:
        if (value == null) {
          unsetRoleId();
        } else {
          setRoleId((Long)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORIGIN_VO:
        return getOriginVo();

      case PLATFORM:
        return getPlatform();

      case ROLE_ID:
        return Long.valueOf(getRoleId());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORIGIN_VO:
        return isSetOriginVo();
      case PLATFORM:
        return isSetPlatform();
      case ROLE_ID:
        return isSetRoleId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteFinityRole_args)
        return this.equals((deleteFinityRole_args)that);
      return false;
    }

    public boolean equals(deleteFinityRole_args that) {
      if (that == null)
        return false;

      boolean this_present_originVo = true && this.isSetOriginVo();
      boolean that_present_originVo = true && that.isSetOriginVo();
      if (this_present_originVo || that_present_originVo) {
        if (!(this_present_originVo && that_present_originVo))
          return false;
        if (!this.originVo.equals(that.originVo))
          return false;
      }

      boolean this_present_platform = true && this.isSetPlatform();
      boolean that_present_platform = true && that.isSetPlatform();
      if (this_present_platform || that_present_platform) {
        if (!(this_present_platform && that_present_platform))
          return false;
        if (!this.platform.equals(that.platform))
          return false;
      }

      boolean this_present_roleId = true;
      boolean that_present_roleId = true;
      if (this_present_roleId || that_present_roleId) {
        if (!(this_present_roleId && that_present_roleId))
          return false;
        if (this.roleId != that.roleId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_originVo = true && (isSetOriginVo());
      list.add(present_originVo);
      if (present_originVo)
        list.add(originVo);

      boolean present_platform = true && (isSetPlatform());
      list.add(present_platform);
      if (present_platform)
        list.add(platform);

      boolean present_roleId = true;
      list.add(present_roleId);
      if (present_roleId)
        list.add(roleId);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteFinityRole_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOriginVo()).compareTo(other.isSetOriginVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOriginVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originVo, other.originVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPlatform()).compareTo(other.isSetPlatform());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatform()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platform, other.platform);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetRoleId()).compareTo(other.isSetRoleId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRoleId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.roleId, other.roleId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteFinityRole_args(");
      boolean first = true;

      sb.append("originVo:");
      if (this.originVo == null) {
        sb.append("null");
      } else {
        sb.append(this.originVo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("platform:");
      if (this.platform == null) {
        sb.append("null");
      } else {
        sb.append(this.platform);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("roleId:");
      sb.append(this.roleId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (originVo != null) {
        originVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteFinityRole_argsStandardSchemeFactory implements SchemeFactory {
      public deleteFinityRole_argsStandardScheme getScheme() {
        return new deleteFinityRole_argsStandardScheme();
      }
    }

    private static class deleteFinityRole_argsStandardScheme extends StandardScheme<deleteFinityRole_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteFinityRole_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORIGIN_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.originVo = new com.froad.thrift.vo.OriginVo();
                struct.originVo.read(iprot);
                struct.setOriginVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // PLATFORM
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.platform = iprot.readString();
                struct.setPlatformIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // ROLE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.roleId = iprot.readI64();
                struct.setRoleIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteFinityRole_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.originVo != null) {
          oprot.writeFieldBegin(ORIGIN_VO_FIELD_DESC);
          struct.originVo.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.platform != null) {
          oprot.writeFieldBegin(PLATFORM_FIELD_DESC);
          oprot.writeString(struct.platform);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ROLE_ID_FIELD_DESC);
        oprot.writeI64(struct.roleId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteFinityRole_argsTupleSchemeFactory implements SchemeFactory {
      public deleteFinityRole_argsTupleScheme getScheme() {
        return new deleteFinityRole_argsTupleScheme();
      }
    }

    private static class deleteFinityRole_argsTupleScheme extends TupleScheme<deleteFinityRole_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteFinityRole_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOriginVo()) {
          optionals.set(0);
        }
        if (struct.isSetPlatform()) {
          optionals.set(1);
        }
        if (struct.isSetRoleId()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetOriginVo()) {
          struct.originVo.write(oprot);
        }
        if (struct.isSetPlatform()) {
          oprot.writeString(struct.platform);
        }
        if (struct.isSetRoleId()) {
          oprot.writeI64(struct.roleId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteFinityRole_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.originVo = new com.froad.thrift.vo.OriginVo();
          struct.originVo.read(iprot);
          struct.setOriginVoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.platform = iprot.readString();
          struct.setPlatformIsSet(true);
        }
        if (incoming.get(2)) {
          struct.roleId = iprot.readI64();
          struct.setRoleIdIsSet(true);
        }
      }
    }

  }

  public static class deleteFinityRole_result implements org.apache.thrift.TBase<deleteFinityRole_result, deleteFinityRole_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteFinityRole_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteFinityRole_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteFinityRole_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteFinityRole_resultTupleSchemeFactory());
    }

    public com.froad.thrift.vo.ResultVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.froad.thrift.vo.ResultVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteFinityRole_result.class, metaDataMap);
    }

    public deleteFinityRole_result() {
    }

    public deleteFinityRole_result(
      com.froad.thrift.vo.ResultVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteFinityRole_result(deleteFinityRole_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.froad.thrift.vo.ResultVo(other.success);
      }
    }

    public deleteFinityRole_result deepCopy() {
      return new deleteFinityRole_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.froad.thrift.vo.ResultVo getSuccess() {
      return this.success;
    }

    public deleteFinityRole_result setSuccess(com.froad.thrift.vo.ResultVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.froad.thrift.vo.ResultVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteFinityRole_result)
        return this.equals((deleteFinityRole_result)that);
      return false;
    }

    public boolean equals(deleteFinityRole_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(deleteFinityRole_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteFinityRole_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteFinityRole_resultStandardSchemeFactory implements SchemeFactory {
      public deleteFinityRole_resultStandardScheme getScheme() {
        return new deleteFinityRole_resultStandardScheme();
      }
    }

    private static class deleteFinityRole_resultStandardScheme extends StandardScheme<deleteFinityRole_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteFinityRole_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.froad.thrift.vo.ResultVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteFinityRole_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteFinityRole_resultTupleSchemeFactory implements SchemeFactory {
      public deleteFinityRole_resultTupleScheme getScheme() {
        return new deleteFinityRole_resultTupleScheme();
      }
    }

    private static class deleteFinityRole_resultTupleScheme extends TupleScheme<deleteFinityRole_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteFinityRole_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteFinityRole_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.froad.thrift.vo.ResultVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
