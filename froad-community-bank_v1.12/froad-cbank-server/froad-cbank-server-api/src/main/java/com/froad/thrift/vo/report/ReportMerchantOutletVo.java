/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.froad.thrift.vo.report;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 商户门店信息
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-3-4")
public class ReportMerchantOutletVo implements org.apache.thrift.TBase<ReportMerchantOutletVo, ReportMerchantOutletVo._Fields>, java.io.Serializable, Cloneable, Comparable<ReportMerchantOutletVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReportMerchantOutletVo");

  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField OUTLET_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("outletName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField OUTLET_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("outletAddress", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField MERCHANT_OUTLET_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantOutletCount", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ReportMerchantOutletVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ReportMerchantOutletVoTupleSchemeFactory());
  }

  /**
   * 支行名称 *
   */
  public String orgName; // required
  /**
   * 网点名称 *
   */
  public String outletName; // required
  /**
   * 网点地址 *
   */
  public String outletAddress; // required
  /**
   * 商户名称 *
   */
  public String merchantName; // required
  /**
   * 商户门店数 *
   */
  public int merchantOutletCount; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 支行名称 *
     */
    ORG_NAME((short)1, "orgName"),
    /**
     * 网点名称 *
     */
    OUTLET_NAME((short)2, "outletName"),
    /**
     * 网点地址 *
     */
    OUTLET_ADDRESS((short)3, "outletAddress"),
    /**
     * 商户名称 *
     */
    MERCHANT_NAME((short)4, "merchantName"),
    /**
     * 商户门店数 *
     */
    MERCHANT_OUTLET_COUNT((short)5, "merchantOutletCount");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORG_NAME
          return ORG_NAME;
        case 2: // OUTLET_NAME
          return OUTLET_NAME;
        case 3: // OUTLET_ADDRESS
          return OUTLET_ADDRESS;
        case 4: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 5: // MERCHANT_OUTLET_COUNT
          return MERCHANT_OUTLET_COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MERCHANTOUTLETCOUNT_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_NAME, new org.apache.thrift.meta_data.FieldMetaData("outletName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUTLET_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("outletAddress", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_OUTLET_COUNT, new org.apache.thrift.meta_data.FieldMetaData("merchantOutletCount", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReportMerchantOutletVo.class, metaDataMap);
  }

  public ReportMerchantOutletVo() {
  }

  public ReportMerchantOutletVo(
    String orgName,
    String outletName,
    String outletAddress,
    String merchantName,
    int merchantOutletCount)
  {
    this();
    this.orgName = orgName;
    this.outletName = outletName;
    this.outletAddress = outletAddress;
    this.merchantName = merchantName;
    this.merchantOutletCount = merchantOutletCount;
    setMerchantOutletCountIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReportMerchantOutletVo(ReportMerchantOutletVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetOutletName()) {
      this.outletName = other.outletName;
    }
    if (other.isSetOutletAddress()) {
      this.outletAddress = other.outletAddress;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    this.merchantOutletCount = other.merchantOutletCount;
  }

  public ReportMerchantOutletVo deepCopy() {
    return new ReportMerchantOutletVo(this);
  }

  @Override
  public void clear() {
    this.orgName = null;
    this.outletName = null;
    this.outletAddress = null;
    this.merchantName = null;
    setMerchantOutletCountIsSet(false);
    this.merchantOutletCount = 0;
  }

  /**
   * 支行名称 *
   */
  public String getOrgName() {
    return this.orgName;
  }

  /**
   * 支行名称 *
   */
  public ReportMerchantOutletVo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 网点名称 *
   */
  public String getOutletName() {
    return this.outletName;
  }

  /**
   * 网点名称 *
   */
  public ReportMerchantOutletVo setOutletName(String outletName) {
    this.outletName = outletName;
    return this;
  }

  public void unsetOutletName() {
    this.outletName = null;
  }

  /** Returns true if field outletName is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletName() {
    return this.outletName != null;
  }

  public void setOutletNameIsSet(boolean value) {
    if (!value) {
      this.outletName = null;
    }
  }

  /**
   * 网点地址 *
   */
  public String getOutletAddress() {
    return this.outletAddress;
  }

  /**
   * 网点地址 *
   */
  public ReportMerchantOutletVo setOutletAddress(String outletAddress) {
    this.outletAddress = outletAddress;
    return this;
  }

  public void unsetOutletAddress() {
    this.outletAddress = null;
  }

  /** Returns true if field outletAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetOutletAddress() {
    return this.outletAddress != null;
  }

  public void setOutletAddressIsSet(boolean value) {
    if (!value) {
      this.outletAddress = null;
    }
  }

  /**
   * 商户名称 *
   */
  public String getMerchantName() {
    return this.merchantName;
  }

  /**
   * 商户名称 *
   */
  public ReportMerchantOutletVo setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  /**
   * 商户门店数 *
   */
  public int getMerchantOutletCount() {
    return this.merchantOutletCount;
  }

  /**
   * 商户门店数 *
   */
  public ReportMerchantOutletVo setMerchantOutletCount(int merchantOutletCount) {
    this.merchantOutletCount = merchantOutletCount;
    setMerchantOutletCountIsSet(true);
    return this;
  }

  public void unsetMerchantOutletCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MERCHANTOUTLETCOUNT_ISSET_ID);
  }

  /** Returns true if field merchantOutletCount is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantOutletCount() {
    return EncodingUtils.testBit(__isset_bitfield, __MERCHANTOUTLETCOUNT_ISSET_ID);
  }

  public void setMerchantOutletCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MERCHANTOUTLETCOUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case OUTLET_NAME:
      if (value == null) {
        unsetOutletName();
      } else {
        setOutletName((String)value);
      }
      break;

    case OUTLET_ADDRESS:
      if (value == null) {
        unsetOutletAddress();
      } else {
        setOutletAddress((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case MERCHANT_OUTLET_COUNT:
      if (value == null) {
        unsetMerchantOutletCount();
      } else {
        setMerchantOutletCount((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORG_NAME:
      return getOrgName();

    case OUTLET_NAME:
      return getOutletName();

    case OUTLET_ADDRESS:
      return getOutletAddress();

    case MERCHANT_NAME:
      return getMerchantName();

    case MERCHANT_OUTLET_COUNT:
      return Integer.valueOf(getMerchantOutletCount());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORG_NAME:
      return isSetOrgName();
    case OUTLET_NAME:
      return isSetOutletName();
    case OUTLET_ADDRESS:
      return isSetOutletAddress();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case MERCHANT_OUTLET_COUNT:
      return isSetMerchantOutletCount();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ReportMerchantOutletVo)
      return this.equals((ReportMerchantOutletVo)that);
    return false;
  }

  public boolean equals(ReportMerchantOutletVo that) {
    if (that == null)
      return false;

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_outletName = true && this.isSetOutletName();
    boolean that_present_outletName = true && that.isSetOutletName();
    if (this_present_outletName || that_present_outletName) {
      if (!(this_present_outletName && that_present_outletName))
        return false;
      if (!this.outletName.equals(that.outletName))
        return false;
    }

    boolean this_present_outletAddress = true && this.isSetOutletAddress();
    boolean that_present_outletAddress = true && that.isSetOutletAddress();
    if (this_present_outletAddress || that_present_outletAddress) {
      if (!(this_present_outletAddress && that_present_outletAddress))
        return false;
      if (!this.outletAddress.equals(that.outletAddress))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_merchantOutletCount = true;
    boolean that_present_merchantOutletCount = true;
    if (this_present_merchantOutletCount || that_present_merchantOutletCount) {
      if (!(this_present_merchantOutletCount && that_present_merchantOutletCount))
        return false;
      if (this.merchantOutletCount != that.merchantOutletCount)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_outletName = true && (isSetOutletName());
    list.add(present_outletName);
    if (present_outletName)
      list.add(outletName);

    boolean present_outletAddress = true && (isSetOutletAddress());
    list.add(present_outletAddress);
    if (present_outletAddress)
      list.add(outletAddress);

    boolean present_merchantName = true && (isSetMerchantName());
    list.add(present_merchantName);
    if (present_merchantName)
      list.add(merchantName);

    boolean present_merchantOutletCount = true;
    list.add(present_merchantOutletCount);
    if (present_merchantOutletCount)
      list.add(merchantOutletCount);

    return list.hashCode();
  }

  @Override
  public int compareTo(ReportMerchantOutletVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletName()).compareTo(other.isSetOutletName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletName, other.outletName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutletAddress()).compareTo(other.isSetOutletAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutletAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outletAddress, other.outletAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantOutletCount()).compareTo(other.isSetMerchantOutletCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantOutletCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantOutletCount, other.merchantOutletCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ReportMerchantOutletVo(");
    boolean first = true;

    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletName:");
    if (this.outletName == null) {
      sb.append("null");
    } else {
      sb.append(this.outletName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outletAddress:");
    if (this.outletAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.outletAddress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantOutletCount:");
    sb.append(this.merchantOutletCount);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (orgName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'orgName' was not present! Struct: " + toString());
    }
    if (outletName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'outletName' was not present! Struct: " + toString());
    }
    if (outletAddress == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'outletAddress' was not present! Struct: " + toString());
    }
    if (merchantName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'merchantName' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'merchantOutletCount' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReportMerchantOutletVoStandardSchemeFactory implements SchemeFactory {
    public ReportMerchantOutletVoStandardScheme getScheme() {
      return new ReportMerchantOutletVoStandardScheme();
    }
  }

  private static class ReportMerchantOutletVoStandardScheme extends StandardScheme<ReportMerchantOutletVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReportMerchantOutletVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OUTLET_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletName = iprot.readString();
              struct.setOutletNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // OUTLET_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outletAddress = iprot.readString();
              struct.setOutletAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MERCHANT_OUTLET_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.merchantOutletCount = iprot.readI32();
              struct.setMerchantOutletCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetMerchantOutletCount()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'merchantOutletCount' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReportMerchantOutletVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.outletName != null) {
        oprot.writeFieldBegin(OUTLET_NAME_FIELD_DESC);
        oprot.writeString(struct.outletName);
        oprot.writeFieldEnd();
      }
      if (struct.outletAddress != null) {
        oprot.writeFieldBegin(OUTLET_ADDRESS_FIELD_DESC);
        oprot.writeString(struct.outletAddress);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MERCHANT_OUTLET_COUNT_FIELD_DESC);
      oprot.writeI32(struct.merchantOutletCount);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReportMerchantOutletVoTupleSchemeFactory implements SchemeFactory {
    public ReportMerchantOutletVoTupleScheme getScheme() {
      return new ReportMerchantOutletVoTupleScheme();
    }
  }

  private static class ReportMerchantOutletVoTupleScheme extends TupleScheme<ReportMerchantOutletVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReportMerchantOutletVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.orgName);
      oprot.writeString(struct.outletName);
      oprot.writeString(struct.outletAddress);
      oprot.writeString(struct.merchantName);
      oprot.writeI32(struct.merchantOutletCount);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReportMerchantOutletVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.orgName = iprot.readString();
      struct.setOrgNameIsSet(true);
      struct.outletName = iprot.readString();
      struct.setOutletNameIsSet(true);
      struct.outletAddress = iprot.readString();
      struct.setOutletAddressIsSet(true);
      struct.merchantName = iprot.readString();
      struct.setMerchantNameIsSet(true);
      struct.merchantOutletCount = iprot.readI32();
      struct.setMerchantOutletCountIsSet(true);
    }
  }

}

