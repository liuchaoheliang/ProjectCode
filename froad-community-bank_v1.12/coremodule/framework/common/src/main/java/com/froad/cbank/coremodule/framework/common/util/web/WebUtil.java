package com.froad.cbank.coremodule.framework.common.util.web;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.regex.Pattern;import javax.servlet.http.HttpServletRequest;import org.apache.http.client.ClientProtocolException;import com.alibaba.fastjson.JSONObject;import com.froad.cbank.coremodule.framework.common.client.HttpClientUtils;import com.froad.cbank.coremodule.framework.common.util.type.StringUtil;/** * 工程专用工具类 *  * @author 谢中民 *  */public class WebUtil {	/**	 * 替换回车符为字符串形式	 * 	 * @param source	 * @return	 */	public static String replaceBr(String source) {		if (source == null)			return null;		else			return StringUtil.replace(source, "\r\n", "\\r\\n");	}	public static String replaceHtmlText(String str) {		str = StringUtil.replace(str, "<", "&lt;");		str = StringUtil.replace(str, ">", "&gt;");		return str;	}	public static String replaceHtmlNull(String str) {		String regEx_script = "<[\\s]*?script[^>]*?>[\\s\\S]*?<[\\s]*?\\/[\\s]*?script[\\s]*?>"; // 定义script的正则表达式{或<script[^>]*?>[\\s\\S]*?<\\/script>		String regEx_style = "<[\\s]*?style[^>]*?>[\\s\\S]*?<[\\s]*?\\/[\\s]*?style[\\s]*?>"; // 定义style的正则表达式{或<style[^>]*?>[\\s\\S]*?<\\/style>		String regEx_html = "<[^>]+>"; // 定义HTML标签的正则表达式		str = Pattern.compile(regEx_script, Pattern.CASE_INSENSITIVE).matcher(str).replaceAll("");		str = Pattern.compile(regEx_style, Pattern.CASE_INSENSITIVE).matcher(str).replaceAll("");		str = Pattern.compile(regEx_html, Pattern.CASE_INSENSITIVE).matcher(str).replaceAll("");		return str;	}	public static void main(String[] args) {		System.out.println(replaceHtmlNull("<img src=\"1.png\"/>"));	}	/**	 * @Project cc-framework	 * @Package com.froad.cbank.coremodule.framework.common.util.web	 * @Method getClientIpAddr方法.<br>	 * @Description 获得站点访问者(客户端)的真实IP地址	 * @author 胡久洲	 * @date 2014-3-7 下午2:24:07	 * @param request	 * @return	 */	public static String getClientIpAddr(HttpServletRequest request) {		String ip = request.getHeader("X-Forwarded-For");        if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {            ip = request.getHeader("Proxy-Client-IP");        }        if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {            ip = request.getHeader("WL-Proxy-Client-IP");        }        if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {            ip = request.getHeader("HTTP_CLIENT_IP");        }        if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {            ip = request.getHeader("HTTP_X_FORWARDED_FOR");        }        if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {            ip = request.getRemoteAddr();        }        return ip;	}	/**	 * 根据IP 获取中国地区	 * @param url	 * @return  String[]{"中国","浙江","杭州","描述信息"}	 * @throws ClientProtocolException	 * @throws IOException	 */	public static String[] getAreaOfChinaByUrl(String ip){		try {			String resultStr = HttpClientUtils.doGet("http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=&ip="+ip, "UTF-8");			if(resultStr==null||StringUtil.isBlank(resultStr)||resultStr.indexOf("中国")==-1)				return null;			resultStr = resultStr.substring(resultStr.indexOf("中国"));			String[] areaInfo_ = resultStr.split("\t");			if(areaInfo_==null || areaInfo_.length<3)				return null;			String[] areaInfo = new String[4];			areaInfo[0] = areaInfo_[0];			areaInfo[1] = areaInfo_[1];			areaInfo[2] = areaInfo_[2];			if(areaInfo_.length>3) {				String desc_ = "";				for(int i=3;i<areaInfo_.length;i++){					desc_+=areaInfo_[i]+",";				}				areaInfo[3] = desc_;			}			return areaInfo;		} catch (Exception e) {			return null;		}	}		/**	 * 获得http的主体信息	 * @Title: getHttpConent 	 * @Project framework-common	 * @Package com.froad.cbank.coremodule.framework.common.util.web	 * @Description TODO(用一句话描述该类做什么)	 * @author hjz	 * @date 2015年4月14日 下午4:30:28	 * @param request	 * @return	 * @throws IOException	 */	public static JSONObject getHttpConent(HttpServletRequest request) throws IOException{		JSONObject jsonObject = new JSONObject();		if(StringUtil.equals(request.getContentType() , "application/json")) {			StringBuffer sb = new StringBuffer() ; 			InputStream is = request.getInputStream(); 			InputStreamReader isr = new InputStreamReader(is);   			BufferedReader br = new BufferedReader(isr); 			String s = "" ; 			while((s= br.readLine())!=null){ 				sb.append(s) ; 			}			jsonObject = JSONObject.parseObject(sb.toString());		}		return jsonObject;	}}