<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="byName"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	
	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="fileEncoding" value="UTF-8" />
        <property name="locations">
            <list>  
               <value>classpath*:conf/soft/properties/**/*.properties</value> 
                <value>file:/data/ubank/config/web/user/*.properties</value> 
            </list>
        </property>
    </bean>
		
Redis 连接池配置  读
    <bean id="readPoolConfig" class="redis.clients.jedis.JedisPoolConfig" >     
		最大连接数
		<property name="maxTotal" value="${read.redis.maxTotal}"/>
		 最大能够保持idel状态的对象数
		<property name="maxIdle" value="${read.redis.maxIdle}" />
        最长等待响应时间 
        <property name="maxWaitMillis" value="${read.redis.maxWaitMillis}" />               
        在获取连接的时候检查有效性 
        <property name="testOnBorrow" value="${read.redis.testOnBorrow}" />    
        <property name="testOnReturn" value="${read.redis.testOnReturn}" />
         
         是否启用后进先出 
        <property name="lifo" value="false" />     
        <property name="testWhileIdle" value="true" />
    </bean>
Redis 连接池配置  读
    
Redis 连接池配置  写
    <bean id="writePoolConfig" class="redis.clients.jedis.JedisPoolConfig" >     
		最大连接数
		<property name="maxTotal" value="${write.redis.maxTotal}"/>
		 最大能够保持idel状态的对象数
		<property name="maxIdle" value="${write.redis.maxIdle}" />
        最长等待响应时间 
        <property name="maxWaitMillis" value="${write.redis.maxWaitMillis}" />        
        在获取连接的时候检查有效性 
        <property name="testOnBorrow" value="${write.redis.testOnBorrow}" />    
        <property name="testOnReturn" value="${write.redis.testOnReturn}" />
         是否启用后进先出 
        <property name="lifo" value="false" />      
        <property name="testWhileIdle" value="true" />        
    </bean>
Redis 连接池配置  写
    
非集群连接池    读
	<bean id="readPool" class="redis.clients.jedis.JedisPool" destroy-method="close"  scope="singleton">
		参数构造
		<constructor-arg index="0" ref="readPoolConfig"/>
		<constructor-arg index="1" value="${read.redis.ip}"/>
		<constructor-arg index="2" value="${read.redis.port}"/>
	</bean>
非集群连接池    读

非集群连接池   写
	<bean id="writePool" class="redis.clients.jedis.JedisPool" destroy-method="close"  scope="singleton">
		参数构造
		<constructor-arg index="0" ref="writePoolConfig"/>
		<constructor-arg index="1" value="${write.redis.ip}"/>
		<constructor-arg index="2" value="${write.redis.port}"/>
	</bean>
非集群连接池   写	
	
	

	定义集群连接池
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="close"  scope="singleton">
		<constructor-arg index="0" ref="jedisPoolConfig"/>
		<constructor-arg index="1">
			<list>				
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.node1.ip}"/>
					<constructor-arg index="1" value="${redis.node1.port}"/>
				</bean>			
			</list>
		</constructor-arg>
 </bean>
 
  Redis 连接客户端
 <bean id="redisClient"  class="com.froad.cbank.expand.redis.RedisClient" >
 		<property name="readPool"  ref="readPool"></property>
 		<property name="writePool"  ref="writePool"></property>
 		
 		 
 		<property name="shardedJedisPool" ref="shardedJedisPool"></property>
 		
 </bean>
     -->
</beans>