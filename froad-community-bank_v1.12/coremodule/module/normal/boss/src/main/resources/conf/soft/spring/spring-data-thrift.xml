<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
	default-autowire="byName">
	
	<bean id="categorySaleService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.CategorySaleService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>CategorySaleService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryCategorySaleSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="cBankSaleService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.CBankSaleService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>CBankSaleService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryCBankSaleSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="groupBizService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.GroupBizService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>GroupBizService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryGroupBizSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="memberRegisterService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.MemberRegisterService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>MemberRegisterService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryMemberRegisterSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="merchantSaleService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.MerchantSaleService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>MerchantSaleService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryMerchantSaleSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="orderAnalysisService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.OrderAnalysisService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>OrderAnalysisService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryOrderAnalysisSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="orderPayTypeService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.OrderPayTypeService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>OrderPayTypeService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryPayTypeSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="outletAnalysisService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.OutletAnalysisService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>OutletAnalysisService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryOutletAnalysisSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="presaleBizService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.PresaleBizService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>PresaleBizService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryPresaleBizSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="productSaleService"  class="com.froad.cbank.coremodule.normal.boss.common.thrift.DynamicClientProxyFactory"  factory-method="createIface" scope="prototype">
		<constructor-arg>
			<value>com.data.thrift.service.ProductSaleService</value>
		</constructor-arg>
		<constructor-arg>
			<value>${thrift.data-hive.host}</value>
		</constructor-arg>
		<constructor-arg>
			<value>ProductSaleService</value>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="queryProductSaleSummary" value="60000" />
			</map>
		</constructor-arg>
	</bean>
</beans>  