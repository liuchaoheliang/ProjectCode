<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<display-name>communityBusiness_client</display-name>
	<filter>
		<filter-name>ParamLogFilter</filter-name>
		<filter-class>com.froad.interceptor.ParamLogFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ParamLogFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--  -->
	<filter>
		<filter-name>ParamLogFilter</filter-name>
		<filter-class>com.froad.interceptor.ParamLogFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ParamLogFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<!-- 生成token的过滤器 -->
	<filter>
		<filter-name>tokenMakerFilter</filter-name>
		<filter-class>com.froad.interceptor.TokenMakerFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>tokenMakerFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>tokenMakerFilter</filter-name>
		<url-pattern>*.ftl</url-pattern>
	</filter-mapping>




	<!-- 用于单点退出，该过滤器用于实现单点登出功能，通知其他应用单点登出 -->
	<listener>
		<listener-class>com.froad.sso.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>

	<!-- 该过滤器用于实现单点登出功能，可选配置。 -->
	<filter>
		<filter-name>SSO Single Sign Out Filter</filter-name>
		<filter-class>com.froad.sso.client.session.SingleSignOutFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>SSO Single Sign Out Filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->
	<filter>
		<filter-name>SSO Validation Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<!-- 服务端地址 -->
		<init-param>
			<param-name>ssoServerUrlPrefix</param-name>
			<param-value>http://sso.o2obill.com:8133/sso</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://fenfentong.com.cn:8080</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>SSO Validation Filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<!--
		该过滤器负责实现HttpServletRequest请求的包裹，
		比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得 SSO登录用户的登录名，可选配置。
	-->
	<filter>
		<filter-name>SSO HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>
			com.froad.sso.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>SSO HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>SSO Assertion Thread Local Filter</filter-name>
		<filter-class>com.froad.sso.client.util.AssertionThreadLocalFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>SSO Assertion Thread Local Filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<!-- 该过滤器负责用户的认证工作，必须启用它 -->
	<filter>
		<filter-name>SSOFilter</filter-name>
		<filter-class>com.froad.sso.client.authentication.AuthenticationFilter</filter-class>
		<!-- 服务端登录 -->
		<init-param>
			<param-name>ssoServerLoginUrl</param-name>
			<param-value>http://sso.o2obill.com:8133/sso/login</param-value>
		</init-param>
		<!-- 客户端登录页 -->
        <init-param>
            <param-name>ssoClientLoginUrl</param-name>
            <param-value>http://fenfentong.com.cn:8080/fft_client/toLogin.action</param-value>
        </init-param>
		<!-- 本地应用服务地址 -->
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://fenfentong.com.cn:8080</param-value>
		</init-param>
		<!-- 游客访问资源配置 后缀方式排除 *.js,*.png-->
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>/resgiterValidate.action,/loginOut.action,/ajax_merchant_delivery_list.action,/presell_goods_detail_new.action,/toLogin.action,/validateCode.action,/client_api.action,/common_shortmsg.action,/common_queryRule.action,/common_msgResend.action,/user_registered.action,/user_login.action,/user_changePwd.action,/user_queryPointAccount.action,/user_changeUserPhone.action,/user_changeUserInfo.action,/user_queryUserInfo.action,/user_querySuggestion.action,/user_addSuggestion.action,/user_querySuggestionReply.action,/user_favorite.action,/user_favoriteadd.action,/user_favoritedel.action,/task_sign.action,/pointObtain_validate_hfcz.action,/pointObtain_validate_lottery.action,/pointObtain_validate_goods.action,/pointObtain_addTran_hfcz.action,/pointObtain_addTran_Lottery.action,/pointObtain_addTran_goods.action,/merPre_queryMerchantByType.action,/merPre_merPreInfoByMerchantId.action,/tran_queryGoodsGroup.action,/tran_queryGoodsExchange.action,/tran_queryGoodsCarry.action,/goodsRebateRack_getMerchantByType_POINTS.action,/goodsRebateRack_queryMerchantProductByPager.action,/carryPoint_queryCarryPoints.action,/carryPoint_carryPoints.action,/recommend_queryTypeRecommend.action,/goodsGroup_queryClientGoodsGroup.action,/goodsGroup_queryClientGroupDetail.action,/goodsGroup_addGoodsGroupTran.action,/merchantAPIAction_login.action,/merchantAPIAction_sendTran.action,/merchantAPIAction_confirmTran.action,/merchantAPIAction_presentPoints.action,/merchantAPIAction_queryGroup.action,/merchantAPIAction_inUseGroup.action,/merchantTranAction_queryGroupTran.action,/merchantTranAction_queryReceiveTran.action,/merchantTranAction_queryPointsTran.action,/merchantTranAction_queryExchangeTran.action,/common_versionSearch.action,/queryMerchant.action,/index.action,/ajax_advert_list.action,/validateLogin.action,/index_ajax_merchant.action,/ajax_advert_list.action,/rebate_index.action,/ajax_advert_list.action,/findRankMerchantList.action,/findNewMerchantList.action,/new_exchange_index.action,/cashdesk_info.action,/merchant_login.action,/merchant_info.action,/group_index.action,/group_goods_hot_list.action,/preferential_index.action,/help_center.action,/toResgiter.action,/app_download_index.action,/exchange_local_list.action,/exchange_bankPoint_list.action,/exchange_lottery_list.action,/exchange_telephonefee_list.action,/exchange_telephonefee_info.action,/exchange_lottery_info.action,/merchant_apply_index.action,/merchant_apply.action,/exchange_local_info.action,/exchange_bankPoint_info.action,/searchIndex.action,/mobilePhoneValidate.action,/phoneValidateCode.action,/show_agreement.action,/addUser.action,/forget.action,/forgetPwd.action,/preferential_info.action,/member_share_merchant.action,/ajax_merchant_store_list.action,/search_rebate_merchants.action,/merchant_annex_info.action,/merchantProuct_by_merchantId_list.action,/merchant_product_info.action,/ajax_merchant_store_list.action,/validateCode.action,/group_goods_detail_new.action,/group_goods_new_list.action,/spring_festival_index.action,/spring_festival_static.action,/begin_lottery.action,/aldo_parisot_prize.action,/merchant_preferential_info.action,/home.action,/message_manage.action,/updPresentInfo.action,/merchant_product_list.action,/lineDownProductJSON.action,/merchant_product_add.action,/merchantProuct_by_merchantId_list.action,/onLineProductJSON.action,/queryMerchantProductInfoJSON.action,/getProductInfoJSON.action,/merchant_product_list.action,/merchant_product_add.action,/merchant_product_edit.action,/merchant_product_save.action,/merchant_product_update.action,/deleteProduct.action,/merchant_photo_info.action,/merchant_photo_list.action,/merchant_photo_add.action,/merchant_photo_edit.action,/merchant_photo_save.action,/merchant_photo_update.action,/queryMerchantPhotoesJSON.action,/deletePhoto.action,/getPhotoesInfoJSON.action,/lineDownPhotoJSON.action,/onLinePhotoJSON.action,/merchant_preferential_info.action,/findNewMerchantPreferentialList.action,/lineDownPreferentialJSON.action,/onLinePreferentialJSON.action,/merchant_preferential_list.action,/merchant_preferential_add.action,/merchant_preferential_edit.action,/merchant_preferential_save.action,/merchant_preferential_update.action,/deletePreferential.action,/updPresentInfo.action,/message_manage.action,/getPresentInfo.action,/merchant_goods_rebate_info.action,/merchant_goods_jffl_list.action,/merchant_goods_zjyh_list.action,/rabate_tran_detail_Info.action,/confirmExch.action,/transCarry.action,/transExchange.action,/queryPayResult.action,/queryCollectResult.action,/merchant_clerk_list.action,/clerk_info.action,/delete_clerk.action,/online_clerk.action,/merchant_treasurer_list.action,/treasurer_info.action,/delete_treasurer.action,/online_treasurer.action,/to_update_clerk.action,/to_update_treasurer.action,/update_clerk.action,/update_treasurer.action,/query_trans.action,/query_trans_finance.action,/query_group_trans.action,/query_group_trans_finance.action,/query_exchange_trans.action,/query_exchange_trans_finance.action,/add_goods_page,/create_order.action,/pay_transaction.action,/send_points_page.action,/create_order_of_send_points.action,/pay_transPoints.action,/expRebate.action,/expExchange.action,/expGroup.action,/expRebateFinance.action,/expExchangeFinance.action,/expGroupFinance.action,/query_activity_trans.action,/member_activity_list.action,/activity_authentication.action,/springfestival_authentication.action,/toChangPasswordMerchant.action,/changeClerkPassword.action,/add_goods_page.action,/toAuthentication.action,/groupExchange_authentication.action,/merchant_complaint_list.action,/to_merchantComplaint_reply.action,/merchantComplaint_reply.action,/announcement_info.action,/presell_index.action,/presell_goods_close_list.action,/lead_to_airticket.action,/lead_to_o2omall.action,/lead_to_o2ofanli.action,/search_preferential_merchants.action,/searchIndex.action,/search_rebate_merchants.action</param-value>
		</init-param>
		<!-- 客户端白名单页 -->
        <init-param>
            <param-name>ssoWhiteUrl</param-name>
             <param-value>http://fenfentong.com.cn:8080/fft_client/queryUserInfo.action</param-value>
        </init-param>
	</filter>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>SSOFFTFilter</filter-name>
		<filter-class>com.froad.sso.NewFFTSSOFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>SSOFFTFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>




	













	<servlet>
		<servlet-name>freemarker</servlet-name>
		<servlet-class>freemarker.ext.servlet.FreemarkerServlet</servlet-class>
		<init-param>
			<param-name>TemplatePath</param-name>
			<param-value>/</param-value>
		</init-param>
		<init-param>
			<param-name>NoCache</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>ContentType</param-name>
			<param-value>text/html;charset=UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>default_encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>number_format</param-name>
			<param-value>0.##########</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>freemarker</servlet-name>
		<url-pattern>*.ftl</url-pattern>
	</servlet-mapping>
	<!--
		<context-param> <param-name>webAppRootKey</param-name>
		<param-value>froad_client.root</param-value> </context-param>
	-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>

	<!--
		Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔 此参数用于后面的Spring
		Context Loader
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml,
			classpath:client-beans.xml,
			classpath:applicationContext-security.xml
		</param-value>
	</context-param>

	

	<!--	<servlet>-->
	<!--        <description>ConfigServlet</description>-->
	<!--        <display-name>ConfigServlet</display-name>-->
	<!--        <servlet-name>ConfigServlet</servlet-name>-->
	<!--
		<servlet-class>com.froad.servlet.ConfigServlet</servlet-class>
	-->
	<!--        <load-on-startup>1</load-on-startup>-->
	<!--    </servlet>-->

	<!--Spring的ApplicationContext 载入 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
		<!--		<listener-class>com.froad.servlet.MyListener</listener-class>-->
	</listener>

	<!--	<filter> -->
	<!-- 		<filter-name>ConfigFilter</filter-name> -->
	<!-- 		<filter-class>com.froad.servlet.ConfigFilter</filter-class> -->
	<!-- 	</filter> -->
	<!-- 	<filter-mapping> -->
	<!-- 		<filter-name>ConfigFilter</filter-name> -->
	<!-- 		<url-pattern>/*</url-pattern> -->
	<!-- 	</filter-mapping> -->


	<!-- SpringSecurity filter 	-->
	<!-- <filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>-->

	<servlet>
		<servlet-name>UploadServlet</servlet-name>
		<servlet-class>com.froad.action.api.servlet.UploadServlet</servlet-class>

		<init-param>
			<param-name>filepath</param-name>
			<param-value>uploadFile</param-value>
		</init-param>
		<init-param>
			<param-name>temppath</param-name>
			<param-value>temp</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>UploadServlet</servlet-name>
		<url-pattern>/upload.do</url-pattern>
	</servlet-mapping>

	<!-- url地址实现伪静态过滤器 -->
	<filter>
		<filter-name>rewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>WARN</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>rewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- Struts2 filter, actionPackages -->
	<filter>
		<filter-name>struts2Filter</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2Filter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<!-- 使freemarker模板支持struts2标签 -->
	<servlet>
		<servlet-name>JspSupportServlet</servlet-name>
		<servlet-class>org.apache.struts2.views.JspSupportServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>


	<!-- 定义默认访问页 -->
	<welcome-file-list>
		<welcome-file>/index.html</welcome-file>
	</welcome-file-list>


	<!-- 出错页面定义 -->
	<error-page>
		<error-code>500</error-code>
		<location>/html/error_page_500.html</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/html/error_page_404.html</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/html/error_page_403.html</location>
	</error-page>

</web-app>
