<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<beans:description>SpringSecurity配置</beans:description>
	
	 <!--
    <global-method-security pre-post-annotations="enabled">
        AspectJ pointcut expression that locates our "post" method and applies security that way
        <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
    </global-method-security>
    -->

	<!-- http安全配置 -->
	<http  use-expressions="true" access-denied-page="/common/authorityerror.jsp"  entry-point-ref="authenticationProcessingFilterEntryPoint">
		
		<!-- 无需进行权限验证的路径 -->
		<intercept-url pattern="/template/**" filters="none" />  

		<!-- login-page:默认指定的登录页面. authentication-failure-url:出错后跳转页面. default-target-url:成功登陆后跳转页面 
       <form-login login-page="/login.jsp"   authentication-failure-url="/common/403.jsp"   default-target-url="/index.jsp" />  
       logout-success-url:成功注销后跳转到的页面; -->  
		<logout logout-success-url="/index.html" invalidate-session="true" logout-url="/j_spring_security_logout"/>

		<session-management invalid-session-url="/toLogin.action" >
			<concurrency-control max-sessions="20"	error-if-maximum-exceeded="true" />
		</session-management>
		<!--<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		
		-->
		<custom-filter ref="validateCodeAuthenticationFilterFBU" position="FORM_LOGIN_FILTER" />

		<!-- 增加一个filter，不能修改默认的filter了， 这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />		
	</http>	
	<beans:bean id="validateCodeAuthenticationFilterFBU" class="com.froad.security.interceptor.MyFBUUsernamePasswordAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>
		<beans:property name="authenticationSuccessHandler"	ref="loginLogFBUAuthenticationSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler"	ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
	</beans:bean>
	<beans:bean id="loginLogFBUAuthenticationSuccessHandler"
		class="com.froad.security.support.LoginLogFBUAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/index.action"></beans:property>
	</beans:bean>
	<beans:bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/toLogin.action"></beans:property>
	</beans:bean>
	<beans:bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.AuthenticationProcessingFilterEntryPoint">
		<beans:property name="loginFormUrl" value="/toLogin.action"></beans:property>
	</beans:bean>




<!-- 


	
	
	  <beans:bean id="concurrencyFilter"
      class="org.springframework.security.web.authentication.concurrent.ConcurrentSessionFilter">
	    <beans:property name="sessionRegistry" ref="sessionRegistry" />
	    <beans:property name="expiredUrl" value="/session-expired.htm" />
 	 </beans:bean>
<beans:bean id="sessionRegistry" class="org.springframework.security.authentication.concurrent.SessionRegistryImpl" />-->

	
		<!-- 一个自定义的filter，详见具体配置 -->
	<beans:bean id="myFilter" class="com.froad.security.interceptor.MyFilterFBUSecurityInterceptor" >
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="myFBUAccessDecisionManagerBean" />
		<beans:property name="securityMetadataSource" ref="myFBUSecurityMetadataSource" />
	</beans:bean>

<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userFBUDetailsService">
			<password-encoder hash="md5" >
                 <salt-source user-property="username"/>
            </password-encoder>
		</authentication-provider>
	</authentication-manager>
	
<!--	<beans:bean id="ShaPasswordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" ></beans:bean>-->
<!--	<beans:bean id="Md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" ></beans:bean>-->

	<beans:bean id="userFBUDetailsService"
		class="com.froad.security.support.MyFBUUserDetailService" >
	</beans:bean>

	<beans:bean id="myFBUAccessDecisionManagerBean"
		class="com.froad.security.support.MyFBUAccessDecisionManager">
	</beans:bean>

	<beans:bean id="myFBUSecurityMetadataSource"
		class="com.froad.security.support.MyFBUInvocationSecurityMetadataSourceService">
	</beans:bean>

	<!-- 定义国际化 -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename"
			value="classpath:messages_zh_CN" />
	</beans:bean>
	
</beans:beans>
