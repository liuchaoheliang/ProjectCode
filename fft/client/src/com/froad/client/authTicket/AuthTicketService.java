package com.froad.client.authTicket;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2014-04-15T16:39:21.958+08:00
 * Generated source version: 2.3.3
 * 
 */
 
@WebService(targetNamespace = "http://service.CB.froad.com/", name = "AuthTicketService")
@XmlSeeAlso({ObjectFactory.class})
public interface AuthTicketService {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getAuthTicketById", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.GetAuthTicketById")
    @WebMethod
    @ResponseWrapper(localName = "getAuthTicketByIdResponse", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.GetAuthTicketByIdResponse")
    public com.froad.client.authTicket.AuthTicket getAuthTicketById(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Integer arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getAuthTickByAuthId", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.GetAuthTickByAuthId")
    @WebMethod
    @ResponseWrapper(localName = "getAuthTickByAuthIdResponse", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.GetAuthTickByAuthIdResponse")
    public com.froad.client.authTicket.Result getAuthTickByAuthId(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.Integer arg1
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getAuthTickBySelective", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.GetAuthTickBySelective")
    @WebMethod
    @ResponseWrapper(localName = "getAuthTickBySelectiveResponse", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.GetAuthTickBySelectiveResponse")
    public java.util.List<com.froad.client.authTicket.AuthTicket> getAuthTickBySelective(
        @WebParam(name = "arg0", targetNamespace = "")
        com.froad.client.authTicket.AuthTicket arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "addAuthTicket", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.AddAuthTicket")
    @WebMethod
    @ResponseWrapper(localName = "addAuthTicketResponse", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.AddAuthTicketResponse")
    public com.froad.client.authTicket.AuthTicket addAuthTicket(
        @WebParam(name = "arg0", targetNamespace = "")
        com.froad.client.authTicket.AuthTicket arg0
    ) throws AppException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "updateById", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.UpdateById")
    @WebMethod
    @ResponseWrapper(localName = "updateByIdResponse", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.UpdateByIdResponse")
    public boolean updateById(
        @WebParam(name = "arg0", targetNamespace = "")
        com.froad.client.authTicket.AuthTicket arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "updateStateById", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.UpdateStateById")
    @WebMethod
    @ResponseWrapper(localName = "updateStateByIdResponse", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.UpdateStateByIdResponse")
    public boolean updateStateById(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "isNotExist", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.IsNotExist")
    @WebMethod
    @ResponseWrapper(localName = "isNotExistResponse", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.IsNotExistResponse")
    public boolean isNotExist(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "deleteById", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.DeleteById")
    @WebMethod
    @ResponseWrapper(localName = "deleteByIdResponse", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.DeleteByIdResponse")
    public boolean deleteById(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Integer arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getAuthTickByTransId", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.GetAuthTickByTransId")
    @WebMethod
    @ResponseWrapper(localName = "getAuthTickByTransIdResponse", targetNamespace = "http://service.CB.froad.com/", className = "com.froad.client.authTicket.GetAuthTickByTransIdResponse")
    public java.util.List<com.froad.client.authTicket.AuthTicket> getAuthTickByTransId(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Integer arg0
    );
}
