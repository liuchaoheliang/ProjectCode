
package com.froad.client.userCertification;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2014-04-15T16:39:16.656+08:00
 * Generated source version: 2.3.3
 * 
 */
public final class UserCertificationService_UserCertificationServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://impl.service.CB.froad.com/", "UserCertificationServiceImplService");

    private UserCertificationService_UserCertificationServiceImplPort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = UserCertificationServiceImplService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        UserCertificationServiceImplService ss = new UserCertificationServiceImplService(wsdlURL, SERVICE_NAME);
        UserCertificationService port = ss.getUserCertificationServiceImplPort();  
        
        {
        System.out.println("Invoking addOrUpdateBindingNew...");
        com.froad.client.userCertification.UserCertification _addOrUpdateBindingNew_arg0 = null;
        try {
            java.lang.Integer _addOrUpdateBindingNew__return = port.addOrUpdateBindingNew(_addOrUpdateBindingNew_arg0);
            System.out.println("addOrUpdateBindingNew.result=" + _addOrUpdateBindingNew__return);

        } catch (AppException_Exception e) { 
            System.out.println("Expected exception: AppException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking add...");
        com.froad.client.userCertification.UserCertification _add_arg0 = null;
        try {
            java.lang.Integer _add__return = port.add(_add_arg0);
            System.out.println("add.result=" + _add__return);

        } catch (AppException_Exception e) { 
            System.out.println("Expected exception: AppException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getUserCertByUserId...");
        java.lang.String _getUserCertByUserId_arg0 = "";
        com.froad.client.userCertification.UserCertification _getUserCertByUserId__return = port.getUserCertByUserId(_getUserCertByUserId_arg0);
        System.out.println("getUserCertByUserId.result=" + _getUserCertByUserId__return);


        }
        {
        System.out.println("Invoking checkAccount...");
        com.froad.client.userCertification.UserCertification _checkAccount_arg0 = null;
        try {
            boolean _checkAccount__return = port.checkAccount(_checkAccount_arg0);
            System.out.println("checkAccount.result=" + _checkAccount__return);

        } catch (AppException_Exception e) { 
            System.out.println("Expected exception: AppException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getUserCertBySelective...");
        com.froad.client.userCertification.UserCertification _getUserCertBySelective_arg0 = null;
        java.util.List<com.froad.client.userCertification.UserCertification> _getUserCertBySelective__return = port.getUserCertBySelective(_getUserCertBySelective_arg0);
        System.out.println("getUserCertBySelective.result=" + _getUserCertBySelective__return);


        }

        System.exit(0);
    }

}
