
package com.froad.client.complaint;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2014-04-15T16:38:54.702+08:00
 * Generated source version: 2.3.3
 * 
 */
public final class ComplaintService_ComplaintServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://impl.service.CB.froad.com/", "ComplaintServiceImplService");

    private ComplaintService_ComplaintServiceImplPort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = ComplaintServiceImplService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ComplaintServiceImplService ss = new ComplaintServiceImplService(wsdlURL, SERVICE_NAME);
        ComplaintService port = ss.getComplaintServiceImplPort();  
        
        {
        System.out.println("Invoking deleteComplaintById...");
        java.lang.Integer _deleteComplaintById_arg0 = null;
        boolean _deleteComplaintById__return = port.deleteComplaintById(_deleteComplaintById_arg0);
        System.out.println("deleteComplaintById.result=" + _deleteComplaintById__return);


        }
        {
        System.out.println("Invoking addComplaint...");
        com.froad.client.complaint.Complaint _addComplaint_arg0 = null;
        java.lang.Integer _addComplaint__return = port.addComplaint(_addComplaint_arg0);
        System.out.println("addComplaint.result=" + _addComplaint__return);


        }
        {
        System.out.println("Invoking updateComplaintById...");
        com.froad.client.complaint.Complaint _updateComplaintById_arg0 = null;
        boolean _updateComplaintById__return = port.updateComplaintById(_updateComplaintById_arg0);
        System.out.println("updateComplaintById.result=" + _updateComplaintById__return);


        }
        {
        System.out.println("Invoking getComplaintByPager...");
        com.froad.client.complaint.Complaint _getComplaintByPager_arg0 = null;
        com.froad.client.complaint.Complaint _getComplaintByPager__return = port.getComplaintByPager(_getComplaintByPager_arg0);
        System.out.println("getComplaintByPager.result=" + _getComplaintByPager__return);


        }
        {
        System.out.println("Invoking updateComplaintStateById...");
        java.lang.Integer _updateComplaintStateById_arg0 = null;
        java.lang.String _updateComplaintStateById_arg1 = "";
        boolean _updateComplaintStateById__return = port.updateComplaintStateById(_updateComplaintStateById_arg0, _updateComplaintStateById_arg1);
        System.out.println("updateComplaintStateById.result=" + _updateComplaintStateById__return);


        }
        {
        System.out.println("Invoking stopComplaintById...");
        java.lang.Integer _stopComplaintById_arg0 = null;
        boolean _stopComplaintById__return = port.stopComplaintById(_stopComplaintById_arg0);
        System.out.println("stopComplaintById.result=" + _stopComplaintById__return);


        }
        {
        System.out.println("Invoking getComplaintById...");
        java.lang.Integer _getComplaintById_arg0 = null;
        com.froad.client.complaint.Complaint _getComplaintById__return = port.getComplaintById(_getComplaintById_arg0);
        System.out.println("getComplaintById.result=" + _getComplaintById__return);


        }

        System.exit(0);
    }

}
