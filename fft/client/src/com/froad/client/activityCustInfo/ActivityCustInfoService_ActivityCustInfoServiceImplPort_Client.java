
package com.froad.client.activityCustInfo;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2014-04-15T16:39:36.479+08:00
 * Generated source version: 2.3.3
 * 
 */
public final class ActivityCustInfoService_ActivityCustInfoServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://impl.activity.service.CB.froad.com/", "ActivityCustInfoServiceImplService");

    private ActivityCustInfoService_ActivityCustInfoServiceImplPort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = ActivityCustInfoServiceImplService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ActivityCustInfoServiceImplService ss = new ActivityCustInfoServiceImplService(wsdlURL, SERVICE_NAME);
        ActivityCustInfoService port = ss.getActivityCustInfoServiceImplPort();  
        
        {
        System.out.println("Invoking getActivityCustInfoBySelective...");
        com.froad.client.activityCustInfo.ActivityCustInfo _getActivityCustInfoBySelective_arg0 = null;
        java.util.List<com.froad.client.activityCustInfo.ActivityCustInfo> _getActivityCustInfoBySelective__return = port.getActivityCustInfoBySelective(_getActivityCustInfoBySelective_arg0);
        System.out.println("getActivityCustInfoBySelective.result=" + _getActivityCustInfoBySelective__return);


        }
        {
        System.out.println("Invoking updateById...");
        com.froad.client.activityCustInfo.ActivityCustInfo _updateById_arg0 = null;
        java.lang.Integer _updateById__return = port.updateById(_updateById_arg0);
        System.out.println("updateById.result=" + _updateById__return);


        }
        {
        System.out.println("Invoking add...");
        com.froad.client.activityCustInfo.ActivityCustInfo _add_arg0 = null;
        java.lang.Integer _add__return = port.add(_add_arg0);
        System.out.println("add.result=" + _add__return);


        }
        {
        System.out.println("Invoking getActivityCustInfoByPager...");
        com.froad.client.activityCustInfo.ActivityCustInfo _getActivityCustInfoByPager_arg0 = null;
        com.froad.client.activityCustInfo.ActivityCustInfo _getActivityCustInfoByPager__return = port.getActivityCustInfoByPager(_getActivityCustInfoByPager_arg0);
        System.out.println("getActivityCustInfoByPager.result=" + _getActivityCustInfoByPager__return);


        }
        {
        System.out.println("Invoking getActivityCustInfoById...");
        java.lang.Integer _getActivityCustInfoById_arg0 = null;
        com.froad.client.activityCustInfo.ActivityCustInfo _getActivityCustInfoById__return = port.getActivityCustInfoById(_getActivityCustInfoById_arg0);
        System.out.println("getActivityCustInfoById.result=" + _getActivityCustInfoById__return);


        }

        System.exit(0);
    }

}
