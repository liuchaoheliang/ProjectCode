<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration >
  
  
  <!-- 引入配置文件 -->  
  
  <!-- <properties url="file:E:\init.properties"/> -->
  <properties resource="init.properties"/>
  
  
  <!-- 设置mysql驱动路径 -->
  <classPathEntry location="${driver_path}" />
    
  <!-- 此处指定生成针对MyBatis3的DAO -->
  <context id="context1" >
   	<!-- 注释 -->
	<commentGenerator >
		<property name="suppressAllComments" value="${is_enable_comments}"/><!-- 是否取消注释 -->
		<property name="suppressDate" value="${is_enable_date}" /> <!-- 是否生成注释代时间戳-->
	</commentGenerator>
        
    <!-- jdbc连接信息 -->
    <jdbcConnection driverClass="${driver_class}" connectionURL="${jdbc_url}" userId="${user_name}" password="${password}" />
    
    
   	<!-- 类型转换 -->
	<javaTypeResolver>
		<!-- 是否使用bigDecimal， false可自动转化以下类型Long, Integer, Short, etc. -->
		<property name="forceBigDecimals" value="false"/>
	</javaTypeResolver>
	
    
    <!-- 生成po对象  -->
    <javaModelGenerator targetPackage="${java_model_target_package}" targetProject="${java_model_target_project}">
         <!-- 是否针对string类型的字段在set的时候进行trim调用 -->  
         <property name="trimStrings" value="${is_enable_trimStrings}"/>
    </javaModelGenerator>
    
    
    <!-- 生成用于查询的Example对象 -->
    <sqlMapGenerator targetPackage="${sql_mapper_target_package}" targetProject="${sql_mapper_target_project}" />
    
    <!-- 生成DAO的类文件以及配置文件   生成接口  -->
    <javaClientGenerator targetPackage="${java_client_target_package}" targetProject="${java_client_target_project}" type="XMLMAPPER" />
   
    <!-- 想要生成的数据库表,自动化工具会根据该表的结构生成相应的vo对象 -->
    <table schema="${data_base_name}" 
    	   tableName="${table_name}" 
    	   domainObjectName="${java_class_name}" 
    	   enableCountByExample="${is_enable_example}"  
           enableDeleteByExample="${is_enable_example}" 
           enableSelectByExample="${is_enable_example}"  
           enableUpdateByExample="${is_enable_example}" >
    
    		<!-- 指定列对应到bean的某个属性 -->  
     		<!-- <columnOverride column="???" property="???" /> --> 
     	    
     	    <!-- 忽略列，不生成bean 字段 -->  
            <!--  <ignoreColumn column="FRED" /> -->
              
            <!-- 指定列的java数据类型 -->  
            <!-- <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /> --> 
    </table>
  
  
  </context>
  
</generatorConfiguration>